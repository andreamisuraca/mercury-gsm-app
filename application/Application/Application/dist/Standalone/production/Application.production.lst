

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 28 15:40:33 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    34                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    37                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	text0,global,reloc=2,class=CODE,delta=1
    39                           	psect	text1,global,reloc=2,class=CODE,delta=1
    40                           	psect	text2,global,reloc=2,class=CODE,delta=1
    41                           	psect	text3,global,reloc=2,class=CODE,delta=1
    42                           	psect	text4,global,reloc=2,class=CODE,delta=1
    43                           	psect	text5,global,reloc=2,class=CODE,delta=1
    44                           	psect	text6,global,reloc=2,class=CODE,delta=1
    45                           	psect	text7,global,reloc=2,class=CODE,delta=1
    46                           	psect	text8,global,reloc=2,class=CODE,delta=1
    47                           	psect	text9,global,reloc=2,class=CODE,delta=1
    48                           	psect	text10,global,reloc=2,class=CODE,delta=1
    49                           	psect	text11,global,reloc=2,class=CODE,delta=1
    50                           	psect	text12,global,reloc=2,class=CODE,delta=1
    51                           	psect	text13,global,reloc=2,class=CODE,delta=1
    52                           	psect	text14,global,reloc=2,class=CODE,delta=1
    53                           	psect	text15,global,reloc=2,class=CODE,delta=1
    54                           	psect	text16,global,reloc=2,class=CODE,delta=1
    55                           	psect	text17,global,reloc=2,class=CODE,delta=1
    56                           	psect	text18,global,reloc=2,class=CODE,delta=1
    57                           	psect	text19,global,reloc=2,class=CODE,delta=1
    58                           	psect	text20,global,reloc=2,class=CODE,delta=1
    59                           	psect	text21,global,reloc=2,class=CODE,delta=1
    60                           	psect	text22,global,reloc=2,class=CODE,delta=1
    61                           	psect	text23,global,reloc=2,class=CODE,delta=1
    62                           	psect	text24,global,reloc=2,class=CODE,delta=1
    63                           	psect	text25,global,reloc=2,class=CODE,delta=1
    64                           	psect	text26,global,reloc=2,class=CODE,delta=1
    65                           	psect	text27,global,reloc=2,class=CODE,delta=1
    66                           	psect	text28,global,reloc=2,class=CODE,delta=1
    67                           	psect	text29,global,reloc=2,class=CODE,delta=1
    68                           	psect	text30,global,reloc=2,class=CODE,delta=1
    69                           	psect	text31,global,reloc=2,class=CODE,delta=1
    70                           	psect	text32,global,reloc=2,class=CODE,delta=1
    71                           	psect	text33,global,reloc=2,class=CODE,delta=1
    72                           	psect	text34,global,reloc=2,class=CODE,delta=1
    73                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text36,global,reloc=2,class=CODE,delta=1
    75                           	psect	text37,global,reloc=2,class=CODE,delta=1
    76                           	psect	text38,global,reloc=2,class=CODE,delta=1
    77                           	psect	text39,global,reloc=2,class=CODE,delta=1
    78                           	psect	text40,global,reloc=2,class=CODE,delta=1
    79                           	psect	text41,global,reloc=2,class=CODE,delta=1
    80                           	psect	text42,global,reloc=2,class=CODE,delta=1
    81                           	psect	text43,global,reloc=2,class=CODE,delta=1
    82                           	psect	text44,global,reloc=2,class=CODE,delta=1
    83                           	psect	text45,global,reloc=2,class=CODE,delta=1
    84                           	psect	text46,global,reloc=2,class=CODE,delta=1
    85                           	psect	text47,global,reloc=2,class=CODE,delta=1
    86                           	psect	text48,global,reloc=2,class=CODE,delta=1
    87                           	psect	text49,global,reloc=2,class=CODE,delta=1
    88                           	psect	text50,global,reloc=2,class=CODE,delta=1
    89                           	psect	text51,global,reloc=2,class=CODE,delta=1
    90                           	psect	text52,global,reloc=2,class=CODE,delta=1
    91                           	psect	text53,global,reloc=2,class=CODE,delta=1
    92                           	psect	text54,global,reloc=2,class=CODE,delta=1
    93                           	psect	text55,global,reloc=2,class=CODE,delta=1
    94                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text58,global,reloc=2,class=CODE,delta=1
    97                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text60,global,reloc=2,class=CODE,delta=1
    99                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text70,global,reloc=2,class=CODE,delta=1
   109                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text74,global,reloc=2,class=CODE,delta=1
   113                           	psect	text75,global,reloc=2,class=CODE,delta=1
   114                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text78,global,reloc=2,class=CODE,delta=1
   117                           	psect	text79,global,reloc=2,class=CODE,delta=1
   118                           	psect	text80,global,reloc=2,class=CODE,delta=1
   119                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text83,global,reloc=2,class=CODE,delta=1
   122                           	psect	text84,global,reloc=2,class=CODE,delta=1
   123                           	psect	text85,global,reloc=2,class=CODE,delta=1
   124                           	psect	text86,global,reloc=2,class=CODE,delta=1
   125                           	psect	text87,global,reloc=2,class=CODE,delta=1
   126                           	psect	text88,global,reloc=2,class=CODE,delta=1
   127                           	psect	text89,global,reloc=2,class=CODE,delta=1
   128                           	psect	text90,global,reloc=2,class=CODE,delta=1
   129                           	psect	text91,global,reloc=2,class=CODE,delta=1
   130                           	psect	text92,global,reloc=2,class=CODE,delta=1
   131                           	psect	text93,global,reloc=2,class=CODE,delta=1
   132                           	psect	text94,global,reloc=2,class=CODE,delta=1
   133                           	psect	text95,global,reloc=2,class=CODE,delta=1
   134                           	psect	text96,global,reloc=2,class=CODE,delta=1
   135                           	psect	text97,global,reloc=2,class=CODE,delta=1
   136                           	psect	text98,global,reloc=2,class=CODE,delta=1
   137                           	psect	text99,global,reloc=2,class=CODE,delta=1
   138                           	psect	text100,global,reloc=2,class=CODE,delta=1
   139                           	psect	text101,global,reloc=2,class=CODE,delta=1
   140                           	psect	text102,global,reloc=2,class=CODE,delta=1
   141                           	psect	text103,global,reloc=2,class=CODE,delta=1
   142                           	psect	text104,global,reloc=2,class=CODE,delta=1
   143                           	psect	text105,global,reloc=2,class=CODE,delta=1
   144                           	psect	text106,global,reloc=2,class=CODE,delta=1
   145                           	psect	text107,global,reloc=2,class=CODE,delta=1
   146                           	psect	text108,global,reloc=2,class=CODE,delta=1
   147                           	psect	text109,global,reloc=2,class=CODE,delta=1
   148                           	psect	text110,global,reloc=2,class=CODE,delta=1
   149                           	psect	text111,global,reloc=2,class=CODE,delta=1
   150                           	psect	text112,global,reloc=2,class=CODE,delta=1
   151                           	psect	text113,global,reloc=2,class=CODE,delta=1
   152                           	psect	text114,global,reloc=2,class=CODE,delta=1
   153                           	psect	text115,global,reloc=2,class=CODE,delta=1
   154                           	psect	text116,global,reloc=2,class=CODE,delta=1
   155                           	psect	text117,global,reloc=2,class=CODE,delta=1
   156                           	psect	text118,global,reloc=2,class=CODE,delta=1
   157                           	psect	text119,global,reloc=2,class=CODE,delta=1
   158                           	psect	text120,global,reloc=2,class=CODE,delta=1
   159                           	psect	text121,global,reloc=2,class=CODE,delta=1
   160                           	psect	text122,global,reloc=2,class=CODE,delta=1
   161                           	psect	text123,global,reloc=2,class=CODE,delta=1
   162                           	psect	text124,global,reloc=2,class=CODE,delta=1
   163                           	psect	text125,global,reloc=2,class=CODE,delta=1
   164                           	psect	text126,global,reloc=2,class=CODE,delta=1
   165                           	psect	text127,global,reloc=2,class=CODE,delta=1
   166                           	psect	text128,global,reloc=2,class=CODE,delta=1
   167                           	psect	text129,global,reloc=2,class=CODE,delta=1
   168                           	psect	text130,global,reloc=2,class=CODE,delta=1
   169                           	psect	text131,global,reloc=2,class=CODE,delta=1
   170                           	psect	text132,global,reloc=2,class=CODE,delta=1
   171                           	psect	text133,global,reloc=2,class=CODE,delta=1
   172                           	psect	text134,global,reloc=2,class=CODE,delta=1
   173                           	psect	text135,global,reloc=2,class=CODE,delta=1
   174                           	psect	text136,global,reloc=2,class=CODE,delta=1
   175                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text138,global,reloc=2,class=CODE,delta=1
   177                           	psect	text139,global,reloc=2,class=CODE,delta=1
   178                           	psect	text140,global,reloc=2,class=CODE,delta=1
   179                           	psect	text141,global,reloc=2,class=CODE,delta=1
   180                           	psect	text142,global,reloc=2,class=CODE,delta=1
   181                           	psect	text143,global,reloc=2,class=CODE,delta=1
   182                           	psect	text144,global,reloc=2,class=CODE,delta=1
   183                           	psect	text145,global,reloc=2,class=CODE,delta=1
   184                           	psect	text146,global,reloc=2,class=CODE,delta=1
   185                           	psect	text147,global,reloc=2,class=CODE,delta=1
   186                           	psect	text148,global,reloc=2,class=CODE,delta=1
   187                           	psect	text149,global,reloc=2,class=CODE,delta=1
   188                           	psect	text150,global,reloc=2,class=CODE,delta=1
   189                           	psect	text151,global,reloc=2,class=CODE,delta=1
   190                           	psect	text152,global,reloc=2,class=CODE,delta=1
   191                           	psect	text153,global,reloc=2,class=CODE,delta=1
   192                           	psect	text154,global,reloc=2,class=CODE,delta=1
   193                           	psect	text155,global,reloc=2,class=CODE,delta=1
   194                           	psect	text156,global,reloc=2,class=CODE,delta=1
   195                           	psect	text157,global,reloc=2,class=CODE,delta=1
   196                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   197                           	psect	text159,global,reloc=2,class=CODE,delta=1
   198                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   199                           	psect	text161,global,reloc=2,class=CODE,delta=1
   200                           	psect	text162,global,reloc=2,class=CODE,delta=1
   201                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text164,global,reloc=2,class=CODE,delta=1
   203                           	psect	text165,global,reloc=2,class=CODE,delta=1
   204                           	psect	text166,global,reloc=2,class=CODE,delta=1
   205                           	psect	text167,global,reloc=2,class=CODE,delta=1
   206                           	psect	text168,global,reloc=2,class=CODE,delta=1
   207                           	psect	text169,global,reloc=2,class=CODE,delta=1
   208                           	psect	text170,global,reloc=2,class=CODE,delta=1
   209                           	psect	text171,global,reloc=2,class=CODE,delta=1
   210                           	psect	text172,global,reloc=2,class=CODE,delta=1
   211                           	psect	text173,global,reloc=2,class=CODE,delta=1
   212                           	psect	text174,global,reloc=2,class=CODE,delta=1
   213                           	psect	text175,global,reloc=2,class=CODE,delta=1
   214                           	psect	text176,global,reloc=2,class=CODE,delta=1
   215                           	psect	text177,global,reloc=2,class=CODE,delta=1
   216                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   217                           	psect	text179,global,reloc=2,class=CODE,delta=1
   218                           	psect	text180,global,reloc=2,class=CODE,delta=1
   219                           	psect	text181,global,reloc=2,class=CODE,delta=1
   220                           	psect	text182,global,reloc=2,class=CODE,delta=1
   221                           	psect	text183,global,reloc=2,class=CODE,delta=1
   222                           	psect	text184,global,reloc=2,class=CODE,delta=1
   223                           	psect	text185,global,reloc=2,class=CODE,delta=1
   224                           	psect	text186,global,reloc=2,class=CODE,delta=1
   225                           	psect	text187,global,reloc=2,class=CODE,delta=1
   226                           	psect	text188,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   229                           	psect	text190,global,reloc=2,class=CODE,delta=1
   230                           	psect	text191,global,reloc=2,class=CODE,delta=1
   231                           	psect	text192,global,reloc=2,class=CODE,delta=1
   232                           	psect	text193,global,reloc=2,class=CODE,delta=1
   233                           	psect	text194,global,reloc=2,class=CODE,delta=1
   234                           	psect	text195,global,reloc=2,class=CODE,delta=1
   235                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   236                           	psect	text196,global,reloc=2,class=CODE,delta=1
   237                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   238                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   239                           	dabs	1,0x400,48,_BDT
   240                           	dabs	1,0x438,8,_CtrlTrfData
   241                           	dabs	1,0x430,8,_SetupPkt
   242  0000                     
   243                           ; Version 1.45
   244                           ; Generated 16/11/2017 GMT
   245                           ; 
   246                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   247                           ; All rights reserved.
   248                           ; 
   249                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   250                           ; 
   251                           ; Redistribution and use in source and binary forms, with or without modification, are
   252                           ; permitted provided that the following conditions are met:
   253                           ; 
   254                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   255                           ;        conditions and the following disclaimer.
   256                           ; 
   257                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   258                           ;        of conditions and the following disclaimer in the documentation and/or other
   259                           ;        materials provided with the distribution.
   260                           ; 
   261                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   262                           ;        software without specific prior written permission.
   263                           ; 
   264                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   265                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   266                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   267                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   268                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   269                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   270                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   271                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   272                           ; 
   273                           ; 
   274                           ; Code-generator required, PIC18F46J50 Definitions
   275                           ; 
   276                           ; SFR Addresses
   277  0000                     
   278                           	psect	idataCOMRAM
   279  006AB0                     __pidataCOMRAM:
   280                           	opt stack 0
   281                           
   282                           ;initializer for findEmptySpot@currentPosition
   283  006AB0  20                 	db	32
   284                           
   285                           ;initializer for isNumberInMemory@currentPosition
   286  006AB1  20                 	db	32
   287                           
   288                           	psect	idataBANK1
   289  006AB2                     __pidataBANK1:
   290                           	opt stack 0
   291                           
   292                           ;initializer for _isMemoryEmpty
   293  006AB2  01                 	db	1
   294                           
   295                           ;initializer for InitGprsNetwork@GprsInitSts
   296  006AB3  01                 	db	1
   297                           
   298                           	psect	idataBANK2
   299  006A1E                     __pidataBANK2:
   300                           	opt stack 0
   301                           
   302                           ;initializer for Terminal@EchoOption
   303  006A1E  01                 	db	1
   304                           
   305                           ;initializer for _MainSystemTimebaseFlag
   306  006A1F  01                 	db	1
   307                           
   308                           ;initializer for _ConnTimeout
   309  006A20  00                 	db	0
   310  006A21  01                 	db	1
   311  006A22  0000               	dw	0
   312  006A24  0000               	dw	0
   313  006A26  0000               	dw	0
   314  006A28  0000               	dw	0
   315  006A2A  00                 	db	0
   316                           
   317                           	psect	idataBANK3
   318  006210                     __pidataBANK3:
   319                           	opt stack 0
   320                           
   321                           ;initializer for ModemEvtParser@F9114
   322  006210  2B                 	db	43
   323  006211  43                 	db	67
   324  006212  4D                 	db	77
   325  006213  54                 	db	84
   326  006214  49                 	db	73
   327                           
   328                           ;initializer for ModemEvtParser@F9112
   329  006215  2B                 	db	43
   330  006216  43                 	db	67
   331  006217  4C                 	db	76
   332  006218  49                 	db	73
   333  006219  50                 	db	80
   334                           
   335                           ;initializer for ModemEvtParser@F9110
   336  00621A  52                 	db	82
   337  00621B  49                 	db	73
   338  00621C  4E                 	db	78
   339  00621D  47                 	db	71
   340                           
   341                           ;initializer for triggerRelay@F9003
   342  00621E  50                 	db	80
   343  00621F  00                 	db	0
   344                           
   345                           ;initializer for Term_MainSm@TermDelay
   346  006220  01                 	db	1
   347  006221  01                 	db	1
   348  006222  0000               	dw	0
   349  006224  0000               	dw	0
   350  006226  0000               	dw	0
   351  006228  0000               	dw	0
   352  00622A  00                 	db	0
   353                           
   354                           ;initializer for _ConnWait
   355  00622B  00                 	db	0
   356  00622C  01                 	db	1
   357  00622D  0000               	dw	0
   358  00622F  0000               	dw	0
   359  006231  0000               	dw	0
   360  006233  0000               	dw	0
   361  006235  00                 	db	0
   362                           
   363                           ;initializer for SendSmsSm@SwTimer
   364  006236  01                 	db	1
   365  006237  01                 	db	1
   366  006238  0000               	dw	0
   367  00623A  0000               	dw	0
   368  00623C  0000               	dw	0
   369  00623E  0000               	dw	0
   370  006240  00                 	db	0
   371                           
   372                           ;initializer for CheckModem@Timeout
   373  006241  00                 	db	0
   374  006242  01                 	db	1
   375  006243  0000               	dw	0
   376  006245  0000               	dw	0
   377  006247  0000               	dw	0
   378  006249  0000               	dw	0
   379  00624B  00                 	db	0
   380                           
   381                           	psect	idataBANK4
   382  006A44                     __pidataBANK4:
   383                           	opt stack 0
   384                           
   385                           ;initializer for ModemEvtParser@F9116
   386  006A44  43                 	db	67
   387  006A45  61                 	db	97
   388  006A46  6C                 	db	108
   389  006A47  6C                 	db	108
   390  006A48  20                 	db	32
   391  006A49  52                 	db	82
   392  006A4A  65                 	db	101
   393  006A4B  61                 	db	97
   394  006A4C  64                 	db	100
   395  006A4D  79                 	db	121
   396                           
   397                           	psect	idataBANK5
   398  005C3A                     __pidataBANK5:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _TaskTable
   402  005C3A  8E                 	db	low _Mdm_DrvMainFn
   403  005C3B  6A                 	db	high _Mdm_DrvMainFn
   404  005C3C  00                 	db	0
   405  005C3D  0000               	dw	0
   406  005C3F  000A               	dw	10
   407  005C41  00                 	db	0
   408  005C42  A0                 	db	low _I2cSlv_MainTask
   409  005C43  59                 	db	high _I2cSlv_MainTask
   410  005C44  00                 	db	0
   411  005C45  0000               	dw	0
   412  005C47  0001               	dw	1
   413  005C49  00                 	db	0
   414  005C4A  8A                 	db	low _Mdm_MainTask
   415  005C4B  5C                 	db	high _Mdm_MainTask
   416  005C4C  00                 	db	0
   417  005C4D  0000               	dw	0
   418  005C4F  0001               	dw	1
   419  005C51  00                 	db	0
   420  005C52  3C                 	db	low _MdmHttp_MainTask
   421  005C53  5F                 	db	high _MdmHttp_MainTask
   422  005C54  00                 	db	0
   423  005C55  0000               	dw	0
   424  005C57  0001               	dw	1
   425  005C59  00                 	db	0
   426  005C5A  20                 	db	low _UsbDevice_MainTask
   427  005C5B  66                 	db	high _UsbDevice_MainTask
   428  005C5C  00                 	db	0
   429  005C5D  0000               	dw	0
   430  005C5F  0001               	dw	1
   431  005C61  00                 	db	0
   432  005C62  B0                 	db	low _Wdg_MainTask
   433  005C63  66                 	db	high _Wdg_MainTask
   434  005C64  00                 	db	0
   435  005C65  0000               	dw	0
   436  005C67  0064               	dw	100
   437  005C69  00                 	db	0
   438  005C6A  E2                 	db	low _Led_MainTask
   439  005C6B  3A                 	db	high _Led_MainTask
   440  005C6C  00                 	db	0
   441  005C6D  0000               	dw	0
   442  005C6F  0032               	dw	50
   443  005C71  00                 	db	0
   444  005C72  76                 	db	low _Rtcm_MainTask
   445  005C73  4E                 	db	high _Rtcm_MainTask
   446  005C74  00                 	db	0
   447  005C75  0000               	dw	0
   448  005C77  0064               	dw	100
   449  005C79  00                 	db	0
   450  005C7A  88                 	db	low _Term_MainTask
   451  005C7B  68                 	db	high _Term_MainTask
   452  005C7C  00                 	db	0
   453  005C7D  0000               	dw	0
   454  005C7F  0001               	dw	1
   455  005C81  00                 	db	0
   456  005C82  F6                 	db	low _MyApp_Task
   457  005C83  34                 	db	high _MyApp_Task
   458  005C84  00                 	db	0
   459  005C85  0000               	dw	0
   460  005C87  0064               	dw	100
   461  005C89  00                 	db	0
   462                           
   463                           	psect	mediumconst
   464  00FC0E                     __pmediumconst:
   465                           	opt stack 0
   466  00FC0E  00                 	db	0
   467  00FC0F                     delCmdFsm@F9004:
   468                           	opt stack 0
   469  00FC0F  00                 	db	0
   470  00FC10  00                 	db	0
   471  00FC11  00                 	db	0
   472  00FC12  00                 	db	0
   473  00FC13  00                 	db	0
   474  00FC14  00                 	db	0
   475  00FC15  00                 	db	0
   476  00FC16  00                 	db	0
   477  00FC17  00                 	db	0
   478  00FC18  00                 	db	0
   479  00FC19  00                 	db	0
   480  00FC1A  00                 	db	0
   481  00FC1B  00                 	db	0
   482  00FC1C                     __end_ofdelCmdFsm@F9004:
   483                           	opt stack 0
   484  00FC1C                     _USB_SD_Ptr:
   485                           	opt stack 0
   486  00FC1C  5B                 	db	low _sd000
   487  00FC1D  FE                 	db	high _sd000
   488  00FC1E  14                 	db	low _sd001
   489  00FC1F  FE                 	db	high _sd001
   490  00FC20  EE                 	db	low _sd002
   491  00FC21  FD                 	db	high _sd002
   492  00FC22                     __end_of_USB_SD_Ptr:
   493                           	opt stack 0
   494  00FC22                     parseCommand@F9021:
   495                           	opt stack 0
   496  00FC22  52                 	db	82
   497  00FC23  45                 	db	69
   498  00FC24  53                 	db	83
   499  00FC25  3B                 	db	59
   500  00FC26                     __end_ofparseCommand@F9021:
   501                           	opt stack 0
   502  00FC26                     parseCommand@F9019:
   503                           	opt stack 0
   504  00FC26  44                 	db	68
   505  00FC27  45                 	db	69
   506  00FC28  4C                 	db	76
   507  00FC29  3B                 	db	59
   508  00FC2A                     __end_ofparseCommand@F9019:
   509                           	opt stack 0
   510  00FC2A                     parseCommand@F9017:
   511                           	opt stack 0
   512  00FC2A  41                 	db	65
   513  00FC2B  44                 	db	68
   514  00FC2C  44                 	db	68
   515  00FC2D  3B                 	db	59
   516  00FC2E                     __end_ofparseCommand@F9017:
   517                           	opt stack 0
   518  00FC2E                     _USB_CD_Ptr:
   519                           	opt stack 0
   520  00FC2E  AB                 	db	low _configDescriptor1
   521  00FC2F  FD                 	db	high _configDescriptor1
   522  00FC30                     __end_of_USB_CD_Ptr:
   523                           	opt stack 0
   524  00FC30                     _TaskNumber:
   525                           	opt stack 0
   526  00FC30  000A               	dw	10
   527  00FC32                     __end_of_TaskNumber:
   528                           	opt stack 0
   529  00FC32                     _MsgFormat:
   530                           	opt stack 0
   531  00FC32  48                 	db	72
   532  00FC33  6F                 	db	111
   533  00FC34  73                 	db	115
   534  00FC35  74                 	db	116
   535  00FC36  20                 	db	32
   536  00FC37  6D                 	db	109
   537  00FC38  65                 	db	101
   538  00FC39  73                 	db	115
   539  00FC3A  73                 	db	115
   540  00FC3B  61                 	db	97
   541  00FC3C  67                 	db	103
   542  00FC3D  65                 	db	101
   543  00FC3E  20                 	db	32
   544  00FC3F  66                 	db	102
   545  00FC40  6F                 	db	111
   546  00FC41  72                 	db	114
   547  00FC42  6D                 	db	109
   548  00FC43  61                 	db	97
   549  00FC44  74                 	db	116
   550  00FC45  3A                 	db	58
   551  00FC46  20                 	db	32
   552  00FC47  0D                 	db	13
   553  00FC48  0A                 	db	10
   554  00FC49  5B                 	db	91
   555  00FC4A  6F                 	db	111
   556  00FC4B  70                 	db	112
   557  00FC4C  5F                 	db	95
   558  00FC4D  74                 	db	116
   559  00FC4E  79                 	db	121
   560  00FC4F  70                 	db	112
   561  00FC50  65                 	db	101
   562  00FC51  5D                 	db	93
   563  00FC52  3A                 	db	58
   564  00FC53  5B                 	db	91
   565  00FC54  6F                 	db	111
   566  00FC55  70                 	db	112
   567  00FC56  5D                 	db	93
   568  00FC57  3A                 	db	58
   569  00FC58  5B                 	db	91
   570  00FC59  6C                 	db	108
   571  00FC5A  65                 	db	101
   572  00FC5B  6E                 	db	110
   573  00FC5C  5D                 	db	93
   574  00FC5D  3A                 	db	58
   575  00FC5E  5B                 	db	91
   576  00FC5F  61                 	db	97
   577  00FC60  64                 	db	100
   578  00FC61  64                 	db	100
   579  00FC62  72                 	db	114
   580  00FC63  5D                 	db	93
   581  00FC64  3A                 	db	58
   582  00FC65  5B                 	db	91
   583  00FC66  70                 	db	112
   584  00FC67  61                 	db	97
   585  00FC68  79                 	db	121
   586  00FC69  6C                 	db	108
   587  00FC6A  6F                 	db	111
   588  00FC6B  61                 	db	97
   589  00FC6C  64                 	db	100
   590  00FC6D  5D                 	db	93
   591  00FC6E  0D                 	db	13
   592  00FC6F  0A                 	db	10
   593  00FC70  0D                 	db	13
   594  00FC71  0A                 	db	10
   595  00FC72  5B                 	db	91
   596  00FC73  6F                 	db	111
   597  00FC74  70                 	db	112
   598  00FC75  5F                 	db	95
   599  00FC76  74                 	db	116
   600  00FC77  79                 	db	121
   601  00FC78  70                 	db	112
   602  00FC79  65                 	db	101
   603  00FC7A  5D                 	db	93
   604  00FC7B  20                 	db	32
   605  00FC7C  3D                 	db	61
   606  00FC7D  20                 	db	32
   607  00FC7E  53                 	db	83
   608  00FC7F  4F                 	db	79
   609  00FC80  2C                 	db	44
   610  00FC81  53                 	db	83
   611  00FC82  42                 	db	66
   612  00FC83  0D                 	db	13
   613  00FC84  0A                 	db	10
   614  00FC85  5B                 	db	91
   615  00FC86  6F                 	db	111
   616  00FC87  70                 	db	112
   617  00FC88  5D                 	db	93
   618  00FC89  20                 	db	32
   619  00FC8A  3D                 	db	61
   620  00FC8B  20                 	db	32
   621  00FC8C  52                 	db	82
   622  00FC8D  3A                 	db	58
   623  00FC8E  20                 	db	32
   624  00FC8F  72                 	db	114
   625  00FC90  65                 	db	101
   626  00FC91  61                 	db	97
   627  00FC92  64                 	db	100
   628  00FC93  2C                 	db	44
   629  00FC94  57                 	db	87
   630  00FC95  3A                 	db	58
   631  00FC96  20                 	db	32
   632  00FC97  77                 	db	119
   633  00FC98  72                 	db	114
   634  00FC99  69                 	db	105
   635  00FC9A  74                 	db	116
   636  00FC9B  65                 	db	101
   637  00FC9C  0D                 	db	13
   638  00FC9D  0A                 	db	10
   639  00FC9E  5B                 	db	91
   640  00FC9F  6C                 	db	108
   641  00FCA0  65                 	db	101
   642  00FCA1  6E                 	db	110
   643  00FCA2  5D                 	db	93
   644  00FCA3  20                 	db	32
   645  00FCA4  3D                 	db	61
   646  00FCA5  20                 	db	32
   647  00FCA6  32                 	db	50
   648  00FCA7  20                 	db	32
   649  00FCA8  62                 	db	98
   650  00FCA9  79                 	db	121
   651  00FCAA  74                 	db	116
   652  00FCAB  65                 	db	101
   653  00FCAC  20                 	db	32
   654  00FCAD  41                 	db	65
   655  00FCAE  53                 	db	83
   656  00FCAF  43                 	db	67
   657  00FCB0  49                 	db	73
   658  00FCB1  49                 	db	73
   659  00FCB2  0D                 	db	13
   660  00FCB3  0A                 	db	10
   661  00FCB4  5B                 	db	91
   662  00FCB5  61                 	db	97
   663  00FCB6  64                 	db	100
   664  00FCB7  64                 	db	100
   665  00FCB8  72                 	db	114
   666  00FCB9  5D                 	db	93
   667  00FCBA  20                 	db	32
   668  00FCBB  3D                 	db	61
   669  00FCBC  20                 	db	32
   670  00FCBD  32                 	db	50
   671  00FCBE  20                 	db	32
   672  00FCBF  62                 	db	98
   673  00FCC0  79                 	db	121
   674  00FCC1  74                 	db	116
   675  00FCC2  65                 	db	101
   676  00FCC3  20                 	db	32
   677  00FCC4  41                 	db	65
   678  00FCC5  53                 	db	83
   679  00FCC6  43                 	db	67
   680  00FCC7  49                 	db	73
   681  00FCC8  49                 	db	73
   682  00FCC9  0D                 	db	13
   683  00FCCA  0A                 	db	10
   684  00FCCB  5B                 	db	91
   685  00FCCC  70                 	db	112
   686  00FCCD  61                 	db	97
   687  00FCCE  79                 	db	121
   688  00FCCF  6C                 	db	108
   689  00FCD0  6F                 	db	111
   690  00FCD1  61                 	db	97
   691  00FCD2  64                 	db	100
   692  00FCD3  5D                 	db	93
   693  00FCD4  20                 	db	32
   694  00FCD5  3D                 	db	61
   695  00FCD6  20                 	db	32
   696  00FCD7  6D                 	db	109
   697  00FCD8  61                 	db	97
   698  00FCD9  78                 	db	120
   699  00FCDA  20                 	db	32
   700  00FCDB  32                 	db	50
   701  00FCDC  30                 	db	48
   702  00FCDD  20                 	db	32
   703  00FCDE  62                 	db	98
   704  00FCDF  79                 	db	121
   705  00FCE0  74                 	db	116
   706  00FCE1  65                 	db	101
   707  00FCE2  20                 	db	32
   708  00FCE3  41                 	db	65
   709  00FCE4  53                 	db	83
   710  00FCE5  43                 	db	67
   711  00FCE6  49                 	db	73
   712  00FCE7  49                 	db	73
   713  00FCE8  0D                 	db	13
   714  00FCE9  0A                 	db	10
   715  00FCEA  0D                 	db	13
   716  00FCEB  0A                 	db	10
   717  00FCEC  54                 	db	84
   718  00FCED  65                 	db	101
   719  00FCEE  72                 	db	114
   720  00FCEF  6D                 	db	109
   721  00FCF0  69                 	db	105
   722  00FCF1  6E                 	db	110
   723  00FCF2  61                 	db	97
   724  00FCF3  6C                 	db	108
   725  00FCF4  20                 	db	32
   726  00FCF5  4D                 	db	77
   727  00FCF6  6F                 	db	111
   728  00FCF7  64                 	db	100
   729  00FCF8  65                 	db	101
   730  00FCF9  3A                 	db	58
   731  00FCFA  20                 	db	32
   732  00FCFB  43                 	db	67
   733  00FCFC  4F                 	db	79
   734  00FCFD  4D                 	db	77
   735  00FCFE  4D                 	db	77
   736  00FCFF  41                 	db	65
   737  00FD00  4E                 	db	78
   738  00FD01  44                 	db	68
   739  00FD02  20                 	db	32
   740  00FD03  4D                 	db	77
   741  00FD04  4F                 	db	79
   742  00FD05  44                 	db	68
   743  00FD06  45                 	db	69
   744  00FD07  0D                 	db	13
   745  00FD08  0A                 	db	10
   746  00FD09  4D                 	db	77
   747  00FD0A  6F                 	db	111
   748  00FD0B  64                 	db	100
   749  00FD0C  65                 	db	101
   750  00FD0D  6D                 	db	109
   751  00FD0E  20                 	db	32
   752  00FD0F  54                 	db	84
   753  00FD10  79                 	db	121
   754  00FD11  70                 	db	112
   755  00FD12  65                 	db	101
   756  00FD13  3A                 	db	58
   757  00FD14  20                 	db	32
   758  00FD15  47                 	db	71
   759  00FD16  53                 	db	83
   760  00FD17  4D                 	db	77
   761  00FD18  2F                 	db	47
   762  00FD19  47                 	db	71
   763  00FD1A  50                 	db	80
   764  00FD1B  52                 	db	82
   765  00FD1C  53                 	db	83
   766  00FD1D  0D                 	db	13
   767  00FD1E  0A                 	db	10
   768  00FD1F  0D                 	db	13
   769  00FD20  0A                 	db	10
   770  00FD21  00                 	db	0
   771  00FD22                     __end_of_MsgFormat:
   772                           	opt stack 0
   773  00FD22                     _Welcome:
   774                           	opt stack 0
   775  00FD22  2A                 	db	42
   776  00FD23  2A                 	db	42
   777  00FD24  2A                 	db	42
   778  00FD25  2A                 	db	42
   779  00FD26  2A                 	db	42
   780  00FD27  2A                 	db	42
   781  00FD28  2A                 	db	42
   782  00FD29  2A                 	db	42
   783  00FD2A  2A                 	db	42
   784  00FD2B  2A                 	db	42
   785  00FD2C  2A                 	db	42
   786  00FD2D  2A                 	db	42
   787  00FD2E  2A                 	db	42
   788  00FD2F  2A                 	db	42
   789  00FD30  2A                 	db	42
   790  00FD31  2A                 	db	42
   791  00FD32  2A                 	db	42
   792  00FD33  2A                 	db	42
   793  00FD34  2A                 	db	42
   794  00FD35  2A                 	db	42
   795  00FD36  2A                 	db	42
   796  00FD37  2A                 	db	42
   797  00FD38  2A                 	db	42
   798  00FD39  2A                 	db	42
   799  00FD3A  2A                 	db	42
   800  00FD3B  2A                 	db	42
   801  00FD3C  2A                 	db	42
   802  00FD3D  2A                 	db	42
   803  00FD3E  2A                 	db	42
   804  00FD3F  2A                 	db	42
   805  00FD40  2A                 	db	42
   806  00FD41  2A                 	db	42
   807  00FD42  2A                 	db	42
   808  00FD43  2A                 	db	42
   809  00FD44  2A                 	db	42
   810  00FD45  2A                 	db	42
   811  00FD46  2A                 	db	42
   812  00FD47  2A                 	db	42
   813  00FD48  2A                 	db	42
   814  00FD49  2A                 	db	42
   815  00FD4A  2A                 	db	42
   816  00FD4B  2A                 	db	42
   817  00FD4C  2A                 	db	42
   818  00FD4D  2A                 	db	42
   819  00FD4E  2A                 	db	42
   820  00FD4F  2A                 	db	42
   821  00FD50  2A                 	db	42
   822  00FD51  2A                 	db	42
   823  00FD52  2A                 	db	42
   824  00FD53  0D                 	db	13
   825  00FD54  0A                 	db	10
   826  00FD55  20                 	db	32
   827  00FD56  20                 	db	32
   828  00FD57  20                 	db	32
   829  00FD58  20                 	db	32
   830  00FD59  20                 	db	32
   831  00FD5A  20                 	db	32
   832  00FD5B  20                 	db	32
   833  00FD5C  20                 	db	32
   834  00FD5D  20                 	db	32
   835  00FD5E  20                 	db	32
   836  00FD5F  20                 	db	32
   837  00FD60  20                 	db	32
   838  00FD61  20                 	db	32
   839  00FD62  20                 	db	32
   840  00FD63  20                 	db	32
   841  00FD64  20                 	db	32
   842  00FD65  20                 	db	32
   843  00FD66  20                 	db	32
   844  00FD67  4D                 	db	77
   845  00FD68  45                 	db	69
   846  00FD69  52                 	db	82
   847  00FD6A  43                 	db	67
   848  00FD6B  55                 	db	85
   849  00FD6C  52                 	db	82
   850  00FD6D  59                 	db	89
   851  00FD6E  20                 	db	32
   852  00FD6F  53                 	db	83
   853  00FD70  59                 	db	89
   854  00FD71  53                 	db	83
   855  00FD72  54                 	db	84
   856  00FD73  45                 	db	69
   857  00FD74  4D                 	db	77
   858  00FD75  0D                 	db	13
   859  00FD76  0A                 	db	10
   860  00FD77  2A                 	db	42
   861  00FD78  2A                 	db	42
   862  00FD79  2A                 	db	42
   863  00FD7A  2A                 	db	42
   864  00FD7B  2A                 	db	42
   865  00FD7C  2A                 	db	42
   866  00FD7D  2A                 	db	42
   867  00FD7E  2A                 	db	42
   868  00FD7F  2A                 	db	42
   869  00FD80  2A                 	db	42
   870  00FD81  2A                 	db	42
   871  00FD82  2A                 	db	42
   872  00FD83  2A                 	db	42
   873  00FD84  2A                 	db	42
   874  00FD85  2A                 	db	42
   875  00FD86  2A                 	db	42
   876  00FD87  2A                 	db	42
   877  00FD88  2A                 	db	42
   878  00FD89  2A                 	db	42
   879  00FD8A  2A                 	db	42
   880  00FD8B  2A                 	db	42
   881  00FD8C  2A                 	db	42
   882  00FD8D  2A                 	db	42
   883  00FD8E  2A                 	db	42
   884  00FD8F  2A                 	db	42
   885  00FD90  2A                 	db	42
   886  00FD91  2A                 	db	42
   887  00FD92  2A                 	db	42
   888  00FD93  2A                 	db	42
   889  00FD94  2A                 	db	42
   890  00FD95  2A                 	db	42
   891  00FD96  2A                 	db	42
   892  00FD97  2A                 	db	42
   893  00FD98  2A                 	db	42
   894  00FD99  2A                 	db	42
   895  00FD9A  2A                 	db	42
   896  00FD9B  2A                 	db	42
   897  00FD9C  2A                 	db	42
   898  00FD9D  2A                 	db	42
   899  00FD9E  2A                 	db	42
   900  00FD9F  2A                 	db	42
   901  00FDA0  2A                 	db	42
   902  00FDA1  2A                 	db	42
   903  00FDA2  2A                 	db	42
   904  00FDA3  2A                 	db	42
   905  00FDA4  2A                 	db	42
   906  00FDA5  2A                 	db	42
   907  00FDA6  2A                 	db	42
   908  00FDA7  2A                 	db	42
   909  00FDA8  0D                 	db	13
   910  00FDA9  0A                 	db	10
   911  00FDAA  00                 	db	0
   912  00FDAB                     __end_of_Welcome:
   913                           	opt stack 0
   914  00FDAB                     _configDescriptor1:
   915                           	opt stack 0
   916  00FDAB  09                 	db	9
   917  00FDAC  02                 	db	2
   918  00FDAD  43                 	db	67
   919  00FDAE  00                 	db	0
   920  00FDAF  02                 	db	2
   921  00FDB0  01                 	db	1
   922  00FDB1  00                 	db	0
   923  00FDB2  C0                 	db	192
   924  00FDB3  32                 	db	50
   925  00FDB4  09                 	db	9
   926  00FDB5  04                 	db	4
   927  00FDB6  00                 	db	0
   928  00FDB7  00                 	db	0
   929  00FDB8  01                 	db	1
   930  00FDB9  02                 	db	2
   931  00FDBA  02                 	db	2
   932  00FDBB  01                 	db	1
   933  00FDBC  00                 	db	0
   934  00FDBD  05                 	db	5
   935  00FDBE  24                 	db	36
   936  00FDBF  00                 	db	0
   937  00FDC0  10                 	db	16
   938  00FDC1  01                 	db	1
   939  00FDC2  04                 	db	4
   940  00FDC3  24                 	db	36
   941  00FDC4  02                 	db	2
   942  00FDC5  02                 	db	2
   943  00FDC6  05                 	db	5
   944  00FDC7  24                 	db	36
   945  00FDC8  06                 	db	6
   946  00FDC9  00                 	db	0
   947  00FDCA  01                 	db	1
   948  00FDCB  05                 	db	5
   949  00FDCC  24                 	db	36
   950  00FDCD  01                 	db	1
   951  00FDCE  00                 	db	0
   952  00FDCF  01                 	db	1
   953  00FDD0  07                 	db	7
   954  00FDD1  05                 	db	5
   955  00FDD2  81                 	db	129
   956  00FDD3  03                 	db	3
   957  00FDD4  08                 	db	8
   958  00FDD5  00                 	db	0
   959  00FDD6  02                 	db	2
   960  00FDD7  09                 	db	9
   961  00FDD8  04                 	db	4
   962  00FDD9  01                 	db	1
   963  00FDDA  00                 	db	0
   964  00FDDB  02                 	db	2
   965  00FDDC  0A                 	db	10
   966  00FDDD  00                 	db	0
   967  00FDDE  00                 	db	0
   968  00FDDF  00                 	db	0
   969  00FDE0  07                 	db	7
   970  00FDE1  05                 	db	5
   971  00FDE2  02                 	db	2
   972  00FDE3  02                 	db	2
   973  00FDE4  40                 	db	64
   974  00FDE5  00                 	db	0
   975  00FDE6  00                 	db	0
   976  00FDE7  07                 	db	7
   977  00FDE8  05                 	db	5
   978  00FDE9  82                 	db	130
   979  00FDEA  02                 	db	2
   980  00FDEB  40                 	db	64
   981  00FDEC  00                 	db	0
   982  00FDED  00                 	db	0
   983  00FDEE                     __end_of_configDescriptor1:
   984                           	opt stack 0
   985  00FDEE                     _sd002:
   986                           	opt stack 0
   987  00FDEE  26                 	db	38
   988  00FDEF  03                 	db	3
   989  00FDF0  0054               	dw	84
   990  00FDF2  0065               	dw	101
   991  00FDF4  0072               	dw	114
   992  00FDF6  006D               	dw	109
   993  00FDF8  0069               	dw	105
   994  00FDFA  006E               	dw	110
   995  00FDFC  0061               	dw	97
   996  00FDFE  006C               	dw	108
   997  00FE00  0020               	dw	32
   998  00FE02  0049               	dw	73
   999  00FE04  006E               	dw	110
  1000  00FE06  0074               	dw	116
  1001  00FE08  0065               	dw	101
  1002  00FE0A  0072               	dw	114
  1003  00FE0C  0066               	dw	102
  1004  00FE0E  0061               	dw	97
  1005  00FE10  0063               	dw	99
  1006  00FE12  0065               	dw	101
  1007  00FE14                     __end_of_sd002:
  1008                           	opt stack 0
  1009  00FE14                     _sd001:
  1010                           	opt stack 0
  1011  00FE14  1E                 	db	30
  1012  00FE15  03                 	db	3
  1013  00FE16  004D               	dw	77
  1014  00FE18  0065               	dw	101
  1015  00FE1A  0072               	dw	114
  1016  00FE1C  0063               	dw	99
  1017  00FE1E  0075               	dw	117
  1018  00FE20  0072               	dw	114
  1019  00FE22  0079               	dw	121
  1020  00FE24  0020               	dw	32
  1021  00FE26  0053               	dw	83
  1022  00FE28  0079               	dw	121
  1023  00FE2A  0073               	dw	115
  1024  00FE2C  0074               	dw	116
  1025  00FE2E  0065               	dw	101
  1026  00FE30  006D               	dw	109
  1027  00FE32                     __end_of_sd001:
  1028                           	opt stack 0
  1029  00FE32                     _MsgReady:
  1030                           	opt stack 0
  1031  00FE32  0D                 	db	13
  1032  00FE33  0A                 	db	10
  1033  00FE34  53                 	db	83
  1034  00FE35  79                 	db	121
  1035  00FE36  73                 	db	115
  1036  00FE37  74                 	db	116
  1037  00FE38  65                 	db	101
  1038  00FE39  6D                 	db	109
  1039  00FE3A  20                 	db	32
  1040  00FE3B  52                 	db	82
  1041  00FE3C  65                 	db	101
  1042  00FE3D  61                 	db	97
  1043  00FE3E  64                 	db	100
  1044  00FE3F  79                 	db	121
  1045  00FE40  2E                 	db	46
  1046  00FE41  2E                 	db	46
  1047  00FE42  2E                 	db	46
  1048  00FE43  20                 	db	32
  1049  00FE44  0D                 	db	13
  1050  00FE45  0A                 	db	10
  1051  00FE46  0D                 	db	13
  1052  00FE47  0A                 	db	10
  1053  00FE48  00                 	db	0
  1054  00FE49                     __end_of_MsgReady:
  1055                           	opt stack 0
  1056  00FE49                     _device_dsc:
  1057                           	opt stack 0
  1058  00FE49  12                 	db	18
  1059  00FE4A  01                 	db	1
  1060  00FE4B  0200               	dw	512
  1061  00FE4D  02                 	db	2
  1062  00FE4E  00                 	db	0
  1063  00FE4F  00                 	db	0
  1064  00FE50  08                 	db	8
  1065  00FE51  04D8               	dw	1240
  1066  00FE53  000A               	dw	10
  1067  00FE55  0100               	dw	256
  1068  00FE57  01                 	db	1
  1069  00FE58  02                 	db	2
  1070  00FE59  00                 	db	0
  1071  00FE5A  01                 	db	1
  1072  00FE5B                     __end_of_device_dsc:
  1073                           	opt stack 0
  1074  00FE5B                     _sd000:
  1075                           	opt stack 0
  1076  00FE5B  04                 	db	4
  1077  00FE5C  03                 	db	3
  1078  00FE5D  0409               	dw	1033
  1079  00FE5F                     __end_of_sd000:
  1080                           	opt stack 0
  1081  0000                     _RPINR1	set	3815
  1082  0000                     _UEP0bits	set	3878
  1083  0000                     _UIEbits	set	3894
  1084  0000                     _UADDR	set	3896
  1085  0000                     _UIE	set	3894
  1086  0000                     _UEIE	set	3895
  1087  0000                     _UCFG	set	3897
  1088  0000                     _RTCCAL	set	3902
  1089  0000                     _PADCFG1bits	set	3900
  1090  0000                     _RTCCFGbits	set	3903
  1091  0000                     _DSCONLbits	set	3916
  1092  0000                     _DSGPR1	set	3919
  1093  0000                     _DSGPR0	set	3918
  1094  0000                     _DSCONHbits	set	3917
  1095  0000                     _ANCON1bits	set	3913
  1096  0000                     _UEP1	set	3879
  1097  0000                     _UEP0	set	3878
  1098  0000                     _T1CONbits	set	4045
  1099  0000                     _PORTDbits	set	3971
  1100  0000                     _USTAT	set	3940
  1101  0000                     _PIR2bits	set	4001
  1102  0000                     _UCON	set	3941
  1103  0000                     _UIRbits	set	3938
  1104  0000                     _UCONbits	set	3941
  1105  0000                     _UIR	set	3938
  1106  0000                     _UEIR	set	3939
  1107  0000                     _PIE2bits	set	4000
  1108  0000                     _BAUDCON2	set	3964
  1109  0000                     _RCSTA2	set	3996
  1110  0000                     _BAUDCON1	set	3966
  1111  0000                     _RCSTA1	set	4012
  1112  0000                     _TRISCbits	set	3988
  1113  0000                     _TXSTA2	set	4008
  1114  0000                     _TXSTA1	set	4013
  1115  0000                     _RCREG2	set	4010
  1116  0000                     _RCREG1	set	4015
  1117  0000                     _TXREG2	set	4009
  1118  0000                     _TXREG1	set	4014
  1119  0000                     _SPBRG2	set	4011
  1120  0000                     _SPBRGH2	set	3965
  1121  0000                     _SPBRG1	set	4016
  1122  0000                     _SPBRGH1	set	3967
  1123  0000                     _PR4	set	3959
  1124  0000                     _PR2	set	4043
  1125  0000                     _PIE1bits	set	3997
  1126  0000                     _IPR1bits	set	3999
  1127  0000                     _T4CONbits	set	3958
  1128  0000                     _T2CONbits	set	4042
  1129  0000                     _ALRMVALL	set	3982
  1130  0000                     _ALRMVALH	set	3983
  1131  0000                     _RTCVALH	set	3993
  1132  0000                     _RTCVALL	set	3992
  1133  0000                     _ALRMRPTbits	set	3984
  1134  0000                     _ALRMCFGbits	set	3985
  1135  0000                     _PIE3bits	set	4003
  1136  0000                     _IPR3bits	set	4005
  1137  0000                     _OSCCONbits	set	4051
  1138  0000                     _PORTEbits	set	3972
  1139  0000                     _TRISEbits	set	3990
  1140  0000                     _WDTCONbits	set	4032
  1141  0000                     _INTCON2bits	set	4081
  1142  0000                     _TRISBbits	set	3987
  1143  0000                     _OSCTUNEbits	set	3995
  1144  0000                     _SSP2CON1	set	3954
  1145  0000                     _TRISDbits	set	3989
  1146  0000                     _SSP2BUF	set	3957
  1147  0000                     _SSP2CON2bits	set	3953
  1148  0000                     _SSP2STAT	set	3955
  1149  0000                     _SSP2CON2	set	3953
  1150  0000                     _SSP2ADD	set	3956
  1151  0000                     _PIR1bits	set	3998
  1152  0000                     _PIR3bits	set	4004
  1153  0000                     _INTCON3bits	set	4080
  1154  0000                     _INTCONbits	set	4082
  1155  0000                     _RCONbits	set	4048
  1156  00FE5F                     STR_21:
  1157  00FE5F  20                 	db	32
  1158  00FE60  4C                 	db	76	;'L'
  1159  00FE61  61                 	db	97	;'a'
  1160  00FE62  7A                 	db	122	;'z'
  1161  00FE63  79                 	db	121	;'y'
  1162  00FE64  20                 	db	32
  1163  00FE65  64                 	db	100	;'d'
  1164  00FE66  65                 	db	101	;'e'
  1165  00FE67  76                 	db	118	;'v'
  1166  00FE68  69                 	db	105	;'i'
  1167  00FE69  63                 	db	99	;'c'
  1168  00FE6A  65                 	db	101	;'e'
  1169  00FE6B  2E                 	db	46
  1170  00FE6C  2E                 	db	46
  1171  00FE6D  2E                 	db	46
  1172  00FE6E  79                 	db	121	;'y'
  1173  00FE6F  6F                 	db	111	;'o'
  1174  00FE70  75                 	db	117	;'u'
  1175  00FE71  27                 	db	39
  1176  00FE72  76                 	db	118	;'v'
  1177  00FE73  65                 	db	101	;'e'
  1178  00FE74  20                 	db	32
  1179  00FE75  62                 	db	98	;'b'
  1180  00FE76  65                 	db	101	;'e'
  1181  00FE77  65                 	db	101	;'e'
  1182  00FE78  6E                 	db	110	;'n'
  1183  00FE79  20                 	db	32
  1184  00FE7A  74                 	db	116	;'t'
  1185  00FE7B  69                 	db	105	;'i'
  1186  00FE7C  6D                 	db	109	;'m'
  1187  00FE7D  65                 	db	101	;'e'
  1188  00FE7E  64                 	db	100	;'d'
  1189  00FE7F  2D                 	db	45
  1190  00FE80  6F                 	db	111	;'o'
  1191  00FE81  75                 	db	117	;'u'
  1192  00FE82  74                 	db	116	;'t'
  1193  00FE83  21                 	db	33
  1194  00FE84  21                 	db	33
  1195  00FE85  21                 	db	33
  1196  00FE86  0D                 	db	13
  1197  00FE87  0A                 	db	10
  1198  00FE88  00                 	db	0
  1199  00FE89                     STR_8:
  1200  00FE89  41                 	db	65	;'A'
  1201  00FE8A  54                 	db	84	;'T'
  1202  00FE8B  2B                 	db	43
  1203  00FE8C  53                 	db	83	;'S'
  1204  00FE8D  41                 	db	65	;'A'
  1205  00FE8E  50                 	db	80	;'P'
  1206  00FE8F  42                 	db	66	;'B'
  1207  00FE90  52                 	db	82	;'R'
  1208  00FE91  3D                 	db	61	;'='
  1209  00FE92  33                 	db	51	;'3'
  1210  00FE93  2C                 	db	44
  1211  00FE94  31                 	db	49	;'1'
  1212  00FE95  2C                 	db	44
  1213  00FE96  22                 	db	34
  1214  00FE97  43                 	db	67	;'C'
  1215  00FE98  6F                 	db	111	;'o'
  1216  00FE99  6E                 	db	110	;'n'
  1217  00FE9A  74                 	db	116	;'t'
  1218  00FE9B  79                 	db	121	;'y'
  1219  00FE9C  70                 	db	112	;'p'
  1220  00FE9D  65                 	db	101	;'e'
  1221  00FE9E  22                 	db	34
  1222  00FE9F  2C                 	db	44
  1223  00FEA0  22                 	db	34
  1224  00FEA1  47                 	db	71	;'G'
  1225  00FEA2  50                 	db	80	;'P'
  1226  00FEA3  52                 	db	82	;'R'
  1227  00FEA4  53                 	db	83	;'S'
  1228  00FEA5  22                 	db	34
  1229  00FEA6  0D                 	db	13
  1230  00FEA7  00                 	db	0
  1231  00FEA8                     STR_14:
  1232  00FEA8  41                 	db	65	;'A'
  1233  00FEA9  54                 	db	84	;'T'
  1234  00FEAA  2B                 	db	43
  1235  00FEAB  48                 	db	72	;'H'
  1236  00FEAC  54                 	db	84	;'T'
  1237  00FEAD  54                 	db	84	;'T'
  1238  00FEAE  50                 	db	80	;'P'
  1239  00FEAF  50                 	db	80	;'P'
  1240  00FEB0  41                 	db	65	;'A'
  1241  00FEB1  52                 	db	82	;'R'
  1242  00FEB2  41                 	db	65	;'A'
  1243  00FEB3  3D                 	db	61	;'='
  1244  00FEB4  22                 	db	34
  1245  00FEB5  43                 	db	67	;'C'
  1246  00FEB6  49                 	db	73	;'I'
  1247  00FEB7  44                 	db	68	;'D'
  1248  00FEB8  22                 	db	34
  1249  00FEB9  2C                 	db	44
  1250  00FEBA  31                 	db	49	;'1'
  1251  00FEBB  0D                 	db	13
  1252  00FEBC  00                 	db	0
  1253  00FEBD                     STR_9:
  1254  00FEBD  41                 	db	65	;'A'
  1255  00FEBE  54                 	db	84	;'T'
  1256  00FEBF  2B                 	db	43
  1257  00FEC0  53                 	db	83	;'S'
  1258  00FEC1  41                 	db	65	;'A'
  1259  00FEC2  50                 	db	80	;'P'
  1260  00FEC3  42                 	db	66	;'B'
  1261  00FEC4  52                 	db	82	;'R'
  1262  00FEC5  3D                 	db	61	;'='
  1263  00FEC6  33                 	db	51	;'3'
  1264  00FEC7  2C                 	db	44
  1265  00FEC8  31                 	db	49	;'1'
  1266  00FEC9  2C                 	db	44
  1267  00FECA  22                 	db	34
  1268  00FECB  41                 	db	65	;'A'
  1269  00FECC  50                 	db	80	;'P'
  1270  00FECD  4E                 	db	78	;'N'
  1271  00FECE  22                 	db	34
  1272  00FECF  2C                 	db	44
  1273  00FED0  22                 	db	34
  1274  00FED1  00                 	db	0
  1275  00FED2                     STR_23:
  1276  00FED2  46                 	db	70	;'F'
  1277  00FED3  72                 	db	114	;'r'
  1278  00FED4  61                 	db	97	;'a'
  1279  00FED5  6D                 	db	109	;'m'
  1280  00FED6  65                 	db	101	;'e'
  1281  00FED7  77                 	db	119	;'w'
  1282  00FED8  6F                 	db	111	;'o'
  1283  00FED9  72                 	db	114	;'r'
  1284  00FEDA  6B                 	db	107	;'k'
  1285  00FEDB  20                 	db	32
  1286  00FEDC  56                 	db	86	;'V'
  1287  00FEDD  65                 	db	101	;'e'
  1288  00FEDE  72                 	db	114	;'r'
  1289  00FEDF  73                 	db	115	;'s'
  1290  00FEE0  69                 	db	105	;'i'
  1291  00FEE1  6F                 	db	111	;'o'
  1292  00FEE2  6E                 	db	110	;'n'
  1293  00FEE3  3A                 	db	58	;':'
  1294  00FEE4  20                 	db	32
  1295  00FEE5  00                 	db	0
  1296  00FEE6                     STR_15:
  1297  00FEE6  41                 	db	65	;'A'
  1298  00FEE7  54                 	db	84	;'T'
  1299  00FEE8  2B                 	db	43
  1300  00FEE9  48                 	db	72	;'H'
  1301  00FEEA  54                 	db	84	;'T'
  1302  00FEEB  54                 	db	84	;'T'
  1303  00FEEC  50                 	db	80	;'P'
  1304  00FEED  50                 	db	80	;'P'
  1305  00FEEE  41                 	db	65	;'A'
  1306  00FEEF  52                 	db	82	;'R'
  1307  00FEF0  41                 	db	65	;'A'
  1308  00FEF1  3D                 	db	61	;'='
  1309  00FEF2  22                 	db	34
  1310  00FEF3  55                 	db	85	;'U'
  1311  00FEF4  52                 	db	82	;'R'
  1312  00FEF5  4C                 	db	76	;'L'
  1313  00FEF6  22                 	db	34
  1314  00FEF7  2C                 	db	44
  1315  00FEF8  22                 	db	34
  1316  00FEF9  00                 	db	0
  1317  00FEFA                     STR_30:
  1318  00FEFA  41                 	db	65	;'A'
  1319  00FEFB  54                 	db	84	;'T'
  1320  00FEFC  2B                 	db	43
  1321  00FEFD  43                 	db	67	;'C'
  1322  00FEFE  4D                 	db	77	;'M'
  1323  00FEFF  47                 	db	71	;'G'
  1324  00FF00  44                 	db	68	;'D'
  1325  00FF01  41                 	db	65	;'A'
  1326  00FF02  3D                 	db	61	;'='
  1327  00FF03  44                 	db	68	;'D'
  1328  00FF04  45                 	db	69	;'E'
  1329  00FF05  4C                 	db	76	;'L'
  1330  00FF06  20                 	db	32
  1331  00FF07  41                 	db	65	;'A'
  1332  00FF08  4C                 	db	76	;'L'
  1333  00FF09  4C                 	db	76	;'L'
  1334  00FF0A  0D                 	db	13
  1335  00FF0B  0A                 	db	10
  1336  00FF0C  00                 	db	0
  1337  00FF0D                     STR_27:
  1338  00FF0D  42                 	db	66	;'B'
  1339  00FF0E  75                 	db	117	;'u'
  1340  00FF0F  69                 	db	105	;'i'
  1341  00FF10  6C                 	db	108	;'l'
  1342  00FF11  64                 	db	100	;'d'
  1343  00FF12  20                 	db	32
  1344  00FF13  44                 	db	68	;'D'
  1345  00FF14  61                 	db	97	;'a'
  1346  00FF15  74                 	db	116	;'t'
  1347  00FF16  65                 	db	101	;'e'
  1348  00FF17  3A                 	db	58	;':'
  1349  00FF18  20                 	db	32
  1350  00FF19  25                 	db	37
  1351  00FF1A  73                 	db	115	;'s'
  1352  00FF1B  0D                 	db	13
  1353  00FF1C  0A                 	db	10
  1354  00FF1D  00                 	db	0
  1355  00FF1E                     STR_16:
  1356  00FF1E  41                 	db	65	;'A'
  1357  00FF1F  54                 	db	84	;'T'
  1358  00FF20  2B                 	db	43
  1359  00FF21  48                 	db	72	;'H'
  1360  00FF22  54                 	db	84	;'T'
  1361  00FF23  54                 	db	84	;'T'
  1362  00FF24  50                 	db	80	;'P'
  1363  00FF25  41                 	db	65	;'A'
  1364  00FF26  43                 	db	67	;'C'
  1365  00FF27  54                 	db	84	;'T'
  1366  00FF28  49                 	db	73	;'I'
  1367  00FF29  4F                 	db	79	;'O'
  1368  00FF2A  4E                 	db	78	;'N'
  1369  00FF2B  3D                 	db	61	;'='
  1370  00FF2C  30                 	db	48	;'0'
  1371  00FF2D  0D                 	db	13
  1372  00FF2E  00                 	db	0
  1373  00FF2F                     STR_29:
  1374  00FF2F  41                 	db	65	;'A'
  1375  00FF30  54                 	db	84	;'T'
  1376  00FF31  2B                 	db	43
  1377  00FF32  43                 	db	67	;'C'
  1378  00FF33  4D                 	db	77	;'M'
  1379  00FF34  47                 	db	71	;'G'
  1380  00FF35  44                 	db	68	;'D'
  1381  00FF36  3D                 	db	61	;'='
  1382  00FF37  31                 	db	49	;'1'
  1383  00FF38  2C                 	db	44
  1384  00FF39  30                 	db	48	;'0'
  1385  00FF3A  0D                 	db	13
  1386  00FF3B  0A                 	db	10
  1387  00FF3C  00                 	db	0
  1388  00FF3D  41                 	db	65	;'A'
  1389  00FF3E  54                 	db	84	;'T'
  1390  00FF3F  2B                 	db	43
  1391  00FF40  48                 	db	72	;'H'
  1392  00FF41  54                 	db	84	;'T'
  1393  00FF42  54                 	db	84	;'T'
  1394  00FF43  50                 	db	80	;'P'
  1395  00FF44  53                 	db	83	;'S'
  1396  00FF45  53                 	db	83	;'S'
  1397  00FF46  4C                 	db	76	;'L'
  1398  00FF47  3D                 	db	61	;'='
  1399  00FF48  30                 	db	48	;'0'
  1400  00FF49  0D                 	db	13
  1401  00FF4A  00                 	db	0
  1402  00FF4B                     STR_10:
  1403  00FF4B  41                 	db	65	;'A'
  1404  00FF4C  54                 	db	84	;'T'
  1405  00FF4D  2B                 	db	43
  1406  00FF4E  53                 	db	83	;'S'
  1407  00FF4F  41                 	db	65	;'A'
  1408  00FF50  50                 	db	80	;'P'
  1409  00FF51  42                 	db	66	;'B'
  1410  00FF52  52                 	db	82	;'R'
  1411  00FF53  3D                 	db	61	;'='
  1412  00FF54  31                 	db	49	;'1'
  1413  00FF55  2C                 	db	44
  1414  00FF56  31                 	db	49	;'1'
  1415  00FF57  0D                 	db	13
  1416  00FF58  00                 	db	0
  1417  00FF59                     STR_11:
  1418  00FF59  41                 	db	65	;'A'
  1419  00FF5A  54                 	db	84	;'T'
  1420  00FF5B  2B                 	db	43
  1421  00FF5C  53                 	db	83	;'S'
  1422  00FF5D  41                 	db	65	;'A'
  1423  00FF5E  50                 	db	80	;'P'
  1424  00FF5F  42                 	db	66	;'B'
  1425  00FF60  52                 	db	82	;'R'
  1426  00FF61  3D                 	db	61	;'='
  1427  00FF62  32                 	db	50	;'2'
  1428  00FF63  2C                 	db	44
  1429  00FF64  31                 	db	49	;'1'
  1430  00FF65  0D                 	db	13
  1431  00FF66  00                 	db	0
  1432  00FF67                     STR_13:
  1433  00FF67  41                 	db	65	;'A'
  1434  00FF68  54                 	db	84	;'T'
  1435  00FF69  2B                 	db	43
  1436  00FF6A  48                 	db	72	;'H'
  1437  00FF6B  54                 	db	84	;'T'
  1438  00FF6C  54                 	db	84	;'T'
  1439  00FF6D  50                 	db	80	;'P'
  1440  00FF6E  53                 	db	83	;'S'
  1441  00FF6F  53                 	db	83	;'S'
  1442  00FF70  4C                 	db	76	;'L'
  1443  00FF71  3D                 	db	61	;'='
  1444  00FF72  31                 	db	49	;'1'
  1445  00FF73  0D                 	db	13
  1446  00FF74  00                 	db	0
  1447  00FF75                     STR_2:
  1448  00FF75  41                 	db	65	;'A'
  1449  00FF76  54                 	db	84	;'T'
  1450  00FF77  2B                 	db	43
  1451  00FF78  49                 	db	73	;'I'
  1452  00FF79  50                 	db	80	;'P'
  1453  00FF7A  52                 	db	82	;'R'
  1454  00FF7B  3D                 	db	61	;'='
  1455  00FF7C  39                 	db	57	;'9'
  1456  00FF7D  36                 	db	54	;'6'
  1457  00FF7E  30                 	db	48	;'0'
  1458  00FF7F  30                 	db	48	;'0'
  1459  00FF80  0D                 	db	13
  1460  00FF81  0A                 	db	10
  1461  00FF82  00                 	db	0
  1462  00FF83                     STR_17:
  1463  00FF83  41                 	db	65	;'A'
  1464  00FF84  54                 	db	84	;'T'
  1465  00FF85  2B                 	db	43
  1466  00FF86  48                 	db	72	;'H'
  1467  00FF87  54                 	db	84	;'T'
  1468  00FF88  54                 	db	84	;'T'
  1469  00FF89  50                 	db	80	;'P'
  1470  00FF8A  52                 	db	82	;'R'
  1471  00FF8B  45                 	db	69	;'E'
  1472  00FF8C  41                 	db	65	;'A'
  1473  00FF8D  44                 	db	68	;'D'
  1474  00FF8E  0D                 	db	13
  1475  00FF8F  00                 	db	0
  1476  00FF90                     STR_18:
  1477  00FF90  41                 	db	65	;'A'
  1478  00FF91  54                 	db	84	;'T'
  1479  00FF92  2B                 	db	43
  1480  00FF93  48                 	db	72	;'H'
  1481  00FF94  54                 	db	84	;'T'
  1482  00FF95  54                 	db	84	;'T'
  1483  00FF96  50                 	db	80	;'P'
  1484  00FF97  54                 	db	84	;'T'
  1485  00FF98  45                 	db	69	;'E'
  1486  00FF99  52                 	db	82	;'R'
  1487  00FF9A  4D                 	db	77	;'M'
  1488  00FF9B  0D                 	db	13
  1489  00FF9C  00                 	db	0
  1490  00FF9D                     STR_12:
  1491  00FF9D  41                 	db	65	;'A'
  1492  00FF9E  54                 	db	84	;'T'
  1493  00FF9F  2B                 	db	43
  1494  00FFA0  48                 	db	72	;'H'
  1495  00FFA1  54                 	db	84	;'T'
  1496  00FFA2  54                 	db	84	;'T'
  1497  00FFA3  50                 	db	80	;'P'
  1498  00FFA4  49                 	db	73	;'I'
  1499  00FFA5  4E                 	db	78	;'N'
  1500  00FFA6  49                 	db	73	;'I'
  1501  00FFA7  54                 	db	84	;'T'
  1502  00FFA8  0D                 	db	13
  1503  00FFA9  00                 	db	0
  1504  00FFAA                     STR_31:
  1505  00FFAA  41                 	db	65	;'A'
  1506  00FFAB  54                 	db	84	;'T'
  1507  00FFAC  2B                 	db	43
  1508  00FFAD  43                 	db	67	;'C'
  1509  00FFAE  4C                 	db	76	;'L'
  1510  00FFAF  49                 	db	73	;'I'
  1511  00FFB0  50                 	db	80	;'P'
  1512  00FFB1  3D                 	db	61	;'='
  1513  00FFB2  31                 	db	49	;'1'
  1514  00FFB3  0D                 	db	13
  1515  00FFB4  0A                 	db	10
  1516  00FFB5  00                 	db	0
  1517  00FFB6                     STR_28:
  1518  00FFB6  4D                 	db	77	;'M'
  1519  00FFB7  61                 	db	97	;'a'
  1520  00FFB8  72                 	db	114	;'r'
  1521  00FFB9  20                 	db	32
  1522  00FFBA  32                 	db	50	;'2'
  1523  00FFBB  37                 	db	55	;'7'
  1524  00FFBC  20                 	db	32
  1525  00FFBD  32                 	db	50	;'2'
  1526  00FFBE  30                 	db	48	;'0'
  1527  00FFBF  32                 	db	50	;'2'
  1528  00FFC0  32                 	db	50	;'2'
  1529  00FFC1  00                 	db	0
  1530  00FFC2                     STR_4:
  1531  00FFC2  41                 	db	65	;'A'
  1532  00FFC3  54                 	db	84	;'T'
  1533  00FFC4  2B                 	db	43
  1534  00FFC5  43                 	db	67	;'C'
  1535  00FFC6  4D                 	db	77	;'M'
  1536  00FFC7  47                 	db	71	;'G'
  1537  00FFC8  52                 	db	82	;'R'
  1538  00FFC9  3D                 	db	61	;'='
  1539  00FFCA  31                 	db	49	;'1'
  1540  00FFCB  0D                 	db	13
  1541  00FFCC  0A                 	db	10
  1542  00FFCD  00                 	db	0
  1543  00FFCE                     STR_5:
  1544  00FFCE  41                 	db	65	;'A'
  1545  00FFCF  54                 	db	84	;'T'
  1546  00FFD0  2B                 	db	43
  1547  00FFD1  43                 	db	67	;'C'
  1548  00FFD2  4D                 	db	77	;'M'
  1549  00FFD3  47                 	db	71	;'G'
  1550  00FFD4  53                 	db	83	;'S'
  1551  00FFD5  3D                 	db	61	;'='
  1552  00FFD6  22                 	db	34
  1553  00FFD7  00                 	db	0
  1554  00FFD8                     STR_32:
  1555  00FFD8  28                 	db	40
  1556  00FFD9  6E                 	db	110	;'n'
  1557  00FFDA  75                 	db	117	;'u'
  1558  00FFDB  6C                 	db	108	;'l'
  1559  00FFDC  6C                 	db	108	;'l'
  1560  00FFDD  29                 	db	41
  1561  00FFDE  00                 	db	0
  1562  00FFDF                     STR_3:
  1563  00FFDF  41                 	db	65	;'A'
  1564  00FFE0  54                 	db	84	;'T'
  1565  00FFE1  45                 	db	69	;'E'
  1566  00FFE2  30                 	db	48	;'0'
  1567  00FFE3  0D                 	db	13
  1568  00FFE4  0A                 	db	10
  1569  00FFE5  00                 	db	0
  1570  00FFE6                     STR_1:
  1571  00FFE6  41                 	db	65	;'A'
  1572  00FFE7  54                 	db	84	;'T'
  1573  00FFE8  0D                 	db	13
  1574  00FFE9  0A                 	db	10
  1575  00FFEA  00                 	db	0
  1576  00FFEB  41                 	db	65	;'A'
  1577  00FFEC  54                 	db	84	;'T'
  1578  00FFED  41                 	db	65	;'A'
  1579  00FFEE  0D                 	db	13
  1580  00FFEF  00                 	db	0
  1581  00FFF0                     STR_6:
  1582  00FFF0  41                 	db	65	;'A'
  1583  00FFF1  54                 	db	84	;'T'
  1584  00FFF2  48                 	db	72	;'H'
  1585  00FFF3  0D                 	db	13
  1586  00FFF4  00                 	db	0
  1587  00FFF5                     STR_24:
  1588  00FFF5  2E                 	db	46
  1589  00FFF6  00                 	db	0
  1590  0000                     
  1591                           ; #config settings
  1592  00FFF7  00                 	db	0	; dummy byte at the end
  1593  0000                     
  1594                           	psect	cinit
  1595  002180                     __pcinit:
  1596                           	opt stack 0
  1597  002180                     start_initialization:
  1598                           	opt stack 0
  1599  002180                     __initialization:
  1600                           	opt stack 0
  1601                           
  1602                           ; Initialize objects allocated to BANK5 (80 bytes)
  1603                           ; load TBLPTR registers with __pidataBANK5
  1604  002180  0E3A               	movlw	low __pidataBANK5
  1605  002182  6EF6               	movwf	tblptrl,c
  1606  002184  0E5C               	movlw	high __pidataBANK5
  1607  002186  6EF7               	movwf	tblptrh,c
  1608  002188  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1609  00218A  6EF8               	movwf	tblptru,c
  1610  00218C  EE05  F0A4         	lfsr	0,__pdataBANK5
  1611  002190  EE10 F050          	lfsr	1,80
  1612  002194                     copy_data0:
  1613  002194  0009               	tblrd		*+
  1614  002196  CFF5 FFEE          	movff	tablat,postinc0
  1615  00219A  50E5               	movf	postdec1,w,c
  1616  00219C  50E1               	movf	fsr1l,w,c
  1617  00219E  E1FA               	bnz	copy_data0
  1618                           
  1619                           ; Initialize objects allocated to BANK3 (60 bytes)
  1620                           ; load TBLPTR registers with __pidataBANK3
  1621  0021A0  0E10               	movlw	low __pidataBANK3
  1622  0021A2  6EF6               	movwf	tblptrl,c
  1623  0021A4  0E62               	movlw	high __pidataBANK3
  1624  0021A6  6EF7               	movwf	tblptrh,c
  1625  0021A8  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1626  0021AA  6EF8               	movwf	tblptru,c
  1627  0021AC  EE03  F0C2         	lfsr	0,__pdataBANK3
  1628  0021B0  EE10 F03C          	lfsr	1,60
  1629  0021B4                     copy_data1:
  1630  0021B4  0009               	tblrd		*+
  1631  0021B6  CFF5 FFEE          	movff	tablat,postinc0
  1632  0021BA  50E5               	movf	postdec1,w,c
  1633  0021BC  50E1               	movf	fsr1l,w,c
  1634  0021BE  E1FA               	bnz	copy_data1
  1635                           
  1636                           ; Initialize objects allocated to BANK2 (13 bytes)
  1637                           ; load TBLPTR registers with __pidataBANK2
  1638  0021C0  0E1E               	movlw	low __pidataBANK2
  1639  0021C2  6EF6               	movwf	tblptrl,c
  1640  0021C4  0E6A               	movlw	high __pidataBANK2
  1641  0021C6  6EF7               	movwf	tblptrh,c
  1642  0021C8  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1643  0021CA  6EF8               	movwf	tblptru,c
  1644  0021CC  EE02  F0F3         	lfsr	0,__pdataBANK2
  1645  0021D0  EE10 F00D          	lfsr	1,13
  1646  0021D4                     copy_data2:
  1647  0021D4  0009               	tblrd		*+
  1648  0021D6  CFF5 FFEE          	movff	tablat,postinc0
  1649  0021DA  50E5               	movf	postdec1,w,c
  1650  0021DC  50E1               	movf	fsr1l,w,c
  1651  0021DE  E1FA               	bnz	copy_data2
  1652                           
  1653                           ; Initialize objects allocated to BANK1 (2 bytes)
  1654                           ; load TBLPTR registers with __pidataBANK1
  1655  0021E0  0EB2               	movlw	low __pidataBANK1
  1656  0021E2  6EF6               	movwf	tblptrl,c
  1657  0021E4  0E6A               	movlw	high __pidataBANK1
  1658  0021E6  6EF7               	movwf	tblptrh,c
  1659  0021E8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1660  0021EA  6EF8               	movwf	tblptru,c
  1661  0021EC  0009               	tblrd		*+	;fetch initializer
  1662  0021EE  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1663  0021F2  0009               	tblrd		*+	;fetch initializer
  1664  0021F4  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1665                           
  1666                           ; Initialize objects allocated to BANK4 (10 bytes)
  1667                           ; load TBLPTR registers with __pidataBANK4
  1668  0021F8  0E44               	movlw	low __pidataBANK4
  1669  0021FA  6EF6               	movwf	tblptrl,c
  1670  0021FC  0E6A               	movlw	high __pidataBANK4
  1671  0021FE  6EF7               	movwf	tblptrh,c
  1672  002200  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1673  002202  6EF8               	movwf	tblptru,c
  1674  002204  EE04  F0E0         	lfsr	0,__pdataBANK4
  1675  002208  EE10 F00A          	lfsr	1,10
  1676  00220C                     copy_data3:
  1677  00220C  0009               	tblrd		*+
  1678  00220E  CFF5 FFEE          	movff	tablat,postinc0
  1679  002212  50E5               	movf	postdec1,w,c
  1680  002214  50E1               	movf	fsr1l,w,c
  1681  002216  E1FA               	bnz	copy_data3
  1682                           
  1683                           ; Initialize objects allocated to COMRAM (2 bytes)
  1684                           ; load TBLPTR registers with __pidataCOMRAM
  1685  002218  0EB0               	movlw	low __pidataCOMRAM
  1686  00221A  6EF6               	movwf	tblptrl,c
  1687  00221C  0E6A               	movlw	high __pidataCOMRAM
  1688  00221E  6EF7               	movwf	tblptrh,c
  1689  002220  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1690  002222  6EF8               	movwf	tblptru,c
  1691  002224  0009               	tblrd		*+	;fetch initializer
  1692  002226  CFF5 F040          	movff	tablat,__pdataCOMRAM
  1693  00222A  0009               	tblrd		*+	;fetch initializer
  1694  00222C  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
  1695                           
  1696                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1697  002230  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1698  002234  EE13 F020          	lfsr	1,800
  1699  002238                     clear_0:
  1700  002238  6AEE               	clrf	postinc0,c
  1701  00223A  50E5               	movf	postdec1,w,c
  1702  00223C  50E1               	movf	fsr1l,w,c
  1703  00223E  E1FC               	bnz	clear_0
  1704  002240  50E2               	movf	fsr1h,w,c
  1705  002242  E1FA               	bnz	clear_0
  1706                           
  1707                           ; Clear objects allocated to BANK9 (200 bytes)
  1708  002244  EE09  F000         	lfsr	0,__pbssBANK9
  1709  002248  0EC8               	movlw	200
  1710  00224A                     clear_1:
  1711  00224A  6AEE               	clrf	postinc0,c
  1712  00224C  06E8               	decf	wreg,f,c
  1713  00224E  E1FD               	bnz	clear_1
  1714                           
  1715                           ; Clear objects allocated to BANK8 (200 bytes)
  1716  002250  EE08  F000         	lfsr	0,__pbssBANK8
  1717  002254  0EC8               	movlw	200
  1718  002256                     clear_2:
  1719  002256  6AEE               	clrf	postinc0,c
  1720  002258  06E8               	decf	wreg,f,c
  1721  00225A  E1FD               	bnz	clear_2
  1722                           
  1723                           ; Clear objects allocated to BANK7 (246 bytes)
  1724  00225C  EE07  F000         	lfsr	0,__pbssBANK7
  1725  002260  0EF6               	movlw	246
  1726  002262                     clear_3:
  1727  002262  6AEE               	clrf	postinc0,c
  1728  002264  06E8               	decf	wreg,f,c
  1729  002266  E1FD               	bnz	clear_3
  1730                           
  1731                           ; Clear objects allocated to BANK6 (220 bytes)
  1732  002268  EE06  F000         	lfsr	0,__pbssBANK6
  1733  00226C  0EDC               	movlw	220
  1734  00226E                     clear_4:
  1735  00226E  6AEE               	clrf	postinc0,c
  1736  002270  06E8               	decf	wreg,f,c
  1737  002272  E1FD               	bnz	clear_4
  1738                           
  1739                           ; Clear objects allocated to BANK5 (164 bytes)
  1740  002274  EE05  F000         	lfsr	0,__pbssBANK5
  1741  002278  0EA4               	movlw	164
  1742  00227A                     clear_5:
  1743  00227A  6AEE               	clrf	postinc0,c
  1744  00227C  06E8               	decf	wreg,f,c
  1745  00227E  E1FD               	bnz	clear_5
  1746                           
  1747                           ; Clear objects allocated to BANK3 (194 bytes)
  1748  002280  EE03  F000         	lfsr	0,__pbssBANK3
  1749  002284  0EC2               	movlw	194
  1750  002286                     clear_6:
  1751  002286  6AEE               	clrf	postinc0,c
  1752  002288  06E8               	decf	wreg,f,c
  1753  00228A  E1FD               	bnz	clear_6
  1754                           
  1755                           ; Clear objects allocated to BANK2 (43 bytes)
  1756  00228C  EE02  F0C8         	lfsr	0,__pbssBANK2
  1757  002290  0E2B               	movlw	43
  1758  002292                     clear_7:
  1759  002292  6AEE               	clrf	postinc0,c
  1760  002294  06E8               	decf	wreg,f,c
  1761  002296  E1FD               	bnz	clear_7
  1762                           
  1763                           ; Clear objects allocated to BANK1 (53 bytes)
  1764  002298  EE01  F0C9         	lfsr	0,__pbssBANK1
  1765  00229C  0E35               	movlw	53
  1766  00229E                     clear_8:
  1767  00229E  6AEE               	clrf	postinc0,c
  1768  0022A0  06E8               	decf	wreg,f,c
  1769  0022A2  E1FD               	bnz	clear_8
  1770                           
  1771                           ; Clear objects allocated to BANK4 (160 bytes)
  1772  0022A4  EE04  F040         	lfsr	0,__pbssBANK4
  1773  0022A8  0EA0               	movlw	160
  1774  0022AA                     clear_9:
  1775  0022AA  6AEE               	clrf	postinc0,c
  1776  0022AC  06E8               	decf	wreg,f,c
  1777  0022AE  E1FD               	bnz	clear_9
  1778                           
  1779                           ; Clear objects allocated to BANK0 (51 bytes)
  1780  0022B0  EE00  F0B0         	lfsr	0,__pbssBANK0
  1781  0022B4  0E33               	movlw	51
  1782  0022B6                     clear_10:
  1783  0022B6  6AEE               	clrf	postinc0,c
  1784  0022B8  06E8               	decf	wreg,f,c
  1785  0022BA  E1FD               	bnz	clear_10
  1786                           
  1787                           ; Clear objects allocated to COMRAM (29 bytes)
  1788  0022BC  EE00  F023         	lfsr	0,__pbssCOMRAM
  1789  0022C0  0E1D               	movlw	29
  1790  0022C2                     clear_11:
  1791  0022C2  6AEE               	clrf	postinc0,c
  1792  0022C4  06E8               	decf	wreg,f,c
  1793  0022C6  E1FD               	bnz	clear_11
  1794  0022C8                     end_of_initialization:
  1795                           	opt stack 0
  1796  0022C8                     __end_of__initialization:
  1797                           	opt stack 0
  1798  0022C8  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1799  0022CA  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1800  0022CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1801  0022CE  6EF8               	movwf	tblptru,c
  1802  0022D0  0100               	movlb	0
  1803  0022D2  EF16  F035         	goto	_main	;jump to C main() function
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           postdec1	equ	0xFE5
  1811                           fsr1h	equ	0xFE2
  1812                           fsr1l	equ	0xFE1
  1813                           
  1814                           	psect	bssCOMRAM
  1815  000023                     __pbssCOMRAM:
  1816                           	opt stack 0
  1817  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1818                           	opt stack 0
  1819  000023                     	ds	2
  1820  000025                     _USBDeferOUTDataStagePackets:
  1821                           	opt stack 0
  1822  000025                     	ds	1
  1823  000026                     _USBDeferINDataStagePackets:
  1824                           	opt stack 0
  1825  000026                     	ds	1
  1826  000027                     _USBStatusStageEnabledFlag2:
  1827                           	opt stack 0
  1828  000027                     	ds	1
  1829  000028                     CheckModem@CheckMdmSts:
  1830                           	opt stack 0
  1831  000028                     	ds	1
  1832  000029                     _ComChecCompleted:
  1833                           	opt stack 0
  1834  000029                     	ds	1
  1835  00002A                     Uart_Uart1RxIsr@UartRxData:
  1836                           	opt stack 0
  1837  00002A                     	ds	1
  1838  00002B                     Uart_MdmGsmGprsReadService@RxState:
  1839                           	opt stack 0
  1840  00002B                     	ds	1
  1841  00002C                     MdmCntSm@MdmCntState:
  1842                           	opt stack 0
  1843  00002C                     	ds	1
  1844  00002D                     RiSm@MdmDrvState:
  1845                           	opt stack 0
  1846  00002D                     	ds	1
  1847  00002E                     _Mmd_RingIndicator:
  1848                           	opt stack 0
  1849  00002E                     	ds	1
  1850  00002F                     I2c_ReadData@ReadStatus:
  1851                           	opt stack 0
  1852  00002F                     	ds	1
  1853  000030                     I2c_ReadData@TentativeCounter:
  1854                           	opt stack 0
  1855  000030                     	ds	1
  1856  000031                     I2c_ReadData@DataCounter:
  1857                           	opt stack 0
  1858  000031                     	ds	1
  1859  000032                     I2c_ReadData@I2cReadState:
  1860                           	opt stack 0
  1861  000032                     	ds	1
  1862  000033                     I2c_WriteData@WriteStatus:
  1863                           	opt stack 0
  1864  000033                     	ds	1
  1865  000034                     I2c_WriteData@TentativeCounter:
  1866                           	opt stack 0
  1867  000034                     	ds	1
  1868  000035                     I2c_WriteData@I2cNextState:
  1869                           	opt stack 0
  1870  000035                     	ds	1
  1871  000036                     I2c_WriteData@I2cWriteState:
  1872                           	opt stack 0
  1873  000036                     	ds	1
  1874  000037                     _MdmStsReady:
  1875                           	opt stack 0
  1876  000037                     	ds	1
  1877  000038                     _NewStringMdmTerminal:
  1878                           	opt stack 0
  1879  000038                     	ds	1
  1880  000039                     _NewMdmEvtParserRequest:
  1881                           	opt stack 0
  1882  000039                     	ds	1
  1883  00003A                     _NewStringReceived:
  1884                           	opt stack 0
  1885  00003A                     	ds	1
  1886  00003B                     _MdmResetRequest:
  1887                           	opt stack 0
  1888  00003B                     	ds	1
  1889  00003C                     _CallClosedEvent:
  1890                           	opt stack 0
  1891  00003C                     	ds	1
  1892  00003D                     _IncomingCallEvent:
  1893                           	opt stack 0
  1894  00003D                     	ds	1
  1895  00003E                     _NewSmsEvent:
  1896                           	opt stack 0
  1897  00003E                     	ds	1
  1898  00003F                     _ActivateRiDetection:
  1899                           	opt stack 0
  1900  00003F                     	ds	1
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1h	equ	0xFE2
  1909                           fsr1l	equ	0xFE1
  1910                           
  1911                           	psect	dataCOMRAM
  1912  000040                     __pdataCOMRAM:
  1913                           	opt stack 0
  1914  000040                     findEmptySpot@currentPosition:
  1915                           	opt stack 0
  1916  000040                     	ds	1
  1917  000041                     isNumberInMemory@currentPosition:
  1918                           	opt stack 0
  1919  000041                     	ds	1
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930                           	psect	bssBANK0
  1931  0000B0                     __pbssBANK0:
  1932                           	opt stack 0
  1933  0000B0                     _inPipes:
  1934                           	opt stack 0
  1935  0000B0                     	ds	6
  1936  0000B6                     _pBDTEntryIn:
  1937                           	opt stack 0
  1938  0000B6                     	ds	6
  1939  0000BC                     _CDCDataOutHandle:
  1940                           	opt stack 0
  1941  0000BC                     	ds	2
  1942  0000BE                     _pBDTEntryEP0OutNext:
  1943                           	opt stack 0
  1944  0000BE                     	ds	2
  1945  0000C0                     _pBDTEntryEP0OutCurrent:
  1946                           	opt stack 0
  1947  0000C0                     	ds	2
  1948  0000C2                     _RxLen:
  1949                           	opt stack 0
  1950  0000C2                     	ds	2
  1951  0000C4                     Eeprom_Reset@memoryAddress:
  1952                           	opt stack 0
  1953  0000C4                     	ds	1
  1954  0000C5                     _cdc_tx_len:
  1955                           	opt stack 0
  1956  0000C5                     	ds	1
  1957  0000C6                     _cdc_trf_state:
  1958                           	opt stack 0
  1959  0000C6                     	ds	1
  1960  0000C7                     _cdc_rx_len:
  1961                           	opt stack 0
  1962  0000C7                     	ds	1
  1963  0000C8                     _USBStatusStageEnabledFlag1:
  1964                           	opt stack 0
  1965  0000C8                     	ds	1
  1966  0000C9                     _USBDeferStatusStagePacket:
  1967                           	opt stack 0
  1968  0000C9                     	ds	1
  1969  0000CA                     _USBStatusStageTimeoutCounter:
  1970                           	opt stack 0
  1971  0000CA                     	ds	1
  1972  0000CB                     _endpoint_number:
  1973                           	opt stack 0
  1974  0000CB                     	ds	1
  1975  0000CC                     _controlTransferState:
  1976                           	opt stack 0
  1977  0000CC                     	ds	1
  1978  0000CD                     _shortPacketStatus:
  1979                           	opt stack 0
  1980  0000CD                     	ds	1
  1981  0000CE                     _USBDeviceState:
  1982                           	opt stack 0
  1983  0000CE                     	ds	1
  1984  0000CF                     _I2cComSts:
  1985                           	opt stack 0
  1986  0000CF                     	ds	1
  1987  0000D0                     HttpGetMethod@GetMethodNextState:
  1988                           	opt stack 0
  1989  0000D0                     	ds	1
  1990  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1991                           	opt stack 0
  1992  0000D1                     	ds	1
  1993  0000D2                     _MdmStatus:
  1994                           	opt stack 0
  1995  0000D2                     	ds	1
  1996  0000D3                     _PhoneNumbLen:
  1997                           	opt stack 0
  1998  0000D3                     	ds	1
  1999  0000D4                     _SmsLen:
  2000                           	opt stack 0
  2001  0000D4                     	ds	1
  2002  0000D5                     _SystemState:
  2003                           	opt stack 0
  2004  0000D5                     	ds	1
  2005  0000D6                     _USTATcopy:
  2006                           	opt stack 0
  2007  0000D6                     	ds	1
  2008  0000D7                     _USBActiveConfiguration:
  2009                           	opt stack 0
  2010  0000D7                     	ds	1
  2011  0000D8                     _I2cReadDataEvt:
  2012                           	opt stack 0
  2013  0000D8                     	ds	1
  2014  0000D9                     _I2cWriteDataEvt:
  2015                           	opt stack 0
  2016  0000D9                     	ds	1
  2017  0000DA                     _GetMethod:
  2018                           	opt stack 0
  2019  0000DA                     	ds	1
  2020  0000DB                     _InitNetwork:
  2021                           	opt stack 0
  2022  0000DB                     	ds	1
  2023  0000DC                     _SmsTxtReady:
  2024                           	opt stack 0
  2025  0000DC                     	ds	1
  2026  0000DD                     _GetSmsText:
  2027                           	opt stack 0
  2028  0000DD                     	ds	1
  2029  0000DE                     _SmsEvent:
  2030                           	opt stack 0
  2031  0000DE                     	ds	1
  2032  0000DF                     _ClipEvent:
  2033                           	opt stack 0
  2034  0000DF                     	ds	1
  2035  0000E0                     _RingEvent:
  2036                           	opt stack 0
  2037  0000E0                     	ds	1
  2038  0000E1                     _SendSmsEvent:
  2039                           	opt stack 0
  2040  0000E1                     	ds	1
  2041  0000E2                     _MdmOnOffPulseRequest:
  2042                           	opt stack 0
  2043  0000E2                     	ds	1
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1h	equ	0xFE2
  2052                           fsr1l	equ	0xFE1
  2053                           
  2054                           	psect	bssBANK1
  2055  0001C9                     __pbssBANK1:
  2056                           	opt stack 0
  2057  0001C9                     _outPipes:
  2058                           	opt stack 0
  2059  0001C9                     	ds	8
  2060  0001D1                     _CDCDataInHandle:
  2061                           	opt stack 0
  2062  0001D1                     	ds	2
  2063  0001D3                     _Tmr2IsrCallback:
  2064                           	opt stack 0
  2065  0001D3                     	ds	2
  2066  0001D5                     triggerCmdFsm@currentState:
  2067                           	opt stack 0
  2068  0001D5                     	ds	1
  2069  0001D6                     delCmdFsm@currentState:
  2070                           	opt stack 0
  2071  0001D6                     	ds	1
  2072  0001D7                     addCmdFsm@currentState:
  2073                           	opt stack 0
  2074  0001D7                     	ds	1
  2075  0001D8                     initFsm@currentState:
  2076                           	opt stack 0
  2077  0001D8                     	ds	1
  2078  0001D9                     initEeprom@currentState:
  2079                           	opt stack 0
  2080  0001D9                     	ds	1
  2081  0001DA                     initGprsModem@currentState:
  2082                           	opt stack 0
  2083  0001DA                     	ds	1
  2084  0001DB                     MyApp_Task@currentState:
  2085                           	opt stack 0
  2086  0001DB                     	ds	1
  2087  0001DC                     GsmGprsTerminal@SMS:
  2088                           	opt stack 0
  2089  0001DC                     	ds	1
  2090  0001DD                     	ds	1
  2091  0001DE                     _control_signal_bitmap:
  2092                           	opt stack 0
  2093  0001DE                     	ds	1
  2094  0001DF                     _cdc_mem_type:
  2095                           	opt stack 0
  2096  0001DF                     	ds	1
  2097  0001E0                     _USBTicksSinceSuspendEnd:
  2098                           	opt stack 0
  2099  0001E0                     	ds	1
  2100  0001E1                     _BothEP0OutUOWNsSet:
  2101                           	opt stack 0
  2102  0001E1                     	ds	1
  2103  0001E2                     _USBBusIsSuspended:
  2104                           	opt stack 0
  2105  0001E2                     	ds	1
  2106  0001E3                     _RemoteWakeup:
  2107                           	opt stack 0
  2108  0001E3                     	ds	1
  2109  0001E4                     I2cSlv_QueryI2cData@Ret:
  2110                           	opt stack 0
  2111  0001E4                     	ds	1
  2112  0001E5                     I2cSlv_QueryI2cData@I2cOpState:
  2113                           	opt stack 0
  2114  0001E5                     	ds	1
  2115  0001E6                     I2cSendMsgSm@I2cComState:
  2116                           	opt stack 0
  2117  0001E6                     	ds	1
  2118  0001E7                     _I2cBusStatus:
  2119                           	opt stack 0
  2120  0001E7                     	ds	1
  2121  0001E8                     HttpGetMethod@GetMOutSts:
  2122                           	opt stack 0
  2123  0001E8                     	ds	1
  2124  0001E9                     HttpGetMethod@GetMethodState:
  2125                           	opt stack 0
  2126  0001E9                     	ds	1
  2127  0001EA                     InitGprsNetwork@GprsNetInitState:
  2128                           	opt stack 0
  2129  0001EA                     	ds	1
  2130  0001EB                     _PostMethod:
  2131                           	opt stack 0
  2132  0001EB                     	ds	1
  2133  0001EC                     _HttpGetMethodSts:
  2134                           	opt stack 0
  2135  0001EC                     	ds	1
  2136  0001ED                     _GprsNetworkSts:
  2137                           	opt stack 0
  2138  0001ED                     	ds	1
  2139  0001EE                     _ApnLenLocal:
  2140                           	opt stack 0
  2141  0001EE                     	ds	1
  2142  0001EF                     SendSmsSm@SendSms_NextState:
  2143                           	opt stack 0
  2144  0001EF                     	ds	1
  2145  0001F0                     SendSmsSm@SendSms_State:
  2146                           	opt stack 0
  2147  0001F0                     	ds	1
  2148  0001F1                     GetSmsSm@GetSmsState:
  2149                           	opt stack 0
  2150  0001F1                     	ds	1
  2151  0001F2                     ConfigureModem@NextState:
  2152                           	opt stack 0
  2153  0001F2                     	ds	1
  2154  0001F3                     ConfigureModem@MdmConfigState:
  2155                           	opt stack 0
  2156  0001F3                     	ds	1
  2157  0001F4                     TurnOnModem@TurnOnMdmState:
  2158                           	opt stack 0
  2159  0001F4                     	ds	1
  2160  0001F5                     _AlarmEvent:
  2161                           	opt stack 0
  2162  0001F5                     	ds	1
  2163  0001F6                     _Led3OutSts:
  2164                           	opt stack 0
  2165  0001F6                     	ds	1
  2166  0001F7                     _Led3Sts:
  2167                           	opt stack 0
  2168  0001F7                     	ds	1
  2169  0001F8                     _Led2OutSts:
  2170                           	opt stack 0
  2171  0001F8                     	ds	1
  2172  0001F9                     _Led2Sts:
  2173                           	opt stack 0
  2174  0001F9                     	ds	1
  2175  0001FA                     _Led1OutSts:
  2176                           	opt stack 0
  2177  0001FA                     	ds	1
  2178  0001FB                     _Led1Sts:
  2179                           	opt stack 0
  2180  0001FB                     	ds	1
  2181  0001FC                     _ReadAddress:
  2182                           	opt stack 0
  2183  0001FC                     	ds	1
  2184  0001FD                     I2cDummyTx@DummyBuffer:
  2185                           	opt stack 0
  2186  0001FD                     	ds	1
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           postinc0	equ	0xFEE
  2192                           wreg	equ	0xFE8
  2193                           postdec1	equ	0xFE5
  2194                           fsr1h	equ	0xFE2
  2195                           fsr1l	equ	0xFE1
  2196                           
  2197                           	psect	dataBANK1
  2198  0001FE                     __pdataBANK1:
  2199                           	opt stack 0
  2200  0001FE                     _isMemoryEmpty:
  2201                           	opt stack 0
  2202  0001FE                     	ds	1
  2203  0001FF                     InitGprsNetwork@GprsInitSts:
  2204                           	opt stack 0
  2205  0001FF                     	ds	1
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           postdec1	equ	0xFE5
  2213                           fsr1h	equ	0xFE2
  2214                           fsr1l	equ	0xFE1
  2215                           
  2216                           	psect	bssBANK2
  2217  0002C8                     __pbssBANK2:
  2218                           	opt stack 0
  2219  0002C8                     _pCDCDst:
  2220                           	opt stack 0
  2221  0002C8                     	ds	3
  2222  0002CB                     _pCDCSrc:
  2223                           	opt stack 0
  2224  0002CB                     	ds	3
  2225  0002CE                     _ep_data_out:
  2226                           	opt stack 0
  2227  0002CE                     	ds	3
  2228  0002D1                     _ep_data_in:
  2229                           	opt stack 0
  2230  0002D1                     	ds	3
  2231  0002D4                     _pDst:
  2232                           	opt stack 0
  2233  0002D4                     	ds	2
  2234  0002D6                     _ApnLocal:
  2235                           	opt stack 0
  2236  0002D6                     	ds	2
  2237  0002D8                     ConfigureModem@DelayCounter:
  2238                           	opt stack 0
  2239  0002D8                     	ds	2
  2240  0002DA                     ConfigureModem@DelayValueMs:
  2241                           	opt stack 0
  2242  0002DA                     	ds	2
  2243  0002DC                     TurnOnModem@Counter:
  2244                           	opt stack 0
  2245  0002DC                     	ds	2
  2246  0002DE                     UpdateSchFlag@InterruptCounter:
  2247                           	opt stack 0
  2248  0002DE                     	ds	2
  2249  0002E0                     MdmCntSm@Counter:
  2250                           	opt stack 0
  2251  0002E0                     	ds	2
  2252  0002E2                     RiSm@Counter:
  2253                           	opt stack 0
  2254  0002E2                     	ds	2
  2255  0002E4                     _ExtInt1IsrCallback:
  2256                           	opt stack 0
  2257  0002E4                     	ds	2
  2258  0002E6                     _ExtInt0IsrCallback:
  2259                           	opt stack 0
  2260  0002E6                     	ds	2
  2261  0002E8                     _RtccIsrCallback:
  2262                           	opt stack 0
  2263  0002E8                     	ds	2
  2264  0002EA                     _Tmr4IsrCallback:
  2265                           	opt stack 0
  2266  0002EA                     	ds	2
  2267  0002EC                     Term_MainSm@TermMainSmState:
  2268                           	opt stack 0
  2269  0002EC                     	ds	1
  2270  0002ED                     Terminal@FormatOption:
  2271                           	opt stack 0
  2272  0002ED                     	ds	1
  2273  0002EE                     Terminal@SlaveAddr:
  2274                           	opt stack 0
  2275  0002EE                     	ds	1
  2276  0002EF                     Terminal@PackageLen:
  2277                           	opt stack 0
  2278  0002EF                     	ds	1
  2279  0002F0                     Terminal@TermState:
  2280                           	opt stack 0
  2281  0002F0                     	ds	1
  2282  0002F1                     _USBAlternateInterface:
  2283                           	opt stack 0
  2284  0002F1                     	ds	2
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1h	equ	0xFE2
  2293                           fsr1l	equ	0xFE1
  2294                           
  2295                           	psect	dataBANK2
  2296  0002F3                     __pdataBANK2:
  2297                           	opt stack 0
  2298  0002F3                     Terminal@EchoOption:
  2299                           	opt stack 0
  2300  0002F3                     	ds	1
  2301  0002F4                     _MainSystemTimebaseFlag:
  2302                           	opt stack 0
  2303  0002F4                     	ds	1
  2304  0002F5                     _ConnTimeout:
  2305                           	opt stack 0
  2306  0002F5                     	ds	11
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           postdec1	equ	0xFE5
  2314                           fsr1h	equ	0xFE2
  2315                           fsr1l	equ	0xFE1
  2316                           
  2317                           	psect	bssBANK3
  2318  000300                     __pbssBANK3:
  2319                           	opt stack 0
  2320  000300                     _Rtcm_RtccAlarm:
  2321                           	opt stack 0
  2322  000300                     	ds	6
  2323  000306                     _pBDTEntryOut:
  2324                           	opt stack 0
  2325  000306                     	ds	6
  2326  00030C                     _BaudRateGen:
  2327                           	opt stack 0
  2328  00030C                     	ds	4
  2329  000310                     _USB1msTickCount:
  2330                           	opt stack 0
  2331  000310                     	ds	4
  2332  000314                     _OsTmr_OsTickCounter:
  2333                           	opt stack 0
  2334  000314                     	ds	4
  2335  000318                     _UsbMasterPhoneNumberLen:
  2336                           	opt stack 0
  2337  000318                     	ds	2
  2338  00031A                     _UartConfig:
  2339                           	opt stack 0
  2340  00031A                     	ds	21
  2341  00032F                     _receivedNumber:
  2342                           	opt stack 0
  2343  00032F                     	ds	13
  2344  00033C                     _callerNumber:
  2345                           	opt stack 0
  2346  00033C                     	ds	13
  2347  000349                     I2cSlv_QueryI2cData@TimeoutTimer:
  2348                           	opt stack 0
  2349  000349                     	ds	11
  2350  000354                     _I2cConfig:
  2351                           	opt stack 0
  2352  000354                     	ds	10
  2353  00035E                     _Led3Blink:
  2354                           	opt stack 0
  2355  00035E                     	ds	9
  2356  000367                     _Led2Blink:
  2357                           	opt stack 0
  2358  000367                     	ds	9
  2359  000370                     _Led1Blink:
  2360                           	opt stack 0
  2361  000370                     	ds	9
  2362  000379                     _dummy_encapsulated_cmd_response:
  2363                           	opt stack 0
  2364  000379                     	ds	8
  2365  000381                     _line_coding:
  2366                           	opt stack 0
  2367  000381                     	ds	7
  2368  000388                     _Led3Pulse:
  2369                           	opt stack 0
  2370  000388                     	ds	6
  2371  00038E                     _Led2Pulse:
  2372                           	opt stack 0
  2373  00038E                     	ds	6
  2374  000394                     _Led1Pulse:
  2375                           	opt stack 0
  2376  000394                     	ds	6
  2377  00039A                     _I2cRxPacket:
  2378                           	opt stack 0
  2379  00039A                     	ds	6
  2380  0003A0                     _I2cTxPacket:
  2381                           	opt stack 0
  2382  0003A0                     	ds	5
  2383  0003A5                     _HttpGetDataLocal:
  2384                           	opt stack 0
  2385  0003A5                     	ds	5
  2386  0003AA                     _memoryPreamble:
  2387                           	opt stack 0
  2388  0003AA                     	ds	4
  2389  0003AE                     Terminal@Addr:
  2390                           	opt stack 0
  2391  0003AE                     	ds	4
  2392  0003B2                     Terminal@Len:
  2393                           	opt stack 0
  2394  0003B2                     	ds	4
  2395  0003B6                     _AlCfg:
  2396                           	opt stack 0
  2397  0003B6                     	ds	4
  2398  0003BA                     _RtcConfig:
  2399                           	opt stack 0
  2400  0003BA                     	ds	4
  2401  0003BE                     initGprsModem@modemCounter:
  2402                           	opt stack 0
  2403  0003BE                     	ds	2
  2404  0003C0                     _setupCallTicks:
  2405                           	opt stack 0
  2406  0003C0                     	ds	2
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           
  2417                           	psect	dataBANK3
  2418  0003C2                     __pdataBANK3:
  2419                           	opt stack 0
  2420  0003C2                     ModemEvtParser@F9114:
  2421                           	opt stack 0
  2422  0003C2                     	ds	5
  2423  0003C7                     ModemEvtParser@F9112:
  2424                           	opt stack 0
  2425  0003C7                     	ds	5
  2426  0003CC                     ModemEvtParser@F9110:
  2427                           	opt stack 0
  2428  0003CC                     	ds	4
  2429  0003D0                     triggerRelay@F9003:
  2430                           	opt stack 0
  2431  0003D0                     	ds	2
  2432  0003D2                     Term_MainSm@TermDelay:
  2433                           	opt stack 0
  2434  0003D2                     	ds	11
  2435  0003DD                     _ConnWait:
  2436                           	opt stack 0
  2437  0003DD                     	ds	11
  2438  0003E8                     SendSmsSm@SwTimer:
  2439                           	opt stack 0
  2440  0003E8                     	ds	11
  2441  0003F3                     CheckModem@Timeout:
  2442                           	opt stack 0
  2443  0003F3                     	ds	11
  2444                           tblptru	equ	0xFF8
  2445                           tblptrh	equ	0xFF7
  2446                           tblptrl	equ	0xFF6
  2447                           tablat	equ	0xFF5
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           
  2454                           	psect	bssBANK4
  2455  000440                     __pbssBANK4:
  2456                           	opt stack 0
  2457  000440                     _UsbMasterPhoneNumber:
  2458                           	opt stack 0
  2459  000440                     	ds	15
  2460  00044F                     _cdc_notice:
  2461                           	opt stack 0
  2462  00044F                     	ds	10
  2463  000459                     _Rtcm_SystemDate:
  2464                           	opt stack 0
  2465  000459                     	ds	8
  2466  000461                     Term_MainSm@Data:
  2467                           	opt stack 0
  2468  000461                     	ds	50
  2469  000493                     _smsText:
  2470                           	opt stack 0
  2471  000493                     	ds	20
  2472  0004A7                     _PhoneNumber:
  2473                           	opt stack 0
  2474  0004A7                     	ds	20
  2475  0004BB                     _EepromBuffer:
  2476                           	opt stack 0
  2477  0004BB                     	ds	15
  2478  0004CA                     Terminal@SwTimer:
  2479                           	opt stack 0
  2480  0004CA                     	ds	11
  2481  0004D5                     I2cSlv_QueryI2cData@QueryTimer:
  2482                           	opt stack 0
  2483  0004D5                     	ds	11
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1h	equ	0xFE2
  2492                           fsr1l	equ	0xFE1
  2493                           
  2494                           	psect	dataBANK4
  2495  0004E0                     __pdataBANK4:
  2496                           	opt stack 0
  2497  0004E0                     ModemEvtParser@F9116:
  2498                           	opt stack 0
  2499  0004E0                     	ds	10
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           postinc0	equ	0xFEE
  2505                           wreg	equ	0xFE8
  2506                           postdec1	equ	0xFE5
  2507                           fsr1h	equ	0xFE2
  2508                           fsr1l	equ	0xFE1
  2509                           
  2510                           	psect	bssBANK5
  2511  000500                     __pbssBANK5:
  2512                           	opt stack 0
  2513  000500                     _cdc_data_rx:
  2514                           	opt stack 0
  2515  000500                     	ds	64
  2516  000540                     Terminal@TermRxBuffer:
  2517                           	opt stack 0
  2518  000540                     	ds	50
  2519  000572                     _MessageText:
  2520                           	opt stack 0
  2521  000572                     	ds	50
  2522                           tblptru	equ	0xFF8
  2523                           tblptrh	equ	0xFF7
  2524                           tblptrl	equ	0xFF6
  2525                           tablat	equ	0xFF5
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           postdec1	equ	0xFE5
  2529                           fsr1h	equ	0xFE2
  2530                           fsr1l	equ	0xFE1
  2531                           
  2532                           	psect	dataBANK5
  2533  0005A4                     __pdataBANK5:
  2534                           	opt stack 0
  2535  0005A4                     _TaskTable:
  2536                           	opt stack 0
  2537  0005A4                     	ds	80
  2538                           tblptru	equ	0xFF8
  2539                           tblptrh	equ	0xFF7
  2540                           tblptrl	equ	0xFF6
  2541                           tablat	equ	0xFF5
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           fsr1h	equ	0xFE2
  2546                           fsr1l	equ	0xFE1
  2547                           
  2548                           	psect	bssBANK6
  2549  000600                     __pbssBANK6:
  2550                           	opt stack 0
  2551  000600                     _OsAlarms:
  2552                           	opt stack 0
  2553  000600                     	ds	220
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           postdec1	equ	0xFE5
  2561                           fsr1h	equ	0xFE2
  2562                           fsr1l	equ	0xFE1
  2563                           
  2564                           	psect	bssBANK7
  2565  000700                     __pbssBANK7:
  2566                           	opt stack 0
  2567  000700                     _Mdm_SmsRx:
  2568                           	opt stack 0
  2569  000700                     	ds	102
  2570  000766                     Terminal@Payload:
  2571                           	opt stack 0
  2572  000766                     	ds	80
  2573  0007B6                     _cdc_data_tx:
  2574                           	opt stack 0
  2575  0007B6                     	ds	64
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           
  2586                           	psect	bssBANK8
  2587  000800                     __pbssBANK8:
  2588                           	opt stack 0
  2589  000800                     GsmGprsTerminal@UsbBuffer:
  2590                           	opt stack 0
  2591  000800                     	ds	200
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           
  2602                           	psect	bssBANK9
  2603  000900                     __pbssBANK9:
  2604                           	opt stack 0
  2605  000900                     GsmGprsTerminal@UartBuffer:
  2606                           	opt stack 0
  2607  000900                     	ds	200
  2608                           tblptru	equ	0xFF8
  2609                           tblptrh	equ	0xFF7
  2610                           tblptrl	equ	0xFF6
  2611                           tablat	equ	0xFF5
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postdec1	equ	0xFE5
  2615                           fsr1h	equ	0xFE2
  2616                           fsr1l	equ	0xFE1
  2617                           
  2618                           	psect	bssBIGRAMl
  2619  000AC8                     __pbssBIGRAMl:
  2620                           	opt stack 0
  2621  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2622                           	opt stack 0
  2623  000AC8                     	ds	400
  2624  000C58                     _RxBuffer:
  2625                           	opt stack 0
  2626  000C58                     	ds	400
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           postdec1	equ	0xFE5
  2634                           fsr1h	equ	0xFE2
  2635                           fsr1l	equ	0xFE1
  2636                           
  2637                           	psect	cstackBANK10
  2638  000A00                     __pcstackBANK10:
  2639                           	opt stack 0
  2640  000A00                     Terminal@UsbRxBuffer:
  2641                           	opt stack 0
  2642                           
  2643                           ; 200 bytes @ 0x0
  2644  000A00                     	ds	200
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           postdec1	equ	0xFE5
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           
  2655                           	psect	cstackBANK4
  2656  0004EA                     __pcstackBANK4:
  2657                           	opt stack 0
  2658  0004EA                     ??_ScheduleTasks:
  2659  0004EA                     InitializeTasks@ActiveTaskIndex:
  2660                           	opt stack 0
  2661                           
  2662                           ; 1 bytes @ 0x0
  2663  0004EA                     	ds	4
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           postdec1	equ	0xFE5
  2671                           fsr1h	equ	0xFE2
  2672                           fsr1l	equ	0xFE1
  2673                           
  2674                           	psect	cstackBANK3
  2675  0003FE                     __pcstackBANK3:
  2676                           	opt stack 0
  2677  0003FE                     ??_InitializeTasks:
  2678  0003FE                     ScheduleTasks@ActiveTaskIndex:
  2679                           	opt stack 0
  2680                           
  2681                           ; 1 bytes @ 0x0
  2682  0003FE                     	ds	2
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           postinc0	equ	0xFEE
  2688                           wreg	equ	0xFE8
  2689                           postdec1	equ	0xFE5
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           
  2693                           	psect	cstackBANK2
  2694  000200                     __pcstackBANK2:
  2695                           	opt stack 0
  2696  000200                     Terminal@UsbTxBuffer:
  2697                           	opt stack 0
  2698                           
  2699                           ; 200 bytes @ 0x0
  2700  000200                     	ds	200
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           postinc0	equ	0xFEE
  2706                           wreg	equ	0xFE8
  2707                           postdec1	equ	0xFE5
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           
  2711                           	psect	cstackBANK1
  2712  000100                     __pcstackBANK1:
  2713                           	opt stack 0
  2714  000100                     initEeprom@addressToRead:
  2715                           	opt stack 0
  2716  000100                     isNumberInMemory@phoneNumber:
  2717                           	opt stack 0
  2718  000100                     isMasterNumber@phoneNumber:
  2719                           	opt stack 0
  2720  000100                     findEmptySpot@readBuffer:
  2721                           	opt stack 0
  2722  000100                     SendSmsSm@UartMessage:
  2723                           	opt stack 0
  2724  000100                     InitGprsNetwork@UartMessage:
  2725                           	opt stack 0
  2726  000100                     Terminal@TermTxBuffer:
  2727                           	opt stack 0
  2728  000100                     HttpGetMethod@UartMessage:
  2729                           	opt stack 0
  2730                           
  2731                           ; 200 bytes @ 0x0
  2732  000100                     	ds	1
  2733  000101                     initEeprom@memoryOpResult:
  2734                           	opt stack 0
  2735                           
  2736                           ; 1 bytes @ 0x1
  2737  000101                     	ds	1
  2738  000102                     initEeprom@isInitialized:
  2739                           	opt stack 0
  2740  000102                     isNumberInMemory@readBuffer:
  2741                           	opt stack 0
  2742  000102                     isMasterNumber@readBuffer:
  2743                           	opt stack 0
  2744                           
  2745                           ; 13 bytes @ 0x2
  2746  000102                     	ds	1
  2747  000103                     initFsm@isInitialized:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x3
  2751  000103                     	ds	10
  2752  00010D                     findEmptySpot@memoryOpResult:
  2753                           	opt stack 0
  2754                           
  2755                           ; 1 bytes @ 0xD
  2756  00010D                     	ds	1
  2757  00010E                     findEmptySpot@positionInMemory:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0xE
  2761  00010E                     	ds	1
  2762  00010F                     isNumberInMemory@memoryOpResult:
  2763                           	opt stack 0
  2764  00010F                     isMasterNumber@memoryOpResult:
  2765                           	opt stack 0
  2766                           
  2767                           ; 1 bytes @ 0xF
  2768  00010F                     	ds	1
  2769  000110                     isNumberInMemory@positionInMemory:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x10
  2773  000110                     	ds	1
  2774  000111                     addCmdFsm@receivedNumber:
  2775                           	opt stack 0
  2776  000111                     delCmdFsm@receivedNumber:
  2777                           	opt stack 0
  2778  000111                     triggerCmdFsm@receivedNumber:
  2779                           	opt stack 0
  2780                           
  2781                           ; 2 bytes @ 0x11
  2782  000111                     	ds	2
  2783  000113                     triggerCmdFsm@isComplete:
  2784                           	opt stack 0
  2785  000113                     addCmdFsm@smsText:
  2786                           	opt stack 0
  2787  000113                     delCmdFsm@smsText:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x13
  2791  000113                     	ds	1
  2792  000114                     triggerCmdFsm@numberInMemory:
  2793                           	opt stack 0
  2794                           
  2795                           ; 1 bytes @ 0x14
  2796  000114                     	ds	1
  2797  000115                     addCmdFsm@isComplete:
  2798                           	opt stack 0
  2799  000115                     delCmdFsm@emptyNumber:
  2800                           	opt stack 0
  2801                           
  2802                           ; 13 bytes @ 0x15
  2803  000115                     	ds	1
  2804  000116                     addCmdFsm@numberInMemory:
  2805                           	opt stack 0
  2806                           
  2807                           ; 1 bytes @ 0x16
  2808  000116                     	ds	12
  2809  000122                     delCmdFsm@isComplete:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x22
  2813  000122                     	ds	1
  2814  000123                     delCmdFsm@numberInMemory:
  2815                           	opt stack 0
  2816                           
  2817                           ; 1 bytes @ 0x23
  2818  000123                     	ds	15
  2819  000132                     InitGprsNetwork@Index:
  2820                           	opt stack 0
  2821  000132                     Term_MainSm@FwkMajorStr:
  2822                           	opt stack 0
  2823                           
  2824                           ; 4 bytes @ 0x32
  2825  000132                     	ds	4
  2826  000136                     Term_MainSm@FwkMinorStr:
  2827                           	opt stack 0
  2828                           
  2829                           ; 4 bytes @ 0x36
  2830  000136                     	ds	4
  2831  00013A                     Term_MainSm@FwkBuildStr:
  2832                           	opt stack 0
  2833                           
  2834                           ; 4 bytes @ 0x3A
  2835  00013A                     	ds	142
  2836  0001C8                     HttpGetMethod@Index:
  2837                           	opt stack 0
  2838                           
  2839                           ; 1 bytes @ 0xC8
  2840  0001C8                     	ds	1
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           postdec1	equ	0xFE5
  2848                           fsr1h	equ	0xFE2
  2849                           fsr1l	equ	0xFE1
  2850                           
  2851                           	psect	cstackBANK0
  2852  000060                     __pcstackBANK0:
  2853                           	opt stack 0
  2854  000060                     
  2855                           ; 1 bytes @ 0x0
  2856  000060                     	ds	8
  2857  000068                     ??_LowPriorityIsr:
  2858                           
  2859                           ; 1 bytes @ 0x8
  2860  000068                     	ds	21
  2861  00007D                     ??_isdigit:
  2862  00007D                     ??_isspace:
  2863  00007D                     ??_isupper:
  2864  00007D                     ??_Rtcc_GetRtccValue:
  2865  00007D                     ??_UartTxBufferStatus:
  2866  00007D                     ??_USBStdGetDscHandler:
  2867  00007D                     ??_USBStdGetStatusHandler:
  2868  00007D                     ?_GetLastInteractionNumber:
  2869                           	opt stack 0
  2870  00007D                     ?_USBTransferOnePacket:
  2871                           	opt stack 0
  2872  00007D                     ?_strlen:
  2873                           	opt stack 0
  2874  00007D                     ?_sprintf:
  2875                           	opt stack 0
  2876  00007D                     ?_initPreamble:
  2877                           	opt stack 0
  2878  00007D                     ?___wmul:
  2879                           	opt stack 0
  2880  00007D                     ?___awdiv:
  2881                           	opt stack 0
  2882  00007D                     ?___awmod:
  2883                           	opt stack 0
  2884  00007D                     ?___lwmod:
  2885                           	opt stack 0
  2886  00007D                     ?_GetOsTickCounter:
  2887                           	opt stack 0
  2888  00007D                     ?___lmul:
  2889                           	opt stack 0
  2890  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2891                           	opt stack 0
  2892  00007D                     SetAckStatus@AckSts:
  2893                           	opt stack 0
  2894  00007D                     WriteByte@Byte:
  2895                           	opt stack 0
  2896  00007D                     ReadByte@Byte:
  2897                           	opt stack 0
  2898  00007D                     Mcu_SetWdgSts@WdgSts:
  2899                           	opt stack 0
  2900  00007D                     RtccIrqInit@Priority:
  2901                           	opt stack 0
  2902  00007D                     Rtcc_SetRtcStatus@Status:
  2903                           	opt stack 0
  2904  00007D                     TmrBInit@Prescaler:
  2905                           	opt stack 0
  2906  00007D                     Tmr_TmrBIrqSet@Priority:
  2907                           	opt stack 0
  2908  00007D                     Tmr_StartTmr@TmrNumb:
  2909                           	opt stack 0
  2910  00007D                     UartWriteByte@ByteToWrite:
  2911                           	opt stack 0
  2912  00007D                     USBTransferOnePacket@dir:
  2913                           	opt stack 0
  2914  00007D                     USBConfigureEndpoint@direction:
  2915                           	opt stack 0
  2916  00007D                     USBCtrlTrfTxService@byteToSend:
  2917                           	opt stack 0
  2918  00007D                     USBCtrlTrfRxService@i:
  2919                           	opt stack 0
  2920  00007D                     Led_SetLedStatus@LedSts:
  2921                           	opt stack 0
  2922  00007D                     toupper@c:
  2923                           	opt stack 0
  2924  00007D                     tolower@c:
  2925                           	opt stack 0
  2926  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2927                           	opt stack 0
  2928  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2929                           	opt stack 0
  2930  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2931                           	opt stack 0
  2932  00007D                     Uart_ClearRxBuffer@Index:
  2933                           	opt stack 0
  2934  00007D                     GenerateEvt@Event:
  2935                           	opt stack 0
  2936  00007D                     ReceiveEvt@Event:
  2937                           	opt stack 0
  2938  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2939                           	opt stack 0
  2940  00007D                     StringCompare@String1:
  2941                           	opt stack 0
  2942  00007D                     ClearBuffer@Buffer:
  2943                           	opt stack 0
  2944  00007D                     isNumberValid@phoneNumber:
  2945                           	opt stack 0
  2946  00007D                     sprintf@sp:
  2947                           	opt stack 0
  2948  00007D                     ___wmul@multiplier:
  2949                           	opt stack 0
  2950  00007D                     ___awdiv@dividend:
  2951                           	opt stack 0
  2952  00007D                     ___awmod@dividend:
  2953                           	opt stack 0
  2954  00007D                     ___lwmod@dividend:
  2955                           	opt stack 0
  2956  00007D                     memcpy@d1:
  2957                           	opt stack 0
  2958  00007D                     memset@p1:
  2959                           	opt stack 0
  2960  00007D                     strcat@to:
  2961                           	opt stack 0
  2962  00007D                     strcpy@to:
  2963                           	opt stack 0
  2964  00007D                     strlen@s:
  2965                           	opt stack 0
  2966  00007D                     ___lmul@multiplier:
  2967                           	opt stack 0
  2968                           
  2969                           ; 4 bytes @ 0x1D
  2970  00007D                     	ds	1
  2971  00007E                     ??_USBConfigureEndpoint:
  2972  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2973                           	opt stack 0
  2974  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2975                           	opt stack 0
  2976  00007E                     TmrBInit@Postscaler:
  2977                           	opt stack 0
  2978  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2979                           	opt stack 0
  2980  00007E                     UartWriteByte@Module:
  2981                           	opt stack 0
  2982  00007E                     UartTxBufferStatus@Module:
  2983                           	opt stack 0
  2984  00007E                     USBCtrlTrfRxService@byteToRead:
  2985                           	opt stack 0
  2986  00007E                     USBCtrlTrfInHandler@lastDTS:
  2987                           	opt stack 0
  2988  00007E                     Led_SetLedStatus@Led:
  2989                           	opt stack 0
  2990  00007E                     _isdigit$6404:
  2991                           	opt stack 0
  2992  00007E                     _isspace$6673:
  2993                           	opt stack 0
  2994  00007E                     _isupper$6676:
  2995                           	opt stack 0
  2996  00007E                     I2c_WriteData@WritePacket:
  2997                           	opt stack 0
  2998  00007E                     Rtcc_RtcConfig@RtcConfig:
  2999                           	opt stack 0
  3000  00007E                     USBTransferOnePacket@data:
  3001                           	opt stack 0
  3002  00007E                     USBStdGetStatusHandler@p:
  3003                           	opt stack 0
  3004                           
  3005                           ; 2 bytes @ 0x1E
  3006  00007E                     	ds	1
  3007  00007F                     ??_strlen:
  3008  00007F                     ??_Rtcc_AlarmConfig:
  3009  00007F                     ??_TmrBInit:
  3010  00007F                     Irq_InitIntController@IntPriorityEn:
  3011                           	opt stack 0
  3012  00007F                     Rtcc_GetRtccValue@RetValue:
  3013                           	opt stack 0
  3014  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3015                           	opt stack 0
  3016  00007F                     UartTxBufferStatus@TxBufferStatus:
  3017                           	opt stack 0
  3018  00007F                     GenerateEvt@EventStatus:
  3019                           	opt stack 0
  3020  00007F                     isdigit@c:
  3021                           	opt stack 0
  3022  00007F                     isspace@c:
  3023                           	opt stack 0
  3024  00007F                     isupper@c:
  3025                           	opt stack 0
  3026  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3027                           	opt stack 0
  3028  00007F                     StringCompare@String2:
  3029                           	opt stack 0
  3030  00007F                     ClearBuffer@Len:
  3031                           	opt stack 0
  3032  00007F                     sprintf@f:
  3033                           	opt stack 0
  3034  00007F                     ___wmul@multiplicand:
  3035                           	opt stack 0
  3036  00007F                     ___awdiv@divisor:
  3037                           	opt stack 0
  3038  00007F                     ___awmod@divisor:
  3039                           	opt stack 0
  3040  00007F                     ___lwmod@divisor:
  3041                           	opt stack 0
  3042  00007F                     memcpy@s1:
  3043                           	opt stack 0
  3044  00007F                     memset@c:
  3045                           	opt stack 0
  3046  00007F                     strcat@from:
  3047                           	opt stack 0
  3048  00007F                     strcpy@from:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x1F
  3052  00007F                     	ds	1
  3053  000080                     ??_isalpha:
  3054  000080                     ??_isxdigit:
  3055  000080                     ??_I2c_WriteData:
  3056  000080                     ??_Rtcc_RtcConfig:
  3057  000080                     Rtcc_GetRtccValue@RegValue:
  3058                           	opt stack 0
  3059  000080                     TmrBInit@TmrNumb:
  3060                           	opt stack 0
  3061  000080                     ReceiveEvt@EventStatus:
  3062                           	opt stack 0
  3063  000080                     USBTransferOnePacket@len:
  3064                           	opt stack 0
  3065  000080                     isNumberValid@isNumberOk:
  3066                           	opt stack 0
  3067  000080                     I2c_ReadData@ReadPacket:
  3068                           	opt stack 0
  3069  000080                     Uart_WriteConstString@ConstStringToWrite:
  3070                           	opt stack 0
  3071  000080                     Uart_WriteString@StringToWrite:
  3072                           	opt stack 0
  3073  000080                     Uart_WriteStringLen@StringToWrite:
  3074                           	opt stack 0
  3075  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3076                           	opt stack 0
  3077  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3078                           	opt stack 0
  3079                           
  3080                           ; 2 bytes @ 0x20
  3081  000080                     	ds	1
  3082  000081                     ?_GetElapsedTime:
  3083                           	opt stack 0
  3084  000081                     ?_Rtcm_GetRtccDate:
  3085                           	opt stack 0
  3086  000081                     Mdm_IsSmsReceived@Ret:
  3087                           	opt stack 0
  3088  000081                     Mdm_IsRinging@Ret:
  3089                           	opt stack 0
  3090  000081                     I2cSlv_I2cReadMsgSts@Result:
  3091                           	opt stack 0
  3092  000081                     USBTransferOnePacket@ep:
  3093                           	opt stack 0
  3094  000081                     Led_SetLedBlinkTime@Led:
  3095                           	opt stack 0
  3096  000081                     isNumberValid@i:
  3097                           	opt stack 0
  3098  000081                     ___awdiv@counter:
  3099                           	opt stack 0
  3100  000081                     ___awmod@counter:
  3101                           	opt stack 0
  3102  000081                     ___lwmod@counter:
  3103                           	opt stack 0
  3104  000081                     _isalpha$6670:
  3105                           	opt stack 0
  3106  000081                     _isxdigit$6680:
  3107                           	opt stack 0
  3108  000081                     OsTmr_StartTimer@Timer:
  3109                           	opt stack 0
  3110  000081                     StringCompare@Len:
  3111                           	opt stack 0
  3112  000081                     ClearBuffer@Index:
  3113                           	opt stack 0
  3114  000081                     ___wmul@product:
  3115                           	opt stack 0
  3116  000081                     memcpy@n:
  3117                           	opt stack 0
  3118  000081                     memset@n:
  3119                           	opt stack 0
  3120  000081                     strcat@cp:
  3121                           	opt stack 0
  3122  000081                     strcpy@cp:
  3123                           	opt stack 0
  3124  000081                     strlen@cp:
  3125                           	opt stack 0
  3126  000081                     GetElapsedTime@StartTime:
  3127                           	opt stack 0
  3128  000081                     ___lmul@multiplicand:
  3129                           	opt stack 0
  3130                           
  3131                           ; 4 bytes @ 0x21
  3132  000081                     	ds	1
  3133  000082                     ??_I2c_ReadData:
  3134  000082                     Uart_WriteConstString@Module:
  3135                           	opt stack 0
  3136  000082                     Uart_WriteString@Module:
  3137                           	opt stack 0
  3138  000082                     Uart_WriteStringLen@Len:
  3139                           	opt stack 0
  3140  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3141                           	opt stack 0
  3142  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3143                           	opt stack 0
  3144  000082                     USBConfigureEndpoint@EPNum:
  3145                           	opt stack 0
  3146  000082                     ___awdiv@sign:
  3147                           	opt stack 0
  3148  000082                     ___awmod@sign:
  3149                           	opt stack 0
  3150  000082                     isalpha@c:
  3151                           	opt stack 0
  3152  000082                     isxdigit@c:
  3153                           	opt stack 0
  3154  000082                     USBTransferOnePacket@handle:
  3155                           	opt stack 0
  3156                           
  3157                           ; 2 bytes @ 0x22
  3158  000082                     	ds	1
  3159  000083                     ?_GetCallerNumber:
  3160                           	opt stack 0
  3161  000083                     ?_atoi:
  3162                           	opt stack 0
  3163  000083                     ?_xtoi:
  3164                           	opt stack 0
  3165  000083                     ?___lwdiv:
  3166                           	opt stack 0
  3167  000083                     Uart_WriteStringLen@Index:
  3168                           	opt stack 0
  3169  000083                     Mdm_SetSmsFormat@Index:
  3170                           	opt stack 0
  3171  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3172                           	opt stack 0
  3173  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3174                           	opt stack 0
  3175  000083                     getSetupCall@isCalledReceived:
  3176                           	opt stack 0
  3177  000083                     sprintf@flag:
  3178                           	opt stack 0
  3179  000083                     memcpy@tmp:
  3180                           	opt stack 0
  3181  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3182                           	opt stack 0
  3183  000083                     USBConfigureEndpoint@handle:
  3184                           	opt stack 0
  3185  000083                     putUSBUSART@data:
  3186                           	opt stack 0
  3187  000083                     atoi@s:
  3188                           	opt stack 0
  3189  000083                     ___awdiv@quotient:
  3190                           	opt stack 0
  3191  000083                     ___lwdiv@dividend:
  3192                           	opt stack 0
  3193  000083                     memset@p:
  3194                           	opt stack 0
  3195  000083                     xtoi@s:
  3196                           	opt stack 0
  3197  000083                     OsTmr_StartTimer@Timeout:
  3198                           	opt stack 0
  3199                           
  3200                           ; 4 bytes @ 0x23
  3201  000083                     	ds	1
  3202  000084                     Uart_WriteStringLen@Module:
  3203                           	opt stack 0
  3204  000084                     I2cSlv_SendI2cMsg@TxSts:
  3205                           	opt stack 0
  3206  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3207                           	opt stack 0
  3208  000084                     CDCTxService@i:
  3209                           	opt stack 0
  3210  000084                     getsUSBUSART@buffer:
  3211                           	opt stack 0
  3212  000084                     sprintf@ap:
  3213                           	opt stack 0
  3214  000084                     memcpy@d:
  3215                           	opt stack 0
  3216  000084                     Mdm_SetSmsFormat@UartMessage:
  3217                           	opt stack 0
  3218                           
  3219                           ; 20 bytes @ 0x24
  3220  000084                     	ds	1
  3221  000085                     ??_atoi:
  3222  000085                     ??_xtoi:
  3223  000085                     ??_GetElapsedTime:
  3224  000085                     Rtcc_SetRtccValue@Value:
  3225                           	opt stack 0
  3226  000085                     USBDeviceInit@i:
  3227                           	opt stack 0
  3228  000085                     USBEnableEndpoint@options:
  3229                           	opt stack 0
  3230  000085                     putUSBUSART@length:
  3231                           	opt stack 0
  3232  000085                     CDCTxService@byte_to_send:
  3233                           	opt stack 0
  3234  000085                     Eeprom_Reset@SlaveAddress:
  3235                           	opt stack 0
  3236  000085                     StringCompare@Result:
  3237                           	opt stack 0
  3238  000085                     triggerRelay@res:
  3239                           	opt stack 0
  3240  000085                     StringCopy@SourceStr:
  3241                           	opt stack 0
  3242  000085                     ___lwdiv@divisor:
  3243                           	opt stack 0
  3244  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3245                           	opt stack 0
  3246  000085                     ___lmul@product:
  3247                           	opt stack 0
  3248                           
  3249                           ; 4 bytes @ 0x25
  3250  000085                     	ds	1
  3251  000086                     ??_Rtcc_SetRtccValue:
  3252  000086                     getsUSBUSART@len:
  3253                           	opt stack 0
  3254  000086                     triggerRelay@isRelayOn:
  3255                           	opt stack 0
  3256  000086                     sprintf@c:
  3257                           	opt stack 0
  3258  000086                     USBEnableEndpoint@p:
  3259                           	opt stack 0
  3260  000086                     StringCompare@Index:
  3261                           	opt stack 0
  3262  000086                     memcpy@s:
  3263                           	opt stack 0
  3264                           
  3265                           ; 2 bytes @ 0x26
  3266  000086                     	ds	1
  3267  000087                     atoi@sign:
  3268                           	opt stack 0
  3269  000087                     ___lwdiv@counter:
  3270                           	opt stack 0
  3271  000087                     xtoi@sign:
  3272                           	opt stack 0
  3273  000087                     StringCopy@DestStr:
  3274                           	opt stack 0
  3275  000087                     triggerRelay@txBuffer:
  3276                           	opt stack 0
  3277  000087                     sprintf@cp:
  3278                           	opt stack 0
  3279                           
  3280                           ; 2 bytes @ 0x27
  3281  000087                     	ds	1
  3282  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3283                           	opt stack 0
  3284  000088                     USBEnableEndpoint@ep:
  3285                           	opt stack 0
  3286  000088                     atoi@a:
  3287                           	opt stack 0
  3288  000088                     ___lwdiv@quotient:
  3289                           	opt stack 0
  3290  000088                     xtoi@val:
  3291                           	opt stack 0
  3292  000088                     parseCommand@addNumberCmd:
  3293                           	opt stack 0
  3294                           
  3295                           ; 4 bytes @ 0x28
  3296  000088                     	ds	1
  3297  000089                     ??_Rtcm_GetRtccDate:
  3298  000089                     ?_strtol:
  3299                           	opt stack 0
  3300  000089                     ?___lldiv:
  3301                           	opt stack 0
  3302  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3303                           	opt stack 0
  3304  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3305                           	opt stack 0
  3306  000089                     StringCopy@Len:
  3307                           	opt stack 0
  3308  000089                     strtol@s:
  3309                           	opt stack 0
  3310  000089                     ___lldiv@dividend:
  3311                           	opt stack 0
  3312  000089                     Rtcm_SetRtccDate@Date:
  3313                           	opt stack 0
  3314                           
  3315                           ; 8 bytes @ 0x29
  3316  000089                     	ds	1
  3317  00008A                     xtoi@c:
  3318                           	opt stack 0
  3319  00008A                     LedBlinkStateMachine@LedBlink:
  3320                           	opt stack 0
  3321  00008A                     LedPulseStateMachine@LedPulse:
  3322                           	opt stack 0
  3323  00008A                     secondsAppTimer@counter:
  3324                           	opt stack 0
  3325  00008A                     utoa@buf:
  3326                           	opt stack 0
  3327  00008A                     Rtcm_GetRtccDate@LocalDate:
  3328                           	opt stack 0
  3329                           
  3330                           ; 8 bytes @ 0x2A
  3331  00008A                     	ds	1
  3332  00008B                     ??_StringCopy:
  3333  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3334                           	opt stack 0
  3335  00008B                     strtol@endptr:
  3336                           	opt stack 0
  3337                           
  3338                           ; 2 bytes @ 0x2B
  3339  00008B                     	ds	1
  3340  00008C                     LedPulseStateMachine@Led:
  3341                           	opt stack 0
  3342  00008C                     secondsAppTimer@isCyclic:
  3343                           	opt stack 0
  3344  00008C                     utoa@val:
  3345                           	opt stack 0
  3346  00008C                     parseCommand@deleteNumberCmd:
  3347                           	opt stack 0
  3348                           
  3349                           ; 4 bytes @ 0x2C
  3350  00008C                     	ds	1
  3351  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3352                           	opt stack 0
  3353  00008D                     StringCopy@Index:
  3354                           	opt stack 0
  3355  00008D                     strtol@base:
  3356                           	opt stack 0
  3357  00008D                     GetElapsedTime@TimeValue:
  3358                           	opt stack 0
  3359  00008D                     ___lldiv@divisor:
  3360                           	opt stack 0
  3361                           
  3362                           ; 4 bytes @ 0x2D
  3363  00008D                     	ds	1
  3364  00008E                     utoa@base:
  3365                           	opt stack 0
  3366                           
  3367                           ; 2 bytes @ 0x2E
  3368  00008E                     	ds	1
  3369  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3370  00008F                     ??_strtol:
  3371  00008F                     secondsAppTimer@seconds:
  3372                           	opt stack 0
  3373  00008F                     Mdm_GetSmsData@MessageText:
  3374                           	opt stack 0
  3375  00008F                     Eeprom_Write@WriteBuffer:
  3376                           	opt stack 0
  3377  00008F                     LedStateMachine@LedSts:
  3378                           	opt stack 0
  3379  00008F                     ModemEvtParser@CallReadyString:
  3380                           	opt stack 0
  3381                           
  3382                           ; 10 bytes @ 0x2F
  3383  00008F                     	ds	1
  3384  000090                     secondsAppTimer@isExpired:
  3385                           	opt stack 0
  3386  000090                     utoa@v:
  3387                           	opt stack 0
  3388  000090                     parseCommand@resetCmd:
  3389                           	opt stack 0
  3390                           
  3391                           ; 4 bytes @ 0x30
  3392  000090                     	ds	1
  3393  000091                     ??_USBStdFeatureReqHandler:
  3394  000091                     Mdm_GetSmsData@GetSmsStatus:
  3395                           	opt stack 0
  3396  000091                     USBStdSetCfgHandler@i:
  3397                           	opt stack 0
  3398  000091                     Eeprom_Write@DataLength:
  3399                           	opt stack 0
  3400  000091                     LedStateMachine@LedOut:
  3401                           	opt stack 0
  3402  000091                     secondsAppTimer@destinationTicks:
  3403                           	opt stack 0
  3404  000091                     GetElapsedTime@CurrentTimestamp:
  3405                           	opt stack 0
  3406  000091                     ___lldiv@quotient:
  3407                           	opt stack 0
  3408                           
  3409                           ; 4 bytes @ 0x31
  3410  000091                     	ds	1
  3411  000092                     Eeprom_Write@WriteSts:
  3412                           	opt stack 0
  3413  000092                     utoa@c:
  3414                           	opt stack 0
  3415  000092                     USBStdFeatureReqHandler@pUEP:
  3416                           	opt stack 0
  3417                           
  3418                           ; 2 bytes @ 0x32
  3419  000092                     	ds	1
  3420  000093                     Eeprom_Write@MemoryAddress:
  3421                           	opt stack 0
  3422  000093                     waitSetupCall@isCallArrived:
  3423                           	opt stack 0
  3424  000093                     strtol@sign:
  3425                           	opt stack 0
  3426  000093                     LedStateMachine@LedBlink:
  3427                           	opt stack 0
  3428  000093                     itoa@buf:
  3429                           	opt stack 0
  3430                           
  3431                           ; 2 bytes @ 0x33
  3432  000093                     	ds	1
  3433  000094                     USBStdFeatureReqHandler@current_ep_data:
  3434                           	opt stack 0
  3435  000094                     Eeprom_Write@SlaveAddress:
  3436                           	opt stack 0
  3437  000094                     parseCommand@state:
  3438                           	opt stack 0
  3439  000094                     strtol@a:
  3440                           	opt stack 0
  3441                           
  3442                           ; 4 bytes @ 0x34
  3443  000094                     	ds	1
  3444  000095                     Eeprom_Write@CommandLength:
  3445                           	opt stack 0
  3446  000095                     detectCmd@currentState:
  3447                           	opt stack 0
  3448  000095                     ___lldiv@counter:
  3449                           	opt stack 0
  3450  000095                     OsTmr_GetTimerStatus@Timer:
  3451                           	opt stack 0
  3452  000095                     USBStdFeatureReqHandler@p:
  3453                           	opt stack 0
  3454  000095                     LedStateMachine@LedPulse:
  3455                           	opt stack 0
  3456  000095                     itoa@val:
  3457                           	opt stack 0
  3458                           
  3459                           ; 2 bytes @ 0x35
  3460  000095                     	ds	1
  3461  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3462                           	opt stack 0
  3463  000096                     SetUartBaudRate@UartConfig:
  3464                           	opt stack 0
  3465  000096                     saveNumberInMemory@phoneNumber:
  3466                           	opt stack 0
  3467  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3468                           	opt stack 0
  3469                           
  3470                           ; 4 bytes @ 0x36
  3471  000096                     	ds	1
  3472  000097                     ??_USBCtrlEPService:
  3473  000097                     itoa@base:
  3474                           	opt stack 0
  3475                           
  3476                           ; 2 bytes @ 0x37
  3477  000097                     	ds	1
  3478  000098                     Tmr_TmrBPrSet@Prescaler:
  3479                           	opt stack 0
  3480  000098                     Mdm_SetSmsFormat@TextFormat:
  3481                           	opt stack 0
  3482  000098                     USBDeviceTasks@i:
  3483                           	opt stack 0
  3484  000098                     LedStateMachine@LedOutSts:
  3485                           	opt stack 0
  3486  000098                     saveNumberInMemory@address:
  3487                           	opt stack 0
  3488  000098                     strtol@c:
  3489                           	opt stack 0
  3490                           
  3491                           ; 1 bytes @ 0x38
  3492  000098                     	ds	1
  3493  000099                     Tmr_TmrBPrSet@Postscaler:
  3494                           	opt stack 0
  3495  000099                     SetUartBaudRate@Module:
  3496                           	opt stack 0
  3497  000099                     LedStateMachine@Led:
  3498                           	opt stack 0
  3499  000099                     initGprsModem@isInitialized:
  3500                           	opt stack 0
  3501  000099                     itoa@cp:
  3502                           	opt stack 0
  3503  000099                     ModemEvtParser@ClipString:
  3504                           	opt stack 0
  3505                           
  3506                           ; 5 bytes @ 0x39
  3507  000099                     	ds	1
  3508  00009A                     ??_Led_MainTask:
  3509  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3510                           	opt stack 0
  3511  00009A                     SetUartBaudRate@BaudRateRegister:
  3512                           	opt stack 0
  3513  00009A                     SetBaudRate@McuClockHz:
  3514                           	opt stack 0
  3515                           
  3516                           ; 4 bytes @ 0x3A
  3517  00009A                     	ds	1
  3518  00009B                     ??_SendSmsSm:
  3519  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3520                           	opt stack 0
  3521  00009B                     OsTmr_Wait@WaitTimer:
  3522                           	opt stack 0
  3523  00009B                     InitGprsNetwork@Apn:
  3524                           	opt stack 0
  3525  00009B                     HttpGetMethod@GetData:
  3526                           	opt stack 0
  3527                           
  3528                           ; 2 bytes @ 0x3B
  3529  00009B                     	ds	1
  3530  00009C                     SetUartBaudRate@DivisionFactor:
  3531                           	opt stack 0
  3532  00009C                     Tmr_TmrBPrSet@Divisor:
  3533                           	opt stack 0
  3534                           
  3535                           ; 4 bytes @ 0x3C
  3536  00009C                     	ds	1
  3537  00009D                     ??_HttpGetMethod:
  3538  00009D                     InitGprsNetwork@ApnLen:
  3539                           	opt stack 0
  3540  00009D                     Uart_InitUartModule@UartConfig:
  3541                           	opt stack 0
  3542  00009D                     OsTmr_Wait@DelayMs:
  3543                           	opt stack 0
  3544                           
  3545                           ; 4 bytes @ 0x3D
  3546  00009D                     	ds	1
  3547  00009E                     ??_SetBaudRate:
  3548  00009E                     ??_InitGprsNetwork:
  3549  00009E                     ModemEvtParser@SmsString:
  3550                           	opt stack 0
  3551                           
  3552                           ; 5 bytes @ 0x3E
  3553  00009E                     	ds	1
  3554  00009F                     ??_Uart_InitUartModule:
  3555                           
  3556                           ; 1 bytes @ 0x3F
  3557  00009F                     	ds	1
  3558  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3559                           	opt stack 0
  3560                           
  3561                           ; 2 bytes @ 0x40
  3562  0000A0                     	ds	1
  3563  0000A1                     Uart_InitUartModule@Module:
  3564                           	opt stack 0
  3565  0000A1                     OsTmr_Wait@Ret:
  3566                           	opt stack 0
  3567                           
  3568                           ; 1 bytes @ 0x41
  3569  0000A1                     	ds	1
  3570  0000A2                     ??_Terminal:
  3571  0000A2                     I2c_InitI2cModule@I2cConfig:
  3572                           	opt stack 0
  3573  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x42
  3577  0000A2                     	ds	1
  3578  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3579                           	opt stack 0
  3580  0000A3                     ModemEvtParser@RingString:
  3581                           	opt stack 0
  3582                           
  3583                           ; 4 bytes @ 0x43
  3584  0000A3                     	ds	1
  3585  0000A4                     ??_I2c_InitI2cModule:
  3586  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3587                           	opt stack 0
  3588  0000A4                     Terminal@i:
  3589                           	opt stack 0
  3590  0000A4                     InitSchedTimer@TmrBConfig:
  3591                           	opt stack 0
  3592                           
  3593                           ; 7 bytes @ 0x44
  3594  0000A4                     	ds	1
  3595  0000A5                     Terminal@ReceivedBytes:
  3596                           	opt stack 0
  3597  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3598                           	opt stack 0
  3599                           
  3600                           ; 2 bytes @ 0x45
  3601  0000A5                     	ds	1
  3602  0000A6                     Terminal@Index:
  3603                           	opt stack 0
  3604                           
  3605                           ; 1 bytes @ 0x46
  3606  0000A6                     	ds	1
  3607  0000A7                     ModemEvtParser@Match:
  3608                           	opt stack 0
  3609  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3610                           	opt stack 0
  3611                           
  3612                           ; 1 bytes @ 0x47
  3613  0000A7                     	ds	1
  3614  0000A8                     ModemEvtParser@CompareIdx:
  3615                           	opt stack 0
  3616  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3617                           	opt stack 0
  3618                           
  3619                           ; 1 bytes @ 0x48
  3620  0000A8                     	ds	1
  3621  0000A9                     Eeprom_Read@ReadBuffer:
  3622                           	opt stack 0
  3623                           
  3624                           ; 2 bytes @ 0x49
  3625  0000A9                     	ds	2
  3626  0000AB                     Eeprom_Read@DataLength:
  3627                           	opt stack 0
  3628                           
  3629                           ; 1 bytes @ 0x4B
  3630  0000AB                     	ds	1
  3631  0000AC                     Eeprom_Read@MemoryAddress:
  3632                           	opt stack 0
  3633                           
  3634                           ; 1 bytes @ 0x4C
  3635  0000AC                     	ds	1
  3636  0000AD                     Eeprom_Read@SlaveAddress:
  3637                           	opt stack 0
  3638                           
  3639                           ; 1 bytes @ 0x4D
  3640  0000AD                     	ds	1
  3641  0000AE                     Eeprom_Read@ReadSts:
  3642                           	opt stack 0
  3643                           
  3644                           ; 1 bytes @ 0x4E
  3645  0000AE                     	ds	1
  3646  0000AF                     Eeprom_Read@QuerySts:
  3647                           	opt stack 0
  3648                           
  3649                           ; 1 bytes @ 0x4F
  3650  0000AF                     	ds	1
  3651  0000B0                     tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           postinc0	equ	0xFEE
  3656                           wreg	equ	0xFE8
  3657                           postdec1	equ	0xFE5
  3658                           fsr1h	equ	0xFE2
  3659                           fsr1l	equ	0xFE1
  3660                           
  3661                           ; 1 bytes @ 0x50
  3662                           
  3663                           	psect	cstackCOMRAM
  3664  000001                     __pcstackCOMRAM:
  3665                           	opt stack 0
  3666  000001                     i2GenerateEvt@Event:
  3667                           	opt stack 0
  3668                           
  3669                           ; 2 bytes @ 0x0
  3670  000001                     	ds	2
  3671  000003                     i2GenerateEvt@EventStatus:
  3672                           	opt stack 0
  3673                           
  3674                           ; 1 bytes @ 0x2
  3675  000003                     	ds	1
  3676  000004                     Uart_MdmGsmGprsReadService@UartData:
  3677                           	opt stack 0
  3678                           
  3679                           ; 1 bytes @ 0x3
  3680  000004                     	ds	1
  3681  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3682                           	opt stack 0
  3683                           
  3684                           ; 2 bytes @ 0x4
  3685  000005                     	ds	2
  3686  000007                     ??_HighPriorityIsr:
  3687                           
  3688                           ; 1 bytes @ 0x6
  3689  000007                     	ds	18
  3690  000019                     ?i1___wmul:
  3691                           	opt stack 0
  3692  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3693                           	opt stack 0
  3694  000019                     i1GenerateEvt@Event:
  3695                           	opt stack 0
  3696  000019                     i1___wmul@multiplier:
  3697                           	opt stack 0
  3698                           
  3699                           ; 2 bytes @ 0x18
  3700  000019                     	ds	2
  3701  00001B                     i1GenerateEvt@EventStatus:
  3702                           	opt stack 0
  3703  00001B                     i1___wmul@multiplicand:
  3704                           	opt stack 0
  3705                           
  3706                           ; 2 bytes @ 0x1A
  3707  00001B                     	ds	1
  3708  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3709                           	opt stack 0
  3710                           
  3711                           ; 2 bytes @ 0x1B
  3712  00001C                     	ds	1
  3713  00001D                     i1___wmul@product:
  3714                           	opt stack 0
  3715                           
  3716                           ; 2 bytes @ 0x1C
  3717  00001D                     	ds	1
  3718  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3719                           	opt stack 0
  3720                           
  3721                           ; 1 bytes @ 0x1D
  3722  00001E                     	ds	1
  3723  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3724                           	opt stack 0
  3725                           
  3726                           ; 1 bytes @ 0x1E
  3727  00001F                     	ds	1
  3728  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3729                           	opt stack 0
  3730                           
  3731                           ; 1 bytes @ 0x1F
  3732  000020                     	ds	1
  3733  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3734                           	opt stack 0
  3735                           
  3736                           ; 2 bytes @ 0x20
  3737  000021                     	ds	2
  3738  000023                     tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           fsr1h	equ	0xFE2
  3746                           fsr1l	equ	0xFE1
  3747                           
  3748                           ; 1 bytes @ 0x22
  3749 ;;
  3750 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3751 ;;
  3752 ;; *************** function _main *****************
  3753 ;; Defined at:
  3754 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   14[None  ] short 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels required when called:   23
  3774 ;; This function calls:
  3775 ;;		_Sch_MainScheduler
  3776 ;;		_SystemInit
  3777 ;; This function is called by:
  3778 ;;		Startup code after reset
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text0
  3783  006A2C                     __ptext0:
  3784                           	opt stack 0
  3785  006A2C                     _main:
  3786                           	opt stack 8
  3787                           
  3788                           ;main.c: 61: SystemInit();
  3789                           
  3790                           ;incstack = 0
  3791  006A2C  EC1B  F032         	call	_SystemInit	;wreg free
  3792                           
  3793                           ;main.c: 64: Sch_MainScheduler();
  3794  006A30  ECFD  F033         	call	_Sch_MainScheduler	;wreg free
  3795                           
  3796                           ;main.c: 67: return 0;
  3797                           ;	Return value of _main is never used
  3798  006A34  EF66  F000         	goto	start
  3799  006A38                     __end_of_main:
  3800                           	opt stack 0
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           postinc0	equ	0xFEE
  3806                           wreg	equ	0xFE8
  3807                           postdec1	equ	0xFE5
  3808                           fsr1h	equ	0xFE2
  3809                           fsr1l	equ	0xFE1
  3810                           
  3811 ;; *************** function _SystemInit *****************
  3812 ;; Defined at:
  3813 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:   15
  3834 ;; This function calls:
  3835 ;;		_InitSchedTimer
  3836 ;;		_Irq_InitIntController
  3837 ;;		_Mcu_ConfigExtInt
  3838 ;;		_Mcu_StartSystemPll
  3839 ;;		_Pm_DsReleasePinControl
  3840 ;;		_Tmr_RegisterTmr2IsrCallback
  3841 ;; This function is called by:
  3842 ;;		_main
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text1
  3847  006436                     __ptext1:
  3848                           	opt stack 0
  3849  006436                     _SystemInit:
  3850                           	opt stack 15
  3851                           
  3852                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3853                           
  3854                           ;incstack = 0
  3855  006436  EC44  F035         	call	_Pm_DsReleasePinControl	;wreg free
  3856                           
  3857                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3858  00643A  ECEE  F033         	call	_Mcu_StartSystemPll	;wreg free
  3859                           
  3860                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3861  00643E  0E01               	movlw	1
  3862  006440  0100               	movlb	0	; () banked
  3863  006442  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3864  006444  0E01               	movlw	1
  3865  006446  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3866  006448  0E01               	movlw	1
  3867  00644A  ECBF  F032         	call	_Irq_InitIntController
  3868                           
  3869                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3870  00644E  0E10               	movlw	low _Sch_SchmIntService
  3871  006450  0100               	movlb	0	; () banked
  3872  006452  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3873  006454  0E6A               	movlw	high _Sch_SchmIntService
  3874  006456  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3875  006458  EC27  F035         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3876                           
  3877                           ;sys_init.c: 132: InitSchedTimer();
  3878  00645C  EC7B  F032         	call	_InitSchedTimer	;wreg free
  3879                           
  3880                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3881  006460  EC37  F034         	call	_Mcu_ConfigExtInt	;wreg free
  3882  006464  0012               	return		;funcret
  3883  006466                     __end_of_SystemInit:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           postdec1	equ	0xFE5
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           
  3895 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3896 ;; Defined at:
  3897 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3900 ;;		 -> Sch_SchmIntService(1), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:   11
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_SystemInit
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text2
  3927  006A4E                     __ptext2:
  3928                           	opt stack 0
  3929  006A4E                     _Tmr_RegisterTmr2IsrCallback:
  3930                           	opt stack 18
  3931                           
  3932                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3933                           
  3934                           ;incstack = 0
  3935  006A4E  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3936  006A52  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3937  006A56  0012               	return		;funcret
  3938  006A58                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           postdec1	equ	0xFE5
  3947                           fsr1h	equ	0xFE2
  3948                           fsr1l	equ	0xFE1
  3949                           
  3950 ;; *************** function _Pm_DsReleasePinControl *****************
  3951 ;; Defined at:
  3952 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		None
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:   11
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_SystemInit
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text3
  3981  006A88                     __ptext3:
  3982                           	opt stack 0
  3983  006A88                     _Pm_DsReleasePinControl:
  3984                           	opt stack 18
  3985                           
  3986                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3987                           
  3988                           ;incstack = 0
  3989  006A88  010F               	movlb	15	; () banked
  3990  006A8A  914C               	bcf	76,0,b	;volatile
  3991                           
  3992                           ; BSR set to: 15
  3993  006A8C  0012               	return		;funcret
  3994  006A8E                     __end_of_Pm_DsReleasePinControl:
  3995                           	opt stack 0
  3996                           tblptru	equ	0xFF8
  3997                           tblptrh	equ	0xFF7
  3998                           tblptrl	equ	0xFF6
  3999                           tablat	equ	0xFF5
  4000                           postinc0	equ	0xFEE
  4001                           wreg	equ	0xFE8
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           
  4006 ;; *************** function _Mcu_StartSystemPll *****************
  4007 ;; Defined at:
  4008 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      void 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:   11
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_SystemInit
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text4
  4037  0067DC                     __ptext4:
  4038                           	opt stack 0
  4039  0067DC                     _Mcu_StartSystemPll:
  4040                           	opt stack 18
  4041                           
  4042                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;incstack = 0
  4046  0067DC  0E03               	movlw	3
  4047  0067DE  0100               	movlb	0	; () banked
  4048  0067E0  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4049  0067E2  0EE8               	movlw	232
  4050  0067E4  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4054  0067E6  8C9B               	bsf	3995,6,c	;volatile
  4055  0067E8                     l12142:
  4056                           
  4057                           ; BSR set to: 0
  4058  0067E8  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4059  0067EA  A0D8               	btfss	status,0,c
  4060  0067EC  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4061  0067EE  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4062  0067F0  E1FB               	bnz	l12142
  4063  0067F2  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4064  0067F4  B4D8               	btfsc	status,2,c
  4065  0067F6  0012               	return	
  4066  0067F8  D7F7               	goto	l237
  4067  0067FA                     __end_of_Mcu_StartSystemPll:
  4068                           	opt stack 0
  4069                           tblptru	equ	0xFF8
  4070                           tblptrh	equ	0xFF7
  4071                           tblptrl	equ	0xFF6
  4072                           tablat	equ	0xFF5
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           postdec1	equ	0xFE5
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function _Mcu_ConfigExtInt *****************
  4081 ;; Defined at:
  4082 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:   11
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_SystemInit
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text5
  4111  00686E                     __ptext5:
  4112                           	opt stack 0
  4113  00686E                     _Mcu_ConfigExtInt:
  4114                           	opt stack 18
  4115                           
  4116                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120  00686E  8093               	bsf	3987,0,c	;volatile
  4121                           
  4122                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4123  006870  8695               	bsf	3989,3,c	;volatile
  4124                           
  4125                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4126  006872  010F               	movlb	15	; () banked
  4127  006874  8949               	bsf	73,4,b	;volatile
  4128                           
  4129                           ; BSR set to: 15
  4130                           ;mcu_drv.c: 108: RPINR1 = 20;
  4131  006876  0E14               	movlw	20
  4132  006878  010E               	movlb	14	; () banked
  4133  00687A  6FE7               	movwf	231,b	;volatile
  4134                           
  4135                           ; BSR set to: 14
  4136                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4137  00687C  88F2               	bsf	intcon,4,c	;volatile
  4138                           
  4139                           ; BSR set to: 14
  4140                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4141  00687E  86F0               	bsf	intcon3,3,c	;volatile
  4142                           
  4143                           ; BSR set to: 14
  4144                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4145  006880  8CF0               	bsf	intcon3,6,c	;volatile
  4146                           
  4147                           ; BSR set to: 14
  4148                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4149  006882  9CF1               	bcf	intcon2,6,c	;volatile
  4150                           
  4151                           ; BSR set to: 14
  4152                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4153  006884  9AF1               	bcf	intcon2,5,c	;volatile
  4154                           
  4155                           ; BSR set to: 14
  4156  006886  0012               	return		;funcret
  4157  006888                     __end_of_Mcu_ConfigExtInt:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           intcon	equ	0xFF2
  4164                           intcon2	equ	0xFF1
  4165                           intcon3	equ	0xFF0
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           postdec1	equ	0xFE5
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function _Irq_InitIntController *****************
  4174 ;; Defined at:
  4175 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  IntPriorityE    1    wreg     enum E7720
  4178 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4179 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;Total ram usage:        3 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:   11
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_SystemInit
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text6
  4206  00657E                     __ptext6:
  4207                           	opt stack 0
  4208  00657E                     _Irq_InitIntController:
  4209                           	opt stack 18
  4210                           
  4211                           ; BSR set to: 14
  4212                           ;incstack = 0
  4213                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4214  00657E  0100               	movlb	0	; () banked
  4215  006580  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4216                           
  4217                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4218  006582  0100               	movlb	0	; () banked
  4219  006584  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4220  006586  D002               	bra	u10625
  4221  006588  9ED0               	bcf	4048,7,c	;volatile
  4222  00658A  D001               	bra	u10626
  4223  00658C                     u10625:
  4224  00658C  8ED0               	bsf	4048,7,c	;volatile
  4225  00658E                     u10626:
  4226                           
  4227                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4228  00658E  0100               	movlb	0	; () banked
  4229  006590  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4230  006592  D002               	bra	u10635
  4231  006594  9EF2               	bcf	intcon,7,c	;volatile
  4232  006596  D001               	bra	u10636
  4233  006598                     u10635:
  4234  006598  8EF2               	bsf	intcon,7,c	;volatile
  4235  00659A                     u10636:
  4236                           
  4237                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4238  00659A  0100               	movlb	0	; () banked
  4239  00659C  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4240  00659E  D002               	bra	u10645
  4241  0065A0  9CF2               	bcf	intcon,6,c	;volatile
  4242  0065A2  D001               	bra	u10646
  4243  0065A4                     u10645:
  4244  0065A4  8CF2               	bsf	intcon,6,c	;volatile
  4245  0065A6                     u10646:
  4246  0065A6  0012               	return		;funcret
  4247  0065A8                     __end_of_Irq_InitIntController:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           intcon	equ	0xFF2
  4254                           intcon2	equ	0xFF1
  4255                           intcon3	equ	0xFF0
  4256                           postinc0	equ	0xFEE
  4257                           wreg	equ	0xFE8
  4258                           postdec1	equ	0xFE5
  4259                           fsr1h	equ	0xFE2
  4260                           fsr1l	equ	0xFE1
  4261                           status	equ	0xFD8
  4262                           
  4263 ;; *************** function _InitSchedTimer *****************
  4264 ;; Defined at:
  4265 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4280 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;Total ram usage:        7 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:   14
  4286 ;; This function calls:
  4287 ;;		_Tmr_TmrBConfig
  4288 ;; This function is called by:
  4289 ;;		_SystemInit
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text7
  4294  0064F6                     __ptext7:
  4295                           	opt stack 0
  4296  0064F6                     _InitSchedTimer:
  4297                           	opt stack 15
  4298                           
  4299                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4300                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4301                           
  4302                           ;incstack = 0
  4303  0064F6  0E04               	movlw	4
  4304  0064F8  0100               	movlb	0	; () banked
  4305  0064FA  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4306                           
  4307                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4308  0064FC  0E0C               	movlw	12
  4309  0064FE  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4310                           
  4311                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4312  006500  0E00               	movlw	0
  4313  006502  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4314                           
  4315                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4316  006504  0E01               	movlw	1
  4317  006506  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4318                           
  4319                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4320  006508  0E03               	movlw	3
  4321  00650A  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4322  00650C  0EE8               	movlw	232
  4323  00650E  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4324                           
  4325                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4326  006510  0E01               	movlw	1
  4327  006512  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4331  006514  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4332  006516  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4333  006518  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4334  00651A  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4335  00651C  0E02               	movlw	2
  4336  00651E  ECA2  F01E         	call	_Tmr_TmrBConfig
  4337  006522  0012               	return		;funcret
  4338  006524                     __end_of_InitSchedTimer:
  4339                           	opt stack 0
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           intcon	equ	0xFF2
  4345                           intcon2	equ	0xFF1
  4346                           intcon3	equ	0xFF0
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           postdec1	equ	0xFE5
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           status	equ	0xFD8
  4353                           
  4354 ;; *************** function _Tmr_TmrBConfig *****************
  4355 ;; Defined at:
  4356 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  TmrNumb         1    wreg     unsigned char 
  4359 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4360 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;Total ram usage:        4 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:   13
  4379 ;; This function calls:
  4380 ;;		_TmrBInit
  4381 ;;		_Tmr_StartTmr
  4382 ;;		_Tmr_TmrBIrqSet
  4383 ;;		_Tmr_TmrBPrSet
  4384 ;; This function is called by:
  4385 ;;		_InitSchedTimer
  4386 ;;		_InitAuxTimer
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text8
  4391  003D44                     __ptext8:
  4392                           	opt stack 0
  4393  003D44                     _Tmr_TmrBConfig:
  4394                           	opt stack 15
  4395                           
  4396                           ;incstack = 0
  4397                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4398  003D44  0100               	movlb	0	; () banked
  4399  003D46  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4400                           
  4401                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4402  003D48  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4403  003D4C  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4404  003D50  50DF               	movf	indf2,w,c
  4405  003D52  0100               	movlb	0	; () banked
  4406  003D54  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4407  003D56  EE20 F001          	lfsr	2,1
  4408  003D5A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4409  003D5C  26D9               	addwf	fsr2l,f,c
  4410  003D5E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4411  003D60  22DA               	addwfc	fsr2h,f,c
  4412  003D62  50DF               	movf	indf2,w,c
  4413  003D64  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4414  003D66  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4415  003D68  EC7F  F025         	call	_TmrBInit
  4416                           
  4417                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4418  003D6C  0100               	movlb	0	; () banked
  4419  003D6E  EE20 F002          	lfsr	2,2
  4420  003D72  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4421  003D74  26D9               	addwf	fsr2l,f,c
  4422  003D76  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4423  003D78  22DA               	addwfc	fsr2h,f,c
  4424  003D7A  04DE               	decf	postinc2,w,c
  4425  003D7C  A4D8               	btfss	status,2,c
  4426  003D7E  D00E               	goto	l546
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;tmr_drv.c: 277: {
  4430                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4431  003D80  EE20 F003          	lfsr	2,3
  4432  003D84  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4433  003D86  26D9               	addwf	fsr2l,f,c
  4434  003D88  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4435  003D8A  22DA               	addwfc	fsr2h,f,c
  4436  003D8C  50DF               	movf	indf2,w,c
  4437  003D8E  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4438  003D90  0E01               	movlw	1
  4439  003D92  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4440  003D94  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4441  003D96  EC0A  F02F         	call	_Tmr_TmrBIrqSet
  4442                           
  4443                           ;tmr_drv.c: 280: }
  4444  003D9A  D00E               	goto	l547
  4445  003D9C                     l546:
  4446                           
  4447                           ;tmr_drv.c: 281: else
  4448                           ;tmr_drv.c: 282: {
  4449                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4450  003D9C  0100               	movlb	0	; () banked
  4451  003D9E  EE20 F003          	lfsr	2,3
  4452  003DA2  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4453  003DA4  26D9               	addwf	fsr2l,f,c
  4454  003DA6  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4455  003DA8  22DA               	addwfc	fsr2h,f,c
  4456  003DAA  50DF               	movf	indf2,w,c
  4457  003DAC  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4458  003DAE  0E00               	movlw	0
  4459  003DB0  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4460  003DB2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4461  003DB4  EC0A  F02F         	call	_Tmr_TmrBIrqSet
  4462  003DB8                     l547:
  4463                           
  4464                           ;tmr_drv.c: 285: }
  4465                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4466  003DB8  0100               	movlb	0	; () banked
  4467  003DBA  EE20 F004          	lfsr	2,4
  4468  003DBE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4469  003DC0  26D9               	addwf	fsr2l,f,c
  4470  003DC2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4471  003DC4  22DA               	addwfc	fsr2h,f,c
  4472  003DC6  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4473  003DCA  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4474  003DCE  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4475  003DD2  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4476  003DD6  50DF               	movf	indf2,w,c
  4477  003DD8  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4478  003DDA  EE20 F001          	lfsr	2,1
  4479  003DDE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4480  003DE0  26D9               	addwf	fsr2l,f,c
  4481  003DE2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4482  003DE4  22DA               	addwfc	fsr2h,f,c
  4483  003DE6  50DF               	movf	indf2,w,c
  4484  003DE8  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4485  003DEA  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4486  003DEC  ECAA  F018         	call	_Tmr_TmrBPrSet
  4487                           
  4488                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4489  003DF0  0100               	movlb	0	; () banked
  4490  003DF2  EE20 F006          	lfsr	2,6
  4491  003DF6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4492  003DF8  26D9               	addwf	fsr2l,f,c
  4493  003DFA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4494  003DFC  22DA               	addwfc	fsr2h,f,c
  4495  003DFE  04DE               	decf	postinc2,w,c
  4496  003E00  A4D8               	btfss	status,2,c
  4497  003E02  0012               	return	
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;tmr_drv.c: 290: {
  4501                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4502  003E04  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4503  003E06  ECBE  F033         	call	_Tmr_StartTmr
  4504                           
  4505                           ;tmr_drv.c: 293: }
  4506  003E0A  0012               	return	
  4507  003E0C                     __end_of_Tmr_TmrBConfig:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           intcon	equ	0xFF2
  4514                           intcon2	equ	0xFF1
  4515                           intcon3	equ	0xFF0
  4516                           postinc0	equ	0xFEE
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1h	equ	0xFE2
  4520                           fsr1l	equ	0xFE1
  4521                           indf2	equ	0xFDF
  4522                           postinc2	equ	0xFDE
  4523                           postdec2	equ	0xFDD
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function _Tmr_TmrBPrSet *****************
  4529 ;; Defined at:
  4530 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  TmrNumb         1    wreg     unsigned char 
  4533 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4534 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4535 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4538 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4539 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      enum E7736
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;Total ram usage:       10 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:   12
  4556 ;; This function calls:
  4557 ;;		___lldiv
  4558 ;;		___lmul
  4559 ;; This function is called by:
  4560 ;;		_Tmr_TmrBConfig
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text9
  4565  003154                     __ptext9:
  4566                           	opt stack 0
  4567  003154                     _Tmr_TmrBPrSet:
  4568                           	opt stack 15
  4569                           
  4570                           ;incstack = 0
  4571                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4572  003154  0100               	movlb	0	; () banked
  4573  003156  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4574                           
  4575                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4576                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4577  003158  0E00               	movlw	0
  4578  00315A  0100               	movlb	0	; () banked
  4579  00315C  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4580  00315E  0E00               	movlw	0
  4581  003160  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4582  003162  0E00               	movlw	0
  4583  003164  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4584  003166  0E00               	movlw	0
  4585  003168  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4589  00316A  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4590  00316C  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4591  00316E  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4592  003172  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4593  003176  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4594  003178  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4595  00317A  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4596  00317E  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4597  003182  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4598  003184  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4599  003186  EC4C  F02C         	call	___lmul	;wreg free
  4600  00318A  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4601  00318E  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4602  003192  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4603  003196  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4604                           
  4605                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4606  00319A  0E00               	movlw	0
  4607  00319C  0100               	movlb	0	; () banked
  4608  00319E  6F89               	movwf	___lldiv@dividend& (0+255),b
  4609  0031A0  0E1B               	movlw	27
  4610  0031A2  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4611  0031A4  0EB7               	movlw	183
  4612  0031A6  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4613  0031A8  0E00               	movlw	0
  4614  0031AA  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4615  0031AC  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4616  0031B0  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4617  0031B4  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4618  0031B8  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4619  0031BC  EC51  F028         	call	___lldiv	;wreg free
  4620  0031C0  0100               	movlb	0	; () banked
  4621  0031C2  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4622  0031C4  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4623  0031C6  E13A               	bnz	l15220
  4624  0031C8  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4625  0031CA  A0D8               	btfss	status,0,c
  4626  0031CC  D02D               	goto	l529
  4627  0031CE  D036               	goto	l528
  4628  0031D0                     
  4629                           ; BSR set to: 0
  4630                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4631                           
  4632                           ; BSR set to: 0
  4633  0031D0  0E00               	movlw	0
  4634  0031D2  6F89               	movwf	___lldiv@dividend& (0+255),b
  4635  0031D4  0E1B               	movlw	27
  4636  0031D6  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4637  0031D8  0EB7               	movlw	183
  4638  0031DA  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4639  0031DC  0E00               	movlw	0
  4640  0031DE  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4641  0031E0  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4642  0031E4  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4643  0031E8  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4644  0031EC  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4645  0031F0  EC51  F028         	call	___lldiv	;wreg free
  4646  0031F4  0100               	movlb	0	; () banked
  4647  0031F6  5189               	movf	?___lldiv& (0+255),w,b
  4648  0031F8  6ECB               	movwf	4043,c	;volatile
  4649                           
  4650                           ;tmr_drv.c: 210: break;
  4651  0031FA  D01D               	goto	l531
  4652  0031FC                     
  4653                           ; BSR set to: 0
  4654                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4655                           
  4656                           ; BSR set to: 0
  4657  0031FC  0E00               	movlw	0
  4658  0031FE  6F89               	movwf	___lldiv@dividend& (0+255),b
  4659  003200  0E1B               	movlw	27
  4660  003202  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4661  003204  0EB7               	movlw	183
  4662  003206  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4663  003208  0E00               	movlw	0
  4664  00320A  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4665  00320C  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4666  003210  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4667  003214  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4668  003218  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4669  00321C  EC51  F028         	call	___lldiv	;wreg free
  4670  003220  0100               	movlb	0	; () banked
  4671  003222  5189               	movf	?___lldiv& (0+255),w,b
  4672  003224  6E77               	movwf	3959,c	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;tmr_drv.c: 219: }
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;tmr_drv.c: 218: break;
  4679                           
  4680                           ;tmr_drv.c: 217: default:
  4681                           
  4682                           ;tmr_drv.c: 215: break;
  4683  003226  D007               	goto	l531
  4684  003228                     l529:
  4685                           
  4686                           ; BSR set to: 0
  4687                           
  4688                           ; BSR set to: 0
  4689  003228  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4690                           
  4691                           ; Switch size 1, requested type "space"
  4692                           ; Number of cases is 2, Range of values is 2 to 4
  4693                           ; switch strategies available:
  4694                           ; Name         Instructions Cycles
  4695                           ; simple_byte            7     4 (average)
  4696                           ;	Chosen strategy is simple_byte
  4697  00322A  0A02               	xorlw	2	; case 2
  4698  00322C  B4D8               	btfsc	status,2,c
  4699  00322E  D7D0               	goto	l530
  4700  003230  0A06               	xorlw	6	; case 4
  4701  003232  B4D8               	btfsc	status,2,c
  4702  003234  D7E3               	goto	l532
  4703  003236                     l531:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4707                           
  4708                           ; BSR set to: 0
  4709  003236  0E00               	movlw	0
  4710  003238  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4711                           
  4712                           ;tmr_drv.c: 223: }
  4713  00323A  0012               	return	
  4714  00323C                     l528:
  4715  00323C                     l15220:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;tmr_drv.c: 224: else
  4719                           ;tmr_drv.c: 225: {
  4720                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4721  00323C  0E01               	movlw	1
  4722  00323E  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4723                           
  4724                           ; BSR set to: 0
  4725  003240  0012               	return	
  4726  003242                     __end_of_Tmr_TmrBPrSet:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodh	equ	0xFF4
  4733                           prodl	equ	0xFF3
  4734                           intcon	equ	0xFF2
  4735                           intcon2	equ	0xFF1
  4736                           intcon3	equ	0xFF0
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1h	equ	0xFE2
  4741                           fsr1l	equ	0xFE1
  4742                           indf2	equ	0xFDF
  4743                           postinc2	equ	0xFDE
  4744                           postdec2	equ	0xFDD
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function _Tmr_TmrBIrqSet *****************
  4750 ;; Defined at:
  4751 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  TmrNumb         1    wreg     unsigned char 
  4754 ;;  Priority        1   29[BANK0 ] enum E7716
  4755 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;Total ram usage:        3 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:   11
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_Tmr_TmrBConfig
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text10
  4782  005E14                     __ptext10:
  4783                           	opt stack 0
  4784  005E14                     _Tmr_TmrBIrqSet:
  4785                           	opt stack 16
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;incstack = 0
  4789                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4790  005E14  0100               	movlb	0	; () banked
  4791  005E16  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4792                           
  4793                           ;tmr_drv.c: 156: switch (TmrNumb)
  4794  005E18  D01A               	goto	l520
  4795  005E1A                     l521:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4799  005E1A  929E               	bcf	3998,1,c	;volatile
  4800                           
  4801                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4802  005E1C  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4803  005E1E  D002               	bra	u9015
  4804  005E20  929F               	bcf	3999,1,c	;volatile
  4805  005E22  D001               	bra	u9016
  4806  005E24                     u9015:
  4807  005E24  829F               	bsf	3999,1,c	;volatile
  4808  005E26                     u9016:
  4809                           
  4810                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4811  005E26  0100               	movlb	0	; () banked
  4812  005E28  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4813  005E2A  D002               	bra	u9025
  4814  005E2C  929D               	bcf	3997,1,c	;volatile
  4815  005E2E  D001               	bra	u9026
  4816  005E30                     u9025:
  4817  005E30  829D               	bsf	3997,1,c	;volatile
  4818  005E32                     u9026:
  4819                           
  4820                           ;tmr_drv.c: 165: break;
  4821  005E32  0012               	return	
  4822  005E34                     l523:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4826  005E34  96A4               	bcf	4004,3,c	;volatile
  4827                           
  4828                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4829  005E36  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4830  005E38  D002               	bra	u9035
  4831  005E3A  96A5               	bcf	4005,3,c	;volatile
  4832  005E3C  D001               	bra	u9036
  4833  005E3E                     u9035:
  4834  005E3E  86A5               	bsf	4005,3,c	;volatile
  4835  005E40                     u9036:
  4836                           
  4837                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4838  005E40  0100               	movlb	0	; () banked
  4839  005E42  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4840  005E44  D002               	bra	u9045
  4841  005E46  96A3               	bcf	4003,3,c	;volatile
  4842  005E48  D001               	bra	u9046
  4843  005E4A                     u9045:
  4844  005E4A  86A3               	bsf	4003,3,c	;volatile
  4845  005E4C                     u9046:
  4846                           
  4847                           ;tmr_drv.c: 178: }
  4848                           
  4849                           ;tmr_drv.c: 177: break;
  4850                           
  4851                           ;tmr_drv.c: 176: default:
  4852                           
  4853                           ;tmr_drv.c: 174: break;
  4854  005E4C  0012               	return	
  4855  005E4E                     l520:
  4856  005E4E  0100               	movlb	0	; () banked
  4857  005E50  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4858                           
  4859                           ; Switch size 1, requested type "space"
  4860                           ; Number of cases is 2, Range of values is 2 to 4
  4861                           ; switch strategies available:
  4862                           ; Name         Instructions Cycles
  4863                           ; simple_byte            7     4 (average)
  4864                           ;	Chosen strategy is simple_byte
  4865  005E52  0A02               	xorlw	2	; case 2
  4866  005E54  B4D8               	btfsc	status,2,c
  4867  005E56  D7E1               	goto	l521
  4868  005E58  0A06               	xorlw	6	; case 4
  4869  005E5A  A4D8               	btfss	status,2,c
  4870  005E5C  0012               	return	
  4871  005E5E  D7EA               	goto	l523
  4872  005E60                     __end_of_Tmr_TmrBIrqSet:
  4873                           	opt stack 0
  4874                           tblptru	equ	0xFF8
  4875                           tblptrh	equ	0xFF7
  4876                           tblptrl	equ	0xFF6
  4877                           tablat	equ	0xFF5
  4878                           prodh	equ	0xFF4
  4879                           prodl	equ	0xFF3
  4880                           intcon	equ	0xFF2
  4881                           intcon2	equ	0xFF1
  4882                           intcon3	equ	0xFF0
  4883                           postinc0	equ	0xFEE
  4884                           wreg	equ	0xFE8
  4885                           postdec1	equ	0xFE5
  4886                           fsr1h	equ	0xFE2
  4887                           fsr1l	equ	0xFE1
  4888                           indf2	equ	0xFDF
  4889                           postinc2	equ	0xFDE
  4890                           postdec2	equ	0xFDD
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function _Tmr_StartTmr *****************
  4896 ;; Defined at:
  4897 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  TmrNumb         1    wreg     unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;Total ram usage:        1 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:   11
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_Tmr_TmrBConfig
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text11
  4926  00677C                     __ptext11:
  4927                           	opt stack 0
  4928  00677C                     _Tmr_StartTmr:
  4929                           	opt stack 16
  4930                           
  4931                           ;incstack = 0
  4932                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4933  00677C  0100               	movlb	0	; () banked
  4934  00677E  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4935                           
  4936                           ;tmr_drv.c: 245: switch (TmrNumb)
  4937  006780  D004               	goto	l538
  4938  006782                     l539:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4942  006782  84CA               	bsf	4042,2,c	;volatile
  4943                           
  4944                           ;tmr_drv.c: 250: break;
  4945  006784  0012               	return	
  4946  006786                     l541:
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4950  006786  8476               	bsf	3958,2,c	;volatile
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;tmr_drv.c: 259: }
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;tmr_drv.c: 258: break;
  4957                           
  4958                           ;tmr_drv.c: 257: default:
  4959                           
  4960                           ;tmr_drv.c: 255: break;
  4961  006788  0012               	return	
  4962  00678A                     l538:
  4963                           
  4964                           ; BSR set to: 0
  4965  00678A  0100               	movlb	0	; () banked
  4966  00678C  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4967                           
  4968                           ; Switch size 1, requested type "space"
  4969                           ; Number of cases is 2, Range of values is 2 to 4
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte            7     4 (average)
  4973                           ;	Chosen strategy is simple_byte
  4974  00678E  0A02               	xorlw	2	; case 2
  4975  006790  B4D8               	btfsc	status,2,c
  4976  006792  D7F7               	goto	l539
  4977  006794  0A06               	xorlw	6	; case 4
  4978  006796  A4D8               	btfss	status,2,c
  4979  006798  0012               	return	
  4980  00679A  D7F5               	goto	l541
  4981  00679C                     __end_of_Tmr_StartTmr:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           intcon	equ	0xFF2
  4990                           intcon2	equ	0xFF1
  4991                           intcon3	equ	0xFF0
  4992                           postinc0	equ	0xFEE
  4993                           wreg	equ	0xFE8
  4994                           postdec1	equ	0xFE5
  4995                           fsr1h	equ	0xFE2
  4996                           fsr1l	equ	0xFE1
  4997                           indf2	equ	0xFDF
  4998                           postinc2	equ	0xFDE
  4999                           postdec2	equ	0xFDD
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _TmrBInit *****************
  5005 ;; Defined at:
  5006 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  TmrNumb         1    wreg     unsigned char 
  5009 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5010 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5022 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;Total ram usage:        4 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:   11
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_Tmr_TmrBConfig
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text12
  5037  004AFE                     __ptext12:
  5038                           	opt stack 0
  5039  004AFE                     _TmrBInit:
  5040                           	opt stack 16
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;incstack = 0
  5044                           ;TmrBInit@TmrNumb stored from wreg
  5045  004AFE  0100               	movlb	0	; () banked
  5046  004B00  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5047                           
  5048                           ;tmr_drv.c: 75: switch (TmrNumb)
  5049  004B02  D03F               	goto	l500
  5050  004B04                     l503:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5054  004B04  90CA               	bcf	4042,0,c	;volatile
  5055  004B06  D001               	goto	L1
  5056  004B08                     l505:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5060  004B08  80CA               	bsf	4042,0,c	;volatile
  5061  004B0A                     L1:
  5062                           
  5063                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5064  004B0A  92CA               	bcf	4042,1,c	;volatile
  5065                           
  5066                           ;tmr_drv.c: 91: break;
  5067  004B0C  D00E               	goto	l504
  5068  004B0E                     l506:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5072  004B0E  80CA               	bsf	4042,0,c	;volatile
  5073                           
  5074                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5075  004B10  82CA               	bsf	4042,1,c	;volatile
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;tmr_drv.c: 100: }
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;tmr_drv.c: 99: break;
  5082                           
  5083                           ;tmr_drv.c: 98: default:
  5084                           
  5085                           ;tmr_drv.c: 96: break;
  5086  004B12  D00B               	goto	l504
  5087  004B14                     
  5088                           ; BSR set to: 0
  5089  004B14  0100               	movlb	0	; () banked
  5090  004B16  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5091                           
  5092                           ; Switch size 1, requested type "space"
  5093                           ; Number of cases is 3, Range of values is 1 to 16
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte           10     6 (average)
  5097                           ;	Chosen strategy is simple_byte
  5098  004B18  0A01               	xorlw	1	; case 1
  5099  004B1A  B4D8               	btfsc	status,2,c
  5100  004B1C  D7F3               	goto	l503
  5101  004B1E  0A05               	xorlw	5	; case 4
  5102  004B20  B4D8               	btfsc	status,2,c
  5103  004B22  D7F2               	goto	l505
  5104  004B24  0A14               	xorlw	20	; case 16
  5105  004B26  B4D8               	btfsc	status,2,c
  5106  004B28  D7F2               	goto	l506
  5107  004B2A                     l504:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5111                           
  5112                           ; BSR set to: 0
  5113  004B2A  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5114  004B2E  0EFF               	movlw	255
  5115  004B30  277F               	addwf	??_TmrBInit& (0+255),f,b
  5116  004B32  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5117  004B34  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5118  004B36  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5119  004B38  50CA               	movf	4042,w,c	;volatile
  5120  004B3A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5121  004B3C  0B87               	andlw	-121
  5122  004B3E  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5123  004B40  6ECA               	movwf	4042,c	;volatile
  5124                           
  5125                           ;tmr_drv.c: 104: break;
  5126  004B42  0012               	return	
  5127  004B44                     l511:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5131  004B44  9076               	bcf	3958,0,c	;volatile
  5132  004B46  D001               	goto	L2
  5133  004B48                     l513:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5137  004B48  8076               	bsf	3958,0,c	;volatile
  5138  004B4A                     L2:
  5139                           
  5140                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5141  004B4A  9276               	bcf	3958,1,c	;volatile
  5142                           
  5143                           ;tmr_drv.c: 120: break;
  5144  004B4C  D00D               	goto	l512
  5145  004B4E                     l514:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5149  004B4E  8076               	bsf	3958,0,c	;volatile
  5150                           
  5151                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5152  004B50  8276               	bsf	3958,1,c	;volatile
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;tmr_drv.c: 129: }
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;tmr_drv.c: 128: break;
  5159                           
  5160                           ;tmr_drv.c: 127: default:
  5161                           
  5162                           ;tmr_drv.c: 125: break;
  5163  004B52  D00A               	goto	l512
  5164  004B54                     
  5165                           ; BSR set to: 0
  5166                           
  5167                           ; BSR set to: 0
  5168  004B54  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5169                           
  5170                           ; Switch size 1, requested type "space"
  5171                           ; Number of cases is 3, Range of values is 1 to 16
  5172                           ; switch strategies available:
  5173                           ; Name         Instructions Cycles
  5174                           ; simple_byte           10     6 (average)
  5175                           ;	Chosen strategy is simple_byte
  5176  004B56  0A01               	xorlw	1	; case 1
  5177  004B58  B4D8               	btfsc	status,2,c
  5178  004B5A  D7F4               	goto	l511
  5179  004B5C  0A05               	xorlw	5	; case 4
  5180  004B5E  B4D8               	btfsc	status,2,c
  5181  004B60  D7F3               	goto	l513
  5182  004B62  0A14               	xorlw	20	; case 16
  5183  004B64  B4D8               	btfsc	status,2,c
  5184  004B66  D7F3               	goto	l514
  5185  004B68                     l512:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5189                           
  5190                           ; BSR set to: 0
  5191  004B68  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5192  004B6C  0EFF               	movlw	255
  5193  004B6E  277F               	addwf	??_TmrBInit& (0+255),f,b
  5194  004B70  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5195  004B72  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5196  004B74  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5197  004B76  5076               	movf	3958,w,c	;volatile
  5198  004B78  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5199  004B7A  0B87               	andlw	-121
  5200  004B7C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5201  004B7E  6E76               	movwf	3958,c	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;tmr_drv.c: 137: }
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;tmr_drv.c: 136: break;
  5208                           
  5209                           ;tmr_drv.c: 135: default:
  5210                           
  5211                           ;tmr_drv.c: 133: break;
  5212  004B80  0012               	return	
  5213  004B82                     l500:
  5214                           
  5215                           ; BSR set to: 0
  5216  004B82  0100               	movlb	0	; () banked
  5217  004B84  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5218                           
  5219                           ; Switch size 1, requested type "space"
  5220                           ; Number of cases is 2, Range of values is 2 to 4
  5221                           ; switch strategies available:
  5222                           ; Name         Instructions Cycles
  5223                           ; simple_byte            7     4 (average)
  5224                           ;	Chosen strategy is simple_byte
  5225  004B86  0A02               	xorlw	2	; case 2
  5226  004B88  B4D8               	btfsc	status,2,c
  5227  004B8A  D7C4               	goto	l502
  5228  004B8C  0A06               	xorlw	6	; case 4
  5229  004B8E  A4D8               	btfss	status,2,c
  5230  004B90  0012               	return	
  5231  004B92  D7E0               	goto	l510
  5232  004B94                     __end_of_TmrBInit:
  5233                           	opt stack 0
  5234                           tblptru	equ	0xFF8
  5235                           tblptrh	equ	0xFF7
  5236                           tblptrl	equ	0xFF6
  5237                           tablat	equ	0xFF5
  5238                           prodh	equ	0xFF4
  5239                           prodl	equ	0xFF3
  5240                           intcon	equ	0xFF2
  5241                           intcon2	equ	0xFF1
  5242                           intcon3	equ	0xFF0
  5243                           postinc0	equ	0xFEE
  5244                           wreg	equ	0xFE8
  5245                           postdec1	equ	0xFE5
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           indf2	equ	0xFDF
  5249                           postinc2	equ	0xFDE
  5250                           postdec2	equ	0xFDD
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255 ;; *************** function _Sch_MainScheduler *****************
  5256 ;; Defined at:
  5257 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:   22
  5278 ;; This function calls:
  5279 ;;		_InitializeTasks
  5280 ;;		_ScheduleTasks
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text13
  5287  0067FA                     __ptext13:
  5288                           	opt stack 0
  5289  0067FA                     _Sch_MainScheduler:
  5290                           	opt stack 8
  5291                           
  5292                           ;os_sched.c: 178: InitializeTasks();
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;incstack = 0
  5296  0067FA  EC0F  F029         	call	_InitializeTasks	;wreg free
  5297                           
  5298                           ;os_sched.c: 180: SystemState = RunningState;
  5299  0067FE  0E01               	movlw	1
  5300  006800  0100               	movlb	0	; () banked
  5301  006802  6FD5               	movwf	_SystemState& (0+255),b
  5302  006804                     
  5303                           ;os_sched.c: 188: {
  5304                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5305                           
  5306                           ; BSR set to: 0
  5307  006804  0102               	movlb	2	; () banked
  5308  006806  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5309  006808  A4D8               	btfss	status,2,c
  5310  00680A  D7FC               	goto	l790
  5311                           
  5312                           ; BSR set to: 2
  5313                           ;os_sched.c: 191: {
  5314                           ;os_sched.c: 196: ScheduleTasks();
  5315  00680C  EC7D  F016         	call	_ScheduleTasks	;wreg free
  5316                           
  5317                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5318  006810  0E01               	movlw	1
  5319  006812  0102               	movlb	2	; () banked
  5320  006814  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5321                           
  5322                           ; BSR set to: 2
  5323                           
  5324                           ; BSR set to: 2
  5325  006816  D7F6               	goto	l790
  5326  006818                     __end_of_Sch_MainScheduler:
  5327                           	opt stack 0
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           intcon2	equ	0xFF1
  5336                           intcon3	equ	0xFF0
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           fsr1h	equ	0xFE2
  5341                           fsr1l	equ	0xFE1
  5342                           indf2	equ	0xFDF
  5343                           postinc2	equ	0xFDE
  5344                           postdec2	equ	0xFDD
  5345                           fsr2h	equ	0xFDA
  5346                           fsr2l	equ	0xFD9
  5347                           status	equ	0xFD8
  5348                           
  5349 ;; *************** function _ScheduleTasks *****************
  5350 ;; Defined at:
  5351 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  ActiveTaskIn    1    0[BANK3 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5366 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Totals:         0       0       0       0       1       4       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;Total ram usage:        5 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:   21
  5372 ;; This function calls:
  5373 ;;		_I2cSlv_MainTask
  5374 ;;		_Led_MainTask
  5375 ;;		_MdmHttp_MainTask
  5376 ;;		_Mdm_DrvMainFn
  5377 ;;		_Mdm_MainTask
  5378 ;;		_MyApp_Task
  5379 ;;		_Rtcm_MainTask
  5380 ;;		_Term_MainTask
  5381 ;;		_UsbDevice_MainTask
  5382 ;;		_Wdg_MainTask
  5383 ;; This function is called by:
  5384 ;;		_Sch_MainScheduler
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text14
  5389  002CFA                     __ptext14:
  5390                           	opt stack 0
  5391  002CFA                     _ScheduleTasks:
  5392                           	opt stack 8
  5393                           
  5394                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5395                           
  5396                           ; BSR set to: 2
  5397                           ;incstack = 0
  5398  002CFA  0E00               	movlw	0
  5399  002CFC  0103               	movlb	3	; () banked
  5400  002CFE  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5401                           
  5402                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5403  002D00  0E00               	movlw	0
  5404  002D02  6FFE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5405  002D04                     l16468:
  5406                           
  5407                           ; BSR set to: 3
  5408  002D04  0E30               	movlw	low _TaskNumber
  5409  002D06  6EF6               	movwf	tblptrl,c
  5410  002D08                     	if	1	;There is more than 1 active tblptr byte
  5411  002D08  0EFC               	movlw	high _TaskNumber
  5412  002D0A  6EF7               	movwf	tblptrh,c
  5413  002D0C                     	endif
  5414  002D0C                     	if	0	;There are less than 3 active tblptr bytes
  5415  002D0C                     	endif
  5416  002D0C  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5417  002D0E  0104               	movlb	4	; () banked
  5418  002D10  6FEA               	movwf	??_ScheduleTasks& (0+255),b
  5419  002D12  6BEB               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5420  002D14  0009               	tblrd		*+
  5421  002D16  50F5               	movf	tablat,w,c
  5422  002D18  5DEA               	subwf	??_ScheduleTasks& (0+255),w,b
  5423  002D1A  0009               	tblrd		*+
  5424  002D1C  50F5               	movf	tablat,w,c
  5425  002D1E  59EB               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5426  002D20  B0D8               	btfsc	status,0,c
  5427  002D22  0012               	return	
  5428                           
  5429                           ; BSR set to: 4
  5430                           ;os_sched.c: 106: {
  5431                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5432                           
  5433                           ; BSR set to: 4
  5434                           
  5435                           ; BSR set to: 4
  5436  002D24  0103               	movlb	3	; () banked
  5437  002D26  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5438  002D28  0D08               	mullw	8
  5439  002D2A  0E03               	movlw	3
  5440  002D2C  26F3               	addwf	prodl,f,c
  5441  002D2E  0E00               	movlw	0
  5442  002D30  22F4               	addwfc	prodh,f,c
  5443  002D32  0EA4               	movlw	low _TaskTable
  5444  002D34  24F3               	addwf	prodl,w,c
  5445  002D36  6ED9               	movwf	fsr2l,c
  5446  002D38  0E05               	movlw	high _TaskTable
  5447  002D3A  20F4               	addwfc	prodh,w,c
  5448  002D3C  6EDA               	movwf	fsr2h,c
  5449  002D3E  2ADE               	incf	postinc2,f,c
  5450  002D40  0E00               	movlw	0
  5451  002D42  22DD               	addwfc	postdec2,f,c
  5452                           
  5453                           ; BSR set to: 3
  5454                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5455  002D44  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5456  002D46  0D08               	mullw	8
  5457  002D48  0E05               	movlw	5
  5458  002D4A  26F3               	addwf	prodl,f,c
  5459  002D4C  0E00               	movlw	0
  5460  002D4E  22F4               	addwfc	prodh,f,c
  5461  002D50  0EA4               	movlw	low _TaskTable
  5462  002D52  24F3               	addwf	prodl,w,c
  5463  002D54  6ED9               	movwf	fsr2l,c
  5464  002D56  0E05               	movlw	high _TaskTable
  5465  002D58  20F4               	addwfc	prodh,w,c
  5466  002D5A  6EDA               	movwf	fsr2h,c
  5467  002D5C  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5468  002D5E  0D08               	mullw	8
  5469  002D60  0E03               	movlw	3
  5470  002D62  26F3               	addwf	prodl,f,c
  5471  002D64  0E00               	movlw	0
  5472  002D66  22F4               	addwfc	prodh,f,c
  5473  002D68  0EA4               	movlw	low _TaskTable
  5474  002D6A  24F3               	addwf	prodl,w,c
  5475  002D6C  6EE1               	movwf	fsr1l,c
  5476  002D6E  0E05               	movlw	high _TaskTable
  5477  002D70  20F4               	addwfc	prodh,w,c
  5478  002D72  6EE2               	movwf	fsr1h,c
  5479  002D74  50DE               	movf	postinc2,w,c
  5480  002D76  5CE6               	subwf	postinc1,w,c
  5481  002D78  50DE               	movf	postinc2,w,c
  5482  002D7A  58E6               	subwfb	postinc1,w,c
  5483  002D7C  A0D8               	btfss	status,0,c
  5484  002D7E  D04E               	goto	l775
  5485                           
  5486                           ; BSR set to: 3
  5487                           ;os_sched.c: 111: {
  5488                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5489  002D80  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5490  002D82  0D08               	mullw	8
  5491  002D84  0E03               	movlw	3
  5492  002D86  26F3               	addwf	prodl,f,c
  5493  002D88  0E00               	movlw	0
  5494  002D8A  22F4               	addwfc	prodh,f,c
  5495  002D8C  0EA4               	movlw	low _TaskTable
  5496  002D8E  24F3               	addwf	prodl,w,c
  5497  002D90  6ED9               	movwf	fsr2l,c
  5498  002D92  0E05               	movlw	high _TaskTable
  5499  002D94  20F4               	addwfc	prodh,w,c
  5500  002D96  6EDA               	movwf	fsr2h,c
  5501  002D98  0E00               	movlw	0
  5502  002D9A  6EDE               	movwf	postinc2,c
  5503  002D9C  0E00               	movlw	0
  5504  002D9E  6EDD               	movwf	postdec2,c
  5505                           
  5506                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5507  002DA0  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5508  002DA2  0D08               	mullw	8
  5509  002DA4  0E02               	movlw	2
  5510  002DA6  26F3               	addwf	prodl,f,c
  5511  002DA8  0E00               	movlw	0
  5512  002DAA  22F4               	addwfc	prodh,f,c
  5513  002DAC  0EA4               	movlw	low _TaskTable
  5514  002DAE  24F3               	addwf	prodl,w,c
  5515  002DB0  6ED9               	movwf	fsr2l,c
  5516  002DB2  0E05               	movlw	high _TaskTable
  5517  002DB4  20F4               	addwfc	prodh,w,c
  5518  002DB6  6EDA               	movwf	fsr2h,c
  5519  002DB8  0E01               	movlw	1
  5520  002DBA  6EDF               	movwf	indf2,c
  5521                           
  5522                           ; BSR set to: 3
  5523                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5524  002DBC  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5525  002DBE  0D08               	mullw	8
  5526  002DC0  0EA4               	movlw	low _TaskTable
  5527  002DC2  24F3               	addwf	prodl,w,c
  5528  002DC4  6ED9               	movwf	fsr2l,c
  5529  002DC6  0E05               	movlw	high _TaskTable
  5530  002DC8  20F4               	addwfc	prodh,w,c
  5531  002DCA  6EDA               	movwf	fsr2h,c
  5532  002DCC  D801               	call	u16198
  5533  002DCE  D017               	goto	u16199
  5534  002DD0                     u16198:
  5535  002DD0  0005               	push	
  5536  002DD2  6EFA               	movwf	pclath,c
  5537  002DD4  50DE               	movf	postinc2,w,c
  5538  002DD6  6EFD               	movwf	tosl,c
  5539  002DD8  50DE               	movf	postinc2,w,c
  5540  002DDA  6EFE               	movwf	tosh,c
  5541  002DDC  50F8               	movf	tblptru,w,c
  5542  002DDE  6EFF               	movwf	tosu,c
  5543  002DE0  50FA               	movf	pclath,w,c
  5544  002DE2  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5545  002DE4  0D08               	mullw	8
  5546  002DE6  0E07               	movlw	7
  5547  002DE8  26F3               	addwf	prodl,f,c
  5548  002DEA  0E00               	movlw	0
  5549  002DEC  22F4               	addwfc	prodh,f,c
  5550  002DEE  0EA4               	movlw	low _TaskTable
  5551  002DF0  24F3               	addwf	prodl,w,c
  5552  002DF2  6ED9               	movwf	fsr2l,c
  5553  002DF4  0E05               	movlw	high _TaskTable
  5554  002DF6  20F4               	addwfc	prodh,w,c
  5555  002DF8  6EDA               	movwf	fsr2h,c
  5556  002DFA  50DF               	movf	indf2,w,c
  5557  002DFC  0012               	return		;indir
  5558  002DFE                     u16199:
  5559                           
  5560                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5561  002DFE  0103               	movlb	3	; () banked
  5562  002E00  51FE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5563  002E02  0D08               	mullw	8
  5564  002E04  0E02               	movlw	2
  5565  002E06  26F3               	addwf	prodl,f,c
  5566  002E08  0E00               	movlw	0
  5567  002E0A  22F4               	addwfc	prodh,f,c
  5568  002E0C  0EA4               	movlw	low _TaskTable
  5569  002E0E  24F3               	addwf	prodl,w,c
  5570  002E10  6ED9               	movwf	fsr2l,c
  5571  002E12  0E05               	movlw	high _TaskTable
  5572  002E14  20F4               	addwfc	prodh,w,c
  5573  002E16  6EDA               	movwf	fsr2h,c
  5574  002E18  0E00               	movlw	0
  5575  002E1A  6EDF               	movwf	indf2,c
  5576  002E1C                     l775:
  5577                           
  5578                           ; BSR set to: 3
  5579                           
  5580                           ; BSR set to: 3
  5581                           
  5582                           ;os_sched.c: 117: else
  5583                           ;os_sched.c: 118: {
  5584                           
  5585                           ; BSR set to: 3
  5586  002E1C  2BFE               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5587  002E1E  D772               	goto	l16468
  5588  002E20                     __end_of_ScheduleTasks:
  5589                           	opt stack 0
  5590                           tosu	equ	0xFFF
  5591                           tosh	equ	0xFFE
  5592                           tosl	equ	0xFFD
  5593                           pclath	equ	0xFFA
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           intcon2	equ	0xFF1
  5602                           intcon3	equ	0xFF0
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           postinc1	equ	0xFE6
  5606                           postdec1	equ	0xFE5
  5607                           fsr1h	equ	0xFE2
  5608                           fsr1l	equ	0xFE1
  5609                           indf2	equ	0xFDF
  5610                           postinc2	equ	0xFDE
  5611                           postdec2	equ	0xFDD
  5612                           fsr2h	equ	0xFDA
  5613                           fsr2l	equ	0xFD9
  5614                           status	equ	0xFD8
  5615                           
  5616 ;; *************** function _InitializeTasks *****************
  5617 ;; Defined at:
  5618 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  ActiveTaskIn    1    0[BANK4 ] unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Totals:         0       0       0       0       2       1       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;Total ram usage:        3 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:   21
  5639 ;; This function calls:
  5640 ;;		_I2cSlv_MainTask
  5641 ;;		_Led_MainTask
  5642 ;;		_MdmHttp_MainTask
  5643 ;;		_Mdm_DrvMainFn
  5644 ;;		_Mdm_MainTask
  5645 ;;		_MyApp_Task
  5646 ;;		_Rtcm_MainTask
  5647 ;;		_Term_MainTask
  5648 ;;		_UsbDevice_MainTask
  5649 ;;		_Wdg_MainTask
  5650 ;; This function is called by:
  5651 ;;		_Sch_MainScheduler
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text15
  5656  00521E                     __ptext15:
  5657                           	opt stack 0
  5658  00521E                     _InitializeTasks:
  5659                           	opt stack 8
  5660                           
  5661                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5662                           
  5663                           ; BSR set to: 4
  5664                           ;incstack = 0
  5665  00521E  0E00               	movlw	0
  5666  005220  0104               	movlb	4	; () banked
  5667  005222  6FEA               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5668                           
  5669                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5670  005224  0E00               	movlw	0
  5671  005226  6FEA               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5672  005228                     l16456:
  5673                           
  5674                           ; BSR set to: 4
  5675  005228  0E30               	movlw	low _TaskNumber
  5676  00522A  6EF6               	movwf	tblptrl,c
  5677  00522C                     	if	1	;There is more than 1 active tblptr byte
  5678  00522C  0EFC               	movlw	high _TaskNumber
  5679  00522E  6EF7               	movwf	tblptrh,c
  5680  005230                     	endif
  5681  005230                     	if	0	;There are less than 3 active tblptr bytes
  5682  005230                     	endif
  5683  005230  51EA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5684  005232  0103               	movlb	3	; () banked
  5685  005234  6FFE               	movwf	??_InitializeTasks& (0+255),b
  5686  005236  6BFF               	clrf	(??_InitializeTasks+1)& (0+255),b
  5687  005238  0009               	tblrd		*+
  5688  00523A  50F5               	movf	tablat,w,c
  5689  00523C  5DFE               	subwf	??_InitializeTasks& (0+255),w,b
  5690  00523E  0009               	tblrd		*+
  5691  005240  50F5               	movf	tablat,w,c
  5692  005242  59FF               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5693  005244  B0D8               	btfsc	status,0,c
  5694  005246  0012               	return	
  5695                           
  5696                           ; BSR set to: 3
  5697                           ;os_sched.c: 86: {
  5698                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5699                           
  5700                           ; BSR set to: 3
  5701                           
  5702                           ; BSR set to: 3
  5703  005248  0104               	movlb	4	; () banked
  5704  00524A  51EA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5705  00524C  0D08               	mullw	8
  5706  00524E  0EA4               	movlw	low _TaskTable
  5707  005250  24F3               	addwf	prodl,w,c
  5708  005252  6ED9               	movwf	fsr2l,c
  5709  005254  0E05               	movlw	high _TaskTable
  5710  005256  20F4               	addwfc	prodh,w,c
  5711  005258  6EDA               	movwf	fsr2h,c
  5712  00525A  D801               	call	u16158
  5713  00525C  D017               	goto	u16159
  5714  00525E                     u16158:
  5715  00525E  0005               	push	
  5716  005260  6EFA               	movwf	pclath,c
  5717  005262  50DE               	movf	postinc2,w,c
  5718  005264  6EFD               	movwf	tosl,c
  5719  005266  50DE               	movf	postinc2,w,c
  5720  005268  6EFE               	movwf	tosh,c
  5721  00526A  50F8               	movf	tblptru,w,c
  5722  00526C  6EFF               	movwf	tosu,c
  5723  00526E  50FA               	movf	pclath,w,c
  5724  005270  51EA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5725  005272  0D08               	mullw	8
  5726  005274  0E07               	movlw	7
  5727  005276  26F3               	addwf	prodl,f,c
  5728  005278  0E00               	movlw	0
  5729  00527A  22F4               	addwfc	prodh,f,c
  5730  00527C  0EA4               	movlw	low _TaskTable
  5731  00527E  24F3               	addwf	prodl,w,c
  5732  005280  6ED9               	movwf	fsr2l,c
  5733  005282  0E05               	movlw	high _TaskTable
  5734  005284  20F4               	addwfc	prodh,w,c
  5735  005286  6EDA               	movwf	fsr2h,c
  5736  005288  50DF               	movf	indf2,w,c
  5737  00528A  0012               	return		;indir
  5738  00528C                     u16159:
  5739  00528C  0104               	movlb	4	; () banked
  5740  00528E  2BEA               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5741  005290  D7CB               	goto	l16456
  5742  005292                     __end_of_InitializeTasks:
  5743                           	opt stack 0
  5744                           tosu	equ	0xFFF
  5745                           tosh	equ	0xFFE
  5746                           tosl	equ	0xFFD
  5747                           pclath	equ	0xFFA
  5748                           tblptru	equ	0xFF8
  5749                           tblptrh	equ	0xFF7
  5750                           tblptrl	equ	0xFF6
  5751                           tablat	equ	0xFF5
  5752                           prodh	equ	0xFF4
  5753                           prodl	equ	0xFF3
  5754                           intcon	equ	0xFF2
  5755                           intcon2	equ	0xFF1
  5756                           intcon3	equ	0xFF0
  5757                           postinc0	equ	0xFEE
  5758                           wreg	equ	0xFE8
  5759                           postinc1	equ	0xFE6
  5760                           postdec1	equ	0xFE5
  5761                           fsr1h	equ	0xFE2
  5762                           fsr1l	equ	0xFE1
  5763                           indf2	equ	0xFDF
  5764                           postinc2	equ	0xFDE
  5765                           postdec2	equ	0xFDD
  5766                           fsr2h	equ	0xFDA
  5767                           fsr2l	equ	0xFD9
  5768                           status	equ	0xFD8
  5769                           
  5770 ;; *************** function _MyApp_Task *****************
  5771 ;; Defined at:
  5772 ;;		line 148 in file "../Source/c/04_App/app.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  Options         1    wreg     unsigned char 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  Options         1    0[COMRAM] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:   19
  5793 ;; This function calls:
  5794 ;;		_Eeprom_Reset
  5795 ;;		_Led_SetLedBlinkTime
  5796 ;;		_addCmdFsm
  5797 ;;		_delCmdFsm
  5798 ;;		_detectCmd
  5799 ;;		_initFsm
  5800 ;;		_triggerCmdFsm
  5801 ;; This function is called by:
  5802 ;;		_InitializeTasks
  5803 ;;		_ScheduleTasks
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text16
  5808  0034F6                     __ptext16:
  5809                           	opt stack 0
  5810  0034F6                     _MyApp_Task:
  5811                           	opt stack 9
  5812                           
  5813                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5814                           ;app.c: 152: switch (SystemState)
  5815                           
  5816                           ; BSR set to: 3
  5817                           ;incstack = 0
  5818  0034F6  D068               	goto	l2590
  5819  0034F8                     
  5820                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5821  0034F8  0E00               	movlw	0
  5822  0034FA  0100               	movlb	0	; () banked
  5823  0034FC  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5824  0034FE  0E64               	movlw	100
  5825  003500  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5826  003502  0E03               	movlw	3
  5827  003504  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5828  003506  0E84               	movlw	132
  5829  003508  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5830  00350A  0E01               	movlw	1
  5831  00350C  EC4E  F02D         	call	_Led_SetLedBlinkTime
  5832                           
  5833                           ;app.c: 158: break;
  5834  003510  0012               	return	
  5835  003512                     
  5836                           ;app.c: 165: if (initFsm())
  5837  003512  ECA8  F022         	call	_initFsm	;wreg free
  5838  003516  0900               	iorlw	0
  5839  003518  B4D8               	btfsc	status,2,c
  5840  00351A  0012               	return	
  5841                           
  5842                           ;app.c: 166: {
  5843                           ;app.c: 167: currentState = GATE_WAIT_EVENT;
  5844  00351C  0E01               	movlw	1
  5845  00351E  0101               	movlb	1	; () banked
  5846  003520  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5847                           
  5848                           ; BSR set to: 1
  5849                           ;app.c: 168: }
  5850                           ;app.c: 169: break;
  5851  003522  0012               	return	
  5852  003524                     
  5853                           ; BSR set to: 1
  5854                           ;app.c: 172: currentState = detectCmd();
  5855                           
  5856                           ; BSR set to: 1
  5857  003524  ECE5  F024         	call	_detectCmd	;wreg free
  5858  003528  0101               	movlb	1	; () banked
  5859  00352A  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5860                           
  5861                           ;app.c: 173: break;
  5862  00352C  0012               	return	
  5863  00352E                     
  5864                           ; BSR set to: 1
  5865                           ;app.c: 176: if (addCmdFsm(receivedNumber, smsText))
  5866                           
  5867                           ; BSR set to: 1
  5868  00352E  0E2F               	movlw	low _receivedNumber
  5869  003530  6F11               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5870  003532  0E03               	movlw	high _receivedNumber
  5871  003534  6F12               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5872  003536  0E93               	movlw	low _smsText
  5873  003538  6F13               	movwf	addCmdFsm@smsText& (0+255),b
  5874  00353A  0E04               	movlw	high _smsText
  5875  00353C  6F14               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5876  00353E  ECF0  F020         	call	_addCmdFsm	;wreg free
  5877  003542  0900               	iorlw	0
  5878  003544  B4D8               	btfsc	status,2,c
  5879  003546  0012               	return	
  5880                           
  5881                           ;app.c: 177: {
  5882                           ;app.c: 178: currentState = GATE_WAIT_EVENT;
  5883  003548  0E01               	movlw	1
  5884  00354A  0101               	movlb	1	; () banked
  5885  00354C  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5886                           
  5887                           ; BSR set to: 1
  5888                           ;app.c: 179: }
  5889                           ;app.c: 180: break;
  5890  00354E  0012               	return	
  5891  003550                     
  5892                           ; BSR set to: 1
  5893                           ;app.c: 183: if (delCmdFsm(receivedNumber, smsText))
  5894                           
  5895                           ; BSR set to: 1
  5896  003550  0E2F               	movlw	low _receivedNumber
  5897  003552  6F11               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5898  003554  0E03               	movlw	high _receivedNumber
  5899  003556  6F12               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5900  003558  0E93               	movlw	low _smsText
  5901  00355A  6F13               	movwf	delCmdFsm@smsText& (0+255),b
  5902  00355C  0E04               	movlw	high _smsText
  5903  00355E  6F14               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5904  003560  ECF5  F023         	call	_delCmdFsm	;wreg free
  5905  003564  0900               	iorlw	0
  5906  003566  B4D8               	btfsc	status,2,c
  5907  003568  0012               	return	
  5908                           
  5909                           ;app.c: 184: {
  5910                           ;app.c: 185: currentState = GATE_WAIT_EVENT;
  5911  00356A  0E01               	movlw	1
  5912  00356C  0101               	movlb	1	; () banked
  5913  00356E  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;app.c: 186: }
  5917                           ;app.c: 187: break;
  5918  003570  0012               	return	
  5919  003572                     
  5920                           ; BSR set to: 1
  5921                           ;app.c: 190: if (triggerCmdFsm(receivedNumber))
  5922                           
  5923                           ; BSR set to: 1
  5924  003572  0E2F               	movlw	low _receivedNumber
  5925  003574  6F11               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5926  003576  0E03               	movlw	high _receivedNumber
  5927  003578  6F12               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5928  00357A  ECD4  F028         	call	_triggerCmdFsm	;wreg free
  5929  00357E  0900               	iorlw	0
  5930  003580  B4D8               	btfsc	status,2,c
  5931  003582  0012               	return	
  5932                           
  5933                           ;app.c: 191: {
  5934                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5935  003584  0E01               	movlw	1
  5936  003586  0101               	movlb	1	; () banked
  5937  003588  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5938                           
  5939                           ; BSR set to: 1
  5940                           ;app.c: 193: }
  5941                           ;app.c: 194: break;
  5942  00358A  0012               	return	
  5943  00358C                     
  5944                           ; BSR set to: 1
  5945                           ;app.c: 197: if (Eeprom_Reset() == 0)
  5946                           
  5947                           ; BSR set to: 1
  5948  00358C  EC7A  F02F         	call	_Eeprom_Reset	;wreg free
  5949  003590  0900               	iorlw	0
  5950  003592  A4D8               	btfss	status,2,c
  5951  003594  0012               	return	
  5952                           
  5953                           ;app.c: 198: {
  5954                           ;app.c: 199: currentState = GATE_INIT;
  5955  003596  0E00               	movlw	0
  5956  003598  0101               	movlb	1	; () banked
  5957  00359A  6FDB               	movwf	MyApp_Task@currentState& (0+255),b
  5958                           
  5959                           ; BSR set to: 1
  5960                           ;app.c: 205: }
  5961                           
  5962                           ; BSR set to: 1
  5963                           ;app.c: 204: break;
  5964                           
  5965                           ;app.c: 203: default:
  5966                           
  5967                           ; BSR set to: 1
  5968                           ;app.c: 200: }
  5969                           ;app.c: 201: break;
  5970  00359C  0012               	return	
  5971  00359E                     
  5972                           ; BSR set to: 1
  5973  00359E  0101               	movlb	1	; () banked
  5974  0035A0  51DB               	movf	MyApp_Task@currentState& (0+255),w,b
  5975                           
  5976                           ; Switch size 1, requested type "space"
  5977                           ; Number of cases is 6, Range of values is 0 to 5
  5978                           ; switch strategies available:
  5979                           ; Name         Instructions Cycles
  5980                           ; simple_byte           19    10 (average)
  5981                           ;	Chosen strategy is simple_byte
  5982  0035A2  0A00               	xorlw	0	; case 0
  5983  0035A4  B4D8               	btfsc	status,2,c
  5984  0035A6  D7B5               	goto	l2595
  5985  0035A8  0A01               	xorlw	1	; case 1
  5986  0035AA  B4D8               	btfsc	status,2,c
  5987  0035AC  D7BB               	goto	l2598
  5988  0035AE  0A03               	xorlw	3	; case 2
  5989  0035B0  B4D8               	btfsc	status,2,c
  5990  0035B2  D7BD               	goto	l2599
  5991  0035B4  0A01               	xorlw	1	; case 3
  5992  0035B6  B4D8               	btfsc	status,2,c
  5993  0035B8  D7CB               	goto	l2601
  5994  0035BA  0A07               	xorlw	7	; case 4
  5995  0035BC  B4D8               	btfsc	status,2,c
  5996  0035BE  D7D9               	goto	l2603
  5997  0035C0  0A01               	xorlw	1	; case 5
  5998  0035C2  A4D8               	btfss	status,2,c
  5999                           
  6000                           ; BSR set to: 1
  6001                           ;app.c: 211: }
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;app.c: 210: break;
  6005                           
  6006                           ;app.c: 209: default:
  6007                           
  6008                           ; BSR set to: 1
  6009                           ;app.c: 206: break;
  6010  0035C4  0012               	return	
  6011  0035C6  D7E2               	goto	l2605
  6012  0035C8                     l2590:
  6013                           
  6014                           ; BSR set to: 1
  6015  0035C8  0100               	movlb	0	; () banked
  6016  0035CA  51D5               	movf	_SystemState& (0+255),w,b
  6017                           
  6018                           ; Switch size 1, requested type "space"
  6019                           ; Number of cases is 2, Range of values is 0 to 1
  6020                           ; switch strategies available:
  6021                           ; Name         Instructions Cycles
  6022                           ; simple_byte            7     4 (average)
  6023                           ;	Chosen strategy is simple_byte
  6024  0035CC  0A00               	xorlw	0	; case 0
  6025  0035CE  B4D8               	btfsc	status,2,c
  6026  0035D0  D793               	goto	l2591
  6027  0035D2  0A01               	xorlw	1	; case 1
  6028  0035D4  A4D8               	btfss	status,2,c
  6029  0035D6  0012               	return	
  6030  0035D8  D7E2               	goto	l2594
  6031  0035DA                     __end_of_MyApp_Task:
  6032                           	opt stack 0
  6033                           tosu	equ	0xFFF
  6034                           tosh	equ	0xFFE
  6035                           tosl	equ	0xFFD
  6036                           pclath	equ	0xFFA
  6037                           tblptru	equ	0xFF8
  6038                           tblptrh	equ	0xFF7
  6039                           tblptrl	equ	0xFF6
  6040                           tablat	equ	0xFF5
  6041                           prodh	equ	0xFF4
  6042                           prodl	equ	0xFF3
  6043                           intcon	equ	0xFF2
  6044                           intcon2	equ	0xFF1
  6045                           intcon3	equ	0xFF0
  6046                           postinc0	equ	0xFEE
  6047                           wreg	equ	0xFE8
  6048                           postinc1	equ	0xFE6
  6049                           postdec1	equ	0xFE5
  6050                           fsr1h	equ	0xFE2
  6051                           fsr1l	equ	0xFE1
  6052                           indf2	equ	0xFDF
  6053                           postinc2	equ	0xFDE
  6054                           postdec2	equ	0xFDD
  6055                           fsr2h	equ	0xFDA
  6056                           fsr2l	equ	0xFD9
  6057                           status	equ	0xFD8
  6058                           
  6059 ;; *************** function _Term_MainTask *****************
  6060 ;; Defined at:
  6061 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  Options         1    wreg     unsigned char 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  Options         1    0[COMRAM] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:   17
  6082 ;; This function calls:
  6083 ;;		_Term_MainSm
  6084 ;; This function is called by:
  6085 ;;		_InitializeTasks
  6086 ;;		_ScheduleTasks
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text17
  6091  006888                     __ptext17:
  6092                           	opt stack 0
  6093  006888                     _Term_MainTask:
  6094                           	opt stack 11
  6095                           
  6096                           ;term.c: 847: switch (SystemState)
  6097                           
  6098                           ;incstack = 0
  6099  006888  D003               	goto	l2489
  6100  00688A                     
  6101                           ;term.c: 858: Term_MainSm();
  6102  00688A  EC5B  F008         	call	_Term_MainSm	;wreg free
  6103                           
  6104                           ;term.c: 865: }
  6105                           
  6106                           ;term.c: 864: break;
  6107                           
  6108                           ;term.c: 863: default:
  6109                           
  6110                           ;term.c: 860: break;
  6111  00688E  0012               	return	
  6112  006890                     l2489:
  6113  006890  0100               	movlb	0	; () banked
  6114  006892  51D5               	movf	_SystemState& (0+255),w,b
  6115                           
  6116                           ; Switch size 1, requested type "space"
  6117                           ; Number of cases is 2, Range of values is 0 to 1
  6118                           ; switch strategies available:
  6119                           ; Name         Instructions Cycles
  6120                           ; simple_byte            7     4 (average)
  6121                           ;	Chosen strategy is simple_byte
  6122  006894  0A00               	xorlw	0	; case 0
  6123  006896  B4D8               	btfsc	status,2,c
  6124  006898  0012               	return	
  6125  00689A  0A01               	xorlw	1	; case 1
  6126  00689C  A4D8               	btfss	status,2,c
  6127  00689E  0012               	return	
  6128  0068A0  D7F4               	goto	l2492
  6129  0068A2                     __end_of_Term_MainTask:
  6130                           	opt stack 0
  6131                           tosu	equ	0xFFF
  6132                           tosh	equ	0xFFE
  6133                           tosl	equ	0xFFD
  6134                           pclath	equ	0xFFA
  6135                           tblptru	equ	0xFF8
  6136                           tblptrh	equ	0xFF7
  6137                           tblptrl	equ	0xFF6
  6138                           tablat	equ	0xFF5
  6139                           prodh	equ	0xFF4
  6140                           prodl	equ	0xFF3
  6141                           intcon	equ	0xFF2
  6142                           intcon2	equ	0xFF1
  6143                           intcon3	equ	0xFF0
  6144                           postinc0	equ	0xFEE
  6145                           wreg	equ	0xFE8
  6146                           postinc1	equ	0xFE6
  6147                           postdec1	equ	0xFE5
  6148                           fsr1h	equ	0xFE2
  6149                           fsr1l	equ	0xFE1
  6150                           indf2	equ	0xFDF
  6151                           postinc2	equ	0xFDE
  6152                           postdec2	equ	0xFDD
  6153                           fsr2h	equ	0xFDA
  6154                           fsr2l	equ	0xFD9
  6155                           status	equ	0xFD8
  6156                           
  6157 ;; *************** function _Rtcm_MainTask *****************
  6158 ;; Defined at:
  6159 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  Options         1    wreg     unsigned char 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  Options         1    0[COMRAM] unsigned char 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      void 
  6166 ;; Registers used:
  6167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;Total ram usage:        0 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:   14
  6180 ;; This function calls:
  6181 ;;		_Rtcc_AlarmConfig
  6182 ;;		_Rtcc_LockRtc
  6183 ;;		_Rtcc_RtcConfig
  6184 ;;		_Rtcc_SetRtcStatus
  6185 ;;		_Rtcc_UnlockRtc
  6186 ;;		_Rtcm_GetRtccDate
  6187 ;;		_Rtcm_SetRtccDate
  6188 ;; This function is called by:
  6189 ;;		_InitializeTasks
  6190 ;;		_ScheduleTasks
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text18
  6195  004E76                     __ptext18:
  6196                           	opt stack 0
  6197  004E76                     _Rtcm_MainTask:
  6198                           	opt stack 14
  6199                           
  6200                           ;rtcm.c: 101: switch (SystemState)
  6201                           
  6202                           ;incstack = 0
  6203  004E76  D03D               	goto	l2219
  6204  004E78                     l2220:
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6208  004E78  86CD               	bsf	4045,3,c	;volatile
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6212  004E7A  0E00               	movlw	0
  6213  004E7C  0103               	movlb	3	; () banked
  6214  004E7E  6FBA               	movwf	_RtcConfig& (0+255),b
  6215                           
  6216                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6217  004E80  0E00               	movlw	0
  6218  004E82  6FBB               	movwf	(_RtcConfig+1)& (0+255),b
  6219                           
  6220                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6221  004E84  0E01               	movlw	1
  6222  004E86  6FBC               	movwf	(_RtcConfig+2)& (0+255),b
  6223                           
  6224                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6225  004E88  0E01               	movlw	1
  6226  004E8A  6FBD               	movwf	(_RtcConfig+3)& (0+255),b
  6227                           
  6228                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6229  004E8C  0E01               	movlw	1
  6230  004E8E  6FB6               	movwf	_AlCfg& (0+255),b
  6231                           
  6232                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6233  004E90  0E01               	movlw	1
  6234  004E92  6FB7               	movwf	(_AlCfg+1)& (0+255),b
  6235                           
  6236                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6237  004E94  0E01               	movlw	1
  6238  004E96  6FB8               	movwf	(_AlCfg+2)& (0+255),b
  6239                           
  6240                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6241  004E98  0E00               	movlw	0
  6242  004E9A  6FB9               	movwf	(_AlCfg+3)& (0+255),b
  6243                           
  6244                           ; BSR set to: 3
  6245                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6246  004E9C  ECE0  F034         	call	_Rtcc_UnlockRtc	;wreg free
  6247                           
  6248                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6249  004EA0  0EBA               	movlw	low _RtcConfig
  6250  004EA2  0100               	movlb	0	; () banked
  6251  004EA4  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6252  004EA6  0E03               	movlw	high _RtcConfig
  6253  004EA8  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6254  004EAA  EC46  F024         	call	_Rtcc_RtcConfig	;wreg free
  6255                           
  6256                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6257  004EAE  0EB6               	movlw	low _AlCfg
  6258  004EB0  0100               	movlb	0	; () banked
  6259  004EB2  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6260  004EB4  0E03               	movlw	high _AlCfg
  6261  004EB6  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6262  004EB8  EC2B  F02A         	call	_Rtcc_AlarmConfig	;wreg free
  6263                           
  6264                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6265  004EBC  0E01               	movlw	1
  6266  004EBE  EC8F  F034         	call	_Rtcc_SetRtcStatus
  6267                           
  6268                           ;rtcm.c: 127: Rtcc_LockRtc();
  6269  004EC2  ECE8  F034         	call	_Rtcc_LockRtc	;wreg free
  6270                           
  6271                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6272  004EC6  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6273  004ECA  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6274  004ECE  0E07               	movlw	7
  6275  004ED0                     u16071:
  6276  004ED0  CFDB FFEB          	movff	plusw2,plusw0
  6277  004ED4  06E8               	decf	wreg,f,c
  6278  004ED6  E2FC               	bc	u16071
  6279  004ED8  ECFA  F02C         	call	_Rtcm_SetRtccDate	;wreg free
  6280                           
  6281                           ;rtcm.c: 154: break;
  6282  004EDC  0012               	return	
  6283  004EDE                     
  6284                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6285  004EDE  ECFD  F02A         	call	_Rtcm_GetRtccDate	;wreg free
  6286  004EE2  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6287  004EE6  0E07               	movlw	7
  6288  004EE8                     u16081:
  6289  004EE8  CFEB FFDB          	movff	plusw0,plusw2
  6290  004EEC  06E8               	decf	wreg,f,c
  6291  004EEE  E2FC               	bc	u16081
  6292                           
  6293                           ;rtcm.c: 165: }
  6294                           
  6295                           ;rtcm.c: 164: break;
  6296                           
  6297                           ;rtcm.c: 163: default:
  6298                           
  6299                           ;rtcm.c: 160: break;
  6300  004EF0  0012               	return	
  6301  004EF2                     l2219:
  6302  004EF2  0100               	movlb	0	; () banked
  6303  004EF4  51D5               	movf	_SystemState& (0+255),w,b
  6304                           
  6305                           ; Switch size 1, requested type "space"
  6306                           ; Number of cases is 2, Range of values is 0 to 1
  6307                           ; switch strategies available:
  6308                           ; Name         Instructions Cycles
  6309                           ; simple_byte            7     4 (average)
  6310                           ;	Chosen strategy is simple_byte
  6311  004EF6  0A00               	xorlw	0	; case 0
  6312  004EF8  B4D8               	btfsc	status,2,c
  6313  004EFA  D7BE               	goto	l2220
  6314  004EFC  0A01               	xorlw	1	; case 1
  6315  004EFE  A4D8               	btfss	status,2,c
  6316  004F00  0012               	return	
  6317  004F02  D7ED               	goto	l2222
  6318  004F04                     __end_of_Rtcm_MainTask:
  6319                           	opt stack 0
  6320                           tosu	equ	0xFFF
  6321                           tosh	equ	0xFFE
  6322                           tosl	equ	0xFFD
  6323                           pclath	equ	0xFFA
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           intcon2	equ	0xFF1
  6332                           intcon3	equ	0xFF0
  6333                           postinc0	equ	0xFEE
  6334                           plusw0	equ	0xFEB
  6335                           wreg	equ	0xFE8
  6336                           postinc1	equ	0xFE6
  6337                           postdec1	equ	0xFE5
  6338                           fsr1h	equ	0xFE2
  6339                           fsr1l	equ	0xFE1
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           plusw2	equ	0xFDB
  6344                           fsr2h	equ	0xFDA
  6345                           fsr2l	equ	0xFD9
  6346                           status	equ	0xFD8
  6347                           
  6348 ;; *************** function _Led_MainTask *****************
  6349 ;; Defined at:
  6350 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  Options         1    wreg     unsigned char 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  Options         1    0[COMRAM] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;Total ram usage:        1 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:   14
  6371 ;; This function calls:
  6372 ;;		_LedStateMachine
  6373 ;; This function is called by:
  6374 ;;		_InitializeTasks
  6375 ;;		_ScheduleTasks
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text19
  6380  003AE2                     __ptext19:
  6381                           	opt stack 0
  6382  003AE2                     _Led_MainTask:
  6383                           	opt stack 14
  6384                           
  6385                           ;led.c: 300: switch (SystemState)
  6386                           
  6387                           ;incstack = 0
  6388  003AE2  D05C               	goto	l2133
  6389  003AE4                     l2134:
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6393  003AE4  9895               	bcf	3989,4,c	;volatile
  6394                           
  6395                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6396  003AE6  9A95               	bcf	3989,5,c	;volatile
  6397                           
  6398                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6399  003AE8  9C95               	bcf	3989,6,c	;volatile
  6400                           
  6401                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6402  003AEA  9883               	bcf	3971,4,c	;volatile
  6403                           
  6404                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6405  003AEC  9A83               	bcf	3971,5,c	;volatile
  6406                           
  6407                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6408  003AEE  9C83               	bcf	3971,6,c	;volatile
  6409                           
  6410                           ;led.c: 311: break;
  6411  003AF0  0012               	return	
  6412  003AF2                     
  6413                           ; BSR set to: 0
  6414                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6415                           
  6416                           ; BSR set to: 0
  6417  003AF2  0EFB               	movlw	low _Led1Sts
  6418  003AF4  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6419  003AF6  0E01               	movlw	high _Led1Sts
  6420  003AF8  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6421  003AFA  0EFA               	movlw	low _Led1OutSts
  6422  003AFC  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6423  003AFE  0E01               	movlw	high _Led1OutSts
  6424  003B00  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6425  003B02  0E70               	movlw	low _Led1Blink
  6426  003B04  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6427  003B06  0E03               	movlw	high _Led1Blink
  6428  003B08  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6429  003B0A  0E94               	movlw	low _Led1Pulse
  6430  003B0C  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6431  003B0E  0E03               	movlw	high _Led1Pulse
  6432  003B10  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6433  003B12  0E01               	movlw	1
  6434  003B14  EC50  F023         	call	_LedStateMachine
  6435  003B18  0100               	movlb	0	; () banked
  6436  003B1A  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6437  003B1C  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6438  003B1E  5083               	movf	3971,w,c	;volatile
  6439  003B20  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6440  003B22  0BEF               	andlw	-17
  6441  003B24  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6442  003B26  6E83               	movwf	3971,c	;volatile
  6443                           
  6444                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6445  003B28  0EF9               	movlw	low _Led2Sts
  6446  003B2A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6447  003B2C  0E01               	movlw	high _Led2Sts
  6448  003B2E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6449  003B30  0EF8               	movlw	low _Led2OutSts
  6450  003B32  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6451  003B34  0E01               	movlw	high _Led2OutSts
  6452  003B36  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6453  003B38  0E67               	movlw	low _Led2Blink
  6454  003B3A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6455  003B3C  0E03               	movlw	high _Led2Blink
  6456  003B3E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6457  003B40  0E8E               	movlw	low _Led2Pulse
  6458  003B42  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6459  003B44  0E03               	movlw	high _Led2Pulse
  6460  003B46  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6461  003B48  0E02               	movlw	2
  6462  003B4A  EC50  F023         	call	_LedStateMachine
  6463  003B4E  0100               	movlb	0	; () banked
  6464  003B50  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6465  003B52  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6466  003B54  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6467  003B56  5083               	movf	3971,w,c	;volatile
  6468  003B58  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6469  003B5A  0BDF               	andlw	-33
  6470  003B5C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6471  003B5E  6E83               	movwf	3971,c	;volatile
  6472                           
  6473                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6474  003B60  0EF7               	movlw	low _Led3Sts
  6475  003B62  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6476  003B64  0E01               	movlw	high _Led3Sts
  6477  003B66  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6478  003B68  0EF6               	movlw	low _Led3OutSts
  6479  003B6A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6480  003B6C  0E01               	movlw	high _Led3OutSts
  6481  003B6E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6482  003B70  0E5E               	movlw	low _Led3Blink
  6483  003B72  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6484  003B74  0E03               	movlw	high _Led3Blink
  6485  003B76  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6486  003B78  0E88               	movlw	low _Led3Pulse
  6487  003B7A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6488  003B7C  0E03               	movlw	high _Led3Pulse
  6489  003B7E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6490  003B80  0E03               	movlw	3
  6491  003B82  EC50  F023         	call	_LedStateMachine
  6492  003B86  0100               	movlb	0	; () banked
  6493  003B88  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6494  003B8A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6495  003B8C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6496  003B8E  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6497  003B90  5083               	movf	3971,w,c	;volatile
  6498  003B92  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6499  003B94  0BBF               	andlw	-65
  6500  003B96  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6501  003B98  6E83               	movwf	3971,c	;volatile
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;led.c: 326: }
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;led.c: 325: break;
  6508                           
  6509                           ;led.c: 324: default:
  6510                           
  6511                           ;led.c: 321: break;
  6512  003B9A  0012               	return	
  6513  003B9C                     l2133:
  6514                           
  6515                           ; BSR set to: 0
  6516  003B9C  0100               	movlb	0	; () banked
  6517  003B9E  51D5               	movf	_SystemState& (0+255),w,b
  6518                           
  6519                           ; Switch size 1, requested type "space"
  6520                           ; Number of cases is 2, Range of values is 0 to 1
  6521                           ; switch strategies available:
  6522                           ; Name         Instructions Cycles
  6523                           ; simple_byte            7     4 (average)
  6524                           ;	Chosen strategy is simple_byte
  6525  003BA0  0A00               	xorlw	0	; case 0
  6526  003BA2  B4D8               	btfsc	status,2,c
  6527  003BA4  D79F               	goto	l2134
  6528  003BA6  0A01               	xorlw	1	; case 1
  6529  003BA8  A4D8               	btfss	status,2,c
  6530  003BAA  0012               	return	
  6531  003BAC  D7A2               	goto	l2136
  6532  003BAE                     __end_of_Led_MainTask:
  6533                           	opt stack 0
  6534                           tosu	equ	0xFFF
  6535                           tosh	equ	0xFFE
  6536                           tosl	equ	0xFFD
  6537                           pclath	equ	0xFFA
  6538                           tblptru	equ	0xFF8
  6539                           tblptrh	equ	0xFF7
  6540                           tblptrl	equ	0xFF6
  6541                           tablat	equ	0xFF5
  6542                           prodh	equ	0xFF4
  6543                           prodl	equ	0xFF3
  6544                           intcon	equ	0xFF2
  6545                           intcon2	equ	0xFF1
  6546                           intcon3	equ	0xFF0
  6547                           postinc0	equ	0xFEE
  6548                           plusw0	equ	0xFEB
  6549                           wreg	equ	0xFE8
  6550                           postinc1	equ	0xFE6
  6551                           postdec1	equ	0xFE5
  6552                           fsr1h	equ	0xFE2
  6553                           fsr1l	equ	0xFE1
  6554                           indf2	equ	0xFDF
  6555                           postinc2	equ	0xFDE
  6556                           postdec2	equ	0xFDD
  6557                           plusw2	equ	0xFDB
  6558                           fsr2h	equ	0xFDA
  6559                           fsr2l	equ	0xFD9
  6560                           status	equ	0xFD8
  6561                           
  6562 ;; *************** function _UsbDevice_MainTask *****************
  6563 ;; Defined at:
  6564 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  Options         1    wreg     unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  Options         1    0[COMRAM] unsigned char 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:   20
  6585 ;; This function calls:
  6586 ;;		_CDCTxService
  6587 ;;		_USBDeviceInit
  6588 ;;		_USBDeviceTasks
  6589 ;; This function is called by:
  6590 ;;		_InitializeTasks
  6591 ;;		_ScheduleTasks
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text20
  6596  006620                     __ptext20:
  6597                           	opt stack 0
  6598  006620                     _UsbDevice_MainTask:
  6599                           	opt stack 8
  6600                           
  6601                           ;usb_device_mgr.c: 74: switch (SystemState)
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;incstack = 0
  6605  006620  D008               	goto	l1992
  6606  006622                     
  6607                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6608  006622  EC6B  F011         	call	_USBDeviceInit	;wreg free
  6609                           
  6610                           ;usb_device_mgr.c: 80: ;
  6611                           ;usb_device_mgr.c: 81: break;
  6612  006626  0012               	return	
  6613  006628                     
  6614                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6615  006628  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6616                           
  6617                           ;usb_device_mgr.c: 90: CDCTxService();
  6618  00662C  EC0E  F014         	call	_CDCTxService	;wreg free
  6619                           
  6620                           ;usb_device_mgr.c: 101: }
  6621                           
  6622                           ;usb_device_mgr.c: 100: break;
  6623                           
  6624                           ;usb_device_mgr.c: 99: default:
  6625                           
  6626                           ;usb_device_mgr.c: 96: break;
  6627  006630  0012               	return	
  6628  006632                     l1992:
  6629  006632  0100               	movlb	0	; () banked
  6630  006634  51D5               	movf	_SystemState& (0+255),w,b
  6631                           
  6632                           ; Switch size 1, requested type "space"
  6633                           ; Number of cases is 2, Range of values is 0 to 1
  6634                           ; switch strategies available:
  6635                           ; Name         Instructions Cycles
  6636                           ; simple_byte            7     4 (average)
  6637                           ;	Chosen strategy is simple_byte
  6638  006636  0A00               	xorlw	0	; case 0
  6639  006638  B4D8               	btfsc	status,2,c
  6640  00663A  D7F3               	goto	l1993
  6641  00663C  0A01               	xorlw	1	; case 1
  6642  00663E  A4D8               	btfss	status,2,c
  6643  006640  0012               	return	
  6644  006642  D7F2               	goto	l1995
  6645  006644                     __end_of_UsbDevice_MainTask:
  6646                           	opt stack 0
  6647                           tosu	equ	0xFFF
  6648                           tosh	equ	0xFFE
  6649                           tosl	equ	0xFFD
  6650                           pclath	equ	0xFFA
  6651                           tblptru	equ	0xFF8
  6652                           tblptrh	equ	0xFF7
  6653                           tblptrl	equ	0xFF6
  6654                           tablat	equ	0xFF5
  6655                           prodh	equ	0xFF4
  6656                           prodl	equ	0xFF3
  6657                           intcon	equ	0xFF2
  6658                           intcon2	equ	0xFF1
  6659                           intcon3	equ	0xFF0
  6660                           postinc0	equ	0xFEE
  6661                           plusw0	equ	0xFEB
  6662                           wreg	equ	0xFE8
  6663                           postinc1	equ	0xFE6
  6664                           postdec1	equ	0xFE5
  6665                           fsr1h	equ	0xFE2
  6666                           fsr1l	equ	0xFE1
  6667                           indf2	equ	0xFDF
  6668                           postinc2	equ	0xFDE
  6669                           postdec2	equ	0xFDD
  6670                           plusw2	equ	0xFDB
  6671                           fsr2h	equ	0xFDA
  6672                           fsr2l	equ	0xFD9
  6673                           status	equ	0xFD8
  6674                           
  6675 ;; *************** function _MdmHttp_MainTask *****************
  6676 ;; Defined at:
  6677 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  Options         1    wreg     unsigned char 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  Options         1    0[COMRAM] unsigned char 
  6682 ;; Return value:  Size  Location     Type
  6683 ;;                  1    wreg      void 
  6684 ;; Registers used:
  6685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6686 ;; Tracked objects:
  6687 ;;		On entry : 0/0
  6688 ;;		On exit  : 0/0
  6689 ;;		Unchanged: 0/0
  6690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6695 ;;Total ram usage:        0 bytes
  6696 ;; Hardware stack levels used:    1
  6697 ;; Hardware stack levels required when called:   15
  6698 ;; This function calls:
  6699 ;;		_HttpGetMethod
  6700 ;;		_InitGprsNetwork
  6701 ;; This function is called by:
  6702 ;;		_InitializeTasks
  6703 ;;		_ScheduleTasks
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text21
  6708  005F3C                     __ptext21:
  6709                           	opt stack 0
  6710  005F3C                     _MdmHttp_MainTask:
  6711                           	opt stack 13
  6712                           
  6713                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6714                           
  6715                           ;incstack = 0
  6716  005F3C  D019               	goto	l1291
  6717  005F3E                     
  6718                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6719  005F3E  0E03               	movlw	3
  6720  005F40  0100               	movlb	0	; () banked
  6721  005F42  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6722  005F44  A4D8               	btfss	status,2,c
  6723  005F46  0012               	return	
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;mdm_gsm_gprs_http.c: 570: {
  6727                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6728  005F48  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6729  005F4C  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6730  005F50  C1EE  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6731  005F54  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6732  005F58  0101               	movlb	1	; () banked
  6733  005F5A  6FED               	movwf	_GprsNetworkSts& (0+255),b
  6734                           
  6735                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6736  005F5C  0EA5               	movlw	low _HttpGetDataLocal
  6737  005F5E  0100               	movlb	0	; () banked
  6738  005F60  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6739  005F62  0E03               	movlw	high _HttpGetDataLocal
  6740  005F64  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6741  005F66  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6742  005F6A  0101               	movlb	1	; () banked
  6743  005F6C  6FEC               	movwf	_HttpGetMethodSts& (0+255),b
  6744                           
  6745                           ; BSR set to: 1
  6746                           ;mdm_gsm_gprs_http.c: 581: }
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;mdm_gsm_gprs_http.c: 580: break;
  6750                           
  6751                           ;mdm_gsm_gprs_http.c: 579: default:
  6752                           
  6753                           ; BSR set to: 1
  6754                           ;mdm_gsm_gprs_http.c: 575: }
  6755                           ;mdm_gsm_gprs_http.c: 576: break;
  6756  005F6E  0012               	return	
  6757  005F70                     l1291:
  6758                           
  6759                           ; BSR set to: 1
  6760  005F70  0100               	movlb	0	; () banked
  6761  005F72  51D5               	movf	_SystemState& (0+255),w,b
  6762                           
  6763                           ; Switch size 1, requested type "space"
  6764                           ; Number of cases is 2, Range of values is 0 to 1
  6765                           ; switch strategies available:
  6766                           ; Name         Instructions Cycles
  6767                           ; simple_byte            7     4 (average)
  6768                           ;	Chosen strategy is simple_byte
  6769  005F74  0A00               	xorlw	0	; case 0
  6770  005F76  B4D8               	btfsc	status,2,c
  6771  005F78  0012               	return	
  6772  005F7A  0A01               	xorlw	1	; case 1
  6773  005F7C  A4D8               	btfss	status,2,c
  6774  005F7E  0012               	return	
  6775  005F80  D7DE               	goto	l1294
  6776  005F82                     __end_of_MdmHttp_MainTask:
  6777                           	opt stack 0
  6778                           tosu	equ	0xFFF
  6779                           tosh	equ	0xFFE
  6780                           tosl	equ	0xFFD
  6781                           pclath	equ	0xFFA
  6782                           tblptru	equ	0xFF8
  6783                           tblptrh	equ	0xFF7
  6784                           tblptrl	equ	0xFF6
  6785                           tablat	equ	0xFF5
  6786                           prodh	equ	0xFF4
  6787                           prodl	equ	0xFF3
  6788                           intcon	equ	0xFF2
  6789                           intcon2	equ	0xFF1
  6790                           intcon3	equ	0xFF0
  6791                           postinc0	equ	0xFEE
  6792                           plusw0	equ	0xFEB
  6793                           wreg	equ	0xFE8
  6794                           postinc1	equ	0xFE6
  6795                           postdec1	equ	0xFE5
  6796                           fsr1h	equ	0xFE2
  6797                           fsr1l	equ	0xFE1
  6798                           indf2	equ	0xFDF
  6799                           postinc2	equ	0xFDE
  6800                           postdec2	equ	0xFDD
  6801                           plusw2	equ	0xFDB
  6802                           fsr2h	equ	0xFDA
  6803                           fsr2l	equ	0xFD9
  6804                           status	equ	0xFD8
  6805                           
  6806 ;; *************** function _Mdm_MainTask *****************
  6807 ;; Defined at:
  6808 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;  Options         1    wreg     unsigned char 
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;  Options         1    0[COMRAM] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;Total ram usage:        0 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:   15
  6829 ;; This function calls:
  6830 ;;		_CheckModem
  6831 ;;		_ConfigureModem
  6832 ;;		_GetSmsSm
  6833 ;;		_ModemEvtParser
  6834 ;;		_SendSmsSm
  6835 ;;		_TurnOnModem
  6836 ;;		_UartSetConfig
  6837 ;;		_Uart_InitUartModule
  6838 ;; This function is called by:
  6839 ;;		_InitializeTasks
  6840 ;;		_ScheduleTasks
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text22
  6845  005C8A                     __ptext22:
  6846                           	opt stack 0
  6847  005C8A                     _Mdm_MainTask:
  6848                           	opt stack 13
  6849                           
  6850                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6851                           
  6852                           ;incstack = 0
  6853  005C8A  D01E               	goto	l1107
  6854  005C8C                     
  6855                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6856  005C8C  EC20  F02C         	call	_UartSetConfig	;wreg free
  6857                           
  6858                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6859  005C90  0E1A               	movlw	low _UartConfig
  6860  005C92  0100               	movlb	0	; () banked
  6861  005C94  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6862  005C96  0E03               	movlw	high _UartConfig
  6863  005C98  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6864  005C9A  0E01               	movlw	1
  6865  005C9C  EC5E  F005         	call	_Uart_InitUartModule
  6866                           
  6867                           ;mdm_gsm_gprs.c: 764: break;
  6868  005CA0  0012               	return	
  6869  005CA2                     
  6870                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6871  005CA2  ECC1  F012         	call	_CheckModem	;wreg free
  6872                           
  6873                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6874  005CA6  0429               	decf	_ComChecCompleted,w,c
  6875  005CA8  A4D8               	btfss	status,2,c
  6876  005CAA  D005               	goto	l1111
  6877  005CAC  0100               	movlb	0	; () banked
  6878  005CAE  51D2               	movf	_MdmStatus& (0+255),w,b
  6879  005CB0  B4D8               	btfsc	status,2,c
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;mdm_gsm_gprs.c: 772: {
  6883                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6884  005CB2  EC30  F02F         	call	_TurnOnModem	;wreg free
  6885  005CB6                     l1111:
  6886                           
  6887                           ;mdm_gsm_gprs.c: 775: }
  6888                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6889  005CB6  EC37  F01C         	call	_ConfigureModem	;wreg free
  6890                           
  6891                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6892  005CBA  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6893                           
  6894                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6895  005CBE  EC4D  F015         	call	_GetSmsSm	;wreg free
  6896                           
  6897                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6898  005CC2  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6899                           
  6900                           ;mdm_gsm_gprs.c: 789: }
  6901                           
  6902                           ;mdm_gsm_gprs.c: 788: break;
  6903                           
  6904                           ;mdm_gsm_gprs.c: 787: default:
  6905                           
  6906                           ;mdm_gsm_gprs.c: 784: break;
  6907  005CC6  0012               	return	
  6908  005CC8                     l1107:
  6909  005CC8  0100               	movlb	0	; () banked
  6910  005CCA  51D5               	movf	_SystemState& (0+255),w,b
  6911                           
  6912                           ; Switch size 1, requested type "space"
  6913                           ; Number of cases is 2, Range of values is 0 to 1
  6914                           ; switch strategies available:
  6915                           ; Name         Instructions Cycles
  6916                           ; simple_byte            7     4 (average)
  6917                           ;	Chosen strategy is simple_byte
  6918  005CCC  0A00               	xorlw	0	; case 0
  6919  005CCE  B4D8               	btfsc	status,2,c
  6920  005CD0  D7DD               	goto	l1108
  6921  005CD2  0A01               	xorlw	1	; case 1
  6922  005CD4  A4D8               	btfss	status,2,c
  6923  005CD6  0012               	return	
  6924  005CD8  D7E4               	goto	l1110
  6925  005CDA                     __end_of_Mdm_MainTask:
  6926                           	opt stack 0
  6927                           tosu	equ	0xFFF
  6928                           tosh	equ	0xFFE
  6929                           tosl	equ	0xFFD
  6930                           pclath	equ	0xFFA
  6931                           tblptru	equ	0xFF8
  6932                           tblptrh	equ	0xFF7
  6933                           tblptrl	equ	0xFF6
  6934                           tablat	equ	0xFF5
  6935                           prodh	equ	0xFF4
  6936                           prodl	equ	0xFF3
  6937                           intcon	equ	0xFF2
  6938                           intcon2	equ	0xFF1
  6939                           intcon3	equ	0xFF0
  6940                           postinc0	equ	0xFEE
  6941                           plusw0	equ	0xFEB
  6942                           wreg	equ	0xFE8
  6943                           postinc1	equ	0xFE6
  6944                           postdec1	equ	0xFE5
  6945                           fsr1h	equ	0xFE2
  6946                           fsr1l	equ	0xFE1
  6947                           indf2	equ	0xFDF
  6948                           postinc2	equ	0xFDE
  6949                           postdec2	equ	0xFDD
  6950                           plusw2	equ	0xFDB
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8
  6954                           
  6955 ;; *************** function _I2cSlv_MainTask *****************
  6956 ;; Defined at:
  6957 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  Options         1    wreg     unsigned char 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  Options         1    0[COMRAM] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:   14
  6978 ;; This function calls:
  6979 ;;		_I2cSendMsgSm
  6980 ;;		_I2cSetConfig
  6981 ;;		_I2c_InitI2cModule
  6982 ;;		_OsAlrm_SetOsAlarm
  6983 ;; This function is called by:
  6984 ;;		_InitializeTasks
  6985 ;;		_ScheduleTasks
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text23
  6990  0059A0                     __ptext23:
  6991                           	opt stack 0
  6992  0059A0                     _I2cSlv_MainTask:
  6993                           	opt stack 14
  6994                           
  6995                           ;i2c_slv.c: 217: switch (SystemState)
  6996                           
  6997                           ;incstack = 0
  6998  0059A0  D020               	goto	l1404
  6999  0059A2                     
  7000                           ;i2c_slv.c: 222: I2cSetConfig();
  7001  0059A2  ECA9  F032         	call	_I2cSetConfig	;wreg free
  7002                           
  7003                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7004  0059A6  0E54               	movlw	low _I2cConfig
  7005  0059A8  0100               	movlb	0	; () banked
  7006  0059AA  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7007  0059AC  0E03               	movlw	high _I2cConfig
  7008  0059AE  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7009  0059B0  ECBC  F029         	call	_I2c_InitI2cModule	;wreg free
  7010                           
  7011                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7012  0059B4  0E00               	movlw	0
  7013  0059B6  0100               	movlb	0	; () banked
  7014  0059B8  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7015  0059BA  0E00               	movlw	0
  7016  0059BC  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7017  0059BE  0E32               	movlw	50
  7018  0059C0  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7019  0059C2  0E00               	movlw	0
  7020  0059C4  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7021  0059C6  0E00               	movlw	0
  7022  0059C8  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7023  0059CA  0E00               	movlw	0
  7024  0059CC  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7025  0059CE  0E52               	movlw	low _I2cDummyTx
  7026  0059D0  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7027  0059D2  0E68               	movlw	high _I2cDummyTx
  7028  0059D4  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7029  0059D6  EC6A  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7030                           
  7031                           ;i2c_slv.c: 227: break;
  7032  0059DA  0012               	return	
  7033  0059DC                     
  7034                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7035  0059DC  ECCE  F01F         	call	_I2cSendMsgSm	;wreg free
  7036                           
  7037                           ;i2c_slv.c: 238: }
  7038                           
  7039                           ;i2c_slv.c: 237: break;
  7040                           
  7041                           ;i2c_slv.c: 236: default:
  7042                           
  7043                           ;i2c_slv.c: 233: break;
  7044  0059E0  0012               	return	
  7045  0059E2                     l1404:
  7046  0059E2  0100               	movlb	0	; () banked
  7047  0059E4  51D5               	movf	_SystemState& (0+255),w,b
  7048                           
  7049                           ; Switch size 1, requested type "space"
  7050                           ; Number of cases is 2, Range of values is 0 to 1
  7051                           ; switch strategies available:
  7052                           ; Name         Instructions Cycles
  7053                           ; simple_byte            7     4 (average)
  7054                           ;	Chosen strategy is simple_byte
  7055  0059E6  0A00               	xorlw	0	; case 0
  7056  0059E8  B4D8               	btfsc	status,2,c
  7057  0059EA  D7DB               	goto	l1405
  7058  0059EC  0A01               	xorlw	1	; case 1
  7059  0059EE  A4D8               	btfss	status,2,c
  7060  0059F0  0012               	return	
  7061  0059F2  D7F4               	goto	l1407
  7062  0059F4                     __end_of_I2cSlv_MainTask:
  7063                           	opt stack 0
  7064                           tosu	equ	0xFFF
  7065                           tosh	equ	0xFFE
  7066                           tosl	equ	0xFFD
  7067                           pclath	equ	0xFFA
  7068                           tblptru	equ	0xFF8
  7069                           tblptrh	equ	0xFF7
  7070                           tblptrl	equ	0xFF6
  7071                           tablat	equ	0xFF5
  7072                           prodh	equ	0xFF4
  7073                           prodl	equ	0xFF3
  7074                           intcon	equ	0xFF2
  7075                           intcon2	equ	0xFF1
  7076                           intcon3	equ	0xFF0
  7077                           postinc0	equ	0xFEE
  7078                           plusw0	equ	0xFEB
  7079                           wreg	equ	0xFE8
  7080                           postinc1	equ	0xFE6
  7081                           postdec1	equ	0xFE5
  7082                           fsr1h	equ	0xFE2
  7083                           fsr1l	equ	0xFE1
  7084                           indf2	equ	0xFDF
  7085                           postinc2	equ	0xFDE
  7086                           postdec2	equ	0xFDD
  7087                           plusw2	equ	0xFDB
  7088                           fsr2h	equ	0xFDA
  7089                           fsr2l	equ	0xFD9
  7090                           status	equ	0xFD8
  7091                           
  7092 ;; *************** function _Mdm_DrvMainFn *****************
  7093 ;; Defined at:
  7094 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  Options         1    wreg     unsigned char 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  Options         1    0[COMRAM] unsigned char 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7112 ;;Total ram usage:        0 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; Hardware stack levels required when called:   13
  7115 ;; This function calls:
  7116 ;;		_MdmCntSm
  7117 ;; This function is called by:
  7118 ;;		_InitializeTasks
  7119 ;;		_ScheduleTasks
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text24
  7124  006A8E                     __ptext24:
  7125                           	opt stack 0
  7126  006A8E                     _Mdm_DrvMainFn:
  7127                           	opt stack 15
  7128                           
  7129                           ;mdm_drv.c: 307: MdmCntSm();
  7130                           
  7131                           ;incstack = 0
  7132  006A8E  ECFC  F022         	call	_MdmCntSm	;wreg free
  7133  006A92  0012               	return		;funcret
  7134  006A94                     __end_of_Mdm_DrvMainFn:
  7135                           	opt stack 0
  7136                           tosu	equ	0xFFF
  7137                           tosh	equ	0xFFE
  7138                           tosl	equ	0xFFD
  7139                           pclath	equ	0xFFA
  7140                           tblptru	equ	0xFF8
  7141                           tblptrh	equ	0xFF7
  7142                           tblptrl	equ	0xFF6
  7143                           tablat	equ	0xFF5
  7144                           prodh	equ	0xFF4
  7145                           prodl	equ	0xFF3
  7146                           intcon	equ	0xFF2
  7147                           intcon2	equ	0xFF1
  7148                           intcon3	equ	0xFF0
  7149                           postinc0	equ	0xFEE
  7150                           plusw0	equ	0xFEB
  7151                           wreg	equ	0xFE8
  7152                           postinc1	equ	0xFE6
  7153                           postdec1	equ	0xFE5
  7154                           fsr1h	equ	0xFE2
  7155                           fsr1l	equ	0xFE1
  7156                           indf2	equ	0xFDF
  7157                           postinc2	equ	0xFDE
  7158                           postdec2	equ	0xFDD
  7159                           plusw2	equ	0xFDB
  7160                           fsr2h	equ	0xFDA
  7161                           fsr2l	equ	0xFD9
  7162                           status	equ	0xFD8
  7163                           
  7164 ;; *************** function _Wdg_MainTask *****************
  7165 ;; Defined at:
  7166 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  Options         1    wreg     unsigned char 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;  Options         1    0[COMRAM] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:   12
  7187 ;; This function calls:
  7188 ;;		_Mcu_ClearWdg
  7189 ;;		_Mcu_SetWdgSts
  7190 ;; This function is called by:
  7191 ;;		_InitializeTasks
  7192 ;;		_ScheduleTasks
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text25
  7197  0066B0                     __ptext25:
  7198                           	opt stack 0
  7199  0066B0                     _Wdg_MainTask:
  7200                           	opt stack 16
  7201                           
  7202                           ;wdg.c: 75: switch (SystemState)
  7203                           
  7204                           ;incstack = 0
  7205  0066B0  D007               	goto	l2509
  7206  0066B2                     
  7207                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7208  0066B2  0E01               	movlw	1
  7209  0066B4  ECC5  F034         	call	_Mcu_SetWdgSts
  7210                           
  7211                           ;wdg.c: 81: break;
  7212  0066B8  0012               	return	
  7213  0066BA                     
  7214                           ;wdg.c: 86: Mcu_ClearWdg();
  7215  0066BA  EC4A  F035         	call	_Mcu_ClearWdg	;wreg free
  7216                           
  7217                           ;wdg.c: 92: }
  7218                           
  7219                           ;wdg.c: 91: break;
  7220                           
  7221                           ;wdg.c: 90: default:
  7222                           
  7223                           ;wdg.c: 87: break;
  7224  0066BE  0012               	return	
  7225  0066C0                     l2509:
  7226  0066C0  0100               	movlb	0	; () banked
  7227  0066C2  51D5               	movf	_SystemState& (0+255),w,b
  7228                           
  7229                           ; Switch size 1, requested type "space"
  7230                           ; Number of cases is 2, Range of values is 0 to 1
  7231                           ; switch strategies available:
  7232                           ; Name         Instructions Cycles
  7233                           ; simple_byte            7     4 (average)
  7234                           ;	Chosen strategy is simple_byte
  7235  0066C4  0A00               	xorlw	0	; case 0
  7236  0066C6  B4D8               	btfsc	status,2,c
  7237  0066C8  D7F4               	goto	l2510
  7238  0066CA  0A01               	xorlw	1	; case 1
  7239  0066CC  A4D8               	btfss	status,2,c
  7240  0066CE  0012               	return	
  7241  0066D0  D7F4               	goto	l2512
  7242  0066D2                     __end_of_Wdg_MainTask:
  7243                           	opt stack 0
  7244                           tosu	equ	0xFFF
  7245                           tosh	equ	0xFFE
  7246                           tosl	equ	0xFFD
  7247                           pclath	equ	0xFFA
  7248                           tblptru	equ	0xFF8
  7249                           tblptrh	equ	0xFF7
  7250                           tblptrl	equ	0xFF6
  7251                           tablat	equ	0xFF5
  7252                           prodh	equ	0xFF4
  7253                           prodl	equ	0xFF3
  7254                           intcon	equ	0xFF2
  7255                           intcon2	equ	0xFF1
  7256                           intcon3	equ	0xFF0
  7257                           postinc0	equ	0xFEE
  7258                           plusw0	equ	0xFEB
  7259                           wreg	equ	0xFE8
  7260                           postinc1	equ	0xFE6
  7261                           postdec1	equ	0xFE5
  7262                           fsr1h	equ	0xFE2
  7263                           fsr1l	equ	0xFE1
  7264                           indf2	equ	0xFDF
  7265                           postinc2	equ	0xFDE
  7266                           postdec2	equ	0xFDD
  7267                           plusw2	equ	0xFDB
  7268                           fsr2h	equ	0xFDA
  7269                           fsr2l	equ	0xFD9
  7270                           status	equ	0xFD8
  7271                           
  7272 ;; *************** function _Mcu_SetWdgSts *****************
  7273 ;; Defined at:
  7274 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  WdgSts          1    wreg     unsigned char 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7292 ;;Total ram usage:        1 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:   11
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_Wdg_MainTask
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text26
  7303  00698A                     __ptext26:
  7304                           	opt stack 0
  7305  00698A                     _Mcu_SetWdgSts:
  7306                           	opt stack 16
  7307                           
  7308                           ;incstack = 0
  7309                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7310  00698A  0100               	movlb	0	; () banked
  7311  00698C  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7312                           
  7313                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7314  00698E  0100               	movlb	0	; () banked
  7315  006990  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7316  006992  D002               	bra	u14515
  7317  006994  90C0               	bcf	4032,0,c	;volatile
  7318  006996  D001               	bra	u14516
  7319  006998                     u14515:
  7320  006998  80C0               	bsf	4032,0,c	;volatile
  7321  00699A                     u14516:
  7322  00699A  0012               	return		;funcret
  7323  00699C                     __end_of_Mcu_SetWdgSts:
  7324                           	opt stack 0
  7325                           tosu	equ	0xFFF
  7326                           tosh	equ	0xFFE
  7327                           tosl	equ	0xFFD
  7328                           pclath	equ	0xFFA
  7329                           tblptru	equ	0xFF8
  7330                           tblptrh	equ	0xFF7
  7331                           tblptrl	equ	0xFF6
  7332                           tablat	equ	0xFF5
  7333                           prodh	equ	0xFF4
  7334                           prodl	equ	0xFF3
  7335                           intcon	equ	0xFF2
  7336                           intcon2	equ	0xFF1
  7337                           intcon3	equ	0xFF0
  7338                           postinc0	equ	0xFEE
  7339                           plusw0	equ	0xFEB
  7340                           wreg	equ	0xFE8
  7341                           postinc1	equ	0xFE6
  7342                           postdec1	equ	0xFE5
  7343                           fsr1h	equ	0xFE2
  7344                           fsr1l	equ	0xFE1
  7345                           indf2	equ	0xFDF
  7346                           postinc2	equ	0xFDE
  7347                           postdec2	equ	0xFDD
  7348                           plusw2	equ	0xFDB
  7349                           fsr2h	equ	0xFDA
  7350                           fsr2l	equ	0xFD9
  7351                           status	equ	0xFD8
  7352                           
  7353 ;; *************** function _Mcu_ClearWdg *****************
  7354 ;; Defined at:
  7355 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		None
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:   11
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_Wdg_MainTask
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text27
  7384  006A94                     __ptext27:
  7385                           	opt stack 0
  7386  006A94                     _Mcu_ClearWdg:
  7387                           	opt stack 16
  7388                           
  7389                           ;incstack = 0
  7390  006A94  0004               	clrwdt		;# 
  7391  006A96  0012               	return		;funcret
  7392  006A98                     __end_of_Mcu_ClearWdg:
  7393                           	opt stack 0
  7394                           tosu	equ	0xFFF
  7395                           tosh	equ	0xFFE
  7396                           tosl	equ	0xFFD
  7397                           pclath	equ	0xFFA
  7398                           tblptru	equ	0xFF8
  7399                           tblptrh	equ	0xFF7
  7400                           tblptrl	equ	0xFF6
  7401                           tablat	equ	0xFF5
  7402                           prodh	equ	0xFF4
  7403                           prodl	equ	0xFF3
  7404                           intcon	equ	0xFF2
  7405                           intcon2	equ	0xFF1
  7406                           intcon3	equ	0xFF0
  7407                           postinc0	equ	0xFEE
  7408                           plusw0	equ	0xFEB
  7409                           wreg	equ	0xFE8
  7410                           postinc1	equ	0xFE6
  7411                           postdec1	equ	0xFE5
  7412                           fsr1h	equ	0xFE2
  7413                           fsr1l	equ	0xFE1
  7414                           indf2	equ	0xFDF
  7415                           postinc2	equ	0xFDE
  7416                           postdec2	equ	0xFDD
  7417                           plusw2	equ	0xFDB
  7418                           fsr2h	equ	0xFDA
  7419                           fsr2l	equ	0xFD9
  7420                           status	equ	0xFD8
  7421                           
  7422 ;; *************** function _USBDeviceTasks *****************
  7423 ;; Defined at:
  7424 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  i               1   56[BANK0 ] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:   19
  7445 ;; This function calls:
  7446 ;;		_USBCtrlEPAllowStatusStage
  7447 ;;		_USBCtrlEPService
  7448 ;;		_USBDeviceInit
  7449 ;;		_USBIncrement1msInternalTimers
  7450 ;;		_USBStallHandler
  7451 ;;		_USBSuspend
  7452 ;;		_USBWakeFromSuspend
  7453 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7454 ;; This function is called by:
  7455 ;;		_UsbDevice_MainTask
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text28
  7460  001BAA                     __ptext28:
  7461                           	opt stack 0
  7462  001BAA                     _USBDeviceTasks:
  7463                           	opt stack 8
  7464                           
  7465                           ;usb_device.c: 562: }
  7466                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7467                           
  7468                           ; BSR set to: 0
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;usb_device.c: 561: return;
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7475                           
  7476                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7477                           
  7478                           ;usb_device.c: 529: UIE = 0;
  7479                           
  7480                           ;usb_device.c: 524: {
  7481                           ;usb_device.c: 526: UCON = 0;
  7482                           
  7483                           ;usb_device.c: 497: uint8_t i;
  7484                           ;usb_device.c: 523: if (1 != 1)
  7485                           
  7486                           ;incstack = 0
  7487  001BAA  0100               	movlb	0	; () banked
  7488  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7489  001BAE  A4D8               	btfss	status,2,c
  7490  001BB0  D012               	goto	l1615
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;usb_device.c: 585: {
  7494                           ;usb_device.c: 587: UCON = 0;
  7495  001BB2  0E00               	movlw	0
  7496  001BB4  6E65               	movwf	3941,c	;volatile
  7497                           
  7498                           ;usb_device.c: 590: UIE = 0;
  7499  001BB6  0E00               	movlw	0
  7500  001BB8  010F               	movlb	15	; () banked
  7501  001BBA  6F36               	movwf	54,b	;volatile
  7502                           
  7503                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7504  001BBC  0E16               	movlw	22
  7505  001BBE  6F39               	movwf	57,b	;volatile
  7506  001BC0  0E9F               	movlw	159
  7507  001BC2  6F37               	movwf	55,b	;volatile
  7508  001BC4  0E7B               	movlw	123
  7509  001BC6  6F36               	movwf	54,b	;volatile
  7510                           
  7511                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7512  001BC8  D001               	goto	l1616
  7513  001BCA                     l1617:
  7514  001BCA  8665               	bsf	3941,3,c	;volatile
  7515  001BCC                     l1616:
  7516  001BCC  A665               	btfss	3941,3,c	;volatile
  7517  001BCE  D7FD               	goto	l1617
  7518                           
  7519                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7520  001BD0  0E01               	movlw	1
  7521  001BD2  0100               	movlb	0	; () banked
  7522  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7523  001BD6                     l1615:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;usb_device.c: 605: }
  7527                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7528                           
  7529                           ; BSR set to: 0
  7530  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7531  001BD8  B4D8               	btfsc	status,2,c
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;usb_device.c: 609: {
  7535                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7536  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7537  001BDC  D00A               	goto	l1620
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;usb_device.c: 620: {
  7541                           ;usb_device.c: 626: {UIR = 0;};
  7542  001BDE  0E00               	movlw	0
  7543  001BE0  6E62               	movwf	3938,c	;volatile
  7544                           
  7545                           ;usb_device.c: 630: UIE=0;
  7546  001BE2  0E00               	movlw	0
  7547  001BE4  010F               	movlb	15	; () banked
  7548  001BE6  6F36               	movwf	54,b	;volatile
  7549                           
  7550                           ; BSR set to: 15
  7551                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7552  001BE8  8136               	bsf	54,0,b	;volatile
  7553                           
  7554                           ; BSR set to: 15
  7555                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7556  001BEA  8936               	bsf	54,4,b	;volatile
  7557                           
  7558                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7559  001BEC  0E02               	movlw	2
  7560  001BEE  0100               	movlb	0	; () banked
  7561  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7562  001BF2                     l1620:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;usb_device.c: 635: }
  7566                           ;usb_device.c: 636: }
  7567                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7568                           
  7569                           ; BSR set to: 0
  7570                           
  7571                           ; BSR set to: 0
  7572  001BF2  A462               	btfss	3938,2,c	;volatile
  7573  001BF4  D006               	goto	l1621
  7574                           
  7575                           ; BSR set to: 0
  7576  001BF6  010F               	movlb	15	; () banked
  7577  001BF8  A536               	btfss	54,2,b	;volatile
  7578  001BFA  D003               	goto	l1621
  7579                           
  7580                           ; BSR set to: 15
  7581                           ;usb_device.c: 653: {
  7582                           ;usb_device.c: 654: (UIR &= 0xFB);
  7583  001BFC  9462               	bcf	3938,2,c	;volatile
  7584                           
  7585                           ; BSR set to: 15
  7586                           ;usb_device.c: 658: USBWakeFromSuspend();
  7587  001BFE  EC44  F031         	call	_USBWakeFromSuspend	;wreg free
  7588  001C02                     l1621:
  7589                           
  7590                           ;usb_device.c: 660: }
  7591                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7592  001C02  A265               	btfss	3941,1,c	;volatile
  7593  001C04  D002               	goto	l1622
  7594                           
  7595                           ;usb_device.c: 666: {
  7596                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7597  001C06  98A1               	bcf	4001,4,c	;volatile
  7598                           
  7599                           ;usb_device.c: 668: return;
  7600  001C08  0012               	return	
  7601  001C0A                     l1622:
  7602                           
  7603                           ;usb_device.c: 669: }
  7604                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7605  001C0A  A062               	btfss	3938,0,c	;volatile
  7606  001C0C  D009               	goto	l1623
  7607  001C0E  010F               	movlb	15	; () banked
  7608  001C10  A136               	btfss	54,0,b	;volatile
  7609  001C12  D006               	goto	l1623
  7610                           
  7611                           ; BSR set to: 15
  7612                           ;usb_device.c: 682: {
  7613                           ;usb_device.c: 683: USBDeviceInit();
  7614  001C14  EC6B  F011         	call	_USBDeviceInit	;wreg free
  7615                           
  7616                           ;usb_device.c: 687: ;
  7617                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7618  001C18  0E04               	movlw	4
  7619  001C1A  0100               	movlb	0	; () banked
  7620  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;usb_device.c: 699: (UIR &= 0xFE);
  7624  001C1E  9062               	bcf	3938,0,c	;volatile
  7625  001C20                     l1623:
  7626                           
  7627                           ;usb_device.c: 700: }
  7628                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7629                           
  7630                           ; BSR set to: 0
  7631  001C20  A862               	btfss	3938,4,c	;volatile
  7632  001C22  D004               	goto	l1624
  7633  001C24  010F               	movlb	15	; () banked
  7634  001C26  B936               	btfsc	54,4,b	;volatile
  7635                           
  7636                           ; BSR set to: 15
  7637                           ;usb_device.c: 706: {
  7638                           ;usb_device.c: 712: USBSuspend();
  7639  001C28  ECE9  F031         	call	_USBSuspend	;wreg free
  7640  001C2C                     l1624:
  7641                           
  7642                           ;usb_device.c: 714: }
  7643                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7644  001C2C  AC62               	btfss	3938,6,c	;volatile
  7645  001C2E  D01D               	goto	l1628
  7646                           
  7647                           ;usb_device.c: 727: {
  7648                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7649  001C30  010F               	movlb	15	; () banked
  7650  001C32  AD36               	btfss	54,6,b	;volatile
  7651  001C34  D00F               	goto	l1626
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;usb_device.c: 730: {
  7655                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7656  001C36  0E00               	movlw	0
  7657  001C38  0100               	movlb	0	; () banked
  7658  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7659  001C3C  0E73               	movlw	115
  7660  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7661  001C40  0E00               	movlw	0
  7662  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7663  001C44  0E00               	movlw	0
  7664  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7665  001C48  0E00               	movlw	0
  7666  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7667  001C4C  0E01               	movlw	1
  7668  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7669  001C50  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7670  001C54                     l1626:
  7671                           
  7672                           ;usb_device.c: 732: }
  7673                           ;usb_device.c: 733: (UIR &= 0xBF);
  7674  001C54  9C62               	bcf	3938,6,c	;volatile
  7675                           
  7676                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7677  001C56  EC69  F033         	call	_USBIncrement1msInternalTimers	;wreg free
  7678                           
  7679                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7680  001C5A  0100               	movlb	0	; () banked
  7681  001C5C  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7682  001C5E  A4D8               	btfss	status,2,c
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;usb_device.c: 754: {
  7686                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7687  001C60  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;usb_device.c: 756: }
  7691                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7692                           
  7693                           ; BSR set to: 0
  7694  001C62  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7695  001C64  B4D8               	btfsc	status,2,c
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;usb_device.c: 763: {
  7699                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7700  001C66  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7701  001C6A                     l1628:
  7702                           
  7703                           ;usb_device.c: 765: }
  7704                           ;usb_device.c: 767: }
  7705                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7706  001C6A  AA62               	btfss	3938,5,c	;volatile
  7707  001C6C  D004               	goto	l1629
  7708  001C6E  010F               	movlb	15	; () banked
  7709  001C70  BB36               	btfsc	54,5,b	;volatile
  7710                           
  7711                           ; BSR set to: 15
  7712                           ;usb_device.c: 770: {
  7713                           ;usb_device.c: 771: USBStallHandler();
  7714  001C72  ECC1  F02F         	call	_USBStallHandler	;wreg free
  7715  001C76                     l1629:
  7716                           
  7717                           ;usb_device.c: 772: }
  7718                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7719  001C76  A262               	btfss	3938,1,c	;volatile
  7720  001C78  D013               	goto	l1630
  7721  001C7A  010F               	movlb	15	; () banked
  7722  001C7C  A336               	btfss	54,1,b	;volatile
  7723  001C7E  D010               	goto	l1630
  7724                           
  7725                           ; BSR set to: 15
  7726                           ;usb_device.c: 775: {
  7727                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7728  001C80  0E7F               	movlw	127
  7729  001C82  0100               	movlb	0	; () banked
  7730  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7731  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7732  001C88  0E00               	movlw	0
  7733  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7734  001C8C  0E00               	movlw	0
  7735  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7736  001C90  0E00               	movlw	0
  7737  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7738  001C94  0E01               	movlw	1
  7739  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7740  001C98  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7741                           
  7742                           ;usb_device.c: 777: {UEIR = 0;};
  7743  001C9C  0E00               	movlw	0
  7744  001C9E  6E63               	movwf	3939,c	;volatile
  7745  001CA0                     l1630:
  7746                           
  7747                           ;usb_device.c: 785: }
  7748                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7749  001CA0  0E04               	movlw	4
  7750  001CA2  0100               	movlb	0	; () banked
  7751  001CA4  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7752  001CA6  D002               	goto	l1631
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;usb_device.c: 793: {
  7756                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7757  001CA8  98A1               	bcf	4001,4,c	;volatile
  7758                           
  7759                           ;usb_device.c: 795: return;
  7760  001CAA  0012               	return	
  7761  001CAC                     l1631:
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;usb_device.c: 796: }
  7765                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7766  001CAC  010F               	movlb	15	; () banked
  7767  001CAE  A736               	btfss	54,3,b	;volatile
  7768  001CB0  D03E               	goto	u15470
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;usb_device.c: 802: {
  7772                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7773  001CB2  0E00               	movlw	0
  7774  001CB4  0100               	movlb	0	; () banked
  7775  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7776  001CB8                     l15856:
  7777                           
  7778                           ; BSR set to: 0
  7779  001CB8  0E03               	movlw	3
  7780  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7781  001CBC  D001               	goto	l1633
  7782  001CBE  D037               	goto	u15470
  7783  001CC0                     l1633:
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;usb_device.c: 804: {
  7787                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7788  001CC0  A662               	btfss	3938,3,c	;volatile
  7789  001CC2  D035               	goto	u15470
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;usb_device.c: 806: {
  7793                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7794  001CC4  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7798  001CC8  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7799  001CCA  32E8               	rrcf	wreg,f,c
  7800  001CCC  32E8               	rrcf	wreg,f,c
  7801  001CCE  0B0F               	andlw	15
  7802  001CD0  6FCB               	movwf	_endpoint_number& (0+255),b
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;usb_device.c: 811: (UIR &= 0xF7);
  7806  001CD2  9662               	bcf	3938,3,c	;volatile
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7810  001CD4  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7811  001CD6  D007               	goto	l1636
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;usb_device.c: 817: {
  7815                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7816  001CD8  51CB               	movf	_endpoint_number& (0+255),w,b
  7817  001CDA  0D01               	mullw	1
  7818  001CDC  0ECE               	movlw	low _ep_data_out
  7819  001CDE  24F3               	addwf	prodl,w,c
  7820  001CE0  6ED9               	movwf	fsr2l,c
  7821  001CE2  0E02               	movlw	high _ep_data_out
  7822  001CE4  D007               	goto	L3
  7823  001CE6                     l1636:
  7824                           
  7825                           ;usb_device.c: 820: else
  7826                           ;usb_device.c: 821: {
  7827                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7828                           
  7829                           ; BSR set to: 2
  7830  001CE6  0100               	movlb	0	; () banked
  7831  001CE8  51CB               	movf	_endpoint_number& (0+255),w,b
  7832  001CEA  0D01               	mullw	1
  7833  001CEC  0ED1               	movlw	low _ep_data_in
  7834  001CEE  24F3               	addwf	prodl,w,c
  7835  001CF0  6ED9               	movwf	fsr2l,c
  7836  001CF2  0E02               	movlw	high _ep_data_in
  7837  001CF4                     L3:
  7838  001CF4  20F4               	addwfc	prodh,w,c
  7839  001CF6  6EDA               	movwf	fsr2h,c
  7840  001CF8  0102               	movlb	2	; () banked
  7841  001CFA  70DF               	btg	indf2,0,c
  7842                           
  7843                           ; BSR set to: 2
  7844                           ;usb_device.c: 823: }
  7845                           ;usb_device.c: 828: if(endpoint_number == 0)
  7846                           
  7847                           ; BSR set to: 2
  7848  001CFC  0100               	movlb	0	; () banked
  7849  001CFE  51CB               	movf	_endpoint_number& (0+255),w,b
  7850  001D00  A4D8               	btfss	status,2,c
  7851  001D02  D003               	goto	l1638
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;usb_device.c: 829: {
  7855                           ;usb_device.c: 830: USBCtrlEPService();
  7856  001D04  EC15  F026         	call	_USBCtrlEPService	;wreg free
  7857                           
  7858                           ;usb_device.c: 831: }
  7859  001D08  D00F               	goto	l1640
  7860  001D0A                     l1638:
  7861                           
  7862                           ;usb_device.c: 832: else
  7863                           ;usb_device.c: 833: {
  7864                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7865  001D0A  0E00               	movlw	0
  7866  001D0C  0100               	movlb	0	; () banked
  7867  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7868  001D10  0E72               	movlw	114
  7869  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7870  001D14  0ED6               	movlw	low _USTATcopy
  7871  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7872  001D18  0E00               	movlw	high _USTATcopy
  7873  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7874  001D1C  0E00               	movlw	0
  7875  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7876  001D20  0E00               	movlw	0
  7877  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7878  001D24  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7879  001D28                     l1640:
  7880  001D28  0100               	movlb	0	; () banked
  7881  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7882  001D2C  D7C5               	goto	l15856
  7883  001D2E                     u15470:
  7884                           
  7885                           ;usb_device.c: 840: }
  7886                           ;usb_device.c: 841: }
  7887                           ;usb_device.c: 842: }
  7888                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7889                           
  7890                           ; BSR set to: 0
  7891  001D2E  98A1               	bcf	4001,4,c	;volatile
  7892  001D30  0012               	return		;funcret
  7893  001D32                     __end_of_USBDeviceTasks:
  7894                           	opt stack 0
  7895                           tosu	equ	0xFFF
  7896                           tosh	equ	0xFFE
  7897                           tosl	equ	0xFFD
  7898                           pclath	equ	0xFFA
  7899                           tblptru	equ	0xFF8
  7900                           tblptrh	equ	0xFF7
  7901                           tblptrl	equ	0xFF6
  7902                           tablat	equ	0xFF5
  7903                           prodh	equ	0xFF4
  7904                           prodl	equ	0xFF3
  7905                           intcon	equ	0xFF2
  7906                           intcon2	equ	0xFF1
  7907                           intcon3	equ	0xFF0
  7908                           postinc0	equ	0xFEE
  7909                           plusw0	equ	0xFEB
  7910                           wreg	equ	0xFE8
  7911                           postinc1	equ	0xFE6
  7912                           postdec1	equ	0xFE5
  7913                           fsr1h	equ	0xFE2
  7914                           fsr1l	equ	0xFE1
  7915                           indf2	equ	0xFDF
  7916                           postinc2	equ	0xFDE
  7917                           postdec2	equ	0xFDD
  7918                           plusw2	equ	0xFDB
  7919                           fsr2h	equ	0xFDA
  7920                           fsr2l	equ	0xFD9
  7921                           status	equ	0xFD8
  7922                           
  7923 ;; *************** function _USBWakeFromSuspend *****************
  7924 ;; Defined at:
  7925 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;		None
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1    wreg      void 
  7932 ;; Registers used:
  7933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:   15
  7946 ;; This function calls:
  7947 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7948 ;; This function is called by:
  7949 ;;		_USBDeviceTasks
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text29
  7954  006288                     __ptext29:
  7955                           	opt stack 0
  7956  006288                     _USBWakeFromSuspend:
  7957                           	opt stack 11
  7958                           
  7959                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7960                           
  7961                           ;incstack = 0
  7962  006288  0E00               	movlw	0
  7963  00628A  0101               	movlb	1	; () banked
  7964  00628C  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  7965                           
  7966                           ; BSR set to: 1
  7967                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7968  00628E  0E00               	movlw	0
  7969  006290  0100               	movlb	0	; () banked
  7970  006292  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7971  006294  0E74               	movlw	116
  7972  006296  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7973  006298  0E00               	movlw	0
  7974  00629A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7975  00629C  0E00               	movlw	0
  7976  00629E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7977  0062A0  0E00               	movlw	0
  7978  0062A2  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7979  0062A4  0E00               	movlw	0
  7980  0062A6  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7981  0062A8  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7982                           
  7983                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7984  0062AC  9265               	bcf	3941,1,c	;volatile
  7985                           
  7986                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7987  0062AE  010F               	movlb	15	; () banked
  7988  0062B0  9536               	bcf	54,2,b	;volatile
  7989                           
  7990                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7991  0062B2  D001               	goto	l1768
  7992  0062B4                     
  7993                           ;usb_device.c: 2361: {
  7994                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7995                           
  7996                           ; BSR set to: 15
  7997  0062B4  9462               	bcf	3938,2,c	;volatile
  7998  0062B6                     l1768:
  7999  0062B6  B462               	btfsc	3938,2,c	;volatile
  8000  0062B8  D7FD               	goto	l1769
  8001                           
  8002                           ;usb_device.c: 2363: }
  8003                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  8004  0062BA  0E00               	movlw	0
  8005  0062BC  0101               	movlb	1	; () banked
  8006  0062BE  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8007                           
  8008                           ; BSR set to: 1
  8009  0062C0  0012               	return		;funcret
  8010  0062C2                     __end_of_USBWakeFromSuspend:
  8011                           	opt stack 0
  8012                           tosu	equ	0xFFF
  8013                           tosh	equ	0xFFE
  8014                           tosl	equ	0xFFD
  8015                           pclath	equ	0xFFA
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           prodh	equ	0xFF4
  8021                           prodl	equ	0xFF3
  8022                           intcon	equ	0xFF2
  8023                           intcon2	equ	0xFF1
  8024                           intcon3	equ	0xFF0
  8025                           postinc0	equ	0xFEE
  8026                           plusw0	equ	0xFEB
  8027                           wreg	equ	0xFE8
  8028                           postinc1	equ	0xFE6
  8029                           postdec1	equ	0xFE5
  8030                           fsr1h	equ	0xFE2
  8031                           fsr1l	equ	0xFE1
  8032                           indf2	equ	0xFDF
  8033                           postinc2	equ	0xFDE
  8034                           postdec2	equ	0xFDD
  8035                           plusw2	equ	0xFDB
  8036                           fsr2h	equ	0xFDA
  8037                           fsr2l	equ	0xFD9
  8038                           status	equ	0xFD8
  8039                           
  8040 ;; *************** function _USBSuspend *****************
  8041 ;; Defined at:
  8042 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8060 ;;Total ram usage:        0 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:   15
  8063 ;; This function calls:
  8064 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8065 ;; This function is called by:
  8066 ;;		_USBDeviceTasks
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text30
  8071  0063D2                     __ptext30:
  8072                           	opt stack 0
  8073  0063D2                     _USBSuspend:
  8074                           	opt stack 11
  8075                           
  8076                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8077                           
  8078                           ; BSR set to: 1
  8079                           ;incstack = 0
  8080  0063D2  010F               	movlb	15	; () banked
  8081  0063D4  8536               	bsf	54,2,b	;volatile
  8082                           
  8083                           ; BSR set to: 15
  8084                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8085  0063D6  9862               	bcf	3938,4,c	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8089  0063D8  8265               	bsf	3941,1,c	;volatile
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8093  0063DA  0E01               	movlw	1
  8094  0063DC  0101               	movlb	1	; () banked
  8095  0063DE  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8096                           
  8097                           ; BSR set to: 1
  8098                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8099  0063E0  0E00               	movlw	0
  8100  0063E2  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8104  0063E4  0E00               	movlw	0
  8105  0063E6  0100               	movlb	0	; () banked
  8106  0063E8  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8107  0063EA  0E75               	movlw	117
  8108  0063EC  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8109  0063EE  0E00               	movlw	0
  8110  0063F0  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8111  0063F2  0E00               	movlw	0
  8112  0063F4  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8113  0063F6  0E00               	movlw	0
  8114  0063F8  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8115  0063FA  0E00               	movlw	0
  8116  0063FC  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8117  0063FE  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8118  006402  0012               	return		;funcret
  8119  006404                     __end_of_USBSuspend:
  8120                           	opt stack 0
  8121                           tosu	equ	0xFFF
  8122                           tosh	equ	0xFFE
  8123                           tosl	equ	0xFFD
  8124                           pclath	equ	0xFFA
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           intcon	equ	0xFF2
  8132                           intcon2	equ	0xFF1
  8133                           intcon3	equ	0xFF0
  8134                           postinc0	equ	0xFEE
  8135                           plusw0	equ	0xFEB
  8136                           wreg	equ	0xFE8
  8137                           postinc1	equ	0xFE6
  8138                           postdec1	equ	0xFE5
  8139                           fsr1h	equ	0xFE2
  8140                           fsr1l	equ	0xFE1
  8141                           indf2	equ	0xFDF
  8142                           postinc2	equ	0xFDE
  8143                           postdec2	equ	0xFDD
  8144                           plusw2	equ	0xFDB
  8145                           fsr2h	equ	0xFDA
  8146                           fsr2l	equ	0xFD9
  8147                           status	equ	0xFD8
  8148                           
  8149 ;; *************** function _USBStallHandler *****************
  8150 ;; Defined at:
  8151 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  1    wreg      void 
  8158 ;; Registers used:
  8159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8169 ;;Total ram usage:        1 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:   11
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_USBDeviceTasks
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text31
  8180  005F82                     __ptext31:
  8181                           	opt stack 0
  8182  005F82                     _USBStallHandler:
  8183                           	opt stack 15
  8184                           
  8185                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8186                           
  8187                           ;incstack = 0
  8188  005F82  010F               	movlb	15	; () banked
  8189  005F84  A126               	btfss	38,0,b	;volatile
  8190  005F86  D01D               	goto	l1760
  8191                           
  8192                           ; BSR set to: 15
  8193                           ;usb_device.c: 2233: {
  8194                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8195  005F88  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8196  005F8C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8197  005F90  0E80               	movlw	128
  8198  005F92  18DE               	xorwf	postinc2,w,c
  8199  005F94  A4D8               	btfss	status,2,c
  8200  005F96  D014               	goto	l1761
  8201                           
  8202                           ; BSR set to: 15
  8203  005F98  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8204  005F9C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8205  005FA0  0E84               	movlw	132
  8206  005FA2  18DE               	xorwf	postinc2,w,c
  8207  005FA4  A4D8               	btfss	status,2,c
  8208  005FA6  D00C               	goto	l1761
  8209                           
  8210                           ; BSR set to: 15
  8211                           ;usb_device.c: 2236: {
  8212                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8213  005FA8  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8214  005FAC  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8215  005FB0  0E0C               	movlw	12
  8216  005FB2  6EDF               	movwf	indf2,c
  8217                           
  8218                           ; BSR set to: 15
  8219                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8220  005FB4  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8221  005FB8  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8222  005FBC  0E00               	movlw	0
  8223  005FBE  8EDB               	bsf	plusw2,7,c
  8224  005FC0                     l1761:
  8225                           
  8226                           ; BSR set to: 15
  8227                           ;usb_device.c: 2240: }
  8228                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8229                           
  8230                           ; BSR set to: 15
  8231  005FC0  9126               	bcf	38,0,b	;volatile
  8232  005FC2                     l1760:
  8233                           
  8234                           ; BSR set to: 15
  8235                           ;usb_device.c: 2242: }
  8236                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8237  005FC2  9A62               	bcf	3938,5,c	;volatile
  8238                           
  8239                           ; BSR set to: 15
  8240  005FC4  0012               	return		;funcret
  8241  005FC6                     __end_of_USBStallHandler:
  8242                           	opt stack 0
  8243                           tosu	equ	0xFFF
  8244                           tosh	equ	0xFFE
  8245                           tosl	equ	0xFFD
  8246                           pclath	equ	0xFFA
  8247                           tblptru	equ	0xFF8
  8248                           tblptrh	equ	0xFF7
  8249                           tblptrl	equ	0xFF6
  8250                           tablat	equ	0xFF5
  8251                           prodh	equ	0xFF4
  8252                           prodl	equ	0xFF3
  8253                           intcon	equ	0xFF2
  8254                           intcon2	equ	0xFF1
  8255                           intcon3	equ	0xFF0
  8256                           postinc0	equ	0xFEE
  8257                           plusw0	equ	0xFEB
  8258                           wreg	equ	0xFE8
  8259                           postinc1	equ	0xFE6
  8260                           postdec1	equ	0xFE5
  8261                           fsr1h	equ	0xFE2
  8262                           fsr1l	equ	0xFE1
  8263                           indf2	equ	0xFDF
  8264                           postinc2	equ	0xFDE
  8265                           postdec2	equ	0xFDD
  8266                           plusw2	equ	0xFDB
  8267                           fsr2h	equ	0xFDA
  8268                           fsr2l	equ	0xFD9
  8269                           status	equ	0xFD8
  8270                           
  8271 ;; *************** function _USBIncrement1msInternalTimers *****************
  8272 ;; Defined at:
  8273 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;		None
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;Total ram usage:        0 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:   11
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_USBDeviceTasks
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text32
  8302  0066D2                     __ptext32:
  8303                           	opt stack 0
  8304  0066D2                     _USBIncrement1msInternalTimers:
  8305                           	opt stack 15
  8306                           
  8307                           ;usb_device.c: 3050: USB1msTickCount++;
  8308                           
  8309                           ; BSR set to: 15
  8310                           ;incstack = 0
  8311  0066D2  0E01               	movlw	1
  8312  0066D4  0103               	movlb	3	; () banked
  8313  0066D6  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8314  0066D8  0E00               	movlw	0
  8315  0066DA  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8316  0066DC  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8317  0066DE  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8318                           
  8319                           ; BSR set to: 3
  8320                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8321  0066E0  0101               	movlb	1	; () banked
  8322  0066E2  51E2               	movf	_USBBusIsSuspended& (0+255),w,b
  8323  0066E4  A4D8               	btfss	status,2,c
  8324  0066E6  0012               	return	
  8325                           
  8326                           ; BSR set to: 1
  8327                           ;usb_device.c: 3052: {
  8328                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8329  0066E8  2BE0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8330                           
  8331                           ; BSR set to: 1
  8332                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8333  0066EA  51E0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8334  0066EC  A4D8               	btfss	status,2,c
  8335  0066EE  0012               	return	
  8336                           
  8337                           ; BSR set to: 1
  8338                           ;usb_device.c: 3056: {
  8339                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8340  0066F0  69E0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8341                           
  8342                           ; BSR set to: 1
  8343  0066F2  0012               	return	
  8344  0066F4                     __end_of_USBIncrement1msInternalTimers:
  8345                           	opt stack 0
  8346                           tosu	equ	0xFFF
  8347                           tosh	equ	0xFFE
  8348                           tosl	equ	0xFFD
  8349                           pclath	equ	0xFFA
  8350                           tblptru	equ	0xFF8
  8351                           tblptrh	equ	0xFF7
  8352                           tblptrl	equ	0xFF6
  8353                           tablat	equ	0xFF5
  8354                           prodh	equ	0xFF4
  8355                           prodl	equ	0xFF3
  8356                           intcon	equ	0xFF2
  8357                           intcon2	equ	0xFF1
  8358                           intcon3	equ	0xFF0
  8359                           postinc0	equ	0xFEE
  8360                           plusw0	equ	0xFEB
  8361                           wreg	equ	0xFE8
  8362                           postinc1	equ	0xFE6
  8363                           postdec1	equ	0xFE5
  8364                           fsr1h	equ	0xFE2
  8365                           fsr1l	equ	0xFE1
  8366                           indf2	equ	0xFDF
  8367                           postinc2	equ	0xFDE
  8368                           postdec2	equ	0xFDD
  8369                           plusw2	equ	0xFDB
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _USBDeviceInit *****************
  8375 ;; Defined at:
  8376 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  i               1   37[BANK0 ] unsigned char 
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8393 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8394 ;;Total ram usage:        1 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:   12
  8397 ;; This function calls:
  8398 ;;		_memset
  8399 ;; This function is called by:
  8400 ;;		_USBDeviceTasks
  8401 ;;		_UsbDevice_MainTask
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text33
  8406  0022D6                     __ptext33:
  8407                           	opt stack 0
  8408  0022D6                     _USBDeviceInit:
  8409                           	opt stack 14
  8410                           
  8411                           ;usb_device.c: 297: uint8_t i;
  8412                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8413                           
  8414                           ; BSR set to: 1
  8415                           ;incstack = 0
  8416  0022D6  98A0               	bcf	4000,4,c	;volatile
  8417                           
  8418                           ;usb_device.c: 303: ;
  8419                           ;usb_device.c: 306: {UEIR = 0;};
  8420  0022D8  0E00               	movlw	0
  8421  0022DA  6E63               	movwf	3939,c	;volatile
  8422                           
  8423                           ;usb_device.c: 309: {UIR = 0;};
  8424  0022DC  0E00               	movlw	0
  8425  0022DE  6E62               	movwf	3938,c	;volatile
  8426                           
  8427                           ;usb_device.c: 312: UEP0 = 0;
  8428  0022E0  0E00               	movlw	0
  8429  0022E2  010F               	movlb	15	; () banked
  8430  0022E4  6F26               	movwf	38,b	;volatile
  8431                           
  8432                           ; BSR set to: 15
  8433                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8434  0022E6  0E27               	movlw	39
  8435  0022E8  0100               	movlb	0	; () banked
  8436  0022EA  6F7D               	movwf	memset@p1& (0+255),b
  8437  0022EC  0E0F               	movlw	15
  8438  0022EE  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8439  0022F0  0E00               	movlw	0
  8440  0022F2  6F80               	movwf	(memset@c+1)& (0+255),b
  8441  0022F4  0E00               	movlw	0
  8442  0022F6  6F7F               	movwf	memset@c& (0+255),b
  8443  0022F8  0E00               	movlw	0
  8444  0022FA  6F82               	movwf	(memset@n+1)& (0+255),b
  8445  0022FC  0E02               	movlw	2
  8446  0022FE  6F81               	movwf	memset@n& (0+255),b
  8447  002300  EC33  F032         	call	_memset	;wreg free
  8448                           
  8449                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8450  002304  0E16               	movlw	22
  8451  002306  010F               	movlb	15	; () banked
  8452  002308  6F39               	movwf	57,b	;volatile
  8453                           
  8454                           ; BSR set to: 15
  8455  00230A  0E9F               	movlw	159
  8456  00230C  6F37               	movwf	55,b	;volatile
  8457                           
  8458                           ; BSR set to: 15
  8459  00230E  0E7B               	movlw	123
  8460  002310  6F36               	movwf	54,b	;volatile
  8461                           
  8462                           ; BSR set to: 15
  8463                           ;usb_device.c: 319: ;
  8464                           ;usb_device.c: 322: ;
  8465                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8466  002312  0E00               	movlw	0
  8467  002314  0100               	movlb	0	; () banked
  8468  002316  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8469  002318                     l14546:
  8470                           
  8471                           ; BSR set to: 0
  8472  002318  0E0B               	movlw	11
  8473  00231A  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8474  00231C  D001               	goto	l1604
  8475  00231E  D00E               	goto	u13610
  8476  002320                     l1604:
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;usb_device.c: 326: {
  8480                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8481                           
  8482                           ; BSR set to: 0
  8483  002320  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8484  002322  0D04               	mullw	4
  8485  002324  0E00               	movlw	0
  8486  002326  24F3               	addwf	prodl,w,c
  8487  002328  6ED9               	movwf	fsr2l,c
  8488  00232A  0E04               	movlw	4
  8489  00232C  20F4               	addwfc	prodh,w,c
  8490  00232E  6EDA               	movwf	fsr2h,c
  8491  002330  6ADE               	clrf	postinc2,c
  8492  002332  6ADE               	clrf	postinc2,c
  8493  002334  6ADE               	clrf	postinc2,c
  8494  002336  6ADD               	clrf	postdec2,c
  8495                           
  8496                           ; BSR set to: 0
  8497  002338  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8498  00233A  D7EE               	goto	l14546
  8499  00233C                     u13610:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;usb_device.c: 328: }
  8503                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8504  00233C  8C65               	bsf	3941,6,c	;volatile
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;usb_device.c: 334: UADDR = 0x00;
  8508  00233E  0E00               	movlw	0
  8509  002340  010F               	movlb	15	; () banked
  8510  002342  6F38               	movwf	56,b	;volatile
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8514  002344  9865               	bcf	3941,4,c	;volatile
  8515                           
  8516                           ; BSR set to: 15
  8517                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8518  002346  9C65               	bcf	3941,6,c	;volatile
  8519  002348                     
  8520                           ;usb_device.c: 344: {
  8521                           ;usb_device.c: 345: (UIR &= 0xF7);
  8522                           
  8523                           ; BSR set to: 15
  8524  002348  9662               	bcf	3938,3,c	;volatile
  8525                           
  8526                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8527  00234A  0E00               	movlw	0
  8528  00234C  0100               	movlb	0	; () banked
  8529  00234E  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8533  002350  0E00               	movlw	0
  8534  002352  0101               	movlb	1	; () banked
  8535  002354  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8536                           
  8537                           ; BSR set to: 1
  8538                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8539  002356  0E00               	movlw	0
  8540  002358  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8541  00235A  0E00               	movlw	0
  8542  00235C  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8543                           
  8544                           ; BSR set to: 1
  8545                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8546  00235E  B662               	btfsc	3938,3,c	;volatile
  8547  002360  D7F3               	goto	l1606
  8548                           
  8549                           ; BSR set to: 1
  8550                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8551                           
  8552                           ; BSR set to: 1
  8553  002362  0E01               	movlw	1
  8554  002364  0100               	movlb	0	; () banked
  8555  002366  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8556                           
  8557                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8558  002368  0E01               	movlw	1
  8559  00236A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8560                           
  8561                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8562  00236C  0E00               	movlw	0
  8563  00236E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8564                           
  8565                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8566  002370  0E00               	movlw	0
  8567  002372  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8568                           
  8569                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8570  002374  0E00               	movlw	0
  8571  002376  0101               	movlb	1	; () banked
  8572  002378  6FE2               	movwf	_USBBusIsSuspended& (0+255),b
  8573                           
  8574                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8575  00237A  0E00               	movlw	0
  8576  00237C  0100               	movlb	0	; () banked
  8577  00237E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8578  002380                     l14574:
  8579                           
  8580                           ; BSR set to: 0
  8581  002380  0E02               	movlw	2
  8582  002382  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8583  002384  D001               	goto	l1608
  8584  002386  D02E               	goto	u13640
  8585  002388                     l1608:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;usb_device.c: 364: {
  8589                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8590                           
  8591                           ; BSR set to: 0
  8592  002388  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8593  00238A  0D02               	mullw	2
  8594  00238C  0EB6               	movlw	low _pBDTEntryIn
  8595  00238E  24F3               	addwf	prodl,w,c
  8596  002390  6ED9               	movwf	fsr2l,c
  8597  002392  0E00               	movlw	high _pBDTEntryIn
  8598  002394  20F4               	addwfc	prodh,w,c
  8599  002396  6EDA               	movwf	fsr2h,c
  8600  002398  0E00               	movlw	0
  8601  00239A  6EDE               	movwf	postinc2,c
  8602  00239C  0E00               	movlw	0
  8603  00239E  6EDD               	movwf	postdec2,c
  8604                           
  8605                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8606  0023A0  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8607  0023A2  0D02               	mullw	2
  8608  0023A4  0E06               	movlw	low _pBDTEntryOut
  8609  0023A6  24F3               	addwf	prodl,w,c
  8610  0023A8  6ED9               	movwf	fsr2l,c
  8611  0023AA  0E03               	movlw	high _pBDTEntryOut
  8612  0023AC  20F4               	addwfc	prodh,w,c
  8613  0023AE  6EDA               	movwf	fsr2h,c
  8614  0023B0  0E00               	movlw	0
  8615  0023B2  6EDE               	movwf	postinc2,c
  8616  0023B4  0E00               	movlw	0
  8617  0023B6  6EDD               	movwf	postdec2,c
  8618                           
  8619                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8620  0023B8  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8621  0023BA  0D01               	mullw	1
  8622  0023BC  0ED1               	movlw	low _ep_data_in
  8623  0023BE  24F3               	addwf	prodl,w,c
  8624  0023C0  6ED9               	movwf	fsr2l,c
  8625  0023C2  0E02               	movlw	high _ep_data_in
  8626  0023C4  20F4               	addwfc	prodh,w,c
  8627  0023C6  6EDA               	movwf	fsr2h,c
  8628  0023C8  0E00               	movlw	0
  8629  0023CA  6EDF               	movwf	indf2,c
  8630                           
  8631                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8632  0023CC  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8633  0023CE  0D01               	mullw	1
  8634  0023D0  0ECE               	movlw	low _ep_data_out
  8635  0023D2  24F3               	addwf	prodl,w,c
  8636  0023D4  6ED9               	movwf	fsr2l,c
  8637  0023D6  0E02               	movlw	high _ep_data_out
  8638  0023D8  20F4               	addwfc	prodh,w,c
  8639  0023DA  6EDA               	movwf	fsr2h,c
  8640  0023DC  0E00               	movlw	0
  8641  0023DE  6EDF               	movwf	indf2,c
  8642                           
  8643                           ; BSR set to: 0
  8644  0023E0  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8645  0023E2  D7CE               	goto	l14574
  8646  0023E4                     u13640:
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;usb_device.c: 369: }
  8650                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8651                           
  8652                           ; BSR set to: 0
  8653  0023E4  0E08               	movlw	8
  8654  0023E6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8655  0023E8  0E04               	movlw	4
  8656  0023EA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8660  0023EC  0E16               	movlw	22
  8661  0023EE  010F               	movlb	15	; () banked
  8662  0023F0  6F26               	movwf	38,b	;volatile
  8663                           
  8664                           ; BSR set to: 15
  8665                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8666  0023F2  0E04               	movlw	4
  8667  0023F4  0104               	movlb	4	; () banked
  8668  0023F6  6F03               	movwf	3,b	;volatile
  8669  0023F8  0E30               	movlw	48
  8670  0023FA  6F02               	movwf	2,b	;volatile
  8671                           
  8672                           ; BSR set to: 4
  8673                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8674  0023FC  0E08               	movlw	8
  8675  0023FE  6F01               	movwf	1,b	;volatile
  8676                           
  8677                           ; BSR set to: 4
  8678                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8679  002400  0E04               	movlw	4
  8680  002402  6F00               	movwf	0,b	;volatile
  8681                           
  8682                           ; BSR set to: 4
  8683                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8684  002404  8F00               	bsf	0,7,b	;volatile
  8685                           
  8686                           ; BSR set to: 4
  8687                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8688  002406  0E00               	movlw	0
  8689  002408  0100               	movlb	0	; () banked
  8690  00240A  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;usb_device.c: 384: USB1msTickCount = 0;
  8694  00240C  0E00               	movlw	0
  8695  00240E  0103               	movlb	3	; () banked
  8696  002410  6F10               	movwf	_USB1msTickCount& (0+255),b
  8697  002412  0E00               	movlw	0
  8698  002414  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8699  002416  0E00               	movlw	0
  8700  002418  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8701  00241A  0E00               	movlw	0
  8702  00241C  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8703                           
  8704                           ; BSR set to: 3
  8705                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8706  00241E  0E00               	movlw	0
  8707  002420  0101               	movlb	1	; () banked
  8708  002422  6FE0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8709                           
  8710                           ; BSR set to: 1
  8711                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8712  002424  0E00               	movlw	0
  8713  002426  0100               	movlb	0	; () banked
  8714  002428  6FCE               	movwf	_USBDeviceState& (0+255),b
  8715                           
  8716                           ; BSR set to: 0
  8717  00242A  0012               	return		;funcret
  8718  00242C                     __end_of_USBDeviceInit:
  8719                           	opt stack 0
  8720                           tosu	equ	0xFFF
  8721                           tosh	equ	0xFFE
  8722                           tosl	equ	0xFFD
  8723                           pclath	equ	0xFFA
  8724                           tblptru	equ	0xFF8
  8725                           tblptrh	equ	0xFF7
  8726                           tblptrl	equ	0xFF6
  8727                           tablat	equ	0xFF5
  8728                           prodh	equ	0xFF4
  8729                           prodl	equ	0xFF3
  8730                           intcon	equ	0xFF2
  8731                           intcon2	equ	0xFF1
  8732                           intcon3	equ	0xFF0
  8733                           postinc0	equ	0xFEE
  8734                           plusw0	equ	0xFEB
  8735                           wreg	equ	0xFE8
  8736                           postinc1	equ	0xFE6
  8737                           postdec1	equ	0xFE5
  8738                           fsr1h	equ	0xFE2
  8739                           fsr1l	equ	0xFE1
  8740                           indf2	equ	0xFDF
  8741                           postinc2	equ	0xFDE
  8742                           postdec2	equ	0xFDD
  8743                           plusw2	equ	0xFDB
  8744                           fsr2h	equ	0xFDA
  8745                           fsr2l	equ	0xFD9
  8746                           status	equ	0xFD8
  8747                           
  8748 ;; *************** function _USBCtrlEPService *****************
  8749 ;; Defined at:
  8750 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;		None
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;Total ram usage:        1 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:   18
  8771 ;; This function calls:
  8772 ;;		_USBCtrlTrfInHandler
  8773 ;;		_USBCtrlTrfOutHandler
  8774 ;;		_USBCtrlTrfSetupHandler
  8775 ;;		_memcpy
  8776 ;; This function is called by:
  8777 ;;		_USBDeviceTasks
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text34
  8782  004C2A                     __ptext34:
  8783                           	opt stack 0
  8784  004C2A                     _USBCtrlEPService:
  8785                           	opt stack 8
  8786                           
  8787                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;incstack = 0
  8791  004C2A  0E2D               	movlw	45
  8792  004C2C  0100               	movlb	0	; () banked
  8793  004C2E  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8797  004C30  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8798  004C34  0EFD               	movlw	253
  8799  004C36  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8800  004C38  A4D8               	btfss	status,2,c
  8801  004C3A  D038               	goto	l1774
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;usb_device.c: 2401: {
  8805                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8806  004C3C  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8807  004C40  90D8               	bcf	status,0,c
  8808  004C42  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8809  004C44  0E3F               	movlw	63
  8810  004C46  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8811  004C48  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8812  004C4A  0D04               	mullw	4
  8813  004C4C  0E00               	movlw	0
  8814  004C4E  24F3               	addwf	prodl,w,c
  8815  004C50  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8816  004C52  0E04               	movlw	4
  8817  004C54  20F4               	addwfc	prodh,w,c
  8818  004C56  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8822  004C58  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8823  004C5C  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8824                           
  8825                           ; BSR set to: 0
  8826                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8827  004C60  0E04               	movlw	4
  8828  004C62  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8832  004C64  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8833  004C68  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8834  004C6C  30DF               	rrcf	223,w,c
  8835  004C6E  32E8               	rrcf	wreg,f,c
  8836  004C70  0B0F               	andlw	15
  8837  004C72  0A0D               	xorlw	13
  8838  004C74  A4D8               	btfss	status,2,c
  8839  004C76  D017               	goto	l1775
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;usb_device.c: 2418: {
  8843                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8844  004C78  0E30               	movlw	48
  8845  004C7A  6F7D               	movwf	memcpy@d1& (0+255),b
  8846  004C7C  0E04               	movlw	4
  8847  004C7E  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8848  004C80  EE20 F002          	lfsr	2,2
  8849  004C84  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8850  004C86  26D9               	addwf	fsr2l,f,c
  8851  004C88  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8852  004C8A  22DA               	addwfc	fsr2h,f,c
  8853  004C8C  CFDE F07F          	movff	postinc2,memcpy@s1
  8854  004C90  CFDD F080          	movff	postdec2,memcpy@s1+1
  8855  004C94  0E00               	movlw	0
  8856  004C96  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8857  004C98  0E08               	movlw	8
  8858  004C9A  6F81               	movwf	memcpy@n& (0+255),b
  8859  004C9C  EC56  F02F         	call	_memcpy	;wreg free
  8860                           
  8861                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8862  004CA0  EC82  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
  8863                           
  8864                           ;usb_device.c: 2427: }
  8865  004CA4  0012               	return	
  8866  004CA6                     l1775:
  8867                           
  8868                           ;usb_device.c: 2428: else
  8869                           ;usb_device.c: 2429: {
  8870                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8871  004CA6  ECCA  F02A         	call	_USBCtrlTrfOutHandler	;wreg free
  8872                           
  8873                           ;usb_device.c: 2432: }
  8874                           ;usb_device.c: 2433: }
  8875  004CAA  0012               	return	
  8876  004CAC                     l1774:
  8877                           
  8878                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8879  004CAC  0100               	movlb	0	; () banked
  8880  004CAE  51D6               	movf	_USTATcopy& (0+255),w,b
  8881  004CB0  0BFD               	andlw	253
  8882  004CB2  0A04               	xorlw	4
  8883  004CB4  A4D8               	btfss	status,2,c
  8884  004CB6  0012               	return	
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;usb_device.c: 2435: {
  8888                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8889  004CB8  EC30  F020         	call	_USBCtrlTrfInHandler	;wreg free
  8890  004CBC  0012               	return	
  8891  004CBE                     __end_of_USBCtrlEPService:
  8892                           	opt stack 0
  8893                           tosu	equ	0xFFF
  8894                           tosh	equ	0xFFE
  8895                           tosl	equ	0xFFD
  8896                           pclath	equ	0xFFA
  8897                           tblptru	equ	0xFF8
  8898                           tblptrh	equ	0xFF7
  8899                           tblptrl	equ	0xFF6
  8900                           tablat	equ	0xFF5
  8901                           prodh	equ	0xFF4
  8902                           prodl	equ	0xFF3
  8903                           intcon	equ	0xFF2
  8904                           intcon2	equ	0xFF1
  8905                           intcon3	equ	0xFF0
  8906                           postinc0	equ	0xFEE
  8907                           plusw0	equ	0xFEB
  8908                           wreg	equ	0xFE8
  8909                           postinc1	equ	0xFE6
  8910                           postdec1	equ	0xFE5
  8911                           fsr1h	equ	0xFE2
  8912                           fsr1l	equ	0xFE1
  8913                           indf2	equ	0xFDF
  8914                           postinc2	equ	0xFDE
  8915                           postdec2	equ	0xFDD
  8916                           plusw2	equ	0xFDB
  8917                           fsr2h	equ	0xFDA
  8918                           fsr2l	equ	0xFD9
  8919                           status	equ	0xFD8
  8920                           
  8921 ;; *************** function _memcpy *****************
  8922 ;; Defined at:
  8923 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  d1              2   29[BANK0 ] PTR void 
  8926 ;;		 -> SetupPkt(8), 
  8927 ;;  s1              2   31[BANK0 ] PTR const void 
  8928 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8929 ;;  n               2   33[BANK0 ] unsigned int 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8932 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8933 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8934 ;;		 -> SetupPkt(8), 
  8935 ;;  tmp             1   35[BANK0 ] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  2   29[BANK0 ] PTR void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8945 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8946 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8948 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;Total ram usage:       11 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:   11
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_USBCtrlEPService
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text35
  8960  005EAC                     __ptext35:
  8961                           	opt stack 0
  8962  005EAC                     _memcpy:
  8963                           	opt stack 14
  8964                           
  8965                           ;incstack = 0
  8966  005EAC  C07F  F086         	movff	memcpy@s1,memcpy@s
  8967  005EB0  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8968  005EB4  C07D  F084         	movff	memcpy@d1,memcpy@d
  8969  005EB8  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8970  005EBC  D011               	goto	l3353
  8971  005EBE                     l13746:
  8972  005EBE  C086  FFD9         	movff	memcpy@s,fsr2l
  8973  005EC2  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8974  005EC6  50DF               	movf	indf2,w,c
  8975  005EC8  0100               	movlb	0	; () banked
  8976  005ECA  6F83               	movwf	memcpy@tmp& (0+255),b
  8977                           
  8978                           ; BSR set to: 0
  8979  005ECC  4B86               	infsnz	memcpy@s& (0+255),f,b
  8980  005ECE  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8981                           
  8982                           ; BSR set to: 0
  8983  005ED0  C084  FFD9         	movff	memcpy@d,fsr2l
  8984  005ED4  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8985  005ED8  C083  FFDF         	movff	memcpy@tmp,indf2
  8986                           
  8987                           ; BSR set to: 0
  8988  005EDC  4B84               	infsnz	memcpy@d& (0+255),f,b
  8989  005EDE  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8990  005EE0                     l3353:
  8991                           
  8992                           ; BSR set to: 0
  8993  005EE0  0100               	movlb	0	; () banked
  8994  005EE2  0781               	decf	memcpy@n& (0+255),f,b
  8995  005EE4  A0D8               	btfss	status,0,c
  8996  005EE6  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8997  005EE8  2981               	incf	memcpy@n& (0+255),w,b
  8998  005EEA  E1E9               	bnz	l13746
  8999  005EEC  2982               	incf	(memcpy@n+1)& (0+255),w,b
  9000  005EEE  B4D8               	btfsc	status,2,c
  9001  005EF0  0012               	return	
  9002  005EF2  D7E5               	goto	l3354
  9003  005EF4                     __end_of_memcpy:
  9004                           	opt stack 0
  9005                           tosu	equ	0xFFF
  9006                           tosh	equ	0xFFE
  9007                           tosl	equ	0xFFD
  9008                           pclath	equ	0xFFA
  9009                           tblptru	equ	0xFF8
  9010                           tblptrh	equ	0xFF7
  9011                           tblptrl	equ	0xFF6
  9012                           tablat	equ	0xFF5
  9013                           prodh	equ	0xFF4
  9014                           prodl	equ	0xFF3
  9015                           intcon	equ	0xFF2
  9016                           intcon2	equ	0xFF1
  9017                           intcon3	equ	0xFF0
  9018                           postinc0	equ	0xFEE
  9019                           plusw0	equ	0xFEB
  9020                           wreg	equ	0xFE8
  9021                           postinc1	equ	0xFE6
  9022                           postdec1	equ	0xFE5
  9023                           fsr1h	equ	0xFE2
  9024                           fsr1l	equ	0xFE1
  9025                           indf2	equ	0xFDF
  9026                           postinc2	equ	0xFDE
  9027                           postdec2	equ	0xFDD
  9028                           plusw2	equ	0xFDB
  9029                           fsr2h	equ	0xFDA
  9030                           fsr2l	equ	0xFD9
  9031                           status	equ	0xFD8
  9032                           
  9033 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9034 ;; Defined at:
  9035 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;		None
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9053 ;;Total ram usage:        0 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:   17
  9056 ;; This function calls:
  9057 ;;		_USBCheckStdRequest
  9058 ;;		_USBCtrlEPServiceComplete
  9059 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9060 ;; This function is called by:
  9061 ;;		_USBCtrlEPService
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text36
  9066  004F04                     __ptext36:
  9067                           	opt stack 0
  9068  004F04                     _USBCtrlTrfSetupHandler:
  9069                           	opt stack 8
  9070                           
  9071                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;incstack = 0
  9075  004F04  0E00               	movlw	0
  9076  004F06  0100               	movlb	0	; () banked
  9077  004F08  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9078                           
  9079                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9080  004F0A  0E00               	movlw	0
  9081  004F0C  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9082                           
  9083                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9084  004F0E  0E00               	movlw	0
  9085  004F10  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9086                           
  9087                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9088  004F12  0E00               	movlw	0
  9089  004F14  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9090                           
  9091                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9092  004F16  0E00               	movlw	0
  9093  004F18  0101               	movlb	1	; () banked
  9094  004F1A  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9095                           
  9096                           ;usb_device.c: 2493: controlTransferState = 0;
  9097  004F1C  0E00               	movlw	0
  9098  004F1E  0100               	movlb	0	; () banked
  9099  004F20  6FCC               	movwf	_controlTransferState& (0+255),b
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9103  004F22  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9104  004F26  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9105  004F2A  0E7F               	movlw	127
  9106  004F2C  16DF               	andwf	indf2,f,c
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9110  004F2E  0E04               	movlw	4
  9111  004F30  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9115  004F32  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9116  004F36  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9117  004F3A  0E7F               	movlw	127
  9118  004F3C  16DF               	andwf	indf2,f,c
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9122  004F3E  0E04               	movlw	4
  9123  004F40  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9127  004F42  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9128  004F46  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9129  004F4A  0E7F               	movlw	127
  9130  004F4C  16DF               	andwf	indf2,f,c
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9134  004F4E  0E00               	movlw	0
  9135  004F50  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9139  004F52  0E00               	movlw	0
  9140  004F54  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9141  004F56  0E00               	movlw	0
  9142  004F58  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9146  004F5A  0E00               	movlw	0
  9147  004F5C  0101               	movlb	1	; () banked
  9148  004F5E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9149                           
  9150                           ; BSR set to: 1
  9151                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9152  004F60  0E00               	movlw	0
  9153  004F62  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9154  004F64  0E00               	movlw	0
  9155  004F66  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9156                           
  9157                           ; BSR set to: 1
  9158                           ;usb_device.c: 2517: USBCheckStdRequest();
  9159  004F68  ECED  F01A         	call	_USBCheckStdRequest	;wreg free
  9160                           
  9161                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9162  004F6C  0E00               	movlw	0
  9163  004F6E  0100               	movlb	0	; () banked
  9164  004F70  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9165  004F72  0E03               	movlw	3
  9166  004F74  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9167  004F76  0E00               	movlw	0
  9168  004F78  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9169  004F7A  0E00               	movlw	0
  9170  004F7C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9171  004F7E  0E00               	movlw	0
  9172  004F80  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9173  004F82  0E00               	movlw	0
  9174  004F84  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9175  004F86  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9176                           
  9177                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9178  004F8A  EC2A  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9179  004F8E  0012               	return		;funcret
  9180  004F90                     __end_of_USBCtrlTrfSetupHandler:
  9181                           	opt stack 0
  9182                           tosu	equ	0xFFF
  9183                           tosh	equ	0xFFE
  9184                           tosl	equ	0xFFD
  9185                           pclath	equ	0xFFA
  9186                           tblptru	equ	0xFF8
  9187                           tblptrh	equ	0xFF7
  9188                           tblptrl	equ	0xFF6
  9189                           tablat	equ	0xFF5
  9190                           prodh	equ	0xFF4
  9191                           prodl	equ	0xFF3
  9192                           intcon	equ	0xFF2
  9193                           intcon2	equ	0xFF1
  9194                           intcon3	equ	0xFF0
  9195                           postinc0	equ	0xFEE
  9196                           plusw0	equ	0xFEB
  9197                           wreg	equ	0xFE8
  9198                           postinc1	equ	0xFE6
  9199                           postdec1	equ	0xFE5
  9200                           fsr1h	equ	0xFE2
  9201                           fsr1l	equ	0xFE1
  9202                           indf2	equ	0xFDF
  9203                           postinc2	equ	0xFDE
  9204                           postdec2	equ	0xFDD
  9205                           plusw2	equ	0xFDB
  9206                           fsr2h	equ	0xFDA
  9207                           fsr2l	equ	0xFD9
  9208                           status	equ	0xFD8
  9209                           
  9210 ;; *************** function _USBCtrlEPServiceComplete *****************
  9211 ;; Defined at:
  9212 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;		None
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;Total ram usage:        0 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:   13
  9233 ;; This function calls:
  9234 ;;		_USBCtrlEPAllowDataStage
  9235 ;;		_USBCtrlEPAllowStatusStage
  9236 ;; This function is called by:
  9237 ;;		_USBCtrlTrfSetupHandler
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text37
  9242  003054                     __ptext37:
  9243                           	opt stack 0
  9244  003054                     _USBCtrlEPServiceComplete:
  9245                           	opt stack 11
  9246                           
  9247                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9248                           
  9249                           ;incstack = 0
  9250  003054  9865               	bcf	3941,4,c	;volatile
  9251                           
  9252                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9253  003056  0100               	movlb	0	; () banked
  9254  003058  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9255  00305A  D03C               	goto	l1684
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;usb_device.c: 1647: {
  9259                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9260  00305C  0101               	movlb	1	; () banked
  9261  00305E  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9262  003060  D00D               	goto	l1685
  9263                           
  9264                           ; BSR set to: 1
  9265                           ;usb_device.c: 1649: {
  9266                           ;usb_device.c: 1650: controlTransferState = 2;
  9267  003062  0E02               	movlw	2
  9268  003064  0100               	movlb	0	; () banked
  9269  003066  6FCC               	movwf	_controlTransferState& (0+255),b
  9270                           
  9271                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9272  003068  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9273  00306A  B4D8               	btfsc	status,2,c
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;usb_device.c: 1662: {
  9277                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9278  00306C  EC96  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9279                           
  9280                           ;usb_device.c: 1664: }
  9281                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9282  003070  0E00               	movlw	0
  9283  003072  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9284                           
  9285                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9286  003074  0E00               	movlw	0
  9287  003076  0100               	movlb	0	; () banked
  9288  003078  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9289                           
  9290                           ;usb_device.c: 1670: }
  9291  00307A  0012               	return	
  9292  00307C                     l1685:
  9293                           
  9294                           ;usb_device.c: 1671: else
  9295                           ;usb_device.c: 1672: {
  9296                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9297                           
  9298                           ; BSR set to: 0
  9299  00307C  0100               	movlb	0	; () banked
  9300  00307E  EE20 F001          	lfsr	2,1
  9301  003082  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9302  003084  26D9               	addwf	fsr2l,f,c
  9303  003086  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9304  003088  22DA               	addwfc	fsr2h,f,c
  9305  00308A  0E08               	movlw	8
  9306  00308C  6EDF               	movwf	indf2,c
  9307                           
  9308                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9309  00308E  EE20 F002          	lfsr	2,2
  9310  003092  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9311  003094  26D9               	addwf	fsr2l,f,c
  9312  003096  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9313  003098  22DA               	addwfc	fsr2h,f,c
  9314  00309A  0E30               	movlw	48
  9315  00309C  6EDE               	movwf	postinc2,c
  9316  00309E  0E04               	movlw	4
  9317  0030A0  6EDD               	movwf	postdec2,c
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9321  0030A2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9322  0030A6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9323  0030AA  0E0C               	movlw	12
  9324  0030AC  6EDF               	movwf	indf2,c
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9328  0030AE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9329  0030B2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9330  0030B6  0E00               	movlw	0
  9331  0030B8  8EDB               	bsf	plusw2,7,c
  9332                           
  9333                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9334  0030BA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9335  0030BE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9336  0030C2  0E04               	movlw	4
  9337  0030C4  6EDF               	movwf	indf2,c
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9341  0030C6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9342  0030CA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9343  0030CE  0E00               	movlw	0
  9344  0030D0  8EDB               	bsf	plusw2,7,c
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;usb_device.c: 1683: }
  9348                           ;usb_device.c: 1684: }
  9349  0030D2  0012               	return	
  9350  0030D4                     l1684:
  9351                           
  9352                           ; BSR set to: 0
  9353                           ;usb_device.c: 1685: else
  9354                           ;usb_device.c: 1686: {
  9355                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9356  0030D4  0104               	movlb	4	; () banked
  9357  0030D6  AF30               	btfss	48,7,b	;volatile
  9358  0030D8  D012               	goto	l1689
  9359                           
  9360                           ; BSR set to: 4
  9361                           ;usb_device.c: 1688: {
  9362                           ;usb_device.c: 1689: controlTransferState = 1;
  9363  0030DA  0E01               	movlw	1
  9364  0030DC  0100               	movlb	0	; () banked
  9365  0030DE  6FCC               	movwf	_controlTransferState& (0+255),b
  9366                           
  9367                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9368  0030E0  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9369  0030E2  B4D8               	btfsc	status,2,c
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;usb_device.c: 1704: {
  9373                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9374  0030E4  EC96  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9375                           
  9376                           ;usb_device.c: 1706: }
  9377                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9378  0030E8  0E00               	movlw	0
  9379  0030EA  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9380                           
  9381                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9382  0030EC  0E00               	movlw	0
  9383  0030EE  0100               	movlb	0	; () banked
  9384  0030F0  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9388  0030F2  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9389  0030F4  A4D8               	btfss	status,2,c
  9390  0030F6  0012               	return	
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;usb_device.c: 1731: {
  9394                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9395  0030F8  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9396                           
  9397                           ;usb_device.c: 1733: }
  9398                           ;usb_device.c: 1734: }
  9399  0030FC  0012               	return	
  9400  0030FE                     l1689:
  9401                           
  9402                           ;usb_device.c: 1735: else
  9403                           ;usb_device.c: 1736: {
  9404                           ;usb_device.c: 1747: controlTransferState = 2;
  9405  0030FE  0E02               	movlw	2
  9406  003100  0100               	movlb	0	; () banked
  9407  003102  6FCC               	movwf	_controlTransferState& (0+255),b
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9411  003104  EE20 F001          	lfsr	2,1
  9412  003108  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9413  00310A  26D9               	addwf	fsr2l,f,c
  9414  00310C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9415  00310E  22DA               	addwfc	fsr2h,f,c
  9416  003110  0E08               	movlw	8
  9417  003112  6EDF               	movwf	indf2,c
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9421  003114  EE20 F002          	lfsr	2,2
  9422  003118  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9423  00311A  26D9               	addwf	fsr2l,f,c
  9424  00311C  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9425  00311E  22DA               	addwfc	fsr2h,f,c
  9426  003120  0E30               	movlw	48
  9427  003122  6EDE               	movwf	postinc2,c
  9428  003124  0E04               	movlw	4
  9429  003126  6EDD               	movwf	postdec2,c
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9433  003128  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9434  00312C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9435  003130  0E04               	movlw	4
  9436  003132  6EDF               	movwf	indf2,c
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9440  003134  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9441  003138  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9442  00313C  0E00               	movlw	0
  9443  00313E  8EDB               	bsf	plusw2,7,c
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9447  003140  0E00               	movlw	0
  9448  003142  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9452  003144  0E00               	movlw	0
  9453  003146  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9457  003148  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9458  00314A  A4D8               	btfss	status,2,c
  9459  00314C  0012               	return	
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;usb_device.c: 1759: {
  9463                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9464  00314E  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9465  003152  0012               	return	
  9466  003154                     __end_of_USBCtrlEPServiceComplete:
  9467                           	opt stack 0
  9468                           tosu	equ	0xFFF
  9469                           tosh	equ	0xFFE
  9470                           tosl	equ	0xFFD
  9471                           pclath	equ	0xFFA
  9472                           tblptru	equ	0xFF8
  9473                           tblptrh	equ	0xFF7
  9474                           tblptrl	equ	0xFF6
  9475                           tablat	equ	0xFF5
  9476                           prodh	equ	0xFF4
  9477                           prodl	equ	0xFF3
  9478                           intcon	equ	0xFF2
  9479                           intcon2	equ	0xFF1
  9480                           intcon3	equ	0xFF0
  9481                           postinc0	equ	0xFEE
  9482                           plusw0	equ	0xFEB
  9483                           wreg	equ	0xFE8
  9484                           postinc1	equ	0xFE6
  9485                           postdec1	equ	0xFE5
  9486                           fsr1h	equ	0xFE2
  9487                           fsr1l	equ	0xFE1
  9488                           indf2	equ	0xFDF
  9489                           postinc2	equ	0xFDE
  9490                           postdec2	equ	0xFDD
  9491                           plusw2	equ	0xFDB
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9497 ;; Defined at:
  9498 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;		None
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;		None
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  1    wreg      void 
  9505 ;; Registers used:
  9506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9516 ;;Total ram usage:        0 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:   12
  9519 ;; This function calls:
  9520 ;;		_USBCtrlTrfTxService
  9521 ;; This function is called by:
  9522 ;;		_USBCtrlEPServiceComplete
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text38
  9527  00492C                     __ptext38:
  9528                           	opt stack 0
  9529  00492C                     _USBCtrlEPAllowDataStage:
  9530                           	opt stack 11
  9531                           
  9532                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9533                           
  9534                           ;incstack = 0
  9535  00492C  0E00               	movlw	0
  9536  00492E  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9537                           
  9538                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9539  004930  0E00               	movlw	0
  9540  004932  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9541                           
  9542                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9543  004934  0E02               	movlw	2
  9544  004936  0100               	movlb	0	; () banked
  9545  004938  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9546  00493A  A4D8               	btfss	status,2,c
  9547  00493C  D01F               	goto	l1673
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;usb_device.c: 1512: {
  9551                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9552  00493E  EE20 F001          	lfsr	2,1
  9553  004942  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9554  004944  26D9               	addwf	fsr2l,f,c
  9555  004946  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9556  004948  22DA               	addwfc	fsr2h,f,c
  9557  00494A  0E08               	movlw	8
  9558  00494C  6EDF               	movwf	indf2,c
  9559                           
  9560                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9561  00494E  EE20 F002          	lfsr	2,2
  9562  004952  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9563  004954  26D9               	addwf	fsr2l,f,c
  9564  004956  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9565  004958  22DA               	addwfc	fsr2h,f,c
  9566  00495A  0E38               	movlw	56
  9567  00495C  6EDE               	movwf	postinc2,c
  9568  00495E  0E04               	movlw	4
  9569  004960  6EDD               	movwf	postdec2,c
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9573  004962  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9574  004966  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9575  00496A  0E48               	movlw	72
  9576  00496C  6EDF               	movwf	indf2,c
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9580  00496E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9581  004972  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9582  004976  0E00               	movlw	0
  9583  004978  8EDB               	bsf	plusw2,7,c
  9584                           
  9585                           ;usb_device.c: 1518: }
  9586  00497A  0012               	return	
  9587  00497C                     l1673:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;usb_device.c: 1519: else
  9591                           ;usb_device.c: 1520: {
  9592                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9593                           
  9594                           ; BSR set to: 0
  9595  00497C  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9596  00497E  0104               	movlb	4	; () banked
  9597  004980  5D36               	subwf	54,w,b	;volatile
  9598  004982  0100               	movlb	0	; () banked
  9599  004984  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9600  004986  0104               	movlb	4	; () banked
  9601  004988  5937               	subwfb	55,w,b	;volatile
  9602  00498A  B0D8               	btfsc	status,0,c
  9603  00498C  D004               	goto	l1675
  9604                           
  9605                           ; BSR set to: 4
  9606                           ;usb_device.c: 1524: {
  9607                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9608  00498E  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9609  004992  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9610  004996                     l1675:
  9611                           
  9612                           ; BSR set to: 4
  9613                           ;usb_device.c: 1526: }
  9614                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9615                           
  9616                           ; BSR set to: 4
  9617  004996  EC5F  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9618                           
  9619                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9620  00499A  0100               	movlb	0	; () banked
  9621  00499C  EE20 F002          	lfsr	2,2
  9622  0049A0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9623  0049A2  26D9               	addwf	fsr2l,f,c
  9624  0049A4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9625  0049A6  22DA               	addwfc	fsr2h,f,c
  9626  0049A8  0E38               	movlw	56
  9627  0049AA  6EDE               	movwf	postinc2,c
  9628  0049AC  0E04               	movlw	4
  9629  0049AE  6EDD               	movwf	postdec2,c
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9633  0049B0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9634  0049B4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9635  0049B8  0E48               	movlw	72
  9636  0049BA  6EDF               	movwf	indf2,c
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9640  0049BC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9641  0049C0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9642  0049C4  0E00               	movlw	0
  9643  0049C6  8EDB               	bsf	plusw2,7,c
  9644  0049C8  0012               	return	
  9645  0049CA                     __end_of_USBCtrlEPAllowDataStage:
  9646                           	opt stack 0
  9647                           tosu	equ	0xFFF
  9648                           tosh	equ	0xFFE
  9649                           tosl	equ	0xFFD
  9650                           pclath	equ	0xFFA
  9651                           tblptru	equ	0xFF8
  9652                           tblptrh	equ	0xFF7
  9653                           tblptrl	equ	0xFF6
  9654                           tablat	equ	0xFF5
  9655                           prodh	equ	0xFF4
  9656                           prodl	equ	0xFF3
  9657                           intcon	equ	0xFF2
  9658                           intcon2	equ	0xFF1
  9659                           intcon3	equ	0xFF0
  9660                           postinc0	equ	0xFEE
  9661                           plusw0	equ	0xFEB
  9662                           wreg	equ	0xFE8
  9663                           postinc1	equ	0xFE6
  9664                           postdec1	equ	0xFE5
  9665                           fsr1h	equ	0xFE2
  9666                           fsr1l	equ	0xFE1
  9667                           indf2	equ	0xFDF
  9668                           postinc2	equ	0xFDE
  9669                           postdec2	equ	0xFDD
  9670                           plusw2	equ	0xFDB
  9671                           fsr2h	equ	0xFDA
  9672                           fsr2l	equ	0xFD9
  9673                           status	equ	0xFD8
  9674                           
  9675 ;; *************** function _USBCheckStdRequest *****************
  9676 ;; Defined at:
  9677 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;		None
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;		None
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  1    wreg      void 
  9684 ;; Registers used:
  9685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9695 ;;Total ram usage:        0 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:   16
  9698 ;; This function calls:
  9699 ;;		_USBStdFeatureReqHandler
  9700 ;;		_USBStdGetDscHandler
  9701 ;;		_USBStdGetStatusHandler
  9702 ;;		_USBStdSetCfgHandler
  9703 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9704 ;; This function is called by:
  9705 ;;		_USBCtrlTrfSetupHandler
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text39
  9710  0035DA                     __ptext39:
  9711                           	opt stack 0
  9712  0035DA                     _USBCheckStdRequest:
  9713                           	opt stack 8
  9714                           
  9715                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;incstack = 0
  9719  0035DA  0104               	movlb	4	; () banked
  9720  0035DC  3930               	swapf	48,w,b	;volatile
  9721  0035DE  32E8               	rrcf	wreg,f,c
  9722  0035E0  0B03               	andlw	3
  9723  0035E2  0900               	iorlw	0
  9724  0035E4  A4D8               	btfss	status,2,c
  9725  0035E6  0012               	return	
  9726  0035E8  D048               	goto	l1808
  9727  0035EA                     l1809:
  9728                           
  9729                           ; BSR set to: 4
  9730                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9731  0035EA  0100               	movlb	0	; () banked
  9732  0035EC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9736  0035EE  0E08               	movlw	8
  9737  0035F0  6FCE               	movwf	_USBDeviceState& (0+255),b
  9738                           
  9739                           ;usb_device.c: 2713: break;
  9740  0035F2  0012               	return	
  9741  0035F4                     
  9742                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9743                           
  9744                           ; BSR set to: 0
  9745  0035F4  ECE6  F015         	call	_USBStdGetDscHandler	;wreg free
  9746                           
  9747                           ;usb_device.c: 2716: break;
  9748  0035F8  0012               	return	
  9749  0035FA                     
  9750                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9751  0035FA  EC95  F019         	call	_USBStdSetCfgHandler	;wreg free
  9752                           
  9753                           ;usb_device.c: 2719: break;
  9754  0035FE  0012               	return	
  9755  003600                     
  9756                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9757  003600  0ED7               	movlw	low _USBActiveConfiguration
  9758  003602  0100               	movlb	0	; () banked
  9759  003604  6FB0               	movwf	_inPipes& (0+255),b
  9760  003606  0E00               	movlw	high _USBActiveConfiguration
  9761  003608  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9765  00360A  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9769  00360C  0E01               	movlw	1
  9770  00360E  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9774  003610  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9775                           
  9776                           ;usb_device.c: 2725: break;
  9777  003612  0012               	return	
  9778  003614                     
  9779                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9780                           
  9781                           ; BSR set to: 0
  9782  003614  EC4C  F021         	call	_USBStdGetStatusHandler	;wreg free
  9783                           
  9784                           ;usb_device.c: 2728: break;
  9785  003618  0012               	return	
  9786  00361A                     
  9787                           ;usb_device.c: 2730: case 3:
  9788                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9789  00361A  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9790                           
  9791                           ;usb_device.c: 2732: break;
  9792  00361E  0012               	return	
  9793  003620                     
  9794                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9795  003620  0104               	movlb	4	; () banked
  9796  003622  5134               	movf	52,w,b	;volatile
  9797  003624  0D01               	mullw	1
  9798  003626  0EF1               	movlw	low _USBAlternateInterface
  9799  003628  24F3               	addwf	prodl,w,c
  9800  00362A  0100               	movlb	0	; () banked
  9801  00362C  6FB0               	movwf	_inPipes& (0+255),b
  9802  00362E  0E02               	movlw	high _USBAlternateInterface
  9803  003630  20F4               	addwfc	prodh,w,c
  9804  003632  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9808  003634  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9812  003636  0E01               	movlw	1
  9813  003638  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9817  00363A  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9818                           
  9819                           ;usb_device.c: 2738: break;
  9820  00363C  0012               	return	
  9821  00363E                     l1818:
  9822                           
  9823                           ; BSR set to: 4
  9824                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9825  00363E  0100               	movlb	0	; () banked
  9826  003640  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9830  003642  0104               	movlb	4	; () banked
  9831  003644  5134               	movf	52,w,b	;volatile
  9832  003646  0D01               	mullw	1
  9833  003648  0EF1               	movlw	low _USBAlternateInterface
  9834  00364A  24F3               	addwf	prodl,w,c
  9835  00364C  6ED9               	movwf	fsr2l,c
  9836  00364E  0E02               	movlw	high _USBAlternateInterface
  9837  003650  20F4               	addwfc	prodh,w,c
  9838  003652  6EDA               	movwf	fsr2h,c
  9839  003654  C432 FFDF          	movff	1074,indf2	;volatile
  9840                           
  9841                           ;usb_device.c: 2742: break;
  9842  003658  0012               	return	
  9843  00365A                     
  9844                           ; BSR set to: 4
  9845                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9846                           
  9847                           ; BSR set to: 4
  9848  00365A  0E00               	movlw	0
  9849  00365C  0100               	movlb	0	; () banked
  9850  00365E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9851  003660  0E02               	movlw	2
  9852  003662  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9853  003664  0E00               	movlw	0
  9854  003666  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9855  003668  0E00               	movlw	0
  9856  00366A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9857  00366C  0E00               	movlw	0
  9858  00366E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9859  003670  0E00               	movlw	0
  9860  003672  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9861  003674  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9862                           
  9863                           ;usb_device.c: 2749: }
  9864                           
  9865                           ;usb_device.c: 2748: break;
  9866                           
  9867                           ;usb_device.c: 2747: default:
  9868                           
  9869                           ;usb_device.c: 2746: case 12:
  9870                           
  9871                           ;usb_device.c: 2745: break;
  9872  003678  0012               	return	
  9873  00367A                     l1808:
  9874  00367A  0104               	movlb	4	; () banked
  9875  00367C  5131               	movf	49,w,b	;volatile
  9876                           
  9877                           ; Switch size 1, requested type "space"
  9878                           ; Number of cases is 11, Range of values is 0 to 12
  9879                           ; switch strategies available:
  9880                           ; Name         Instructions Cycles
  9881                           ; simple_byte           34    18 (average)
  9882                           ;	Chosen strategy is simple_byte
  9883  00367E  0A00               	xorlw	0	; case 0
  9884  003680  B4D8               	btfsc	status,2,c
  9885  003682  D7C8               	goto	l1814
  9886  003684  0A01               	xorlw	1	; case 1
  9887  003686  B4D8               	btfsc	status,2,c
  9888  003688  D7C8               	goto	l1815
  9889  00368A  0A02               	xorlw	2	; case 3
  9890  00368C  B4D8               	btfsc	status,2,c
  9891  00368E  D7C5               	goto	l1815
  9892  003690  0A06               	xorlw	6	; case 5
  9893  003692  B4D8               	btfsc	status,2,c
  9894  003694  D7AA               	goto	l1809
  9895  003696  0A03               	xorlw	3	; case 6
  9896  003698  B4D8               	btfsc	status,2,c
  9897  00369A  D7AC               	goto	l1811
  9898  00369C  0A01               	xorlw	1	; case 7
  9899  00369E  B4D8               	btfsc	status,2,c
  9900  0036A0  D7DC               	goto	l1819
  9901  0036A2  0A0F               	xorlw	15	; case 8
  9902  0036A4  B4D8               	btfsc	status,2,c
  9903  0036A6  D7AC               	goto	l1813
  9904  0036A8  0A01               	xorlw	1	; case 9
  9905  0036AA  B4D8               	btfsc	status,2,c
  9906  0036AC  D7A6               	goto	l1812
  9907  0036AE  0A03               	xorlw	3	; case 10
  9908  0036B0  B4D8               	btfsc	status,2,c
  9909  0036B2  D7B6               	goto	l1817
  9910  0036B4  0A01               	xorlw	1	; case 11
  9911  0036B6  B4D8               	btfsc	status,2,c
  9912  0036B8  D7C2               	goto	l1818
  9913  0036BA  0A07               	xorlw	7	; case 12
  9914  0036BC  0012               	return	
  9915  0036BE                     __end_of_USBCheckStdRequest:
  9916                           	opt stack 0
  9917                           tosu	equ	0xFFF
  9918                           tosh	equ	0xFFE
  9919                           tosl	equ	0xFFD
  9920                           pclath	equ	0xFFA
  9921                           tblptru	equ	0xFF8
  9922                           tblptrh	equ	0xFF7
  9923                           tblptrl	equ	0xFF6
  9924                           tablat	equ	0xFF5
  9925                           prodh	equ	0xFF4
  9926                           prodl	equ	0xFF3
  9927                           intcon	equ	0xFF2
  9928                           intcon2	equ	0xFF1
  9929                           intcon3	equ	0xFF0
  9930                           postinc0	equ	0xFEE
  9931                           plusw0	equ	0xFEB
  9932                           wreg	equ	0xFE8
  9933                           postinc1	equ	0xFE6
  9934                           postdec1	equ	0xFE5
  9935                           fsr1h	equ	0xFE2
  9936                           fsr1l	equ	0xFE1
  9937                           indf2	equ	0xFDF
  9938                           postinc2	equ	0xFDE
  9939                           postdec2	equ	0xFDD
  9940                           plusw2	equ	0xFDB
  9941                           fsr2h	equ	0xFDA
  9942                           fsr2l	equ	0xFD9
  9943                           status	equ	0xFD8
  9944                           
  9945 ;; *************** function _USBStdSetCfgHandler *****************
  9946 ;; Defined at:
  9947 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  i               1   49[BANK0 ] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9965 ;;Total ram usage:        1 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:   15
  9968 ;; This function calls:
  9969 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9970 ;;		_memset
  9971 ;; This function is called by:
  9972 ;;		_USBCheckStdRequest
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text40
  9977  00332A                     __ptext40:
  9978                           	opt stack 0
  9979  00332A                     _USBStdSetCfgHandler:
  9980                           	opt stack 8
  9981                           
  9982                           ;usb_device.c: 1988: uint8_t i;
  9983                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9984                           
  9985                           ;incstack = 0
  9986  00332A  0100               	movlb	0	; () banked
  9987  00332C  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9991  00332E  0E27               	movlw	39
  9992  003330  6F7D               	movwf	memset@p1& (0+255),b
  9993  003332  0E0F               	movlw	15
  9994  003334  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9995  003336  0E00               	movlw	0
  9996  003338  6F80               	movwf	(memset@c+1)& (0+255),b
  9997  00333A  0E00               	movlw	0
  9998  00333C  6F7F               	movwf	memset@c& (0+255),b
  9999  00333E  0E00               	movlw	0
 10000  003340  6F82               	movwf	(memset@n+1)& (0+255),b
 10001  003342  0E02               	movlw	2
 10002  003344  6F81               	movwf	memset@n& (0+255),b
 10003  003346  EC33  F032         	call	_memset	;wreg free
 10004                           
 10005                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 10006  00334A  0E00               	movlw	0
 10007  00334C  0100               	movlb	0	; () banked
 10008  00334E  6F7D               	movwf	memset@p1& (0+255),b
 10009  003350  0E04               	movlw	4
 10010  003352  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10011  003354  0E00               	movlw	0
 10012  003356  6F80               	movwf	(memset@c+1)& (0+255),b
 10013  003358  0E00               	movlw	0
 10014  00335A  6F7F               	movwf	memset@c& (0+255),b
 10015  00335C  0E00               	movlw	0
 10016  00335E  6F82               	movwf	(memset@n+1)& (0+255),b
 10017  003360  0E30               	movlw	48
 10018  003362  6F81               	movwf	memset@n& (0+255),b
 10019  003364  EC33  F032         	call	_memset	;wreg free
 10020                           
 10021                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10022  003368  8C65               	bsf	3941,6,c	;volatile
 10023                           
 10024                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10025  00336A  0E00               	movlw	0
 10026  00336C  0100               	movlb	0	; () banked
 10027  00336E  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10028  003370                     l13082:
 10029                           
 10030                           ; BSR set to: 0
 10031  003370  0E02               	movlw	2
 10032  003372  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10033  003374  D001               	goto	l1725
 10034  003376  D016               	goto	u11640
 10035  003378                     l1725:
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;usb_device.c: 2006: {
 10039                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10040                           
 10041                           ; BSR set to: 0
 10042  003378  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10043  00337A  0D01               	mullw	1
 10044  00337C  0ED1               	movlw	low _ep_data_in
 10045  00337E  24F3               	addwf	prodl,w,c
 10046  003380  6ED9               	movwf	fsr2l,c
 10047  003382  0E02               	movlw	high _ep_data_in
 10048  003384  20F4               	addwfc	prodh,w,c
 10049  003386  6EDA               	movwf	fsr2h,c
 10050  003388  0E00               	movlw	0
 10051  00338A  6EDF               	movwf	indf2,c
 10052                           
 10053                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10054  00338C  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10055  00338E  0D01               	mullw	1
 10056  003390  0ECE               	movlw	low _ep_data_out
 10057  003392  24F3               	addwf	prodl,w,c
 10058  003394  6ED9               	movwf	fsr2l,c
 10059  003396  0E02               	movlw	high _ep_data_out
 10060  003398  20F4               	addwfc	prodh,w,c
 10061  00339A  6EDA               	movwf	fsr2h,c
 10062  00339C  0E00               	movlw	0
 10063  00339E  6EDF               	movwf	indf2,c
 10064                           
 10065                           ; BSR set to: 0
 10066  0033A0  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10067  0033A2  D7E6               	goto	l13082
 10068  0033A4                     u11640:
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;usb_device.c: 2009: }
 10072                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10073                           
 10074                           ; BSR set to: 0
 10075  0033A4  0EF1               	movlw	low _USBAlternateInterface
 10076  0033A6  6F7D               	movwf	memset@p1& (0+255),b
 10077  0033A8  0E02               	movlw	high _USBAlternateInterface
 10078  0033AA  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10079  0033AC  0E00               	movlw	0
 10080  0033AE  6F80               	movwf	(memset@c+1)& (0+255),b
 10081  0033B0  0E00               	movlw	0
 10082  0033B2  6F7F               	movwf	memset@c& (0+255),b
 10083  0033B4  0E00               	movlw	0
 10084  0033B6  6F82               	movwf	(memset@n+1)& (0+255),b
 10085  0033B8  0E02               	movlw	2
 10086  0033BA  6F81               	movwf	memset@n& (0+255),b
 10087  0033BC  EC33  F032         	call	_memset	;wreg free
 10088                           
 10089                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10090  0033C0  9C65               	bcf	3941,6,c	;volatile
 10091                           
 10092                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10093  0033C2  0E08               	movlw	8
 10094  0033C4  0100               	movlb	0	; () banked
 10095  0033C6  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10096  0033C8  0E04               	movlw	4
 10097  0033CA  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10101  0033CC  0E00               	movlw	0
 10102  0033CE  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10103  0033D0  0E04               	movlw	4
 10104  0033D2  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10108  0033D4  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10109  0033D8  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10113  0033DC  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10117  0033E0  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
 10118  0033E2  A4D8               	btfss	status,2,c
 10119  0033E4  D003               	goto	l1727
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;usb_device.c: 2028: {
 10123                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10124  0033E6  0E10               	movlw	16
 10125  0033E8  6FCE               	movwf	_USBDeviceState& (0+255),b
 10126                           
 10127                           ;usb_device.c: 2031: }
 10128  0033EA  0012               	return	
 10129  0033EC                     l1727:
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;usb_device.c: 2032: else
 10133                           ;usb_device.c: 2033: {
 10134                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10135                           
 10136                           ; BSR set to: 0
 10137  0033EC  0E00               	movlw	0
 10138  0033EE  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10139  0033F0  0E01               	movlw	1
 10140  0033F2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10141  0033F4  0ED7               	movlw	low _USBActiveConfiguration
 10142  0033F6  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10143  0033F8  0E00               	movlw	high _USBActiveConfiguration
 10144  0033FA  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10145  0033FC  0E00               	movlw	0
 10146  0033FE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10147  003400  0E01               	movlw	1
 10148  003402  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10149  003404  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10150                           
 10151                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10152  003408  0E20               	movlw	32
 10153  00340A  0100               	movlb	0	; () banked
 10154  00340C  6FCE               	movwf	_USBDeviceState& (0+255),b
 10155  00340E  0012               	return	
 10156  003410                     __end_of_USBStdSetCfgHandler:
 10157                           	opt stack 0
 10158                           tosu	equ	0xFFF
 10159                           tosh	equ	0xFFE
 10160                           tosl	equ	0xFFD
 10161                           pclath	equ	0xFFA
 10162                           tblptru	equ	0xFF8
 10163                           tblptrh	equ	0xFF7
 10164                           tblptrl	equ	0xFF6
 10165                           tablat	equ	0xFF5
 10166                           prodh	equ	0xFF4
 10167                           prodl	equ	0xFF3
 10168                           intcon	equ	0xFF2
 10169                           intcon2	equ	0xFF1
 10170                           intcon3	equ	0xFF0
 10171                           postinc0	equ	0xFEE
 10172                           plusw0	equ	0xFEB
 10173                           wreg	equ	0xFE8
 10174                           postinc1	equ	0xFE6
 10175                           postdec1	equ	0xFE5
 10176                           fsr1h	equ	0xFE2
 10177                           fsr1l	equ	0xFE1
 10178                           indf2	equ	0xFDF
 10179                           postinc2	equ	0xFDE
 10180                           postdec2	equ	0xFDD
 10181                           plusw2	equ	0xFDB
 10182                           fsr2h	equ	0xFDA
 10183                           fsr2l	equ	0xFD9
 10184                           status	equ	0xFD8
 10185                           
 10186 ;; *************** function _USBStdGetStatusHandler *****************
 10187 ;; Defined at:
 10188 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;		None
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10193 ;;		 -> NULL(0), BDT(48), 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      void 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10206 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10207 ;;Total ram usage:        3 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:   11
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_USBCheckStdRequest
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text41
 10218  004298                     __ptext41:
 10219                           	opt stack 0
 10220  004298                     _USBStdGetStatusHandler:
 10221                           	opt stack 12
 10222                           
 10223                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;incstack = 0
 10227  004298  0E00               	movlw	0
 10228  00429A  0104               	movlb	4	; () banked
 10229  00429C  6F38               	movwf	56,b	;volatile
 10230                           
 10231                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10232  00429E  0E00               	movlw	0
 10233  0042A0  6F39               	movwf	57,b	;volatile
 10234                           
 10235                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10236  0042A2  D03D               	goto	l1746
 10237  0042A4                     l1747:
 10238                           
 10239                           ; BSR set to: 4
 10240                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10241  0042A4  0100               	movlb	0	; () banked
 10242  0042A6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10243                           
 10244                           ;usb_device.c: 2163: }
 10245                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10246                           
 10247                           ; BSR set to: 4
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;usb_device.c: 2161: {
 10251                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10252                           
 10253                           ;usb_device.c: 2160: if(0 == 1)
 10254  0042A8  0101               	movlb	1	; () banked
 10255  0042AA  05E3               	decf	_RemoteWakeup& (0+255),w,b
 10256  0042AC  A4D8               	btfss	status,2,c
 10257  0042AE  D042               	goto	l1750
 10258                           
 10259                           ; BSR set to: 1
 10260                           ;usb_device.c: 2166: {
 10261                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10262  0042B0  0104               	movlb	4	; () banked
 10263  0042B2  8338               	bsf	56,1,b	;volatile
 10264                           
 10265                           ; BSR set to: 4
 10266                           ;usb_device.c: 2168: }
 10267                           ;usb_device.c: 2169: break;
 10268  0042B4  D03F               	goto	l1750
 10269  0042B6                     l1751:
 10270                           
 10271                           ; BSR set to: 4
 10272                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10273  0042B6  0100               	movlb	0	; () banked
 10274  0042B8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10275                           
 10276                           ;usb_device.c: 2172: break;
 10277  0042BA  D03C               	goto	l1750
 10278  0042BC                     l1752:
 10279                           
 10280                           ; BSR set to: 4
 10281                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10282  0042BC  0100               	movlb	0	; () banked
 10283  0042BE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10284                           
 10285                           ;usb_device.c: 2178: {
 10286                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10287                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10288  0042C0  0104               	movlb	4	; () banked
 10289  0042C2  BF34               	btfsc	52,7,b	;volatile
 10290  0042C4  D00B               	goto	l1753
 10291                           
 10292                           ; BSR set to: 4
 10293                           ;usb_device.c: 2182: {
 10294                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10295  0042C6  5134               	movf	52,w,b	;volatile
 10296  0042C8  0B0F               	andlw	15
 10297  0042CA  0100               	movlb	0	; () banked
 10298  0042CC  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10299  0042CE  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10300  0042D0  0D02               	mullw	2
 10301  0042D2  0E06               	movlw	low _pBDTEntryOut
 10302  0042D4  24F3               	addwf	prodl,w,c
 10303  0042D6  6ED9               	movwf	fsr2l,c
 10304  0042D8  0E03               	movlw	high _pBDTEntryOut
 10305  0042DA  D00B               	goto	L4
 10306  0042DC                     l1753:
 10307                           
 10308                           ;usb_device.c: 2185: else
 10309                           ;usb_device.c: 2186: {
 10310                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10311                           
 10312                           ; BSR set to: 0
 10313  0042DC  0104               	movlb	4	; () banked
 10314  0042DE  5134               	movf	52,w,b	;volatile
 10315  0042E0  0B0F               	andlw	15
 10316  0042E2  0100               	movlb	0	; () banked
 10317  0042E4  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10318  0042E6  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10319  0042E8  0D02               	mullw	2
 10320  0042EA  0EB6               	movlw	low _pBDTEntryIn
 10321  0042EC  24F3               	addwf	prodl,w,c
 10322  0042EE  6ED9               	movwf	fsr2l,c
 10323  0042F0  0E00               	movlw	high _pBDTEntryIn
 10324  0042F2                     L4:
 10325  0042F2  20F4               	addwfc	prodh,w,c
 10326  0042F4  6EDA               	movwf	fsr2h,c
 10327  0042F6  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10328  0042FA  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;usb_device.c: 2188: }
 10332                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10333                           
 10334                           ; BSR set to: 0
 10335  0042FE  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10336  004302  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10337  004306  AEDF               	btfss	indf2,7,c
 10338  004308  D015               	goto	l1750
 10339                           
 10340                           ; BSR set to: 0
 10341  00430A  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10342  00430E  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10343  004312  A4DF               	btfss	indf2,2,c
 10344  004314  D00F               	goto	l1750
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10348  004316  0E01               	movlw	1
 10349  004318  0104               	movlb	4	; () banked
 10350  00431A  6F38               	movwf	56,b	;volatile
 10351                           
 10352                           ; BSR set to: 4
 10353                           ;usb_device.c: 2193: }
 10354                           ;usb_device.c: 2194: }
 10355                           
 10356                           ; BSR set to: 4
 10357                           ;usb_device.c: 2192: break;
 10358  00431C  D00B               	goto	l1750
 10359  00431E                     l1746:
 10360                           
 10361                           ; BSR set to: 4
 10362                           
 10363                           ; BSR set to: 4
 10364  00431E  5130               	movf	48,w,b	;volatile
 10365  004320  0B1F               	andlw	31
 10366                           
 10367                           ; Switch size 1, requested type "space"
 10368                           ; Number of cases is 3, Range of values is 0 to 2
 10369                           ; switch strategies available:
 10370                           ; Name         Instructions Cycles
 10371                           ; simple_byte           10     6 (average)
 10372                           ;	Chosen strategy is simple_byte
 10373  004322  0A00               	xorlw	0	; case 0
 10374  004324  B4D8               	btfsc	status,2,c
 10375  004326  D7BE               	goto	l1747
 10376  004328  0A01               	xorlw	1	; case 1
 10377  00432A  B4D8               	btfsc	status,2,c
 10378  00432C  D7C4               	goto	l1751
 10379  00432E  0A03               	xorlw	3	; case 2
 10380  004330  B4D8               	btfsc	status,2,c
 10381  004332  D7C4               	goto	l1752
 10382  004334                     l1750:
 10383                           
 10384                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10385  004334  0100               	movlb	0	; () banked
 10386  004336  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10387  004338  0012               	return	
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;usb_device.c: 2197: {
 10391                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10392  00433A  0E38               	movlw	56
 10393  00433C  6FB0               	movwf	_inPipes& (0+255),b
 10394  00433E  0E04               	movlw	4
 10395  004340  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10399  004342  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10403  004344  0E02               	movlw	2
 10404  004346  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10405  004348  0012               	return	
 10406  00434A                     __end_of_USBStdGetStatusHandler:
 10407                           	opt stack 0
 10408                           tosu	equ	0xFFF
 10409                           tosh	equ	0xFFE
 10410                           tosl	equ	0xFFD
 10411                           pclath	equ	0xFFA
 10412                           tblptru	equ	0xFF8
 10413                           tblptrh	equ	0xFF7
 10414                           tblptrl	equ	0xFF6
 10415                           tablat	equ	0xFF5
 10416                           prodh	equ	0xFF4
 10417                           prodl	equ	0xFF3
 10418                           intcon	equ	0xFF2
 10419                           intcon2	equ	0xFF1
 10420                           intcon3	equ	0xFF0
 10421                           postinc0	equ	0xFEE
 10422                           plusw0	equ	0xFEB
 10423                           wreg	equ	0xFE8
 10424                           postinc1	equ	0xFE6
 10425                           postdec1	equ	0xFE5
 10426                           fsr1h	equ	0xFE2
 10427                           fsr1l	equ	0xFE1
 10428                           indf2	equ	0xFDF
 10429                           postinc2	equ	0xFDE
 10430                           postdec2	equ	0xFDD
 10431                           plusw2	equ	0xFDB
 10432                           fsr2h	equ	0xFDA
 10433                           fsr2l	equ	0xFD9
 10434                           status	equ	0xFD8
 10435                           
 10436 ;; *************** function _USBStdGetDscHandler *****************
 10437 ;; Defined at:
 10438 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      void 
 10445 ;; Registers used:
 10446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10447 ;; Tracked objects:
 10448 ;;		On entry : 0/0
 10449 ;;		On exit  : 0/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10455 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10456 ;;Total ram usage:        2 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:   11
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_USBCheckStdRequest
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text42
 10467  002BCC                     __ptext42:
 10468                           	opt stack 0
 10469  002BCC                     _USBStdGetDscHandler:
 10470                           	opt stack 12
 10471                           
 10472                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;incstack = 0
 10476  002BCC  0E80               	movlw	128
 10477  002BCE  0104               	movlb	4	; () banked
 10478  002BD0  1930               	xorwf	48,w,b	;volatile
 10479  002BD2  A4D8               	btfss	status,2,c
 10480  002BD4  0012               	return	
 10481                           
 10482                           ; BSR set to: 4
 10483                           ;usb_device.c: 2064: {
 10484                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10485  002BD6  0EC0               	movlw	192
 10486  002BD8  0100               	movlb	0	; () banked
 10487  002BDA  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10488                           
 10489                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10490  002BDC  D082               	goto	l1733
 10491  002BDE                     
 10492                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10493                           
 10494                           ; BSR set to: 0
 10495  002BDE  0E49               	movlw	low _device_dsc
 10496  002BE0  0100               	movlb	0	; () banked
 10497  002BE2  6FB0               	movwf	_inPipes& (0+255),b
 10498  002BE4  0EFE               	movlw	high _device_dsc
 10499  002BE6  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10503  002BE8  0E00               	movlw	0
 10504  002BEA  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10505  002BEC  0E12               	movlw	18
 10506  002BEE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10507                           
 10508                           ;usb_device.c: 2076: break;
 10509  002BF0  0012               	return	
 10510  002BF2                     
 10511                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10512                           
 10513                           ; BSR set to: 0
 10514  002BF2  0104               	movlb	4	; () banked
 10515  002BF4  5132               	movf	50,w,b	;volatile
 10516  002BF6  A4D8               	btfss	status,2,c
 10517  002BF8  D040               	goto	l1737
 10518                           
 10519                           ; BSR set to: 4
 10520                           ;usb_device.c: 2082: {
 10521                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10522  002BFA  5132               	movf	50,w,b	;volatile
 10523  002BFC  0D02               	mullw	2
 10524  002BFE  0E2E               	movlw	low _USB_CD_Ptr
 10525  002C00  24F3               	addwf	prodl,w,c
 10526  002C02  6EF6               	movwf	tblptrl,c
 10527  002C04  0EFC               	movlw	high _USB_CD_Ptr
 10528  002C06  20F4               	addwfc	prodh,w,c
 10529  002C08  6EF7               	movwf	tblptrh,c
 10530  002C0A                     	if	0	;There are less than 3 active tblptr bytes
 10531  002C0A                     	endif
 10532  002C0A  0009               	tblrd		*+
 10533  002C0C  CFF5 F0B0          	movff	tablat,_inPipes
 10534  002C10  000A               	tblrd		*-
 10535  002C12  CFF5 F0B1          	movff	tablat,_inPipes+1
 10536                           
 10537                           ; BSR set to: 4
 10538                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10539  002C16  0E02               	movlw	2
 10540  002C18  0100               	movlb	0	; () banked
 10541  002C1A  25B0               	addwf	_inPipes& (0+255),w,b
 10542  002C1C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10543  002C1E  0E00               	movlw	0
 10544  002C20  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10545  002C22  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10546  002C24  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10547  002C28  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10548  002C2C  6AF8               	clrf	tblptru,c
 10549  002C2E  0E0E               	movlw	(high __ramtop+-1)
 10550  002C30  64F7               	cpfsgt	tblptrh,c
 10551  002C32  D003               	bra	u11687
 10552  002C34  0008               	tblrd		*
 10553  002C36  50F5               	movf	tablat,w,c
 10554  002C38  D005               	bra	u11680
 10555  002C3A                     u11687:
 10556  002C3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10557  002C3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10558  002C42  50EF               	movf	indf0,w,c
 10559  002C44                     u11680:
 10560  002C44  0100               	movlb	0	; () banked
 10561  002C46  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10565  002C48  0E03               	movlw	3
 10566  002C4A  25B0               	addwf	_inPipes& (0+255),w,b
 10567  002C4C  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10568  002C4E  0E00               	movlw	0
 10569  002C50  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10570  002C52  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10571  002C54  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10572  002C58  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10573  002C5C  6AF8               	clrf	tblptru,c
 10574  002C5E  0E0E               	movlw	(high __ramtop+-1)
 10575  002C60  64F7               	cpfsgt	tblptrh,c
 10576  002C62  D003               	bra	u11697
 10577  002C64  0008               	tblrd		*
 10578  002C66  50F5               	movf	tablat,w,c
 10579  002C68  D005               	bra	u11690
 10580  002C6A                     u11697:
 10581  002C6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 10582  002C6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 10583  002C72  50EF               	movf	indf0,w,c
 10584  002C74                     u11690:
 10585  002C74  0100               	movlb	0	; () banked
 10586  002C76  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10587                           
 10588                           ;usb_device.c: 2094: }
 10589  002C78  0012               	return	
 10590  002C7A                     l1737:
 10591                           
 10592                           ;usb_device.c: 2095: else
 10593                           ;usb_device.c: 2096: {
 10594                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10595                           
 10596                           ; BSR set to: 0
 10597  002C7A  0E00               	movlw	0
 10598  002C7C  0100               	movlb	0	; () banked
 10599  002C7E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;usb_device.c: 2098: }
 10603                           ;usb_device.c: 2099: break;
 10604  002C80  0012               	return	
 10605  002C82                     
 10606                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10607                           
 10608                           ; BSR set to: 0
 10609  002C82  0E03               	movlw	3
 10610  002C84  0104               	movlb	4	; () banked
 10611  002C86  6132               	cpfslt	50,b	;volatile
 10612  002C88  D024               	goto	l1740
 10613                           
 10614                           ; BSR set to: 4
 10615                           ;usb_device.c: 2105: {
 10616                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10617  002C8A  5132               	movf	50,w,b	;volatile
 10618  002C8C  0D02               	mullw	2
 10619  002C8E  0E1C               	movlw	low _USB_SD_Ptr
 10620  002C90  24F3               	addwf	prodl,w,c
 10621  002C92  6EF6               	movwf	tblptrl,c
 10622  002C94  0EFC               	movlw	high _USB_SD_Ptr
 10623  002C96  20F4               	addwfc	prodh,w,c
 10624  002C98  6EF7               	movwf	tblptrh,c
 10625  002C9A                     	if	0	;There are less than 3 active tblptr bytes
 10626  002C9A                     	endif
 10627  002C9A  0009               	tblrd		*+
 10628  002C9C  CFF5 F0B0          	movff	tablat,_inPipes
 10629  002CA0  000A               	tblrd		*-
 10630  002CA2  CFF5 F0B1          	movff	tablat,_inPipes+1
 10631                           
 10632                           ; BSR set to: 4
 10633                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10634  002CA6  C0B0  FFF6         	movff	_inPipes,tblptrl
 10635  002CAA  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10636  002CAE  6AF8               	clrf	tblptru,c
 10637  002CB0  0E0E               	movlw	(high __ramtop+-1)
 10638  002CB2  64F7               	cpfsgt	tblptrh,c
 10639  002CB4  D003               	bra	u11717
 10640  002CB6  0008               	tblrd		*
 10641  002CB8  50F5               	movf	tablat,w,c
 10642  002CBA  D005               	bra	u11710
 10643  002CBC                     u11717:
 10644  002CBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 10645  002CC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 10646  002CC4  50EF               	movf	indf0,w,c
 10647  002CC6                     u11710:
 10648  002CC6  0100               	movlb	0	; () banked
 10649  002CC8  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10650  002CCA  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10651  002CCC  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10652  002CCE  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10653                           
 10654                           ;usb_device.c: 2110: }
 10655  002CD0  0012               	return	
 10656  002CD2                     l1740:
 10657                           
 10658                           ;usb_device.c: 2120: else
 10659                           ;usb_device.c: 2121: {
 10660                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10661                           
 10662                           ; BSR set to: 0
 10663  002CD2  0E00               	movlw	0
 10664  002CD4  0100               	movlb	0	; () banked
 10665  002CD6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;usb_device.c: 2123: }
 10669                           ;usb_device.c: 2124: break;
 10670  002CD8  0012               	return	
 10671  002CDA                     
 10672                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10673                           
 10674                           ; BSR set to: 0
 10675  002CDA  0E00               	movlw	0
 10676  002CDC  0100               	movlb	0	; () banked
 10677  002CDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;usb_device.c: 2128: }
 10681                           
 10682                           ;usb_device.c: 2127: break;
 10683  002CE0  0012               	return	
 10684  002CE2                     l1733:
 10685                           
 10686                           ; BSR set to: 0
 10687                           
 10688                           ; BSR set to: 0
 10689  002CE2  0104               	movlb	4	; () banked
 10690  002CE4  5133               	movf	51,w,b	;volatile
 10691                           
 10692                           ; Switch size 1, requested type "space"
 10693                           ; Number of cases is 3, Range of values is 1 to 3
 10694                           ; switch strategies available:
 10695                           ; Name         Instructions Cycles
 10696                           ; simple_byte           10     6 (average)
 10697                           ;	Chosen strategy is simple_byte
 10698  002CE6  0A01               	xorlw	1	; case 1
 10699  002CE8  B4D8               	btfsc	status,2,c
 10700  002CEA  D779               	goto	l1734
 10701  002CEC  0A03               	xorlw	3	; case 2
 10702  002CEE  B4D8               	btfsc	status,2,c
 10703  002CF0  D780               	goto	l1736
 10704  002CF2  0A01               	xorlw	1	; case 3
 10705  002CF4  B4D8               	btfsc	status,2,c
 10706  002CF6  D7C5               	goto	l1739
 10707  002CF8  D7F0               	goto	l1742
 10708  002CFA                     __end_of_USBStdGetDscHandler:
 10709                           	opt stack 0
 10710                           tosu	equ	0xFFF
 10711                           tosh	equ	0xFFE
 10712                           tosl	equ	0xFFD
 10713                           pclath	equ	0xFFA
 10714                           tblptru	equ	0xFF8
 10715                           tblptrh	equ	0xFF7
 10716                           tblptrl	equ	0xFF6
 10717                           tablat	equ	0xFF5
 10718                           prodh	equ	0xFF4
 10719                           prodl	equ	0xFF3
 10720                           intcon	equ	0xFF2
 10721                           intcon2	equ	0xFF1
 10722                           intcon3	equ	0xFF0
 10723                           indf0	equ	0xFEF
 10724                           postinc0	equ	0xFEE
 10725                           plusw0	equ	0xFEB
 10726                           fsr0h	equ	0xFEA
 10727                           fsr0l	equ	0xFE9
 10728                           wreg	equ	0xFE8
 10729                           postinc1	equ	0xFE6
 10730                           postdec1	equ	0xFE5
 10731                           fsr1h	equ	0xFE2
 10732                           fsr1l	equ	0xFE1
 10733                           indf2	equ	0xFDF
 10734                           postinc2	equ	0xFDE
 10735                           postdec2	equ	0xFDD
 10736                           plusw2	equ	0xFDB
 10737                           fsr2h	equ	0xFDA
 10738                           fsr2l	equ	0xFD9
 10739                           status	equ	0xFD8
 10740                           
 10741 ;; *************** function _USBStdFeatureReqHandler *****************
 10742 ;; Defined at:
 10743 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;		None
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10748 ;;		 -> NULL(0), BDT(48), 
 10749 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10750 ;;		 -> UEP0(1), 
 10751 ;;  current_ep_d    1   52[BANK0 ] struct .
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10765 ;;Total ram usage:        6 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:   15
 10768 ;; This function calls:
 10769 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10770 ;; This function is called by:
 10771 ;;		_USBCheckStdRequest
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           	psect	text43
 10776  00135A                     __ptext43:
 10777                           	opt stack 0
 10778  00135A                     _USBStdFeatureReqHandler:
 10779                           	opt stack 8
 10780                           
 10781                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10782                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10783                           ;usb_device.c: 2778: unsigned char* pUEP;
 10784                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10785                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10786                           
 10787                           ;incstack = 0
 10788  00135A  0104               	movlb	4	; () banked
 10789  00135C  0532               	decf	50,w,b	;volatile
 10790  00135E  A4D8               	btfss	status,2,c
 10791  001360  D011               	goto	l1826
 10792                           
 10793                           ; BSR set to: 4
 10794  001362  5130               	movf	48,w,b	;volatile
 10795  001364  0B1F               	andlw	31
 10796  001366  0900               	iorlw	0
 10797  001368  A4D8               	btfss	status,2,c
 10798  00136A  D00C               	goto	l1826
 10799                           
 10800                           ; BSR set to: 4
 10801                           ;usb_device.c: 2818: {
 10802                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10803  00136C  0100               	movlb	0	; () banked
 10804  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10808  001370  0E03               	movlw	3
 10809  001372  0104               	movlb	4	; () banked
 10810  001374  1931               	xorwf	49,w,b	;volatile
 10811  001376  A4D8               	btfss	status,2,c
 10812  001378  D002               	goto	l1825
 10813                           
 10814                           ; BSR set to: 4
 10815                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10816  00137A  0E01               	movlw	1
 10817  00137C  D001               	goto	L5
 10818  00137E                     l1825:
 10819                           
 10820                           ;usb_device.c: 2822: else
 10821                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10822                           
 10823                           ; BSR set to: 1
 10824  00137E  0E00               	movlw	0
 10825  001380                     L5:
 10826  001380  0101               	movlb	1	; () banked
 10827  001382  6FE3               	movwf	_RemoteWakeup& (0+255),b
 10828  001384                     l1826:
 10829                           
 10830                           ;usb_device.c: 2824: }
 10831                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10832                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10833                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10834                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10835                           
 10836                           ; BSR set to: 1
 10837  001384  0104               	movlb	4	; () banked
 10838  001386  5132               	movf	50,w,b	;volatile
 10839  001388  A4D8               	btfss	status,2,c
 10840  00138A  0012               	return	
 10841                           
 10842                           ; BSR set to: 4
 10843  00138C  5130               	movf	48,w,b	;volatile
 10844  00138E  0B1F               	andlw	31
 10845  001390  0A02               	xorlw	2
 10846  001392  A4D8               	btfss	status,2,c
 10847  001394  0012               	return	
 10848                           
 10849                           ; BSR set to: 4
 10850  001396  5134               	movf	52,w,b	;volatile
 10851  001398  0B0F               	andlw	15
 10852  00139A  0900               	iorlw	0
 10853  00139C  B4D8               	btfsc	status,2,c
 10854  00139E  0012               	return	
 10855                           
 10856                           ; BSR set to: 4
 10857  0013A0  5134               	movf	52,w,b	;volatile
 10858  0013A2  0B0F               	andlw	15
 10859  0013A4  0100               	movlb	0	; () banked
 10860  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10861  0013A8  0E03               	movlw	3
 10862  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10863  0013AC  0012               	return	
 10864                           
 10865                           ; BSR set to: 0
 10866  0013AE  0E20               	movlw	32
 10867  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10868  0013B2  A4D8               	btfss	status,2,c
 10869  0013B4  0012               	return	
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;usb_device.c: 2831: {
 10873                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10874  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10875                           
 10876                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10877  0013B8  0104               	movlb	4	; () banked
 10878  0013BA  BF34               	btfsc	52,7,b	;volatile
 10879  0013BC  D01C               	goto	l1828
 10880                           
 10881                           ; BSR set to: 4
 10882                           ;usb_device.c: 2838: {
 10883                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10884  0013BE  5134               	movf	52,w,b	;volatile
 10885  0013C0  0B0F               	andlw	15
 10886  0013C2  0100               	movlb	0	; () banked
 10887  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10888  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10889  0013C8  0D02               	mullw	2
 10890  0013CA  0E06               	movlw	low _pBDTEntryOut
 10891  0013CC  24F3               	addwf	prodl,w,c
 10892  0013CE  6ED9               	movwf	fsr2l,c
 10893  0013D0  0E03               	movlw	high _pBDTEntryOut
 10894  0013D2  20F4               	addwfc	prodh,w,c
 10895  0013D4  6EDA               	movwf	fsr2h,c
 10896  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10897  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10898                           
 10899                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10900  0013DE  0104               	movlb	4	; () banked
 10901  0013E0  5134               	movf	52,w,b	;volatile
 10902  0013E2  0B0F               	andlw	15
 10903  0013E4  0100               	movlb	0	; () banked
 10904  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10905  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10906  0013EA  0D01               	mullw	1
 10907  0013EC  0ECE               	movlw	low _ep_data_out
 10908  0013EE  24F3               	addwf	prodl,w,c
 10909  0013F0  6ED9               	movwf	fsr2l,c
 10910  0013F2  0E02               	movlw	high _ep_data_out
 10911  0013F4  D01C               	goto	L6
 10912  0013F6                     l1828:
 10913                           
 10914                           ;usb_device.c: 2842: else
 10915                           ;usb_device.c: 2843: {
 10916                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10917                           
 10918                           ; BSR set to: 0
 10919  0013F6  0104               	movlb	4	; () banked
 10920  0013F8  5134               	movf	52,w,b	;volatile
 10921  0013FA  0B0F               	andlw	15
 10922  0013FC  0100               	movlb	0	; () banked
 10923  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10924  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10925  001402  0D02               	mullw	2
 10926  001404  0EB6               	movlw	low _pBDTEntryIn
 10927  001406  24F3               	addwf	prodl,w,c
 10928  001408  6ED9               	movwf	fsr2l,c
 10929  00140A  0E00               	movlw	high _pBDTEntryIn
 10930  00140C  20F4               	addwfc	prodh,w,c
 10931  00140E  6EDA               	movwf	fsr2h,c
 10932  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10933  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10934                           
 10935                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10936  001418  0104               	movlb	4	; () banked
 10937  00141A  5134               	movf	52,w,b	;volatile
 10938  00141C  0B0F               	andlw	15
 10939  00141E  0100               	movlb	0	; () banked
 10940  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10941  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10942  001424  0D01               	mullw	1
 10943  001426  0ED1               	movlw	low _ep_data_in
 10944  001428  24F3               	addwf	prodl,w,c
 10945  00142A  6ED9               	movwf	fsr2l,c
 10946  00142C  0E02               	movlw	high _ep_data_in
 10947  00142E                     L6:
 10948  00142E  20F4               	addwfc	prodh,w,c
 10949  001430  6EDA               	movwf	fsr2h,c
 10950  001432  50DF               	movf	indf2,w,c
 10951  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;usb_device.c: 2846: }
 10955                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10956                           
 10957                           ; BSR set to: 0
 10958  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10959  001438  D002               	goto	l1830
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;usb_device.c: 2853: {
 10963                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10964  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10965                           
 10966                           ;usb_device.c: 2855: }
 10967  00143C  D001               	goto	l1831
 10968  00143E                     l1830:
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;usb_device.c: 2856: else
 10972                           ;usb_device.c: 2857: {
 10973                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10974                           
 10975                           ; BSR set to: 0
 10976  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10977  001440                     l1831:
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;usb_device.c: 2859: }
 10981                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10982                           
 10983                           ; BSR set to: 0
 10984  001440  0104               	movlb	4	; () banked
 10985  001442  BF34               	btfsc	52,7,b	;volatile
 10986  001444  D00B               	goto	l1832
 10987                           
 10988                           ; BSR set to: 4
 10989                           ;usb_device.c: 2865: {
 10990                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10991  001446  5134               	movf	52,w,b	;volatile
 10992  001448  0B0F               	andlw	15
 10993  00144A  0100               	movlb	0	; () banked
 10994  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10995  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10996  001450  0D02               	mullw	2
 10997  001452  0E06               	movlw	low _pBDTEntryOut
 10998  001454  24F3               	addwf	prodl,w,c
 10999  001456  6ED9               	movwf	fsr2l,c
 11000  001458  0E03               	movlw	high _pBDTEntryOut
 11001  00145A  D00B               	goto	L7
 11002  00145C                     l1832:
 11003                           
 11004                           ;usb_device.c: 2868: else
 11005                           ;usb_device.c: 2869: {
 11006                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11007                           
 11008                           ; BSR set to: 0
 11009  00145C  0104               	movlb	4	; () banked
 11010  00145E  5134               	movf	52,w,b	;volatile
 11011  001460  0B0F               	andlw	15
 11012  001462  0100               	movlb	0	; () banked
 11013  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11014  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11015  001468  0D02               	mullw	2
 11016  00146A  0EB6               	movlw	low _pBDTEntryIn
 11017  00146C  24F3               	addwf	prodl,w,c
 11018  00146E  6ED9               	movwf	fsr2l,c
 11019  001470  0E00               	movlw	high _pBDTEntryIn
 11020  001472                     L7:
 11021  001472  20F4               	addwfc	prodh,w,c
 11022  001474  6EDA               	movwf	fsr2h,c
 11023  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11024  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;usb_device.c: 2871: }
 11028                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11029                           
 11030                           ; BSR set to: 0
 11031  00147E  0E03               	movlw	3
 11032  001480  0104               	movlb	4	; () banked
 11033  001482  1931               	xorwf	49,w,b	;volatile
 11034  001484  A4D8               	btfss	status,2,c
 11035  001486  D031               	goto	l1834
 11036                           
 11037                           ; BSR set to: 4
 11038                           ;usb_device.c: 2875: {
 11039                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11040  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11041  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11042  001490  0100               	movlb	0	; () banked
 11043  001492  AEDF               	btfss	indf2,7,c
 11044  001494  D01D               	goto	l1837
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;usb_device.c: 2877: {
 11048                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11049  001496  0104               	movlb	4	; () banked
 11050  001498  BF34               	btfsc	52,7,b	;volatile
 11051  00149A  D00B               	goto	l1836
 11052                           
 11053                           ; BSR set to: 4
 11054                           ;usb_device.c: 2881: {
 11055                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11056  00149C  5134               	movf	52,w,b	;volatile
 11057  00149E  0B0F               	andlw	15
 11058  0014A0  0100               	movlb	0	; () banked
 11059  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11060  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11061  0014A6  0D01               	mullw	1
 11062  0014A8  0ECE               	movlw	low _ep_data_out
 11063  0014AA  24F3               	addwf	prodl,w,c
 11064  0014AC  6ED9               	movwf	fsr2l,c
 11065  0014AE  0E02               	movlw	high _ep_data_out
 11066  0014B0  D00B               	goto	L8
 11067  0014B2                     l1836:
 11068                           
 11069                           ;usb_device.c: 2884: else
 11070                           ;usb_device.c: 2885: {
 11071                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11072                           
 11073                           ; BSR set to: 2
 11074  0014B2  0104               	movlb	4	; () banked
 11075  0014B4  5134               	movf	52,w,b	;volatile
 11076  0014B6  0B0F               	andlw	15
 11077  0014B8  0100               	movlb	0	; () banked
 11078  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11079  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11080  0014BE  0D01               	mullw	1
 11081  0014C0  0ED1               	movlw	low _ep_data_in
 11082  0014C2  24F3               	addwf	prodl,w,c
 11083  0014C4  6ED9               	movwf	fsr2l,c
 11084  0014C6  0E02               	movlw	high _ep_data_in
 11085  0014C8                     L8:
 11086  0014C8  20F4               	addwfc	prodh,w,c
 11087  0014CA  6EDA               	movwf	fsr2h,c
 11088  0014CC  0102               	movlb	2	; () banked
 11089  0014CE  82DF               	bsf	indf2,1,c
 11090  0014D0                     l1837:
 11091                           
 11092                           ;usb_device.c: 2887: }
 11093                           ;usb_device.c: 2888: }
 11094                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11095                           
 11096                           ; BSR set to: 2
 11097                           
 11098                           ; BSR set to: 2
 11099  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11100  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11101  0014D8  0E00               	movlw	0
 11102  0014DA  84DB               	bsf	plusw2,2,c
 11103                           
 11104                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11105  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11106  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11107  0014E4  0E00               	movlw	0
 11108  0014E6  8EDB               	bsf	plusw2,7,c
 11109                           
 11110                           ;usb_device.c: 2893: }
 11111  0014E8  0012               	return	
 11112  0014EA                     l1834:
 11113                           
 11114                           ;usb_device.c: 2894: else
 11115                           ;usb_device.c: 2895: {
 11116                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11117  0014EA  0E04               	movlw	4
 11118  0014EC  0100               	movlb	0	; () banked
 11119  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11123  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11124  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11125  0014F8  AEDF               	btfss	indf2,7,c
 11126  0014FA  D01B               	goto	l1839
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;usb_device.c: 2902: {
 11130                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11131  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11132  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11133  001504  0E7F               	movlw	127
 11134  001506  16DF               	andwf	indf2,f,c
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11138  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11139  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11140  001510  0E00               	movlw	0
 11141  001512  8CDB               	bsf	plusw2,6,c
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11145  001514  0E00               	movlw	0
 11146  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11147  001518  0E05               	movlw	5
 11148  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11149  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11150  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11151  001524  0E00               	movlw	0
 11152  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11153  001528  0E02               	movlw	2
 11154  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11155  00152C  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11156                           
 11157                           ;usb_device.c: 2908: }
 11158  001530  D006               	goto	l1840
 11159  001532                     l1839:
 11160                           
 11161                           ;usb_device.c: 2909: else
 11162                           ;usb_device.c: 2910: {
 11163                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11164  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11165  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11166  00153A  0E00               	movlw	0
 11167  00153C  8CDB               	bsf	plusw2,6,c
 11168  00153E                     l1840:
 11169                           
 11170                           ;usb_device.c: 2913: }
 11171                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11172  00153E  0E04               	movlw	4
 11173  001540  0100               	movlb	0	; () banked
 11174  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11178  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11179  001546  D006               	goto	u11930
 11180                           
 11181                           ; BSR set to: 0
 11182  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11183  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11184  001550  AEDF               	btfss	indf2,7,c
 11185  001552  D033               	goto	l1841
 11186  001554                     u11930:
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;usb_device.c: 2924: {
 11190                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11191  001554  0104               	movlb	4	; () banked
 11192  001556  BF34               	btfsc	52,7,b	;volatile
 11193  001558  D00B               	goto	l1844
 11194                           
 11195                           ; BSR set to: 4
 11196                           ;usb_device.c: 2926: {
 11197                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11198  00155A  5134               	movf	52,w,b	;volatile
 11199  00155C  0B0F               	andlw	15
 11200  00155E  0100               	movlb	0	; () banked
 11201  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11202  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11203  001564  0D01               	mullw	1
 11204  001566  0ECE               	movlw	low _ep_data_out
 11205  001568  24F3               	addwf	prodl,w,c
 11206  00156A  6ED9               	movwf	fsr2l,c
 11207  00156C  0E02               	movlw	high _ep_data_out
 11208  00156E  D00B               	goto	L9
 11209  001570                     l1844:
 11210                           
 11211                           ;usb_device.c: 2929: else
 11212                           ;usb_device.c: 2930: {
 11213                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11214                           
 11215                           ; BSR set to: 2
 11216  001570  0104               	movlb	4	; () banked
 11217  001572  5134               	movf	52,w,b	;volatile
 11218  001574  0B0F               	andlw	15
 11219  001576  0100               	movlb	0	; () banked
 11220  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11221  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11222  00157C  0D01               	mullw	1
 11223  00157E  0ED1               	movlw	low _ep_data_in
 11224  001580  24F3               	addwf	prodl,w,c
 11225  001582  6ED9               	movwf	fsr2l,c
 11226  001584  0E02               	movlw	high _ep_data_in
 11227  001586                     L9:
 11228  001586  20F4               	addwfc	prodh,w,c
 11229  001588  6EDA               	movwf	fsr2h,c
 11230  00158A  0102               	movlb	2	; () banked
 11231  00158C  92DF               	bcf	indf2,1,c
 11232                           
 11233                           ; BSR set to: 2
 11234                           ;usb_device.c: 2932: }
 11235                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11236                           
 11237                           ; BSR set to: 2
 11238  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11239  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11240  001596  0E3B               	movlw	59
 11241  001598  16DF               	andwf	indf2,f,c
 11242                           
 11243                           ; BSR set to: 2
 11244                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11245  00159A  0E00               	movlw	0
 11246  00159C  0100               	movlb	0	; () banked
 11247  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11248  0015A0  0E05               	movlw	5
 11249  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11250  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11251  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11252  0015AC  0E00               	movlw	0
 11253  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11254  0015B0  0E02               	movlw	2
 11255  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11256  0015B4  EC94  F02B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11257                           
 11258                           ;usb_device.c: 2938: }
 11259  0015B8  D006               	goto	l1846
 11260  0015BA                     l1841:
 11261                           
 11262                           ;usb_device.c: 2939: else
 11263                           ;usb_device.c: 2940: {
 11264                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11265  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11266  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11267  0015C2  0E3B               	movlw	59
 11268  0015C4  16DF               	andwf	indf2,f,c
 11269  0015C6                     l1846:
 11270                           
 11271                           ;usb_device.c: 2943: }
 11272                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11273  0015C6  0104               	movlb	4	; () banked
 11274  0015C8  5134               	movf	52,w,b	;volatile
 11275  0015CA  0B0F               	andlw	15
 11276  0015CC  0100               	movlb	0	; () banked
 11277  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11278  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11279  0015D2  0D01               	mullw	1
 11280  0015D4  0E26               	movlw	38
 11281  0015D6  24F3               	addwf	prodl,w,c
 11282  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11283  0015DA  0E0F               	movlw	15
 11284  0015DC  20F4               	addwfc	prodh,w,c
 11285  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11289  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11290  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11291  0015E8  0EFE               	movlw	254
 11292  0015EA  16DF               	andwf	indf2,f,c
 11293                           
 11294                           ; BSR set to: 0
 11295  0015EC  0012               	return	
 11296  0015EE                     __end_of_USBStdFeatureReqHandler:
 11297                           	opt stack 0
 11298                           tosu	equ	0xFFF
 11299                           tosh	equ	0xFFE
 11300                           tosl	equ	0xFFD
 11301                           pclath	equ	0xFFA
 11302                           tblptru	equ	0xFF8
 11303                           tblptrh	equ	0xFF7
 11304                           tblptrl	equ	0xFF6
 11305                           tablat	equ	0xFF5
 11306                           prodh	equ	0xFF4
 11307                           prodl	equ	0xFF3
 11308                           intcon	equ	0xFF2
 11309                           intcon2	equ	0xFF1
 11310                           intcon3	equ	0xFF0
 11311                           indf0	equ	0xFEF
 11312                           postinc0	equ	0xFEE
 11313                           plusw0	equ	0xFEB
 11314                           fsr0h	equ	0xFEA
 11315                           fsr0l	equ	0xFE9
 11316                           wreg	equ	0xFE8
 11317                           postinc1	equ	0xFE6
 11318                           postdec1	equ	0xFE5
 11319                           fsr1h	equ	0xFE2
 11320                           fsr1l	equ	0xFE1
 11321                           indf2	equ	0xFDF
 11322                           postinc2	equ	0xFDE
 11323                           postdec2	equ	0xFDD
 11324                           plusw2	equ	0xFDB
 11325                           fsr2h	equ	0xFDA
 11326                           fsr2l	equ	0xFD9
 11327                           status	equ	0xFD8
 11328                           
 11329 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11330 ;; Defined at:
 11331 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  event           2   41[BANK0 ] enum E8366
 11334 ;;  pdata           2   43[BANK0 ] PTR void 
 11335 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11336 ;;  size            2   45[BANK0 ] unsigned int 
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      unsigned char 
 11341 ;; Registers used:
 11342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11348 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11352 ;;Total ram usage:        8 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; Hardware stack levels required when called:   14
 11355 ;; This function calls:
 11356 ;;		_CDCInitEP
 11357 ;;		_USBCheckCDCRequest
 11358 ;; This function is called by:
 11359 ;;		_USBDeviceTasks
 11360 ;;		_USBStdSetCfgHandler
 11361 ;;		_USBSuspend
 11362 ;;		_USBWakeFromSuspend
 11363 ;;		_USBCtrlTrfSetupHandler
 11364 ;;		_USBCheckStdRequest
 11365 ;;		_USBStdFeatureReqHandler
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text44
 11370  005728                     __ptext44:
 11371                           	opt stack 0
 11372  005728                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11373                           	opt stack 12
 11374                           
 11375                           ;usb_device_mgr.c: 106: switch( (int) event )
 11376                           
 11377                           ;incstack = 0
 11378  005728  D006               	goto	l2000
 11379  00572A                     
 11380                           ;usb_device_mgr.c: 134: CDCInitEP();
 11381  00572A  ECF5  F029         	call	_CDCInitEP	;wreg free
 11382                           
 11383                           ;usb_device_mgr.c: 142: break;
 11384                           
 11385                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11386                           
 11387                           ;usb_device_mgr.c: 139: break;
 11388  00572E  0012               	return	
 11389  005730                     
 11390                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11391  005730  ECA5  F021         	call	_USBCheckCDCRequest	;wreg free
 11392                           
 11393                           ;usb_device_mgr.c: 163: }
 11394                           
 11395                           ;usb_device_mgr.c: 162: break;
 11396                           
 11397                           ;usb_device_mgr.c: 161: default:
 11398                           
 11399                           ;usb_device_mgr.c: 159: break;
 11400                           
 11401                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11402                           
 11403                           ;usb_device_mgr.c: 156: break;
 11404                           
 11405                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11406                           
 11407                           ;usb_device_mgr.c: 153: break;
 11408  005734  0012               	return	
 11409  005736                     l2000:
 11410  005736  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11411  00573A  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11412                           
 11413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11414                           ; Switch size 1, requested type "space"
 11415                           ; Number of cases is 2, Range of values is 0 to 127
 11416                           ; switch strategies available:
 11417                           ; Name         Instructions Cycles
 11418                           ; simple_byte            7     4 (average)
 11419                           ;	Chosen strategy is simple_byte
 11420  00573E  0100               	movlb	0	; () banked
 11421  005740  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11422  005742  0A00               	xorlw	0	; case 0
 11423  005744  B4D8               	btfsc	status,2,c
 11424  005746  D004               	goto	l16786
 11425  005748  0A7F               	xorlw	127	; case 127
 11426  00574A  A4D8               	btfss	status,2,c
 11427  00574C  0012               	return	
 11428  00574E  D018               	goto	l16788
 11429  005750                     l16786:
 11430                           
 11431                           ; BSR set to: 0
 11432                           ; Switch size 1, requested type "space"
 11433                           ; Number of cases is 8, Range of values is 1 to 117
 11434                           ; switch strategies available:
 11435                           ; Name         Instructions Cycles
 11436                           ; simple_byte           25    13 (average)
 11437                           ;	Chosen strategy is simple_byte
 11438  005750  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11439  005752  0A01               	xorlw	1	; case 1
 11440  005754  B4D8               	btfsc	status,2,c
 11441  005756  D7E9               	goto	l2006
 11442  005758  0A03               	xorlw	3	; case 2
 11443  00575A  B4D8               	btfsc	status,2,c
 11444  00575C  0012               	return	
 11445  00575E  0A01               	xorlw	1	; case 3
 11446  005760  B4D8               	btfsc	status,2,c
 11447  005762  D7E6               	goto	l2008
 11448  005764  0A06               	xorlw	6	; case 5
 11449  005766  B4D8               	btfsc	status,2,c
 11450  005768  0012               	return	
 11451  00576A  0A77               	xorlw	119	; case 114
 11452  00576C  B4D8               	btfsc	status,2,c
 11453  00576E  0012               	return	
 11454  005770  0A01               	xorlw	1	; case 115
 11455  005772  B4D8               	btfsc	status,2,c
 11456  005774  0012               	return	
 11457  005776  0A07               	xorlw	7	; case 116
 11458  005778  B4D8               	btfsc	status,2,c
 11459  00577A  0012               	return	
 11460  00577C  0A01               	xorlw	1	; case 117
 11461  00577E  0012               	return	
 11462  005780                     l16788:
 11463                           
 11464                           ; BSR set to: 0
 11465                           ; Switch size 1, requested type "space"
 11466                           ; Number of cases is 1, Range of values is 255 to 255
 11467                           ; switch strategies available:
 11468                           ; Name         Instructions Cycles
 11469                           ; simple_byte            4     3 (average)
 11470                           ;	Chosen strategy is simple_byte
 11471  005780  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11472  005782  0AFF               	xorlw	255	; case 255
 11473  005784  0012               	return	
 11474  005786                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11475                           	opt stack 0
 11476                           tosu	equ	0xFFF
 11477                           tosh	equ	0xFFE
 11478                           tosl	equ	0xFFD
 11479                           pclath	equ	0xFFA
 11480                           tblptru	equ	0xFF8
 11481                           tblptrh	equ	0xFF7
 11482                           tblptrl	equ	0xFF6
 11483                           tablat	equ	0xFF5
 11484                           prodh	equ	0xFF4
 11485                           prodl	equ	0xFF3
 11486                           intcon	equ	0xFF2
 11487                           intcon2	equ	0xFF1
 11488                           intcon3	equ	0xFF0
 11489                           indf0	equ	0xFEF
 11490                           postinc0	equ	0xFEE
 11491                           plusw0	equ	0xFEB
 11492                           fsr0h	equ	0xFEA
 11493                           fsr0l	equ	0xFE9
 11494                           wreg	equ	0xFE8
 11495                           postinc1	equ	0xFE6
 11496                           postdec1	equ	0xFE5
 11497                           fsr1h	equ	0xFE2
 11498                           fsr1l	equ	0xFE1
 11499                           indf2	equ	0xFDF
 11500                           postinc2	equ	0xFDE
 11501                           postdec2	equ	0xFDD
 11502                           plusw2	equ	0xFDB
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function _USBCheckCDCRequest *****************
 11508 ;; Defined at:
 11509 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;		None
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;		None
 11514 ;; Return value:  Size  Location     Type
 11515 ;;                  1    wreg      void 
 11516 ;; Registers used:
 11517 ;;		wreg, status,2, status,0
 11518 ;; Tracked objects:
 11519 ;;		On entry : 0/0
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;Total ram usage:        0 bytes
 11528 ;; Hardware stack levels used:    1
 11529 ;; Hardware stack levels required when called:   11
 11530 ;; This function calls:
 11531 ;;		Nothing
 11532 ;; This function is called by:
 11533 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11534 ;; This function uses a non-reentrant model
 11535 ;;
 11536                           
 11537                           	psect	text45
 11538  00434A                     __ptext45:
 11539                           	opt stack 0
 11540  00434A                     _USBCheckCDCRequest:
 11541                           	opt stack 14
 11542                           
 11543                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11544                           
 11545                           ;incstack = 0
 11546  00434A  0104               	movlb	4	; () banked
 11547  00434C  5130               	movf	48,w,b	;volatile
 11548  00434E  0B1F               	andlw	31
 11549  004350  06E8               	decf	wreg,f,c
 11550  004352  A4D8               	btfss	status,2,c
 11551  004354  0012               	return	
 11552                           
 11553                           ; BSR set to: 4
 11554                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11555                           
 11556                           ; BSR set to: 4
 11557                           
 11558                           ; BSR set to: 4
 11559  004356  3930               	swapf	48,w,b	;volatile
 11560  004358  32E8               	rrcf	wreg,f,c
 11561  00435A  0B03               	andlw	3
 11562  00435C  06E8               	decf	wreg,f,c
 11563  00435E  A4D8               	btfss	status,2,c
 11564  004360  0012               	return	
 11565                           
 11566                           ; BSR set to: 4
 11567                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11568                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11569                           
 11570                           ; BSR set to: 4
 11571                           
 11572                           ; BSR set to: 4
 11573  004362  5134               	movf	52,w,b	;volatile
 11574  004364  B4D8               	btfsc	status,2,c
 11575  004366  D037               	goto	l1902
 11576                           
 11577                           ; BSR set to: 4
 11578  004368  0534               	decf	52,w,b	;volatile
 11579  00436A  A4D8               	btfss	status,2,c
 11580  00436C  0012               	return	
 11581  00436E  D033               	goto	l1902
 11582  004370                     
 11583                           ; BSR set to: 4
 11584                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11585                           
 11586                           ; BSR set to: 4
 11587  004370  0E79               	movlw	low _dummy_encapsulated_cmd_response
 11588  004372  0100               	movlb	0	; () banked
 11589  004374  6FB0               	movwf	_inPipes& (0+255),b
 11590  004376  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11591  004378  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11595  00437A  0E00               	movlw	0
 11596  00437C  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11597  00437E  0E08               	movlw	8
 11598  004380  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11602  004382  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11606  004384  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11607                           
 11608                           ;usb_device_cdc.c: 178: break;
 11609  004386  0012               	return	
 11610  004388                     
 11611                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11612                           
 11613                           ; BSR set to: 0
 11614  004388  0E79               	movlw	low _dummy_encapsulated_cmd_response
 11615  00438A  0100               	movlb	0	; () banked
 11616  00438C  6FB0               	movwf	_inPipes& (0+255),b
 11617  00438E  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11618  004390  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11622  004392  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11623                           
 11624                           ;usb_device_cdc.c: 183: break;
 11625  004394  0012               	return	
 11626  004396                     l1906:
 11627                           
 11628                           ; BSR set to: 4
 11629                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11630  004396  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11631  00439A  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11632                           
 11633                           ; BSR set to: 4
 11634                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11635  00439E  0E81               	movlw	low _line_coding
 11636  0043A0  0101               	movlb	1	; () banked
 11637  0043A2  6FC9               	movwf	_outPipes& (0+255),b
 11638  0043A4  0E03               	movlw	high _line_coding
 11639  0043A6  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11640                           
 11641                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11642  0043A8  0E00               	movlw	0
 11643  0043AA  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11644  0043AC  0E00               	movlw	0
 11645  0043AE  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11646                           
 11647                           ; BSR set to: 1
 11648                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11649  0043B0  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11650                           
 11651                           ;usb_device_cdc.c: 192: break;
 11652  0043B2  0012               	return	
 11653  0043B4                     
 11654                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11655                           
 11656                           ; BSR set to: 1
 11657  0043B4  0E81               	movlw	low _line_coding
 11658  0043B6  0100               	movlb	0	; () banked
 11659  0043B8  6FB0               	movwf	_inPipes& (0+255),b
 11660  0043BA  0E03               	movlw	high _line_coding
 11661  0043BC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11662                           
 11663                           ; BSR set to: 0
 11664  0043BE  0E00               	movlw	0
 11665  0043C0  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11666  0043C2  0E07               	movlw	7
 11667  0043C4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11668                           
 11669                           ; BSR set to: 0
 11670  0043C6  0EC1               	movlw	193
 11671  0043C8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11672                           
 11673                           ;usb_device_cdc.c: 199: break;
 11674  0043CA  0012               	return	
 11675  0043CC                     l1908:
 11676                           
 11677                           ; BSR set to: 4
 11678                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11679  0043CC  C432 F1DE          	movff	1074,_control_signal_bitmap	;volatile
 11680                           
 11681                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11682  0043D0  0100               	movlb	0	; () banked
 11683  0043D2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;usb_device_cdc.c: 261: }
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;usb_device_cdc.c: 260: break;
 11690                           
 11691                           ;usb_device_cdc.c: 259: default:
 11692                           
 11693                           ;usb_device_cdc.c: 235: break;
 11694  0043D4  0012               	return	
 11695  0043D6                     l1902:
 11696                           
 11697                           ; BSR set to: 0
 11698  0043D6  0104               	movlb	4	; () banked
 11699  0043D8  5131               	movf	49,w,b	;volatile
 11700                           
 11701                           ; Switch size 1, requested type "space"
 11702                           ; Number of cases is 5, Range of values is 0 to 34
 11703                           ; switch strategies available:
 11704                           ; Name         Instructions Cycles
 11705                           ; simple_byte           16     9 (average)
 11706                           ;	Chosen strategy is simple_byte
 11707  0043DA  0A00               	xorlw	0	; case 0
 11708  0043DC  B4D8               	btfsc	status,2,c
 11709  0043DE  D7C8               	goto	l1903
 11710  0043E0  0A01               	xorlw	1	; case 1
 11711  0043E2  B4D8               	btfsc	status,2,c
 11712  0043E4  D7D1               	goto	l1905
 11713  0043E6  0A21               	xorlw	33	; case 32
 11714  0043E8  B4D8               	btfsc	status,2,c
 11715  0043EA  D7D5               	goto	l1906
 11716  0043EC  0A01               	xorlw	1	; case 33
 11717  0043EE  B4D8               	btfsc	status,2,c
 11718  0043F0  D7E1               	goto	l1907
 11719  0043F2  0A03               	xorlw	3	; case 34
 11720  0043F4  A4D8               	btfss	status,2,c
 11721  0043F6  0012               	return	
 11722  0043F8  D7E9               	goto	l1908
 11723  0043FA                     __end_of_USBCheckCDCRequest:
 11724                           	opt stack 0
 11725                           tosu	equ	0xFFF
 11726                           tosh	equ	0xFFE
 11727                           tosl	equ	0xFFD
 11728                           pclath	equ	0xFFA
 11729                           tblptru	equ	0xFF8
 11730                           tblptrh	equ	0xFF7
 11731                           tblptrl	equ	0xFF6
 11732                           tablat	equ	0xFF5
 11733                           prodh	equ	0xFF4
 11734                           prodl	equ	0xFF3
 11735                           intcon	equ	0xFF2
 11736                           intcon2	equ	0xFF1
 11737                           intcon3	equ	0xFF0
 11738                           indf0	equ	0xFEF
 11739                           postinc0	equ	0xFEE
 11740                           plusw0	equ	0xFEB
 11741                           fsr0h	equ	0xFEA
 11742                           fsr0l	equ	0xFE9
 11743                           wreg	equ	0xFE8
 11744                           postinc1	equ	0xFE6
 11745                           postdec1	equ	0xFE5
 11746                           fsr1h	equ	0xFE2
 11747                           fsr1l	equ	0xFE1
 11748                           indf2	equ	0xFDF
 11749                           postinc2	equ	0xFDE
 11750                           postdec2	equ	0xFDD
 11751                           plusw2	equ	0xFDB
 11752                           fsr2h	equ	0xFDA
 11753                           fsr2l	equ	0xFD9
 11754                           status	equ	0xFD8
 11755                           
 11756 ;; *************** function _CDCInitEP *****************
 11757 ;; Defined at:
 11758 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;		None
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      void 
 11765 ;; Registers used:
 11766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;Total ram usage:        0 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:   13
 11779 ;; This function calls:
 11780 ;;		_USBEnableEndpoint
 11781 ;;		_USBTransferOnePacket
 11782 ;; This function is called by:
 11783 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text46
 11788  0053EA                     __ptext46:
 11789                           	opt stack 0
 11790  0053EA                     _CDCInitEP:
 11791                           	opt stack 12
 11792                           
 11793                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11794                           
 11795                           ;incstack = 0
 11796  0053EA  0E80               	movlw	128
 11797  0053EC  0103               	movlb	3	; () banked
 11798  0053EE  6F81               	movwf	_line_coding& (0+255),b
 11799  0053F0  0E25               	movlw	37
 11800  0053F2  6F82               	movwf	(_line_coding+1)& (0+255),b
 11801  0053F4  0E00               	movlw	0
 11802  0053F6  6F83               	movwf	(_line_coding+2)& (0+255),b
 11803  0053F8  0E00               	movlw	0
 11804  0053FA  6F84               	movwf	(_line_coding+3)& (0+255),b
 11805                           
 11806                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11807  0053FC  0E00               	movlw	0
 11808  0053FE  6F85               	movwf	(_line_coding+4)& (0+255),b
 11809                           
 11810                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11811  005400  0E00               	movlw	0
 11812  005402  6F86               	movwf	(_line_coding+5)& (0+255),b
 11813                           
 11814                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11815  005404  0E08               	movlw	8
 11816  005406  6F87               	movwf	(_line_coding+6)& (0+255),b
 11817                           
 11818                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11819  005408  0E00               	movlw	0
 11820  00540A  0100               	movlb	0	; () banked
 11821  00540C  6FC7               	movwf	_cdc_rx_len& (0+255),b
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11825  00540E  0E1A               	movlw	26
 11826  005410  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11827  005412  0E01               	movlw	1
 11828  005414  ECE3  F02F         	call	_USBEnableEndpoint
 11829                           
 11830                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11831  005418  0E1E               	movlw	30
 11832  00541A  0100               	movlb	0	; () banked
 11833  00541C  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11834  00541E  0E02               	movlw	2
 11835  005420  ECE3  F02F         	call	_USBEnableEndpoint
 11836                           
 11837                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11838  005424  0E00               	movlw	0
 11839  005426  0100               	movlb	0	; () banked
 11840  005428  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11841  00542A  0E00               	movlw	low _cdc_data_rx
 11842  00542C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11843  00542E  0E05               	movlw	high _cdc_data_rx
 11844  005430  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11845  005432  0E40               	movlw	64
 11846  005434  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11847  005436  0E02               	movlw	2
 11848  005438  EC91  F020         	call	_USBTransferOnePacket
 11849  00543C  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11850  005440  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11851                           
 11852                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11853  005444  0E00               	movlw	0
 11854  005446  0101               	movlb	1	; () banked
 11855  005448  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11856  00544A  0E00               	movlw	0
 11857  00544C  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11858                           
 11859                           ; BSR set to: 1
 11860                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11861  00544E  0E00               	movlw	0
 11862  005450  0100               	movlb	0	; () banked
 11863  005452  6FC6               	movwf	_cdc_trf_state& (0+255),b
 11864                           
 11865                           ; BSR set to: 0
 11866  005454  0012               	return		;funcret
 11867  005456                     __end_of_CDCInitEP:
 11868                           	opt stack 0
 11869                           tosu	equ	0xFFF
 11870                           tosh	equ	0xFFE
 11871                           tosl	equ	0xFFD
 11872                           pclath	equ	0xFFA
 11873                           tblptru	equ	0xFF8
 11874                           tblptrh	equ	0xFF7
 11875                           tblptrl	equ	0xFF6
 11876                           tablat	equ	0xFF5
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           intcon2	equ	0xFF1
 11881                           intcon3	equ	0xFF0
 11882                           indf0	equ	0xFEF
 11883                           postinc0	equ	0xFEE
 11884                           plusw0	equ	0xFEB
 11885                           fsr0h	equ	0xFEA
 11886                           fsr0l	equ	0xFE9
 11887                           wreg	equ	0xFE8
 11888                           postinc1	equ	0xFE6
 11889                           postdec1	equ	0xFE5
 11890                           fsr1h	equ	0xFE2
 11891                           fsr1l	equ	0xFE1
 11892                           indf2	equ	0xFDF
 11893                           postinc2	equ	0xFDE
 11894                           postdec2	equ	0xFDD
 11895                           plusw2	equ	0xFDB
 11896                           fsr2h	equ	0xFDA
 11897                           fsr2l	equ	0xFD9
 11898                           status	equ	0xFD8
 11899                           
 11900 ;; *************** function _USBEnableEndpoint *****************
 11901 ;; Defined at:
 11902 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  ep              1    wreg     unsigned char 
 11905 ;;  options         1   37[BANK0 ] unsigned char 
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;  ep              1   40[BANK0 ] unsigned char 
 11908 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11909 ;;		 -> UEP0(1), 
 11910 ;; Return value:  Size  Location     Type
 11911 ;;                  1    wreg      void 
 11912 ;; Registers used:
 11913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11914 ;; Tracked objects:
 11915 ;;		On entry : 0/0
 11916 ;;		On exit  : 0/0
 11917 ;;		Unchanged: 0/0
 11918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11919 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11922 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11923 ;;Total ram usage:        4 bytes
 11924 ;; Hardware stack levels used:    1
 11925 ;; Hardware stack levels required when called:   12
 11926 ;; This function calls:
 11927 ;;		_USBConfigureEndpoint
 11928 ;; This function is called by:
 11929 ;;		_CDCInitEP
 11930 ;; This function uses a non-reentrant model
 11931 ;;
 11932                           
 11933                           	psect	text47
 11934  005FC6                     __ptext47:
 11935                           	opt stack 0
 11936  005FC6                     _USBEnableEndpoint:
 11937                           	opt stack 12
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;incstack = 0
 11941                           ;USBEnableEndpoint@ep stored from wreg
 11942  005FC6  0100               	movlb	0	; () banked
 11943  005FC8  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11944                           
 11945                           ;usb_device.c: 898: unsigned char* p;
 11946                           ;usb_device.c: 902: if(options & 0x04)
 11947  005FCA  0100               	movlb	0	; () banked
 11948  005FCC  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11949  005FCE  D005               	goto	l1643
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;usb_device.c: 903: {
 11953                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11954  005FD0  0E00               	movlw	0
 11955  005FD2  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11956  005FD4  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11957  005FD6  EC33  F025         	call	_USBConfigureEndpoint
 11958  005FDA                     l1643:
 11959                           
 11960                           ;usb_device.c: 905: }
 11961                           ;usb_device.c: 906: if(options & 0x02)
 11962  005FDA  0100               	movlb	0	; () banked
 11963  005FDC  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11964  005FDE  D005               	goto	l1644
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;usb_device.c: 907: {
 11968                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11969  005FE0  0E01               	movlw	1
 11970  005FE2  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11971  005FE4  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11972  005FE6  EC33  F025         	call	_USBConfigureEndpoint
 11973  005FEA                     l1644:
 11974                           
 11975                           ;usb_device.c: 909: }
 11976                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11977  005FEA  0100               	movlb	0	; () banked
 11978  005FEC  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11979  005FEE  0D01               	mullw	1
 11980  005FF0  0E26               	movlw	38
 11981  005FF2  24F3               	addwf	prodl,w,c
 11982  005FF4  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11983  005FF6  0E0F               	movlw	15
 11984  005FF8  20F4               	addwfc	prodh,w,c
 11985  005FFA  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;usb_device.c: 919: *p = options;
 11989  005FFC  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11990  006000  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11991  006004  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11992                           
 11993                           ; BSR set to: 0
 11994  006008  0012               	return		;funcret
 11995  00600A                     __end_of_USBEnableEndpoint:
 11996                           	opt stack 0
 11997                           tosu	equ	0xFFF
 11998                           tosh	equ	0xFFE
 11999                           tosl	equ	0xFFD
 12000                           pclath	equ	0xFFA
 12001                           tblptru	equ	0xFF8
 12002                           tblptrh	equ	0xFF7
 12003                           tblptrl	equ	0xFF6
 12004                           tablat	equ	0xFF5
 12005                           prodh	equ	0xFF4
 12006                           prodl	equ	0xFF3
 12007                           intcon	equ	0xFF2
 12008                           intcon2	equ	0xFF1
 12009                           intcon3	equ	0xFF0
 12010                           indf0	equ	0xFEF
 12011                           postinc0	equ	0xFEE
 12012                           plusw0	equ	0xFEB
 12013                           fsr0h	equ	0xFEA
 12014                           fsr0l	equ	0xFE9
 12015                           wreg	equ	0xFE8
 12016                           postinc1	equ	0xFE6
 12017                           postdec1	equ	0xFE5
 12018                           fsr1h	equ	0xFE2
 12019                           fsr1l	equ	0xFE1
 12020                           indf2	equ	0xFDF
 12021                           postinc2	equ	0xFDE
 12022                           postdec2	equ	0xFDD
 12023                           plusw2	equ	0xFDB
 12024                           fsr2h	equ	0xFDA
 12025                           fsr2l	equ	0xFD9
 12026                           status	equ	0xFD8
 12027                           
 12028 ;; *************** function _USBConfigureEndpoint *****************
 12029 ;; Defined at:
 12030 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;  EPNum           1    wreg     unsigned char 
 12033 ;;  direction       1   29[BANK0 ] unsigned char 
 12034 ;; Auto vars:     Size  Location     Type
 12035 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12036 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12037 ;;		 -> BDT(48), 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12047 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12048 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12049 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12050 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12051 ;;Total ram usage:        8 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:   11
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_USBEnableEndpoint
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           	psect	text48
 12062  004A66                     __ptext48:
 12063                           	opt stack 0
 12064  004A66                     _USBConfigureEndpoint:
 12065                           	opt stack 12
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;incstack = 0
 12069                           ;USBConfigureEndpoint@EPNum stored from wreg
 12070  004A66  0100               	movlb	0	; () banked
 12071  004A68  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12072                           
 12073                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12074                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12075  004A6A  0E00               	movlw	0
 12076  004A6C  0100               	movlb	0	; () banked
 12077  004A6E  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12078  004A70  0E04               	movlw	4
 12079  004A72  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12083  004A74  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12084  004A76  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12085  004A78  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12086  004A7A  90D8               	bcf	status,0,c
 12087  004A7C  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12088  004A7E  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12089  004A80  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12090  004A82  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12091  004A84  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12092  004A86  90D8               	bcf	status,0,c
 12093  004A88  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12094  004A8A  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12095  004A8C  90D8               	bcf	status,0,c
 12096  004A8E  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12097  004A90  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12098  004A92  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12099  004A94  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12100  004A96  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12101  004A98  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12102  004A9A  90D8               	bcf	status,0,c
 12103  004A9C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12104  004A9E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12105  004AA0  90D8               	bcf	status,0,c
 12106  004AA2  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12107  004AA4  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12108  004AA6  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12109  004AA8  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12110  004AAA  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12111  004AAC  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12115  004AAE  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12116  004AB2  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12117  004AB6  9EDF               	bcf	indf2,7,c
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;usb_device.c: 1575: if(direction == 0)
 12121  004AB8  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12122  004ABA  A4D8               	btfss	status,2,c
 12123  004ABC  D007               	goto	l1679
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;usb_device.c: 1576: {
 12127                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12128  004ABE  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12129  004AC0  0D02               	mullw	2
 12130  004AC2  0E06               	movlw	low _pBDTEntryOut
 12131  004AC4  24F3               	addwf	prodl,w,c
 12132  004AC6  6ED9               	movwf	fsr2l,c
 12133  004AC8  0E03               	movlw	high _pBDTEntryOut
 12134  004ACA  D006               	goto	L10
 12135  004ACC                     l1679:
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;usb_device.c: 1579: else
 12139                           ;usb_device.c: 1580: {
 12140                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12141                           
 12142                           ; BSR set to: 0
 12143  004ACC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12144  004ACE  0D02               	mullw	2
 12145  004AD0  0EB6               	movlw	low _pBDTEntryIn
 12146  004AD2  24F3               	addwf	prodl,w,c
 12147  004AD4  6ED9               	movwf	fsr2l,c
 12148  004AD6  0E00               	movlw	high _pBDTEntryIn
 12149  004AD8                     L10:
 12150  004AD8  20F4               	addwfc	prodh,w,c
 12151  004ADA  6EDA               	movwf	fsr2h,c
 12152  004ADC  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12153  004AE0  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;usb_device.c: 1582: }
 12157                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12158                           
 12159                           ; BSR set to: 0
 12160  004AE4  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12161  004AE8  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12162  004AEC  9CDF               	bcf	indf2,6,c
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12166  004AEE  EE20 F004          	lfsr	2,4
 12167  004AF2  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12168  004AF4  26D9               	addwf	fsr2l,f,c
 12169  004AF6  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12170  004AF8  22DA               	addwfc	fsr2h,f,c
 12171  004AFA  8CDF               	bsf	indf2,6,c
 12172                           
 12173                           ; BSR set to: 0
 12174  004AFC  0012               	return		;funcret
 12175  004AFE                     __end_of_USBConfigureEndpoint:
 12176                           	opt stack 0
 12177                           tosu	equ	0xFFF
 12178                           tosh	equ	0xFFE
 12179                           tosl	equ	0xFFD
 12180                           pclath	equ	0xFFA
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           intcon2	equ	0xFF1
 12189                           intcon3	equ	0xFF0
 12190                           indf0	equ	0xFEF
 12191                           postinc0	equ	0xFEE
 12192                           plusw0	equ	0xFEB
 12193                           fsr0h	equ	0xFEA
 12194                           fsr0l	equ	0xFE9
 12195                           wreg	equ	0xFE8
 12196                           postinc1	equ	0xFE6
 12197                           postdec1	equ	0xFE5
 12198                           fsr1h	equ	0xFE2
 12199                           fsr1l	equ	0xFE1
 12200                           indf2	equ	0xFDF
 12201                           postinc2	equ	0xFDE
 12202                           postdec2	equ	0xFDD
 12203                           plusw2	equ	0xFDB
 12204                           fsr2h	equ	0xFDA
 12205                           fsr2l	equ	0xFD9
 12206                           status	equ	0xFD8
 12207                           
 12208 ;; *************** function _USBCtrlTrfOutHandler *****************
 12209 ;; Defined at:
 12210 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;		None
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12228 ;;Total ram usage:        0 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:   13
 12231 ;; This function calls:
 12232 ;;		_USBCtrlTrfRxService
 12233 ;; This function is called by:
 12234 ;;		_USBCtrlEPService
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238                           	psect	text49
 12239  005594                     __ptext49:
 12240                           	opt stack 0
 12241  005594                     _USBCtrlTrfOutHandler:
 12242                           	opt stack 12
 12243                           
 12244                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;incstack = 0
 12248  005594  0E02               	movlw	2
 12249  005596  0100               	movlb	0	; () banked
 12250  005598  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12251  00559A  A4D8               	btfss	status,2,c
 12252  00559C  D003               	goto	l1785
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;usb_device.c: 2558: {
 12256                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12257  00559E  EC10  F017         	call	_USBCtrlTrfRxService	;wreg free
 12258                           
 12259                           ;usb_device.c: 2560: }
 12260  0055A2  0012               	return	
 12261  0055A4                     l1785:
 12262                           
 12263                           ;usb_device.c: 2561: else
 12264                           ;usb_device.c: 2562: {
 12265                           ;usb_device.c: 2565: controlTransferState = 0;
 12266  0055A4  0E00               	movlw	0
 12267  0055A6  0100               	movlb	0	; () banked
 12268  0055A8  6FCC               	movwf	_controlTransferState& (0+255),b
 12269                           
 12270                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12271  0055AA  0101               	movlb	1	; () banked
 12272  0055AC  51E1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12273  0055AE  A4D8               	btfss	status,2,c
 12274  0055B0  D020               	goto	l1787
 12275                           
 12276                           ; BSR set to: 1
 12277                           ;usb_device.c: 2573: {
 12278                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12279  0055B2  0100               	movlb	0	; () banked
 12280  0055B4  EE20 F001          	lfsr	2,1
 12281  0055B8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12282  0055BA  26D9               	addwf	fsr2l,f,c
 12283  0055BC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12284  0055BE  22DA               	addwfc	fsr2h,f,c
 12285  0055C0  0E08               	movlw	8
 12286  0055C2  6EDF               	movwf	indf2,c
 12287                           
 12288                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12289  0055C4  EE20 F002          	lfsr	2,2
 12290  0055C8  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12291  0055CA  26D9               	addwf	fsr2l,f,c
 12292  0055CC  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12293  0055CE  22DA               	addwfc	fsr2h,f,c
 12294  0055D0  0E30               	movlw	48
 12295  0055D2  6EDE               	movwf	postinc2,c
 12296  0055D4  0E04               	movlw	4
 12297  0055D6  6EDD               	movwf	postdec2,c
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12301  0055D8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12302  0055DC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12303  0055E0  0E0C               	movlw	12
 12304  0055E2  6EDF               	movwf	indf2,c
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12308  0055E4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12309  0055E8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12310  0055EC  0E00               	movlw	0
 12311  0055EE  8EDB               	bsf	plusw2,7,c
 12312                           
 12313                           ;usb_device.c: 2578: }
 12314  0055F0  0012               	return	
 12315  0055F2                     l1787:
 12316                           
 12317                           ;usb_device.c: 2579: else
 12318                           ;usb_device.c: 2580: {
 12319                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12320                           
 12321                           ; BSR set to: 0
 12322  0055F2  0E00               	movlw	0
 12323  0055F4  0101               	movlb	1	; () banked
 12324  0055F6  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12325                           
 12326                           ; BSR set to: 1
 12327  0055F8  0012               	return	
 12328  0055FA                     __end_of_USBCtrlTrfOutHandler:
 12329                           	opt stack 0
 12330                           tosu	equ	0xFFF
 12331                           tosh	equ	0xFFE
 12332                           tosl	equ	0xFFD
 12333                           pclath	equ	0xFFA
 12334                           tblptru	equ	0xFF8
 12335                           tblptrh	equ	0xFF7
 12336                           tblptrl	equ	0xFF6
 12337                           tablat	equ	0xFF5
 12338                           prodh	equ	0xFF4
 12339                           prodl	equ	0xFF3
 12340                           intcon	equ	0xFF2
 12341                           intcon2	equ	0xFF1
 12342                           intcon3	equ	0xFF0
 12343                           indf0	equ	0xFEF
 12344                           postinc0	equ	0xFEE
 12345                           plusw0	equ	0xFEB
 12346                           fsr0h	equ	0xFEA
 12347                           fsr0l	equ	0xFE9
 12348                           wreg	equ	0xFE8
 12349                           postinc1	equ	0xFE6
 12350                           postdec1	equ	0xFE5
 12351                           fsr1h	equ	0xFE2
 12352                           fsr1l	equ	0xFE1
 12353                           indf2	equ	0xFDF
 12354                           postinc2	equ	0xFDE
 12355                           postdec2	equ	0xFDD
 12356                           plusw2	equ	0xFDB
 12357                           fsr2h	equ	0xFDA
 12358                           fsr2l	equ	0xFD9
 12359                           status	equ	0xFD8
 12360                           
 12361 ;; *************** function _USBCtrlTrfRxService *****************
 12362 ;; Defined at:
 12363 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;		None
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12368 ;;  i               1   29[BANK0 ] unsigned char 
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      void 
 12371 ;; Registers used:
 12372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12381 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12382 ;;Total ram usage:        2 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:   12
 12385 ;; This function calls:
 12386 ;;		_USBCtrlEPAllowStatusStage
 12387 ;; This function is called by:
 12388 ;;		_USBCtrlTrfOutHandler
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text50
 12393  002E20                     __ptext50:
 12394                           	opt stack 0
 12395  002E20                     _USBCtrlTrfRxService:
 12396                           	opt stack 12
 12397                           
 12398                           ;usb_device.c: 1872: uint8_t byteToRead;
 12399                           ;usb_device.c: 1873: uint8_t i;
 12400                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12401                           
 12402                           ;incstack = 0
 12403  002E20  0100               	movlb	0	; () banked
 12404  002E22  EE20 F001          	lfsr	2,1
 12405  002E26  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12406  002E28  26D9               	addwf	fsr2l,f,c
 12407  002E2A  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12408  002E2C  22DA               	addwfc	fsr2h,f,c
 12409  002E2E  50DF               	movf	indf2,w,c
 12410  002E30  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12414  002E32  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12415  002E34  0101               	movlb	1	; () banked
 12416  002E36  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12417  002E38  0E00               	movlw	0
 12418  002E3A  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12419  002E3C  A0D8               	btfss	status,0,c
 12420                           
 12421                           ; BSR set to: 1
 12422                           ;usb_device.c: 1884: {
 12423                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12424  002E3E  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;usb_device.c: 1886: }
 12428                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12429                           
 12430                           ; BSR set to: 1
 12431  002E42  0100               	movlb	0	; () banked
 12432  002E44  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12433  002E46  0101               	movlb	1	; () banked
 12434  002E48  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12435  002E4A  0E00               	movlw	0
 12436  002E4C  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12437                           
 12438                           ; BSR set to: 1
 12439                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12440  002E4E  0E00               	movlw	0
 12441  002E50  0100               	movlb	0	; () banked
 12442  002E52  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12443  002E54  D013               	goto	l1713
 12444  002E56                     
 12445                           ; BSR set to: 0
 12446                           ;usb_device.c: 1893: {
 12447                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12448                           
 12449                           ; BSR set to: 0
 12450  002E56  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12451  002E58  0D01               	mullw	1
 12452  002E5A  0E38               	movlw	56
 12453  002E5C  24F3               	addwf	prodl,w,c
 12454  002E5E  6ED9               	movwf	fsr2l,c
 12455  002E60  0E04               	movlw	4
 12456  002E62  20F4               	addwfc	prodh,w,c
 12457  002E64  6EDA               	movwf	fsr2h,c
 12458  002E66  C1C9  FFE1         	movff	_outPipes,fsr1l
 12459  002E6A  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12460  002E6E  CFDF FFE7          	movff	indf2,indf1
 12461                           
 12462                           ; BSR set to: 0
 12463  002E72  0101               	movlb	1	; () banked
 12464  002E74  4BC9               	infsnz	_outPipes& (0+255),f,b
 12465  002E76  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12466                           
 12467                           ; BSR set to: 1
 12468  002E78  0100               	movlb	0	; () banked
 12469  002E7A  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12470  002E7C                     l1713:
 12471                           
 12472                           ; BSR set to: 0
 12473                           
 12474                           ; BSR set to: 0
 12475  002E7C  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12476  002E7E  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12477  002E80  A0D8               	btfss	status,0,c
 12478  002E82  D7E9               	goto	l1714
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;usb_device.c: 1895: }
 12482                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12483                           
 12484                           ; BSR set to: 0
 12485  002E84  0101               	movlb	1	; () banked
 12486  002E86  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12487  002E88  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12488  002E8A  B4D8               	btfsc	status,2,c
 12489  002E8C  D033               	goto	l1716
 12490                           
 12491                           ; BSR set to: 1
 12492                           ;usb_device.c: 1900: {
 12493                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12494  002E8E  0100               	movlb	0	; () banked
 12495  002E90  EE20 F001          	lfsr	2,1
 12496  002E94  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12497  002E96  26D9               	addwf	fsr2l,f,c
 12498  002E98  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12499  002E9A  22DA               	addwfc	fsr2h,f,c
 12500  002E9C  0E08               	movlw	8
 12501  002E9E  6EDF               	movwf	indf2,c
 12502                           
 12503                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12504  002EA0  EE20 F002          	lfsr	2,2
 12505  002EA4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12506  002EA6  26D9               	addwf	fsr2l,f,c
 12507  002EA8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12508  002EAA  22DA               	addwfc	fsr2h,f,c
 12509  002EAC  0E38               	movlw	56
 12510  002EAE  6EDE               	movwf	postinc2,c
 12511  002EB0  0E04               	movlw	4
 12512  002EB2  6EDD               	movwf	postdec2,c
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12516  002EB4  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12517  002EB8  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12518  002EBC  BCDF               	btfsc	indf2,6,c
 12519  002EBE  D00D               	goto	l1717
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;usb_device.c: 1904: {
 12523                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12524  002EC0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12525  002EC4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12526  002EC8  0E48               	movlw	72
 12527  002ECA  6EDF               	movwf	indf2,c
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12531  002ECC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12532  002ED0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12533  002ED4  0E00               	movlw	0
 12534  002ED6  8EDB               	bsf	plusw2,7,c
 12535                           
 12536                           ;usb_device.c: 1907: }
 12537  002ED8  0012               	return	
 12538  002EDA                     l1717:
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;usb_device.c: 1908: else
 12542                           ;usb_device.c: 1909: {
 12543                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12544                           
 12545                           ; BSR set to: 0
 12546  002EDA  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12547  002EDE  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12548  002EE2  0E08               	movlw	8
 12549  002EE4  6EDF               	movwf	indf2,c
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12553  002EE6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12554  002EEA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12555  002EEE  0E00               	movlw	0
 12556  002EF0  8EDB               	bsf	plusw2,7,c
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;usb_device.c: 1912: }
 12560                           ;usb_device.c: 1913: }
 12561  002EF2  0012               	return	
 12562  002EF4                     l1716:
 12563                           
 12564                           ;usb_device.c: 1914: else
 12565                           ;usb_device.c: 1915: {
 12566                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12567                           
 12568                           ; BSR set to: 0
 12569  002EF4  0100               	movlb	0	; () banked
 12570  002EF6  EE20 F001          	lfsr	2,1
 12571  002EFA  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12572  002EFC  26D9               	addwf	fsr2l,f,c
 12573  002EFE  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12574  002F00  22DA               	addwfc	fsr2h,f,c
 12575  002F02  0E08               	movlw	8
 12576  002F04  6EDF               	movwf	indf2,c
 12577                           
 12578                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12579  002F06  EE20 F002          	lfsr	2,2
 12580  002F0A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12581  002F0C  26D9               	addwf	fsr2l,f,c
 12582  002F0E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12583  002F10  22DA               	addwfc	fsr2h,f,c
 12584  002F12  0E30               	movlw	48
 12585  002F14  6EDE               	movwf	postinc2,c
 12586  002F16  0E04               	movlw	4
 12587  002F18  6EDD               	movwf	postdec2,c
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12591  002F1A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12592  002F1E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12593  002F22  0E04               	movlw	4
 12594  002F24  6EDF               	movwf	indf2,c
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12598  002F26  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12599  002F2A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12600  002F2E  0E00               	movlw	0
 12601  002F30  8EDB               	bsf	plusw2,7,c
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;usb_device.c: 1944: }
 12605                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12606                           
 12607                           ; BSR set to: 0
 12608  002F32  0101               	movlb	1	; () banked
 12609  002F34  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12610                           
 12611                           ; BSR set to: 1
 12612                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12613  002F36  0100               	movlb	0	; () banked
 12614  002F38  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12615  002F3A  A4D8               	btfss	status,2,c
 12616  002F3C  0012               	return	
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;usb_device.c: 1960: {
 12620                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12621  002F3E  ECD7  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12622  002F42  0012               	return	
 12623  002F44                     __end_of_USBCtrlTrfRxService:
 12624                           	opt stack 0
 12625                           tosu	equ	0xFFF
 12626                           tosh	equ	0xFFE
 12627                           tosl	equ	0xFFD
 12628                           pclath	equ	0xFFA
 12629                           tblptru	equ	0xFF8
 12630                           tblptrh	equ	0xFF7
 12631                           tblptrl	equ	0xFF6
 12632                           tablat	equ	0xFF5
 12633                           prodh	equ	0xFF4
 12634                           prodl	equ	0xFF3
 12635                           intcon	equ	0xFF2
 12636                           intcon2	equ	0xFF1
 12637                           intcon3	equ	0xFF0
 12638                           indf0	equ	0xFEF
 12639                           postinc0	equ	0xFEE
 12640                           plusw0	equ	0xFEB
 12641                           fsr0h	equ	0xFEA
 12642                           fsr0l	equ	0xFE9
 12643                           wreg	equ	0xFE8
 12644                           indf1	equ	0xFE7
 12645                           postinc1	equ	0xFE6
 12646                           postdec1	equ	0xFE5
 12647                           fsr1h	equ	0xFE2
 12648                           fsr1l	equ	0xFE1
 12649                           indf2	equ	0xFDF
 12650                           postinc2	equ	0xFDE
 12651                           postdec2	equ	0xFDD
 12652                           plusw2	equ	0xFDB
 12653                           fsr2h	equ	0xFDA
 12654                           fsr2l	equ	0xFD9
 12655                           status	equ	0xFD8
 12656                           
 12657 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12658 ;; Defined at:
 12659 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12660 ;; Parameters:    Size  Location     Type
 12661 ;;		None
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;		None
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  1    wreg      void 
 12666 ;; Registers used:
 12667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12668 ;; Tracked objects:
 12669 ;;		On entry : 0/0
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12677 ;;Total ram usage:        0 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:   11
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_USBDeviceTasks
 12684 ;;		_USBCtrlEPServiceComplete
 12685 ;;		_USBCtrlTrfRxService
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text51
 12690  003BAE                     __ptext51:
 12691                           	opt stack 0
 12692  003BAE                     _USBCtrlEPAllowStatusStage:
 12693                           	opt stack 12
 12694                           
 12695                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12696                           
 12697                           ;incstack = 0
 12698  003BAE  0100               	movlb	0	; () banked
 12699  003BB0  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12700  003BB2  A4D8               	btfss	status,2,c
 12701  003BB4  0012               	return	
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;usb_device.c: 1442: {
 12705                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12706  003BB6  0E01               	movlw	1
 12707  003BB8  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12708                           
 12709                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12710  003BBA  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12711  003BBC  A4D8               	btfss	status,2,c
 12712  003BBE  0012               	return	
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;usb_device.c: 1445: {
 12716                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12717  003BC0  0E01               	movlw	1
 12718  003BC2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12722  003BC4  0E02               	movlw	2
 12723  003BC6  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12724  003BC8  A4D8               	btfss	status,2,c
 12725  003BCA  D015               	goto	l1667
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;usb_device.c: 1451: {
 12729                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12730  003BCC  EE20 F001          	lfsr	2,1
 12731  003BD0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12732  003BD2  26D9               	addwf	fsr2l,f,c
 12733  003BD4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12734  003BD6  22DA               	addwfc	fsr2h,f,c
 12735  003BD8  0E00               	movlw	0
 12736  003BDA  6EDF               	movwf	indf2,c
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12740  003BDC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12741  003BE0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12742  003BE4  0E48               	movlw	72
 12743  003BE6  6EDF               	movwf	indf2,c
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12747  003BE8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12748  003BEC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12749  003BF0  0E00               	movlw	0
 12750  003BF2  8EDB               	bsf	plusw2,7,c
 12751                           
 12752                           ;usb_device.c: 1455: }
 12753  003BF4  0012               	return	
 12754  003BF6                     l1667:
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12758                           
 12759                           ; BSR set to: 0
 12760  003BF6  05CC               	decf	_controlTransferState& (0+255),w,b
 12761  003BF8  A4D8               	btfss	status,2,c
 12762  003BFA  0012               	return	
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;usb_device.c: 1457: {
 12766                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12767  003BFC  0E00               	movlw	0
 12768  003BFE  0101               	movlb	1	; () banked
 12769  003C00  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12770                           
 12771                           ; BSR set to: 1
 12772                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12773  003C02  0100               	movlb	0	; () banked
 12774  003C04  EE20 F001          	lfsr	2,1
 12775  003C08  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12776  003C0A  26D9               	addwf	fsr2l,f,c
 12777  003C0C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12778  003C0E  22DA               	addwfc	fsr2h,f,c
 12779  003C10  0E08               	movlw	8
 12780  003C12  6EDF               	movwf	indf2,c
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12784  003C14  EE20 F002          	lfsr	2,2
 12785  003C18  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12786  003C1A  26D9               	addwf	fsr2l,f,c
 12787  003C1C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12788  003C1E  22DA               	addwfc	fsr2h,f,c
 12789  003C20  0E30               	movlw	48
 12790  003C22  6EDE               	movwf	postinc2,c
 12791  003C24  0E04               	movlw	4
 12792  003C26  6EDD               	movwf	postdec2,c
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12796  003C28  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12797  003C2C  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12798  003C30  0E04               	movlw	4
 12799  003C32  6EDF               	movwf	indf2,c
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12803  003C34  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12804  003C38  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12805  003C3C  0E00               	movlw	0
 12806  003C3E  8EDB               	bsf	plusw2,7,c
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12810  003C40  0E01               	movlw	1
 12811  003C42  0101               	movlb	1	; () banked
 12812  003C44  6FE1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12813                           
 12814                           ; BSR set to: 1
 12815                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12816  003C46  0100               	movlb	0	; () banked
 12817  003C48  EE20 F001          	lfsr	2,1
 12818  003C4C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12819  003C4E  26D9               	addwf	fsr2l,f,c
 12820  003C50  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12821  003C52  22DA               	addwfc	fsr2h,f,c
 12822  003C54  0E08               	movlw	8
 12823  003C56  6EDF               	movwf	indf2,c
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12827  003C58  EE20 F002          	lfsr	2,2
 12828  003C5C  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12829  003C5E  26D9               	addwf	fsr2l,f,c
 12830  003C60  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12831  003C62  22DA               	addwfc	fsr2h,f,c
 12832  003C64  0E30               	movlw	48
 12833  003C66  6EDE               	movwf	postinc2,c
 12834  003C68  0E04               	movlw	4
 12835  003C6A  6EDD               	movwf	postdec2,c
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12839  003C6C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12840  003C70  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12841  003C74  0E80               	movlw	128
 12842  003C76  6EDF               	movwf	indf2,c
 12843                           
 12844                           ; BSR set to: 0
 12845                           
 12846                           ; BSR set to: 0
 12847                           
 12848                           ; BSR set to: 0
 12849  003C78  0012               	return	
 12850  003C7A                     __end_of_USBCtrlEPAllowStatusStage:
 12851                           	opt stack 0
 12852                           tosu	equ	0xFFF
 12853                           tosh	equ	0xFFE
 12854                           tosl	equ	0xFFD
 12855                           pclath	equ	0xFFA
 12856                           tblptru	equ	0xFF8
 12857                           tblptrh	equ	0xFF7
 12858                           tblptrl	equ	0xFF6
 12859                           tablat	equ	0xFF5
 12860                           prodh	equ	0xFF4
 12861                           prodl	equ	0xFF3
 12862                           intcon	equ	0xFF2
 12863                           intcon2	equ	0xFF1
 12864                           intcon3	equ	0xFF0
 12865                           indf0	equ	0xFEF
 12866                           postinc0	equ	0xFEE
 12867                           plusw0	equ	0xFEB
 12868                           fsr0h	equ	0xFEA
 12869                           fsr0l	equ	0xFE9
 12870                           wreg	equ	0xFE8
 12871                           indf1	equ	0xFE7
 12872                           postinc1	equ	0xFE6
 12873                           postdec1	equ	0xFE5
 12874                           fsr1h	equ	0xFE2
 12875                           fsr1l	equ	0xFE1
 12876                           indf2	equ	0xFDF
 12877                           postinc2	equ	0xFDE
 12878                           postdec2	equ	0xFDD
 12879                           plusw2	equ	0xFDB
 12880                           fsr2h	equ	0xFDA
 12881                           fsr2l	equ	0xFD9
 12882                           status	equ	0xFD8
 12883                           
 12884 ;; *************** function _USBCtrlTrfInHandler *****************
 12885 ;; Defined at:
 12886 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;		None
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  1    wreg      void 
 12893 ;; Registers used:
 12894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12903 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12904 ;;Total ram usage:        1 bytes
 12905 ;; Hardware stack levels used:    1
 12906 ;; Hardware stack levels required when called:   12
 12907 ;; This function calls:
 12908 ;;		_USBCtrlTrfTxService
 12909 ;; This function is called by:
 12910 ;;		_USBCtrlEPService
 12911 ;; This function uses a non-reentrant model
 12912 ;;
 12913                           
 12914                           	psect	text52
 12915  004060                     __ptext52:
 12916                           	opt stack 0
 12917  004060                     _USBCtrlTrfInHandler:
 12918                           	opt stack 13
 12919                           
 12920                           ;usb_device.c: 2611: uint8_t lastDTS;
 12921                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;incstack = 0
 12925  004060  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12926  004064  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12927  004068  0100               	movlb	0	; () banked
 12928  00406A  0E00               	movlw	0
 12929  00406C  BCDF               	btfsc	indf2,6,c
 12930  00406E  0E01               	movlw	1
 12931  004070  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12935  004072  0E04               	movlw	4
 12936  004074  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12940  004076  0E08               	movlw	8
 12941  004078  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12942  00407A  A4D8               	btfss	status,2,c
 12943  00407C  D00D               	goto	l1794
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;usb_device.c: 2622: {
 12947                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12948  00407E  0104               	movlb	4	; () banked
 12949  004080  5132               	movf	50,w,b	;volatile
 12950  004082  0B7F               	andlw	127
 12951  004084  010F               	movlb	15	; () banked
 12952  004086  6F38               	movwf	56,b	;volatile
 12953                           
 12954                           ; BSR set to: 15
 12955                           ;usb_device.c: 2624: if(UADDR != 0u)
 12956  004088  5138               	movf	56,w,b	;volatile
 12957  00408A  B4D8               	btfsc	status,2,c
 12958  00408C  D002               	goto	l1793
 12959                           
 12960                           ; BSR set to: 15
 12961                           ;usb_device.c: 2625: {
 12962                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12963  00408E  0E10               	movlw	16
 12964  004090  D001               	goto	L11
 12965  004092                     l1793:
 12966                           
 12967                           ;usb_device.c: 2628: else
 12968                           ;usb_device.c: 2629: {
 12969                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12970                           
 12971                           ; BSR set to: 0
 12972  004092  0E04               	movlw	4
 12973  004094                     L11:
 12974  004094  0100               	movlb	0	; () banked
 12975  004096  6FCE               	movwf	_USBDeviceState& (0+255),b
 12976  004098                     l1794:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;usb_device.c: 2631: }
 12980                           ;usb_device.c: 2632: }
 12981                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12982                           
 12983                           ; BSR set to: 0
 12984                           
 12985                           ; BSR set to: 0
 12986  004098  05CC               	decf	_controlTransferState& (0+255),w,b
 12987  00409A  A4D8               	btfss	status,2,c
 12988  00409C  D03B               	goto	l1795
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;usb_device.c: 2636: {
 12992                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12993  00409E  EE20 F002          	lfsr	2,2
 12994  0040A2  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12995  0040A4  26D9               	addwf	fsr2l,f,c
 12996  0040A6  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12997  0040A8  22DA               	addwfc	fsr2h,f,c
 12998  0040AA  0E38               	movlw	56
 12999  0040AC  6EDE               	movwf	postinc2,c
 13000  0040AE  0E04               	movlw	4
 13001  0040B0  6EDD               	movwf	postdec2,c
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 13005  0040B2  EC5F  F01B         	call	_USBCtrlTrfTxService	;wreg free
 13006                           
 13007                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 13008  0040B6  0E02               	movlw	2
 13009  0040B8  0100               	movlb	0	; () banked
 13010  0040BA  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 13011  0040BC  A4D8               	btfss	status,2,c
 13012  0040BE  D00D               	goto	l1796
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;usb_device.c: 2645: {
 13016                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 13017  0040C0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13018  0040C4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13019  0040C8  0E04               	movlw	4
 13020  0040CA  6EDF               	movwf	indf2,c
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13024  0040CC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13025  0040D0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13026  0040D4  0E00               	movlw	0
 13027  0040D6  8EDB               	bsf	plusw2,7,c
 13028                           
 13029                           ;usb_device.c: 2650: }
 13030  0040D8  0012               	return	
 13031  0040DA                     l1796:
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;usb_device.c: 2651: else
 13035                           ;usb_device.c: 2652: {
 13036                           ;usb_device.c: 2653: if(lastDTS == 0)
 13037                           
 13038                           ; BSR set to: 0
 13039  0040DA  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13040  0040DC  A4D8               	btfss	status,2,c
 13041  0040DE  D00D               	goto	l1798
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;usb_device.c: 2654: {
 13045                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13046  0040E0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13047  0040E4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13048  0040E8  0E48               	movlw	72
 13049  0040EA  6EDF               	movwf	indf2,c
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13053  0040EC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13054  0040F0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13055  0040F4  0E00               	movlw	0
 13056  0040F6  8EDB               	bsf	plusw2,7,c
 13057                           
 13058                           ;usb_device.c: 2657: }
 13059  0040F8  0012               	return	
 13060  0040FA                     l1798:
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;usb_device.c: 2658: else
 13064                           ;usb_device.c: 2659: {
 13065                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13066                           
 13067                           ; BSR set to: 0
 13068  0040FA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13069  0040FE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13070  004102  0E08               	movlw	8
 13071  004104  6EDF               	movwf	indf2,c
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13075  004106  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13076  00410A  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13077  00410E  0E00               	movlw	0
 13078  004110  8EDB               	bsf	plusw2,7,c
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;usb_device.c: 2662: }
 13082                           ;usb_device.c: 2663: }
 13083                           ;usb_device.c: 2664: }
 13084                           
 13085                           ; BSR set to: 0
 13086  004112  0012               	return	
 13087  004114                     l1795:
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;usb_device.c: 2665: else
 13091                           ;usb_device.c: 2666: {
 13092                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13093  004114  0101               	movlb	1	; () banked
 13094  004116  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13095                           
 13096                           ; BSR set to: 1
 13097                           ;usb_device.c: 2675: }
 13098                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13099                           
 13100                           ; BSR set to: 1
 13101  004118  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13102                           
 13103                           ; BSR set to: 1
 13104                           ;usb_device.c: 2677: }
 13105                           ;usb_device.c: 2679: controlTransferState = 0;
 13106                           
 13107                           ; BSR set to: 1
 13108  00411A  0E00               	movlw	0
 13109  00411C  0100               	movlb	0	; () banked
 13110  00411E  6FCC               	movwf	_controlTransferState& (0+255),b
 13111  004120  0012               	return	
 13112  004122                     __end_of_USBCtrlTrfInHandler:
 13113                           	opt stack 0
 13114                           tosu	equ	0xFFF
 13115                           tosh	equ	0xFFE
 13116                           tosl	equ	0xFFD
 13117                           pclath	equ	0xFFA
 13118                           tblptru	equ	0xFF8
 13119                           tblptrh	equ	0xFF7
 13120                           tblptrl	equ	0xFF6
 13121                           tablat	equ	0xFF5
 13122                           prodh	equ	0xFF4
 13123                           prodl	equ	0xFF3
 13124                           intcon	equ	0xFF2
 13125                           intcon2	equ	0xFF1
 13126                           intcon3	equ	0xFF0
 13127                           indf0	equ	0xFEF
 13128                           postinc0	equ	0xFEE
 13129                           plusw0	equ	0xFEB
 13130                           fsr0h	equ	0xFEA
 13131                           fsr0l	equ	0xFE9
 13132                           wreg	equ	0xFE8
 13133                           indf1	equ	0xFE7
 13134                           postinc1	equ	0xFE6
 13135                           postdec1	equ	0xFE5
 13136                           fsr1h	equ	0xFE2
 13137                           fsr1l	equ	0xFE1
 13138                           indf2	equ	0xFDF
 13139                           postinc2	equ	0xFDE
 13140                           postdec2	equ	0xFDD
 13141                           plusw2	equ	0xFDB
 13142                           fsr2h	equ	0xFDA
 13143                           fsr2l	equ	0xFD9
 13144                           status	equ	0xFD8
 13145                           
 13146 ;; *************** function _USBCtrlTrfTxService *****************
 13147 ;; Defined at:
 13148 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;		None
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      void 
 13155 ;; Registers used:
 13156 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13163 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13165 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13166 ;;Total ram usage:        1 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:   11
 13169 ;; This function calls:
 13170 ;;		Nothing
 13171 ;; This function is called by:
 13172 ;;		_USBCtrlEPAllowDataStage
 13173 ;;		_USBCtrlTrfInHandler
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text53
 13178  0036BE                     __ptext53:
 13179                           	opt stack 0
 13180  0036BE                     _USBCtrlTrfTxService:
 13181                           	opt stack 11
 13182                           
 13183                           ;usb_device.c: 1791: uint8_t byteToSend;
 13184                           ;usb_device.c: 1795: byteToSend = 8;
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;incstack = 0
 13188  0036BE  0E08               	movlw	8
 13189  0036C0  0100               	movlb	0	; () banked
 13190  0036C2  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13194  0036C4  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13195  0036C6  E110               	bnz	l12910
 13196  0036C8  0E08               	movlw	8
 13197  0036CA  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13198  0036CC  B0D8               	btfsc	status,0,c
 13199  0036CE  D00C               	goto	l1700
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;usb_device.c: 1797: {
 13203                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13204  0036D0  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13208  0036D4  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13209  0036D6  A4D8               	btfss	status,2,c
 13210  0036D8  D002               	goto	l1698
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;usb_device.c: 1806: {
 13214                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13215  0036DA  0E01               	movlw	1
 13216  0036DC  D004               	goto	L12
 13217  0036DE                     l1698:
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13221                           
 13222                           ; BSR set to: 0
 13223  0036DE  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13224  0036E0  A4D8               	btfss	status,2,c
 13225  0036E2  D002               	goto	l1700
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;usb_device.c: 1810: {
 13229                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13230  0036E4  0E02               	movlw	2
 13231  0036E6                     L12:
 13232  0036E6  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13233  0036E8                     l1700:
 13234  0036E8                     l12910:
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;usb_device.c: 1812: }
 13238                           ;usb_device.c: 1813: }
 13239                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13240  0036E8  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13241  0036EA  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13242  0036EC  0E00               	movlw	0
 13243  0036EE  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13247  0036F0  EE20 F001          	lfsr	2,1
 13248  0036F4  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13249  0036F6  26D9               	addwf	fsr2l,f,c
 13250  0036F8  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13251  0036FA  22DA               	addwfc	fsr2h,f,c
 13252  0036FC  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13256  003700  0E38               	movlw	56
 13257  003702  0102               	movlb	2	; () banked
 13258  003704  6FD4               	movwf	_pDst& (0+255),b
 13259  003706  0E04               	movlw	4
 13260  003708  6FD5               	movwf	(_pDst+1)& (0+255),b
 13261                           
 13262                           ; BSR set to: 2
 13263                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13264  00370A  0100               	movlb	0	; () banked
 13265  00370C  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13266  00370E  D01E               	goto	l1702
 13267  003710  D03E               	goto	l1706
 13268  003712                     
 13269                           ; BSR set to: 0
 13270                           ;usb_device.c: 1830: {
 13271                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13272                           
 13273                           ; BSR set to: 0
 13274  003712  C0B0  FFF6         	movff	_inPipes,tblptrl
 13275  003716  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13276  00371A  6AF8               	clrf	tblptru,c
 13277  00371C  C2D4  FFD9         	movff	_pDst,fsr2l
 13278  003720  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13279  003724  0E0E               	movlw	(high __ramtop+-1)
 13280  003726  64F7               	cpfsgt	tblptrh,c
 13281  003728  D003               	bra	u11477
 13282  00372A  0008               	tblrd		*
 13283  00372C  50F5               	movf	tablat,w,c
 13284  00372E  D005               	bra	u11470
 13285  003730                     u11477:
 13286  003730  CFF6 FFE9          	movff	tblptrl,fsr0l
 13287  003734  CFF7 FFEA          	movff	tblptrh,fsr0h
 13288  003738  50EF               	movf	indf0,w,c
 13289  00373A                     u11470:
 13290  00373A  6EDF               	movwf	indf2,c
 13291  00373C  0100               	movlb	0	; () banked
 13292  00373E  4BB0               	infsnz	_inPipes& (0+255),f,b
 13293  003740  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13294                           
 13295                           ; BSR set to: 0
 13296  003742  0102               	movlb	2	; () banked
 13297  003744  4BD4               	infsnz	_pDst& (0+255),f,b
 13298  003746  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13299                           
 13300                           ; BSR set to: 2
 13301                           ;usb_device.c: 1832: byteToSend--;
 13302  003748  0100               	movlb	0	; () banked
 13303  00374A  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13304  00374C                     l1702:
 13305                           
 13306                           ; BSR set to: 0
 13307                           
 13308                           ; BSR set to: 0
 13309  00374C  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13310  00374E  B4D8               	btfsc	status,2,c
 13311  003750  0012               	return	
 13312  003752  D7DF               	goto	l1703
 13313  003754                     
 13314                           ; BSR set to: 0
 13315                           ;usb_device.c: 1838: {
 13316                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13317                           
 13318                           ; BSR set to: 0
 13319  003754  C0B0  FFF6         	movff	_inPipes,tblptrl
 13320  003758  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13321  00375C  6AF8               	clrf	tblptru,c
 13322  00375E  C2D4  FFD9         	movff	_pDst,fsr2l
 13323  003762  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13324  003766  0E0E               	movlw	(high __ramtop+-1)
 13325  003768  64F7               	cpfsgt	tblptrh,c
 13326  00376A  D003               	bra	u11497
 13327  00376C  0008               	tblrd		*
 13328  00376E  50F5               	movf	tablat,w,c
 13329  003770  D005               	bra	u11490
 13330  003772                     u11497:
 13331  003772  CFF6 FFE9          	movff	tblptrl,fsr0l
 13332  003776  CFF7 FFEA          	movff	tblptrh,fsr0h
 13333  00377A  50EF               	movf	indf0,w,c
 13334  00377C                     u11490:
 13335  00377C  6EDF               	movwf	indf2,c
 13336  00377E  0100               	movlb	0	; () banked
 13337  003780  4BB0               	infsnz	_inPipes& (0+255),f,b
 13338  003782  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13339                           
 13340                           ; BSR set to: 0
 13341  003784  0102               	movlb	2	; () banked
 13342  003786  4BD4               	infsnz	_pDst& (0+255),f,b
 13343  003788  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13344                           
 13345                           ; BSR set to: 2
 13346                           ;usb_device.c: 1840: byteToSend--;
 13347  00378A  0100               	movlb	0	; () banked
 13348  00378C  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13349  00378E                     l1706:
 13350                           
 13351                           ; BSR set to: 0
 13352                           
 13353                           ; BSR set to: 0
 13354  00378E  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13355  003790  B4D8               	btfsc	status,2,c
 13356  003792  0012               	return	
 13357  003794  D7DF               	goto	l1707
 13358  003796                     __end_of_USBCtrlTrfTxService:
 13359                           	opt stack 0
 13360                           tosu	equ	0xFFF
 13361                           tosh	equ	0xFFE
 13362                           tosl	equ	0xFFD
 13363                           pclath	equ	0xFFA
 13364                           tblptru	equ	0xFF8
 13365                           tblptrh	equ	0xFF7
 13366                           tblptrl	equ	0xFF6
 13367                           tablat	equ	0xFF5
 13368                           prodh	equ	0xFF4
 13369                           prodl	equ	0xFF3
 13370                           intcon	equ	0xFF2
 13371                           intcon2	equ	0xFF1
 13372                           intcon3	equ	0xFF0
 13373                           indf0	equ	0xFEF
 13374                           postinc0	equ	0xFEE
 13375                           plusw0	equ	0xFEB
 13376                           fsr0h	equ	0xFEA
 13377                           fsr0l	equ	0xFE9
 13378                           wreg	equ	0xFE8
 13379                           indf1	equ	0xFE7
 13380                           postinc1	equ	0xFE6
 13381                           postdec1	equ	0xFE5
 13382                           fsr1h	equ	0xFE2
 13383                           fsr1l	equ	0xFE1
 13384                           indf2	equ	0xFDF
 13385                           postinc2	equ	0xFDE
 13386                           postdec2	equ	0xFDD
 13387                           plusw2	equ	0xFDB
 13388                           fsr2h	equ	0xFDA
 13389                           fsr2l	equ	0xFD9
 13390                           status	equ	0xFD8
 13391                           
 13392 ;; *************** function _CDCTxService *****************
 13393 ;; Defined at:
 13394 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;		None
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13399 ;;  i               1   36[BANK0 ] unsigned char 
 13400 ;; Return value:  Size  Location     Type
 13401 ;;                  1    wreg      void 
 13402 ;; Registers used:
 13403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13413 ;;Total ram usage:        2 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:   12
 13416 ;; This function calls:
 13417 ;;		_USBTransferOnePacket
 13418 ;; This function is called by:
 13419 ;;		_UsbDevice_MainTask
 13420 ;; This function uses a non-reentrant model
 13421 ;;
 13422                           
 13423                           	psect	text54
 13424  00281C                     __ptext54:
 13425                           	opt stack 0
 13426  00281C                     _CDCTxService:
 13427                           	opt stack 15
 13428                           
 13429                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13430                           ;usb_device_cdc.c: 842: uint8_t i;
 13431                           ;usb_device_cdc.c: 844: ;
 13432                           ;usb_device_cdc.c: 846: {};
 13433                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;incstack = 0
 13437  00281C  0101               	movlb	1	; () banked
 13438  00281E  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13439  002820  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13440  002822  B4D8               	btfsc	status,2,c
 13441  002824  D006               	goto	l1952
 13442                           
 13443                           ; BSR set to: 1
 13444  002826  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13445  00282A  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13446  00282E  BEDF               	btfsc	indf2,7,c
 13447  002830  0012               	return	
 13448  002832                     l1952:
 13449                           
 13450                           ; BSR set to: 1
 13451                           ;usb_device_cdc.c: 852: }
 13452                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13453                           
 13454                           ; BSR set to: 1
 13455  002832  0E03               	movlw	3
 13456  002834  0100               	movlb	0	; () banked
 13457  002836  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13458  002838  A4D8               	btfss	status,2,c
 13459  00283A  D002               	goto	l1954
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13463  00283C  0E00               	movlw	0
 13464  00283E  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13465  002840                     l1954:
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13469  002840  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13470  002842  B4D8               	btfsc	status,2,c
 13471  002844  0012               	return	
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;usb_device_cdc.c: 869: }
 13475                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13476                           
 13477                           ; BSR set to: 0
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;usb_device_cdc.c: 866: {
 13481                           ;usb_device_cdc.c: 867: ;
 13482                           ;usb_device_cdc.c: 868: return;
 13483  002846  0E02               	movlw	2
 13484  002848  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13485  00284A  A4D8               	btfss	status,2,c
 13486  00284C  D013               	goto	l1956
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;usb_device_cdc.c: 875: {
 13490                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13491  00284E  0E01               	movlw	1
 13492  002850  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13493  002852  0E00               	movlw	0
 13494  002854  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13495  002856  0E00               	movlw	0
 13496  002858  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13497  00285A  0E00               	movlw	0
 13498  00285C  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13499  00285E  0E02               	movlw	2
 13500  002860  EC91  F020         	call	_USBTransferOnePacket
 13501  002864  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13502  002868  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13503                           
 13504                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13505  00286C  0E03               	movlw	3
 13506  00286E  0100               	movlb	0	; () banked
 13507  002870  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13508                           
 13509                           ;usb_device_cdc.c: 879: }
 13510  002872  0012               	return	
 13511  002874                     l1956:
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13515                           
 13516                           ; BSR set to: 0
 13517  002874  05C6               	decf	_cdc_trf_state& (0+255),w,b
 13518  002876  A4D8               	btfss	status,2,c
 13519  002878  0012               	return	
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;usb_device_cdc.c: 881: {
 13523                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13524  00287A  0E40               	movlw	64
 13525  00287C  65C5               	cpfsgt	_cdc_tx_len& (0+255),b
 13526  00287E  D003               	goto	l1959
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13530  002880  0E40               	movlw	64
 13531  002882  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13532  002884  D002               	goto	l1960
 13533  002886                     l1959:
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;usb_device_cdc.c: 887: else
 13537                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13538  002886  C0C5  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13539  00288A                     l1960:
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13543                           
 13544                           ; BSR set to: 0
 13545  00288A  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13546  00288C  0800               	sublw	0
 13547  00288E  25C5               	addwf	_cdc_tx_len& (0+255),w,b
 13548  002890  6FC5               	movwf	_cdc_tx_len& (0+255),b
 13549                           
 13550                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13551  002892  0EB6               	movlw	low _cdc_data_tx
 13552  002894  0102               	movlb	2	; () banked
 13553  002896  6FC8               	movwf	_pCDCDst& (0+255),b
 13554  002898  0E07               	movlw	high _cdc_data_tx
 13555  00289A  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13556                           
 13557                           ; BSR set to: 2
 13558                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13559  00289C  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13560                           
 13561                           ; BSR set to: 2
 13562                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13563  0028A0  0101               	movlb	1	; () banked
 13564  0028A2  51DF               	movf	_cdc_mem_type& (0+255),w,b
 13565  0028A4  B4D8               	btfsc	status,2,c
 13566  0028A6  D01D               	goto	l1962
 13567  0028A8  D03D               	goto	l1966
 13568  0028AA                     
 13569                           ;usb_device_cdc.c: 901: {
 13570                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13571                           
 13572                           ; BSR set to: 1
 13573  0028AA  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13574  0028AE  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13575  0028B2  6AF8               	clrf	tblptru,c
 13576  0028B4  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13577  0028B8  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13578  0028BC  0E0E               	movlw	(high __ramtop+-1)
 13579  0028BE  64F7               	cpfsgt	tblptrh,c
 13580  0028C0  D003               	bra	u15567
 13581  0028C2  0008               	tblrd		*
 13582  0028C4  50F5               	movf	tablat,w,c
 13583  0028C6  D005               	bra	u15560
 13584  0028C8                     u15567:
 13585  0028C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13586  0028CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13587  0028D0  50EF               	movf	indf0,w,c
 13588  0028D2                     u15560:
 13589  0028D2  6EDF               	movwf	indf2,c
 13590                           
 13591                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13592  0028D4  0102               	movlb	2	; () banked
 13593  0028D6  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13594  0028D8  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13595                           
 13596                           ; BSR set to: 2
 13597                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13598  0028DA  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13599  0028DC  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13600                           
 13601                           ; BSR set to: 2
 13602                           ;usb_device_cdc.c: 905: i--;
 13603  0028DE  0100               	movlb	0	; () banked
 13604  0028E0  0784               	decf	CDCTxService@i& (0+255),f,b
 13605  0028E2                     l1962:
 13606                           
 13607                           ; BSR set to: 0
 13608  0028E2  0100               	movlb	0	; () banked
 13609  0028E4  5184               	movf	CDCTxService@i& (0+255),w,b
 13610  0028E6  B4D8               	btfsc	status,2,c
 13611  0028E8  D021               	goto	u15590
 13612  0028EA  D7DF               	goto	l1963
 13613  0028EC                     
 13614                           ; BSR set to: 0
 13615                           ;usb_device_cdc.c: 911: {
 13616                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13617                           
 13618                           ; BSR set to: 0
 13619  0028EC  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13620  0028F0  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13621  0028F4  6AF8               	clrf	tblptru,c
 13622  0028F6  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13623  0028FA  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13624  0028FE  0E0E               	movlw	(high __ramtop+-1)
 13625  002900  64F7               	cpfsgt	tblptrh,c
 13626  002902  D003               	bra	u15587
 13627  002904  0008               	tblrd		*
 13628  002906  50F5               	movf	tablat,w,c
 13629  002908  D005               	bra	u15580
 13630  00290A                     u15587:
 13631  00290A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13632  00290E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13633  002912  50EF               	movf	indf0,w,c
 13634  002914                     u15580:
 13635  002914  6EDF               	movwf	indf2,c
 13636                           
 13637                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13638  002916  0102               	movlb	2	; () banked
 13639  002918  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13640  00291A  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13641                           
 13642                           ; BSR set to: 2
 13643                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13644  00291C  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13645  00291E  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13646                           
 13647                           ; BSR set to: 2
 13648                           ;usb_device_cdc.c: 915: i--;
 13649  002920  0100               	movlb	0	; () banked
 13650  002922  0784               	decf	CDCTxService@i& (0+255),f,b
 13651  002924                     l1966:
 13652                           
 13653                           ; BSR set to: 0
 13654  002924  0100               	movlb	0	; () banked
 13655  002926  5184               	movf	CDCTxService@i& (0+255),w,b
 13656  002928  A4D8               	btfss	status,2,c
 13657  00292A  D7E0               	goto	l1967
 13658  00292C                     u15590:
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;usb_device_cdc.c: 916: }
 13662                           ;usb_device_cdc.c: 917: }
 13663                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13664                           
 13665                           ; BSR set to: 0
 13666                           
 13667                           ; BSR set to: 0
 13668  00292C  51C5               	movf	_cdc_tx_len& (0+255),w,b
 13669  00292E  A4D8               	btfss	status,2,c
 13670  002930  D008               	goto	l1971
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;usb_device_cdc.c: 924: {
 13674                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13675  002932  0E40               	movlw	64
 13676  002934  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13677  002936  A4D8               	btfss	status,2,c
 13678  002938  D002               	goto	l1970
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13682  00293A  0E02               	movlw	2
 13683  00293C  D001               	goto	L13
 13684  00293E                     l1970:
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;usb_device_cdc.c: 927: else
 13688                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13689                           
 13690                           ; BSR set to: 0
 13691  00293E  0E03               	movlw	3
 13692  002940                     L13:
 13693  002940  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13694  002942                     l1971:
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;usb_device_cdc.c: 929: }
 13698                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13699                           
 13700                           ; BSR set to: 0
 13701                           
 13702                           ; BSR set to: 0
 13703  002942  0E01               	movlw	1
 13704  002944  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13705  002946  0EB6               	movlw	low _cdc_data_tx
 13706  002948  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13707  00294A  0E07               	movlw	high _cdc_data_tx
 13708  00294C  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13709  00294E  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13710  002952  0E02               	movlw	2
 13711  002954  EC91  F020         	call	_USBTransferOnePacket
 13712  002958  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13713  00295C  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13714  002960  0012               	return	
 13715  002962                     __end_of_CDCTxService:
 13716                           	opt stack 0
 13717                           tosu	equ	0xFFF
 13718                           tosh	equ	0xFFE
 13719                           tosl	equ	0xFFD
 13720                           pclath	equ	0xFFA
 13721                           tblptru	equ	0xFF8
 13722                           tblptrh	equ	0xFF7
 13723                           tblptrl	equ	0xFF6
 13724                           tablat	equ	0xFF5
 13725                           prodh	equ	0xFF4
 13726                           prodl	equ	0xFF3
 13727                           intcon	equ	0xFF2
 13728                           intcon2	equ	0xFF1
 13729                           intcon3	equ	0xFF0
 13730                           indf0	equ	0xFEF
 13731                           postinc0	equ	0xFEE
 13732                           plusw0	equ	0xFEB
 13733                           fsr0h	equ	0xFEA
 13734                           fsr0l	equ	0xFE9
 13735                           wreg	equ	0xFE8
 13736                           indf1	equ	0xFE7
 13737                           postinc1	equ	0xFE6
 13738                           postdec1	equ	0xFE5
 13739                           fsr1h	equ	0xFE2
 13740                           fsr1l	equ	0xFE1
 13741                           indf2	equ	0xFDF
 13742                           postinc2	equ	0xFDE
 13743                           postdec2	equ	0xFDD
 13744                           plusw2	equ	0xFDB
 13745                           fsr2h	equ	0xFDA
 13746                           fsr2l	equ	0xFD9
 13747                           status	equ	0xFD8
 13748                           
 13749 ;; *************** function _Term_MainSm *****************
 13750 ;; Defined at:
 13751 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13752 ;; Parameters:    Size  Location     Type
 13753 ;;		None
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13756 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13757 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13758 ;;  FwkBuildYear    4    0        unsigned char [4]
 13759 ;;  FwkBuildMont    4    0        unsigned char [4]
 13760 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1    wreg      void 
 13763 ;; Registers used:
 13764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13765 ;; Tracked objects:
 13766 ;;		On entry : 0/0
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13771 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13773 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13774 ;;Total ram usage:       12 bytes
 13775 ;; Hardware stack levels used:    1
 13776 ;; Hardware stack levels required when called:   16
 13777 ;; This function calls:
 13778 ;;		_OsTmr_GetTimerStatus
 13779 ;;		_OsTmr_StartTimer
 13780 ;;		_Terminal
 13781 ;;		_memset
 13782 ;;		_putUSBUSART
 13783 ;;		_sprintf
 13784 ;;		_strcat
 13785 ;;		_strcpy
 13786 ;;		_strlen
 13787 ;;		_utoa
 13788 ;; This function is called by:
 13789 ;;		_Term_MainTask
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text55
 13794  0010B6                     __ptext55:
 13795                           	opt stack 0
 13796  0010B6                     _Term_MainSm:
 13797                           	opt stack 11
 13798                           
 13799                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13800                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13801                           ;term.c: 711: static UINT8 Data[50];
 13802                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13803                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13804                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13805                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13806                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13807                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13808                           ;term.c: 719: switch (TermMainSmState)
 13809                           
 13810                           ;incstack = 0
 13811  0010B6  D133               	goto	l2464
 13812  0010B8                     
 13813                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13814  0010B8  0ED2               	movlw	low Term_MainSm@TermDelay
 13815  0010BA  0100               	movlb	0	; () banked
 13816  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13817  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13818  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13819  0010C2  0ED0               	movlw	208
 13820  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13821  0010C6  0E07               	movlw	7
 13822  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13823  0010CA  0E00               	movlw	0
 13824  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13825  0010CE  0E00               	movlw	0
 13826  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13827  0010D2  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 13828                           
 13829                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13830  0010D6  0E01               	movlw	1
 13831  0010D8  0102               	movlb	2	; () banked
 13832  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13833                           
 13834                           ;term.c: 726: break;
 13835  0010DC  0012               	return	
 13836  0010DE                     
 13837                           ; BSR set to: 2
 13838                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13839                           
 13840                           ; BSR set to: 2
 13841  0010DE  0ED2               	movlw	low Term_MainSm@TermDelay
 13842  0010E0  0100               	movlb	0	; () banked
 13843  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13844  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13845  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13846  0010E8  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 13847  0010EC  06E8               	decf	wreg,f,c
 13848  0010EE  A4D8               	btfss	status,2,c
 13849  0010F0  0012               	return	
 13850                           
 13851                           ;term.c: 731: {
 13852                           ;term.c: 733: TermMainSmState = Term_InitState;
 13853  0010F2  0E02               	movlw	2
 13854  0010F4  0102               	movlb	2	; () banked
 13855  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13856                           
 13857                           ; BSR set to: 2
 13858                           ;term.c: 734: }
 13859                           ;term.c: 735: break;
 13860  0010F8  0012               	return	
 13861  0010FA                     
 13862                           ; BSR set to: 2
 13863                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13864                           
 13865                           ; BSR set to: 2
 13866  0010FA  0E1F               	movlw	31
 13867  0010FC  0100               	movlb	0	; () banked
 13868  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13869  001100  0012               	return	
 13870                           
 13871                           ; BSR set to: 0
 13872  001102  B265               	btfsc	3941,1,c	;volatile
 13873  001104  0012               	return	
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;term.c: 743: else
 13877                           ;term.c: 744: {
 13878                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13879                           
 13880                           ; BSR set to: 0
 13881                           
 13882                           ; BSR set to: 0
 13883                           ;term.c: 740: {
 13884                           ;term.c: 742: }
 13885  001106  0E03               	movlw	3
 13886  001108  0102               	movlb	2	; () banked
 13887  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13888                           
 13889                           ; BSR set to: 2
 13890                           ;term.c: 747: }
 13891                           ;term.c: 748: break;
 13892  00110C  0012               	return	
 13893  00110E                     
 13894                           ; BSR set to: 2
 13895                           ;term.c: 752: if((cdc_trf_state == 0))
 13896                           
 13897                           ; BSR set to: 2
 13898  00110E  0100               	movlb	0	; () banked
 13899  001110  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13900  001112  A4D8               	btfss	status,2,c
 13901  001114  0012               	return	
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;term.c: 753: {
 13905                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13906  001116  0E22               	movlw	low _Welcome
 13907  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13908  00111A  0EFD               	movlw	high _Welcome
 13909  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13910  00111E  0E88               	movlw	136
 13911  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13912  001122  EC8B  F033         	call	_putUSBUSART	;wreg free
 13913                           
 13914                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13915  001126  0E04               	movlw	4
 13916  001128  0102               	movlb	2	; () banked
 13917  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13918                           
 13919                           ; BSR set to: 2
 13920                           ;term.c: 758: }
 13921                           ;term.c: 759: break;
 13922  00112C  0012               	return	
 13923  00112E                     
 13924                           ; BSR set to: 2
 13925                           ;term.c: 763: if((cdc_trf_state == 0))
 13926                           
 13927                           ; BSR set to: 2
 13928  00112E  0100               	movlb	0	; () banked
 13929  001130  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13930  001132  A4D8               	btfss	status,2,c
 13931  001134  0012               	return	
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;term.c: 764: {
 13935                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13936  001136  0E32               	movlw	low _MsgFormat
 13937  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13938  00113A  0EFC               	movlw	high _MsgFormat
 13939  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13940  00113E  0EEF               	movlw	239
 13941  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13942  001142  EC8B  F033         	call	_putUSBUSART	;wreg free
 13943                           
 13944                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13945  001146  0E05               	movlw	5
 13946  001148  0102               	movlb	2	; () banked
 13947  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13948                           
 13949                           ; BSR set to: 2
 13950                           ;term.c: 769: }
 13951                           ;term.c: 770: break;
 13952  00114C  0012               	return	
 13953  00114E                     
 13954                           ; BSR set to: 2
 13955                           ;term.c: 774: if((cdc_trf_state == 0))
 13956                           
 13957                           ; BSR set to: 2
 13958  00114E  0100               	movlb	0	; () banked
 13959  001150  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13960  001152  A4D8               	btfss	status,2,c
 13961  001154  0012               	return	
 13962                           
 13963                           ; BSR set to: 0
 13964                           ;term.c: 775: {
 13965                           ;term.c: 777: memset(Data,0,50);
 13966  001156  0E61               	movlw	low Term_MainSm@Data
 13967  001158  6F7D               	movwf	memset@p1& (0+255),b
 13968  00115A  0E04               	movlw	high Term_MainSm@Data
 13969  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13970  00115E  0E00               	movlw	0
 13971  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13972  001162  0E00               	movlw	0
 13973  001164  6F7F               	movwf	memset@c& (0+255),b
 13974  001166  0E00               	movlw	0
 13975  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13976  00116A  0E32               	movlw	50
 13977  00116C  6F81               	movwf	memset@n& (0+255),b
 13978  00116E  EC33  F032         	call	_memset	;wreg free
 13979                           
 13980                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13981  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13982  001174  0100               	movlb	0	; () banked
 13983  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13984  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13985  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13986  00117C  0E00               	movlw	0
 13987  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13988  001180  0E01               	movlw	1
 13989  001182  6F8C               	movwf	utoa@val& (0+255),b
 13990  001184  0E00               	movlw	0
 13991  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13992  001188  0E0A               	movlw	10
 13993  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13994  00118C  EC53  F022         	call	_utoa	;wreg free
 13995                           
 13996                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13997  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13998  001192  0100               	movlb	0	; () banked
 13999  001194  6F8A               	movwf	utoa@buf& (0+255),b
 14000  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14001  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14002  00119A  0E00               	movlw	0
 14003  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14004  00119E  0E02               	movlw	2
 14005  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 14006  0011A2  0E00               	movlw	0
 14007  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14008  0011A6  0E0A               	movlw	10
 14009  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 14010  0011AA  EC53  F022         	call	_utoa	;wreg free
 14011                           
 14012                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 14013  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14014  0011B0  0100               	movlb	0	; () banked
 14015  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 14016  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14017  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14018  0011B8  0E00               	movlw	0
 14019  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14020  0011BC  0E00               	movlw	0
 14021  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14022  0011C0  0E00               	movlw	0
 14023  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14024  0011C4  0E0A               	movlw	10
 14025  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14026  0011C8  EC53  F022         	call	_utoa	;wreg free
 14027                           
 14028                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14029  0011CC  0E61               	movlw	low Term_MainSm@Data
 14030  0011CE  0100               	movlb	0	; () banked
 14031  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14032  0011D2  0E04               	movlw	high Term_MainSm@Data
 14033  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14034  0011D6  0ED2               	movlw	low STR_23
 14035  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14036  0011DA  0EFE               	movlw	high STR_23
 14037  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14038  0011DE  EC02  F032         	call	_strcpy	;wreg free
 14039                           
 14040                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14041  0011E2  0E61               	movlw	low Term_MainSm@Data
 14042  0011E4  0100               	movlb	0	; () banked
 14043  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14044  0011E8  0E04               	movlw	high Term_MainSm@Data
 14045  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14046  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14047  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14048  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14049  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14050  0011F4  ECF2  F02B         	call	_strcat	;wreg free
 14051                           
 14052                           ;term.c: 784: strcat(Data,".");
 14053  0011F8  0E61               	movlw	low Term_MainSm@Data
 14054  0011FA  0100               	movlb	0	; () banked
 14055  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14056  0011FE  0E04               	movlw	high Term_MainSm@Data
 14057  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14058  001202  0EF5               	movlw	low STR_24
 14059  001204  6F7F               	movwf	strcat@from& (0+255),b
 14060  001206  0EFF               	movlw	high STR_24
 14061  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14062  00120A  ECF2  F02B         	call	_strcat	;wreg free
 14063                           
 14064                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14065  00120E  0E61               	movlw	low Term_MainSm@Data
 14066  001210  0100               	movlb	0	; () banked
 14067  001212  6F7D               	movwf	strcat@to& (0+255),b
 14068  001214  0E04               	movlw	high Term_MainSm@Data
 14069  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14070  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14071  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14072  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14073  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14074  001220  ECF2  F02B         	call	_strcat	;wreg free
 14075                           
 14076                           ;term.c: 786: strcat(Data,".");
 14077  001224  0E61               	movlw	low Term_MainSm@Data
 14078  001226  0100               	movlb	0	; () banked
 14079  001228  6F7D               	movwf	strcat@to& (0+255),b
 14080  00122A  0E04               	movlw	high Term_MainSm@Data
 14081  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14082  00122E  0EF5               	movlw	low STR_24
 14083  001230  6F7F               	movwf	strcat@from& (0+255),b
 14084  001232  0EFF               	movlw	high STR_24
 14085  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14086  001236  ECF2  F02B         	call	_strcat	;wreg free
 14087                           
 14088                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14089  00123A  0E61               	movlw	low Term_MainSm@Data
 14090  00123C  0100               	movlb	0	; () banked
 14091  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14092  001240  0E04               	movlw	high Term_MainSm@Data
 14093  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14094  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14095  001246  6F7F               	movwf	strcat@from& (0+255),b
 14096  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14097  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14098  00124C  ECF2  F02B         	call	_strcat	;wreg free
 14099                           
 14100                           ;term.c: 788: strcat(Data,"\r\n");
 14101  001250  0E61               	movlw	low Term_MainSm@Data
 14102  001252  0100               	movlb	0	; () banked
 14103  001254  6F7D               	movwf	strcat@to& (0+255),b
 14104  001256  0E04               	movlw	high Term_MainSm@Data
 14105  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14106  00125A  0E86               	movlw	low (STR_21+39)
 14107  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14108  00125E  0EFE               	movlw	high (STR_21+39)
 14109  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14110  001262  ECF2  F02B         	call	_strcat	;wreg free
 14111                           
 14112                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14113  001266  0E61               	movlw	low Term_MainSm@Data
 14114  001268  0100               	movlb	0	; () banked
 14115  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14116  00126C  0E04               	movlw	high Term_MainSm@Data
 14117  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14118  001270  0E61               	movlw	low Term_MainSm@Data
 14119  001272  6F7D               	movwf	strlen@s& (0+255),b
 14120  001274  0E04               	movlw	high Term_MainSm@Data
 14121  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14122  001278  ECAB  F030         	call	_strlen	;wreg free
 14123  00127C  0100               	movlb	0	; () banked
 14124  00127E  517D               	movf	?_strlen& (0+255),w,b
 14125  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14126  001282  EC8B  F033         	call	_putUSBUSART	;wreg free
 14127                           
 14128                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14129  001286  0E06               	movlw	6
 14130  001288  0102               	movlb	2	; () banked
 14131  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14132                           
 14133                           ; BSR set to: 2
 14134                           ;term.c: 793: }
 14135                           ;term.c: 794: break;
 14136  00128C  0012               	return	
 14137  00128E                     
 14138                           ; BSR set to: 2
 14139                           ;term.c: 798: if((cdc_trf_state == 0))
 14140                           
 14141                           ; BSR set to: 2
 14142  00128E  0100               	movlb	0	; () banked
 14143  001290  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14144  001292  A4D8               	btfss	status,2,c
 14145  001294  0012               	return	
 14146                           
 14147                           ; BSR set to: 0
 14148                           ;term.c: 799: {
 14149                           ;term.c: 801: memset(Data,0,50);
 14150  001296  0E61               	movlw	low Term_MainSm@Data
 14151  001298  6F7D               	movwf	memset@p1& (0+255),b
 14152  00129A  0E04               	movlw	high Term_MainSm@Data
 14153  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14154  00129E  0E00               	movlw	0
 14155  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14156  0012A2  0E00               	movlw	0
 14157  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14158  0012A6  0E00               	movlw	0
 14159  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14160  0012AA  0E32               	movlw	50
 14161  0012AC  6F81               	movwf	memset@n& (0+255),b
 14162  0012AE  EC33  F032         	call	_memset	;wreg free
 14163                           
 14164                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14165  0012B2  0E61               	movlw	low Term_MainSm@Data
 14166  0012B4  0100               	movlb	0	; () banked
 14167  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14168  0012B8  0E04               	movlw	high Term_MainSm@Data
 14169  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14170  0012BC  0E0D               	movlw	low STR_27
 14171  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14172  0012C0  0EFF               	movlw	high STR_27
 14173  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14174  0012C4  0EB6               	movlw	low STR_28
 14175  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14176  0012C8  0EFF               	movlw	high STR_28
 14177  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14178  0012CC  EC0A  F01D         	call	_sprintf	;wreg free
 14179                           
 14180                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14181  0012D0  0E61               	movlw	low Term_MainSm@Data
 14182  0012D2  0100               	movlb	0	; () banked
 14183  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14184  0012D6  0E04               	movlw	high Term_MainSm@Data
 14185  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14186  0012DA  0E61               	movlw	low Term_MainSm@Data
 14187  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14188  0012DE  0E04               	movlw	high Term_MainSm@Data
 14189  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14190  0012E2  ECAB  F030         	call	_strlen	;wreg free
 14191  0012E6  0100               	movlb	0	; () banked
 14192  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14193  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14194  0012EC  EC8B  F033         	call	_putUSBUSART	;wreg free
 14195                           
 14196                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14197  0012F0  0E07               	movlw	7
 14198  0012F2  0102               	movlb	2	; () banked
 14199  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14200                           
 14201                           ; BSR set to: 2
 14202                           ;term.c: 808: }
 14203                           ;term.c: 809: break;
 14204  0012F6  0012               	return	
 14205  0012F8                     
 14206                           ; BSR set to: 2
 14207                           ;term.c: 813: if((cdc_trf_state == 0))
 14208                           
 14209                           ; BSR set to: 2
 14210  0012F8  0100               	movlb	0	; () banked
 14211  0012FA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14212  0012FC  A4D8               	btfss	status,2,c
 14213  0012FE  0012               	return	
 14214                           
 14215                           ; BSR set to: 0
 14216                           ;term.c: 814: {
 14217                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14218  001300  0E32               	movlw	low _MsgReady
 14219  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14220  001304  0EFE               	movlw	high _MsgReady
 14221  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14222  001308  0E16               	movlw	22
 14223  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14224  00130C  EC8B  F033         	call	_putUSBUSART	;wreg free
 14225                           
 14226                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14227  001310  0E08               	movlw	8
 14228  001312  0102               	movlb	2	; () banked
 14229  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14230                           
 14231                           ; BSR set to: 2
 14232                           ;term.c: 819: }
 14233                           ;term.c: 820: break;
 14234  001316  0012               	return	
 14235  001318                     
 14236                           ; BSR set to: 2
 14237                           ;term.c: 824: Terminal();
 14238                           
 14239                           ; BSR set to: 2
 14240  001318  EC68  F000         	call	_Terminal	;wreg free
 14241                           
 14242                           ;term.c: 829: }
 14243                           
 14244                           ;term.c: 828: break;
 14245                           
 14246                           ;term.c: 827: default:
 14247                           
 14248                           ;term.c: 825: break;
 14249  00131C  0012               	return	
 14250  00131E                     l2464:
 14251  00131E  0102               	movlb	2	; () banked
 14252  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14253                           
 14254                           ; Switch size 1, requested type "space"
 14255                           ; Number of cases is 9, Range of values is 0 to 8
 14256                           ; switch strategies available:
 14257                           ; Name         Instructions Cycles
 14258                           ; simple_byte           28    15 (average)
 14259                           ;	Chosen strategy is simple_byte
 14260  001322  0A00               	xorlw	0	; case 0
 14261  001324  B4D8               	btfsc	status,2,c
 14262  001326  D6C8               	goto	l2465
 14263  001328  0A01               	xorlw	1	; case 1
 14264  00132A  B4D8               	btfsc	status,2,c
 14265  00132C  D6D8               	goto	l2467
 14266  00132E  0A03               	xorlw	3	; case 2
 14267  001330  B4D8               	btfsc	status,2,c
 14268  001332  D6E3               	goto	l2469
 14269  001334  0A01               	xorlw	1	; case 3
 14270  001336  B4D8               	btfsc	status,2,c
 14271  001338  D6EA               	goto	l2474
 14272  00133A  0A07               	xorlw	7	; case 4
 14273  00133C  B4D8               	btfsc	status,2,c
 14274  00133E  D6F7               	goto	l2476
 14275  001340  0A01               	xorlw	1	; case 5
 14276  001342  B4D8               	btfsc	status,2,c
 14277  001344  D704               	goto	l2478
 14278  001346  0A03               	xorlw	3	; case 6
 14279  001348  B4D8               	btfsc	status,2,c
 14280  00134A  D7A1               	goto	l2480
 14281  00134C  0A01               	xorlw	1	; case 7
 14282  00134E  B4D8               	btfsc	status,2,c
 14283  001350  D7D3               	goto	l2482
 14284  001352  0A0F               	xorlw	15	; case 8
 14285  001354  A4D8               	btfss	status,2,c
 14286  001356  0012               	return	
 14287  001358  D7DF               	goto	l2484
 14288  00135A                     __end_of_Term_MainSm:
 14289                           	opt stack 0
 14290                           tosu	equ	0xFFF
 14291                           tosh	equ	0xFFE
 14292                           tosl	equ	0xFFD
 14293                           pclath	equ	0xFFA
 14294                           tblptru	equ	0xFF8
 14295                           tblptrh	equ	0xFF7
 14296                           tblptrl	equ	0xFF6
 14297                           tablat	equ	0xFF5
 14298                           prodh	equ	0xFF4
 14299                           prodl	equ	0xFF3
 14300                           intcon	equ	0xFF2
 14301                           intcon2	equ	0xFF1
 14302                           intcon3	equ	0xFF0
 14303                           indf0	equ	0xFEF
 14304                           postinc0	equ	0xFEE
 14305                           plusw0	equ	0xFEB
 14306                           fsr0h	equ	0xFEA
 14307                           fsr0l	equ	0xFE9
 14308                           wreg	equ	0xFE8
 14309                           indf1	equ	0xFE7
 14310                           postinc1	equ	0xFE6
 14311                           postdec1	equ	0xFE5
 14312                           fsr1h	equ	0xFE2
 14313                           fsr1l	equ	0xFE1
 14314                           indf2	equ	0xFDF
 14315                           postinc2	equ	0xFDE
 14316                           postdec2	equ	0xFDD
 14317                           plusw2	equ	0xFDB
 14318                           fsr2h	equ	0xFDA
 14319                           fsr2l	equ	0xFD9
 14320                           status	equ	0xFD8
 14321                           
 14322 ;; *************** function _strlen *****************
 14323 ;; Defined at:
 14324 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14327 ;;		 -> Term_MainSm@Data(50), 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14330 ;;		 -> Term_MainSm@Data(50), 
 14331 ;; Return value:  Size  Location     Type
 14332 ;;                  2   29[BANK0 ] unsigned int 
 14333 ;; Registers used:
 14334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14335 ;; Tracked objects:
 14336 ;;		On entry : 0/0
 14337 ;;		On exit  : 0/0
 14338 ;;		Unchanged: 0/0
 14339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14340 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14343 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14344 ;;Total ram usage:        6 bytes
 14345 ;; Hardware stack levels used:    1
 14346 ;; Hardware stack levels required when called:   11
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_Term_MainSm
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           	psect	text56
 14355  006156                     __ptext56:
 14356                           	opt stack 0
 14357  006156                     _strlen:
 14358                           	opt stack 15
 14359                           
 14360                           ;incstack = 0
 14361  006156  C07D  F081         	movff	strlen@s,strlen@cp
 14362  00615A  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14363  00615E  D003               	goto	l3500
 14364  006160  0100               	movlb	0	; () banked
 14365  006162  4B81               	infsnz	strlen@cp& (0+255),f,b
 14366  006164  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14367  006166                     l3500:
 14368                           
 14369                           ; BSR set to: 0
 14370  006166  C081  FFD9         	movff	strlen@cp,fsr2l
 14371  00616A  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14372  00616E  50DF               	movf	indf2,w,c
 14373  006170  A4D8               	btfss	status,2,c
 14374  006172  D7F6               	goto	l3501
 14375  006174  C07D  F07F         	movff	strlen@s,??_strlen
 14376  006178  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14377  00617C  0100               	movlb	0	; () banked
 14378  00617E  1F7F               	comf	??_strlen& (0+255),f,b
 14379  006180  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14380  006182  4B7F               	infsnz	??_strlen& (0+255),f,b
 14381  006184  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14382  006186  5181               	movf	strlen@cp& (0+255),w,b
 14383  006188  257F               	addwf	??_strlen& (0+255),w,b
 14384  00618A  6F7D               	movwf	?_strlen& (0+255),b
 14385  00618C  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14386  00618E  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14387  006190  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14388  006192  0012               	return	
 14389  006194                     __end_of_strlen:
 14390                           	opt stack 0
 14391                           tosu	equ	0xFFF
 14392                           tosh	equ	0xFFE
 14393                           tosl	equ	0xFFD
 14394                           pclath	equ	0xFFA
 14395                           tblptru	equ	0xFF8
 14396                           tblptrh	equ	0xFF7
 14397                           tblptrl	equ	0xFF6
 14398                           tablat	equ	0xFF5
 14399                           prodh	equ	0xFF4
 14400                           prodl	equ	0xFF3
 14401                           intcon	equ	0xFF2
 14402                           intcon2	equ	0xFF1
 14403                           intcon3	equ	0xFF0
 14404                           indf0	equ	0xFEF
 14405                           postinc0	equ	0xFEE
 14406                           plusw0	equ	0xFEB
 14407                           fsr0h	equ	0xFEA
 14408                           fsr0l	equ	0xFE9
 14409                           wreg	equ	0xFE8
 14410                           indf1	equ	0xFE7
 14411                           postinc1	equ	0xFE6
 14412                           postdec1	equ	0xFE5
 14413                           fsr1h	equ	0xFE2
 14414                           fsr1l	equ	0xFE1
 14415                           indf2	equ	0xFDF
 14416                           postinc2	equ	0xFDE
 14417                           postdec2	equ	0xFDD
 14418                           plusw2	equ	0xFDB
 14419                           fsr2h	equ	0xFDA
 14420                           fsr2l	equ	0xFD9
 14421                           status	equ	0xFD8
 14422                           
 14423 ;; *************** function _strcat *****************
 14424 ;; Defined at:
 14425 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14428 ;;		 -> Term_MainSm@Data(50), 
 14429 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14430 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14431 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14434 ;;		 -> Term_MainSm@Data(50), 
 14435 ;; Return value:  Size  Location     Type
 14436 ;;                  2   29[BANK0 ] PTR unsigned char 
 14437 ;; Registers used:
 14438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14439 ;; Tracked objects:
 14440 ;;		On entry : 0/0
 14441 ;;		On exit  : 0/0
 14442 ;;		Unchanged: 0/0
 14443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14447 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14448 ;;Total ram usage:        6 bytes
 14449 ;; Hardware stack levels used:    1
 14450 ;; Hardware stack levels required when called:   11
 14451 ;; This function calls:
 14452 ;;		Nothing
 14453 ;; This function is called by:
 14454 ;;		_Term_MainSm
 14455 ;; This function uses a non-reentrant model
 14456 ;;
 14457                           
 14458                           	psect	text57
 14459  0057E4                     __ptext57:
 14460                           	opt stack 0
 14461  0057E4                     _strcat:
 14462                           	opt stack 15
 14463                           
 14464                           ; BSR set to: 0
 14465                           ;incstack = 0
 14466  0057E4  C07D  F081         	movff	strcat@to,strcat@cp
 14467  0057E8  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14468  0057EC  D003               	goto	l3485
 14469  0057EE  0100               	movlb	0	; () banked
 14470  0057F0  4B81               	infsnz	strcat@cp& (0+255),f,b
 14471  0057F2  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14472  0057F4                     l3485:
 14473                           
 14474                           ; BSR set to: 0
 14475  0057F4  C081  FFD9         	movff	strcat@cp,fsr2l
 14476  0057F8  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14477  0057FC  50DF               	movf	indf2,w,c
 14478  0057FE  B4D8               	btfsc	status,2,c
 14479  005800  D006               	goto	l3488
 14480  005802  D7F5               	goto	l3486
 14481  005804  0100               	movlb	0	; () banked
 14482  005806  4B81               	infsnz	strcat@cp& (0+255),f,b
 14483  005808  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14484  00580A  4B7F               	infsnz	strcat@from& (0+255),f,b
 14485  00580C  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14486  00580E                     l3488:
 14487                           
 14488                           ; BSR set to: 0
 14489  00580E  C07F  FFF6         	movff	strcat@from,tblptrl
 14490  005812  C080  FFF7         	movff	strcat@from+1,tblptrh
 14491  005816  6AF8               	clrf	tblptru,c
 14492  005818  C081  FFD9         	movff	strcat@cp,fsr2l
 14493  00581C  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14494  005820  0E0E               	movlw	(high __ramtop+-1)
 14495  005822  64F7               	cpfsgt	tblptrh,c
 14496  005824  D003               	bra	u14197
 14497  005826  0008               	tblrd		*
 14498  005828  50F5               	movf	tablat,w,c
 14499  00582A  D005               	bra	u14190
 14500  00582C                     u14197:
 14501  00582C  CFF6 FFE9          	movff	tblptrl,fsr0l
 14502  005830  CFF7 FFEA          	movff	tblptrh,fsr0h
 14503  005834  50EF               	movf	indf0,w,c
 14504  005836                     u14190:
 14505  005836  6EDF               	movwf	indf2,c
 14506  005838  50DF               	movf	indf2,w,c
 14507  00583A  B4D8               	btfsc	status,2,c
 14508  00583C  0012               	return	
 14509  00583E  D7E2               	goto	l3489
 14510  005840                     __end_of_strcat:
 14511                           	opt stack 0
 14512                           tosu	equ	0xFFF
 14513                           tosh	equ	0xFFE
 14514                           tosl	equ	0xFFD
 14515                           pclath	equ	0xFFA
 14516                           tblptru	equ	0xFF8
 14517                           tblptrh	equ	0xFF7
 14518                           tblptrl	equ	0xFF6
 14519                           tablat	equ	0xFF5
 14520                           prodh	equ	0xFF4
 14521                           prodl	equ	0xFF3
 14522                           intcon	equ	0xFF2
 14523                           intcon2	equ	0xFF1
 14524                           intcon3	equ	0xFF0
 14525                           indf0	equ	0xFEF
 14526                           postinc0	equ	0xFEE
 14527                           plusw0	equ	0xFEB
 14528                           fsr0h	equ	0xFEA
 14529                           fsr0l	equ	0xFE9
 14530                           wreg	equ	0xFE8
 14531                           indf1	equ	0xFE7
 14532                           postinc1	equ	0xFE6
 14533                           postdec1	equ	0xFE5
 14534                           fsr1h	equ	0xFE2
 14535                           fsr1l	equ	0xFE1
 14536                           indf2	equ	0xFDF
 14537                           postinc2	equ	0xFDE
 14538                           postdec2	equ	0xFDD
 14539                           plusw2	equ	0xFDB
 14540                           fsr2h	equ	0xFDA
 14541                           fsr2l	equ	0xFD9
 14542                           status	equ	0xFD8
 14543                           
 14544 ;; *************** function _sprintf *****************
 14545 ;; Defined at:
 14546 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14547 ;; Parameters:    Size  Location     Type
 14548 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14549 ;;		 -> Term_MainSm@Data(50), 
 14550 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14551 ;;		 -> STR_27(17), 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;  tmpval          4    0        struct .
 14554 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14555 ;;		 -> STR_32(7), STR_28(12), 
 14556 ;;  ap              2   36[BANK0 ] PTR void [1]
 14557 ;;		 -> ?_sprintf(2), 
 14558 ;;  len             2    0        unsigned int 
 14559 ;;  val             2    0        unsigned int 
 14560 ;;  c               1   38[BANK0 ] char 
 14561 ;;  flag            1   35[BANK0 ] unsigned char 
 14562 ;;  prec            1    0        char 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  2   29[BANK0 ] int 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14572 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14573 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14575 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;Total ram usage:       12 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:   11
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_Term_MainSm
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text58
 14587  003A14                     __ptext58:
 14588                           	opt stack 0
 14589  003A14                     _sprintf:
 14590                           	opt stack 15
 14591                           
 14592                           ;doprnt.c: 494: va_list ap;
 14593                           ;doprnt.c: 499: signed char c;
 14594                           ;doprnt.c: 506: signed char prec;
 14595                           ;doprnt.c: 508: unsigned char flag;
 14596                           ;doprnt.c: 523: union {
 14597                           ;doprnt.c: 524: unsigned long vd;
 14598                           ;doprnt.c: 525: double integ;
 14599                           ;doprnt.c: 526: } tmpval;
 14600                           ;doprnt.c: 528: unsigned int val;
 14601                           ;doprnt.c: 529: unsigned len;
 14602                           ;doprnt.c: 530: const char * cp;
 14603                           ;doprnt.c: 533: *ap = __va_start();
 14604                           
 14605                           ;incstack = 0
 14606  003A14  0E81               	movlw	low (?_sprintf+4)
 14607  003A16  0100               	movlb	0	; () banked
 14608  003A18  6F84               	movwf	sprintf@ap& (0+255),b
 14609  003A1A  0E00               	movlw	high (?_sprintf+4)
 14610  003A1C  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14611                           
 14612                           ;doprnt.c: 536: while(c = *f++) {
 14613  003A1E  D04E               	goto	l2889
 14614  003A20                     
 14615                           ; BSR set to: 0
 14616                           ;doprnt.c: 538: if(c != '%')
 14617                           
 14618                           ; BSR set to: 0
 14619  003A20  0E25               	movlw	37
 14620  003A22  1986               	xorwf	sprintf@c& (0+255),w,b
 14621  003A24  B4D8               	btfsc	status,2,c
 14622  003A26  D009               	goto	l2879
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;doprnt.c: 540: {
 14626                           ;doprnt.c: 541: ((*sp++ = (c)));
 14627  003A28  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14628  003A2C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14629  003A30  C086  FFDF         	movff	sprintf@c,indf2
 14630                           
 14631                           ; BSR set to: 0
 14632  003A34  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14633  003A36  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14634                           
 14635                           ;doprnt.c: 542: continue;
 14636  003A38  D041               	goto	l2889
 14637  003A3A                     l2879:
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;doprnt.c: 543: }
 14641                           ;doprnt.c: 548: flag = 0;
 14642                           
 14643                           ; BSR set to: 0
 14644  003A3A  0E00               	movlw	0
 14645  003A3C  6F83               	movwf	sprintf@flag& (0+255),b
 14646                           
 14647                           ;doprnt.c: 635: switch(c = *f++) {
 14648  003A3E  D02E               	goto	l2880
 14649  003A40                     
 14650                           ; BSR set to: 0
 14651                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14652                           
 14653                           ; BSR set to: 0
 14654  003A40  C084  FFD9         	movff	sprintf@ap,fsr2l
 14655  003A44  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14656  003A48  CFDE F087          	movff	postinc2,sprintf@cp
 14657  003A4C  CFDD F088          	movff	postdec2,sprintf@cp+1
 14658                           
 14659                           ; BSR set to: 0
 14660  003A50  0E02               	movlw	2
 14661  003A52  2784               	addwf	sprintf@ap& (0+255),f,b
 14662  003A54  0E00               	movlw	0
 14663  003A56  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;doprnt.c: 740: if(!cp)
 14667  003A58  5187               	movf	sprintf@cp& (0+255),w,b
 14668  003A5A  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14669  003A5C  A4D8               	btfss	status,2,c
 14670  003A5E  D014               	goto	l2885
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;doprnt.c: 741: cp = "(null)";
 14674  003A60  0ED8               	movlw	low STR_32
 14675  003A62  6F87               	movwf	sprintf@cp& (0+255),b
 14676  003A64  0EFF               	movlw	high STR_32
 14677  003A66  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;doprnt.c: 777: while(*cp)
 14681  003A68  D00F               	goto	l2885
 14682  003A6A                     
 14683                           ; BSR set to: 0
 14684                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14685                           
 14686                           ; BSR set to: 0
 14687  003A6A  C087  FFF6         	movff	sprintf@cp,tblptrl
 14688  003A6E  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14689  003A72                     	if	0	;tblptru may be non-zero
 14690  003A72                     	endif
 14691  003A72                     	if	0	;tblptru may be non-zero
 14692  003A72                     	endif
 14693  003A72  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14694  003A76  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14695  003A7A  0008               	tblrd		*
 14696  003A7C  CFF5 FFDF          	movff	tablat,indf2
 14697                           
 14698                           ; BSR set to: 0
 14699  003A80  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14700  003A82  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14701                           
 14702                           ; BSR set to: 0
 14703  003A84  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14704  003A86  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14705  003A88                     l2885:
 14706                           
 14707                           ; BSR set to: 0
 14708                           
 14709                           ; BSR set to: 0
 14710  003A88  C087  FFF6         	movff	sprintf@cp,tblptrl
 14711  003A8C  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14712  003A90                     	if	0	;tblptru may be non-zero
 14713  003A90                     	endif
 14714  003A90                     	if	0	;tblptru may be non-zero
 14715  003A90                     	endif
 14716  003A90  0008               	tblrd		*
 14717  003A92  50F5               	movf	tablat,w,c
 14718  003A94  0900               	iorlw	0
 14719  003A96  B4D8               	btfsc	status,2,c
 14720  003A98  D011               	goto	l2889
 14721  003A9A  D7E7               	goto	l2886
 14722  003A9C                     l2880:
 14723                           
 14724                           ; BSR set to: 0
 14725                           
 14726                           ; BSR set to: 0
 14727  003A9C  C07F  FFF6         	movff	sprintf@f,tblptrl
 14728  003AA0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14729  003AA4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14730  003AA6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14731  003AA8                     	if	0	;tblptru may be non-zero
 14732  003AA8                     	endif
 14733  003AA8                     	if	0	;tblptru may be non-zero
 14734  003AA8                     	endif
 14735  003AA8  0008               	tblrd		*
 14736  003AAA  CFF5 F086          	movff	tablat,sprintf@c
 14737  003AAE  5186               	movf	sprintf@c& (0+255),w,b
 14738                           
 14739                           ; Switch size 1, requested type "space"
 14740                           ; Number of cases is 2, Range of values is 0 to 115
 14741                           ; switch strategies available:
 14742                           ; Name         Instructions Cycles
 14743                           ; simple_byte            7     4 (average)
 14744                           ;	Chosen strategy is simple_byte
 14745  003AB0  0A00               	xorlw	0	; case 0
 14746  003AB2  B4D8               	btfsc	status,2,c
 14747  003AB4  D00F               	goto	u14250
 14748  003AB6  0A73               	xorlw	115	; case 115
 14749  003AB8  B4D8               	btfsc	status,2,c
 14750  003ABA  D7C2               	goto	l2883
 14751  003ABC                     l2889:
 14752                           
 14753                           ; BSR set to: 0
 14754                           
 14755                           ; BSR set to: 0
 14756                           
 14757                           ;doprnt.c: 1422: {
 14758                           
 14759                           ; BSR set to: 0
 14760  003ABC  C07F  FFF6         	movff	sprintf@f,tblptrl
 14761  003AC0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14762  003AC4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14763  003AC6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14764  003AC8                     	if	0	;tblptru may be non-zero
 14765  003AC8                     	endif
 14766  003AC8                     	if	0	;tblptru may be non-zero
 14767  003AC8                     	endif
 14768  003AC8  0008               	tblrd		*
 14769  003ACA  CFF5 F086          	movff	tablat,sprintf@c
 14770  003ACE  5186               	movf	sprintf@c& (0+255),w,b
 14771  003AD0  A4D8               	btfss	status,2,c
 14772  003AD2  D7A6               	goto	l2878
 14773  003AD4                     u14250:
 14774                           
 14775                           ; BSR set to: 0
 14776                           ;doprnt.c: 1538: *sp = 0;
 14777                           
 14778                           ; BSR set to: 0
 14779                           
 14780                           ;doprnt.c: 1469: }
 14781                           ;doprnt.c: 1533: }
 14782                           ;doprnt.c: 1535: alldone:
 14783                           
 14784                           ; BSR set to: 0
 14785  003AD4  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14786  003AD8  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14787  003ADC  0E00               	movlw	0
 14788  003ADE  6EDF               	movwf	indf2,c
 14789  003AE0  0012               	return	
 14790  003AE2                     __end_of_sprintf:
 14791                           	opt stack 0
 14792                           tosu	equ	0xFFF
 14793                           tosh	equ	0xFFE
 14794                           tosl	equ	0xFFD
 14795                           pclath	equ	0xFFA
 14796                           tblptru	equ	0xFF8
 14797                           tblptrh	equ	0xFF7
 14798                           tblptrl	equ	0xFF6
 14799                           tablat	equ	0xFF5
 14800                           prodh	equ	0xFF4
 14801                           prodl	equ	0xFF3
 14802                           intcon	equ	0xFF2
 14803                           intcon2	equ	0xFF1
 14804                           intcon3	equ	0xFF0
 14805                           indf0	equ	0xFEF
 14806                           postinc0	equ	0xFEE
 14807                           plusw0	equ	0xFEB
 14808                           fsr0h	equ	0xFEA
 14809                           fsr0l	equ	0xFE9
 14810                           wreg	equ	0xFE8
 14811                           indf1	equ	0xFE7
 14812                           postinc1	equ	0xFE6
 14813                           postdec1	equ	0xFE5
 14814                           fsr1h	equ	0xFE2
 14815                           fsr1l	equ	0xFE1
 14816                           indf2	equ	0xFDF
 14817                           postinc2	equ	0xFDE
 14818                           postdec2	equ	0xFDD
 14819                           plusw2	equ	0xFDB
 14820                           fsr2h	equ	0xFDA
 14821                           fsr2l	equ	0xFD9
 14822                           status	equ	0xFD8
 14823                           
 14824 ;; *************** function _memset *****************
 14825 ;; Defined at:
 14826 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;  p1              2   29[BANK0 ] PTR void 
 14829 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14830 ;;  c               2   31[BANK0 ] int 
 14831 ;;  n               2   33[BANK0 ] unsigned int 
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14834 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  2   29[BANK0 ] PTR void 
 14837 ;; Registers used:
 14838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14844 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14847 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14848 ;;Total ram usage:        8 bytes
 14849 ;; Hardware stack levels used:    1
 14850 ;; Hardware stack levels required when called:   11
 14851 ;; This function calls:
 14852 ;;		Nothing
 14853 ;; This function is called by:
 14854 ;;		_USBDeviceInit
 14855 ;;		_USBStdSetCfgHandler
 14856 ;;		_Term_MainSm
 14857 ;; This function uses a non-reentrant model
 14858 ;;
 14859                           
 14860                           	psect	text59
 14861  006466                     __ptext59:
 14862                           	opt stack 0
 14863  006466                     _memset:
 14864                           	opt stack 14
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;incstack = 0
 14868  006466  C07D  F083         	movff	memset@p1,memset@p
 14869  00646A  C07E  F084         	movff	memset@p1+1,memset@p+1
 14870  00646E  D009               	goto	l3359
 14871  006470                     l12872:
 14872  006470  C083  FFD9         	movff	memset@p,fsr2l
 14873  006474  C084  FFDA         	movff	memset@p+1,fsr2h
 14874  006478  C07F  FFDF         	movff	memset@c,indf2
 14875  00647C  0100               	movlb	0	; () banked
 14876  00647E  4B83               	infsnz	memset@p& (0+255),f,b
 14877  006480  2B84               	incf	(memset@p+1)& (0+255),f,b
 14878  006482                     l3359:
 14879                           
 14880                           ; BSR set to: 0
 14881  006482  0100               	movlb	0	; () banked
 14882  006484  0781               	decf	memset@n& (0+255),f,b
 14883  006486  A0D8               	btfss	status,0,c
 14884  006488  0782               	decf	(memset@n+1)& (0+255),f,b
 14885  00648A  2981               	incf	memset@n& (0+255),w,b
 14886  00648C  E1F1               	bnz	l12872
 14887  00648E  2982               	incf	(memset@n+1)& (0+255),w,b
 14888  006490  B4D8               	btfsc	status,2,c
 14889  006492  0012               	return	
 14890  006494  D7ED               	goto	l3360
 14891  006496                     __end_of_memset:
 14892                           	opt stack 0
 14893                           tosu	equ	0xFFF
 14894                           tosh	equ	0xFFE
 14895                           tosl	equ	0xFFD
 14896                           pclath	equ	0xFFA
 14897                           tblptru	equ	0xFF8
 14898                           tblptrh	equ	0xFF7
 14899                           tblptrl	equ	0xFF6
 14900                           tablat	equ	0xFF5
 14901                           prodh	equ	0xFF4
 14902                           prodl	equ	0xFF3
 14903                           intcon	equ	0xFF2
 14904                           intcon2	equ	0xFF1
 14905                           intcon3	equ	0xFF0
 14906                           indf0	equ	0xFEF
 14907                           postinc0	equ	0xFEE
 14908                           plusw0	equ	0xFEB
 14909                           fsr0h	equ	0xFEA
 14910                           fsr0l	equ	0xFE9
 14911                           wreg	equ	0xFE8
 14912                           indf1	equ	0xFE7
 14913                           postinc1	equ	0xFE6
 14914                           postdec1	equ	0xFE5
 14915                           fsr1h	equ	0xFE2
 14916                           fsr1l	equ	0xFE1
 14917                           indf2	equ	0xFDF
 14918                           postinc2	equ	0xFDE
 14919                           postdec2	equ	0xFDD
 14920                           plusw2	equ	0xFDB
 14921                           fsr2h	equ	0xFDA
 14922                           fsr2l	equ	0xFD9
 14923                           status	equ	0xFD8
 14924                           
 14925 ;; *************** function _Terminal *****************
 14926 ;; Defined at:
 14927 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14928 ;; Parameters:    Size  Location     Type
 14929 ;;		None
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  i               1   68[BANK0 ] unsigned char 
 14932 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14933 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14934 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14935 ;;  Index           1   70[BANK0 ] unsigned char 
 14936 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  1    wreg      void 
 14939 ;; Registers used:
 14940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14949 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14950 ;;Total ram usage:      455 bytes
 14951 ;; Hardware stack levels used:    1
 14952 ;; Hardware stack levels required when called:   15
 14953 ;; This function calls:
 14954 ;;		_I2cSlv_I2cReadMsgSts
 14955 ;;		_I2cSlv_ReceiveI2cMsg
 14956 ;;		_I2cSlv_SendI2cMsg
 14957 ;;		_OsTmr_Wait
 14958 ;;		_atoi
 14959 ;;		_getsUSBUSART
 14960 ;;		_itoa
 14961 ;;		_putUSBUSART
 14962 ;;		_strcpy
 14963 ;;		_strtol
 14964 ;;		_xtoi
 14965 ;; This function is called by:
 14966 ;;		_Term_MainSm
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970                           	psect	text60
 14971  0000D0                     __ptext60:
 14972                           	opt stack 0
 14973  0000D0                     _Terminal:
 14974                           	opt stack 11
 14975                           
 14976                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14977                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14978                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14979                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14980                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14981                           ;term.c: 435: UINT8 Index;
 14982                           ;term.c: 436: static UINT8 Len[4];
 14983                           ;term.c: 437: static UINT8 PackageLen;
 14984                           ;term.c: 438: static UINT8 Addr[4];
 14985                           ;term.c: 439: static UINT8 SlaveAddr;
 14986                           ;term.c: 440: static PayloadType Payload[20u];
 14987                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14988                           
 14989                           ; BSR set to: 0
 14990                           ;incstack = 0
 14991  0000D0  0E00               	movlw	0
 14992  0000D2  0100               	movlb	0	; () banked
 14993  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14994                           
 14995                           ; BSR set to: 0
 14996                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14997                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14998                           ;term.c: 445: static SwTimerType SwTimer;
 14999                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 15000  0000D6  0E1F               	movlw	31
 15001  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 15002  0000DA  0012               	return	
 15003                           
 15004                           ; BSR set to: 0
 15005  0000DC  B265               	btfsc	3941,1,c	;volatile
 15006  0000DE  0012               	return	
 15007  0000E0  D278               	goto	l2404
 15008  0000E2                     
 15009                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 15010                           
 15011                           ; BSR set to: 0
 15012  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 15013  0000E4  0100               	movlb	0	; () banked
 15014  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 15015  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 15016  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 15017  0000EC  0EC8               	movlw	200
 15018  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15019  0000F0  ECCA  F025         	call	_getsUSBUSART	;wreg free
 15020  0000F4  0100               	movlb	0	; () banked
 15021  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;term.c: 458: if (ReceivedBytes > 0)
 15025  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15026  0000FA  B4D8               	btfsc	status,2,c
 15027  0000FC  0012               	return	
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;term.c: 459: {
 15031                           ;term.c: 461: if (EchoOption == 1u)
 15032  0000FE  0102               	movlb	2	; () banked
 15033  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15034  000102  A4D8               	btfss	status,2,c
 15035  000104  D026               	goto	l2408
 15036                           
 15037                           ; BSR set to: 2
 15038                           ;term.c: 462: {
 15039                           ;term.c: 464: if((cdc_trf_state == 0))
 15040  000106  0100               	movlb	0	; () banked
 15041  000108  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15042  00010A  A4D8               	btfss	status,2,c
 15043  00010C  D022               	goto	l2408
 15044                           
 15045                           ; BSR set to: 0
 15046                           ;term.c: 465: {
 15047                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15048  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15049  000110  0D01               	mullw	1
 15050  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15051  000114  24F3               	addwf	prodl,w,c
 15052  000116  6ED9               	movwf	fsr2l,c
 15053  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15054  00011A  20F4               	addwfc	prodh,w,c
 15055  00011C  6EDA               	movwf	fsr2h,c
 15056  00011E  0E0D               	movlw	13
 15057  000120  6EDF               	movwf	indf2,c
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15061  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15062  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15063  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15064  000128  0E01               	movlw	1
 15065  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15066  00012C  0E00               	movlw	0
 15067  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15068  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15069  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15070  000134  6ED9               	movwf	fsr2l,c
 15071  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15072  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15073  00013A  6EDA               	movwf	fsr2h,c
 15074  00013C  0E0A               	movlw	10
 15075  00013E  6EDF               	movwf	indf2,c
 15076                           
 15077                           ; BSR set to: 0
 15078                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15079  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15080  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15081  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15082  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15083  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15084  00014A  0F02               	addlw	2
 15085  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15086  00014E  EC8B  F033         	call	_putUSBUSART	;wreg free
 15087  000152                     l2408:
 15088                           
 15089                           ;term.c: 469: }
 15090                           ;term.c: 470: }
 15091                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15092                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15093                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15094  000152  0E53               	movlw	83
 15095  000154  010A               	movlb	10	; () banked
 15096  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15097  000158  A4D8               	btfss	status,2,c
 15098  00015A  D043               	goto	l2409
 15099                           
 15100                           ; BSR set to: 10
 15101  00015C  0E4F               	movlw	79
 15102  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15103  000160  A4D8               	btfss	status,2,c
 15104  000162  D03F               	goto	l2409
 15105                           
 15106                           ; BSR set to: 10
 15107  000164  0E3A               	movlw	58
 15108  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15109  000168  A4D8               	btfss	status,2,c
 15110  00016A  D03B               	goto	l2409
 15111                           
 15112                           ; BSR set to: 10
 15113                           ;term.c: 476: {
 15114                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15115  00016C  0E47               	movlw	71
 15116  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15117  000170  A4D8               	btfss	status,2,c
 15118  000172  0012               	return	
 15119                           
 15120                           ; BSR set to: 10
 15121  000174  0E3A               	movlw	58
 15122  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15123  000178  A4D8               	btfss	status,2,c
 15124  00017A  0012               	return	
 15125                           
 15126                           ; BSR set to: 10
 15127                           ;term.c: 479: {
 15128                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15129  00017C  0E44               	movlw	68
 15130  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15131  000180  A4D8               	btfss	status,2,c
 15132  000182  D015               	goto	l2411
 15133                           
 15134                           ; BSR set to: 10
 15135  000184  0E46               	movlw	70
 15136  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15137  000188  A4D8               	btfss	status,2,c
 15138  00018A  D011               	goto	l2411
 15139                           
 15140                           ; BSR set to: 10
 15141                           ;term.c: 482: {
 15142                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15143  00018C  0E41               	movlw	65
 15144  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15145  000190  A4D8               	btfss	status,2,c
 15146  000192  D004               	goto	l2412
 15147                           
 15148                           ; BSR set to: 10
 15149                           ;term.c: 484: {
 15150                           ;term.c: 485: FormatOption = 1u;
 15151  000194  0E01               	movlw	1
 15152  000196  0102               	movlb	2	; () banked
 15153  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15154                           
 15155                           ;term.c: 486: }
 15156  00019A  0012               	return	
 15157  00019C                     l2412:
 15158                           
 15159                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15160                           
 15161                           ; BSR set to: 2
 15162  00019C  0E42               	movlw	66
 15163  00019E  010A               	movlb	10	; () banked
 15164  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15165  0001A2  A4D8               	btfss	status,2,c
 15166  0001A4  0012               	return	
 15167                           
 15168                           ; BSR set to: 10
 15169                           ;term.c: 488: {
 15170                           ;term.c: 489: FormatOption = 0u;
 15171  0001A6  0E00               	movlw	0
 15172  0001A8  0102               	movlb	2	; () banked
 15173  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15174                           
 15175                           ; BSR set to: 2
 15176                           ;term.c: 490: }
 15177                           ;term.c: 491: }
 15178                           
 15179                           ; BSR set to: 2
 15180  0001AC  0012               	return	
 15181  0001AE                     l2411:
 15182                           
 15183                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15184                           
 15185                           ; BSR set to: 2
 15186  0001AE  0E45               	movlw	69
 15187  0001B0  010A               	movlb	10	; () banked
 15188  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15189  0001B4  A4D8               	btfss	status,2,c
 15190  0001B6  0012               	return	
 15191                           
 15192                           ; BSR set to: 10
 15193  0001B8  0E4D               	movlw	77
 15194  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15195  0001BC  A4D8               	btfss	status,2,c
 15196  0001BE  0012               	return	
 15197                           
 15198                           ; BSR set to: 10
 15199                           ;term.c: 494: {
 15200                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15201  0001C0  0E31               	movlw	49
 15202  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15203  0001C4  A4D8               	btfss	status,2,c
 15204  0001C6  D004               	goto	l2417
 15205                           
 15206                           ; BSR set to: 10
 15207                           ;term.c: 496: {
 15208                           ;term.c: 497: EchoOption = 1u;
 15209  0001C8  0E01               	movlw	1
 15210  0001CA  0102               	movlb	2	; () banked
 15211  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15212                           
 15213                           ;term.c: 498: }
 15214  0001CE  0012               	return	
 15215  0001D0                     l2417:
 15216                           
 15217                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15218                           
 15219                           ; BSR set to: 2
 15220  0001D0  0E30               	movlw	48
 15221  0001D2  010A               	movlb	10	; () banked
 15222  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15223  0001D6  A4D8               	btfss	status,2,c
 15224  0001D8  0012               	return	
 15225                           
 15226                           ; BSR set to: 10
 15227                           ;term.c: 500: {
 15228                           ;term.c: 501: EchoOption = 0u;
 15229  0001DA  0E00               	movlw	0
 15230  0001DC  0102               	movlb	2	; () banked
 15231  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15232                           
 15233                           ; BSR set to: 2
 15234                           ;term.c: 507: }
 15235                           ;term.c: 508: }
 15236                           ;term.c: 509: }
 15237                           
 15238                           ; BSR set to: 2
 15239                           
 15240                           ; BSR set to: 2
 15241                           
 15242                           ;term.c: 504: else
 15243                           ;term.c: 505: {
 15244                           
 15245                           ; BSR set to: 2
 15246                           
 15247                           ; BSR set to: 2
 15248                           ;term.c: 502: }
 15249                           ;term.c: 503: }
 15250                           
 15251                           ; BSR set to: 2
 15252  0001E0  0012               	return	
 15253  0001E2                     l2409:
 15254                           
 15255                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15256                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15257                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15258                           
 15259                           ; BSR set to: 2
 15260  0001E2  0E53               	movlw	83
 15261  0001E4  010A               	movlb	10	; () banked
 15262  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15263  0001E8  A4D8               	btfss	status,2,c
 15264  0001EA  D0D3               	goto	l2422
 15265                           
 15266                           ; BSR set to: 10
 15267  0001EC  0E42               	movlw	66
 15268  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15269  0001F0  A4D8               	btfss	status,2,c
 15270  0001F2  D0CF               	goto	l2422
 15271                           
 15272                           ; BSR set to: 10
 15273  0001F4  0E3A               	movlw	58
 15274  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15275  0001F8  A4D8               	btfss	status,2,c
 15276  0001FA  D0CB               	goto	l2422
 15277                           
 15278                           ; BSR set to: 10
 15279                           ;term.c: 513: {
 15280                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15281  0001FC  0E57               	movlw	87
 15282  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15283  000200  A4D8               	btfss	status,2,c
 15284  000202  D091               	goto	l2423
 15285                           
 15286                           ; BSR set to: 10
 15287  000204  0E3A               	movlw	58
 15288  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15289  000208  A4D8               	btfss	status,2,c
 15290  00020A  D08D               	goto	l2423
 15291                           
 15292                           ; BSR set to: 10
 15293                           ;term.c: 515: {
 15294                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15295  00020C  CA05  F3B2         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15296                           
 15297                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15298  000210  CA06  F3B3         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15299                           
 15300                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15301  000214  CA08  F3AE         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15302                           
 15303                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15304  000218  CA09  F3AF         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15305                           
 15306                           ; BSR set to: 10
 15307                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15308  00021C  0EB2               	movlw	low Terminal@Len
 15309  00021E  0100               	movlb	0	; () banked
 15310  000220  6F83               	movwf	atoi@s& (0+255),b
 15311  000222  0E03               	movlw	high Terminal@Len
 15312  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15313  000226  ECCB  F01B         	call	_atoi	;wreg free
 15314  00022A  0100               	movlb	0	; () banked
 15315  00022C  5183               	movf	?_atoi& (0+255),w,b
 15316  00022E  0102               	movlb	2	; () banked
 15317  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15318                           
 15319                           ; BSR set to: 2
 15320                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15321  000232  0EAE               	movlw	low Terminal@Addr
 15322  000234  0100               	movlb	0	; () banked
 15323  000236  6F83               	movwf	xtoi@s& (0+255),b
 15324  000238  0E03               	movlw	high Terminal@Addr
 15325  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15326  00023C  EC08  F01A         	call	_xtoi	;wreg free
 15327  000240  0100               	movlb	0	; () banked
 15328  000242  5183               	movf	?_xtoi& (0+255),w,b
 15329  000244  0102               	movlb	2	; () banked
 15330  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15331                           
 15332                           ; BSR set to: 2
 15333                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15334  000248  0E00               	movlw	0
 15335  00024A  0100               	movlb	0	; () banked
 15336  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15337  00024E  D032               	goto	l2424
 15338  000250                     
 15339                           ;term.c: 527: {
 15340                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15341                           
 15342                           ; BSR set to: 0
 15343  000250  0100               	movlb	0	; () banked
 15344  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15345  000254  0D02               	mullw	2
 15346  000256  0E0B               	movlw	11
 15347  000258  26F3               	addwf	prodl,f,c
 15348  00025A  0E00               	movlw	0
 15349  00025C  22F4               	addwfc	prodh,f,c
 15350  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15351  000260  24F3               	addwf	prodl,w,c
 15352  000262  6ED9               	movwf	fsr2l,c
 15353  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15354  000266  20F4               	addwfc	prodh,w,c
 15355  000268  6EDA               	movwf	fsr2h,c
 15356  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15357  00026C  0D04               	mullw	4
 15358  00026E  0E66               	movlw	low Terminal@Payload
 15359  000270  24F3               	addwf	prodl,w,c
 15360  000272  6EE1               	movwf	fsr1l,c
 15361  000274  0E07               	movlw	high Terminal@Payload
 15362  000276  20F4               	addwfc	prodh,w,c
 15363  000278  6EE2               	movwf	fsr1h,c
 15364  00027A  CFDF FFE7          	movff	indf2,indf1
 15365                           
 15366                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15367  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15368  000280  0D02               	mullw	2
 15369  000282  0E0C               	movlw	12
 15370  000284  26F3               	addwf	prodl,f,c
 15371  000286  0E00               	movlw	0
 15372  000288  22F4               	addwfc	prodh,f,c
 15373  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15374  00028C  24F3               	addwf	prodl,w,c
 15375  00028E  6ED9               	movwf	fsr2l,c
 15376  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15377  000292  20F4               	addwfc	prodh,w,c
 15378  000294  6EDA               	movwf	fsr2h,c
 15379  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15380  000298  0D04               	mullw	4
 15381  00029A  0E01               	movlw	1
 15382  00029C  26F3               	addwf	prodl,f,c
 15383  00029E  0E00               	movlw	0
 15384  0002A0  22F4               	addwfc	prodh,f,c
 15385  0002A2  0E66               	movlw	low Terminal@Payload
 15386  0002A4  24F3               	addwf	prodl,w,c
 15387  0002A6  6EE1               	movwf	fsr1l,c
 15388  0002A8  0E07               	movlw	high Terminal@Payload
 15389  0002AA  20F4               	addwfc	prodh,w,c
 15390  0002AC  6EE2               	movwf	fsr1h,c
 15391  0002AE  CFDF FFE7          	movff	indf2,indf1
 15392                           
 15393                           ; BSR set to: 0
 15394  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15395  0002B4                     l2424:
 15396                           
 15397                           ; BSR set to: 0
 15398                           
 15399                           ; BSR set to: 0
 15400  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15401  0002B6  0102               	movlb	2	; () banked
 15402  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15403  0002BA  B0D8               	btfsc	status,0,c
 15404  0002BC  D7C9               	goto	l2425
 15405                           
 15406                           ; BSR set to: 2
 15407                           ;term.c: 530: }
 15408                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15409                           
 15410                           ; BSR set to: 2
 15411  0002BE  0E00               	movlw	0
 15412  0002C0  0100               	movlb	0	; () banked
 15413  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15414  0002C4  D01F               	goto	l2427
 15415  0002C6                     
 15416                           ;term.c: 533: {
 15417                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15418                           
 15419                           ; BSR set to: 0
 15420  0002C6  0100               	movlb	0	; () banked
 15421  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15422  0002CA  0D04               	mullw	4
 15423  0002CC  0E66               	movlw	low Terminal@Payload
 15424  0002CE  24F3               	addwf	prodl,w,c
 15425  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15426  0002D2  0E07               	movlw	high Terminal@Payload
 15427  0002D4  20F4               	addwfc	prodh,w,c
 15428  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15429  0002D8  0E00               	movlw	0
 15430  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15431  0002DC  0E00               	movlw	0
 15432  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15433  0002E0  0E00               	movlw	0
 15434  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15435  0002E4  0E10               	movlw	16
 15436  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15437  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15438  0002EC  0100               	movlb	0	; () banked
 15439  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15440  0002F0  0D01               	mullw	1
 15441  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15442  0002F4  24F3               	addwf	prodl,w,c
 15443  0002F6  6ED9               	movwf	fsr2l,c
 15444  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15445  0002FA  20F4               	addwfc	prodh,w,c
 15446  0002FC  6EDA               	movwf	fsr2h,c
 15447  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15448                           
 15449                           ; BSR set to: 0
 15450  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15451  000304                     l2427:
 15452                           
 15453                           ; BSR set to: 0
 15454                           
 15455                           ; BSR set to: 0
 15456  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15457  000306  0102               	movlb	2	; () banked
 15458  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15459  00030A  B0D8               	btfsc	status,0,c
 15460  00030C  D7DC               	goto	l2428
 15461                           
 15462                           ; BSR set to: 2
 15463                           ;term.c: 539: }
 15464                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15465                           
 15466                           ; BSR set to: 2
 15467  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15468  000310  0100               	movlb	0	; () banked
 15469  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15470  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15471  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15472  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15473  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15474  000320  ECCA  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 15475                           
 15476                           ;term.c: 543: }
 15477  000324  0012               	return	
 15478  000326                     l2423:
 15479                           
 15480                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15481  000326  0E52               	movlw	82
 15482  000328  010A               	movlb	10	; () banked
 15483  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15484  00032C  A4D8               	btfss	status,2,c
 15485  00032E  0012               	return	
 15486                           
 15487                           ; BSR set to: 10
 15488  000330  0E3A               	movlw	58
 15489  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15490  000334  A4D8               	btfss	status,2,c
 15491  000336  0012               	return	
 15492                           
 15493                           ; BSR set to: 10
 15494                           ;term.c: 545: {
 15495                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15496  000338  CA05  F3B2         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15497                           
 15498                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15499  00033C  CA06  F3B3         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15500                           
 15501                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15502  000340  CA08  F3AE         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15503                           
 15504                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15505  000344  CA09  F3AF         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15506                           
 15507                           ; BSR set to: 10
 15508                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15509  000348  0EB2               	movlw	low Terminal@Len
 15510  00034A  0100               	movlb	0	; () banked
 15511  00034C  6F83               	movwf	atoi@s& (0+255),b
 15512  00034E  0E03               	movlw	high Terminal@Len
 15513  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15514  000352  ECCB  F01B         	call	_atoi	;wreg free
 15515  000356  0100               	movlb	0	; () banked
 15516  000358  5183               	movf	?_atoi& (0+255),w,b
 15517  00035A  0102               	movlb	2	; () banked
 15518  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15519                           
 15520                           ; BSR set to: 2
 15521                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15522  00035E  0EAE               	movlw	low Terminal@Addr
 15523  000360  0100               	movlb	0	; () banked
 15524  000362  6F83               	movwf	xtoi@s& (0+255),b
 15525  000364  0E03               	movlw	high Terminal@Addr
 15526  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15527  000368  EC08  F01A         	call	_xtoi	;wreg free
 15528  00036C  0100               	movlb	0	; () banked
 15529  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15530  000370  0102               	movlb	2	; () banked
 15531  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15532                           
 15533                           ; BSR set to: 2
 15534                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15535  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15536  000376  0100               	movlb	0	; () banked
 15537  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15538  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15539  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15540  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15541  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15542  000386  EC6B  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15543                           
 15544                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15545  00038A  0E01               	movlw	1
 15546  00038C  0102               	movlb	2	; () banked
 15547  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15548                           
 15549                           ; BSR set to: 2
 15550                           ;term.c: 561: }
 15551                           ;term.c: 562: }
 15552                           
 15553                           ; BSR set to: 2
 15554  000390  0012               	return	
 15555  000392                     l2422:
 15556                           
 15557                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15558                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15559                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15560                           
 15561                           ; BSR set to: 2
 15562  000392  0E54               	movlw	84
 15563  000394  010A               	movlb	10	; () banked
 15564  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15565  000398  A4D8               	btfss	status,2,c
 15566  00039A  0012               	return	
 15567                           
 15568                           ; BSR set to: 10
 15569  00039C  0E45               	movlw	69
 15570  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15571  0003A0  A4D8               	btfss	status,2,c
 15572  0003A2  0012               	return	
 15573                           
 15574                           ; BSR set to: 10
 15575  0003A4  0E4C               	movlw	76
 15576  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15577  0003A8  A4D8               	btfss	status,2,c
 15578  0003AA  0012               	return	
 15579                           
 15580                           ; BSR set to: 10
 15581                           ;term.c: 566: {
 15582                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15583  0003AC  CA03  F3B2         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15584                           
 15585                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15586  0003B0  CA04  F3B3         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15587                           
 15588                           ; BSR set to: 10
 15589                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15590  0003B4  0EB2               	movlw	low Terminal@Len
 15591  0003B6  0100               	movlb	0	; () banked
 15592  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15593  0003BA  0E03               	movlw	high Terminal@Len
 15594  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15595  0003BE  ECCB  F01B         	call	_atoi	;wreg free
 15596  0003C2  C083  F318         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15597  0003C6  C084  F319         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15598                           
 15599                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15600  0003CA  0E00               	movlw	0
 15601  0003CC  0100               	movlb	0	; () banked
 15602  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15603  0003D0  D018               	goto	l2434
 15604  0003D2                     
 15605                           ; BSR set to: 0
 15606                           ;term.c: 573: {
 15607                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15608                           
 15609                           ; BSR set to: 0
 15610  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15611  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15612  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15613  0003D8  0E05               	movlw	5
 15614  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15615  0003DC  0E00               	movlw	0
 15616  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15617  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15618  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15619  0003E4  6ED9               	movwf	fsr2l,c
 15620  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15621  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15622  0003EA  6EDA               	movwf	fsr2h,c
 15623  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15624  0003EE  0D01               	mullw	1
 15625  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15626  0003F2  24F3               	addwf	prodl,w,c
 15627  0003F4  6EE1               	movwf	fsr1l,c
 15628  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15629  0003F8  20F4               	addwfc	prodh,w,c
 15630  0003FA  6EE2               	movwf	fsr1h,c
 15631  0003FC  CFDF FFE7          	movff	indf2,indf1
 15632                           
 15633                           ; BSR set to: 0
 15634  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15635  000402                     l2434:
 15636                           
 15637                           ; BSR set to: 0
 15638                           
 15639                           ; BSR set to: 0
 15640  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15641  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15642  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15643  000408  0103               	movlb	3	; () banked
 15644  00040A  5118               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15645  00040C  0100               	movlb	0	; () banked
 15646  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15647  000410  0103               	movlb	3	; () banked
 15648  000412  5119               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15649  000414  0100               	movlb	0	; () banked
 15650  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15651  000418  B0D8               	btfsc	status,0,c
 15652  00041A  0012               	return	
 15653  00041C  D7DA               	goto	l2435
 15654  00041E                     
 15655                           ;term.c: 619: if((cdc_trf_state == 0))
 15656                           
 15657                           ; BSR set to: 0
 15658  00041E  0100               	movlb	0	; () banked
 15659  000420  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15660  000422  A4D8               	btfss	status,2,c
 15661  000424  0012               	return	
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;term.c: 620: {
 15665                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15666  000426  0E53               	movlw	83
 15667  000428  0102               	movlb	2	; () banked
 15668  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15669                           
 15670                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15671  00042C  0E42               	movlw	66
 15672  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15673                           
 15674                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15675  000430  0E5B               	movlw	91
 15676  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15677                           
 15678                           ; BSR set to: 2
 15679                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15680  000434  C3AE  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15681                           
 15682                           ; BSR set to: 2
 15683                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15684  000438  C3AF  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15685                           
 15686                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15687  00043C  0E5D               	movlw	93
 15688  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15689                           
 15690                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15691  000440  0E3A               	movlw	58
 15692  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15693                           
 15694                           ; BSR set to: 2
 15695                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15696  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15697  000446  0100               	movlb	0	; () banked
 15698  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15699  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15700  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15701  00044E  0E07               	movlw	7
 15702  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15703  000452  EC8B  F033         	call	_putUSBUSART	;wreg free
 15704                           
 15705                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15706  000456  0E02               	movlw	2
 15707  000458  0102               	movlb	2	; () banked
 15708  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15709                           
 15710                           ; BSR set to: 2
 15711                           ;term.c: 632: }
 15712                           ;term.c: 633: break;
 15713  00045C  0012               	return	
 15714  00045E                     
 15715                           ; BSR set to: 2
 15716                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15717                           
 15718                           ; BSR set to: 2
 15719  00045E  ECAD  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15720  000462  06E8               	decf	wreg,f,c
 15721  000464  A4D8               	btfss	status,2,c
 15722  000466  D088               	goto	l2443
 15723                           
 15724                           ;term.c: 638: {
 15725                           ;term.c: 640: if (FormatOption == 1u)
 15726  000468  0102               	movlb	2	; () banked
 15727  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15728  00046C  A4D8               	btfss	status,2,c
 15729  00046E  D027               	goto	u14130
 15730                           
 15731                           ; BSR set to: 2
 15732                           ;term.c: 641: {
 15733                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15734  000470  0E00               	movlw	0
 15735  000472  0100               	movlb	0	; () banked
 15736  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15737  000476  D01E               	goto	l2445
 15738  000478                     
 15739                           ;term.c: 644: {
 15740                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15741                           
 15742                           ; BSR set to: 0
 15743  000478  0100               	movlb	0	; () banked
 15744  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15745  00047C  0D04               	mullw	4
 15746  00047E  0E66               	movlw	low Terminal@Payload
 15747  000480  24F3               	addwf	prodl,w,c
 15748  000482  6F93               	movwf	itoa@buf& (0+255),b
 15749  000484  0E07               	movlw	high Terminal@Payload
 15750  000486  20F4               	addwfc	prodh,w,c
 15751  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15752  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15753  00048C  0D01               	mullw	1
 15754  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15755  000490  24F3               	addwf	prodl,w,c
 15756  000492  6ED9               	movwf	fsr2l,c
 15757  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15758  000496  20F4               	addwfc	prodh,w,c
 15759  000498  6EDA               	movwf	fsr2h,c
 15760  00049A  50DF               	movf	indf2,w,c
 15761  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15762  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15763  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15764  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15765  0004A4  0E00               	movlw	0
 15766  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15767  0004A8  0E0A               	movlw	10
 15768  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15769  0004AC  EC05  F030         	call	_itoa	;wreg free
 15770  0004B0  0100               	movlb	0	; () banked
 15771  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15772  0004B4                     l2445:
 15773                           
 15774                           ; BSR set to: 0
 15775                           
 15776                           ; BSR set to: 0
 15777  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15778  0004B6  0102               	movlb	2	; () banked
 15779  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15780  0004BA  B0D8               	btfsc	status,0,c
 15781  0004BC  D7DD               	goto	l2446
 15782  0004BE                     u14130:
 15783                           
 15784                           ; BSR set to: 2
 15785                           ;term.c: 646: }
 15786                           ;term.c: 647: }
 15787                           ;term.c: 650: if((cdc_trf_state == 0))
 15788                           
 15789                           ; BSR set to: 2
 15790                           
 15791                           ; BSR set to: 2
 15792  0004BE  0100               	movlb	0	; () banked
 15793  0004C0  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15794  0004C2  A4D8               	btfss	status,2,c
 15795  0004C4  0012               	return	
 15796                           
 15797                           ; BSR set to: 0
 15798                           ;term.c: 651: {
 15799                           ;term.c: 653: if (FormatOption == 1u)
 15800  0004C6  0102               	movlb	2	; () banked
 15801  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15802  0004CA  A4D8               	btfss	status,2,c
 15803  0004CC  D02B               	goto	l2449
 15804                           
 15805                           ; BSR set to: 2
 15806                           ;term.c: 654: {
 15807                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15808  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15809  0004D0  0D08               	mullw	8
 15810  0004D2  0E03               	movlw	3
 15811  0004D4  26F3               	addwf	prodl,f,c
 15812  0004D6  0E00               	movlw	0
 15813  0004D8  22F4               	addwfc	prodh,f,c
 15814  0004DA  0E66               	movlw	low Terminal@Payload
 15815  0004DC  24F3               	addwf	prodl,w,c
 15816  0004DE  6ED9               	movwf	fsr2l,c
 15817  0004E0  0E07               	movlw	high Terminal@Payload
 15818  0004E2  20F4               	addwfc	prodh,w,c
 15819  0004E4  6EDA               	movwf	fsr2h,c
 15820  0004E6  0E0D               	movlw	13
 15821  0004E8  6EDF               	movwf	indf2,c
 15822                           
 15823                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15824  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15825  0004EC  0D08               	mullw	8
 15826  0004EE  0E02               	movlw	2
 15827  0004F0  26F3               	addwf	prodl,f,c
 15828  0004F2  0E00               	movlw	0
 15829  0004F4  22F4               	addwfc	prodh,f,c
 15830  0004F6  0E66               	movlw	low Terminal@Payload
 15831  0004F8  24F3               	addwf	prodl,w,c
 15832  0004FA  6ED9               	movwf	fsr2l,c
 15833  0004FC  0E07               	movlw	high Terminal@Payload
 15834  0004FE  20F4               	addwfc	prodh,w,c
 15835  000500  6EDA               	movwf	fsr2h,c
 15836  000502  0E0A               	movlw	10
 15837  000504  6EDF               	movwf	indf2,c
 15838                           
 15839                           ; BSR set to: 2
 15840                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15841  000506  0E66               	movlw	low Terminal@Payload
 15842  000508  0100               	movlb	0	; () banked
 15843  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15844  00050C  0E07               	movlw	high Terminal@Payload
 15845  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15846  000510  0102               	movlb	2	; () banked
 15847  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15848  000514  0D02               	mullw	2
 15849  000516  50F3               	movf	prodl,w,c
 15850  000518  0F04               	addlw	4
 15851  00051A  0100               	movlb	0	; () banked
 15852  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15853  00051E  EC8B  F033         	call	_putUSBUSART	;wreg free
 15854                           
 15855                           ;term.c: 659: }
 15856  000522  D026               	goto	l2450
 15857  000524                     l2449:
 15858                           
 15859                           ;term.c: 660: else
 15860                           ;term.c: 661: {
 15861                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15862  000524  0102               	movlb	2	; () banked
 15863  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15864  000528  0D01               	mullw	1
 15865  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15866  00052C  24F3               	addwf	prodl,w,c
 15867  00052E  6ED9               	movwf	fsr2l,c
 15868  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15869  000532  20F4               	addwfc	prodh,w,c
 15870  000534  6EDA               	movwf	fsr2h,c
 15871  000536  0E0D               	movlw	13
 15872  000538  6EDF               	movwf	indf2,c
 15873                           
 15874                           ; BSR set to: 2
 15875                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15876  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15877  00053C  0100               	movlb	0	; () banked
 15878  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15879  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15880  000542  0E01               	movlw	1
 15881  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15882  000546  0E00               	movlw	0
 15883  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15884  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15885  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15886  00054E  6ED9               	movwf	fsr2l,c
 15887  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15888  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15889  000554  6EDA               	movwf	fsr2h,c
 15890  000556  0E0A               	movlw	10
 15891  000558  6EDF               	movwf	indf2,c
 15892                           
 15893                           ; BSR set to: 0
 15894                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15895  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15896  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15897  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15898  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15899  000562  0102               	movlb	2	; () banked
 15900  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15901  000566  0F02               	addlw	2
 15902  000568  0100               	movlb	0	; () banked
 15903  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15904  00056C  EC8B  F033         	call	_putUSBUSART	;wreg free
 15905  000570                     l2450:
 15906                           
 15907                           ;term.c: 666: }
 15908                           ;term.c: 668: TermState = Term_GetData;
 15909  000570  0E00               	movlw	0
 15910  000572  0102               	movlb	2	; () banked
 15911  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15912                           
 15913                           ; BSR set to: 2
 15914                           ;term.c: 669: }
 15915                           ;term.c: 670: }
 15916  000576  0012               	return	
 15917  000578                     l2443:
 15918                           
 15919                           ;term.c: 671: else
 15920                           ;term.c: 672: {
 15921                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15922                           
 15923                           ; BSR set to: 2
 15924  000578  0ECA               	movlw	low Terminal@SwTimer
 15925  00057A  0100               	movlb	0	; () banked
 15926  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15927  00057E  0E04               	movlw	high Terminal@SwTimer
 15928  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15929  000582  0EB8               	movlw	184
 15930  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15931  000586  0E0B               	movlw	11
 15932  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15933  00058A  0E00               	movlw	0
 15934  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15935  00058E  0E00               	movlw	0
 15936  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15937  000592  EC93  F028         	call	_OsTmr_Wait	;wreg free
 15938  000596  06E8               	decf	wreg,f,c
 15939  000598  A4D8               	btfss	status,2,c
 15940  00059A  0012               	return	
 15941                           
 15942                           ;term.c: 675: {
 15943                           ;term.c: 677: if((cdc_trf_state == 0))
 15944  00059C  0100               	movlb	0	; () banked
 15945  00059E  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15946  0005A0  A4D8               	btfss	status,2,c
 15947  0005A2  0012               	return	
 15948                           
 15949                           ; BSR set to: 0
 15950                           ;term.c: 678: {
 15951                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15952  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15953  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15954  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15955  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15956  0005AC  0E5F               	movlw	low STR_21
 15957  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15958  0005B0  0EFE               	movlw	high STR_21
 15959  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15960  0005B4  EC02  F032         	call	_strcpy	;wreg free
 15961                           
 15962                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15963  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15964  0005BA  0100               	movlb	0	; () banked
 15965  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15966  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15967  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15968  0005C2  0E29               	movlw	41
 15969  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15970  0005C6  EC8B  F033         	call	_putUSBUSART	;wreg free
 15971                           
 15972                           ;term.c: 682: TermState = Term_GetData;
 15973  0005CA  0E00               	movlw	0
 15974  0005CC  0102               	movlb	2	; () banked
 15975  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15976                           
 15977                           ; BSR set to: 2
 15978                           ;term.c: 693: }
 15979                           
 15980                           ; BSR set to: 2
 15981                           ;term.c: 692: break;
 15982                           
 15983                           ;term.c: 691: default:
 15984                           
 15985                           ; BSR set to: 2
 15986                           ;term.c: 689: break;
 15987                           
 15988                           ;term.c: 688: case Term_ReadSlvUartData:
 15989                           
 15990                           ; BSR set to: 2
 15991                           ;term.c: 683: }
 15992                           ;term.c: 684: }
 15993                           ;term.c: 685: }
 15994                           ;term.c: 686: break;
 15995                           
 15996                           ; BSR set to: 2
 15997                           
 15998                           ; BSR set to: 2
 15999  0005D0  0012               	return	
 16000  0005D2                     l2404:
 16001                           
 16002                           ; BSR set to: 2
 16003  0005D2  0102               	movlb	2	; () banked
 16004  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 16005                           
 16006                           ; Switch size 1, requested type "space"
 16007                           ; Number of cases is 4, Range of values is 0 to 3
 16008                           ; switch strategies available:
 16009                           ; Name         Instructions Cycles
 16010                           ; simple_byte           13     7 (average)
 16011                           ;	Chosen strategy is simple_byte
 16012  0005D6  0A00               	xorlw	0	; case 0
 16013  0005D8  B4D8               	btfsc	status,2,c
 16014  0005DA  D583               	goto	l2405
 16015  0005DC  0A01               	xorlw	1	; case 1
 16016  0005DE  B4D8               	btfsc	status,2,c
 16017  0005E0  D71E               	goto	l2440
 16018  0005E2  0A03               	xorlw	3	; case 2
 16019  0005E4  B4D8               	btfsc	status,2,c
 16020  0005E6  D73B               	goto	l2442
 16021  0005E8  0A01               	xorlw	1	; case 3
 16022  0005EA  0012               	return	
 16023  0005EC                     __end_of_Terminal:
 16024                           	opt stack 0
 16025                           tosu	equ	0xFFF
 16026                           tosh	equ	0xFFE
 16027                           tosl	equ	0xFFD
 16028                           pclath	equ	0xFFA
 16029                           tblptru	equ	0xFF8
 16030                           tblptrh	equ	0xFF7
 16031                           tblptrl	equ	0xFF6
 16032                           tablat	equ	0xFF5
 16033                           prodh	equ	0xFF4
 16034                           prodl	equ	0xFF3
 16035                           intcon	equ	0xFF2
 16036                           intcon2	equ	0xFF1
 16037                           intcon3	equ	0xFF0
 16038                           indf0	equ	0xFEF
 16039                           postinc0	equ	0xFEE
 16040                           plusw0	equ	0xFEB
 16041                           fsr0h	equ	0xFEA
 16042                           fsr0l	equ	0xFE9
 16043                           wreg	equ	0xFE8
 16044                           indf1	equ	0xFE7
 16045                           postinc1	equ	0xFE6
 16046                           postdec1	equ	0xFE5
 16047                           fsr1h	equ	0xFE2
 16048                           fsr1l	equ	0xFE1
 16049                           indf2	equ	0xFDF
 16050                           postinc2	equ	0xFDE
 16051                           postdec2	equ	0xFDD
 16052                           plusw2	equ	0xFDB
 16053                           fsr2h	equ	0xFDA
 16054                           fsr2l	equ	0xFD9
 16055                           status	equ	0xFD8
 16056                           
 16057 ;; *************** function _xtoi *****************
 16058 ;; Defined at:
 16059 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16062 ;;		 -> Terminal@Addr(4), 
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;  val             2   40[BANK0 ] unsigned int 
 16065 ;;  c               1   42[BANK0 ] unsigned char 
 16066 ;;  sign            1   39[BANK0 ] unsigned char 
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  2   35[BANK0 ] unsigned int 
 16069 ;; Registers used:
 16070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16076 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16077 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16078 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16079 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16080 ;;Total ram usage:        8 bytes
 16081 ;; Hardware stack levels used:    1
 16082 ;; Hardware stack levels required when called:   13
 16083 ;; This function calls:
 16084 ;;		_isdigit
 16085 ;;		_isspace
 16086 ;;		_isupper
 16087 ;;		_isxdigit
 16088 ;;		_tolower
 16089 ;; This function is called by:
 16090 ;;		_Terminal
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text61
 16095  003410                     __ptext61:
 16096                           	opt stack 0
 16097  003410                     _xtoi:
 16098                           	opt stack 12
 16099                           
 16100                           ;incstack = 0
 16101  003410  0E00               	movlw	0
 16102  003412  0100               	movlb	0	; () banked
 16103  003414  6F87               	movwf	xtoi@sign& (0+255),b
 16104  003416  0E00               	movlw	0
 16105  003418  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16106  00341A  0E00               	movlw	0
 16107  00341C  6F88               	movwf	xtoi@val& (0+255),b
 16108  00341E  D003               	goto	l3554
 16109  003420                     
 16110                           ; BSR set to: 0
 16111  003420  0100               	movlb	0	; () banked
 16112  003422  4B83               	infsnz	xtoi@s& (0+255),f,b
 16113  003424  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16114  003426                     l3554:
 16115                           
 16116                           ; BSR set to: 0
 16117                           
 16118                           ; BSR set to: 0
 16119  003426  C083  FFD9         	movff	xtoi@s,fsr2l
 16120  00342A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16121  00342E  50DF               	movf	indf2,w,c
 16122  003430  ECD4  F032         	call	_isspace
 16123  003434  B0D8               	btfsc	status,0,c
 16124  003436  D7F4               	goto	l3555
 16125  003438  C083  FFD9         	movff	xtoi@s,fsr2l
 16126  00343C  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16127  003440  0E2D               	movlw	45
 16128  003442  18DE               	xorwf	postinc2,w,c
 16129  003444  A4D8               	btfss	status,2,c
 16130  003446  D003               	goto	l3557
 16131  003448  0100               	movlb	0	; () banked
 16132  00344A  2B87               	incf	xtoi@sign& (0+255),f,b
 16133  00344C  D009               	goto	L15
 16134  00344E                     l3557:
 16135                           
 16136                           ; BSR set to: 0
 16137  00344E  C083  FFD9         	movff	xtoi@s,fsr2l
 16138  003452  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16139  003456  0E2B               	movlw	43
 16140  003458  18DE               	xorwf	postinc2,w,c
 16141  00345A  A4D8               	btfss	status,2,c
 16142  00345C  D028               	goto	l3560
 16143  00345E  0100               	movlb	0	; () banked
 16144  003460                     L15:
 16145  003460  4B83               	infsnz	xtoi@s& (0+255),f,b
 16146  003462  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16147                           
 16148                           ; BSR set to: 0
 16149                           
 16150                           ; BSR set to: 0
 16151  003464  D024               	goto	l3560
 16152  003466                     
 16153                           ; BSR set to: 0
 16154  003466  0100               	movlb	0	; () banked
 16155  003468  518A               	movf	xtoi@c& (0+255),w,b
 16156  00346A  EC7A  F033         	call	_isupper
 16157  00346E  A0D8               	btfss	status,0,c
 16158  003470  D006               	goto	l3562
 16159  003472  0100               	movlb	0	; () banked
 16160  003474  518A               	movf	xtoi@c& (0+255),w,b
 16161  003476  EC6B  F034         	call	_tolower
 16162  00347A  0100               	movlb	0	; () banked
 16163  00347C  6F8A               	movwf	xtoi@c& (0+255),b
 16164  00347E                     l3562:
 16165  00347E  0100               	movlb	0	; () banked
 16166  003480  518A               	movf	xtoi@c& (0+255),w,b
 16167  003482  EC9C  F033         	call	_isdigit
 16168  003486  A0D8               	btfss	status,0,c
 16169  003488  D002               	goto	l3563
 16170  00348A  0E30               	movlw	48
 16171  00348C  D001               	goto	L14
 16172  00348E                     l3563:
 16173                           
 16174                           ; BSR set to: 0
 16175  00348E  0E57               	movlw	87
 16176  003490                     L14:
 16177  003490  0100               	movlb	0	; () banked
 16178  003492  5F8A               	subwf	xtoi@c& (0+255),f,b
 16179                           
 16180                           ; BSR set to: 0
 16181  003494  3B88               	swapf	xtoi@val& (0+255),f,b
 16182  003496  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16183  003498  0EF0               	movlw	240
 16184  00349A  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16185  00349C  5188               	movf	xtoi@val& (0+255),w,b
 16186  00349E  0B0F               	andlw	15
 16187  0034A0  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16188  0034A2  0EF0               	movlw	240
 16189  0034A4  1788               	andwf	xtoi@val& (0+255),f,b
 16190  0034A6  518A               	movf	xtoi@c& (0+255),w,b
 16191  0034A8  2788               	addwf	xtoi@val& (0+255),f,b
 16192  0034AA  0E00               	movlw	0
 16193  0034AC  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16194  0034AE                     l3560:
 16195                           
 16196                           ; BSR set to: 0
 16197  0034AE  C083  FFD9         	movff	xtoi@s,fsr2l
 16198  0034B2  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16199  0034B6  0100               	movlb	0	; () banked
 16200  0034B8  4B83               	infsnz	xtoi@s& (0+255),f,b
 16201  0034BA  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16202  0034BC  50DF               	movf	indf2,w,c
 16203  0034BE  6F8A               	movwf	xtoi@c& (0+255),b
 16204  0034C0  518A               	movf	xtoi@c& (0+255),w,b
 16205  0034C2  EC26  F031         	call	_isxdigit
 16206  0034C6  B0D8               	btfsc	status,0,c
 16207  0034C8  D7CE               	goto	l3561
 16208  0034CA  0100               	movlb	0	; () banked
 16209  0034CC  5187               	movf	xtoi@sign& (0+255),w,b
 16210  0034CE  B4D8               	btfsc	status,2,c
 16211  0034D0  D00D               	goto	l3566
 16212                           
 16213                           ; BSR set to: 0
 16214  0034D2  C088  F085         	movff	xtoi@val,??_xtoi
 16215  0034D6  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16216  0034DA  1F85               	comf	??_xtoi& (0+255),f,b
 16217  0034DC  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16218  0034DE  4B85               	infsnz	??_xtoi& (0+255),f,b
 16219  0034E0  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16220  0034E2  C085  F083         	movff	??_xtoi,?_xtoi
 16221  0034E6  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16222  0034EA  0012               	return	
 16223  0034EC                     l3566:
 16224                           
 16225                           ; BSR set to: 0
 16226  0034EC  C088  F083         	movff	xtoi@val,?_xtoi
 16227  0034F0  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16228                           
 16229                           ; BSR set to: 0
 16230  0034F4  0012               	return		;funcret
 16231  0034F6                     __end_of_xtoi:
 16232                           	opt stack 0
 16233                           tosu	equ	0xFFF
 16234                           tosh	equ	0xFFE
 16235                           tosl	equ	0xFFD
 16236                           pclath	equ	0xFFA
 16237                           tblptru	equ	0xFF8
 16238                           tblptrh	equ	0xFF7
 16239                           tblptrl	equ	0xFF6
 16240                           tablat	equ	0xFF5
 16241                           prodh	equ	0xFF4
 16242                           prodl	equ	0xFF3
 16243                           intcon	equ	0xFF2
 16244                           intcon2	equ	0xFF1
 16245                           intcon3	equ	0xFF0
 16246                           indf0	equ	0xFEF
 16247                           postinc0	equ	0xFEE
 16248                           plusw0	equ	0xFEB
 16249                           fsr0h	equ	0xFEA
 16250                           fsr0l	equ	0xFE9
 16251                           wreg	equ	0xFE8
 16252                           indf1	equ	0xFE7
 16253                           postinc1	equ	0xFE6
 16254                           postdec1	equ	0xFE5
 16255                           fsr1h	equ	0xFE2
 16256                           fsr1l	equ	0xFE1
 16257                           indf2	equ	0xFDF
 16258                           postinc2	equ	0xFDE
 16259                           postdec2	equ	0xFDD
 16260                           plusw2	equ	0xFDB
 16261                           fsr2h	equ	0xFDA
 16262                           fsr2l	equ	0xFD9
 16263                           status	equ	0xFD8
 16264                           
 16265 ;; *************** function _tolower *****************
 16266 ;; Defined at:
 16267 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;  c               1    wreg     unsigned char 
 16270 ;; Auto vars:     Size  Location     Type
 16271 ;;  c               1   29[BANK0 ] unsigned char 
 16272 ;; Return value:  Size  Location     Type
 16273 ;;                  1    wreg      unsigned char 
 16274 ;; Registers used:
 16275 ;;		wreg, status,2, status,0
 16276 ;; Tracked objects:
 16277 ;;		On entry : 0/0
 16278 ;;		On exit  : 0/0
 16279 ;;		Unchanged: 0/0
 16280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16284 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16285 ;;Total ram usage:        1 bytes
 16286 ;; Hardware stack levels used:    1
 16287 ;; Hardware stack levels required when called:   11
 16288 ;; This function calls:
 16289 ;;		Nothing
 16290 ;; This function is called by:
 16291 ;;		_xtoi
 16292 ;; This function uses a non-reentrant model
 16293 ;;
 16294                           
 16295                           	psect	text62
 16296  0068D6                     __ptext62:
 16297                           	opt stack 0
 16298  0068D6                     _tolower:
 16299                           	opt stack 13
 16300                           
 16301                           ; BSR set to: 0
 16302                           ;incstack = 0
 16303                           ;tolower@c stored from wreg
 16304  0068D6  0100               	movlb	0	; () banked
 16305  0068D8  6F7D               	movwf	tolower@c& (0+255),b
 16306  0068DA  0E5B               	movlw	91
 16307  0068DC  0100               	movlb	0	; () banked
 16308  0068DE  617D               	cpfslt	tolower@c& (0+255),b
 16309  0068E0  D004               	goto	l3613
 16310                           
 16311                           ; BSR set to: 0
 16312  0068E2  0E40               	movlw	64
 16313  0068E4  657D               	cpfsgt	tolower@c& (0+255),b
 16314  0068E6  D001               	goto	l3613
 16315                           
 16316                           ; BSR set to: 0
 16317  0068E8  8B7D               	bsf	tolower@c& (0+255),5,b
 16318  0068EA                     l3613:
 16319                           
 16320                           ; BSR set to: 0
 16321                           
 16322                           ; BSR set to: 0
 16323  0068EA  517D               	movf	tolower@c& (0+255),w,b
 16324  0068EC  0012               	return	
 16325  0068EE                     __end_of_tolower:
 16326                           	opt stack 0
 16327                           tosu	equ	0xFFF
 16328                           tosh	equ	0xFFE
 16329                           tosl	equ	0xFFD
 16330                           pclath	equ	0xFFA
 16331                           tblptru	equ	0xFF8
 16332                           tblptrh	equ	0xFF7
 16333                           tblptrl	equ	0xFF6
 16334                           tablat	equ	0xFF5
 16335                           prodh	equ	0xFF4
 16336                           prodl	equ	0xFF3
 16337                           intcon	equ	0xFF2
 16338                           intcon2	equ	0xFF1
 16339                           intcon3	equ	0xFF0
 16340                           indf0	equ	0xFEF
 16341                           postinc0	equ	0xFEE
 16342                           plusw0	equ	0xFEB
 16343                           fsr0h	equ	0xFEA
 16344                           fsr0l	equ	0xFE9
 16345                           wreg	equ	0xFE8
 16346                           indf1	equ	0xFE7
 16347                           postinc1	equ	0xFE6
 16348                           postdec1	equ	0xFE5
 16349                           fsr1h	equ	0xFE2
 16350                           fsr1l	equ	0xFE1
 16351                           indf2	equ	0xFDF
 16352                           postinc2	equ	0xFDE
 16353                           postdec2	equ	0xFDD
 16354                           plusw2	equ	0xFDB
 16355                           fsr2h	equ	0xFDA
 16356                           fsr2l	equ	0xFD9
 16357                           status	equ	0xFD8
 16358                           
 16359 ;; *************** function _isxdigit *****************
 16360 ;; Defined at:
 16361 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16362 ;; Parameters:    Size  Location     Type
 16363 ;;  c               1    wreg     unsigned char 
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;  c               1   34[BANK0 ] unsigned char 
 16366 ;; Return value:  Size  Location     Type
 16367 ;;		None               void
 16368 ;; Registers used:
 16369 ;;		wreg, status,2, status,0, cstack
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16378 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16379 ;;Total ram usage:        3 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; Hardware stack levels required when called:   12
 16382 ;; This function calls:
 16383 ;;		_isdigit
 16384 ;; This function is called by:
 16385 ;;		_xtoi
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text63
 16390  00624C                     __ptext63:
 16391                           	opt stack 0
 16392  00624C                     _isxdigit:
 16393                           	opt stack 12
 16394                           
 16395                           ; BSR set to: 0
 16396                           ;incstack = 0
 16397                           ;isxdigit@c stored from wreg
 16398  00624C  0100               	movlb	0	; () banked
 16399  00624E  6F82               	movwf	isxdigit@c& (0+255),b
 16400  006250  0E01               	movlw	1
 16401  006252  0100               	movlb	0	; () banked
 16402  006254  6F81               	movwf	_isxdigit$6680& (0+255),b
 16403                           
 16404                           ; BSR set to: 0
 16405  006256  0E67               	movlw	103
 16406  006258  6182               	cpfslt	isxdigit@c& (0+255),b
 16407  00625A  D003               	goto	u12450
 16408                           
 16409                           ; BSR set to: 0
 16410  00625C  0E61               	movlw	97
 16411  00625E  6182               	cpfslt	isxdigit@c& (0+255),b
 16412  006260  D00E               	goto	l3609
 16413  006262                     u12450:
 16414                           
 16415                           ; BSR set to: 0
 16416                           
 16417                           ; BSR set to: 0
 16418  006262  0E47               	movlw	71
 16419  006264  6182               	cpfslt	isxdigit@c& (0+255),b
 16420  006266  D003               	goto	u12470
 16421                           
 16422                           ; BSR set to: 0
 16423  006268  0E41               	movlw	65
 16424  00626A  6182               	cpfslt	isxdigit@c& (0+255),b
 16425  00626C  D008               	goto	l3609
 16426  00626E                     u12470:
 16427                           
 16428                           ; BSR set to: 0
 16429                           
 16430                           ; BSR set to: 0
 16431  00626E  5182               	movf	isxdigit@c& (0+255),w,b
 16432  006270  EC9C  F033         	call	_isdigit
 16433  006274  B0D8               	btfsc	status,0,c
 16434  006276  D003               	goto	l3609
 16435  006278  0E00               	movlw	0
 16436  00627A  0100               	movlb	0	; () banked
 16437  00627C  6F81               	movwf	_isxdigit$6680& (0+255),b
 16438  00627E                     l3609:
 16439                           
 16440                           ; BSR set to: 0
 16441  00627E  C081  F080         	movff	_isxdigit$6680,??_isxdigit
 16442  006282  0100               	movlb	0	; () banked
 16443  006284  3180               	rrcf	??_isxdigit& (0+255),w,b
 16444  006286  0012               	return	
 16445  006288                     __end_of_isxdigit:
 16446                           	opt stack 0
 16447                           tosu	equ	0xFFF
 16448                           tosh	equ	0xFFE
 16449                           tosl	equ	0xFFD
 16450                           pclath	equ	0xFFA
 16451                           tblptru	equ	0xFF8
 16452                           tblptrh	equ	0xFF7
 16453                           tblptrl	equ	0xFF6
 16454                           tablat	equ	0xFF5
 16455                           prodh	equ	0xFF4
 16456                           prodl	equ	0xFF3
 16457                           intcon	equ	0xFF2
 16458                           intcon2	equ	0xFF1
 16459                           intcon3	equ	0xFF0
 16460                           indf0	equ	0xFEF
 16461                           postinc0	equ	0xFEE
 16462                           plusw0	equ	0xFEB
 16463                           fsr0h	equ	0xFEA
 16464                           fsr0l	equ	0xFE9
 16465                           wreg	equ	0xFE8
 16466                           indf1	equ	0xFE7
 16467                           postinc1	equ	0xFE6
 16468                           postdec1	equ	0xFE5
 16469                           fsr1h	equ	0xFE2
 16470                           fsr1l	equ	0xFE1
 16471                           indf2	equ	0xFDF
 16472                           postinc2	equ	0xFDE
 16473                           postdec2	equ	0xFDD
 16474                           plusw2	equ	0xFDB
 16475                           fsr2h	equ	0xFDA
 16476                           fsr2l	equ	0xFD9
 16477                           status	equ	0xFD8
 16478                           
 16479 ;; *************** function _strtol *****************
 16480 ;; Defined at:
 16481 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16484 ;;		 -> Terminal@Payload(80), 
 16485 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16486 ;;		 -> NULL(0), 
 16487 ;;  base            2   45[BANK0 ] int 
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  a               4   52[BANK0 ] long 
 16490 ;;  c               1   56[BANK0 ] unsigned char 
 16491 ;;  sign            1   51[BANK0 ] unsigned char 
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  4   41[BANK0 ] long 
 16494 ;; Registers used:
 16495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16496 ;; Tracked objects:
 16497 ;;		On entry : 0/0
 16498 ;;		On exit  : 0/0
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16501 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16502 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16503 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16504 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16505 ;;Total ram usage:       16 bytes
 16506 ;; Hardware stack levels used:    1
 16507 ;; Hardware stack levels required when called:   13
 16508 ;; This function calls:
 16509 ;;		___lmul
 16510 ;;		_isalpha
 16511 ;;		_isdigit
 16512 ;;		_isspace
 16513 ;;		_toupper
 16514 ;; This function is called by:
 16515 ;;		_Terminal
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           	psect	text64
 16520  00181C                     __ptext64:
 16521                           	opt stack 0
 16522  00181C                     _strtol:
 16523                           	opt stack 12
 16524                           
 16525                           ; BSR set to: 0
 16526                           ;incstack = 0
 16527  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16528  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16529  001824  50DF               	movf	indf2,w,c
 16530  001826  0100               	movlb	0	; () banked
 16531  001828  6F98               	movwf	strtol@c& (0+255),b
 16532                           
 16533                           ; BSR set to: 0
 16534  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16535  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16536                           
 16537                           ; BSR set to: 0
 16538  00182E  5198               	movf	strtol@c& (0+255),w,b
 16539  001830  ECD4  F032         	call	_isspace
 16540  001834  B0D8               	btfsc	status,0,c
 16541  001836  D7F2               	goto	_strtol
 16542  001838  0E00               	movlw	0
 16543  00183A  0100               	movlb	0	; () banked
 16544  00183C  6F94               	movwf	strtol@a& (0+255),b
 16545  00183E  0E00               	movlw	0
 16546  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16547  001842  0E00               	movlw	0
 16548  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16549  001846  0E00               	movlw	0
 16550  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16551  00184A  0E00               	movlw	0
 16552  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16553                           
 16554                           ; BSR set to: 0
 16555  00184E  0E2D               	movlw	45
 16556  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16557  001852  A4D8               	btfss	status,2,c
 16558  001854  D003               	goto	l3516
 16559                           
 16560                           ; BSR set to: 0
 16561  001856  0E01               	movlw	1
 16562  001858  6F93               	movwf	strtol@sign& (0+255),b
 16563  00185A  D004               	goto	u12960
 16564  00185C                     l3516:
 16565                           
 16566                           ; BSR set to: 0
 16567                           
 16568                           ; BSR set to: 0
 16569  00185C  0E2B               	movlw	43
 16570  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16571  001860  A4D8               	btfss	status,2,c
 16572  001862  D008               	goto	l3518
 16573  001864                     u12960:
 16574                           
 16575                           ; BSR set to: 0
 16576  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16577  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16578  00186C  50DF               	movf	indf2,w,c
 16579  00186E  6F98               	movwf	strtol@c& (0+255),b
 16580                           
 16581                           ; BSR set to: 0
 16582  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16583  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16584  001874                     l3518:
 16585                           
 16586                           ; BSR set to: 0
 16587                           
 16588                           ; BSR set to: 0
 16589                           
 16590                           ; BSR set to: 0
 16591  001874  0E30               	movlw	48
 16592  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16593  001878  A4D8               	btfss	status,2,c
 16594  00187A  D02E               	goto	l3526
 16595                           
 16596                           ; BSR set to: 0
 16597  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16598  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16599  001884  50DF               	movf	indf2,w,c
 16600  001886  6F98               	movwf	strtol@c& (0+255),b
 16601                           
 16602                           ; BSR set to: 0
 16603  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16604  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16605                           
 16606                           ; BSR set to: 0
 16607  00188C  518D               	movf	strtol@base& (0+255),w,b
 16608  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16609  001890  B4D8               	btfsc	status,2,c
 16610  001892  D005               	goto	u12990
 16611                           
 16612                           ; BSR set to: 0
 16613  001894  0E10               	movlw	16
 16614  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16615  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16616  00189A  A4D8               	btfss	status,2,c
 16617  00189C  D015               	goto	l3520
 16618  00189E                     u12990:
 16619                           
 16620                           ; BSR set to: 0
 16621                           
 16622                           ; BSR set to: 0
 16623  00189E  0E78               	movlw	120
 16624  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16625  0018A2  B4D8               	btfsc	status,2,c
 16626  0018A4  D004               	goto	u13010
 16627                           
 16628                           ; BSR set to: 0
 16629  0018A6  0E58               	movlw	88
 16630  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16631  0018AA  A4D8               	btfss	status,2,c
 16632  0018AC  D00D               	goto	l3520
 16633  0018AE                     u13010:
 16634                           
 16635                           ; BSR set to: 0
 16636                           
 16637                           ; BSR set to: 0
 16638  0018AE  0E00               	movlw	0
 16639  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16640  0018B2  0E10               	movlw	16
 16641  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16642                           
 16643                           ; BSR set to: 0
 16644  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16645  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16646  0018BE  50DF               	movf	indf2,w,c
 16647  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16648                           
 16649                           ; BSR set to: 0
 16650  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16651  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16652  0018C6  D008               	goto	l3526
 16653  0018C8                     l3520:
 16654                           
 16655                           ; BSR set to: 0
 16656                           
 16657                           ; BSR set to: 0
 16658  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16659  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16660  0018CC  A4D8               	btfss	status,2,c
 16661  0018CE  D004               	goto	l3526
 16662                           
 16663                           ; BSR set to: 0
 16664  0018D0  0E00               	movlw	0
 16665  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16666  0018D4  0E08               	movlw	8
 16667  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16668  0018D8                     l3526:
 16669                           
 16670                           ; BSR set to: 0
 16671                           
 16672                           ; BSR set to: 0
 16673                           
 16674                           ; BSR set to: 0
 16675                           
 16676                           ; BSR set to: 0
 16677  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16678  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16679  0018DC  A4D8               	btfss	status,2,c
 16680  0018DE  D004               	goto	l3527
 16681                           
 16682                           ; BSR set to: 0
 16683  0018E0  0E00               	movlw	0
 16684  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16685  0018E4  0E0A               	movlw	10
 16686  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16687  0018E8                     l3527:
 16688                           
 16689                           ; BSR set to: 0
 16690                           
 16691                           ; BSR set to: 0
 16692                           
 16693                           ; BSR set to: 0
 16694  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16695  0018EA  EC4B  F032         	call	_isalpha
 16696  0018EE  A0D8               	btfss	status,0,c
 16697  0018F0  D008               	goto	l3529
 16698  0018F2  0100               	movlb	0	; () banked
 16699  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16700  0018F6  EC77  F034         	call	_toupper
 16701  0018FA  0FC9               	addlw	201
 16702  0018FC  0100               	movlb	0	; () banked
 16703  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16704  001900  D009               	goto	l3532
 16705  001902                     l3529:
 16706                           
 16707                           ; BSR set to: 0
 16708  001902  0100               	movlb	0	; () banked
 16709  001904  5198               	movf	strtol@c& (0+255),w,b
 16710  001906  EC9C  F033         	call	_isdigit
 16711  00190A  A0D8               	btfss	status,0,c
 16712  00190C  D039               	goto	l3533
 16713  00190E  0E30               	movlw	48
 16714  001910  0100               	movlb	0	; () banked
 16715  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16716  001914                     l3532:
 16717                           
 16718                           ; BSR set to: 0
 16719                           
 16720                           ; BSR set to: 0
 16721                           
 16722                           ; BSR set to: 0
 16723  001914  5198               	movf	strtol@c& (0+255),w,b
 16724  001916  6F8F               	movwf	??_strtol& (0+255),b
 16725  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16726  00191A  518D               	movf	strtol@base& (0+255),w,b
 16727  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16728  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16729  001920  0A80               	xorlw	128
 16730  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16731  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16732  001926  0A80               	xorlw	128
 16733  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16734  00192A  B0D8               	btfsc	status,0,c
 16735  00192C  D029               	goto	l3533
 16736                           
 16737                           ; BSR set to: 0
 16738                           
 16739                           ; BSR set to: 0
 16740                           
 16741                           ; BSR set to: 0
 16742  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16743  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16744  001936  0E00               	movlw	0
 16745  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16746  00193A  0EFF               	movlw	-1
 16747  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16748  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16749  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16750  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16751  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16752  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16753  001950  EC4C  F02C         	call	___lmul	;wreg free
 16754  001954  0100               	movlb	0	; () banked
 16755  001956  5198               	movf	strtol@c& (0+255),w,b
 16756  001958  257D               	addwf	?___lmul& (0+255),w,b
 16757  00195A  6F94               	movwf	strtol@a& (0+255),b
 16758  00195C  0E00               	movlw	0
 16759  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16760  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16761  001962  0E00               	movlw	0
 16762  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16763  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16764  001968  0E00               	movlw	0
 16765  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16766  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16767                           
 16768                           ; BSR set to: 0
 16769  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16770  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16771  001976  50DF               	movf	indf2,w,c
 16772  001978  6F98               	movwf	strtol@c& (0+255),b
 16773                           
 16774                           ; BSR set to: 0
 16775  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16776  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16777  00197E  D7B4               	goto	l3527
 16778  001980                     l3533:
 16779                           
 16780                           ; BSR set to: 0
 16781  001980  0100               	movlb	0	; () banked
 16782  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16783  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16784  001986  B4D8               	btfsc	status,2,c
 16785  001988  D00E               	goto	l3535
 16786                           
 16787                           ; BSR set to: 0
 16788  00198A  0EFF               	movlw	255
 16789  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16790  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16791  001990  0EFF               	movlw	255
 16792  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16793  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16794  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16795  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16796  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16797  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16798  0019A6                     l3535:
 16799                           
 16800                           ; BSR set to: 0
 16801                           
 16802                           ; BSR set to: 0
 16803  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16804  0019A8  B4D8               	btfsc	status,2,c
 16805  0019AA  D01A               	goto	l3536
 16806                           
 16807                           ; BSR set to: 0
 16808  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16809  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16810  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16811  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16812  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16813  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16814  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16815  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16816  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16817  0019C6  0E00               	movlw	0
 16818  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16819  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16820  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16821  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16822  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16823  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16824  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16825                           
 16826                           ; BSR set to: 0
 16827  0019DE  0012               	return	
 16828  0019E0                     l3536:
 16829                           
 16830                           ; BSR set to: 0
 16831  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16832  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16833  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16834  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16835                           
 16836                           ; BSR set to: 0
 16837  0019F0  0012               	return		;funcret
 16838  0019F2                     __end_of_strtol:
 16839                           	opt stack 0
 16840                           tosu	equ	0xFFF
 16841                           tosh	equ	0xFFE
 16842                           tosl	equ	0xFFD
 16843                           pclath	equ	0xFFA
 16844                           tblptru	equ	0xFF8
 16845                           tblptrh	equ	0xFF7
 16846                           tblptrl	equ	0xFF6
 16847                           tablat	equ	0xFF5
 16848                           prodh	equ	0xFF4
 16849                           prodl	equ	0xFF3
 16850                           intcon	equ	0xFF2
 16851                           intcon2	equ	0xFF1
 16852                           intcon3	equ	0xFF0
 16853                           indf0	equ	0xFEF
 16854                           postinc0	equ	0xFEE
 16855                           plusw0	equ	0xFEB
 16856                           fsr0h	equ	0xFEA
 16857                           fsr0l	equ	0xFE9
 16858                           wreg	equ	0xFE8
 16859                           indf1	equ	0xFE7
 16860                           postinc1	equ	0xFE6
 16861                           postdec1	equ	0xFE5
 16862                           fsr1h	equ	0xFE2
 16863                           fsr1l	equ	0xFE1
 16864                           indf2	equ	0xFDF
 16865                           postinc2	equ	0xFDE
 16866                           postdec2	equ	0xFDD
 16867                           plusw2	equ	0xFDB
 16868                           fsr2h	equ	0xFDA
 16869                           fsr2l	equ	0xFD9
 16870                           status	equ	0xFD8
 16871                           
 16872 ;; *************** function _toupper *****************
 16873 ;; Defined at:
 16874 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16875 ;; Parameters:    Size  Location     Type
 16876 ;;  c               1    wreg     unsigned char 
 16877 ;; Auto vars:     Size  Location     Type
 16878 ;;  c               1   29[BANK0 ] unsigned char 
 16879 ;; Return value:  Size  Location     Type
 16880 ;;                  1    wreg      unsigned char 
 16881 ;; Registers used:
 16882 ;;		wreg, status,2, status,0
 16883 ;; Tracked objects:
 16884 ;;		On entry : 0/0
 16885 ;;		On exit  : 0/0
 16886 ;;		Unchanged: 0/0
 16887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16892 ;;Total ram usage:        1 bytes
 16893 ;; Hardware stack levels used:    1
 16894 ;; Hardware stack levels required when called:   11
 16895 ;; This function calls:
 16896 ;;		Nothing
 16897 ;; This function is called by:
 16898 ;;		_strtol
 16899 ;; This function uses a non-reentrant model
 16900 ;;
 16901                           
 16902                           	psect	text65
 16903  0068EE                     __ptext65:
 16904                           	opt stack 0
 16905  0068EE                     _toupper:
 16906                           	opt stack 13
 16907                           
 16908                           ; BSR set to: 0
 16909                           ;incstack = 0
 16910                           ;toupper@c stored from wreg
 16911  0068EE  0100               	movlb	0	; () banked
 16912  0068F0  6F7D               	movwf	toupper@c& (0+255),b
 16913  0068F2  0E7B               	movlw	123
 16914  0068F4  0100               	movlb	0	; () banked
 16915  0068F6  617D               	cpfslt	toupper@c& (0+255),b
 16916  0068F8  D004               	goto	l3540
 16917                           
 16918                           ; BSR set to: 0
 16919  0068FA  0E60               	movlw	96
 16920  0068FC  657D               	cpfsgt	toupper@c& (0+255),b
 16921  0068FE  D001               	goto	l3540
 16922                           
 16923                           ; BSR set to: 0
 16924  006900  9B7D               	bcf	toupper@c& (0+255),5,b
 16925  006902                     l3540:
 16926                           
 16927                           ; BSR set to: 0
 16928                           
 16929                           ; BSR set to: 0
 16930  006902  517D               	movf	toupper@c& (0+255),w,b
 16931  006904  0012               	return	
 16932  006906                     __end_of_toupper:
 16933                           	opt stack 0
 16934                           tosu	equ	0xFFF
 16935                           tosh	equ	0xFFE
 16936                           tosl	equ	0xFFD
 16937                           pclath	equ	0xFFA
 16938                           tblptru	equ	0xFF8
 16939                           tblptrh	equ	0xFF7
 16940                           tblptrl	equ	0xFF6
 16941                           tablat	equ	0xFF5
 16942                           prodh	equ	0xFF4
 16943                           prodl	equ	0xFF3
 16944                           intcon	equ	0xFF2
 16945                           intcon2	equ	0xFF1
 16946                           intcon3	equ	0xFF0
 16947                           indf0	equ	0xFEF
 16948                           postinc0	equ	0xFEE
 16949                           plusw0	equ	0xFEB
 16950                           fsr0h	equ	0xFEA
 16951                           fsr0l	equ	0xFE9
 16952                           wreg	equ	0xFE8
 16953                           indf1	equ	0xFE7
 16954                           postinc1	equ	0xFE6
 16955                           postdec1	equ	0xFE5
 16956                           fsr1h	equ	0xFE2
 16957                           fsr1l	equ	0xFE1
 16958                           indf2	equ	0xFDF
 16959                           postinc2	equ	0xFDE
 16960                           postdec2	equ	0xFDD
 16961                           plusw2	equ	0xFDB
 16962                           fsr2h	equ	0xFDA
 16963                           fsr2l	equ	0xFD9
 16964                           status	equ	0xFD8
 16965                           
 16966 ;; *************** function _isspace *****************
 16967 ;; Defined at:
 16968 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;  c               1    wreg     unsigned char 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;  c               1   31[BANK0 ] unsigned char 
 16973 ;; Return value:  Size  Location     Type
 16974 ;;		None               void
 16975 ;; Registers used:
 16976 ;;		wreg, status,2, status,0
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16985 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;Total ram usage:        3 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; Hardware stack levels required when called:   11
 16989 ;; This function calls:
 16990 ;;		Nothing
 16991 ;; This function is called by:
 16992 ;;		_strtol
 16993 ;;		_xtoi
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997                           	psect	text66
 16998  0065A8                     __ptext66:
 16999                           	opt stack 0
 17000  0065A8                     _isspace:
 17001                           	opt stack 13
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;incstack = 0
 17005                           ;isspace@c stored from wreg
 17006  0065A8  0100               	movlb	0	; () banked
 17007  0065AA  6F7F               	movwf	isspace@c& (0+255),b
 17008  0065AC  0E01               	movlw	1
 17009  0065AE  0100               	movlb	0	; () banked
 17010  0065B0  6F7E               	movwf	_isspace$6673& (0+255),b
 17011                           
 17012                           ; BSR set to: 0
 17013  0065B2  0E20               	movlw	32
 17014  0065B4  197F               	xorwf	isspace@c& (0+255),w,b
 17015  0065B6  B4D8               	btfsc	status,2,c
 17016  0065B8  D008               	goto	l3597
 17017                           
 17018                           ; BSR set to: 0
 17019  0065BA  0E0E               	movlw	14
 17020  0065BC  617F               	cpfslt	isspace@c& (0+255),b
 17021  0065BE  D003               	goto	u12360
 17022                           
 17023                           ; BSR set to: 0
 17024  0065C0  0E09               	movlw	9
 17025  0065C2  617F               	cpfslt	isspace@c& (0+255),b
 17026  0065C4  D002               	goto	l3597
 17027  0065C6                     u12360:
 17028                           
 17029                           ; BSR set to: 0
 17030                           
 17031                           ; BSR set to: 0
 17032  0065C6  0E00               	movlw	0
 17033  0065C8  6F7E               	movwf	_isspace$6673& (0+255),b
 17034  0065CA                     l3597:
 17035                           
 17036                           ; BSR set to: 0
 17037                           
 17038                           ; BSR set to: 0
 17039  0065CA  C07E  F07D         	movff	_isspace$6673,??_isspace
 17040  0065CE  317D               	rrcf	??_isspace& (0+255),w,b
 17041  0065D0  0012               	return	
 17042  0065D2                     __end_of_isspace:
 17043                           	opt stack 0
 17044                           tosu	equ	0xFFF
 17045                           tosh	equ	0xFFE
 17046                           tosl	equ	0xFFD
 17047                           pclath	equ	0xFFA
 17048                           tblptru	equ	0xFF8
 17049                           tblptrh	equ	0xFF7
 17050                           tblptrl	equ	0xFF6
 17051                           tablat	equ	0xFF5
 17052                           prodh	equ	0xFF4
 17053                           prodl	equ	0xFF3
 17054                           intcon	equ	0xFF2
 17055                           intcon2	equ	0xFF1
 17056                           intcon3	equ	0xFF0
 17057                           indf0	equ	0xFEF
 17058                           postinc0	equ	0xFEE
 17059                           plusw0	equ	0xFEB
 17060                           fsr0h	equ	0xFEA
 17061                           fsr0l	equ	0xFE9
 17062                           wreg	equ	0xFE8
 17063                           indf1	equ	0xFE7
 17064                           postinc1	equ	0xFE6
 17065                           postdec1	equ	0xFE5
 17066                           fsr1h	equ	0xFE2
 17067                           fsr1l	equ	0xFE1
 17068                           indf2	equ	0xFDF
 17069                           postinc2	equ	0xFDE
 17070                           postdec2	equ	0xFDD
 17071                           plusw2	equ	0xFDB
 17072                           fsr2h	equ	0xFDA
 17073                           fsr2l	equ	0xFD9
 17074                           status	equ	0xFD8
 17075                           
 17076 ;; *************** function _isalpha *****************
 17077 ;; Defined at:
 17078 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;  c               1    wreg     unsigned char 
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;  c               1   34[BANK0 ] unsigned char 
 17083 ;; Return value:  Size  Location     Type
 17084 ;;		None               void
 17085 ;; Registers used:
 17086 ;;		wreg, status,2, status,0, cstack
 17087 ;; Tracked objects:
 17088 ;;		On entry : 0/0
 17089 ;;		On exit  : 0/0
 17090 ;;		Unchanged: 0/0
 17091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17095 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;Total ram usage:        3 bytes
 17097 ;; Hardware stack levels used:    1
 17098 ;; Hardware stack levels required when called:   12
 17099 ;; This function calls:
 17100 ;;		_isupper
 17101 ;; This function is called by:
 17102 ;;		_strtol
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           	psect	text67
 17107  006496                     __ptext67:
 17108                           	opt stack 0
 17109  006496                     _isalpha:
 17110                           	opt stack 12
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;incstack = 0
 17114                           ;isalpha@c stored from wreg
 17115  006496  0100               	movlb	0	; () banked
 17116  006498  6F82               	movwf	isalpha@c& (0+255),b
 17117  00649A  0E01               	movlw	1
 17118  00649C  0100               	movlb	0	; () banked
 17119  00649E  6F81               	movwf	_isalpha$6670& (0+255),b
 17120                           
 17121                           ; BSR set to: 0
 17122  0064A0  0E7B               	movlw	123
 17123  0064A2  6182               	cpfslt	isalpha@c& (0+255),b
 17124  0064A4  D003               	goto	u12380
 17125                           
 17126                           ; BSR set to: 0
 17127  0064A6  0E61               	movlw	97
 17128  0064A8  6182               	cpfslt	isalpha@c& (0+255),b
 17129  0064AA  D008               	goto	l3592
 17130  0064AC                     u12380:
 17131                           
 17132                           ; BSR set to: 0
 17133                           
 17134                           ; BSR set to: 0
 17135  0064AC  5182               	movf	isalpha@c& (0+255),w,b
 17136  0064AE  EC7A  F033         	call	_isupper
 17137  0064B2  B0D8               	btfsc	status,0,c
 17138  0064B4  D003               	goto	l3592
 17139  0064B6  0E00               	movlw	0
 17140  0064B8  0100               	movlb	0	; () banked
 17141  0064BA  6F81               	movwf	_isalpha$6670& (0+255),b
 17142  0064BC                     l3592:
 17143                           
 17144                           ; BSR set to: 0
 17145  0064BC  C081  F080         	movff	_isalpha$6670,??_isalpha
 17146  0064C0  0100               	movlb	0	; () banked
 17147  0064C2  3180               	rrcf	??_isalpha& (0+255),w,b
 17148  0064C4  0012               	return	
 17149  0064C6                     __end_of_isalpha:
 17150                           	opt stack 0
 17151                           tosu	equ	0xFFF
 17152                           tosh	equ	0xFFE
 17153                           tosl	equ	0xFFD
 17154                           pclath	equ	0xFFA
 17155                           tblptru	equ	0xFF8
 17156                           tblptrh	equ	0xFF7
 17157                           tblptrl	equ	0xFF6
 17158                           tablat	equ	0xFF5
 17159                           prodh	equ	0xFF4
 17160                           prodl	equ	0xFF3
 17161                           intcon	equ	0xFF2
 17162                           intcon2	equ	0xFF1
 17163                           intcon3	equ	0xFF0
 17164                           indf0	equ	0xFEF
 17165                           postinc0	equ	0xFEE
 17166                           plusw0	equ	0xFEB
 17167                           fsr0h	equ	0xFEA
 17168                           fsr0l	equ	0xFE9
 17169                           wreg	equ	0xFE8
 17170                           indf1	equ	0xFE7
 17171                           postinc1	equ	0xFE6
 17172                           postdec1	equ	0xFE5
 17173                           fsr1h	equ	0xFE2
 17174                           fsr1l	equ	0xFE1
 17175                           indf2	equ	0xFDF
 17176                           postinc2	equ	0xFDE
 17177                           postdec2	equ	0xFDD
 17178                           plusw2	equ	0xFDB
 17179                           fsr2h	equ	0xFDA
 17180                           fsr2l	equ	0xFD9
 17181                           status	equ	0xFD8
 17182                           
 17183 ;; *************** function _isupper *****************
 17184 ;; Defined at:
 17185 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17186 ;; Parameters:    Size  Location     Type
 17187 ;;  c               1    wreg     unsigned char 
 17188 ;; Auto vars:     Size  Location     Type
 17189 ;;  c               1   31[BANK0 ] unsigned char 
 17190 ;; Return value:  Size  Location     Type
 17191 ;;		None               void
 17192 ;; Registers used:
 17193 ;;		wreg, status,2, status,0
 17194 ;; Tracked objects:
 17195 ;;		On entry : 0/0
 17196 ;;		On exit  : 0/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17202 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17203 ;;Total ram usage:        3 bytes
 17204 ;; Hardware stack levels used:    1
 17205 ;; Hardware stack levels required when called:   11
 17206 ;; This function calls:
 17207 ;;		Nothing
 17208 ;; This function is called by:
 17209 ;;		_xtoi
 17210 ;;		_isalpha
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text68
 17215  0066F4                     __ptext68:
 17216                           	opt stack 0
 17217  0066F4                     _isupper:
 17218                           	opt stack 13
 17219                           
 17220                           ; BSR set to: 0
 17221                           ;incstack = 0
 17222                           ;isupper@c stored from wreg
 17223  0066F4  0100               	movlb	0	; () banked
 17224  0066F6  6F7F               	movwf	isupper@c& (0+255),b
 17225  0066F8  0E00               	movlw	0
 17226  0066FA  0100               	movlb	0	; () banked
 17227  0066FC  6F7E               	movwf	_isupper$6676& (0+255),b
 17228                           
 17229                           ; BSR set to: 0
 17230  0066FE  0E5B               	movlw	91
 17231  006700  617F               	cpfslt	isupper@c& (0+255),b
 17232  006702  D005               	goto	l3602
 17233                           
 17234                           ; BSR set to: 0
 17235  006704  0E40               	movlw	64
 17236  006706  657F               	cpfsgt	isupper@c& (0+255),b
 17237  006708  D002               	goto	l3602
 17238                           
 17239                           ; BSR set to: 0
 17240  00670A  0E01               	movlw	1
 17241  00670C  6F7E               	movwf	_isupper$6676& (0+255),b
 17242  00670E                     l3602:
 17243                           
 17244                           ; BSR set to: 0
 17245                           
 17246                           ; BSR set to: 0
 17247  00670E  C07E  F07D         	movff	_isupper$6676,??_isupper
 17248  006712  317D               	rrcf	??_isupper& (0+255),w,b
 17249  006714  0012               	return	
 17250  006716                     __end_of_isupper:
 17251                           	opt stack 0
 17252                           tosu	equ	0xFFF
 17253                           tosh	equ	0xFFE
 17254                           tosl	equ	0xFFD
 17255                           pclath	equ	0xFFA
 17256                           tblptru	equ	0xFF8
 17257                           tblptrh	equ	0xFF7
 17258                           tblptrl	equ	0xFF6
 17259                           tablat	equ	0xFF5
 17260                           prodh	equ	0xFF4
 17261                           prodl	equ	0xFF3
 17262                           intcon	equ	0xFF2
 17263                           intcon2	equ	0xFF1
 17264                           intcon3	equ	0xFF0
 17265                           indf0	equ	0xFEF
 17266                           postinc0	equ	0xFEE
 17267                           plusw0	equ	0xFEB
 17268                           fsr0h	equ	0xFEA
 17269                           fsr0l	equ	0xFE9
 17270                           wreg	equ	0xFE8
 17271                           indf1	equ	0xFE7
 17272                           postinc1	equ	0xFE6
 17273                           postdec1	equ	0xFE5
 17274                           fsr1h	equ	0xFE2
 17275                           fsr1l	equ	0xFE1
 17276                           indf2	equ	0xFDF
 17277                           postinc2	equ	0xFDE
 17278                           postdec2	equ	0xFDD
 17279                           plusw2	equ	0xFDB
 17280                           fsr2h	equ	0xFDA
 17281                           fsr2l	equ	0xFD9
 17282                           status	equ	0xFD8
 17283                           
 17284 ;; *************** function _strcpy *****************
 17285 ;; Defined at:
 17286 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17287 ;; Parameters:    Size  Location     Type
 17288 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17289 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17290 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17291 ;;		 -> STR_23(20), STR_21(42), 
 17292 ;; Auto vars:     Size  Location     Type
 17293 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17294 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17295 ;; Return value:  Size  Location     Type
 17296 ;;                  2   29[BANK0 ] PTR unsigned char 
 17297 ;; Registers used:
 17298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17299 ;; Tracked objects:
 17300 ;;		On entry : 0/0
 17301 ;;		On exit  : 0/0
 17302 ;;		Unchanged: 0/0
 17303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17304 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17307 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17308 ;;Total ram usage:        6 bytes
 17309 ;; Hardware stack levels used:    1
 17310 ;; Hardware stack levels required when called:   11
 17311 ;; This function calls:
 17312 ;;		Nothing
 17313 ;; This function is called by:
 17314 ;;		_Terminal
 17315 ;;		_Term_MainSm
 17316 ;; This function uses a non-reentrant model
 17317 ;;
 17318                           
 17319                           	psect	text69
 17320  006404                     __ptext69:
 17321                           	opt stack 0
 17322  006404                     _strcpy:
 17323                           	opt stack 15
 17324                           
 17325                           ; BSR set to: 0
 17326                           ;incstack = 0
 17327  006404  C07D  F081         	movff	strcpy@to,strcpy@cp
 17328  006408  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17329  00640C  D005               	goto	l3494
 17330  00640E  0100               	movlb	0	; () banked
 17331  006410  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17332  006412  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17333  006414  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17334  006416  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17335  006418                     l3494:
 17336                           
 17337                           ; BSR set to: 0
 17338  006418  C07F  FFF6         	movff	strcpy@from,tblptrl
 17339  00641C  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17340  006420                     	if	0	;tblptru may be non-zero
 17341  006420                     	endif
 17342  006420                     	if	0	;tblptru may be non-zero
 17343  006420                     	endif
 17344  006420  C081  FFD9         	movff	strcpy@cp,fsr2l
 17345  006424  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17346  006428  0008               	tblrd		*
 17347  00642A  CFF5 FFDF          	movff	tablat,indf2
 17348  00642E  50DF               	movf	indf2,w,c
 17349  006430  B4D8               	btfsc	status,2,c
 17350  006432  0012               	return	
 17351  006434  D7EC               	goto	l3495
 17352  006436                     __end_of_strcpy:
 17353                           	opt stack 0
 17354                           tosu	equ	0xFFF
 17355                           tosh	equ	0xFFE
 17356                           tosl	equ	0xFFD
 17357                           pclath	equ	0xFFA
 17358                           tblptru	equ	0xFF8
 17359                           tblptrh	equ	0xFF7
 17360                           tblptrl	equ	0xFF6
 17361                           tablat	equ	0xFF5
 17362                           prodh	equ	0xFF4
 17363                           prodl	equ	0xFF3
 17364                           intcon	equ	0xFF2
 17365                           intcon2	equ	0xFF1
 17366                           intcon3	equ	0xFF0
 17367                           indf0	equ	0xFEF
 17368                           postinc0	equ	0xFEE
 17369                           plusw0	equ	0xFEB
 17370                           fsr0h	equ	0xFEA
 17371                           fsr0l	equ	0xFE9
 17372                           wreg	equ	0xFE8
 17373                           indf1	equ	0xFE7
 17374                           postinc1	equ	0xFE6
 17375                           postdec1	equ	0xFE5
 17376                           fsr1h	equ	0xFE2
 17377                           fsr1l	equ	0xFE1
 17378                           indf2	equ	0xFDF
 17379                           postinc2	equ	0xFDE
 17380                           postdec2	equ	0xFDD
 17381                           plusw2	equ	0xFDB
 17382                           fsr2h	equ	0xFDA
 17383                           fsr2l	equ	0xFD9
 17384                           status	equ	0xFD8
 17385                           
 17386 ;; *************** function _putUSBUSART *****************
 17387 ;; Defined at:
 17388 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17389 ;; Parameters:    Size  Location     Type
 17390 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17391 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17392 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17393 ;;		 -> RxBuffer(400), 
 17394 ;;  length          1   37[BANK0 ] unsigned char 
 17395 ;; Auto vars:     Size  Location     Type
 17396 ;;		None
 17397 ;; Return value:  Size  Location     Type
 17398 ;;                  1    wreg      void 
 17399 ;; Registers used:
 17400 ;;		wreg, status,2, status,0
 17401 ;; Tracked objects:
 17402 ;;		On entry : 0/0
 17403 ;;		On exit  : 0/0
 17404 ;;		Unchanged: 0/0
 17405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17406 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17409 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17410 ;;Total ram usage:        3 bytes
 17411 ;; Hardware stack levels used:    1
 17412 ;; Hardware stack levels required when called:   11
 17413 ;; This function calls:
 17414 ;;		Nothing
 17415 ;; This function is called by:
 17416 ;;		_Terminal
 17417 ;;		_Term_MainSm
 17418 ;;		_GsmGprsTerminal
 17419 ;; This function uses a non-reentrant model
 17420 ;;
 17421                           
 17422                           	psect	text70
 17423  006716                     __ptext70:
 17424                           	opt stack 0
 17425  006716                     _putUSBUSART:
 17426                           	opt stack 15
 17427                           
 17428                           ;usb_device_cdc.c: 584: ;
 17429                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17430                           
 17431                           ;incstack = 0
 17432  006716  0100               	movlb	0	; () banked
 17433  006718  51C6               	movf	_cdc_trf_state& (0+255),w,b
 17434  00671A  A4D8               	btfss	status,2,c
 17435  00671C  0012               	return	
 17436                           
 17437                           ; BSR set to: 0
 17438                           ;usb_device_cdc.c: 586: {
 17439                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17440  00671E  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17441  006722  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17442                           
 17443                           ; BSR set to: 0
 17444  006726  C085  F0C5         	movff	putUSBUSART@length,_cdc_tx_len
 17445                           
 17446                           ; BSR set to: 0
 17447  00672A  0E01               	movlw	1
 17448  00672C  0101               	movlb	1	; () banked
 17449  00672E  6FDF               	movwf	_cdc_mem_type& (0+255),b
 17450                           
 17451                           ; BSR set to: 1
 17452  006730  0E01               	movlw	1
 17453  006732  0100               	movlb	0	; () banked
 17454  006734  6FC6               	movwf	_cdc_trf_state& (0+255),b
 17455  006736  0012               	return	
 17456  006738                     __end_of_putUSBUSART:
 17457                           	opt stack 0
 17458                           tosu	equ	0xFFF
 17459                           tosh	equ	0xFFE
 17460                           tosl	equ	0xFFD
 17461                           pclath	equ	0xFFA
 17462                           tblptru	equ	0xFF8
 17463                           tblptrh	equ	0xFF7
 17464                           tblptrl	equ	0xFF6
 17465                           tablat	equ	0xFF5
 17466                           prodh	equ	0xFF4
 17467                           prodl	equ	0xFF3
 17468                           intcon	equ	0xFF2
 17469                           intcon2	equ	0xFF1
 17470                           intcon3	equ	0xFF0
 17471                           indf0	equ	0xFEF
 17472                           postinc0	equ	0xFEE
 17473                           plusw0	equ	0xFEB
 17474                           fsr0h	equ	0xFEA
 17475                           fsr0l	equ	0xFE9
 17476                           wreg	equ	0xFE8
 17477                           indf1	equ	0xFE7
 17478                           postinc1	equ	0xFE6
 17479                           postdec1	equ	0xFE5
 17480                           fsr1h	equ	0xFE2
 17481                           fsr1l	equ	0xFE1
 17482                           indf2	equ	0xFDF
 17483                           postinc2	equ	0xFDE
 17484                           postdec2	equ	0xFDD
 17485                           plusw2	equ	0xFDB
 17486                           fsr2h	equ	0xFDA
 17487                           fsr2l	equ	0xFD9
 17488                           status	equ	0xFD8
 17489                           
 17490 ;; *************** function _itoa *****************
 17491 ;; Defined at:
 17492 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17493 ;; Parameters:    Size  Location     Type
 17494 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17495 ;;		 -> Terminal@Payload(80), 
 17496 ;;  val             2   53[BANK0 ] int 
 17497 ;;  base            2   55[BANK0 ] int 
 17498 ;; Auto vars:     Size  Location     Type
 17499 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17500 ;;		 -> Terminal@Payload(80), 
 17501 ;; Return value:  Size  Location     Type
 17502 ;;                  2   51[BANK0 ] PTR unsigned char 
 17503 ;; Registers used:
 17504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17505 ;; Tracked objects:
 17506 ;;		On entry : 0/0
 17507 ;;		On exit  : 0/0
 17508 ;;		Unchanged: 0/0
 17509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17510 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17513 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17514 ;;Total ram usage:        8 bytes
 17515 ;; Hardware stack levels used:    1
 17516 ;; Hardware stack levels required when called:   13
 17517 ;; This function calls:
 17518 ;;		_utoa
 17519 ;; This function is called by:
 17520 ;;		_Terminal
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           	psect	text71
 17525  00600A                     __ptext71:
 17526                           	opt stack 0
 17527  00600A                     _itoa:
 17528                           	opt stack 12
 17529                           
 17530                           ; BSR set to: 0
 17531                           ;incstack = 0
 17532  00600A  C093  F099         	movff	itoa@buf,itoa@cp
 17533  00600E  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17534  006012  0100               	movlb	0	; () banked
 17535  006014  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17536  006016  D00C               	goto	l3242
 17537                           
 17538                           ; BSR set to: 0
 17539  006018  C093  FFD9         	movff	itoa@buf,fsr2l
 17540  00601C  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17541  006020  0E2D               	movlw	45
 17542  006022  6EDF               	movwf	indf2,c
 17543                           
 17544                           ; BSR set to: 0
 17545  006024  4B93               	infsnz	itoa@buf& (0+255),f,b
 17546  006026  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17547                           
 17548                           ; BSR set to: 0
 17549  006028  6D95               	negf	itoa@val& (0+255),b
 17550  00602A  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17551  00602C  B0D8               	btfsc	status,0,c
 17552  00602E  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17553  006030                     l3242:
 17554                           
 17555                           ; BSR set to: 0
 17556                           
 17557                           ; BSR set to: 0
 17558  006030  C093  F08A         	movff	itoa@buf,utoa@buf
 17559  006034  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17560  006038  C095  F08C         	movff	itoa@val,utoa@val
 17561  00603C  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17562  006040  C097  F08E         	movff	itoa@base,utoa@base
 17563  006044  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17564  006048  EC53  F022         	call	_utoa	;wreg free
 17565  00604C  0012               	return	
 17566  00604E                     __end_of_itoa:
 17567                           	opt stack 0
 17568                           tosu	equ	0xFFF
 17569                           tosh	equ	0xFFE
 17570                           tosl	equ	0xFFD
 17571                           pclath	equ	0xFFA
 17572                           tblptru	equ	0xFF8
 17573                           tblptrh	equ	0xFF7
 17574                           tblptrl	equ	0xFF6
 17575                           tablat	equ	0xFF5
 17576                           prodh	equ	0xFF4
 17577                           prodl	equ	0xFF3
 17578                           intcon	equ	0xFF2
 17579                           intcon2	equ	0xFF1
 17580                           intcon3	equ	0xFF0
 17581                           indf0	equ	0xFEF
 17582                           postinc0	equ	0xFEE
 17583                           plusw0	equ	0xFEB
 17584                           fsr0h	equ	0xFEA
 17585                           fsr0l	equ	0xFE9
 17586                           wreg	equ	0xFE8
 17587                           indf1	equ	0xFE7
 17588                           postinc1	equ	0xFE6
 17589                           postdec1	equ	0xFE5
 17590                           fsr1h	equ	0xFE2
 17591                           fsr1l	equ	0xFE1
 17592                           indf2	equ	0xFDF
 17593                           postinc2	equ	0xFDE
 17594                           postdec2	equ	0xFDD
 17595                           plusw2	equ	0xFDB
 17596                           fsr2h	equ	0xFDA
 17597                           fsr2l	equ	0xFD9
 17598                           status	equ	0xFD8
 17599                           
 17600 ;; *************** function _utoa *****************
 17601 ;; Defined at:
 17602 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17603 ;; Parameters:    Size  Location     Type
 17604 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17605 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17606 ;;  val             2   44[BANK0 ] unsigned int 
 17607 ;;  base            2   46[BANK0 ] int 
 17608 ;; Auto vars:     Size  Location     Type
 17609 ;;  v               2   48[BANK0 ] unsigned int 
 17610 ;;  c               1   50[BANK0 ] unsigned char 
 17611 ;; Return value:  Size  Location     Type
 17612 ;;                  2   42[BANK0 ] PTR unsigned char 
 17613 ;; Registers used:
 17614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17615 ;; Tracked objects:
 17616 ;;		On entry : 0/0
 17617 ;;		On exit  : 0/0
 17618 ;;		Unchanged: 0/0
 17619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17620 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;Total ram usage:        9 bytes
 17625 ;; Hardware stack levels used:    1
 17626 ;; Hardware stack levels required when called:   12
 17627 ;; This function calls:
 17628 ;;		___lwdiv
 17629 ;;		___lwmod
 17630 ;; This function is called by:
 17631 ;;		_Term_MainSm
 17632 ;;		_itoa
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           	psect	text72
 17637  0044A6                     __ptext72:
 17638                           	opt stack 0
 17639  0044A6                     _utoa:
 17640                           	opt stack 14
 17641                           
 17642                           ;incstack = 0
 17643  0044A6  C08C  F090         	movff	utoa@val,utoa@v
 17644  0044AA  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17645  0044AE  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17646  0044B2  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17647  0044B6  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17648  0044BA  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17649  0044BE  EC78  F02D         	call	___lwdiv	;wreg free
 17650  0044C2  C083  F090         	movff	?___lwdiv,utoa@v
 17651  0044C6  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17652  0044CA  0100               	movlb	0	; () banked
 17653  0044CC  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17654  0044CE  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17655                           
 17656                           ; BSR set to: 0
 17657  0044D0  5190               	movf	utoa@v& (0+255),w,b
 17658  0044D2  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17659  0044D4  A4D8               	btfss	status,2,c
 17660  0044D6  D7EB               	goto	l3246
 17661                           
 17662                           ; BSR set to: 0
 17663                           
 17664                           ; BSR set to: 0
 17665  0044D8  C08A  FFD9         	movff	utoa@buf,fsr2l
 17666  0044DC  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17667  0044E0  0E00               	movlw	0
 17668  0044E2  6EDF               	movwf	indf2,c
 17669                           
 17670                           ; BSR set to: 0
 17671  0044E4  078A               	decf	utoa@buf& (0+255),f,b
 17672  0044E6  A0D8               	btfss	status,0,c
 17673  0044E8  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17674  0044EA                     
 17675                           ; BSR set to: 0
 17676                           
 17677                           ; BSR set to: 0
 17678  0044EA  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17679  0044EE  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17680  0044F2  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17681  0044F6  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17682  0044FA  EC27  F030         	call	___lwmod	;wreg free
 17683  0044FE  0100               	movlb	0	; () banked
 17684  004500  517D               	movf	?___lwmod& (0+255),w,b
 17685  004502  6F92               	movwf	utoa@c& (0+255),b
 17686                           
 17687                           ; BSR set to: 0
 17688  004504  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17689  004508  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17690  00450C  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17691  004510  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17692  004514  EC78  F02D         	call	___lwdiv	;wreg free
 17693  004518  C083  F08C         	movff	?___lwdiv,utoa@val
 17694  00451C  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17695  004520  0E09               	movlw	9
 17696  004522  0100               	movlb	0	; () banked
 17697  004524  6592               	cpfsgt	utoa@c& (0+255),b
 17698  004526  D002               	goto	l3249
 17699                           
 17700                           ; BSR set to: 0
 17701  004528  0E07               	movlw	7
 17702  00452A  2792               	addwf	utoa@c& (0+255),f,b
 17703  00452C                     l3249:
 17704                           
 17705                           ; BSR set to: 0
 17706  00452C  0E30               	movlw	48
 17707  00452E  2792               	addwf	utoa@c& (0+255),f,b
 17708                           
 17709                           ; BSR set to: 0
 17710  004530  C08A  FFD9         	movff	utoa@buf,fsr2l
 17711  004534  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17712  004538  C092  FFDF         	movff	utoa@c,indf2
 17713                           
 17714                           ; BSR set to: 0
 17715  00453C  078A               	decf	utoa@buf& (0+255),f,b
 17716  00453E  A0D8               	btfss	status,0,c
 17717  004540  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17718                           
 17719                           ; BSR set to: 0
 17720  004542  518C               	movf	utoa@val& (0+255),w,b
 17721  004544  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17722  004546  A4D8               	btfss	status,2,c
 17723  004548  D7D0               	goto	l3248
 17724                           
 17725                           ; BSR set to: 0
 17726                           ;	Return value of _utoa is never used
 17727                           
 17728                           ; BSR set to: 0
 17729  00454A  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17730  00454C  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17731  00454E  0012               	return	
 17732  004550                     __end_of_utoa:
 17733                           	opt stack 0
 17734                           tosu	equ	0xFFF
 17735                           tosh	equ	0xFFE
 17736                           tosl	equ	0xFFD
 17737                           pclath	equ	0xFFA
 17738                           tblptru	equ	0xFF8
 17739                           tblptrh	equ	0xFF7
 17740                           tblptrl	equ	0xFF6
 17741                           tablat	equ	0xFF5
 17742                           prodh	equ	0xFF4
 17743                           prodl	equ	0xFF3
 17744                           intcon	equ	0xFF2
 17745                           intcon2	equ	0xFF1
 17746                           intcon3	equ	0xFF0
 17747                           indf0	equ	0xFEF
 17748                           postinc0	equ	0xFEE
 17749                           plusw0	equ	0xFEB
 17750                           fsr0h	equ	0xFEA
 17751                           fsr0l	equ	0xFE9
 17752                           wreg	equ	0xFE8
 17753                           indf1	equ	0xFE7
 17754                           postinc1	equ	0xFE6
 17755                           postdec1	equ	0xFE5
 17756                           fsr1h	equ	0xFE2
 17757                           fsr1l	equ	0xFE1
 17758                           indf2	equ	0xFDF
 17759                           postinc2	equ	0xFDE
 17760                           postdec2	equ	0xFDD
 17761                           plusw2	equ	0xFDB
 17762                           fsr2h	equ	0xFDA
 17763                           fsr2l	equ	0xFD9
 17764                           status	equ	0xFD8
 17765                           
 17766 ;; *************** function ___lwmod *****************
 17767 ;; Defined at:
 17768 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17769 ;; Parameters:    Size  Location     Type
 17770 ;;  dividend        2   29[BANK0 ] unsigned int 
 17771 ;;  divisor         2   31[BANK0 ] unsigned int 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  counter         1   33[BANK0 ] unsigned char 
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  2   29[BANK0 ] unsigned int 
 17776 ;; Registers used:
 17777 ;;		wreg, status,2, status,0
 17778 ;; Tracked objects:
 17779 ;;		On entry : 0/0
 17780 ;;		On exit  : 0/0
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17786 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17787 ;;Total ram usage:        5 bytes
 17788 ;; Hardware stack levels used:    1
 17789 ;; Hardware stack levels required when called:   11
 17790 ;; This function calls:
 17791 ;;		Nothing
 17792 ;; This function is called by:
 17793 ;;		_utoa
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797                           	psect	text73
 17798  00604E                     __ptext73:
 17799                           	opt stack 0
 17800  00604E                     ___lwmod:
 17801                           	opt stack 14
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;incstack = 0
 17805  00604E  0100               	movlb	0	; () banked
 17806  006050  517F               	movf	___lwmod@divisor& (0+255),w,b
 17807  006052  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17808  006054  B4D8               	btfsc	status,2,c
 17809  006056  D018               	goto	l3344
 17810                           
 17811                           ; BSR set to: 0
 17812  006058  0E01               	movlw	1
 17813  00605A  6F81               	movwf	___lwmod@counter& (0+255),b
 17814  00605C  D004               	goto	l3339
 17815  00605E                     
 17816                           ; BSR set to: 0
 17817                           
 17818                           ; BSR set to: 0
 17819  00605E  90D8               	bcf	status,0,c
 17820  006060  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17821  006062  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17822  006064  2B81               	incf	___lwmod@counter& (0+255),f,b
 17823  006066                     l3339:
 17824                           
 17825                           ; BSR set to: 0
 17826                           
 17827                           ; BSR set to: 0
 17828  006066  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17829  006068  D7FA               	goto	l3340
 17830  00606A                     u12010:
 17831                           
 17832                           ; BSR set to: 0
 17833                           
 17834                           ; BSR set to: 0
 17835                           
 17836                           ; BSR set to: 0
 17837  00606A  517F               	movf	___lwmod@divisor& (0+255),w,b
 17838  00606C  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17839  00606E  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17840  006070  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17841  006072  A0D8               	btfss	status,0,c
 17842  006074  D004               	goto	l3343
 17843                           
 17844                           ; BSR set to: 0
 17845  006076  517F               	movf	___lwmod@divisor& (0+255),w,b
 17846  006078  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17847  00607A  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17848  00607C  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17849  00607E                     l3343:
 17850                           
 17851                           ; BSR set to: 0
 17852                           
 17853                           ; BSR set to: 0
 17854  00607E  90D8               	bcf	status,0,c
 17855  006080  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17856  006082  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17857                           
 17858                           ; BSR set to: 0
 17859  006084  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17860  006086  D7F1               	goto	u12010
 17861  006088                     l3344:
 17862                           
 17863                           ; BSR set to: 0
 17864                           
 17865                           ; BSR set to: 0
 17866  006088  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17867  00608C  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17868                           
 17869                           ; BSR set to: 0
 17870  006090  0012               	return		;funcret
 17871  006092                     __end_of___lwmod:
 17872                           	opt stack 0
 17873                           tosu	equ	0xFFF
 17874                           tosh	equ	0xFFE
 17875                           tosl	equ	0xFFD
 17876                           pclath	equ	0xFFA
 17877                           tblptru	equ	0xFF8
 17878                           tblptrh	equ	0xFF7
 17879                           tblptrl	equ	0xFF6
 17880                           tablat	equ	0xFF5
 17881                           prodh	equ	0xFF4
 17882                           prodl	equ	0xFF3
 17883                           intcon	equ	0xFF2
 17884                           intcon2	equ	0xFF1
 17885                           intcon3	equ	0xFF0
 17886                           indf0	equ	0xFEF
 17887                           postinc0	equ	0xFEE
 17888                           plusw0	equ	0xFEB
 17889                           fsr0h	equ	0xFEA
 17890                           fsr0l	equ	0xFE9
 17891                           wreg	equ	0xFE8
 17892                           indf1	equ	0xFE7
 17893                           postinc1	equ	0xFE6
 17894                           postdec1	equ	0xFE5
 17895                           fsr1h	equ	0xFE2
 17896                           fsr1l	equ	0xFE1
 17897                           indf2	equ	0xFDF
 17898                           postinc2	equ	0xFDE
 17899                           postdec2	equ	0xFDD
 17900                           plusw2	equ	0xFDB
 17901                           fsr2h	equ	0xFDA
 17902                           fsr2l	equ	0xFD9
 17903                           status	equ	0xFD8
 17904                           
 17905 ;; *************** function _getsUSBUSART *****************
 17906 ;; Defined at:
 17907 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17910 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17911 ;;  len             1   38[BANK0 ] unsigned char 
 17912 ;; Auto vars:     Size  Location     Type
 17913 ;;		None
 17914 ;; Return value:  Size  Location     Type
 17915 ;;                  1    wreg      unsigned char 
 17916 ;; Registers used:
 17917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17918 ;; Tracked objects:
 17919 ;;		On entry : 0/0
 17920 ;;		On exit  : 0/0
 17921 ;;		Unchanged: 0/0
 17922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17923 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17925 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17927 ;;Total ram usage:        4 bytes
 17928 ;; Hardware stack levels used:    1
 17929 ;; Hardware stack levels required when called:   12
 17930 ;; This function calls:
 17931 ;;		_USBTransferOnePacket
 17932 ;; This function is called by:
 17933 ;;		_Terminal
 17934 ;;		_GsmGprsTerminal
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           	psect	text74
 17939  004B94                     __ptext74:
 17940                           	opt stack 0
 17941  004B94                     _getsUSBUSART:
 17942                           	opt stack 13
 17943                           
 17944                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17945                           
 17946                           ; BSR set to: 0
 17947                           ;incstack = 0
 17948  004B94  0E00               	movlw	0
 17949  004B96  0100               	movlb	0	; () banked
 17950  004B98  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17954  004B9A  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17955  004B9C  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17956  004B9E  B4D8               	btfsc	status,2,c
 17957  004BA0  D006               	goto	u12740
 17958                           
 17959                           ; BSR set to: 0
 17960  004BA2  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17961  004BA6  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17962  004BAA  BEDF               	btfsc	indf2,7,c
 17963  004BAC  D03B               	goto	l1924
 17964  004BAE                     u12740:
 17965                           
 17966                           ; BSR set to: 0
 17967                           ;usb_device_cdc.c: 493: {
 17968                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17969                           
 17970                           ; BSR set to: 0
 17971  004BAE  EE20 F001          	lfsr	2,1
 17972  004BB2  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17973  004BB4  26D9               	addwf	fsr2l,f,c
 17974  004BB6  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17975  004BB8  22DA               	addwfc	fsr2h,f,c
 17976  004BBA  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17977  004BBC  5CDE               	subwf	postinc2,w,c
 17978  004BBE  B0D8               	btfsc	status,0,c
 17979  004BC0  D008               	goto	l1927
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17983  004BC2  EE20 F001          	lfsr	2,1
 17984  004BC6  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17985  004BC8  26D9               	addwf	fsr2l,f,c
 17986  004BCA  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17987  004BCC  22DA               	addwfc	fsr2h,f,c
 17988  004BCE  50DF               	movf	indf2,w,c
 17989  004BD0  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17990  004BD2                     l1927:
 17991                           
 17992                           ; BSR set to: 0
 17993                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17994                           
 17995                           ; BSR set to: 0
 17996  004BD2  0E00               	movlw	0
 17997  004BD4  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17998  004BD6  D013               	goto	l1928
 17999  004BD8                     
 18000                           ; BSR set to: 0
 18001                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 18002                           
 18003                           ; BSR set to: 0
 18004  004BD8  51C7               	movf	_cdc_rx_len& (0+255),w,b
 18005  004BDA  0D01               	mullw	1
 18006  004BDC  0E00               	movlw	low _cdc_data_rx
 18007  004BDE  24F3               	addwf	prodl,w,c
 18008  004BE0  6ED9               	movwf	fsr2l,c
 18009  004BE2  0E05               	movlw	high _cdc_data_rx
 18010  004BE4  20F4               	addwfc	prodh,w,c
 18011  004BE6  6EDA               	movwf	fsr2h,c
 18012  004BE8  51C7               	movf	_cdc_rx_len& (0+255),w,b
 18013  004BEA  0D01               	mullw	1
 18014  004BEC  50F3               	movf	prodl,w,c
 18015  004BEE  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 18016  004BF0  6EE1               	movwf	fsr1l,c
 18017  004BF2  50F4               	movf	prodh,w,c
 18018  004BF4  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18019  004BF6  6EE2               	movwf	fsr1h,c
 18020  004BF8  CFDF FFE7          	movff	indf2,indf1
 18021                           
 18022                           ; BSR set to: 0
 18023  004BFC  2BC7               	incf	_cdc_rx_len& (0+255),f,b
 18024  004BFE                     l1928:
 18025                           
 18026                           ; BSR set to: 0
 18027                           
 18028                           ; BSR set to: 0
 18029  004BFE  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18030  004C00  5DC7               	subwf	_cdc_rx_len& (0+255),w,b
 18031  004C02  A0D8               	btfss	status,0,c
 18032  004C04  D7E9               	goto	l1929
 18033                           
 18034                           ; BSR set to: 0
 18035                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18036                           
 18037                           ; BSR set to: 0
 18038  004C06  0E00               	movlw	0
 18039  004C08  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18040  004C0A  0E00               	movlw	low _cdc_data_rx
 18041  004C0C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18042  004C0E  0E05               	movlw	high _cdc_data_rx
 18043  004C10  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18044  004C12  0E40               	movlw	64
 18045  004C14  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18046  004C16  0E02               	movlw	2
 18047  004C18  EC91  F020         	call	_USBTransferOnePacket
 18048  004C1C  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18049  004C20  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18050  004C24                     l1924:
 18051                           
 18052                           ;usb_device_cdc.c: 513: }
 18053                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18054  004C24  0100               	movlb	0	; () banked
 18055  004C26  51C7               	movf	_cdc_rx_len& (0+255),w,b
 18056  004C28  0012               	return	
 18057  004C2A                     __end_of_getsUSBUSART:
 18058                           	opt stack 0
 18059                           tosu	equ	0xFFF
 18060                           tosh	equ	0xFFE
 18061                           tosl	equ	0xFFD
 18062                           pclath	equ	0xFFA
 18063                           tblptru	equ	0xFF8
 18064                           tblptrh	equ	0xFF7
 18065                           tblptrl	equ	0xFF6
 18066                           tablat	equ	0xFF5
 18067                           prodh	equ	0xFF4
 18068                           prodl	equ	0xFF3
 18069                           intcon	equ	0xFF2
 18070                           intcon2	equ	0xFF1
 18071                           intcon3	equ	0xFF0
 18072                           indf0	equ	0xFEF
 18073                           postinc0	equ	0xFEE
 18074                           plusw0	equ	0xFEB
 18075                           fsr0h	equ	0xFEA
 18076                           fsr0l	equ	0xFE9
 18077                           wreg	equ	0xFE8
 18078                           indf1	equ	0xFE7
 18079                           postinc1	equ	0xFE6
 18080                           postdec1	equ	0xFE5
 18081                           fsr1h	equ	0xFE2
 18082                           fsr1l	equ	0xFE1
 18083                           indf2	equ	0xFDF
 18084                           postinc2	equ	0xFDE
 18085                           postdec2	equ	0xFDD
 18086                           plusw2	equ	0xFDB
 18087                           fsr2h	equ	0xFDA
 18088                           fsr2l	equ	0xFD9
 18089                           status	equ	0xFD8
 18090                           
 18091 ;; *************** function _USBTransferOnePacket *****************
 18092 ;; Defined at:
 18093 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  ep              1    wreg     unsigned char 
 18096 ;;  dir             1   29[BANK0 ] unsigned char 
 18097 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18098 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18099 ;;  len             1   32[BANK0 ] unsigned char 
 18100 ;; Auto vars:     Size  Location     Type
 18101 ;;  ep              1   33[BANK0 ] unsigned char 
 18102 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18103 ;;		 -> NULL(0), BDT(48), 
 18104 ;; Return value:  Size  Location     Type
 18105 ;;                  2   29[BANK0 ] PTR void 
 18106 ;; Registers used:
 18107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18108 ;; Tracked objects:
 18109 ;;		On entry : 0/0
 18110 ;;		On exit  : 0/0
 18111 ;;		Unchanged: 0/0
 18112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18114 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18116 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;Total ram usage:        7 bytes
 18118 ;; Hardware stack levels used:    1
 18119 ;; Hardware stack levels required when called:   11
 18120 ;; This function calls:
 18121 ;;		Nothing
 18122 ;; This function is called by:
 18123 ;;		_CDCInitEP
 18124 ;;		_getsUSBUSART
 18125 ;;		_CDCTxService
 18126 ;;		_USBCDCEventHandler
 18127 ;; This function uses a non-reentrant model
 18128 ;;
 18129                           
 18130                           	psect	text75
 18131  004122                     __ptext75:
 18132                           	opt stack 0
 18133  004122                     _USBTransferOnePacket:
 18134                           	opt stack 13
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;incstack = 0
 18138                           ;USBTransferOnePacket@ep stored from wreg
 18139  004122  0100               	movlb	0	; () banked
 18140  004124  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18141                           
 18142                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18143                           ;usb_device.c: 1018: if(dir != 0)
 18144  004126  0100               	movlb	0	; () banked
 18145  004128  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18146  00412A  B4D8               	btfsc	status,2,c
 18147  00412C  D007               	goto	l1648
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;usb_device.c: 1019: {
 18151                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18152  00412E  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18153  004130  0D02               	mullw	2
 18154  004132  0EB6               	movlw	low _pBDTEntryIn
 18155  004134  24F3               	addwf	prodl,w,c
 18156  004136  6ED9               	movwf	fsr2l,c
 18157  004138  0E00               	movlw	high _pBDTEntryIn
 18158  00413A  D006               	goto	L16
 18159  00413C                     l1648:
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;usb_device.c: 1023: else
 18163                           ;usb_device.c: 1024: {
 18164                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18165                           
 18166                           ; BSR set to: 0
 18167  00413C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18168  00413E  0D02               	mullw	2
 18169  004140  0E06               	movlw	low _pBDTEntryOut
 18170  004142  24F3               	addwf	prodl,w,c
 18171  004144  6ED9               	movwf	fsr2l,c
 18172  004146  0E03               	movlw	high _pBDTEntryOut
 18173  004148                     L16:
 18174  004148  20F4               	addwfc	prodh,w,c
 18175  00414A  6EDA               	movwf	fsr2h,c
 18176  00414C  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18177  004150  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;usb_device.c: 1027: }
 18181                           ;usb_device.c: 1031: if(handle == 0)
 18182                           
 18183                           ; BSR set to: 0
 18184  004154  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18185  004156  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18186  004158  A4D8               	btfss	status,2,c
 18187  00415A  D005               	goto	l1650
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;usb_device.c: 1032: {
 18191                           ;usb_device.c: 1033: return 0;
 18192  00415C  0E00               	movlw	0
 18193  00415E  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18194  004160  0E00               	movlw	0
 18195  004162  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18196                           
 18197                           ; BSR set to: 0
 18198  004164  0012               	return	
 18199  004166                     l1650:
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;usb_device.c: 1034: }
 18203                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18204                           
 18205                           ; BSR set to: 0
 18206  004166  EE20 F002          	lfsr	2,2
 18207  00416A  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18208  00416C  26D9               	addwf	fsr2l,f,c
 18209  00416E  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18210  004170  22DA               	addwfc	fsr2h,f,c
 18211  004172  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18212  004176  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18213                           
 18214                           ;usb_device.c: 1048: handle->CNT = len;
 18215  00417A  EE20 F001          	lfsr	2,1
 18216  00417E  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18217  004180  26D9               	addwf	fsr2l,f,c
 18218  004182  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18219  004184  22DA               	addwfc	fsr2h,f,c
 18220  004186  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18224  00418A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18225  00418E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18226  004192  0E40               	movlw	64
 18227  004194  16DF               	andwf	indf2,f,c
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18231  004196  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18232  00419A  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18233  00419E  0E00               	movlw	0
 18234  0041A0  86DB               	bsf	plusw2,3,c
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18238  0041A2  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18239  0041A6  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18240  0041AA  0E00               	movlw	0
 18241  0041AC  8EDB               	bsf	plusw2,7,c
 18242                           
 18243                           ; BSR set to: 0
 18244                           ;usb_device.c: 1054: if(dir != 0)
 18245  0041AE  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18246  0041B0  B4D8               	btfsc	status,2,c
 18247  0041B2  D007               	goto	l1652
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;usb_device.c: 1055: {
 18251                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18252  0041B4  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18253  0041B6  0D02               	mullw	2
 18254  0041B8  0EB6               	movlw	low _pBDTEntryIn
 18255  0041BA  24F3               	addwf	prodl,w,c
 18256  0041BC  6ED9               	movwf	fsr2l,c
 18257  0041BE  0E00               	movlw	high _pBDTEntryIn
 18258  0041C0  D006               	goto	L17
 18259  0041C2                     l1652:
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;usb_device.c: 1059: else
 18263                           ;usb_device.c: 1060: {
 18264                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18265                           
 18266                           ; BSR set to: 0
 18267  0041C2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18268  0041C4  0D02               	mullw	2
 18269  0041C6  0E06               	movlw	low _pBDTEntryOut
 18270  0041C8  24F3               	addwf	prodl,w,c
 18271  0041CA  6ED9               	movwf	fsr2l,c
 18272  0041CC  0E03               	movlw	high _pBDTEntryOut
 18273  0041CE                     L17:
 18274  0041CE  20F4               	addwfc	prodh,w,c
 18275  0041D0  6EDA               	movwf	fsr2h,c
 18276  0041D2  0E04               	movlw	4
 18277  0041D4  1ADF               	xorwf	indf2,f,c
 18278                           
 18279                           ; BSR set to: 0
 18280                           ;usb_device.c: 1063: }
 18281                           ;usb_device.c: 1064: return (void*)handle;
 18282                           
 18283                           ; BSR set to: 0
 18284  0041D6  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18285  0041DA  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18286  0041DE  0012               	return	
 18287  0041E0                     __end_of_USBTransferOnePacket:
 18288                           	opt stack 0
 18289                           tosu	equ	0xFFF
 18290                           tosh	equ	0xFFE
 18291                           tosl	equ	0xFFD
 18292                           pclath	equ	0xFFA
 18293                           tblptru	equ	0xFF8
 18294                           tblptrh	equ	0xFF7
 18295                           tblptrl	equ	0xFF6
 18296                           tablat	equ	0xFF5
 18297                           prodh	equ	0xFF4
 18298                           prodl	equ	0xFF3
 18299                           intcon	equ	0xFF2
 18300                           intcon2	equ	0xFF1
 18301                           intcon3	equ	0xFF0
 18302                           indf0	equ	0xFEF
 18303                           postinc0	equ	0xFEE
 18304                           plusw0	equ	0xFEB
 18305                           fsr0h	equ	0xFEA
 18306                           fsr0l	equ	0xFE9
 18307                           wreg	equ	0xFE8
 18308                           indf1	equ	0xFE7
 18309                           postinc1	equ	0xFE6
 18310                           postdec1	equ	0xFE5
 18311                           fsr1h	equ	0xFE2
 18312                           fsr1l	equ	0xFE1
 18313                           indf2	equ	0xFDF
 18314                           postinc2	equ	0xFDE
 18315                           postdec2	equ	0xFDD
 18316                           plusw2	equ	0xFDB
 18317                           fsr2h	equ	0xFDA
 18318                           fsr2l	equ	0xFD9
 18319                           status	equ	0xFD8
 18320                           
 18321 ;; *************** function _atoi *****************
 18322 ;; Defined at:
 18323 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18324 ;; Parameters:    Size  Location     Type
 18325 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18326 ;;		 -> Terminal@Len(4), 
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;  a               2   40[BANK0 ] int 
 18329 ;;  sign            1   39[BANK0 ] unsigned char 
 18330 ;; Return value:  Size  Location     Type
 18331 ;;                  2   35[BANK0 ] int 
 18332 ;; Registers used:
 18333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18334 ;; Tracked objects:
 18335 ;;		On entry : 0/0
 18336 ;;		On exit  : 0/0
 18337 ;;		Unchanged: 0/0
 18338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18340 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18342 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18343 ;;Total ram usage:        7 bytes
 18344 ;; Hardware stack levels used:    1
 18345 ;; Hardware stack levels required when called:   12
 18346 ;; This function calls:
 18347 ;;		___wmul
 18348 ;;		_isdigit
 18349 ;; This function is called by:
 18350 ;;		_Terminal
 18351 ;; This function uses a non-reentrant model
 18352 ;;
 18353                           
 18354                           	psect	text76
 18355  003796                     __ptext76:
 18356                           	opt stack 0
 18357  003796                     _atoi:
 18358                           	opt stack 13
 18359                           
 18360                           ; BSR set to: 0
 18361                           ;incstack = 0
 18362  003796  D003               	goto	l3055
 18363  003798  0100               	movlb	0	; () banked
 18364  00379A  4B83               	infsnz	atoi@s& (0+255),f,b
 18365  00379C  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18366  00379E                     l3055:
 18367                           
 18368                           ; BSR set to: 0
 18369  00379E  C083  FFD9         	movff	atoi@s,fsr2l
 18370  0037A2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18371  0037A6  0E20               	movlw	32
 18372  0037A8  18DE               	xorwf	postinc2,w,c
 18373  0037AA  B4D8               	btfsc	status,2,c
 18374  0037AC  D7F5               	goto	l3056
 18375  0037AE  C083  FFD9         	movff	atoi@s,fsr2l
 18376  0037B2  C084  FFDA         	movff	atoi@s+1,fsr2h
 18377  0037B6  0E09               	movlw	9
 18378  0037B8  18DE               	xorwf	postinc2,w,c
 18379  0037BA  B4D8               	btfsc	status,2,c
 18380  0037BC  D7ED               	goto	l3056
 18381  0037BE  0E00               	movlw	0
 18382  0037C0  0100               	movlb	0	; () banked
 18383  0037C2  6F89               	movwf	(atoi@a+1)& (0+255),b
 18384  0037C4  0E00               	movlw	0
 18385  0037C6  6F88               	movwf	atoi@a& (0+255),b
 18386  0037C8  0E00               	movlw	0
 18387  0037CA  6F87               	movwf	atoi@sign& (0+255),b
 18388                           
 18389                           ; BSR set to: 0
 18390  0037CC  C083  FFD9         	movff	atoi@s,fsr2l
 18391  0037D0  C084  FFDA         	movff	atoi@s+1,fsr2h
 18392  0037D4  0E2D               	movlw	45
 18393  0037D6  18DE               	xorwf	postinc2,w,c
 18394  0037D8  A4D8               	btfss	status,2,c
 18395  0037DA  D002               	goto	l3058
 18396                           
 18397                           ; BSR set to: 0
 18398  0037DC  2B87               	incf	atoi@sign& (0+255),f,b
 18399  0037DE  D026               	goto	l13928
 18400  0037E0                     l3058:
 18401                           
 18402                           ; BSR set to: 0
 18403                           
 18404                           ; BSR set to: 0
 18405  0037E0  C083  FFD9         	movff	atoi@s,fsr2l
 18406  0037E4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18407  0037E8  0E2B               	movlw	43
 18408  0037EA  18DE               	xorwf	postinc2,w,c
 18409  0037EC  A4D8               	btfss	status,2,c
 18410  0037EE  D020               	goto	l3061
 18411  0037F0  D01D               	goto	l13928
 18412  0037F2                     
 18413                           ; BSR set to: 0
 18414  0037F2  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18415  0037F6  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18416  0037FA  0E00               	movlw	0
 18417  0037FC  0100               	movlb	0	; () banked
 18418  0037FE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18419  003800  0E0A               	movlw	10
 18420  003802  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18421  003804  ECE9  F032         	call	___wmul	;wreg free
 18422  003808  C083  FFD9         	movff	atoi@s,fsr2l
 18423  00380C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18424  003810  50DF               	movf	indf2,w,c
 18425  003812  0100               	movlb	0	; () banked
 18426  003814  6F85               	movwf	??_atoi& (0+255),b
 18427  003816  6B86               	clrf	(??_atoi+1)& (0+255),b
 18428  003818  517D               	movf	?___wmul& (0+255),w,b
 18429  00381A  2785               	addwf	??_atoi& (0+255),f,b
 18430  00381C  517E               	movf	(?___wmul+1)& (0+255),w,b
 18431  00381E  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18432  003820  0ED0               	movlw	208
 18433  003822  2585               	addwf	??_atoi& (0+255),w,b
 18434  003824  6F88               	movwf	atoi@a& (0+255),b
 18435  003826  0EFF               	movlw	255
 18436  003828  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18437  00382A  6F89               	movwf	(atoi@a+1)& (0+255),b
 18438  00382C                     l13928:
 18439                           
 18440                           ; BSR set to: 0
 18441  00382C  4B83               	infsnz	atoi@s& (0+255),f,b
 18442  00382E  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18443  003830                     l3061:
 18444                           
 18445                           ; BSR set to: 0
 18446                           
 18447                           ; BSR set to: 0
 18448  003830  C083  FFD9         	movff	atoi@s,fsr2l
 18449  003834  C084  FFDA         	movff	atoi@s+1,fsr2h
 18450  003838  50DF               	movf	indf2,w,c
 18451  00383A  EC9C  F033         	call	_isdigit
 18452  00383E  B0D8               	btfsc	status,0,c
 18453  003840  D7D8               	goto	l3062
 18454  003842  0100               	movlb	0	; () banked
 18455  003844  5187               	movf	atoi@sign& (0+255),w,b
 18456  003846  B4D8               	btfsc	status,2,c
 18457  003848  D00D               	goto	l3064
 18458                           
 18459                           ; BSR set to: 0
 18460  00384A  C088  F085         	movff	atoi@a,??_atoi
 18461  00384E  C089  F086         	movff	atoi@a+1,??_atoi+1
 18462  003852  1F85               	comf	??_atoi& (0+255),f,b
 18463  003854  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18464  003856  4B85               	infsnz	??_atoi& (0+255),f,b
 18465  003858  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18466  00385A  C085  F083         	movff	??_atoi,?_atoi
 18467  00385E  C086  F084         	movff	??_atoi+1,?_atoi+1
 18468  003862  0012               	return	
 18469  003864                     l3064:
 18470                           
 18471                           ; BSR set to: 0
 18472  003864  C088  F083         	movff	atoi@a,?_atoi
 18473  003868  C089  F084         	movff	atoi@a+1,?_atoi+1
 18474                           
 18475                           ; BSR set to: 0
 18476  00386C  0012               	return		;funcret
 18477  00386E                     __end_of_atoi:
 18478                           	opt stack 0
 18479                           tosu	equ	0xFFF
 18480                           tosh	equ	0xFFE
 18481                           tosl	equ	0xFFD
 18482                           pclath	equ	0xFFA
 18483                           tblptru	equ	0xFF8
 18484                           tblptrh	equ	0xFF7
 18485                           tblptrl	equ	0xFF6
 18486                           tablat	equ	0xFF5
 18487                           prodh	equ	0xFF4
 18488                           prodl	equ	0xFF3
 18489                           intcon	equ	0xFF2
 18490                           intcon2	equ	0xFF1
 18491                           intcon3	equ	0xFF0
 18492                           indf0	equ	0xFEF
 18493                           postinc0	equ	0xFEE
 18494                           plusw0	equ	0xFEB
 18495                           fsr0h	equ	0xFEA
 18496                           fsr0l	equ	0xFE9
 18497                           wreg	equ	0xFE8
 18498                           indf1	equ	0xFE7
 18499                           postinc1	equ	0xFE6
 18500                           postdec1	equ	0xFE5
 18501                           fsr1h	equ	0xFE2
 18502                           fsr1l	equ	0xFE1
 18503                           indf2	equ	0xFDF
 18504                           postinc2	equ	0xFDE
 18505                           postdec2	equ	0xFDD
 18506                           plusw2	equ	0xFDB
 18507                           fsr2h	equ	0xFDA
 18508                           fsr2l	equ	0xFD9
 18509                           status	equ	0xFD8
 18510                           
 18511 ;; *************** function _isdigit *****************
 18512 ;; Defined at:
 18513 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18514 ;; Parameters:    Size  Location     Type
 18515 ;;  c               1    wreg     unsigned char 
 18516 ;; Auto vars:     Size  Location     Type
 18517 ;;  c               1   31[BANK0 ] unsigned char 
 18518 ;; Return value:  Size  Location     Type
 18519 ;;		None               void
 18520 ;; Registers used:
 18521 ;;		wreg, status,2, status,0
 18522 ;; Tracked objects:
 18523 ;;		On entry : 0/0
 18524 ;;		On exit  : 0/0
 18525 ;;		Unchanged: 0/0
 18526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18530 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18531 ;;Total ram usage:        3 bytes
 18532 ;; Hardware stack levels used:    1
 18533 ;; Hardware stack levels required when called:   11
 18534 ;; This function calls:
 18535 ;;		Nothing
 18536 ;; This function is called by:
 18537 ;;		_atoi
 18538 ;;		_strtol
 18539 ;;		_xtoi
 18540 ;;		_isxdigit
 18541 ;; This function uses a non-reentrant model
 18542 ;;
 18543                           
 18544                           	psect	text77
 18545  006738                     __ptext77:
 18546                           	opt stack 0
 18547  006738                     _isdigit:
 18548                           	opt stack 12
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;incstack = 0
 18552                           ;isdigit@c stored from wreg
 18553  006738  0100               	movlb	0	; () banked
 18554  00673A  6F7F               	movwf	isdigit@c& (0+255),b
 18555  00673C  0E00               	movlw	0
 18556  00673E  0100               	movlb	0	; () banked
 18557  006740  6F7E               	movwf	_isdigit$6404& (0+255),b
 18558                           
 18559                           ; BSR set to: 0
 18560  006742  0E3A               	movlw	58
 18561  006744  617F               	cpfslt	isdigit@c& (0+255),b
 18562  006746  D005               	goto	l3236
 18563                           
 18564                           ; BSR set to: 0
 18565  006748  0E2F               	movlw	47
 18566  00674A  657F               	cpfsgt	isdigit@c& (0+255),b
 18567  00674C  D002               	goto	l3236
 18568                           
 18569                           ; BSR set to: 0
 18570  00674E  0E01               	movlw	1
 18571  006750  6F7E               	movwf	_isdigit$6404& (0+255),b
 18572  006752                     l3236:
 18573                           
 18574                           ; BSR set to: 0
 18575                           
 18576                           ; BSR set to: 0
 18577  006752  C07E  F07D         	movff	_isdigit$6404,??_isdigit
 18578  006756  317D               	rrcf	??_isdigit& (0+255),w,b
 18579  006758  0012               	return	
 18580  00675A                     __end_of_isdigit:
 18581                           	opt stack 0
 18582                           tosu	equ	0xFFF
 18583                           tosh	equ	0xFFE
 18584                           tosl	equ	0xFFD
 18585                           pclath	equ	0xFFA
 18586                           tblptru	equ	0xFF8
 18587                           tblptrh	equ	0xFF7
 18588                           tblptrl	equ	0xFF6
 18589                           tablat	equ	0xFF5
 18590                           prodh	equ	0xFF4
 18591                           prodl	equ	0xFF3
 18592                           intcon	equ	0xFF2
 18593                           intcon2	equ	0xFF1
 18594                           intcon3	equ	0xFF0
 18595                           indf0	equ	0xFEF
 18596                           postinc0	equ	0xFEE
 18597                           plusw0	equ	0xFEB
 18598                           fsr0h	equ	0xFEA
 18599                           fsr0l	equ	0xFE9
 18600                           wreg	equ	0xFE8
 18601                           indf1	equ	0xFE7
 18602                           postinc1	equ	0xFE6
 18603                           postdec1	equ	0xFE5
 18604                           fsr1h	equ	0xFE2
 18605                           fsr1l	equ	0xFE1
 18606                           indf2	equ	0xFDF
 18607                           postinc2	equ	0xFDE
 18608                           postdec2	equ	0xFDD
 18609                           plusw2	equ	0xFDB
 18610                           fsr2h	equ	0xFDA
 18611                           fsr2l	equ	0xFD9
 18612                           status	equ	0xFD8
 18613                           
 18614 ;; *************** function _Rtcm_SetRtccDate *****************
 18615 ;; Defined at:
 18616 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;		None
 18621 ;; Return value:  Size  Location     Type
 18622 ;;                  1    wreg      void 
 18623 ;; Registers used:
 18624 ;;		wreg, status,2, status,0, cstack
 18625 ;; Tracked objects:
 18626 ;;		On entry : 0/0
 18627 ;;		On exit  : 0/0
 18628 ;;		Unchanged: 0/0
 18629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18630 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18633 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18634 ;;Total ram usage:        8 bytes
 18635 ;; Hardware stack levels used:    1
 18636 ;; Hardware stack levels required when called:   13
 18637 ;; This function calls:
 18638 ;;		_Rtcc_LockRtc
 18639 ;;		_Rtcc_SetRtccValue
 18640 ;;		_Rtcc_UnlockRtc
 18641 ;; This function is called by:
 18642 ;;		_Rtcm_MainTask
 18643 ;; This function uses a non-reentrant model
 18644 ;;
 18645                           
 18646                           	psect	text78
 18647  0059F4                     __ptext78:
 18648                           	opt stack 0
 18649  0059F4                     _Rtcm_SetRtccDate:
 18650                           	opt stack 14
 18651                           
 18652                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;incstack = 0
 18656  0059F4  ECE0  F034         	call	_Rtcc_UnlockRtc	;wreg free
 18657                           
 18658                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18659  0059F8  0100               	movlb	0	; () banked
 18660  0059FA  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18661  0059FC  0F30               	addlw	48
 18662  0059FE  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18663  005A00  0E00               	movlw	0
 18664  005A02  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18665                           
 18666                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18667  005A06  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18668  005A0A  0E01               	movlw	1
 18669  005A0C  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18670                           
 18671                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18672  005A10  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18673  005A14  0E02               	movlw	2
 18674  005A16  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18675                           
 18676                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18677  005A1A  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18678  005A1E  0E03               	movlw	3
 18679  005A20  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18680                           
 18681                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18682  005A24  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18683  005A28  0E04               	movlw	4
 18684  005A2A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18685                           
 18686                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18687  005A2E  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18688  005A32  0E05               	movlw	5
 18689  005A34  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18690                           
 18691                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18692  005A38  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18693  005A3C  0E06               	movlw	6
 18694  005A3E  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18695                           
 18696                           ;rtcm.c: 191: Rtcc_LockRtc();
 18697  005A42  ECE8  F034         	call	_Rtcc_LockRtc	;wreg free
 18698  005A46  0012               	return		;funcret
 18699  005A48                     __end_of_Rtcm_SetRtccDate:
 18700                           	opt stack 0
 18701                           tosu	equ	0xFFF
 18702                           tosh	equ	0xFFE
 18703                           tosl	equ	0xFFD
 18704                           pclath	equ	0xFFA
 18705                           tblptru	equ	0xFF8
 18706                           tblptrh	equ	0xFF7
 18707                           tblptrl	equ	0xFF6
 18708                           tablat	equ	0xFF5
 18709                           prodh	equ	0xFF4
 18710                           prodl	equ	0xFF3
 18711                           intcon	equ	0xFF2
 18712                           intcon2	equ	0xFF1
 18713                           intcon3	equ	0xFF0
 18714                           indf0	equ	0xFEF
 18715                           postinc0	equ	0xFEE
 18716                           plusw0	equ	0xFEB
 18717                           fsr0h	equ	0xFEA
 18718                           fsr0l	equ	0xFE9
 18719                           wreg	equ	0xFE8
 18720                           indf1	equ	0xFE7
 18721                           postinc1	equ	0xFE6
 18722                           postdec1	equ	0xFE5
 18723                           fsr1h	equ	0xFE2
 18724                           fsr1l	equ	0xFE1
 18725                           indf2	equ	0xFDF
 18726                           postinc2	equ	0xFDE
 18727                           postdec2	equ	0xFDD
 18728                           plusw2	equ	0xFDB
 18729                           fsr2h	equ	0xFDA
 18730                           fsr2l	equ	0xFD9
 18731                           status	equ	0xFD8
 18732                           
 18733 ;; *************** function _Rtcc_UnlockRtc *****************
 18734 ;; Defined at:
 18735 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18736 ;; Parameters:    Size  Location     Type
 18737 ;;		None
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;		None
 18740 ;; Return value:  Size  Location     Type
 18741 ;;                  1    wreg      void 
 18742 ;; Registers used:
 18743 ;;		None
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/0
 18746 ;;		On exit  : 0/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;Total ram usage:        0 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; Hardware stack levels required when called:   11
 18756 ;; This function calls:
 18757 ;;		Nothing
 18758 ;; This function is called by:
 18759 ;;		_Rtcm_MainTask
 18760 ;;		_Rtcm_SetRtccDate
 18761 ;;		_Rtcm_SetRtccAlarm
 18762 ;; This function uses a non-reentrant model
 18763 ;;
 18764                           
 18765                           	psect	text79
 18766  0069C0                     __ptext79:
 18767                           	opt stack 0
 18768  0069C0                     _Rtcc_UnlockRtc:
 18769                           	opt stack 15
 18770                           
 18771                           ;incstack = 0
 18772  0069C0  010F               	movlb	15	;# 
 18773  0069C2  0E55               	movlw	85	;# 
 18774  0069C4  6EA7               	movwf	4007,c	;# 
 18775  0069C6  0EAA               	movlw	170	;# 
 18776  0069C8  6EA7               	movwf	4007,c	;# 
 18777                           
 18778                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18779  0069CA  010F               	movlb	15	; () banked
 18780  0069CC  8B3F               	bsf	63,5,b	;volatile
 18781                           
 18782                           ; BSR set to: 15
 18783  0069CE  0012               	return		;funcret
 18784  0069D0                     __end_of_Rtcc_UnlockRtc:
 18785                           	opt stack 0
 18786                           tosu	equ	0xFFF
 18787                           tosh	equ	0xFFE
 18788                           tosl	equ	0xFFD
 18789                           pclath	equ	0xFFA
 18790                           tblptru	equ	0xFF8
 18791                           tblptrh	equ	0xFF7
 18792                           tblptrl	equ	0xFF6
 18793                           tablat	equ	0xFF5
 18794                           prodh	equ	0xFF4
 18795                           prodl	equ	0xFF3
 18796                           intcon	equ	0xFF2
 18797                           intcon2	equ	0xFF1
 18798                           intcon3	equ	0xFF0
 18799                           indf0	equ	0xFEF
 18800                           postinc0	equ	0xFEE
 18801                           plusw0	equ	0xFEB
 18802                           fsr0h	equ	0xFEA
 18803                           fsr0l	equ	0xFE9
 18804                           wreg	equ	0xFE8
 18805                           indf1	equ	0xFE7
 18806                           postinc1	equ	0xFE6
 18807                           postdec1	equ	0xFE5
 18808                           fsr1h	equ	0xFE2
 18809                           fsr1l	equ	0xFE1
 18810                           indf2	equ	0xFDF
 18811                           postinc2	equ	0xFDE
 18812                           postdec2	equ	0xFDD
 18813                           plusw2	equ	0xFDB
 18814                           fsr2h	equ	0xFDA
 18815                           fsr2l	equ	0xFD9
 18816                           status	equ	0xFD8
 18817                           
 18818 ;; *************** function _Rtcc_SetRtccValue *****************
 18819 ;; Defined at:
 18820 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18821 ;; Parameters:    Size  Location     Type
 18822 ;;  RtccPtrVal      1    wreg     enum E7757
 18823 ;;  Value           1   37[BANK0 ] unsigned char 
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18826 ;; Return value:  Size  Location     Type
 18827 ;;                  1    wreg      void 
 18828 ;; Registers used:
 18829 ;;		wreg, status,2, status,0, cstack
 18830 ;; Tracked objects:
 18831 ;;		On entry : 0/0
 18832 ;;		On exit  : 0/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18835 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;Total ram usage:        4 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:   12
 18842 ;; This function calls:
 18843 ;;		___awdiv
 18844 ;;		___awmod
 18845 ;; This function is called by:
 18846 ;;		_Rtcm_SetRtccDate
 18847 ;; This function uses a non-reentrant model
 18848 ;;
 18849                           
 18850                           	psect	text80
 18851  0015EE                     __ptext80:
 18852                           	opt stack 0
 18853  0015EE                     _Rtcc_SetRtccValue:
 18854                           	opt stack 14
 18855                           
 18856                           ; BSR set to: 15
 18857                           ;incstack = 0
 18858                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18859  0015EE  0100               	movlb	0	; () banked
 18860  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18861                           
 18862                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18863  0015F2  D0FC               	goto	l441
 18864  0015F4                     l442:
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18868  0015F4  010F               	movlb	15	; () banked
 18869  0015F6  833F               	bsf	63,1,b	;volatile
 18870                           
 18871                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18872  0015F8  813F               	bsf	63,0,b	;volatile
 18873                           
 18874                           ; BSR set to: 15
 18875                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18876  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18877  0015FE  0100               	movlb	0	; () banked
 18878  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18879  001602  0E00               	movlw	0
 18880  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18881  001606  0E0A               	movlw	10
 18882  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18883  00160A  EC83  F029         	call	___awmod	;wreg free
 18884  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18885  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18886  001616  0E0F               	movlw	15
 18887  001618  0100               	movlb	0	; () banked
 18888  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18889  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18890  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18891  001622  0E00               	movlw	0
 18892  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18893  001626  0E0A               	movlw	10
 18894  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18895  00162A  EC0E  F028         	call	___awdiv	;wreg free
 18896  00162E  0100               	movlb	0	; () banked
 18897  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18898  001632  0BF0               	andlw	240
 18899  001634  0BF0               	andlw	240
 18900  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18901  001638  6E98               	movwf	3992,c	;volatile
 18902                           
 18903                           ;rtcc_drv.c: 393: break;
 18904  00163A  0012               	return	
 18905  00163C                     l444:
 18906                           
 18907                           ; BSR set to: 0
 18908                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18909  00163C  010F               	movlb	15	; () banked
 18910  00163E  833F               	bsf	63,1,b	;volatile
 18911                           
 18912                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18913  001640  913F               	bcf	63,0,b	;volatile
 18914                           
 18915                           ; BSR set to: 15
 18916                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18917  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18918  001646  0100               	movlb	0	; () banked
 18919  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18920  00164A  0E00               	movlw	0
 18921  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18922  00164E  0E0A               	movlw	10
 18923  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18924  001652  EC83  F029         	call	___awmod	;wreg free
 18925  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18926  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18927  00165E  0E0F               	movlw	15
 18928  001660  0100               	movlb	0	; () banked
 18929  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18930  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18931  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18932  00166A  0E00               	movlw	0
 18933  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18934  00166E  0E0A               	movlw	10
 18935  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18936  001672  EC0E  F028         	call	___awdiv	;wreg free
 18937  001676  0100               	movlb	0	; () banked
 18938  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18939  00167A  0BF0               	andlw	240
 18940  00167C  0BF0               	andlw	240
 18941  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18942  001680  6E99               	movwf	3993,c	;volatile
 18943                           
 18944                           ;rtcc_drv.c: 401: break;
 18945  001682  0012               	return	
 18946  001684                     l445:
 18947                           
 18948                           ; BSR set to: 0
 18949                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18950  001684  010F               	movlb	15	; () banked
 18951  001686  833F               	bsf	63,1,b	;volatile
 18952                           
 18953                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18954  001688  913F               	bcf	63,0,b	;volatile
 18955                           
 18956                           ; BSR set to: 15
 18957                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18958  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18959  00168E  0100               	movlb	0	; () banked
 18960  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18961  001692  0E00               	movlw	0
 18962  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18963  001696  0E0A               	movlw	10
 18964  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18965  00169A  EC83  F029         	call	___awmod	;wreg free
 18966  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18967  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18968  0016A6  0E0F               	movlw	15
 18969  0016A8  0100               	movlb	0	; () banked
 18970  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18971  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18972  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18973  0016B2  0E00               	movlw	0
 18974  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18975  0016B6  0E0A               	movlw	10
 18976  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18977  0016BA  EC0E  F028         	call	___awdiv	;wreg free
 18978  0016BE  0100               	movlb	0	; () banked
 18979  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18980  0016C2  0BF0               	andlw	240
 18981  0016C4  0BF0               	andlw	240
 18982  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18983  0016C8  6E98               	movwf	3992,c	;volatile
 18984                           
 18985                           ;rtcc_drv.c: 409: break;
 18986  0016CA  0012               	return	
 18987  0016CC                     l446:
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18991  0016CC  010F               	movlb	15	; () banked
 18992  0016CE  933F               	bcf	63,1,b	;volatile
 18993                           
 18994                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18995  0016D0  813F               	bsf	63,0,b	;volatile
 18996                           
 18997                           ; BSR set to: 15
 18998                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18999  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19000  0016D6  0100               	movlb	0	; () banked
 19001  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19002  0016DA  0E00               	movlw	0
 19003  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19004  0016DE  0E0A               	movlw	10
 19005  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 19006  0016E2  EC83  F029         	call	___awmod	;wreg free
 19007  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19008  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19009  0016EE  0E0F               	movlw	15
 19010  0016F0  0100               	movlb	0	; () banked
 19011  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19012  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19013  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19014  0016FA  0E00               	movlw	0
 19015  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19016  0016FE  0E0A               	movlw	10
 19017  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19018  001702  EC0E  F028         	call	___awdiv	;wreg free
 19019  001706  0100               	movlb	0	; () banked
 19020  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19021  00170A  0BF0               	andlw	240
 19022  00170C  0BF0               	andlw	240
 19023  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19024  001710  6E99               	movwf	3993,c	;volatile
 19025                           
 19026                           ;rtcc_drv.c: 417: break;
 19027  001712  0012               	return	
 19028  001714                     l447:
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19032  001714  010F               	movlb	15	; () banked
 19033  001716  933F               	bcf	63,1,b	;volatile
 19034                           
 19035                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19036  001718  813F               	bsf	63,0,b	;volatile
 19037                           
 19038                           ; BSR set to: 15
 19039                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19040  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19041  00171E  0100               	movlb	0	; () banked
 19042  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19043  001722  0E00               	movlw	0
 19044  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19045  001726  0E0A               	movlw	10
 19046  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19047  00172A  EC83  F029         	call	___awmod	;wreg free
 19048  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19049  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19050  001736  0E0F               	movlw	15
 19051  001738  0100               	movlb	0	; () banked
 19052  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19053  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19054  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19055  001742  0E00               	movlw	0
 19056  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19057  001746  0E0A               	movlw	10
 19058  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19059  00174A  EC0E  F028         	call	___awdiv	;wreg free
 19060  00174E  0100               	movlb	0	; () banked
 19061  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19062  001752  0BF0               	andlw	240
 19063  001754  0BF0               	andlw	240
 19064  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19065  001758  6E98               	movwf	3992,c	;volatile
 19066                           
 19067                           ;rtcc_drv.c: 425: break;
 19068  00175A  0012               	return	
 19069  00175C                     l448:
 19070                           
 19071                           ; BSR set to: 0
 19072                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19073  00175C  010F               	movlb	15	; () banked
 19074  00175E  933F               	bcf	63,1,b	;volatile
 19075                           
 19076                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19077  001760  913F               	bcf	63,0,b	;volatile
 19078                           
 19079                           ; BSR set to: 15
 19080                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19081  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19082  001766  0100               	movlb	0	; () banked
 19083  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19084  00176A  0E00               	movlw	0
 19085  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19086  00176E  0E0A               	movlw	10
 19087  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19088  001772  EC83  F029         	call	___awmod	;wreg free
 19089  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19090  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19091  00177E  0E0F               	movlw	15
 19092  001780  0100               	movlb	0	; () banked
 19093  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19094  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19095  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19096  00178A  0E00               	movlw	0
 19097  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19098  00178E  0E0A               	movlw	10
 19099  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19100  001792  EC0E  F028         	call	___awdiv	;wreg free
 19101  001796  0100               	movlb	0	; () banked
 19102  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19103  00179A  0BF0               	andlw	240
 19104  00179C  0BF0               	andlw	240
 19105  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19106  0017A0  6E99               	movwf	3993,c	;volatile
 19107                           
 19108                           ;rtcc_drv.c: 433: break;
 19109  0017A2  0012               	return	
 19110  0017A4                     l449:
 19111                           
 19112                           ; BSR set to: 0
 19113                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19114  0017A4  010F               	movlb	15	; () banked
 19115  0017A6  933F               	bcf	63,1,b	;volatile
 19116                           
 19117                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19118  0017A8  913F               	bcf	63,0,b	;volatile
 19119                           
 19120                           ; BSR set to: 15
 19121                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19122  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19123  0017AE  0100               	movlb	0	; () banked
 19124  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19125  0017B2  0E00               	movlw	0
 19126  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19127  0017B6  0E0A               	movlw	10
 19128  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19129  0017BA  EC83  F029         	call	___awmod	;wreg free
 19130  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19131  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19132  0017C6  0E0F               	movlw	15
 19133  0017C8  0100               	movlb	0	; () banked
 19134  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19135  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19136  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19137  0017D2  0E00               	movlw	0
 19138  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19139  0017D6  0E0A               	movlw	10
 19140  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19141  0017DA  EC0E  F028         	call	___awdiv	;wreg free
 19142  0017DE  0100               	movlb	0	; () banked
 19143  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19144  0017E2  0BF0               	andlw	240
 19145  0017E4  0BF0               	andlw	240
 19146  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19147  0017E8  6E98               	movwf	3992,c	;volatile
 19148                           
 19149                           ; BSR set to: 0
 19150                           ;rtcc_drv.c: 445: }
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;rtcc_drv.c: 444: break;
 19154                           
 19155                           ;rtcc_drv.c: 443: default:
 19156                           
 19157                           ;rtcc_drv.c: 441: break;
 19158  0017EA  0012               	return	
 19159  0017EC                     l441:
 19160                           
 19161                           ; BSR set to: 0
 19162  0017EC  0100               	movlb	0	; () banked
 19163  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19164                           
 19165                           ; Switch size 1, requested type "space"
 19166                           ; Number of cases is 7, Range of values is 0 to 6
 19167                           ; switch strategies available:
 19168                           ; Name         Instructions Cycles
 19169                           ; simple_byte           22    12 (average)
 19170                           ;	Chosen strategy is simple_byte
 19171  0017F0  0A00               	xorlw	0	; case 0
 19172  0017F2  B4D8               	btfsc	status,2,c
 19173  0017F4  D6FF               	goto	l442
 19174  0017F6  0A01               	xorlw	1	; case 1
 19175  0017F8  B4D8               	btfsc	status,2,c
 19176  0017FA  D720               	goto	l444
 19177  0017FC  0A03               	xorlw	3	; case 2
 19178  0017FE  B4D8               	btfsc	status,2,c
 19179  001800  D741               	goto	l445
 19180  001802  0A01               	xorlw	1	; case 3
 19181  001804  B4D8               	btfsc	status,2,c
 19182  001806  D762               	goto	l446
 19183  001808  0A07               	xorlw	7	; case 4
 19184  00180A  B4D8               	btfsc	status,2,c
 19185  00180C  D783               	goto	l447
 19186  00180E  0A01               	xorlw	1	; case 5
 19187  001810  B4D8               	btfsc	status,2,c
 19188  001812  D7A4               	goto	l448
 19189  001814  0A03               	xorlw	3	; case 6
 19190  001816  A4D8               	btfss	status,2,c
 19191  001818  0012               	return	
 19192  00181A  D7C4               	goto	l449
 19193  00181C                     __end_of_Rtcc_SetRtccValue:
 19194                           	opt stack 0
 19195                           tosu	equ	0xFFF
 19196                           tosh	equ	0xFFE
 19197                           tosl	equ	0xFFD
 19198                           pclath	equ	0xFFA
 19199                           tblptru	equ	0xFF8
 19200                           tblptrh	equ	0xFF7
 19201                           tblptrl	equ	0xFF6
 19202                           tablat	equ	0xFF5
 19203                           prodh	equ	0xFF4
 19204                           prodl	equ	0xFF3
 19205                           intcon	equ	0xFF2
 19206                           intcon2	equ	0xFF1
 19207                           intcon3	equ	0xFF0
 19208                           indf0	equ	0xFEF
 19209                           postinc0	equ	0xFEE
 19210                           plusw0	equ	0xFEB
 19211                           fsr0h	equ	0xFEA
 19212                           fsr0l	equ	0xFE9
 19213                           wreg	equ	0xFE8
 19214                           indf1	equ	0xFE7
 19215                           postinc1	equ	0xFE6
 19216                           postdec1	equ	0xFE5
 19217                           fsr1h	equ	0xFE2
 19218                           fsr1l	equ	0xFE1
 19219                           indf2	equ	0xFDF
 19220                           postinc2	equ	0xFDE
 19221                           postdec2	equ	0xFDD
 19222                           plusw2	equ	0xFDB
 19223                           fsr2h	equ	0xFDA
 19224                           fsr2l	equ	0xFD9
 19225                           status	equ	0xFD8
 19226                           
 19227 ;; *************** function ___awmod *****************
 19228 ;; Defined at:
 19229 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;  dividend        2   29[BANK0 ] int 
 19232 ;;  divisor         2   31[BANK0 ] int 
 19233 ;; Auto vars:     Size  Location     Type
 19234 ;;  sign            1   34[BANK0 ] unsigned char 
 19235 ;;  counter         1   33[BANK0 ] unsigned char 
 19236 ;; Return value:  Size  Location     Type
 19237 ;;                  2   29[BANK0 ] int 
 19238 ;; Registers used:
 19239 ;;		wreg, status,2, status,0
 19240 ;; Tracked objects:
 19241 ;;		On entry : 0/0
 19242 ;;		On exit  : 0/0
 19243 ;;		Unchanged: 0/0
 19244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19248 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;Total ram usage:        6 bytes
 19250 ;; Hardware stack levels used:    1
 19251 ;; Hardware stack levels required when called:   11
 19252 ;; This function calls:
 19253 ;;		Nothing
 19254 ;; This function is called by:
 19255 ;;		_Rtcc_SetRtccValue
 19256 ;;		_Rtcc_SetRtccAlarm
 19257 ;; This function uses a non-reentrant model
 19258 ;;
 19259                           
 19260                           	psect	text81
 19261  005306                     __ptext81:
 19262                           	opt stack 0
 19263  005306                     ___awmod:
 19264                           	opt stack 14
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;incstack = 0
 19268  005306  0E00               	movlw	0
 19269  005308  0100               	movlb	0	; () banked
 19270  00530A  6F82               	movwf	___awmod@sign& (0+255),b
 19271                           
 19272                           ; BSR set to: 0
 19273  00530C  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19274  00530E  D006               	goto	l3087
 19275                           
 19276                           ; BSR set to: 0
 19277  005310  6D7D               	negf	___awmod@dividend& (0+255),b
 19278  005312  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19279  005314  B0D8               	btfsc	status,0,c
 19280  005316  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19281                           
 19282                           ; BSR set to: 0
 19283  005318  0E01               	movlw	1
 19284  00531A  6F82               	movwf	___awmod@sign& (0+255),b
 19285  00531C                     l3087:
 19286                           
 19287                           ; BSR set to: 0
 19288                           
 19289                           ; BSR set to: 0
 19290  00531C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19291  00531E  D004               	goto	l3088
 19292                           
 19293                           ; BSR set to: 0
 19294  005320  6D7F               	negf	___awmod@divisor& (0+255),b
 19295  005322  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19296  005324  B0D8               	btfsc	status,0,c
 19297  005326  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19298  005328                     l3088:
 19299                           
 19300                           ; BSR set to: 0
 19301                           
 19302                           ; BSR set to: 0
 19303  005328  517F               	movf	___awmod@divisor& (0+255),w,b
 19304  00532A  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19305  00532C  B4D8               	btfsc	status,2,c
 19306  00532E  D018               	goto	l3095
 19307                           
 19308                           ; BSR set to: 0
 19309  005330  0E01               	movlw	1
 19310  005332  6F81               	movwf	___awmod@counter& (0+255),b
 19311  005334  D004               	goto	l3090
 19312  005336                     
 19313                           ; BSR set to: 0
 19314                           
 19315                           ; BSR set to: 0
 19316  005336  90D8               	bcf	status,0,c
 19317  005338  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19318  00533A  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19319  00533C  2B81               	incf	___awmod@counter& (0+255),f,b
 19320  00533E                     l3090:
 19321                           
 19322                           ; BSR set to: 0
 19323                           
 19324                           ; BSR set to: 0
 19325  00533E  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19326  005340  D7FA               	goto	l3091
 19327  005342                     u13290:
 19328                           
 19329                           ; BSR set to: 0
 19330                           
 19331                           ; BSR set to: 0
 19332                           
 19333                           ; BSR set to: 0
 19334  005342  517F               	movf	___awmod@divisor& (0+255),w,b
 19335  005344  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19336  005346  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19337  005348  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19338  00534A  A0D8               	btfss	status,0,c
 19339  00534C  D004               	goto	l3094
 19340                           
 19341                           ; BSR set to: 0
 19342  00534E  517F               	movf	___awmod@divisor& (0+255),w,b
 19343  005350  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19344  005352  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19345  005354  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19346  005356                     l3094:
 19347                           
 19348                           ; BSR set to: 0
 19349                           
 19350                           ; BSR set to: 0
 19351  005356  90D8               	bcf	status,0,c
 19352  005358  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19353  00535A  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19354                           
 19355                           ; BSR set to: 0
 19356  00535C  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19357  00535E  D7F1               	goto	u13290
 19358  005360                     l3095:
 19359                           
 19360                           ; BSR set to: 0
 19361                           
 19362                           ; BSR set to: 0
 19363                           
 19364                           ; BSR set to: 0
 19365  005360  5182               	movf	___awmod@sign& (0+255),w,b
 19366  005362  B4D8               	btfsc	status,2,c
 19367  005364  D004               	goto	l3096
 19368                           
 19369                           ; BSR set to: 0
 19370  005366  6D7D               	negf	___awmod@dividend& (0+255),b
 19371  005368  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19372  00536A  B0D8               	btfsc	status,0,c
 19373  00536C  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19374  00536E                     l3096:
 19375                           
 19376                           ; BSR set to: 0
 19377                           
 19378                           ; BSR set to: 0
 19379  00536E  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19380  005372  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19381  005376  0012               	return	
 19382  005378                     __end_of___awmod:
 19383                           	opt stack 0
 19384                           tosu	equ	0xFFF
 19385                           tosh	equ	0xFFE
 19386                           tosl	equ	0xFFD
 19387                           pclath	equ	0xFFA
 19388                           tblptru	equ	0xFF8
 19389                           tblptrh	equ	0xFF7
 19390                           tblptrl	equ	0xFF6
 19391                           tablat	equ	0xFF5
 19392                           prodh	equ	0xFF4
 19393                           prodl	equ	0xFF3
 19394                           intcon	equ	0xFF2
 19395                           intcon2	equ	0xFF1
 19396                           intcon3	equ	0xFF0
 19397                           indf0	equ	0xFEF
 19398                           postinc0	equ	0xFEE
 19399                           plusw0	equ	0xFEB
 19400                           fsr0h	equ	0xFEA
 19401                           fsr0l	equ	0xFE9
 19402                           wreg	equ	0xFE8
 19403                           indf1	equ	0xFE7
 19404                           postinc1	equ	0xFE6
 19405                           postdec1	equ	0xFE5
 19406                           fsr1h	equ	0xFE2
 19407                           fsr1l	equ	0xFE1
 19408                           indf2	equ	0xFDF
 19409                           postinc2	equ	0xFDE
 19410                           postdec2	equ	0xFDD
 19411                           plusw2	equ	0xFDB
 19412                           fsr2h	equ	0xFDA
 19413                           fsr2l	equ	0xFD9
 19414                           status	equ	0xFD8
 19415                           
 19416 ;; *************** function ___awdiv *****************
 19417 ;; Defined at:
 19418 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19419 ;; Parameters:    Size  Location     Type
 19420 ;;  dividend        2   29[BANK0 ] int 
 19421 ;;  divisor         2   31[BANK0 ] int 
 19422 ;; Auto vars:     Size  Location     Type
 19423 ;;  quotient        2   35[BANK0 ] int 
 19424 ;;  sign            1   34[BANK0 ] unsigned char 
 19425 ;;  counter         1   33[BANK0 ] unsigned char 
 19426 ;; Return value:  Size  Location     Type
 19427 ;;                  2   29[BANK0 ] int 
 19428 ;; Registers used:
 19429 ;;		wreg, status,2, status,0
 19430 ;; Tracked objects:
 19431 ;;		On entry : 0/0
 19432 ;;		On exit  : 0/0
 19433 ;;		Unchanged: 0/0
 19434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19435 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19436 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19438 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19439 ;;Total ram usage:        8 bytes
 19440 ;; Hardware stack levels used:    1
 19441 ;; Hardware stack levels required when called:   11
 19442 ;; This function calls:
 19443 ;;		Nothing
 19444 ;; This function is called by:
 19445 ;;		_Rtcc_SetRtccValue
 19446 ;;		_Rtcc_SetRtccAlarm
 19447 ;; This function uses a non-reentrant model
 19448 ;;
 19449                           
 19450                           	psect	text82
 19451  00501C                     __ptext82:
 19452                           	opt stack 0
 19453  00501C                     ___awdiv:
 19454                           	opt stack 14
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;incstack = 0
 19458  00501C  0E00               	movlw	0
 19459  00501E  0100               	movlb	0	; () banked
 19460  005020  6F82               	movwf	___awdiv@sign& (0+255),b
 19461                           
 19462                           ; BSR set to: 0
 19463  005022  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19464  005024  D006               	goto	l3074
 19465                           
 19466                           ; BSR set to: 0
 19467  005026  6D7F               	negf	___awdiv@divisor& (0+255),b
 19468  005028  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19469  00502A  B0D8               	btfsc	status,0,c
 19470  00502C  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19471                           
 19472                           ; BSR set to: 0
 19473  00502E  0E01               	movlw	1
 19474  005030  6F82               	movwf	___awdiv@sign& (0+255),b
 19475  005032                     l3074:
 19476                           
 19477                           ; BSR set to: 0
 19478                           
 19479                           ; BSR set to: 0
 19480  005032  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19481  005034  D006               	goto	l3075
 19482                           
 19483                           ; BSR set to: 0
 19484  005036  6D7D               	negf	___awdiv@dividend& (0+255),b
 19485  005038  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19486  00503A  B0D8               	btfsc	status,0,c
 19487  00503C  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19488                           
 19489                           ; BSR set to: 0
 19490  00503E  0E01               	movlw	1
 19491  005040  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19492  005042                     l3075:
 19493                           
 19494                           ; BSR set to: 0
 19495                           
 19496                           ; BSR set to: 0
 19497  005042  0E00               	movlw	0
 19498  005044  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19499  005046  0E00               	movlw	0
 19500  005048  6F83               	movwf	___awdiv@quotient& (0+255),b
 19501                           
 19502                           ; BSR set to: 0
 19503  00504A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19504  00504C  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19505  00504E  B4D8               	btfsc	status,2,c
 19506  005050  D01C               	goto	l3082
 19507                           
 19508                           ; BSR set to: 0
 19509  005052  0E01               	movlw	1
 19510  005054  6F81               	movwf	___awdiv@counter& (0+255),b
 19511  005056  D004               	goto	l3077
 19512  005058                     
 19513                           ; BSR set to: 0
 19514                           
 19515                           ; BSR set to: 0
 19516  005058  90D8               	bcf	status,0,c
 19517  00505A  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19518  00505C  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19519  00505E  2B81               	incf	___awdiv@counter& (0+255),f,b
 19520  005060                     l3077:
 19521                           
 19522                           ; BSR set to: 0
 19523                           
 19524                           ; BSR set to: 0
 19525  005060  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19526  005062  D7FA               	goto	l3078
 19527  005064                     u13230:
 19528                           
 19529                           ; BSR set to: 0
 19530                           
 19531                           ; BSR set to: 0
 19532                           
 19533                           ; BSR set to: 0
 19534  005064  90D8               	bcf	status,0,c
 19535  005066  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19536  005068  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19537                           
 19538                           ; BSR set to: 0
 19539  00506A  517F               	movf	___awdiv@divisor& (0+255),w,b
 19540  00506C  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19541  00506E  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19542  005070  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19543  005072  A0D8               	btfss	status,0,c
 19544  005074  D005               	goto	l3081
 19545                           
 19546                           ; BSR set to: 0
 19547  005076  517F               	movf	___awdiv@divisor& (0+255),w,b
 19548  005078  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19549  00507A  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19550  00507C  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19551                           
 19552                           ; BSR set to: 0
 19553  00507E  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19554  005080                     l3081:
 19555                           
 19556                           ; BSR set to: 0
 19557                           
 19558                           ; BSR set to: 0
 19559  005080  90D8               	bcf	status,0,c
 19560  005082  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19561  005084  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19562                           
 19563                           ; BSR set to: 0
 19564  005086  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19565  005088  D7ED               	goto	u13230
 19566  00508A                     l3082:
 19567                           
 19568                           ; BSR set to: 0
 19569                           
 19570                           ; BSR set to: 0
 19571                           
 19572                           ; BSR set to: 0
 19573  00508A  5182               	movf	___awdiv@sign& (0+255),w,b
 19574  00508C  B4D8               	btfsc	status,2,c
 19575  00508E  D004               	goto	l3083
 19576                           
 19577                           ; BSR set to: 0
 19578  005090  6D83               	negf	___awdiv@quotient& (0+255),b
 19579  005092  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19580  005094  B0D8               	btfsc	status,0,c
 19581  005096  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19582  005098                     l3083:
 19583                           
 19584                           ; BSR set to: 0
 19585                           
 19586                           ; BSR set to: 0
 19587  005098  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19588  00509C  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19589  0050A0  0012               	return	
 19590  0050A2                     __end_of___awdiv:
 19591                           	opt stack 0
 19592                           tosu	equ	0xFFF
 19593                           tosh	equ	0xFFE
 19594                           tosl	equ	0xFFD
 19595                           pclath	equ	0xFFA
 19596                           tblptru	equ	0xFF8
 19597                           tblptrh	equ	0xFF7
 19598                           tblptrl	equ	0xFF6
 19599                           tablat	equ	0xFF5
 19600                           prodh	equ	0xFF4
 19601                           prodl	equ	0xFF3
 19602                           intcon	equ	0xFF2
 19603                           intcon2	equ	0xFF1
 19604                           intcon3	equ	0xFF0
 19605                           indf0	equ	0xFEF
 19606                           postinc0	equ	0xFEE
 19607                           plusw0	equ	0xFEB
 19608                           fsr0h	equ	0xFEA
 19609                           fsr0l	equ	0xFE9
 19610                           wreg	equ	0xFE8
 19611                           indf1	equ	0xFE7
 19612                           postinc1	equ	0xFE6
 19613                           postdec1	equ	0xFE5
 19614                           fsr1h	equ	0xFE2
 19615                           fsr1l	equ	0xFE1
 19616                           indf2	equ	0xFDF
 19617                           postinc2	equ	0xFDE
 19618                           postdec2	equ	0xFDD
 19619                           plusw2	equ	0xFDB
 19620                           fsr2h	equ	0xFDA
 19621                           fsr2l	equ	0xFD9
 19622                           status	equ	0xFD8
 19623                           
 19624 ;; *************** function _Rtcc_LockRtc *****************
 19625 ;; Defined at:
 19626 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;		None
 19629 ;; Auto vars:     Size  Location     Type
 19630 ;;		None
 19631 ;; Return value:  Size  Location     Type
 19632 ;;                  1    wreg      void 
 19633 ;; Registers used:
 19634 ;;		None
 19635 ;; Tracked objects:
 19636 ;;		On entry : 0/0
 19637 ;;		On exit  : 0/0
 19638 ;;		Unchanged: 0/0
 19639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19644 ;;Total ram usage:        0 bytes
 19645 ;; Hardware stack levels used:    1
 19646 ;; Hardware stack levels required when called:   11
 19647 ;; This function calls:
 19648 ;;		Nothing
 19649 ;; This function is called by:
 19650 ;;		_Rtcm_MainTask
 19651 ;;		_Rtcm_SetRtccDate
 19652 ;;		_Rtcm_SetRtccAlarm
 19653 ;; This function uses a non-reentrant model
 19654 ;;
 19655                           
 19656                           	psect	text83
 19657  0069D0                     __ptext83:
 19658                           	opt stack 0
 19659  0069D0                     _Rtcc_LockRtc:
 19660                           	opt stack 15
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;incstack = 0
 19664  0069D0  010F               	movlb	15	;# 
 19665  0069D2  0E55               	movlw	85	;# 
 19666  0069D4  6EA7               	movwf	4007,c	;# 
 19667  0069D6  0EAA               	movlw	170	;# 
 19668  0069D8  6EA7               	movwf	4007,c	;# 
 19669                           
 19670                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19671  0069DA  010F               	movlb	15	; () banked
 19672  0069DC  9B3F               	bcf	63,5,b	;volatile
 19673                           
 19674                           ; BSR set to: 15
 19675  0069DE  0012               	return		;funcret
 19676  0069E0                     __end_of_Rtcc_LockRtc:
 19677                           	opt stack 0
 19678                           tosu	equ	0xFFF
 19679                           tosh	equ	0xFFE
 19680                           tosl	equ	0xFFD
 19681                           pclath	equ	0xFFA
 19682                           tblptru	equ	0xFF8
 19683                           tblptrh	equ	0xFF7
 19684                           tblptrl	equ	0xFF6
 19685                           tablat	equ	0xFF5
 19686                           prodh	equ	0xFF4
 19687                           prodl	equ	0xFF3
 19688                           intcon	equ	0xFF2
 19689                           intcon2	equ	0xFF1
 19690                           intcon3	equ	0xFF0
 19691                           indf0	equ	0xFEF
 19692                           postinc0	equ	0xFEE
 19693                           plusw0	equ	0xFEB
 19694                           fsr0h	equ	0xFEA
 19695                           fsr0l	equ	0xFE9
 19696                           wreg	equ	0xFE8
 19697                           indf1	equ	0xFE7
 19698                           postinc1	equ	0xFE6
 19699                           postdec1	equ	0xFE5
 19700                           fsr1h	equ	0xFE2
 19701                           fsr1l	equ	0xFE1
 19702                           indf2	equ	0xFDF
 19703                           postinc2	equ	0xFDE
 19704                           postdec2	equ	0xFDD
 19705                           plusw2	equ	0xFDB
 19706                           fsr2h	equ	0xFDA
 19707                           fsr2l	equ	0xFD9
 19708                           status	equ	0xFD8
 19709                           
 19710 ;; *************** function _Rtcm_GetRtccDate *****************
 19711 ;; Defined at:
 19712 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19713 ;; Parameters:    Size  Location     Type
 19714 ;;		None
 19715 ;; Auto vars:     Size  Location     Type
 19716 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19717 ;; Return value:  Size  Location     Type
 19718 ;;                  8   33[BANK0 ] struct _RtccDateType
 19719 ;; Registers used:
 19720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19721 ;; Tracked objects:
 19722 ;;		On entry : 0/0
 19723 ;;		On exit  : 0/0
 19724 ;;		Unchanged: 0/0
 19725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19726 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19727 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19729 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19730 ;;Total ram usage:       17 bytes
 19731 ;; Hardware stack levels used:    1
 19732 ;; Hardware stack levels required when called:   12
 19733 ;; This function calls:
 19734 ;;		_Rtcc_GetRtccValue
 19735 ;; This function is called by:
 19736 ;;		_Rtcm_MainTask
 19737 ;; This function uses a non-reentrant model
 19738 ;;
 19739                           
 19740                           	psect	text84
 19741  0055FA                     __ptext84:
 19742                           	opt stack 0
 19743  0055FA                     _Rtcm_GetRtccDate:
 19744                           	opt stack 15
 19745                           
 19746                           ;rtcm.c: 204: RtccDateType LocalDate;
 19747                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19748                           
 19749                           ; BSR set to: 15
 19750                           ;incstack = 0
 19751  0055FA  0E00               	movlw	0
 19752  0055FC  EC5F  F026         	call	_Rtcc_GetRtccValue
 19753  005600  0100               	movlb	0	; () banked
 19754  005602  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19755  005604  0ED0               	movlw	208
 19756  005606  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19757  005608  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19758  00560A  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19759  00560C  0E07               	movlw	7
 19760  00560E  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19761                           
 19762                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19763  005610  0E01               	movlw	1
 19764  005612  EC5F  F026         	call	_Rtcc_GetRtccValue
 19765  005616  0100               	movlb	0	; () banked
 19766  005618  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19767                           
 19768                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19769  00561A  0E02               	movlw	2
 19770  00561C  EC5F  F026         	call	_Rtcc_GetRtccValue
 19771  005620  0100               	movlb	0	; () banked
 19772  005622  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19773                           
 19774                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19775  005624  0E03               	movlw	3
 19776  005626  EC5F  F026         	call	_Rtcc_GetRtccValue
 19777  00562A  0100               	movlb	0	; () banked
 19778  00562C  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19779                           
 19780                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19781  00562E  0E04               	movlw	4
 19782  005630  EC5F  F026         	call	_Rtcc_GetRtccValue
 19783  005634  0100               	movlb	0	; () banked
 19784  005636  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19785                           
 19786                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19787  005638  0E05               	movlw	5
 19788  00563A  EC5F  F026         	call	_Rtcc_GetRtccValue
 19789  00563E  0100               	movlb	0	; () banked
 19790  005640  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19791                           
 19792                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19793  005642  0E06               	movlw	6
 19794  005644  EC5F  F026         	call	_Rtcc_GetRtccValue
 19795  005648  0100               	movlb	0	; () banked
 19796  00564A  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19797                           
 19798                           ; BSR set to: 0
 19799                           ;rtcm.c: 216: return LocalDate;
 19800  00564C  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19801  005650  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19802  005654  0E07               	movlw	7
 19803  005656                     u15641:
 19804  005656  CFDB FFEB          	movff	plusw2,plusw0
 19805  00565A  06E8               	decf	wreg,f,c
 19806  00565C  E2FC               	bc	u15641
 19807  00565E  0012               	return	
 19808  005660                     __end_of_Rtcm_GetRtccDate:
 19809                           	opt stack 0
 19810                           tosu	equ	0xFFF
 19811                           tosh	equ	0xFFE
 19812                           tosl	equ	0xFFD
 19813                           pclath	equ	0xFFA
 19814                           tblptru	equ	0xFF8
 19815                           tblptrh	equ	0xFF7
 19816                           tblptrl	equ	0xFF6
 19817                           tablat	equ	0xFF5
 19818                           prodh	equ	0xFF4
 19819                           prodl	equ	0xFF3
 19820                           intcon	equ	0xFF2
 19821                           intcon2	equ	0xFF1
 19822                           intcon3	equ	0xFF0
 19823                           indf0	equ	0xFEF
 19824                           postinc0	equ	0xFEE
 19825                           plusw0	equ	0xFEB
 19826                           fsr0h	equ	0xFEA
 19827                           fsr0l	equ	0xFE9
 19828                           wreg	equ	0xFE8
 19829                           indf1	equ	0xFE7
 19830                           postinc1	equ	0xFE6
 19831                           postdec1	equ	0xFE5
 19832                           fsr1h	equ	0xFE2
 19833                           fsr1l	equ	0xFE1
 19834                           indf2	equ	0xFDF
 19835                           postinc2	equ	0xFDE
 19836                           postdec2	equ	0xFDD
 19837                           plusw2	equ	0xFDB
 19838                           fsr2h	equ	0xFDA
 19839                           fsr2l	equ	0xFD9
 19840                           status	equ	0xFD8
 19841                           
 19842 ;; *************** function _Rtcc_GetRtccValue *****************
 19843 ;; Defined at:
 19844 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19845 ;; Parameters:    Size  Location     Type
 19846 ;;  RtccPtrVal      1    wreg     enum E7757
 19847 ;; Auto vars:     Size  Location     Type
 19848 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19849 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19850 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19851 ;; Return value:  Size  Location     Type
 19852 ;;                  1    wreg      unsigned char 
 19853 ;; Registers used:
 19854 ;;		wreg, status,2, status,0, prodl, prodh
 19855 ;; Tracked objects:
 19856 ;;		On entry : 0/0
 19857 ;;		On exit  : 0/0
 19858 ;;		Unchanged: 0/0
 19859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19864 ;;Total ram usage:        4 bytes
 19865 ;; Hardware stack levels used:    1
 19866 ;; Hardware stack levels required when called:   11
 19867 ;; This function calls:
 19868 ;;		Nothing
 19869 ;; This function is called by:
 19870 ;;		_Rtcm_GetRtccDate
 19871 ;; This function uses a non-reentrant model
 19872 ;;
 19873                           
 19874                           	psect	text85
 19875  004CBE                     __ptext85:
 19876                           	opt stack 0
 19877  004CBE                     _Rtcc_GetRtccValue:
 19878                           	opt stack 15
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;incstack = 0
 19882                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19883  004CBE  0100               	movlb	0	; () banked
 19884  004CC0  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19885                           
 19886                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19887                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19888                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19889  004CC2  D02D               	goto	l416
 19890  004CC4                     l417:
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19894  004CC4  010F               	movlb	15	; () banked
 19895  004CC6  833F               	bsf	63,1,b	;volatile
 19896  004CC8                     
 19897                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19898  004CC8  813F               	bsf	63,0,b	;volatile
 19899  004CCA  D01C               	goto	L18
 19900  004CCC                     l419:
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19904  004CCC  010F               	movlb	15	; () banked
 19905  004CCE  833F               	bsf	63,1,b	;volatile
 19906  004CD0  D01E               	goto	L19
 19907  004CD2                     l420:
 19908                           
 19909                           ; BSR set to: 0
 19910                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19911  004CD2  010F               	movlb	15	; () banked
 19912  004CD4  833F               	bsf	63,1,b	;volatile
 19913  004CD6  D021               	goto	L22
 19914  004CD8                     l14360:
 19915                           
 19916                           ; BSR set to: 15
 19917                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19918  004CD8  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19919  004CDC  0E0F               	movlw	15
 19920  004CDE  0100               	movlb	0	; () banked
 19921  004CE0  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19922  004CE2  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19923  004CE4  0B0F               	andlw	15
 19924  004CE6  0B0F               	andlw	15
 19925  004CE8  0D0A               	mullw	10
 19926  004CEA  50F3               	movf	prodl,w,c
 19927  004CEC  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19928  004CEE  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19929                           
 19930                           ;rtcc_drv.c: 241: break;
 19931  004CF0  D02D               	goto	l418
 19932  004CF2                     l421:
 19933                           
 19934                           ; BSR set to: 0
 19935                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19936  004CF2  010F               	movlb	15	; () banked
 19937  004CF4  933F               	bcf	63,1,b	;volatile
 19938                           
 19939                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19940  004CF6  813F               	bsf	63,0,b	;volatile
 19941                           
 19942                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19943  004CF8  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19944                           
 19945                           ;rtcc_drv.c: 249: break;
 19946  004CFC  D027               	goto	l418
 19947  004CFE                     l422:
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19951  004CFE  010F               	movlb	15	; () banked
 19952  004D00  933F               	bcf	63,1,b	;volatile
 19953  004D02  D7E2               	goto	L20
 19954  004D04                     L18:
 19955                           
 19956                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19957  004D04  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19958  004D08  D7E7               	goto	l14360
 19959  004D0A                     l423:
 19960                           
 19961                           ; BSR set to: 0
 19962                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19963  004D0A  010F               	movlb	15	; () banked
 19964  004D0C  933F               	bcf	63,1,b	;volatile
 19965  004D0E                     L19:
 19966                           
 19967                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19968  004D0E  913F               	bcf	63,0,b	;volatile
 19969                           
 19970                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19971  004D10  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19972  004D14  D7E1               	goto	l14360
 19973  004D16                     l424:
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19977  004D16  010F               	movlb	15	; () banked
 19978  004D18  933F               	bcf	63,1,b	;volatile
 19979  004D1A                     L22:
 19980                           
 19981                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19982  004D1A  913F               	bcf	63,0,b	;volatile
 19983  004D1C  D7F3               	goto	L18
 19984  004D1E                     l416:
 19985                           
 19986                           ; BSR set to: 0
 19987  004D1E  0100               	movlb	0	; () banked
 19988  004D20  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19989                           
 19990                           ; Switch size 1, requested type "space"
 19991                           ; Number of cases is 7, Range of values is 0 to 6
 19992                           ; switch strategies available:
 19993                           ; Name         Instructions Cycles
 19994                           ; simple_byte           22    12 (average)
 19995                           ;	Chosen strategy is simple_byte
 19996  004D22  0A00               	xorlw	0	; case 0
 19997  004D24  B4D8               	btfsc	status,2,c
 19998  004D26  D7CE               	goto	l417
 19999  004D28  0A01               	xorlw	1	; case 1
 20000  004D2A  B4D8               	btfsc	status,2,c
 20001  004D2C  D7CF               	goto	l419
 20002  004D2E  0A03               	xorlw	3	; case 2
 20003  004D30  B4D8               	btfsc	status,2,c
 20004  004D32  D7CF               	goto	l420
 20005  004D34  0A01               	xorlw	1	; case 3
 20006  004D36  B4D8               	btfsc	status,2,c
 20007  004D38  D7DC               	goto	l421
 20008  004D3A  0A07               	xorlw	7	; case 4
 20009  004D3C  B4D8               	btfsc	status,2,c
 20010  004D3E  D7DF               	goto	l422
 20011  004D40  0A01               	xorlw	1	; case 5
 20012  004D42  B4D8               	btfsc	status,2,c
 20013  004D44  D7E2               	goto	l423
 20014  004D46  0A03               	xorlw	3	; case 6
 20015  004D48  B4D8               	btfsc	status,2,c
 20016  004D4A  D7E5               	goto	l424
 20017  004D4C                     l418:
 20018                           
 20019                           ;rtcc_drv.c: 286: return RetValue;
 20020                           
 20021                           ; BSR set to: 0
 20022  004D4C  0100               	movlb	0	; () banked
 20023  004D4E  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20024  004D50  0012               	return	
 20025  004D52                     __end_of_Rtcc_GetRtccValue:
 20026                           	opt stack 0
 20027                           tosu	equ	0xFFF
 20028                           tosh	equ	0xFFE
 20029                           tosl	equ	0xFFD
 20030                           pclath	equ	0xFFA
 20031                           tblptru	equ	0xFF8
 20032                           tblptrh	equ	0xFF7
 20033                           tblptrl	equ	0xFF6
 20034                           tablat	equ	0xFF5
 20035                           prodh	equ	0xFF4
 20036                           prodl	equ	0xFF3
 20037                           intcon	equ	0xFF2
 20038                           intcon2	equ	0xFF1
 20039                           intcon3	equ	0xFF0
 20040                           indf0	equ	0xFEF
 20041                           postinc0	equ	0xFEE
 20042                           plusw0	equ	0xFEB
 20043                           fsr0h	equ	0xFEA
 20044                           fsr0l	equ	0xFE9
 20045                           wreg	equ	0xFE8
 20046                           indf1	equ	0xFE7
 20047                           postinc1	equ	0xFE6
 20048                           postdec1	equ	0xFE5
 20049                           fsr1h	equ	0xFE2
 20050                           fsr1l	equ	0xFE1
 20051                           indf2	equ	0xFDF
 20052                           postinc2	equ	0xFDE
 20053                           postdec2	equ	0xFDD
 20054                           plusw2	equ	0xFDB
 20055                           fsr2h	equ	0xFDA
 20056                           fsr2l	equ	0xFD9
 20057                           status	equ	0xFD8
 20058                           
 20059 ;; *************** function _Rtcc_SetRtcStatus *****************
 20060 ;; Defined at:
 20061 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20062 ;; Parameters:    Size  Location     Type
 20063 ;;  Status          1    wreg     unsigned char 
 20064 ;; Auto vars:     Size  Location     Type
 20065 ;;  Status          1   29[BANK0 ] unsigned char 
 20066 ;; Return value:  Size  Location     Type
 20067 ;;                  1    wreg      void 
 20068 ;; Registers used:
 20069 ;;		wreg
 20070 ;; Tracked objects:
 20071 ;;		On entry : 0/0
 20072 ;;		On exit  : 0/0
 20073 ;;		Unchanged: 0/0
 20074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20079 ;;Total ram usage:        1 bytes
 20080 ;; Hardware stack levels used:    1
 20081 ;; Hardware stack levels required when called:   11
 20082 ;; This function calls:
 20083 ;;		Nothing
 20084 ;; This function is called by:
 20085 ;;		_Rtcm_MainTask
 20086 ;; This function uses a non-reentrant model
 20087 ;;
 20088                           
 20089                           	psect	text86
 20090  00691E                     __ptext86:
 20091                           	opt stack 0
 20092  00691E                     _Rtcc_SetRtcStatus:
 20093                           	opt stack 16
 20094                           
 20095                           ; BSR set to: 0
 20096                           ;incstack = 0
 20097                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20098  00691E  0100               	movlb	0	; () banked
 20099  006920  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20100                           
 20101                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20102  006922  0100               	movlb	0	; () banked
 20103  006924  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20104  006926  D003               	bra	u14575
 20105  006928  010F               	movlb	15	; () banked
 20106  00692A  9F3F               	bcf	63,7,b	;volatile
 20107  00692C  D002               	bra	u14576
 20108  00692E                     u14575:
 20109  00692E  010F               	movlb	15	; () banked
 20110  006930  8F3F               	bsf	63,7,b	;volatile
 20111  006932                     u14576:
 20112                           
 20113                           ; BSR set to: 15
 20114  006932  0012               	return		;funcret
 20115  006934                     __end_of_Rtcc_SetRtcStatus:
 20116                           	opt stack 0
 20117                           tosu	equ	0xFFF
 20118                           tosh	equ	0xFFE
 20119                           tosl	equ	0xFFD
 20120                           pclath	equ	0xFFA
 20121                           tblptru	equ	0xFF8
 20122                           tblptrh	equ	0xFF7
 20123                           tblptrl	equ	0xFF6
 20124                           tablat	equ	0xFF5
 20125                           prodh	equ	0xFF4
 20126                           prodl	equ	0xFF3
 20127                           intcon	equ	0xFF2
 20128                           intcon2	equ	0xFF1
 20129                           intcon3	equ	0xFF0
 20130                           indf0	equ	0xFEF
 20131                           postinc0	equ	0xFEE
 20132                           plusw0	equ	0xFEB
 20133                           fsr0h	equ	0xFEA
 20134                           fsr0l	equ	0xFE9
 20135                           wreg	equ	0xFE8
 20136                           indf1	equ	0xFE7
 20137                           postinc1	equ	0xFE6
 20138                           postdec1	equ	0xFE5
 20139                           fsr1h	equ	0xFE2
 20140                           fsr1l	equ	0xFE1
 20141                           indf2	equ	0xFDF
 20142                           postinc2	equ	0xFDE
 20143                           postdec2	equ	0xFDD
 20144                           plusw2	equ	0xFDB
 20145                           fsr2h	equ	0xFDA
 20146                           fsr2l	equ	0xFD9
 20147                           status	equ	0xFD8
 20148                           
 20149 ;; *************** function _Rtcc_RtcConfig *****************
 20150 ;; Defined at:
 20151 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20152 ;; Parameters:    Size  Location     Type
 20153 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20154 ;;		 -> RtcConfig(4), 
 20155 ;; Auto vars:     Size  Location     Type
 20156 ;;		None
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  1    wreg      void 
 20159 ;; Registers used:
 20160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/0
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20168 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20170 ;;Total ram usage:        3 bytes
 20171 ;; Hardware stack levels used:    1
 20172 ;; Hardware stack levels required when called:   12
 20173 ;; This function calls:
 20174 ;;		_RtccIrqInit
 20175 ;; This function is called by:
 20176 ;;		_Rtcm_MainTask
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text87
 20181  00488C                     __ptext87:
 20182                           	opt stack 0
 20183  00488C                     _Rtcc_RtcConfig:
 20184                           	opt stack 15
 20185                           
 20186                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20187                           
 20188                           ; BSR set to: 15
 20189                           ;incstack = 0
 20190  00488C  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20191  004890  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20192  004894  50DF               	movf	indf2,w,c
 20193  004896  0100               	movlb	0	; () banked
 20194  004898  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20195  00489A  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20196  00489C  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20197  00489E  010F               	movlb	15	; () banked
 20198  0048A0  513F               	movf	63,w,b	;volatile
 20199  0048A2  0100               	movlb	0	; () banked
 20200  0048A4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20201  0048A6  0BFB               	andlw	-5
 20202  0048A8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20203  0048AA  010F               	movlb	15	; () banked
 20204  0048AC  6F3F               	movwf	63,b	;volatile
 20205                           
 20206                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20207  0048AE  0100               	movlb	0	; () banked
 20208  0048B0  EE20 F001          	lfsr	2,1
 20209  0048B4  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20210  0048B6  26D9               	addwf	fsr2l,f,c
 20211  0048B8  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20212  0048BA  22DA               	addwfc	fsr2h,f,c
 20213  0048BC  50DF               	movf	indf2,w,c
 20214  0048BE  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20215  0048C0  0E01               	movlw	1
 20216  0048C2  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20217  0048C4  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20218  0048C6  010F               	movlb	15	; () banked
 20219  0048C8  513C               	movf	60,w,b	;volatile
 20220  0048CA  0100               	movlb	0	; () banked
 20221  0048CC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20222  0048CE  0BFD               	andlw	-3
 20223  0048D0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20224  0048D2  010F               	movlb	15	; () banked
 20225  0048D4  6F3C               	movwf	60,b	;volatile
 20226                           
 20227                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20228  0048D6  0100               	movlb	0	; () banked
 20229  0048D8  EE20 F001          	lfsr	2,1
 20230  0048DC  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20231  0048DE  26D9               	addwf	fsr2l,f,c
 20232  0048E0  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20233  0048E2  22DA               	addwfc	fsr2h,f,c
 20234  0048E4  50DF               	movf	indf2,w,c
 20235  0048E6  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20236  0048E8  90D8               	bcf	status,0,c
 20237  0048EA  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20238  0048EC  0E01               	movlw	1
 20239  0048EE  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20240  0048F0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20241  0048F2  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20242  0048F4  010F               	movlb	15	; () banked
 20243  0048F6  513C               	movf	60,w,b	;volatile
 20244  0048F8  0100               	movlb	0	; () banked
 20245  0048FA  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20246  0048FC  0BFB               	andlw	-5
 20247  0048FE  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20248  004900  010F               	movlb	15	; () banked
 20249  004902  6F3C               	movwf	60,b	;volatile
 20250                           
 20251                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20252  004904  0100               	movlb	0	; () banked
 20253  004906  EE20 F002          	lfsr	2,2
 20254  00490A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20255  00490C  26D9               	addwf	fsr2l,f,c
 20256  00490E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20257  004910  22DA               	addwfc	fsr2h,f,c
 20258  004912  04DE               	decf	postinc2,w,c
 20259  004914  A4D8               	btfss	status,2,c
 20260  004916  0012               	return	
 20261                           
 20262                           ; BSR set to: 0
 20263                           ;rtcc_drv.c: 115: {
 20264                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20265  004918  EE20 F003          	lfsr	2,3
 20266  00491C  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20267  00491E  26D9               	addwf	fsr2l,f,c
 20268  004920  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20269  004922  22DA               	addwfc	fsr2h,f,c
 20270  004924  50DF               	movf	indf2,w,c
 20271  004926  EC9A  F034         	call	_RtccIrqInit
 20272  00492A  0012               	return	
 20273  00492C                     __end_of_Rtcc_RtcConfig:
 20274                           	opt stack 0
 20275                           tosu	equ	0xFFF
 20276                           tosh	equ	0xFFE
 20277                           tosl	equ	0xFFD
 20278                           pclath	equ	0xFFA
 20279                           tblptru	equ	0xFF8
 20280                           tblptrh	equ	0xFF7
 20281                           tblptrl	equ	0xFF6
 20282                           tablat	equ	0xFF5
 20283                           prodh	equ	0xFF4
 20284                           prodl	equ	0xFF3
 20285                           intcon	equ	0xFF2
 20286                           intcon2	equ	0xFF1
 20287                           intcon3	equ	0xFF0
 20288                           indf0	equ	0xFEF
 20289                           postinc0	equ	0xFEE
 20290                           plusw0	equ	0xFEB
 20291                           fsr0h	equ	0xFEA
 20292                           fsr0l	equ	0xFE9
 20293                           wreg	equ	0xFE8
 20294                           indf1	equ	0xFE7
 20295                           postinc1	equ	0xFE6
 20296                           postdec1	equ	0xFE5
 20297                           fsr1h	equ	0xFE2
 20298                           fsr1l	equ	0xFE1
 20299                           indf2	equ	0xFDF
 20300                           postinc2	equ	0xFDE
 20301                           postdec2	equ	0xFDD
 20302                           plusw2	equ	0xFDB
 20303                           fsr2h	equ	0xFDA
 20304                           fsr2l	equ	0xFD9
 20305                           status	equ	0xFD8
 20306                           
 20307 ;; *************** function _RtccIrqInit *****************
 20308 ;; Defined at:
 20309 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20310 ;; Parameters:    Size  Location     Type
 20311 ;;  Priority        1    wreg     enum E7716
 20312 ;; Auto vars:     Size  Location     Type
 20313 ;;  Priority        1   29[BANK0 ] enum E7716
 20314 ;; Return value:  Size  Location     Type
 20315 ;;                  1    wreg      void 
 20316 ;; Registers used:
 20317 ;;		wreg
 20318 ;; Tracked objects:
 20319 ;;		On entry : 0/0
 20320 ;;		On exit  : 0/0
 20321 ;;		Unchanged: 0/0
 20322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20327 ;;Total ram usage:        1 bytes
 20328 ;; Hardware stack levels used:    1
 20329 ;; Hardware stack levels required when called:   11
 20330 ;; This function calls:
 20331 ;;		Nothing
 20332 ;; This function is called by:
 20333 ;;		_Rtcc_RtcConfig
 20334 ;; This function uses a non-reentrant model
 20335 ;;
 20336                           
 20337                           	psect	text88
 20338  006934                     __ptext88:
 20339                           	opt stack 0
 20340  006934                     _RtccIrqInit:
 20341                           	opt stack 15
 20342                           
 20343                           ;incstack = 0
 20344                           ;RtccIrqInit@Priority stored from wreg
 20345  006934  0100               	movlb	0	; () banked
 20346  006936  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20347                           
 20348                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20349  006938  90A4               	bcf	4004,0,c	;volatile
 20350                           
 20351                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20352  00693A  0100               	movlb	0	; () banked
 20353  00693C  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20354  00693E  D002               	bra	u13445
 20355  006940  90A5               	bcf	4005,0,c	;volatile
 20356  006942  D001               	bra	u13446
 20357  006944                     u13445:
 20358  006944  80A5               	bsf	4005,0,c	;volatile
 20359  006946                     u13446:
 20360                           
 20361                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20362  006946  80A3               	bsf	4003,0,c	;volatile
 20363  006948  0012               	return		;funcret
 20364  00694A                     __end_of_RtccIrqInit:
 20365                           	opt stack 0
 20366                           tosu	equ	0xFFF
 20367                           tosh	equ	0xFFE
 20368                           tosl	equ	0xFFD
 20369                           pclath	equ	0xFFA
 20370                           tblptru	equ	0xFF8
 20371                           tblptrh	equ	0xFF7
 20372                           tblptrl	equ	0xFF6
 20373                           tablat	equ	0xFF5
 20374                           prodh	equ	0xFF4
 20375                           prodl	equ	0xFF3
 20376                           intcon	equ	0xFF2
 20377                           intcon2	equ	0xFF1
 20378                           intcon3	equ	0xFF0
 20379                           indf0	equ	0xFEF
 20380                           postinc0	equ	0xFEE
 20381                           plusw0	equ	0xFEB
 20382                           fsr0h	equ	0xFEA
 20383                           fsr0l	equ	0xFE9
 20384                           wreg	equ	0xFE8
 20385                           indf1	equ	0xFE7
 20386                           postinc1	equ	0xFE6
 20387                           postdec1	equ	0xFE5
 20388                           fsr1h	equ	0xFE2
 20389                           fsr1l	equ	0xFE1
 20390                           indf2	equ	0xFDF
 20391                           postinc2	equ	0xFDE
 20392                           postdec2	equ	0xFDD
 20393                           plusw2	equ	0xFDB
 20394                           fsr2h	equ	0xFDA
 20395                           fsr2l	equ	0xFD9
 20396                           status	equ	0xFD8
 20397                           
 20398 ;; *************** function _Rtcc_AlarmConfig *****************
 20399 ;; Defined at:
 20400 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20401 ;; Parameters:    Size  Location     Type
 20402 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20403 ;;		 -> AlCfg(4), 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;		None
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20418 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;Total ram usage:        3 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:   11
 20422 ;; This function calls:
 20423 ;;		Nothing
 20424 ;; This function is called by:
 20425 ;;		_Rtcm_MainTask
 20426 ;; This function uses a non-reentrant model
 20427 ;;
 20428                           
 20429                           	psect	text89
 20430  005456                     __ptext89:
 20431                           	opt stack 0
 20432  005456                     _Rtcc_AlarmConfig:
 20433                           	opt stack 16
 20434                           
 20435                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20436                           
 20437                           ;incstack = 0
 20438  005456  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20439  00545A  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20440  00545E  50DF               	movf	indf2,w,c
 20441  005460  0100               	movlb	0	; () banked
 20442  005462  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20443  005464  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20444  005466  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20445  005468  5091               	movf	3985,w,c	;volatile
 20446  00546A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20447  00546C  0B7F               	andlw	-129
 20448  00546E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20449  005470  6E91               	movwf	3985,c	;volatile
 20450                           
 20451                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20452  005472  EE20 F001          	lfsr	2,1
 20453  005476  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20454  005478  26D9               	addwf	fsr2l,f,c
 20455  00547A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20456  00547C  22DA               	addwfc	fsr2h,f,c
 20457  00547E  50DF               	movf	indf2,w,c
 20458  005480  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20459  005482  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20460  005484  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20461  005486  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20462  005488  5091               	movf	3985,w,c	;volatile
 20463  00548A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20464  00548C  0BBF               	andlw	-65
 20465  00548E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20466  005490  6E91               	movwf	3985,c	;volatile
 20467                           
 20468                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20469  005492  EE20 F002          	lfsr	2,2
 20470  005496  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20471  005498  26D9               	addwf	fsr2l,f,c
 20472  00549A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20473  00549C  22DA               	addwfc	fsr2h,f,c
 20474  00549E  50DF               	movf	indf2,w,c
 20475  0054A0  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20476  0054A2  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20477  0054A4  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20478  0054A6  5091               	movf	3985,w,c	;volatile
 20479  0054A8  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20480  0054AA  0BC3               	andlw	-61
 20481  0054AC  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20482  0054AE  6E91               	movwf	3985,c	;volatile
 20483                           
 20484                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20485  0054B0  EE20 F003          	lfsr	2,3
 20486  0054B4  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20487  0054B6  26D9               	addwf	fsr2l,f,c
 20488  0054B8  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20489  0054BA  22DA               	addwfc	fsr2h,f,c
 20490  0054BC  50DF               	movf	indf2,w,c
 20491  0054BE  6E90               	movwf	3984,c	;volatile
 20492                           
 20493                           ; BSR set to: 0
 20494  0054C0  0012               	return		;funcret
 20495  0054C2                     __end_of_Rtcc_AlarmConfig:
 20496                           	opt stack 0
 20497                           tosu	equ	0xFFF
 20498                           tosh	equ	0xFFE
 20499                           tosl	equ	0xFFD
 20500                           pclath	equ	0xFFA
 20501                           tblptru	equ	0xFF8
 20502                           tblptrh	equ	0xFF7
 20503                           tblptrl	equ	0xFF6
 20504                           tablat	equ	0xFF5
 20505                           prodh	equ	0xFF4
 20506                           prodl	equ	0xFF3
 20507                           intcon	equ	0xFF2
 20508                           intcon2	equ	0xFF1
 20509                           intcon3	equ	0xFF0
 20510                           indf0	equ	0xFEF
 20511                           postinc0	equ	0xFEE
 20512                           plusw0	equ	0xFEB
 20513                           fsr0h	equ	0xFEA
 20514                           fsr0l	equ	0xFE9
 20515                           wreg	equ	0xFE8
 20516                           indf1	equ	0xFE7
 20517                           postinc1	equ	0xFE6
 20518                           postdec1	equ	0xFE5
 20519                           fsr1h	equ	0xFE2
 20520                           fsr1l	equ	0xFE1
 20521                           indf2	equ	0xFDF
 20522                           postinc2	equ	0xFDE
 20523                           postdec2	equ	0xFDD
 20524                           plusw2	equ	0xFDB
 20525                           fsr2h	equ	0xFDA
 20526                           fsr2l	equ	0xFD9
 20527                           status	equ	0xFD8
 20528                           
 20529 ;; *************** function _triggerCmdFsm *****************
 20530 ;; Defined at:
 20531 ;;		line 83 in file "../Source/c/04_App/app_triggerCmd.c"
 20532 ;; Parameters:    Size  Location     Type
 20533 ;;  receivedNumb    2   17[BANK1 ] PTR unsigned char 
 20534 ;;		 -> receivedNumber(13), 
 20535 ;; Auto vars:     Size  Location     Type
 20536 ;;  numberInMemo    1   20[BANK1 ] unsigned char 
 20537 ;;  isComplete      1   19[BANK1 ] unsigned char 
 20538 ;; Return value:  Size  Location     Type
 20539 ;;                  1    wreg      unsigned char 
 20540 ;; Registers used:
 20541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20542 ;; Tracked objects:
 20543 ;;		On entry : 0/0
 20544 ;;		On exit  : 0/0
 20545 ;;		Unchanged: 0/0
 20546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20547 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20548 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;Total ram usage:        4 bytes
 20552 ;; Hardware stack levels used:    1
 20553 ;; Hardware stack levels required when called:   18
 20554 ;; This function calls:
 20555 ;;		_isNumberInMemory
 20556 ;;		_triggerRelay
 20557 ;; This function is called by:
 20558 ;;		_MyApp_Task
 20559 ;; This function uses a non-reentrant model
 20560 ;;
 20561                           
 20562                           	psect	text90
 20563  0051A8                     __ptext90:
 20564                           	opt stack 0
 20565  0051A8                     _triggerCmdFsm:
 20566                           	opt stack 9
 20567                           
 20568                           ;app_triggerCmd.c: 85: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_NUMBER;
 20569                           ;app_triggerCmd.c: 86: bool isComplete = 0;
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;incstack = 0
 20573  0051A8  0E00               	movlw	0
 20574  0051AA  0101               	movlb	1	; () banked
 20575  0051AC  6F13               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20576                           
 20577                           ;app_triggerCmd.c: 87: uint8_t numberInMemory = 1;
 20578  0051AE  0E01               	movlw	1
 20579  0051B0  6F14               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20580                           
 20581                           ;app_triggerCmd.c: 89: switch (currentState)
 20582  0051B2  D026               	goto	l2860
 20583  0051B4                     
 20584                           ; BSR set to: 1
 20585                           ;app_triggerCmd.c: 93: numberInMemory = isNumberInMemory(receivedNumber);
 20586                           
 20587                           ; BSR set to: 1
 20588  0051B4  C111  F100         	movff	triggerCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 20589  0051B8  C112  F101         	movff	triggerCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 20590  0051BC  EC49  F029         	call	_isNumberInMemory	;wreg free
 20591  0051C0  0101               	movlb	1	; () banked
 20592  0051C2  6F14               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20593                           
 20594                           ; BSR set to: 1
 20595                           ;app_triggerCmd.c: 94: if (numberInMemory == 1)
 20596  0051C4  0514               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20597  0051C6  A4D8               	btfss	status,2,c
 20598  0051C8  D002               	goto	l2862
 20599                           
 20600                           ; BSR set to: 1
 20601                           ;app_triggerCmd.c: 95: {
 20602                           ;app_triggerCmd.c: 96: currentState = TRIGGER_FSM_COMPLETE;
 20603  0051CA  0E03               	movlw	3
 20604  0051CC  D00D               	goto	L24
 20605  0051CE                     l2862:
 20606                           
 20607                           ; BSR set to: 1
 20608                           ;app_triggerCmd.c: 98: else if (numberInMemory != 0 && numberInMemory != 1)
 20609                           
 20610                           ; BSR set to: 1
 20611  0051CE  5114               	movf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20612  0051D0  B4D8               	btfsc	status,2,c
 20613  0051D2  D023               	goto	l2865
 20614                           
 20615                           ; BSR set to: 1
 20616  0051D4  0514               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20617  0051D6  B4D8               	btfsc	status,2,c
 20618  0051D8  D020               	goto	l2865
 20619                           
 20620                           ; BSR set to: 1
 20621                           ;app_triggerCmd.c: 99: {
 20622                           ;app_triggerCmd.c: 100: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20623  0051DA  0E01               	movlw	1
 20624  0051DC  D005               	goto	L24
 20625  0051DE                     
 20626                           ; BSR set to: 1
 20627                           ;app_triggerCmd.c: 105: triggerRelay(1);
 20628                           
 20629                           ; BSR set to: 1
 20630  0051DE  0E01               	movlw	1
 20631  0051E0  EC7E  F031         	call	_triggerRelay
 20632                           
 20633                           ;app_triggerCmd.c: 106: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20634  0051E4  0E02               	movlw	2
 20635  0051E6  D006               	goto	L25
 20636  0051E8                     L24:
 20637  0051E8  6FD5               	movwf	triggerCmdFsm@currentState& (0+255),b
 20638                           
 20639                           ;app_triggerCmd.c: 107: break;
 20640  0051EA  D017               	goto	l2865
 20641  0051EC                     
 20642                           ; BSR set to: 1
 20643                           ;app_triggerCmd.c: 111: triggerRelay(0);
 20644                           
 20645                           ; BSR set to: 1
 20646  0051EC  0E00               	movlw	0
 20647  0051EE  EC7E  F031         	call	_triggerRelay
 20648                           
 20649                           ;app_triggerCmd.c: 112: currentState = TRIGGER_FSM_COMPLETE;
 20650  0051F2  0E03               	movlw	3
 20651  0051F4                     L25:
 20652  0051F4  0101               	movlb	1	; () banked
 20653  0051F6  D7F8               	goto	L24
 20654  0051F8                     
 20655                           ; BSR set to: 1
 20656                           ;app_triggerCmd.c: 116: isComplete = 1;
 20657                           
 20658                           ; BSR set to: 1
 20659  0051F8  0E01               	movlw	1
 20660  0051FA  6F13               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20661                           
 20662                           ;app_triggerCmd.c: 117: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20663  0051FC  0E00               	movlw	0
 20664  0051FE  D7F4               	goto	L24
 20665  005200                     l2860:
 20666                           
 20667                           ; BSR set to: 1
 20668                           
 20669                           ; BSR set to: 1
 20670  005200  51D5               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20671                           
 20672                           ; Switch size 1, requested type "space"
 20673                           ; Number of cases is 4, Range of values is 0 to 3
 20674                           ; switch strategies available:
 20675                           ; Name         Instructions Cycles
 20676                           ; simple_byte           13     7 (average)
 20677                           ;	Chosen strategy is simple_byte
 20678  005202  0A00               	xorlw	0	; case 0
 20679  005204  B4D8               	btfsc	status,2,c
 20680  005206  D7D6               	goto	l2861
 20681  005208  0A01               	xorlw	1	; case 1
 20682  00520A  B4D8               	btfsc	status,2,c
 20683  00520C  D7E8               	goto	l2866
 20684  00520E  0A03               	xorlw	3	; case 2
 20685  005210  B4D8               	btfsc	status,2,c
 20686  005212  D7EC               	goto	l2867
 20687  005214  0A01               	xorlw	1	; case 3
 20688  005216  B4D8               	btfsc	status,2,c
 20689  005218  D7EF               	goto	l2868
 20690  00521A                     l2865:
 20691                           
 20692                           ; BSR set to: 1
 20693                           ;app_triggerCmd.c: 123: return isComplete;
 20694                           
 20695                           ; BSR set to: 1
 20696  00521A  5113               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20697  00521C  0012               	return	
 20698  00521E                     __end_of_triggerCmdFsm:
 20699                           	opt stack 0
 20700                           tosu	equ	0xFFF
 20701                           tosh	equ	0xFFE
 20702                           tosl	equ	0xFFD
 20703                           pclath	equ	0xFFA
 20704                           tblptru	equ	0xFF8
 20705                           tblptrh	equ	0xFF7
 20706                           tblptrl	equ	0xFF6
 20707                           tablat	equ	0xFF5
 20708                           prodh	equ	0xFF4
 20709                           prodl	equ	0xFF3
 20710                           intcon	equ	0xFF2
 20711                           intcon2	equ	0xFF1
 20712                           intcon3	equ	0xFF0
 20713                           indf0	equ	0xFEF
 20714                           postinc0	equ	0xFEE
 20715                           plusw0	equ	0xFEB
 20716                           fsr0h	equ	0xFEA
 20717                           fsr0l	equ	0xFE9
 20718                           wreg	equ	0xFE8
 20719                           indf1	equ	0xFE7
 20720                           postinc1	equ	0xFE6
 20721                           postdec1	equ	0xFE5
 20722                           fsr1h	equ	0xFE2
 20723                           fsr1l	equ	0xFE1
 20724                           indf2	equ	0xFDF
 20725                           postinc2	equ	0xFDE
 20726                           postdec2	equ	0xFDD
 20727                           plusw2	equ	0xFDB
 20728                           fsr2h	equ	0xFDA
 20729                           fsr2l	equ	0xFD9
 20730                           status	equ	0xFD8
 20731                           
 20732 ;; *************** function _triggerRelay *****************
 20733 ;; Defined at:
 20734 ;;		line 64 in file "../Source/c/04_App/app_triggerCmd.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;  isRelayOn       1    wreg     unsigned char 
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20739 ;;  txBuffer        2   39[BANK0 ] unsigned char [2]
 20740 ;;  res             1   37[BANK0 ] unsigned char 
 20741 ;; Return value:  Size  Location     Type
 20742 ;;                  1    wreg      unsigned char 
 20743 ;; Registers used:
 20744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20745 ;; Tracked objects:
 20746 ;;		On entry : 0/0
 20747 ;;		On exit  : 0/0
 20748 ;;		Unchanged: 0/0
 20749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20751 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20754 ;;Total ram usage:        4 bytes
 20755 ;; Hardware stack levels used:    1
 20756 ;; Hardware stack levels required when called:   13
 20757 ;; This function calls:
 20758 ;;		_I2cSlv_SendI2cMsg
 20759 ;; This function is called by:
 20760 ;;		_triggerCmdFsm
 20761 ;; This function uses a non-reentrant model
 20762 ;;
 20763                           
 20764                           	psect	text91
 20765  0062FC                     __ptext91:
 20766                           	opt stack 0
 20767  0062FC                     _triggerRelay:
 20768                           	opt stack 13
 20769                           
 20770                           ; BSR set to: 1
 20771                           ;incstack = 0
 20772                           ;triggerRelay@isRelayOn stored from wreg
 20773  0062FC  0100               	movlb	0	; () banked
 20774  0062FE  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20775                           
 20776                           ;app_triggerCmd.c: 66: uint8_t txBuffer[2] = {0x50, 0x00};
 20777  006300  C3D0  F087         	movff	triggerRelay@F9003,triggerRelay@txBuffer
 20778  006304  C3D1  F088         	movff	triggerRelay@F9003+1,triggerRelay@txBuffer+1
 20779                           
 20780                           ;app_triggerCmd.c: 67: uint8_t res = 0u;
 20781  006308  0E00               	movlw	0
 20782  00630A  0100               	movlb	0	; () banked
 20783  00630C  6F85               	movwf	triggerRelay@res& (0+255),b
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;app_triggerCmd.c: 68: if (isRelayOn)
 20787  00630E  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20788  006310  B4D8               	btfsc	status,2,c
 20789  006312  D002               	goto	l2854
 20790                           
 20791                           ; BSR set to: 0
 20792                           ;app_triggerCmd.c: 69: {
 20793                           ;app_triggerCmd.c: 70: txBuffer[1] = 0x01;
 20794  006314  0E01               	movlw	1
 20795  006316  6F88               	movwf	(triggerRelay@txBuffer+1)& (0+255),b
 20796  006318                     l2854:
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;app_triggerCmd.c: 71: }
 20800                           ;app_triggerCmd.c: 72: res = I2cSlv_SendI2cMsg(txBuffer, 1, 2);
 20801                           
 20802                           ; BSR set to: 0
 20803  006318  0E87               	movlw	low triggerRelay@txBuffer
 20804  00631A  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20805  00631C  0E00               	movlw	high triggerRelay@txBuffer
 20806  00631E  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20807  006320  0E01               	movlw	1
 20808  006322  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 20809  006324  0E02               	movlw	2
 20810  006326  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20811  006328  ECCA  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 20812  00632C  0100               	movlb	0	; () banked
 20813  00632E  6F85               	movwf	triggerRelay@res& (0+255),b
 20814  006330  0012               	return	
 20815  006332                     __end_of_triggerRelay:
 20816                           	opt stack 0
 20817                           tosu	equ	0xFFF
 20818                           tosh	equ	0xFFE
 20819                           tosl	equ	0xFFD
 20820                           pclath	equ	0xFFA
 20821                           tblptru	equ	0xFF8
 20822                           tblptrh	equ	0xFF7
 20823                           tblptrl	equ	0xFF6
 20824                           tablat	equ	0xFF5
 20825                           prodh	equ	0xFF4
 20826                           prodl	equ	0xFF3
 20827                           intcon	equ	0xFF2
 20828                           intcon2	equ	0xFF1
 20829                           intcon3	equ	0xFF0
 20830                           indf0	equ	0xFEF
 20831                           postinc0	equ	0xFEE
 20832                           plusw0	equ	0xFEB
 20833                           fsr0h	equ	0xFEA
 20834                           fsr0l	equ	0xFE9
 20835                           wreg	equ	0xFE8
 20836                           indf1	equ	0xFE7
 20837                           postinc1	equ	0xFE6
 20838                           postdec1	equ	0xFE5
 20839                           fsr1h	equ	0xFE2
 20840                           fsr1l	equ	0xFE1
 20841                           indf2	equ	0xFDF
 20842                           postinc2	equ	0xFDE
 20843                           postdec2	equ	0xFDD
 20844                           plusw2	equ	0xFDB
 20845                           fsr2h	equ	0xFDA
 20846                           fsr2l	equ	0xFD9
 20847                           status	equ	0xFD8
 20848                           
 20849 ;; *************** function _initFsm *****************
 20850 ;; Defined at:
 20851 ;;		line 224 in file "../Source/c/04_App/app_init.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      unsigned char 
 20858 ;; Registers used:
 20859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20866 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20868 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20869 ;;Total ram usage:        1 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:   18
 20872 ;; This function calls:
 20873 ;;		_GetCallerNumber
 20874 ;;		_Led_SetLedStatus
 20875 ;;		_initEeprom
 20876 ;;		_initGprsModem
 20877 ;;		_saveNumberInMemory
 20878 ;;		_savePreamble
 20879 ;;		_waitSetupCall
 20880 ;; This function is called by:
 20881 ;;		_MyApp_Task
 20882 ;; This function uses a non-reentrant model
 20883 ;;
 20884                           
 20885                           	psect	text92
 20886  004550                     __ptext92:
 20887                           	opt stack 0
 20888  004550                     _initFsm:
 20889                           	opt stack 9
 20890                           
 20891                           ;app_init.c: 226: static initFsmStates currentState = INIT_FSM_MODEM;
 20892                           ;app_init.c: 227: bool isInitialized = 0;
 20893                           
 20894                           ; BSR set to: 0
 20895                           ;incstack = 0
 20896  004550  0E00               	movlw	0
 20897  004552  0101               	movlb	1	; () banked
 20898  004554  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20899                           
 20900                           ;app_init.c: 229: switch (currentState)
 20901  004556  D03D               	goto	l2695
 20902  004558                     
 20903                           ; BSR set to: 1
 20904                           ;app_init.c: 232: if (initGprsModem())
 20905                           
 20906                           ; BSR set to: 1
 20907  004558  ECA9  F026         	call	_initGprsModem	;wreg free
 20908  00455C  0900               	iorlw	0
 20909  00455E  B4D8               	btfsc	status,2,c
 20910  004560  D048               	goto	l2698
 20911                           
 20912                           ;app_init.c: 233: {
 20913                           ;app_init.c: 234: currentState = INIT_FSM_EEPROM;
 20914  004562  0E01               	movlw	1
 20915  004564  D027               	goto	L29
 20916  004566                     
 20917                           ; BSR set to: 1
 20918                           ;app_init.c: 239: if (initEeprom())
 20919                           
 20920                           ; BSR set to: 1
 20921  004566  ECC8  F027         	call	_initEeprom	;wreg free
 20922  00456A  0900               	iorlw	0
 20923  00456C  B4D8               	btfsc	status,2,c
 20924  00456E  D041               	goto	l2698
 20925                           
 20926                           ;app_init.c: 240: {
 20927                           ;app_init.c: 241: currentState = INIT_FSM_WAIT_CMD;
 20928  004570  0E02               	movlw	2
 20929  004572  0101               	movlb	1	; () banked
 20930  004574  6FD8               	movwf	initFsm@currentState& (0+255),b
 20931                           
 20932                           ;app_init.c: 242: setupCallTicks = 0;
 20933  004576  0E00               	movlw	0
 20934  004578  0103               	movlb	3	; () banked
 20935  00457A  6FC1               	movwf	(_setupCallTicks+1)& (0+255),b
 20936  00457C  0E00               	movlw	0
 20937  00457E  6FC0               	movwf	_setupCallTicks& (0+255),b
 20938                           
 20939                           ; BSR set to: 3
 20940                           ;app_init.c: 243: }
 20941                           ;app_init.c: 244: break;
 20942  004580  D038               	goto	l2698
 20943  004582                     
 20944                           ;app_init.c: 247: if (isMemoryEmpty)
 20945                           
 20946                           ; BSR set to: 3
 20947  004582  0101               	movlb	1	; () banked
 20948  004584  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 20949  004586  B4D8               	btfsc	status,2,c
 20950  004588  D010               	goto	l2702
 20951                           
 20952                           ; BSR set to: 1
 20953                           ;app_init.c: 248: {
 20954                           ;app_init.c: 249: if (waitSetupCall())
 20955  00458A  EC95  F02E         	call	_waitSetupCall	;wreg free
 20956  00458E  0900               	iorlw	0
 20957  004590  B4D8               	btfsc	status,2,c
 20958  004592  D02F               	goto	l2698
 20959                           
 20960                           ;app_init.c: 250: {
 20961                           ;app_init.c: 251: saveNumberInMemory(16, GetCallerNumber());
 20962  004594  EC99  F031         	call	_GetCallerNumber	;wreg free
 20963  004598  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 20964  00459C  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 20965  0045A0  0E10               	movlw	16
 20966  0045A2  EC5E  F034         	call	_saveNumberInMemory
 20967                           
 20968                           ;app_init.c: 252: currentState = INIT_FSM_PREAMBLE;
 20969  0045A6  0E03               	movlw	3
 20970  0045A8  D005               	goto	L29
 20971  0045AA                     l2702:
 20972                           
 20973                           ; BSR set to: 1
 20974                           ;app_init.c: 256: else
 20975                           ;app_init.c: 257: {
 20976                           ;app_init.c: 258: currentState = INIT_FSM_COMPLETE;
 20977                           
 20978                           ; BSR set to: 1
 20979  0045AA  0E04               	movlw	4
 20980  0045AC  D004               	goto	L28
 20981  0045AE                     
 20982                           ; BSR set to: 1
 20983                           ;app_init.c: 263: savePreamble();
 20984                           
 20985                           ; BSR set to: 1
 20986  0045AE  EC51  F034         	call	_savePreamble	;wreg free
 20987                           
 20988                           ;app_init.c: 264: currentState = INIT_FSM_COMPLETE;
 20989  0045B2  0E04               	movlw	4
 20990  0045B4                     L29:
 20991  0045B4  0101               	movlb	1	; () banked
 20992  0045B6                     L28:
 20993  0045B6  6FD8               	movwf	initFsm@currentState& (0+255),b
 20994                           
 20995                           ;app_init.c: 265: break;
 20996  0045B8  D01C               	goto	l2698
 20997  0045BA                     
 20998                           ; BSR set to: 1
 20999                           ;app_init.c: 268: Led_SetLedStatus(1u, LED_STS_ON);
 21000                           
 21001                           ; BSR set to: 1
 21002  0045BA  0E01               	movlw	1
 21003  0045BC  0100               	movlb	0	; () banked
 21004  0045BE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21005  0045C0  0E01               	movlw	1
 21006  0045C2  EC63  F032         	call	_Led_SetLedStatus
 21007                           
 21008                           ;app_init.c: 269: currentState = INIT_FSM_MODEM;
 21009  0045C6  0E00               	movlw	0
 21010  0045C8  0101               	movlb	1	; () banked
 21011  0045CA  6FD8               	movwf	initFsm@currentState& (0+255),b
 21012                           
 21013                           ; BSR set to: 1
 21014                           ;app_init.c: 270: isInitialized = 1;
 21015  0045CC  0E01               	movlw	1
 21016  0045CE  6F03               	movwf	initFsm@isInitialized& (0+255),b
 21017                           
 21018                           ; BSR set to: 1
 21019                           ;app_init.c: 275: }
 21020                           
 21021                           ; BSR set to: 1
 21022                           ;app_init.c: 274: break;
 21023                           
 21024                           ;app_init.c: 273: default:
 21025                           
 21026                           ;app_init.c: 271: break;
 21027  0045D0  D010               	goto	l2698
 21028  0045D2                     l2695:
 21029                           
 21030                           ; BSR set to: 1
 21031                           
 21032                           ; BSR set to: 1
 21033  0045D2  51D8               	movf	initFsm@currentState& (0+255),w,b
 21034                           
 21035                           ; Switch size 1, requested type "space"
 21036                           ; Number of cases is 5, Range of values is 0 to 4
 21037                           ; switch strategies available:
 21038                           ; Name         Instructions Cycles
 21039                           ; simple_byte           16     9 (average)
 21040                           ;	Chosen strategy is simple_byte
 21041  0045D4  0A00               	xorlw	0	; case 0
 21042  0045D6  B4D8               	btfsc	status,2,c
 21043  0045D8  D7BF               	goto	l2696
 21044  0045DA  0A01               	xorlw	1	; case 1
 21045  0045DC  B4D8               	btfsc	status,2,c
 21046  0045DE  D7C3               	goto	l2699
 21047  0045E0  0A03               	xorlw	3	; case 2
 21048  0045E2  B4D8               	btfsc	status,2,c
 21049  0045E4  D7CE               	goto	l2701
 21050  0045E6  0A01               	xorlw	1	; case 3
 21051  0045E8  B4D8               	btfsc	status,2,c
 21052  0045EA  D7E1               	goto	l2705
 21053  0045EC  0A07               	xorlw	7	; case 4
 21054  0045EE  B4D8               	btfsc	status,2,c
 21055  0045F0  D7E4               	goto	l2706
 21056  0045F2                     l2698:
 21057                           
 21058                           ;app_init.c: 276: return isInitialized;
 21059                           
 21060                           ; BSR set to: 1
 21061  0045F2  0101               	movlb	1	; () banked
 21062  0045F4  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21063  0045F6  0012               	return	
 21064  0045F8                     __end_of_initFsm:
 21065                           	opt stack 0
 21066                           tosu	equ	0xFFF
 21067                           tosh	equ	0xFFE
 21068                           tosl	equ	0xFFD
 21069                           pclath	equ	0xFFA
 21070                           tblptru	equ	0xFF8
 21071                           tblptrh	equ	0xFF7
 21072                           tblptrl	equ	0xFF6
 21073                           tablat	equ	0xFF5
 21074                           prodh	equ	0xFF4
 21075                           prodl	equ	0xFF3
 21076                           intcon	equ	0xFF2
 21077                           intcon2	equ	0xFF1
 21078                           intcon3	equ	0xFF0
 21079                           indf0	equ	0xFEF
 21080                           postinc0	equ	0xFEE
 21081                           plusw0	equ	0xFEB
 21082                           fsr0h	equ	0xFEA
 21083                           fsr0l	equ	0xFE9
 21084                           wreg	equ	0xFE8
 21085                           indf1	equ	0xFE7
 21086                           postinc1	equ	0xFE6
 21087                           postdec1	equ	0xFE5
 21088                           fsr1h	equ	0xFE2
 21089                           fsr1l	equ	0xFE1
 21090                           indf2	equ	0xFDF
 21091                           postinc2	equ	0xFDE
 21092                           postdec2	equ	0xFDD
 21093                           plusw2	equ	0xFDB
 21094                           fsr2h	equ	0xFDA
 21095                           fsr2l	equ	0xFD9
 21096                           status	equ	0xFD8
 21097                           
 21098 ;; *************** function _waitSetupCall *****************
 21099 ;; Defined at:
 21100 ;;		line 194 in file "../Source/c/04_App/app_init.c"
 21101 ;; Parameters:    Size  Location     Type
 21102 ;;		None
 21103 ;; Auto vars:     Size  Location     Type
 21104 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21105 ;; Return value:  Size  Location     Type
 21106 ;;                  1    wreg      unsigned char 
 21107 ;; Registers used:
 21108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21109 ;; Tracked objects:
 21110 ;;		On entry : 0/0
 21111 ;;		On exit  : 0/0
 21112 ;;		Unchanged: 0/0
 21113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21118 ;;Total ram usage:        1 bytes
 21119 ;; Hardware stack levels used:    1
 21120 ;; Hardware stack levels required when called:   15
 21121 ;; This function calls:
 21122 ;;		_Led_SetLedStatus
 21123 ;;		_getSetupCall
 21124 ;;		_secondsAppTimer
 21125 ;; This function is called by:
 21126 ;;		_initFsm
 21127 ;; This function uses a non-reentrant model
 21128 ;;
 21129                           
 21130                           	psect	text93
 21131  005D2A                     __ptext93:
 21132                           	opt stack 0
 21133  005D2A                     _waitSetupCall:
 21134                           	opt stack 11
 21135                           
 21136                           ;app_init.c: 196: bool isCallArrived = 0;
 21137                           
 21138                           ; BSR set to: 1
 21139                           ;incstack = 0
 21140  005D2A  0E00               	movlw	0
 21141  005D2C  0100               	movlb	0	; () banked
 21142  005D2E  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21143                           
 21144                           ; BSR set to: 0
 21145                           ;app_init.c: 197: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21146  005D30  0EC0               	movlw	low _setupCallTicks
 21147  005D32  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21148  005D34  0E03               	movlw	high _setupCallTicks
 21149  005D36  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21150  005D38  0E00               	movlw	0
 21151  005D3A  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21152  005D3C  0E1E               	movlw	30
 21153  005D3E  ECA4  F023         	call	_secondsAppTimer
 21154  005D42  0900               	iorlw	0
 21155  005D44  A4D8               	btfss	status,2,c
 21156  005D46  D00F               	goto	l2684
 21157                           
 21158                           ;app_init.c: 198: {
 21159                           ;app_init.c: 199: Led_SetLedStatus(1u, LED_STS_BLINK);
 21160  005D48  0E03               	movlw	3
 21161  005D4A  0100               	movlb	0	; () banked
 21162  005D4C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21163  005D4E  0E01               	movlw	1
 21164  005D50  EC63  F032         	call	_Led_SetLedStatus
 21165                           
 21166                           ;app_init.c: 200: if (getSetupCall())
 21167  005D54  ECCE  F033         	call	_getSetupCall	;wreg free
 21168  005D58  0900               	iorlw	0
 21169  005D5A  B4D8               	btfsc	status,2,c
 21170  005D5C  D00A               	goto	l2686
 21171                           
 21172                           ;app_init.c: 201: {
 21173                           ;app_init.c: 202: isCallArrived = 1;
 21174  005D5E  0E01               	movlw	1
 21175  005D60  0100               	movlb	0	; () banked
 21176  005D62  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21177                           
 21178                           ; BSR set to: 0
 21179                           ;app_init.c: 203: }
 21180                           ;app_init.c: 204: }
 21181  005D64  D006               	goto	l2686
 21182  005D66                     l2684:
 21183                           
 21184                           ;app_init.c: 205: else
 21185                           ;app_init.c: 206: {
 21186                           ;app_init.c: 207: Led_SetLedStatus(1u, LED_STS_ON);
 21187                           
 21188                           ; BSR set to: 0
 21189  005D66  0E01               	movlw	1
 21190  005D68  0100               	movlb	0	; () banked
 21191  005D6A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21192  005D6C  0E01               	movlw	1
 21193  005D6E  EC63  F032         	call	_Led_SetLedStatus
 21194  005D72                     l2686:
 21195                           
 21196                           ;app_init.c: 208: }
 21197                           ;app_init.c: 209: return isCallArrived;
 21198  005D72  0100               	movlb	0	; () banked
 21199  005D74  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21200  005D76  0012               	return	
 21201  005D78                     __end_of_waitSetupCall:
 21202                           	opt stack 0
 21203                           tosu	equ	0xFFF
 21204                           tosh	equ	0xFFE
 21205                           tosl	equ	0xFFD
 21206                           pclath	equ	0xFFA
 21207                           tblptru	equ	0xFF8
 21208                           tblptrh	equ	0xFF7
 21209                           tblptrl	equ	0xFF6
 21210                           tablat	equ	0xFF5
 21211                           prodh	equ	0xFF4
 21212                           prodl	equ	0xFF3
 21213                           intcon	equ	0xFF2
 21214                           intcon2	equ	0xFF1
 21215                           intcon3	equ	0xFF0
 21216                           indf0	equ	0xFEF
 21217                           postinc0	equ	0xFEE
 21218                           plusw0	equ	0xFEB
 21219                           fsr0h	equ	0xFEA
 21220                           fsr0l	equ	0xFE9
 21221                           wreg	equ	0xFE8
 21222                           indf1	equ	0xFE7
 21223                           postinc1	equ	0xFE6
 21224                           postdec1	equ	0xFE5
 21225                           fsr1h	equ	0xFE2
 21226                           fsr1l	equ	0xFE1
 21227                           indf2	equ	0xFDF
 21228                           postinc2	equ	0xFDE
 21229                           postdec2	equ	0xFDD
 21230                           plusw2	equ	0xFDB
 21231                           fsr2h	equ	0xFDA
 21232                           fsr2l	equ	0xFD9
 21233                           status	equ	0xFD8
 21234                           
 21235 ;; *************** function _getSetupCall *****************
 21236 ;; Defined at:
 21237 ;;		line 178 in file "../Source/c/04_App/app_init.c"
 21238 ;; Parameters:    Size  Location     Type
 21239 ;;		None
 21240 ;; Auto vars:     Size  Location     Type
 21241 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21242 ;; Return value:  Size  Location     Type
 21243 ;;                  1    wreg      unsigned char 
 21244 ;; Registers used:
 21245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21246 ;; Tracked objects:
 21247 ;;		On entry : 0/0
 21248 ;;		On exit  : 0/0
 21249 ;;		Unchanged: 0/0
 21250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21255 ;;Total ram usage:        1 bytes
 21256 ;; Hardware stack levels used:    1
 21257 ;; Hardware stack levels required when called:   14
 21258 ;; This function calls:
 21259 ;;		_Mdm_HangPhoneCall
 21260 ;;		_Mdm_IsRinging
 21261 ;; This function is called by:
 21262 ;;		_waitSetupCall
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           	psect	text94
 21267  00679C                     __ptext94:
 21268                           	opt stack 0
 21269  00679C                     _getSetupCall:
 21270                           	opt stack 11
 21271                           
 21272                           ;app_init.c: 180: bool isCalledReceived = 0;
 21273                           
 21274                           ; BSR set to: 0
 21275                           ;incstack = 0
 21276  00679C  0E00               	movlw	0
 21277  00679E  0100               	movlb	0	; () banked
 21278  0067A0  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21279                           
 21280                           ; BSR set to: 0
 21281                           ;app_init.c: 182: if (Mdm_IsRinging())
 21282  0067A2  EC34  F033         	call	_Mdm_IsRinging	;wreg free
 21283  0067A6  0900               	iorlw	0
 21284  0067A8  B4D8               	btfsc	status,2,c
 21285  0067AA  D005               	goto	l2680
 21286                           
 21287                           ;app_init.c: 183: {
 21288                           ;app_init.c: 184: Mdm_HangPhoneCall();
 21289  0067AC  ECCE  F034         	call	_Mdm_HangPhoneCall	;wreg free
 21290                           
 21291                           ;app_init.c: 185: isCalledReceived = 1;
 21292  0067B0  0E01               	movlw	1
 21293  0067B2  0100               	movlb	0	; () banked
 21294  0067B4  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21295  0067B6                     l2680:
 21296                           
 21297                           ;app_init.c: 186: }
 21298                           ;app_init.c: 187: return isCalledReceived;
 21299                           
 21300                           ; BSR set to: 0
 21301  0067B6  0100               	movlb	0	; () banked
 21302  0067B8  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21303  0067BA  0012               	return	
 21304  0067BC                     __end_of_getSetupCall:
 21305                           	opt stack 0
 21306                           tosu	equ	0xFFF
 21307                           tosh	equ	0xFFE
 21308                           tosl	equ	0xFFD
 21309                           pclath	equ	0xFFA
 21310                           tblptru	equ	0xFF8
 21311                           tblptrh	equ	0xFF7
 21312                           tblptrl	equ	0xFF6
 21313                           tablat	equ	0xFF5
 21314                           prodh	equ	0xFF4
 21315                           prodl	equ	0xFF3
 21316                           intcon	equ	0xFF2
 21317                           intcon2	equ	0xFF1
 21318                           intcon3	equ	0xFF0
 21319                           indf0	equ	0xFEF
 21320                           postinc0	equ	0xFEE
 21321                           plusw0	equ	0xFEB
 21322                           fsr0h	equ	0xFEA
 21323                           fsr0l	equ	0xFE9
 21324                           wreg	equ	0xFE8
 21325                           indf1	equ	0xFE7
 21326                           postinc1	equ	0xFE6
 21327                           postdec1	equ	0xFE5
 21328                           fsr1h	equ	0xFE2
 21329                           fsr1l	equ	0xFE1
 21330                           indf2	equ	0xFDF
 21331                           postinc2	equ	0xFDE
 21332                           postdec2	equ	0xFDD
 21333                           plusw2	equ	0xFDB
 21334                           fsr2h	equ	0xFDA
 21335                           fsr2l	equ	0xFD9
 21336                           status	equ	0xFD8
 21337                           
 21338 ;; *************** function _savePreamble *****************
 21339 ;; Defined at:
 21340 ;;		line 212 in file "../Source/c/04_App/app_init.c"
 21341 ;; Parameters:    Size  Location     Type
 21342 ;;		None
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;		None
 21345 ;; Return value:  Size  Location     Type
 21346 ;;                  1    wreg      void 
 21347 ;; Registers used:
 21348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21349 ;; Tracked objects:
 21350 ;;		On entry : 0/0
 21351 ;;		On exit  : 0/0
 21352 ;;		Unchanged: 0/0
 21353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21358 ;;Total ram usage:        0 bytes
 21359 ;; Hardware stack levels used:    1
 21360 ;; Hardware stack levels required when called:   14
 21361 ;; This function calls:
 21362 ;;		_Eeprom_Write
 21363 ;;		_initPreamble
 21364 ;; This function is called by:
 21365 ;;		_initFsm
 21366 ;; This function uses a non-reentrant model
 21367 ;;
 21368                           
 21369                           	psect	text95
 21370  0068A2                     __ptext95:
 21371                           	opt stack 0
 21372  0068A2                     _savePreamble:
 21373                           	opt stack 12
 21374                           
 21375                           ;app_init.c: 214: Eeprom_Write(0, initPreamble(), 4);
 21376                           
 21377                           ; BSR set to: 0
 21378                           ;incstack = 0
 21379  0068A2  EC0C  F034         	call	_initPreamble	;wreg free
 21380  0068A6  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21381  0068AA  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21382  0068AE  0E04               	movlw	4
 21383  0068B0  0100               	movlb	0	; () banked
 21384  0068B2  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21385  0068B4  0E00               	movlw	0
 21386  0068B6  ECA2  F02D         	call	_Eeprom_Write
 21387  0068BA  0012               	return		;funcret
 21388  0068BC                     __end_of_savePreamble:
 21389                           	opt stack 0
 21390                           tosu	equ	0xFFF
 21391                           tosh	equ	0xFFE
 21392                           tosl	equ	0xFFD
 21393                           pclath	equ	0xFFA
 21394                           tblptru	equ	0xFF8
 21395                           tblptrh	equ	0xFF7
 21396                           tblptrl	equ	0xFF6
 21397                           tablat	equ	0xFF5
 21398                           prodh	equ	0xFF4
 21399                           prodl	equ	0xFF3
 21400                           intcon	equ	0xFF2
 21401                           intcon2	equ	0xFF1
 21402                           intcon3	equ	0xFF0
 21403                           indf0	equ	0xFEF
 21404                           postinc0	equ	0xFEE
 21405                           plusw0	equ	0xFEB
 21406                           fsr0h	equ	0xFEA
 21407                           fsr0l	equ	0xFE9
 21408                           wreg	equ	0xFE8
 21409                           indf1	equ	0xFE7
 21410                           postinc1	equ	0xFE6
 21411                           postdec1	equ	0xFE5
 21412                           fsr1h	equ	0xFE2
 21413                           fsr1l	equ	0xFE1
 21414                           indf2	equ	0xFDF
 21415                           postinc2	equ	0xFDE
 21416                           postdec2	equ	0xFDD
 21417                           plusw2	equ	0xFDB
 21418                           fsr2h	equ	0xFDA
 21419                           fsr2l	equ	0xFD9
 21420                           status	equ	0xFD8
 21421                           
 21422 ;; *************** function _initPreamble *****************
 21423 ;; Defined at:
 21424 ;;		line 284 in file "../Source/c/04_App/app_init.c"
 21425 ;; Parameters:    Size  Location     Type
 21426 ;;		None
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;		None
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  2   29[BANK0 ] PTR unsigned char 
 21431 ;; Registers used:
 21432 ;;		wreg, status,2, status,0
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/0
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21442 ;;Total ram usage:        2 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; Hardware stack levels required when called:   11
 21445 ;; This function calls:
 21446 ;;		Nothing
 21447 ;; This function is called by:
 21448 ;;		_savePreamble
 21449 ;; This function uses a non-reentrant model
 21450 ;;
 21451                           
 21452                           	psect	text96
 21453  006818                     __ptext96:
 21454                           	opt stack 0
 21455  006818                     _initPreamble:
 21456                           	opt stack 14
 21457                           
 21458                           ;app_init.c: 286: memoryPreamble[0] = 'U';
 21459                           
 21460                           ;incstack = 0
 21461  006818  0E55               	movlw	85
 21462  00681A  0103               	movlb	3	; () banked
 21463  00681C  6FAA               	movwf	_memoryPreamble& (0+255),b
 21464                           
 21465                           ;app_init.c: 287: memoryPreamble[1] = 'S';
 21466  00681E  0E53               	movlw	83
 21467  006820  6FAB               	movwf	(_memoryPreamble+1)& (0+255),b
 21468                           
 21469                           ;app_init.c: 288: memoryPreamble[2] = 'I';
 21470  006822  0E49               	movlw	73
 21471  006824  6FAC               	movwf	(_memoryPreamble+2)& (0+255),b
 21472                           
 21473                           ;app_init.c: 289: memoryPreamble[3] = 'M';
 21474  006826  0E4D               	movlw	77
 21475  006828  6FAD               	movwf	(_memoryPreamble+3)& (0+255),b
 21476                           
 21477                           ; BSR set to: 3
 21478                           ;app_init.c: 290: return memoryPreamble;
 21479  00682A  0EAA               	movlw	low _memoryPreamble
 21480  00682C  0100               	movlb	0	; () banked
 21481  00682E  6F7D               	movwf	?_initPreamble& (0+255),b
 21482  006830  0E03               	movlw	high _memoryPreamble
 21483  006832  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21484  006834  0012               	return	
 21485  006836                     __end_of_initPreamble:
 21486                           	opt stack 0
 21487                           tosu	equ	0xFFF
 21488                           tosh	equ	0xFFE
 21489                           tosl	equ	0xFFD
 21490                           pclath	equ	0xFFA
 21491                           tblptru	equ	0xFF8
 21492                           tblptrh	equ	0xFF7
 21493                           tblptrl	equ	0xFF6
 21494                           tablat	equ	0xFF5
 21495                           prodh	equ	0xFF4
 21496                           prodl	equ	0xFF3
 21497                           intcon	equ	0xFF2
 21498                           intcon2	equ	0xFF1
 21499                           intcon3	equ	0xFF0
 21500                           indf0	equ	0xFEF
 21501                           postinc0	equ	0xFEE
 21502                           plusw0	equ	0xFEB
 21503                           fsr0h	equ	0xFEA
 21504                           fsr0l	equ	0xFE9
 21505                           wreg	equ	0xFE8
 21506                           indf1	equ	0xFE7
 21507                           postinc1	equ	0xFE6
 21508                           postdec1	equ	0xFE5
 21509                           fsr1h	equ	0xFE2
 21510                           fsr1l	equ	0xFE1
 21511                           indf2	equ	0xFDF
 21512                           postinc2	equ	0xFDE
 21513                           postdec2	equ	0xFDD
 21514                           plusw2	equ	0xFDB
 21515                           fsr2h	equ	0xFDA
 21516                           fsr2l	equ	0xFD9
 21517                           status	equ	0xFD8
 21518                           
 21519 ;; *************** function _initGprsModem *****************
 21520 ;; Defined at:
 21521 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21522 ;; Parameters:    Size  Location     Type
 21523 ;;		None
 21524 ;; Auto vars:     Size  Location     Type
 21525 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21526 ;; Return value:  Size  Location     Type
 21527 ;;                  1    wreg      unsigned char 
 21528 ;; Registers used:
 21529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21530 ;; Tracked objects:
 21531 ;;		On entry : 0/0
 21532 ;;		On exit  : 0/0
 21533 ;;		Unchanged: 0/0
 21534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21538 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21539 ;;Total ram usage:        1 bytes
 21540 ;; Hardware stack levels used:    1
 21541 ;; Hardware stack levels required when called:   14
 21542 ;; This function calls:
 21543 ;;		_Mdm_SetSmsFormat
 21544 ;;		_Uart_WriteConstString
 21545 ;;		_secondsAppTimer
 21546 ;; This function is called by:
 21547 ;;		_initFsm
 21548 ;; This function uses a non-reentrant model
 21549 ;;
 21550                           
 21551                           	psect	text97
 21552  004D52                     __ptext97:
 21553                           	opt stack 0
 21554  004D52                     _initGprsModem:
 21555                           	opt stack 12
 21556                           
 21557                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21558                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21559                           ;app_init.c: 90: bool isInitialized = 0;
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;incstack = 0
 21563  004D52  0E00               	movlw	0
 21564  004D54  0100               	movlb	0	; () banked
 21565  004D56  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21566                           
 21567                           ;app_init.c: 92: switch(currentState)
 21568  004D58  D035               	goto	l2652
 21569  004D5A                     
 21570                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21571                           
 21572                           ; BSR set to: 0
 21573  004D5A  0E03               	movlw	3
 21574  004D5C  0100               	movlb	0	; () banked
 21575  004D5E  19D2               	xorwf	_MdmStatus& (0+255),w,b
 21576  004D60  B4D8               	btfsc	status,2,c
 21577  004D62  D003               	goto	u14320
 21578                           
 21579                           ; BSR set to: 0
 21580  004D64  05D2               	decf	_MdmStatus& (0+255),w,b
 21581  004D66  A4D8               	btfss	status,2,c
 21582  004D68  D03B               	goto	l2658
 21583  004D6A                     u14320:
 21584                           
 21585                           ; BSR set to: 0
 21586                           ;app_init.c: 96: {
 21587                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21588                           
 21589                           ; BSR set to: 0
 21590  004D6A  0EBE               	movlw	low initGprsModem@modemCounter
 21591  004D6C  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21592  004D6E  0E03               	movlw	high initGprsModem@modemCounter
 21593  004D70  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21594  004D72  0E00               	movlw	0
 21595  004D74  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21596  004D76  0E05               	movlw	5
 21597  004D78  ECA4  F023         	call	_secondsAppTimer
 21598  004D7C  0900               	iorlw	0
 21599  004D7E  B4D8               	btfsc	status,2,c
 21600  004D80  D02F               	goto	l2658
 21601                           
 21602                           ;app_init.c: 98: {
 21603                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21604  004D82  0E01               	movlw	1
 21605  004D84  EC6D  F02E         	call	_Mdm_SetSmsFormat
 21606                           
 21607                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21608  004D88  0E01               	movlw	1
 21609  004D8A  D013               	goto	L31
 21610  004D8C                     
 21611                           ; BSR set to: 1
 21612                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21613                           
 21614                           ; BSR set to: 1
 21615  004D8C  0EFA               	movlw	low STR_30
 21616  004D8E  0100               	movlb	0	; () banked
 21617  004D90  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21618  004D92  0EFE               	movlw	high STR_30
 21619  004D94  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21620  004D96  0E01               	movlw	1
 21621  004D98  EC49  F030         	call	_Uart_WriteConstString
 21622                           
 21623                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21624  004D9C  0E02               	movlw	2
 21625  004D9E  D009               	goto	L31
 21626  004DA0                     
 21627                           ; BSR set to: 1
 21628                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21629                           
 21630                           ; BSR set to: 1
 21631  004DA0  0EAA               	movlw	low STR_31
 21632  004DA2  0100               	movlb	0	; () banked
 21633  004DA4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21634  004DA6  0EFF               	movlw	high STR_31
 21635  004DA8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21636  004DAA  0E01               	movlw	1
 21637  004DAC  EC49  F030         	call	_Uart_WriteConstString
 21638                           
 21639                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21640  004DB0  0E03               	movlw	3
 21641  004DB2                     L31:
 21642  004DB2  0101               	movlb	1	; () banked
 21643  004DB4  6FDA               	movwf	initGprsModem@currentState& (0+255),b
 21644                           
 21645                           ;app_init.c: 113: break;
 21646  004DB6  D014               	goto	l2658
 21647  004DB8                     
 21648                           ; BSR set to: 1
 21649                           ;app_init.c: 116: currentState = MODEM_INIT;
 21650                           
 21651                           ; BSR set to: 1
 21652  004DB8  0E00               	movlw	0
 21653  004DBA  6FDA               	movwf	initGprsModem@currentState& (0+255),b
 21654                           
 21655                           ;app_init.c: 117: isInitialized = 1;
 21656  004DBC  0E01               	movlw	1
 21657  004DBE  0100               	movlb	0	; () banked
 21658  004DC0  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;app_init.c: 122: }
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;app_init.c: 121: break;
 21665                           
 21666                           ;app_init.c: 120: default:
 21667                           
 21668                           ;app_init.c: 118: break;
 21669  004DC2  D00E               	goto	l2658
 21670  004DC4                     l2652:
 21671                           
 21672                           ; BSR set to: 0
 21673                           
 21674                           ; BSR set to: 0
 21675  004DC4  0101               	movlb	1	; () banked
 21676  004DC6  51DA               	movf	initGprsModem@currentState& (0+255),w,b
 21677                           
 21678                           ; Switch size 1, requested type "space"
 21679                           ; Number of cases is 4, Range of values is 0 to 3
 21680                           ; switch strategies available:
 21681                           ; Name         Instructions Cycles
 21682                           ; simple_byte           13     7 (average)
 21683                           ;	Chosen strategy is simple_byte
 21684  004DC8  0A00               	xorlw	0	; case 0
 21685  004DCA  B4D8               	btfsc	status,2,c
 21686  004DCC  D7C6               	goto	l2653
 21687  004DCE  0A01               	xorlw	1	; case 1
 21688  004DD0  B4D8               	btfsc	status,2,c
 21689  004DD2  D7DC               	goto	l2659
 21690  004DD4  0A03               	xorlw	3	; case 2
 21691  004DD6  B4D8               	btfsc	status,2,c
 21692  004DD8  D7E3               	goto	l2660
 21693  004DDA  0A01               	xorlw	1	; case 3
 21694  004DDC  B4D8               	btfsc	status,2,c
 21695  004DDE  D7EC               	goto	l2661
 21696  004DE0                     l2658:
 21697                           
 21698                           ;app_init.c: 123: return isInitialized;
 21699                           
 21700                           ; BSR set to: 1
 21701  004DE0  0100               	movlb	0	; () banked
 21702  004DE2  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21703  004DE4  0012               	return	
 21704  004DE6                     __end_of_initGprsModem:
 21705                           	opt stack 0
 21706                           tosu	equ	0xFFF
 21707                           tosh	equ	0xFFE
 21708                           tosl	equ	0xFFD
 21709                           pclath	equ	0xFFA
 21710                           tblptru	equ	0xFF8
 21711                           tblptrh	equ	0xFF7
 21712                           tblptrl	equ	0xFF6
 21713                           tablat	equ	0xFF5
 21714                           prodh	equ	0xFF4
 21715                           prodl	equ	0xFF3
 21716                           intcon	equ	0xFF2
 21717                           intcon2	equ	0xFF1
 21718                           intcon3	equ	0xFF0
 21719                           indf0	equ	0xFEF
 21720                           postinc0	equ	0xFEE
 21721                           plusw0	equ	0xFEB
 21722                           fsr0h	equ	0xFEA
 21723                           fsr0l	equ	0xFE9
 21724                           wreg	equ	0xFE8
 21725                           indf1	equ	0xFE7
 21726                           postinc1	equ	0xFE6
 21727                           postdec1	equ	0xFE5
 21728                           fsr1h	equ	0xFE2
 21729                           fsr1l	equ	0xFE1
 21730                           indf2	equ	0xFDF
 21731                           postinc2	equ	0xFDE
 21732                           postdec2	equ	0xFDD
 21733                           plusw2	equ	0xFDB
 21734                           fsr2h	equ	0xFDA
 21735                           fsr2l	equ	0xFD9
 21736                           status	equ	0xFD8
 21737                           
 21738 ;; *************** function _secondsAppTimer *****************
 21739 ;; Defined at:
 21740 ;;		line 67 in file "../Source/c/04_App/app_utils.c"
 21741 ;; Parameters:    Size  Location     Type
 21742 ;;  seconds         1    wreg     unsigned char 
 21743 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21744 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 21745 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21746 ;; Auto vars:     Size  Location     Type
 21747 ;;  seconds         1   47[BANK0 ] unsigned char 
 21748 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21749 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21750 ;; Return value:  Size  Location     Type
 21751 ;;                  1    wreg      unsigned char 
 21752 ;; Registers used:
 21753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21754 ;; Tracked objects:
 21755 ;;		On entry : 0/0
 21756 ;;		On exit  : 0/0
 21757 ;;		Unchanged: 0/0
 21758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21759 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21761 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21762 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21763 ;;Total ram usage:        9 bytes
 21764 ;; Hardware stack levels used:    1
 21765 ;; Hardware stack levels required when called:   12
 21766 ;; This function calls:
 21767 ;;		___lwdiv
 21768 ;;		___wmul
 21769 ;; This function is called by:
 21770 ;;		_initGprsModem
 21771 ;;		_waitSetupCall
 21772 ;;		_blinkForSeconds
 21773 ;; This function uses a non-reentrant model
 21774 ;;
 21775                           
 21776                           	psect	text98
 21777  004748                     __ptext98:
 21778                           	opt stack 0
 21779  004748                     _secondsAppTimer:
 21780                           	opt stack 13
 21781                           
 21782                           ; BSR set to: 0
 21783                           ;incstack = 0
 21784                           ;secondsAppTimer@seconds stored from wreg
 21785  004748  0100               	movlb	0	; () banked
 21786  00474A  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21787                           
 21788                           ;app_utils.c: 69: bool isExpired = 1;
 21789  00474C  0E01               	movlw	1
 21790  00474E  0100               	movlb	0	; () banked
 21791  004750  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21792                           
 21793                           ; BSR set to: 0
 21794                           ;app_utils.c: 70: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21795  004752  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21796  004756  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21797  004758  0E03               	movlw	3
 21798  00475A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21799  00475C  0EE8               	movlw	232
 21800  00475E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21801  004760  ECE9  F032         	call	___wmul	;wreg free
 21802  004764  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21803  004768  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21804  00476C  0E00               	movlw	0
 21805  00476E  0100               	movlb	0	; () banked
 21806  004770  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21807  004772  0E64               	movlw	100
 21808  004774  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21809  004776  EC78  F02D         	call	___lwdiv	;wreg free
 21810  00477A  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21811  00477E  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21812                           
 21813                           ;app_utils.c: 72: if (*counter < destinationTicks)
 21814  004782  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21815  004786  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21816  00478A  0100               	movlb	0	; () banked
 21817  00478C  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21818  00478E  5CDE               	subwf	postinc2,w,c
 21819  004790  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21820  004792  58DE               	subwfb	postinc2,w,c
 21821  004794  B0D8               	btfsc	status,0,c
 21822  004796  D009               	goto	l2728
 21823                           
 21824                           ; BSR set to: 0
 21825                           ;app_utils.c: 73: {
 21826                           ;app_utils.c: 74: *counter += 1;
 21827  004798  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21828  00479C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21829  0047A0  2ADE               	incf	postinc2,f,c
 21830  0047A2  0E00               	movlw	0
 21831  0047A4  22DD               	addwfc	postdec2,f,c
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;app_utils.c: 75: isExpired = 0;
 21835  0047A6  0E00               	movlw	0
 21836  0047A8  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21837  0047AA                     l2728:
 21838                           
 21839                           ; BSR set to: 0
 21840                           ;app_utils.c: 76: }
 21841                           ;app_utils.c: 77: if (*counter == destinationTicks)
 21842                           
 21843                           ; BSR set to: 0
 21844  0047AA  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21845  0047AE  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21846  0047B2  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21847  0047B4  18DE               	xorwf	postinc2,w,c
 21848  0047B6  E117               	bnz	l14104
 21849  0047B8  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21850  0047BA  18DE               	xorwf	postinc2,w,c
 21851  0047BC  A4D8               	btfss	status,2,c
 21852  0047BE  D013               	goto	l2731
 21853                           
 21854                           ; BSR set to: 0
 21855                           ;app_utils.c: 78: {
 21856                           ;app_utils.c: 79: if (isCyclic)
 21857  0047C0  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21858  0047C2  B4D8               	btfsc	status,2,c
 21859  0047C4  D008               	goto	l2730
 21860                           
 21861                           ; BSR set to: 0
 21862                           ;app_utils.c: 80: {
 21863                           ;app_utils.c: 81: *counter = 0;
 21864  0047C6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21865  0047CA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21866  0047CE  0E00               	movlw	0
 21867  0047D0  6EDE               	movwf	postinc2,c
 21868  0047D2  0E00               	movlw	0
 21869  0047D4  D007               	goto	L32
 21870  0047D6                     l2730:
 21871                           
 21872                           ; BSR set to: 0
 21873                           ;app_utils.c: 83: else
 21874                           ;app_utils.c: 84: {
 21875                           ;app_utils.c: 85: *counter = 0xFFFF;
 21876                           
 21877                           ; BSR set to: 0
 21878  0047D6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21879  0047DA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21880  0047DE  0EFF               	movlw	255
 21881  0047E0  6EDE               	movwf	postinc2,c
 21882  0047E2  0EFF               	movlw	255
 21883  0047E4                     L32:
 21884  0047E4  6EDD               	movwf	postdec2,c
 21885  0047E6                     l2731:
 21886  0047E6                     l14104:
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;app_utils.c: 86: }
 21890                           ;app_utils.c: 87: }
 21891                           ;app_utils.c: 88: return isExpired;
 21892  0047E6  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21893  0047E8  0012               	return	
 21894  0047EA                     __end_of_secondsAppTimer:
 21895                           	opt stack 0
 21896                           tosu	equ	0xFFF
 21897                           tosh	equ	0xFFE
 21898                           tosl	equ	0xFFD
 21899                           pclath	equ	0xFFA
 21900                           tblptru	equ	0xFF8
 21901                           tblptrh	equ	0xFF7
 21902                           tblptrl	equ	0xFF6
 21903                           tablat	equ	0xFF5
 21904                           prodh	equ	0xFF4
 21905                           prodl	equ	0xFF3
 21906                           intcon	equ	0xFF2
 21907                           intcon2	equ	0xFF1
 21908                           intcon3	equ	0xFF0
 21909                           indf0	equ	0xFEF
 21910                           postinc0	equ	0xFEE
 21911                           plusw0	equ	0xFEB
 21912                           fsr0h	equ	0xFEA
 21913                           fsr0l	equ	0xFE9
 21914                           wreg	equ	0xFE8
 21915                           indf1	equ	0xFE7
 21916                           postinc1	equ	0xFE6
 21917                           postdec1	equ	0xFE5
 21918                           fsr1h	equ	0xFE2
 21919                           fsr1l	equ	0xFE1
 21920                           indf2	equ	0xFDF
 21921                           postinc2	equ	0xFDE
 21922                           postdec2	equ	0xFDD
 21923                           plusw2	equ	0xFDB
 21924                           fsr2h	equ	0xFDA
 21925                           fsr2l	equ	0xFD9
 21926                           status	equ	0xFD8
 21927                           
 21928 ;; *************** function _Mdm_SetSmsFormat *****************
 21929 ;; Defined at:
 21930 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21931 ;; Parameters:    Size  Location     Type
 21932 ;;  TextFormat      1    wreg     unsigned char 
 21933 ;; Auto vars:     Size  Location     Type
 21934 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21935 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21936 ;;  Index           1   35[BANK0 ] unsigned char 
 21937 ;; Return value:  Size  Location     Type
 21938 ;;                  1    wreg      void 
 21939 ;; Registers used:
 21940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21941 ;; Tracked objects:
 21942 ;;		On entry : 0/0
 21943 ;;		On exit  : 0/0
 21944 ;;		Unchanged: 0/0
 21945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21947 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21949 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21950 ;;Total ram usage:       22 bytes
 21951 ;; Hardware stack levels used:    1
 21952 ;; Hardware stack levels required when called:   13
 21953 ;; This function calls:
 21954 ;;		_Uart_WriteString
 21955 ;; This function is called by:
 21956 ;;		_initGprsModem
 21957 ;; This function uses a non-reentrant model
 21958 ;;
 21959                           
 21960                           	psect	text99
 21961  005CDA                     __ptext99:
 21962                           	opt stack 0
 21963  005CDA                     _Mdm_SetSmsFormat:
 21964                           	opt stack 12
 21965                           
 21966                           ; BSR set to: 0
 21967                           ;incstack = 0
 21968                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21969  005CDA  0100               	movlb	0	; () banked
 21970  005CDC  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21971                           
 21972                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21973                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21974  005CDE  0E00               	movlw	0
 21975  005CE0  0100               	movlb	0	; () banked
 21976  005CE2  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21977                           
 21978                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21979  005CE4  0E41               	movlw	65
 21980  005CE6  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21981                           
 21982                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21983  005CE8  0E54               	movlw	84
 21984  005CEA  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21985                           
 21986                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21987  005CEC  0E2B               	movlw	43
 21988  005CEE  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21989                           
 21990                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21991  005CF0  0E43               	movlw	67
 21992  005CF2  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21993                           
 21994                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21995  005CF4  0E4D               	movlw	77
 21996  005CF6  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21997                           
 21998                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21999  005CF8  0E47               	movlw	71
 22000  005CFA  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 22001                           
 22002                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 22003  005CFC  0E46               	movlw	70
 22004  005CFE  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 22005                           
 22006                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 22007  005D00  0E3D               	movlw	61
 22008  005D02  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 22009                           
 22010                           ; BSR set to: 0
 22011                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 22012  005D04  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 22013  005D06  A4D8               	btfss	status,2,c
 22014  005D08  D002               	goto	l1121
 22015                           
 22016                           ; BSR set to: 0
 22017                           ;mdm_gsm_gprs.c: 854: {
 22018                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 22019  005D0A  0E31               	movlw	49
 22020  005D0C  D001               	goto	L33
 22021  005D0E                     l1121:
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;mdm_gsm_gprs.c: 857: else
 22025                           ;mdm_gsm_gprs.c: 858: {
 22026                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22027                           
 22028                           ; BSR set to: 0
 22029  005D0E  0E30               	movlw	48
 22030  005D10                     L33:
 22031  005D10  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;mdm_gsm_gprs.c: 860: }
 22035                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22036  005D12  0E0D               	movlw	13
 22037  005D14  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22038                           
 22039                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22040  005D16  0E00               	movlw	0
 22041  005D18  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22045  005D1A  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22046  005D1C  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22047  005D1E  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22048  005D20  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22049  005D22  0E01               	movlw	1
 22050  005D24  ECE9  F030         	call	_Uart_WriteString
 22051  005D28  0012               	return		;funcret
 22052  005D2A                     __end_of_Mdm_SetSmsFormat:
 22053                           	opt stack 0
 22054                           tosu	equ	0xFFF
 22055                           tosh	equ	0xFFE
 22056                           tosl	equ	0xFFD
 22057                           pclath	equ	0xFFA
 22058                           tblptru	equ	0xFF8
 22059                           tblptrh	equ	0xFF7
 22060                           tblptrl	equ	0xFF6
 22061                           tablat	equ	0xFF5
 22062                           prodh	equ	0xFF4
 22063                           prodl	equ	0xFF3
 22064                           intcon	equ	0xFF2
 22065                           intcon2	equ	0xFF1
 22066                           intcon3	equ	0xFF0
 22067                           indf0	equ	0xFEF
 22068                           postinc0	equ	0xFEE
 22069                           plusw0	equ	0xFEB
 22070                           fsr0h	equ	0xFEA
 22071                           fsr0l	equ	0xFE9
 22072                           wreg	equ	0xFE8
 22073                           indf1	equ	0xFE7
 22074                           postinc1	equ	0xFE6
 22075                           postdec1	equ	0xFE5
 22076                           fsr1h	equ	0xFE2
 22077                           fsr1l	equ	0xFE1
 22078                           indf2	equ	0xFDF
 22079                           postinc2	equ	0xFDE
 22080                           postdec2	equ	0xFDD
 22081                           plusw2	equ	0xFDB
 22082                           fsr2h	equ	0xFDA
 22083                           fsr2l	equ	0xFD9
 22084                           status	equ	0xFD8
 22085                           
 22086 ;; *************** function _initEeprom *****************
 22087 ;; Defined at:
 22088 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22089 ;; Parameters:    Size  Location     Type
 22090 ;;		None
 22091 ;; Auto vars:     Size  Location     Type
 22092 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22093 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22094 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1    wreg      unsigned char 
 22097 ;; Registers used:
 22098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22099 ;; Tracked objects:
 22100 ;;		On entry : 0/0
 22101 ;;		On exit  : 0/0
 22102 ;;		Unchanged: 0/0
 22103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22105 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22107 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22108 ;;Total ram usage:        3 bytes
 22109 ;; Hardware stack levels used:    1
 22110 ;; Hardware stack levels required when called:   17
 22111 ;; This function calls:
 22112 ;;		_Eeprom_Read
 22113 ;; This function is called by:
 22114 ;;		_initFsm
 22115 ;; This function uses a non-reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text100
 22119  004F90                     __ptext100:
 22120                           	opt stack 0
 22121  004F90                     _initEeprom:
 22122                           	opt stack 9
 22123                           
 22124                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22125                           
 22126                           ;incstack = 0
 22127  004F90  0E00               	movlw	0
 22128  004F92  0101               	movlb	1	; () banked
 22129  004F94  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22130                           
 22131                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22132                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22133  004F96  0E02               	movlw	2
 22134  004F98  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22135                           
 22136                           ;app_init.c: 135: bool isInitialized = 0;
 22137  004F9A  0E00               	movlw	0
 22138  004F9C  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22139                           
 22140                           ;app_init.c: 137: switch (currentState)
 22141  004F9E  D032               	goto	l2668
 22142  004FA0                     
 22143                           ; BSR set to: 1
 22144                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22145                           
 22146                           ; BSR set to: 1
 22147  004FA0  0EAA               	movlw	low _memoryPreamble
 22148  004FA2  0100               	movlb	0	; () banked
 22149  004FA4  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22150  004FA6  0E03               	movlw	high _memoryPreamble
 22151  004FA8  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22152  004FAA  0E04               	movlw	4
 22153  004FAC  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22154  004FAE  0E00               	movlw	0
 22155  004FB0  EC24  F02D         	call	_Eeprom_Read
 22156  004FB4  0101               	movlb	1	; () banked
 22157  004FB6  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22158                           
 22159                           ; BSR set to: 1
 22160                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22161  004FB8  0E02               	movlw	2
 22162  004FBA  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22163  004FBC  B4D8               	btfsc	status,2,c
 22164  004FBE  D02C               	goto	l2673
 22165                           
 22166                           ; BSR set to: 1
 22167                           ;app_init.c: 142: {
 22168                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22169                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22170                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22171                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22172  004FC0  0E55               	movlw	85
 22173  004FC2  0103               	movlb	3	; () banked
 22174  004FC4  19AA               	xorwf	_memoryPreamble& (0+255),w,b
 22175  004FC6  A4D8               	btfss	status,2,c
 22176  004FC8  D00E               	goto	l2671
 22177                           
 22178                           ; BSR set to: 3
 22179  004FCA  0E53               	movlw	83
 22180  004FCC  19AB               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22181  004FCE  A4D8               	btfss	status,2,c
 22182  004FD0  D00A               	goto	l2671
 22183                           
 22184                           ; BSR set to: 3
 22185  004FD2  0E49               	movlw	73
 22186  004FD4  19AC               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22187  004FD6  A4D8               	btfss	status,2,c
 22188  004FD8  D006               	goto	l2671
 22189                           
 22190                           ; BSR set to: 3
 22191  004FDA  0E4D               	movlw	77
 22192  004FDC  19AD               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22193  004FDE  A4D8               	btfss	status,2,c
 22194  004FE0  D002               	goto	l2671
 22195                           
 22196                           ; BSR set to: 3
 22197                           ;app_init.c: 147: {
 22198                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22199  004FE2  0E02               	movlw	2
 22200  004FE4  D001               	goto	L34
 22201  004FE6                     l2671:
 22202                           
 22203                           ;app_init.c: 150: else
 22204                           ;app_init.c: 151: {
 22205                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22206                           
 22207                           ; BSR set to: 1
 22208  004FE6  0E01               	movlw	1
 22209  004FE8                     L34:
 22210  004FE8  0101               	movlb	1	; () banked
 22211  004FEA  D003               	goto	L35
 22212  004FEC                     
 22213                           ; BSR set to: 1
 22214                           ;app_init.c: 158: isInitialized = 1;
 22215                           
 22216                           ; BSR set to: 1
 22217  004FEC  0E01               	movlw	1
 22218  004FEE  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22219                           
 22220                           ;app_init.c: 159: currentState = EEPROM_INIT;
 22221  004FF0  0E00               	movlw	0
 22222  004FF2                     L35:
 22223  004FF2  6FD9               	movwf	initEeprom@currentState& (0+255),b
 22224                           
 22225                           ;app_init.c: 160: break;
 22226  004FF4  D011               	goto	l2673
 22227  004FF6                     
 22228                           ; BSR set to: 1
 22229                           ;app_init.c: 163: currentState = EEPROM_INIT;
 22230                           
 22231                           ; BSR set to: 1
 22232  004FF6  0E00               	movlw	0
 22233  004FF8  6FD9               	movwf	initEeprom@currentState& (0+255),b
 22234                           
 22235                           ;app_init.c: 164: isInitialized = 1;
 22236  004FFA  0E01               	movlw	1
 22237  004FFC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22238                           
 22239                           ;app_init.c: 165: isMemoryEmpty = 0;
 22240  004FFE  0E00               	movlw	0
 22241  005000  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;app_init.c: 170: }
 22245                           
 22246                           ; BSR set to: 1
 22247                           ;app_init.c: 169: break;
 22248                           
 22249                           ;app_init.c: 168: default:
 22250                           
 22251                           ;app_init.c: 166: break;
 22252  005002  D00A               	goto	l2673
 22253  005004                     l2668:
 22254                           
 22255                           ; BSR set to: 1
 22256                           
 22257                           ; BSR set to: 1
 22258  005004  51D9               	movf	initEeprom@currentState& (0+255),w,b
 22259                           
 22260                           ; Switch size 1, requested type "space"
 22261                           ; Number of cases is 3, Range of values is 0 to 2
 22262                           ; switch strategies available:
 22263                           ; Name         Instructions Cycles
 22264                           ; simple_byte           10     6 (average)
 22265                           ;	Chosen strategy is simple_byte
 22266  005006  0A00               	xorlw	0	; case 0
 22267  005008  B4D8               	btfsc	status,2,c
 22268  00500A  D7CA               	goto	l2669
 22269  00500C  0A01               	xorlw	1	; case 1
 22270  00500E  B4D8               	btfsc	status,2,c
 22271  005010  D7ED               	goto	l2674
 22272  005012  0A03               	xorlw	3	; case 2
 22273  005014  B4D8               	btfsc	status,2,c
 22274  005016  D7EF               	goto	l2675
 22275  005018                     l2673:
 22276                           
 22277                           ; BSR set to: 1
 22278                           ;app_init.c: 171: return isInitialized;
 22279                           
 22280                           ; BSR set to: 1
 22281  005018  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22282  00501A  0012               	return	
 22283  00501C                     __end_of_initEeprom:
 22284                           	opt stack 0
 22285                           tosu	equ	0xFFF
 22286                           tosh	equ	0xFFE
 22287                           tosl	equ	0xFFD
 22288                           pclath	equ	0xFFA
 22289                           tblptru	equ	0xFF8
 22290                           tblptrh	equ	0xFF7
 22291                           tblptrl	equ	0xFF6
 22292                           tablat	equ	0xFF5
 22293                           prodh	equ	0xFF4
 22294                           prodl	equ	0xFF3
 22295                           intcon	equ	0xFF2
 22296                           intcon2	equ	0xFF1
 22297                           intcon3	equ	0xFF0
 22298                           indf0	equ	0xFEF
 22299                           postinc0	equ	0xFEE
 22300                           plusw0	equ	0xFEB
 22301                           fsr0h	equ	0xFEA
 22302                           fsr0l	equ	0xFE9
 22303                           wreg	equ	0xFE8
 22304                           indf1	equ	0xFE7
 22305                           postinc1	equ	0xFE6
 22306                           postdec1	equ	0xFE5
 22307                           fsr1h	equ	0xFE2
 22308                           fsr1l	equ	0xFE1
 22309                           indf2	equ	0xFDF
 22310                           postinc2	equ	0xFDE
 22311                           postdec2	equ	0xFDD
 22312                           plusw2	equ	0xFDB
 22313                           fsr2h	equ	0xFDA
 22314                           fsr2l	equ	0xFD9
 22315                           status	equ	0xFD8
 22316                           
 22317 ;; *************** function _detectCmd *****************
 22318 ;; Defined at:
 22319 ;;		line 114 in file "../Source/c/04_App/app.c"
 22320 ;; Parameters:    Size  Location     Type
 22321 ;;		None
 22322 ;; Auto vars:     Size  Location     Type
 22323 ;;  currentState    1   53[BANK0 ] enum E9003
 22324 ;; Return value:  Size  Location     Type
 22325 ;;                  1    wreg      enum E9003
 22326 ;; Registers used:
 22327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22328 ;; Tracked objects:
 22329 ;;		On entry : 0/0
 22330 ;;		On exit  : 0/0
 22331 ;;		Unchanged: 0/0
 22332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22336 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22337 ;;Total ram usage:        1 bytes
 22338 ;; Hardware stack levels used:    1
 22339 ;; Hardware stack levels required when called:   14
 22340 ;; This function calls:
 22341 ;;		_GetCallerNumber
 22342 ;;		_GetLastInteractionNumber
 22343 ;;		_Mdm_GetSmsData
 22344 ;;		_Mdm_HangPhoneCall
 22345 ;;		_Mdm_IsRinging
 22346 ;;		_Mdm_IsSmsReceived
 22347 ;;		_Mdm_RequestSmsData
 22348 ;;		_StringCopy
 22349 ;;		_Uart_WriteConstString
 22350 ;;		_parseCommand
 22351 ;; This function is called by:
 22352 ;;		_MyApp_Task
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text101
 22357  0049CA                     __ptext101:
 22358                           	opt stack 0
 22359  0049CA                     _detectCmd:
 22360                           	opt stack 13
 22361                           
 22362                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22363                           
 22364                           ; BSR set to: 1
 22365                           ;incstack = 0
 22366  0049CA  0E01               	movlw	1
 22367  0049CC  0100               	movlb	0	; () banked
 22368  0049CE  6F95               	movwf	detectCmd@currentState& (0+255),b
 22369                           
 22370                           ; BSR set to: 0
 22371                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22372  0049D0  EC22  F033         	call	_Mdm_IsSmsReceived	;wreg free
 22373  0049D4  0900               	iorlw	0
 22374  0049D6  A4D8               	btfss	status,2,c
 22375                           
 22376                           ;app.c: 118: {
 22377                           ;app.c: 119: Mdm_RequestSmsData();
 22378  0049D8  ECF0  F034         	call	_Mdm_RequestSmsData	;wreg free
 22379                           
 22380                           ;app.c: 120: }
 22381                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22382  0049DC  0E93               	movlw	low _smsText
 22383  0049DE  0100               	movlb	0	; () banked
 22384  0049E0  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22385  0049E2  0E04               	movlw	high _smsText
 22386  0049E4  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22387  0049E6  EC96  F02A         	call	_Mdm_GetSmsData	;wreg free
 22388  0049EA  06E8               	decf	wreg,f,c
 22389  0049EC  A4D8               	btfss	status,2,c
 22390  0049EE  D01D               	goto	l2583
 22391                           
 22392                           ;app.c: 122: {
 22393                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22394  0049F0  0E2F               	movlw	low STR_29
 22395  0049F2  0100               	movlb	0	; () banked
 22396  0049F4  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22397  0049F6  0EFF               	movlw	high STR_29
 22398  0049F8  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22399  0049FA  0E01               	movlw	1
 22400  0049FC  EC49  F030         	call	_Uart_WriteConstString
 22401                           
 22402                           ;app.c: 124: currentState = parseCommand();
 22403  004A00  ECA2  F017         	call	_parseCommand	;wreg free
 22404  004A04  0100               	movlb	0	; () banked
 22405  004A06  6F95               	movwf	detectCmd@currentState& (0+255),b
 22406                           
 22407                           ; BSR set to: 0
 22408                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22409  004A08  EC1C  F035         	call	_GetLastInteractionNumber	;wreg free
 22410  004A0C  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22411  004A10  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22412  004A14  0E2F               	movlw	low _receivedNumber
 22413  004A16  0100               	movlb	0	; () banked
 22414  004A18  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22415  004A1A  0E03               	movlw	high _receivedNumber
 22416  004A1C  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22417  004A1E  0E00               	movlw	0
 22418  004A20  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22419  004A22  0E0D               	movlw	13
 22420  004A24  6F89               	movwf	StringCopy@Len& (0+255),b
 22421  004A26  EC63  F02B         	call	_StringCopy	;wreg free
 22422  004A2A                     l2583:
 22423                           
 22424                           ;app.c: 126: }
 22425                           ;app.c: 127: if (Mdm_IsRinging())
 22426  004A2A  EC34  F033         	call	_Mdm_IsRinging	;wreg free
 22427  004A2E  0900               	iorlw	0
 22428  004A30  B4D8               	btfsc	status,2,c
 22429  004A32  D016               	goto	l2584
 22430                           
 22431                           ;app.c: 128: {
 22432                           ;app.c: 129: Mdm_HangPhoneCall();
 22433  004A34  ECCE  F034         	call	_Mdm_HangPhoneCall	;wreg free
 22434                           
 22435                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22436  004A38  0E04               	movlw	4
 22437  004A3A  0100               	movlb	0	; () banked
 22438  004A3C  6F95               	movwf	detectCmd@currentState& (0+255),b
 22439                           
 22440                           ; BSR set to: 0
 22441                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22442  004A3E  EC99  F031         	call	_GetCallerNumber	;wreg free
 22443  004A42  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22444  004A46  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22445  004A4A  0E2F               	movlw	low _receivedNumber
 22446  004A4C  0100               	movlb	0	; () banked
 22447  004A4E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22448  004A50  0E03               	movlw	high _receivedNumber
 22449  004A52  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22450  004A54  0E00               	movlw	0
 22451  004A56  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22452  004A58  0E0D               	movlw	13
 22453  004A5A  6F89               	movwf	StringCopy@Len& (0+255),b
 22454  004A5C  EC63  F02B         	call	_StringCopy	;wreg free
 22455  004A60                     l2584:
 22456                           
 22457                           ;app.c: 132: }
 22458                           ;app.c: 133: return currentState;
 22459  004A60  0100               	movlb	0	; () banked
 22460  004A62  5195               	movf	detectCmd@currentState& (0+255),w,b
 22461  004A64  0012               	return	
 22462  004A66                     __end_of_detectCmd:
 22463                           	opt stack 0
 22464                           tosu	equ	0xFFF
 22465                           tosh	equ	0xFFE
 22466                           tosl	equ	0xFFD
 22467                           pclath	equ	0xFFA
 22468                           tblptru	equ	0xFF8
 22469                           tblptrh	equ	0xFF7
 22470                           tblptrl	equ	0xFF6
 22471                           tablat	equ	0xFF5
 22472                           prodh	equ	0xFF4
 22473                           prodl	equ	0xFF3
 22474                           intcon	equ	0xFF2
 22475                           intcon2	equ	0xFF1
 22476                           intcon3	equ	0xFF0
 22477                           indf0	equ	0xFEF
 22478                           postinc0	equ	0xFEE
 22479                           plusw0	equ	0xFEB
 22480                           fsr0h	equ	0xFEA
 22481                           fsr0l	equ	0xFE9
 22482                           wreg	equ	0xFE8
 22483                           indf1	equ	0xFE7
 22484                           postinc1	equ	0xFE6
 22485                           postdec1	equ	0xFE5
 22486                           fsr1h	equ	0xFE2
 22487                           fsr1l	equ	0xFE1
 22488                           indf2	equ	0xFDF
 22489                           postinc2	equ	0xFDE
 22490                           postdec2	equ	0xFDD
 22491                           plusw2	equ	0xFDB
 22492                           fsr2h	equ	0xFDA
 22493                           fsr2l	equ	0xFD9
 22494                           status	equ	0xFD8
 22495                           
 22496 ;; *************** function _parseCommand *****************
 22497 ;; Defined at:
 22498 ;;		line 74 in file "../Source/c/04_App/app.c"
 22499 ;; Parameters:    Size  Location     Type
 22500 ;;		None
 22501 ;; Auto vars:     Size  Location     Type
 22502 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22503 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22504 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22505 ;;  state           1   52[BANK0 ] enum E9003
 22506 ;; Return value:  Size  Location     Type
 22507 ;;                  1    wreg      enum E9003
 22508 ;; Registers used:
 22509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22510 ;; Tracked objects:
 22511 ;;		On entry : 0/0
 22512 ;;		On exit  : 0/0
 22513 ;;		Unchanged: 0/0
 22514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22516 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22518 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22519 ;;Total ram usage:       13 bytes
 22520 ;; Hardware stack levels used:    1
 22521 ;; Hardware stack levels required when called:   12
 22522 ;; This function calls:
 22523 ;;		_StringCompare
 22524 ;;		_isNumberValid
 22525 ;; This function is called by:
 22526 ;;		_detectCmd
 22527 ;; This function uses a non-reentrant model
 22528 ;;
 22529                           
 22530                           	psect	text102
 22531  002F44                     __ptext102:
 22532                           	opt stack 0
 22533  002F44                     _parseCommand:
 22534                           	opt stack 14
 22535                           
 22536                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22537                           
 22538                           ; BSR set to: 0
 22539                           ;incstack = 0
 22540  002F44  0E2A               	movlw	low parseCommand@F9017
 22541  002F46  6EF6               	movwf	tblptrl,c
 22542  002F48                     	if	1	;There is more than 1 active tblptr byte
 22543  002F48  0EFC               	movlw	high parseCommand@F9017
 22544  002F4A  6EF7               	movwf	tblptrh,c
 22545  002F4C                     	endif
 22546  002F4C                     	if	0	;There are less than 3 active tblptr bytes
 22547  002F4C                     	endif
 22548  002F4C  0009               	tblrd		*+
 22549  002F4E  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22550  002F52  0009               	tblrd		*+
 22551  002F54  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22552  002F58  0009               	tblrd		*+
 22553  002F5A  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22554  002F5E  000A               	tblrd		*-
 22555  002F60  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22556                           
 22557                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22558  002F64  0E26               	movlw	low parseCommand@F9019
 22559  002F66  6EF6               	movwf	tblptrl,c
 22560  002F68                     	if	1	;There is more than 1 active tblptr byte
 22561  002F68  0EFC               	movlw	high parseCommand@F9019
 22562  002F6A  6EF7               	movwf	tblptrh,c
 22563  002F6C                     	endif
 22564  002F6C                     	if	0	;There are less than 3 active tblptr bytes
 22565  002F6C                     	endif
 22566  002F6C  0009               	tblrd		*+
 22567  002F6E  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22568  002F72  0009               	tblrd		*+
 22569  002F74  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22570  002F78  0009               	tblrd		*+
 22571  002F7A  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22572  002F7E  000A               	tblrd		*-
 22573  002F80  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22574                           
 22575                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22576  002F84  0E22               	movlw	low parseCommand@F9021
 22577  002F86  6EF6               	movwf	tblptrl,c
 22578  002F88                     	if	1	;There is more than 1 active tblptr byte
 22579  002F88  0EFC               	movlw	high parseCommand@F9021
 22580  002F8A  6EF7               	movwf	tblptrh,c
 22581  002F8C                     	endif
 22582  002F8C                     	if	0	;There are less than 3 active tblptr bytes
 22583  002F8C                     	endif
 22584  002F8C  0009               	tblrd		*+
 22585  002F8E  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22586  002F92  0009               	tblrd		*+
 22587  002F94  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22588  002F98  0009               	tblrd		*+
 22589  002F9A  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22590  002F9E  000A               	tblrd		*-
 22591  002FA0  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22592                           
 22593                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22594  002FA4  0E01               	movlw	1
 22595  002FA6  0100               	movlb	0	; () banked
 22596  002FA8  6F94               	movwf	parseCommand@state& (0+255),b
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22600  002FAA  0E93               	movlw	low _smsText
 22601  002FAC  6F7D               	movwf	StringCompare@String1& (0+255),b
 22602  002FAE  0E04               	movlw	high _smsText
 22603  002FB0  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22604  002FB2  0E88               	movlw	low parseCommand@addNumberCmd
 22605  002FB4  6F7F               	movwf	StringCompare@String2& (0+255),b
 22606  002FB6  0E00               	movlw	high parseCommand@addNumberCmd
 22607  002FB8  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22608  002FBA  0E00               	movlw	0
 22609  002FBC  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22610  002FBE  0E04               	movlw	4
 22611  002FC0  6F81               	movwf	StringCompare@Len& (0+255),b
 22612  002FC2  ECF4  F02D         	call	_StringCompare	;wreg free
 22613  002FC6  0900               	iorlw	0
 22614  002FC8  B4D8               	btfsc	status,2,c
 22615  002FCA  D00E               	goto	l2569
 22616                           
 22617                           ;app.c: 82: {
 22618                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22619  002FCC  0E97               	movlw	low (_smsText+4)
 22620  002FCE  0100               	movlb	0	; () banked
 22621  002FD0  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22622  002FD2  0E04               	movlw	high (_smsText+4)
 22623  002FD4  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22624  002FD6  EC30  F02B         	call	_isNumberValid	;wreg free
 22625  002FDA  0900               	iorlw	0
 22626  002FDC  A4D8               	btfss	status,2,c
 22627  002FDE  D002               	goto	l2570
 22628  002FE0                     u14270:
 22629                           
 22630                           ;app.c: 84: {
 22631                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22632  002FE0  0E01               	movlw	1
 22633  002FE2  D033               	goto	L39
 22634  002FE4                     l2570:
 22635                           
 22636                           ;app.c: 87: else
 22637                           ;app.c: 88: {
 22638                           ;app.c: 89: state = GATE_ADD_CMD;
 22639                           
 22640                           ; BSR set to: 0
 22641  002FE4  0E02               	movlw	2
 22642  002FE6  D031               	goto	L39
 22643  002FE8                     l2569:
 22644                           
 22645                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22646                           
 22647                           ; BSR set to: 0
 22648  002FE8  0E93               	movlw	low _smsText
 22649  002FEA  0100               	movlb	0	; () banked
 22650  002FEC  6F7D               	movwf	StringCompare@String1& (0+255),b
 22651  002FEE  0E04               	movlw	high _smsText
 22652  002FF0  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22653  002FF2  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22654  002FF4  6F7F               	movwf	StringCompare@String2& (0+255),b
 22655  002FF6  0E00               	movlw	high parseCommand@deleteNumberCmd
 22656  002FF8  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22657  002FFA  0E00               	movlw	0
 22658  002FFC  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22659  002FFE  0E04               	movlw	4
 22660  003000  6F81               	movwf	StringCompare@Len& (0+255),b
 22661  003002  ECF4  F02D         	call	_StringCompare	;wreg free
 22662  003006  0900               	iorlw	0
 22663  003008  B4D8               	btfsc	status,2,c
 22664  00300A  D00C               	goto	l2573
 22665                           
 22666                           ;app.c: 93: {
 22667                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22668  00300C  0E97               	movlw	low (_smsText+4)
 22669  00300E  0100               	movlb	0	; () banked
 22670  003010  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22671  003012  0E04               	movlw	high (_smsText+4)
 22672  003014  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22673  003016  EC30  F02B         	call	_isNumberValid	;wreg free
 22674  00301A  0900               	iorlw	0
 22675  00301C  B4D8               	btfsc	status,2,c
 22676  00301E  D7E0               	goto	u14270
 22677                           
 22678                           ;app.c: 98: else
 22679                           ;app.c: 99: {
 22680                           ;app.c: 100: state = GATE_DEL_CMD;
 22681                           
 22682                           ; BSR set to: 0
 22683                           
 22684                           ;app.c: 97: }
 22685                           
 22686                           ;app.c: 95: {
 22687                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22688  003020  0E03               	movlw	3
 22689  003022  D013               	goto	L39
 22690  003024                     l2573:
 22691                           
 22692                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22693                           
 22694                           ; BSR set to: 0
 22695  003024  0E93               	movlw	low _smsText
 22696  003026  0100               	movlb	0	; () banked
 22697  003028  6F7D               	movwf	StringCompare@String1& (0+255),b
 22698  00302A  0E04               	movlw	high _smsText
 22699  00302C  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22700  00302E  0E90               	movlw	low parseCommand@resetCmd
 22701  003030  6F7F               	movwf	StringCompare@String2& (0+255),b
 22702  003032  0E00               	movlw	high parseCommand@resetCmd
 22703  003034  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22704  003036  0E00               	movlw	0
 22705  003038  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22706  00303A  0E04               	movlw	4
 22707  00303C  6F81               	movwf	StringCompare@Len& (0+255),b
 22708  00303E  ECF4  F02D         	call	_StringCompare	;wreg free
 22709  003042  0900               	iorlw	0
 22710  003044  B4D8               	btfsc	status,2,c
 22711  003046  D003               	goto	l2577
 22712                           
 22713                           ;app.c: 104: {
 22714                           ;app.c: 105: state = GATE_RESET;
 22715  003048  0E05               	movlw	5
 22716  00304A                     L39:
 22717  00304A  0100               	movlb	0	; () banked
 22718  00304C  6F94               	movwf	parseCommand@state& (0+255),b
 22719  00304E                     l2577:
 22720                           
 22721                           ;app.c: 110: }
 22722                           ;app.c: 111: return state;
 22723                           
 22724                           ; BSR set to: 0
 22725                           
 22726                           ; BSR set to: 0
 22727                           
 22728                           ; BSR set to: 0
 22729                           
 22730                           ;app.c: 107: else
 22731                           ;app.c: 108: {
 22732                           
 22733                           ; BSR set to: 0
 22734  00304E  0100               	movlb	0	; () banked
 22735  003050  5194               	movf	parseCommand@state& (0+255),w,b
 22736  003052  0012               	return	
 22737  003054                     __end_of_parseCommand:
 22738                           	opt stack 0
 22739                           tosu	equ	0xFFF
 22740                           tosh	equ	0xFFE
 22741                           tosl	equ	0xFFD
 22742                           pclath	equ	0xFFA
 22743                           tblptru	equ	0xFF8
 22744                           tblptrh	equ	0xFF7
 22745                           tblptrl	equ	0xFF6
 22746                           tablat	equ	0xFF5
 22747                           prodh	equ	0xFF4
 22748                           prodl	equ	0xFF3
 22749                           intcon	equ	0xFF2
 22750                           intcon2	equ	0xFF1
 22751                           intcon3	equ	0xFF0
 22752                           indf0	equ	0xFEF
 22753                           postinc0	equ	0xFEE
 22754                           plusw0	equ	0xFEB
 22755                           fsr0h	equ	0xFEA
 22756                           fsr0l	equ	0xFE9
 22757                           wreg	equ	0xFE8
 22758                           indf1	equ	0xFE7
 22759                           postinc1	equ	0xFE6
 22760                           postdec1	equ	0xFE5
 22761                           fsr1h	equ	0xFE2
 22762                           fsr1l	equ	0xFE1
 22763                           indf2	equ	0xFDF
 22764                           postinc2	equ	0xFDE
 22765                           postdec2	equ	0xFDD
 22766                           plusw2	equ	0xFDB
 22767                           fsr2h	equ	0xFDA
 22768                           fsr2l	equ	0xFD9
 22769                           status	equ	0xFD8
 22770                           
 22771 ;; *************** function _Mdm_RequestSmsData *****************
 22772 ;; Defined at:
 22773 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22774 ;; Parameters:    Size  Location     Type
 22775 ;;		None
 22776 ;; Auto vars:     Size  Location     Type
 22777 ;;		None
 22778 ;; Return value:  Size  Location     Type
 22779 ;;                  1    wreg      void 
 22780 ;; Registers used:
 22781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22782 ;; Tracked objects:
 22783 ;;		On entry : 0/0
 22784 ;;		On exit  : 0/0
 22785 ;;		Unchanged: 0/0
 22786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22791 ;;Total ram usage:        0 bytes
 22792 ;; Hardware stack levels used:    1
 22793 ;; Hardware stack levels required when called:   12
 22794 ;; This function calls:
 22795 ;;		_GenerateEvt
 22796 ;; This function is called by:
 22797 ;;		_detectCmd
 22798 ;; This function uses a non-reentrant model
 22799 ;;
 22800                           
 22801                           	psect	text103
 22802  0069E0                     __ptext103:
 22803                           	opt stack 0
 22804  0069E0                     _Mdm_RequestSmsData:
 22805                           	opt stack 14
 22806                           
 22807                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22808                           
 22809                           ; BSR set to: 0
 22810                           ;incstack = 0
 22811  0069E0  0EDD               	movlw	low _GetSmsText
 22812  0069E2  0100               	movlb	0	; () banked
 22813  0069E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22814  0069E6  0E00               	movlw	high _GetSmsText
 22815  0069E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22816  0069EA  EC83  F034         	call	_GenerateEvt	;wreg free
 22817  0069EE  0012               	return		;funcret
 22818  0069F0                     __end_of_Mdm_RequestSmsData:
 22819                           	opt stack 0
 22820                           tosu	equ	0xFFF
 22821                           tosh	equ	0xFFE
 22822                           tosl	equ	0xFFD
 22823                           pclath	equ	0xFFA
 22824                           tblptru	equ	0xFF8
 22825                           tblptrh	equ	0xFF7
 22826                           tblptrl	equ	0xFF6
 22827                           tablat	equ	0xFF5
 22828                           prodh	equ	0xFF4
 22829                           prodl	equ	0xFF3
 22830                           intcon	equ	0xFF2
 22831                           intcon2	equ	0xFF1
 22832                           intcon3	equ	0xFF0
 22833                           indf0	equ	0xFEF
 22834                           postinc0	equ	0xFEE
 22835                           plusw0	equ	0xFEB
 22836                           fsr0h	equ	0xFEA
 22837                           fsr0l	equ	0xFE9
 22838                           wreg	equ	0xFE8
 22839                           indf1	equ	0xFE7
 22840                           postinc1	equ	0xFE6
 22841                           postdec1	equ	0xFE5
 22842                           fsr1h	equ	0xFE2
 22843                           fsr1l	equ	0xFE1
 22844                           indf2	equ	0xFDF
 22845                           postinc2	equ	0xFDE
 22846                           postdec2	equ	0xFDD
 22847                           plusw2	equ	0xFDB
 22848                           fsr2h	equ	0xFDA
 22849                           fsr2l	equ	0xFD9
 22850                           status	equ	0xFD8
 22851                           
 22852 ;; *************** function _Mdm_IsSmsReceived *****************
 22853 ;; Defined at:
 22854 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22855 ;; Parameters:    Size  Location     Type
 22856 ;;		None
 22857 ;; Auto vars:     Size  Location     Type
 22858 ;;  Ret             1   33[BANK0 ] enum E8930
 22859 ;; Return value:  Size  Location     Type
 22860 ;;                  1    wreg      enum E8930
 22861 ;; Registers used:
 22862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22863 ;; Tracked objects:
 22864 ;;		On entry : 0/0
 22865 ;;		On exit  : 0/0
 22866 ;;		Unchanged: 0/0
 22867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22872 ;;Total ram usage:        1 bytes
 22873 ;; Hardware stack levels used:    1
 22874 ;; Hardware stack levels required when called:   12
 22875 ;; This function calls:
 22876 ;;		_ReceiveEvt
 22877 ;; This function is called by:
 22878 ;;		_detectCmd
 22879 ;; This function uses a non-reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text104
 22883  006644                     __ptext104:
 22884                           	opt stack 0
 22885  006644                     _Mdm_IsSmsReceived:
 22886                           	opt stack 14
 22887                           
 22888                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22889                           
 22890                           ;incstack = 0
 22891  006644  0E00               	movlw	0
 22892  006646  0100               	movlb	0	; () banked
 22893  006648  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22894                           
 22895                           ; BSR set to: 0
 22896                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22897  00664A  0EDE               	movlw	low _SmsEvent
 22898  00664C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22899  00664E  0E00               	movlw	high _SmsEvent
 22900  006650  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22901  006652  EC92  F032         	call	_ReceiveEvt	;wreg free
 22902  006656  0900               	iorlw	0
 22903  006658  B4D8               	btfsc	status,2,c
 22904  00665A  D003               	goto	l1136
 22905                           
 22906                           ;mdm_gsm_gprs.c: 947: {
 22907                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22908  00665C  0E01               	movlw	1
 22909  00665E  0100               	movlb	0	; () banked
 22910  006660  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22911  006662                     l1136:
 22912                           
 22913                           ;mdm_gsm_gprs.c: 949: }
 22914                           ;mdm_gsm_gprs.c: 951: return Ret;
 22915  006662  0100               	movlb	0	; () banked
 22916  006664  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22917  006666  0012               	return	
 22918  006668                     __end_of_Mdm_IsSmsReceived:
 22919                           	opt stack 0
 22920                           tosu	equ	0xFFF
 22921                           tosh	equ	0xFFE
 22922                           tosl	equ	0xFFD
 22923                           pclath	equ	0xFFA
 22924                           tblptru	equ	0xFF8
 22925                           tblptrh	equ	0xFF7
 22926                           tblptrl	equ	0xFF6
 22927                           tablat	equ	0xFF5
 22928                           prodh	equ	0xFF4
 22929                           prodl	equ	0xFF3
 22930                           intcon	equ	0xFF2
 22931                           intcon2	equ	0xFF1
 22932                           intcon3	equ	0xFF0
 22933                           indf0	equ	0xFEF
 22934                           postinc0	equ	0xFEE
 22935                           plusw0	equ	0xFEB
 22936                           fsr0h	equ	0xFEA
 22937                           fsr0l	equ	0xFE9
 22938                           wreg	equ	0xFE8
 22939                           indf1	equ	0xFE7
 22940                           postinc1	equ	0xFE6
 22941                           postdec1	equ	0xFE5
 22942                           fsr1h	equ	0xFE2
 22943                           fsr1l	equ	0xFE1
 22944                           indf2	equ	0xFDF
 22945                           postinc2	equ	0xFDE
 22946                           postdec2	equ	0xFDD
 22947                           plusw2	equ	0xFDB
 22948                           fsr2h	equ	0xFDA
 22949                           fsr2l	equ	0xFD9
 22950                           status	equ	0xFD8
 22951                           
 22952 ;; *************** function _Mdm_IsRinging *****************
 22953 ;; Defined at:
 22954 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22955 ;; Parameters:    Size  Location     Type
 22956 ;;		None
 22957 ;; Auto vars:     Size  Location     Type
 22958 ;;  Ret             1   33[BANK0 ] enum E8926
 22959 ;; Return value:  Size  Location     Type
 22960 ;;                  1    wreg      enum E8926
 22961 ;; Registers used:
 22962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22963 ;; Tracked objects:
 22964 ;;		On entry : 0/0
 22965 ;;		On exit  : 0/0
 22966 ;;		Unchanged: 0/0
 22967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22972 ;;Total ram usage:        1 bytes
 22973 ;; Hardware stack levels used:    1
 22974 ;; Hardware stack levels required when called:   12
 22975 ;; This function calls:
 22976 ;;		_ReceiveEvt
 22977 ;; This function is called by:
 22978 ;;		_detectCmd
 22979 ;;		_getSetupCall
 22980 ;; This function uses a non-reentrant model
 22981 ;;
 22982                           
 22983                           	psect	text105
 22984  006668                     __ptext105:
 22985                           	opt stack 0
 22986  006668                     _Mdm_IsRinging:
 22987                           	opt stack 12
 22988                           
 22989                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22990                           
 22991                           ; BSR set to: 0
 22992                           ;incstack = 0
 22993  006668  0E00               	movlw	0
 22994  00666A  0100               	movlb	0	; () banked
 22995  00666C  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22996                           
 22997                           ; BSR set to: 0
 22998                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 22999  00666E  0EE0               	movlw	low _RingEvent
 23000  006670  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23001  006672  0E00               	movlw	high _RingEvent
 23002  006674  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23003  006676  EC92  F032         	call	_ReceiveEvt	;wreg free
 23004  00667A  0900               	iorlw	0
 23005  00667C  B4D8               	btfsc	status,2,c
 23006  00667E  D003               	goto	l1152
 23007                           
 23008                           ;mdm_gsm_gprs.c: 1030: {
 23009                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 23010  006680  0E01               	movlw	1
 23011  006682  0100               	movlb	0	; () banked
 23012  006684  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 23013  006686                     l1152:
 23014                           
 23015                           ;mdm_gsm_gprs.c: 1032: }
 23016                           ;mdm_gsm_gprs.c: 1034: return Ret;
 23017  006686  0100               	movlb	0	; () banked
 23018  006688  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 23019  00668A  0012               	return	
 23020  00668C                     __end_of_Mdm_IsRinging:
 23021                           	opt stack 0
 23022                           tosu	equ	0xFFF
 23023                           tosh	equ	0xFFE
 23024                           tosl	equ	0xFFD
 23025                           pclath	equ	0xFFA
 23026                           tblptru	equ	0xFF8
 23027                           tblptrh	equ	0xFF7
 23028                           tblptrl	equ	0xFF6
 23029                           tablat	equ	0xFF5
 23030                           prodh	equ	0xFF4
 23031                           prodl	equ	0xFF3
 23032                           intcon	equ	0xFF2
 23033                           intcon2	equ	0xFF1
 23034                           intcon3	equ	0xFF0
 23035                           indf0	equ	0xFEF
 23036                           postinc0	equ	0xFEE
 23037                           plusw0	equ	0xFEB
 23038                           fsr0h	equ	0xFEA
 23039                           fsr0l	equ	0xFE9
 23040                           wreg	equ	0xFE8
 23041                           indf1	equ	0xFE7
 23042                           postinc1	equ	0xFE6
 23043                           postdec1	equ	0xFE5
 23044                           fsr1h	equ	0xFE2
 23045                           fsr1l	equ	0xFE1
 23046                           indf2	equ	0xFDF
 23047                           postinc2	equ	0xFDE
 23048                           postdec2	equ	0xFDD
 23049                           plusw2	equ	0xFDB
 23050                           fsr2h	equ	0xFDA
 23051                           fsr2l	equ	0xFD9
 23052                           status	equ	0xFD8
 23053                           
 23054 ;; *************** function _Mdm_HangPhoneCall *****************
 23055 ;; Defined at:
 23056 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23057 ;; Parameters:    Size  Location     Type
 23058 ;;		None
 23059 ;; Auto vars:     Size  Location     Type
 23060 ;;		None
 23061 ;; Return value:  Size  Location     Type
 23062 ;;                  1    wreg      void 
 23063 ;; Registers used:
 23064 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23065 ;; Tracked objects:
 23066 ;;		On entry : 0/0
 23067 ;;		On exit  : 0/0
 23068 ;;		Unchanged: 0/0
 23069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23074 ;;Total ram usage:        0 bytes
 23075 ;; Hardware stack levels used:    1
 23076 ;; Hardware stack levels required when called:   13
 23077 ;; This function calls:
 23078 ;;		_Uart_WriteConstString
 23079 ;; This function is called by:
 23080 ;;		_detectCmd
 23081 ;;		_getSetupCall
 23082 ;; This function uses a non-reentrant model
 23083 ;;
 23084                           
 23085                           	psect	text106
 23086  00699C                     __ptext106:
 23087                           	opt stack 0
 23088  00699C                     _Mdm_HangPhoneCall:
 23089                           	opt stack 11
 23090                           
 23091                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23092                           
 23093                           ; BSR set to: 0
 23094                           ;incstack = 0
 23095  00699C  0EF0               	movlw	low STR_6
 23096  00699E  0100               	movlb	0	; () banked
 23097  0069A0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23098  0069A2  0EFF               	movlw	high STR_6
 23099  0069A4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23100  0069A6  0E01               	movlw	1
 23101  0069A8  EC49  F030         	call	_Uart_WriteConstString
 23102  0069AC  0012               	return		;funcret
 23103  0069AE                     __end_of_Mdm_HangPhoneCall:
 23104                           	opt stack 0
 23105                           tosu	equ	0xFFF
 23106                           tosh	equ	0xFFE
 23107                           tosl	equ	0xFFD
 23108                           pclath	equ	0xFFA
 23109                           tblptru	equ	0xFF8
 23110                           tblptrh	equ	0xFF7
 23111                           tblptrl	equ	0xFF6
 23112                           tablat	equ	0xFF5
 23113                           prodh	equ	0xFF4
 23114                           prodl	equ	0xFF3
 23115                           intcon	equ	0xFF2
 23116                           intcon2	equ	0xFF1
 23117                           intcon3	equ	0xFF0
 23118                           indf0	equ	0xFEF
 23119                           postinc0	equ	0xFEE
 23120                           plusw0	equ	0xFEB
 23121                           fsr0h	equ	0xFEA
 23122                           fsr0l	equ	0xFE9
 23123                           wreg	equ	0xFE8
 23124                           indf1	equ	0xFE7
 23125                           postinc1	equ	0xFE6
 23126                           postdec1	equ	0xFE5
 23127                           fsr1h	equ	0xFE2
 23128                           fsr1l	equ	0xFE1
 23129                           indf2	equ	0xFDF
 23130                           postinc2	equ	0xFDE
 23131                           postdec2	equ	0xFDD
 23132                           plusw2	equ	0xFDB
 23133                           fsr2h	equ	0xFDA
 23134                           fsr2l	equ	0xFD9
 23135                           status	equ	0xFD8
 23136                           
 23137 ;; *************** function _Mdm_GetSmsData *****************
 23138 ;; Defined at:
 23139 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23140 ;; Parameters:    Size  Location     Type
 23141 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23142 ;;		 -> smsText(20), 
 23143 ;; Auto vars:     Size  Location     Type
 23144 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23145 ;; Return value:  Size  Location     Type
 23146 ;;                  1    wreg      enum E8922
 23147 ;; Registers used:
 23148 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23149 ;; Tracked objects:
 23150 ;;		On entry : 0/0
 23151 ;;		On exit  : 0/0
 23152 ;;		Unchanged: 0/0
 23153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;Total ram usage:        3 bytes
 23159 ;; Hardware stack levels used:    1
 23160 ;; Hardware stack levels required when called:   12
 23161 ;; This function calls:
 23162 ;;		_ReceiveEvt
 23163 ;;		_StringCopy
 23164 ;; This function is called by:
 23165 ;;		_detectCmd
 23166 ;; This function uses a non-reentrant model
 23167 ;;
 23168                           
 23169                           	psect	text107
 23170  00552C                     __ptext107:
 23171                           	opt stack 0
 23172  00552C                     _Mdm_GetSmsData:
 23173                           	opt stack 14
 23174                           
 23175                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23176                           
 23177                           ;incstack = 0
 23178  00552C  0E00               	movlw	0
 23179  00552E  0100               	movlb	0	; () banked
 23180  005530  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23184  005532  0EDC               	movlw	low _SmsTxtReady
 23185  005534  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23186  005536  0E00               	movlw	high _SmsTxtReady
 23187  005538  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23188  00553A  EC92  F032         	call	_ReceiveEvt	;wreg free
 23189  00553E  0900               	iorlw	0
 23190  005540  B4D8               	btfsc	status,2,c
 23191  005542  D025               	goto	l1129
 23192                           
 23193                           ;mdm_gsm_gprs.c: 898: {
 23194                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23195  005544  0E50               	movlw	low (_Mdm_SmsRx+80)
 23196  005546  0100               	movlb	0	; () banked
 23197  005548  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23198  00554A  0E07               	movlw	high (_Mdm_SmsRx+80)
 23199  00554C  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23200  00554E  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23201  005552  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23202  005556  0E01               	movlw	1
 23203  005558  0107               	movlb	7	; () banked
 23204  00555A  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23205  00555C  0100               	movlb	0	; () banked
 23206  00555E  6F89               	movwf	StringCopy@Len& (0+255),b
 23207  005560  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23208  005562  0E00               	movlw	0
 23209  005564  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23210  005566  EC63  F02B         	call	_StringCopy	;wreg free
 23211                           
 23212                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23213  00556A  0E15               	movlw	low (_Mdm_SmsRx+21)
 23214  00556C  0100               	movlb	0	; () banked
 23215  00556E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23216  005570  0E07               	movlw	high (_Mdm_SmsRx+21)
 23217  005572  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23218  005574  0E3C               	movlw	low _callerNumber
 23219  005576  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23220  005578  0E03               	movlw	high _callerNumber
 23221  00557A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23222  00557C  0E00               	movlw	0
 23223  00557E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23224  005580  0E0D               	movlw	13
 23225  005582  6F89               	movwf	StringCopy@Len& (0+255),b
 23226  005584  EC63  F02B         	call	_StringCopy	;wreg free
 23227                           
 23228                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23229  005588  0E01               	movlw	1
 23230  00558A  0100               	movlb	0	; () banked
 23231  00558C  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23232  00558E                     l1129:
 23233                           
 23234                           ;mdm_gsm_gprs.c: 904: }
 23235                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23236                           
 23237                           ; BSR set to: 0
 23238  00558E  0100               	movlb	0	; () banked
 23239  005590  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23240  005592  0012               	return	
 23241  005594                     __end_of_Mdm_GetSmsData:
 23242                           	opt stack 0
 23243                           tosu	equ	0xFFF
 23244                           tosh	equ	0xFFE
 23245                           tosl	equ	0xFFD
 23246                           pclath	equ	0xFFA
 23247                           tblptru	equ	0xFF8
 23248                           tblptrh	equ	0xFF7
 23249                           tblptrl	equ	0xFF6
 23250                           tablat	equ	0xFF5
 23251                           prodh	equ	0xFF4
 23252                           prodl	equ	0xFF3
 23253                           intcon	equ	0xFF2
 23254                           intcon2	equ	0xFF1
 23255                           intcon3	equ	0xFF0
 23256                           indf0	equ	0xFEF
 23257                           postinc0	equ	0xFEE
 23258                           plusw0	equ	0xFEB
 23259                           fsr0h	equ	0xFEA
 23260                           fsr0l	equ	0xFE9
 23261                           wreg	equ	0xFE8
 23262                           indf1	equ	0xFE7
 23263                           postinc1	equ	0xFE6
 23264                           postdec1	equ	0xFE5
 23265                           fsr1h	equ	0xFE2
 23266                           fsr1l	equ	0xFE1
 23267                           indf2	equ	0xFDF
 23268                           postinc2	equ	0xFDE
 23269                           postdec2	equ	0xFDD
 23270                           plusw2	equ	0xFDB
 23271                           fsr2h	equ	0xFDA
 23272                           fsr2l	equ	0xFD9
 23273                           status	equ	0xFD8
 23274                           
 23275 ;; *************** function _GetLastInteractionNumber *****************
 23276 ;; Defined at:
 23277 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23278 ;; Parameters:    Size  Location     Type
 23279 ;;		None
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;		None
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  2   29[BANK0 ] PTR unsigned char 
 23284 ;; Registers used:
 23285 ;;		wreg, status,2, status,0
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23295 ;;Total ram usage:        2 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:   11
 23298 ;; This function calls:
 23299 ;;		Nothing
 23300 ;; This function is called by:
 23301 ;;		_detectCmd
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text108
 23306  006A38                     __ptext108:
 23307                           	opt stack 0
 23308  006A38                     _GetLastInteractionNumber:
 23309                           	opt stack 15
 23310                           
 23311                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23312                           
 23313                           ; BSR set to: 0
 23314                           ;incstack = 0
 23315  006A38  0E3C               	movlw	low _callerNumber
 23316  006A3A  0100               	movlb	0	; () banked
 23317  006A3C  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23318  006A3E  0E03               	movlw	high _callerNumber
 23319  006A40  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23320  006A42  0012               	return	
 23321  006A44                     __end_of_GetLastInteractionNumber:
 23322                           	opt stack 0
 23323                           tosu	equ	0xFFF
 23324                           tosh	equ	0xFFE
 23325                           tosl	equ	0xFFD
 23326                           pclath	equ	0xFFA
 23327                           tblptru	equ	0xFF8
 23328                           tblptrh	equ	0xFF7
 23329                           tblptrl	equ	0xFF6
 23330                           tablat	equ	0xFF5
 23331                           prodh	equ	0xFF4
 23332                           prodl	equ	0xFF3
 23333                           intcon	equ	0xFF2
 23334                           intcon2	equ	0xFF1
 23335                           intcon3	equ	0xFF0
 23336                           indf0	equ	0xFEF
 23337                           postinc0	equ	0xFEE
 23338                           plusw0	equ	0xFEB
 23339                           fsr0h	equ	0xFEA
 23340                           fsr0l	equ	0xFE9
 23341                           wreg	equ	0xFE8
 23342                           indf1	equ	0xFE7
 23343                           postinc1	equ	0xFE6
 23344                           postdec1	equ	0xFE5
 23345                           fsr1h	equ	0xFE2
 23346                           fsr1l	equ	0xFE1
 23347                           indf2	equ	0xFDF
 23348                           postinc2	equ	0xFDE
 23349                           postdec2	equ	0xFDD
 23350                           plusw2	equ	0xFDB
 23351                           fsr2h	equ	0xFDA
 23352                           fsr2l	equ	0xFD9
 23353                           status	equ	0xFD8
 23354                           
 23355 ;; *************** function _GetCallerNumber *****************
 23356 ;; Defined at:
 23357 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23358 ;; Parameters:    Size  Location     Type
 23359 ;;		None
 23360 ;; Auto vars:     Size  Location     Type
 23361 ;;		None
 23362 ;; Return value:  Size  Location     Type
 23363 ;;                  2   35[BANK0 ] PTR unsigned char 
 23364 ;; Registers used:
 23365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23366 ;; Tracked objects:
 23367 ;;		On entry : 0/0
 23368 ;;		On exit  : 0/0
 23369 ;;		Unchanged: 0/0
 23370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23371 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23375 ;;Total ram usage:        2 bytes
 23376 ;; Hardware stack levels used:    1
 23377 ;; Hardware stack levels required when called:   12
 23378 ;; This function calls:
 23379 ;;		_ClearBuffer
 23380 ;;		_ReceiveEvt
 23381 ;; This function is called by:
 23382 ;;		_detectCmd
 23383 ;;		_initFsm
 23384 ;; This function uses a non-reentrant model
 23385 ;;
 23386                           
 23387                           	psect	text109
 23388  006332                     __ptext109:
 23389                           	opt stack 0
 23390  006332                     _GetCallerNumber:
 23391                           	opt stack 14
 23392                           
 23393                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23394                           
 23395                           ; BSR set to: 0
 23396                           ;incstack = 0
 23397  006332  0EDF               	movlw	low _ClipEvent
 23398  006334  0100               	movlb	0	; () banked
 23399  006336  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23400  006338  0E00               	movlw	high _ClipEvent
 23401  00633A  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23402  00633C  EC92  F032         	call	_ReceiveEvt	;wreg free
 23403  006340  0900               	iorlw	0
 23404  006342  A4D8               	btfss	status,2,c
 23405  006344  D00B               	goto	l1156
 23406                           
 23407                           ;mdm_gsm_gprs.c: 1040: {
 23408                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23409  006346  0E3C               	movlw	low _callerNumber
 23410  006348  0100               	movlb	0	; () banked
 23411  00634A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23412  00634C  0E03               	movlw	high _callerNumber
 23413  00634E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23414  006350  0E00               	movlw	0
 23415  006352  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23416  006354  0E0D               	movlw	13
 23417  006356  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23418  006358  ECB4  F031         	call	_ClearBuffer	;wreg free
 23419  00635C                     l1156:
 23420                           
 23421                           ;mdm_gsm_gprs.c: 1042: }
 23422                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23423  00635C  0E3C               	movlw	low _callerNumber
 23424  00635E  0100               	movlb	0	; () banked
 23425  006360  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23426  006362  0E03               	movlw	high _callerNumber
 23427  006364  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23428  006366  0012               	return	
 23429  006368                     __end_of_GetCallerNumber:
 23430                           	opt stack 0
 23431                           tosu	equ	0xFFF
 23432                           tosh	equ	0xFFE
 23433                           tosl	equ	0xFFD
 23434                           pclath	equ	0xFFA
 23435                           tblptru	equ	0xFF8
 23436                           tblptrh	equ	0xFF7
 23437                           tblptrl	equ	0xFF6
 23438                           tablat	equ	0xFF5
 23439                           prodh	equ	0xFF4
 23440                           prodl	equ	0xFF3
 23441                           intcon	equ	0xFF2
 23442                           intcon2	equ	0xFF1
 23443                           intcon3	equ	0xFF0
 23444                           indf0	equ	0xFEF
 23445                           postinc0	equ	0xFEE
 23446                           plusw0	equ	0xFEB
 23447                           fsr0h	equ	0xFEA
 23448                           fsr0l	equ	0xFE9
 23449                           wreg	equ	0xFE8
 23450                           indf1	equ	0xFE7
 23451                           postinc1	equ	0xFE6
 23452                           postdec1	equ	0xFE5
 23453                           fsr1h	equ	0xFE2
 23454                           fsr1l	equ	0xFE1
 23455                           indf2	equ	0xFDF
 23456                           postinc2	equ	0xFDE
 23457                           postdec2	equ	0xFDD
 23458                           plusw2	equ	0xFDB
 23459                           fsr2h	equ	0xFDA
 23460                           fsr2l	equ	0xFD9
 23461                           status	equ	0xFD8
 23462                           
 23463 ;; *************** function _delCmdFsm *****************
 23464 ;; Defined at:
 23465 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23466 ;; Parameters:    Size  Location     Type
 23467 ;;  receivedNumb    2   17[BANK1 ] PTR unsigned char 
 23468 ;;		 -> receivedNumber(13), 
 23469 ;;  smsText         2   19[BANK1 ] PTR unsigned char 
 23470 ;;		 -> smsText(20), 
 23471 ;; Auto vars:     Size  Location     Type
 23472 ;;  emptyNumber    13   21[BANK1 ] const unsigned char [13]
 23473 ;;  numberInMemo    1   35[BANK1 ] unsigned char 
 23474 ;;  isComplete      1   34[BANK1 ] unsigned char 
 23475 ;; Return value:  Size  Location     Type
 23476 ;;                  1    wreg      unsigned char 
 23477 ;; Registers used:
 23478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23479 ;; Tracked objects:
 23480 ;;		On entry : 0/0
 23481 ;;		On exit  : 0/0
 23482 ;;		Unchanged: 0/0
 23483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23484 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23485 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23487 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23488 ;;Total ram usage:       19 bytes
 23489 ;; Hardware stack levels used:    1
 23490 ;; Hardware stack levels required when called:   18
 23491 ;; This function calls:
 23492 ;;		_isMasterNumber
 23493 ;;		_isNumberInMemory
 23494 ;;		_saveNumberInMemory
 23495 ;; This function is called by:
 23496 ;;		_MyApp_Task
 23497 ;; This function uses a non-reentrant model
 23498 ;;
 23499                           
 23500                           	psect	text110
 23501  0047EA                     __ptext110:
 23502                           	opt stack 0
 23503  0047EA                     _delCmdFsm:
 23504                           	opt stack 9
 23505                           
 23506                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23507                           
 23508                           ; BSR set to: 0
 23509                           ;incstack = 0
 23510  0047EA  0E0F               	movlw	low delCmdFsm@F9004
 23511  0047EC  6EF6               	movwf	tblptrl,c
 23512  0047EE                     	if	1	;There is more than 1 active tblptr byte
 23513  0047EE  0EFC               	movlw	high delCmdFsm@F9004
 23514  0047F0  6EF7               	movwf	tblptrh,c
 23515  0047F2                     	endif
 23516  0047F2                     	if	0	;There are less than 3 active tblptr bytes
 23517  0047F2                     	endif
 23518  0047F2  EE21  F015         	lfsr	2,delCmdFsm@emptyNumber
 23519  0047F6  0E0C               	movlw	12
 23520  0047F8                     u15870:
 23521  0047F8  0009               	tblrd		*+
 23522  0047FA  CFF5 FFDE          	movff	tablat,postinc2
 23523  0047FE  06E8               	decf	wreg,f,c
 23524  004800  E2FB               	bc	u15870
 23525                           
 23526                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23527                           ;app_delCmd.c: 75: bool isComplete = 0;
 23528  004802  0E00               	movlw	0
 23529  004804  0101               	movlb	1	; () banked
 23530  004806  6F22               	movwf	delCmdFsm@isComplete& (0+255),b
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;app_delCmd.c: 76: uint8_t numberInMemory = 1;
 23534  004808  0E01               	movlw	1
 23535  00480A  6F23               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23536                           
 23537                           ;app_delCmd.c: 78: switch (currentState)
 23538  00480C  D033               	goto	l2828
 23539  00480E                     
 23540                           ; BSR set to: 1
 23541                           ;app_delCmd.c: 81: if (isMasterNumber(receivedNumber) == OP_SUCCESS)
 23542                           
 23543                           ; BSR set to: 1
 23544  00480E  C111  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23545  004812  C112  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23546  004816  EC61  F02A         	call	_isMasterNumber	;wreg free
 23547  00481A  0900               	iorlw	0
 23548  00481C  A4D8               	btfss	status,2,c
 23549  00481E  D023               	goto	l16226
 23550                           
 23551                           ;app_delCmd.c: 82: {
 23552                           ;app_delCmd.c: 83: currentState = DEL_FSM_REMOVE_NUMBER;
 23553  004820  0E01               	movlw	1
 23554  004822                     L40:
 23555  004822  0101               	movlb	1	; () banked
 23556  004824  D025               	goto	L43
 23557  004826                     
 23558                           ; BSR set to: 1
 23559                           ;app_delCmd.c: 92: numberInMemory = isNumberInMemory(receivedNumber);
 23560                           
 23561                           ; BSR set to: 1
 23562  004826  C111  F100         	movff	delCmdFsm@receivedNumber,isNumberInMemory@phoneNumber
 23563  00482A  C112  F101         	movff	delCmdFsm@receivedNumber+1,isNumberInMemory@phoneNumber+1
 23564  00482E  EC49  F029         	call	_isNumberInMemory	;wreg free
 23565  004832  0101               	movlb	1	; () banked
 23566  004834  6F23               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23567                           
 23568                           ; BSR set to: 1
 23569                           ;app_delCmd.c: 93: if (numberInMemory == 1)
 23570  004836  0523               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23571  004838  A4D8               	btfss	status,2,c
 23572  00483A  D002               	goto	l2834
 23573                           
 23574                           ; BSR set to: 1
 23575                           ;app_delCmd.c: 94: {
 23576                           ;app_delCmd.c: 95: currentState = DEL_FSM_COMPLETE;
 23577  00483C  0E02               	movlw	2
 23578  00483E  D018               	goto	L43
 23579  004840                     l2834:
 23580                           
 23581                           ; BSR set to: 1
 23582                           ;app_delCmd.c: 97: else if (numberInMemory != 0 && numberInMemory != 1 && numberInMemory
      +                           != 32)
 23583                           
 23584                           ; BSR set to: 1
 23585  004840  5123               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23586  004842  B4D8               	btfsc	status,2,c
 23587  004844  D021               	goto	l2832
 23588                           
 23589                           ; BSR set to: 1
 23590  004846  0523               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23591  004848  B4D8               	btfsc	status,2,c
 23592  00484A  D01E               	goto	l2832
 23593                           
 23594                           ; BSR set to: 1
 23595  00484C  0E20               	movlw	32
 23596  00484E  1923               	xorwf	delCmdFsm@numberInMemory& (0+255),w,b
 23597  004850  B4D8               	btfsc	status,2,c
 23598  004852  D01A               	goto	l2832
 23599                           
 23600                           ; BSR set to: 1
 23601                           ;app_delCmd.c: 98: {
 23602                           ;app_delCmd.c: 99: saveNumberInMemory(numberInMemory, emptyNumber);
 23603  004854  0E15               	movlw	low delCmdFsm@emptyNumber
 23604  004856  0100               	movlb	0	; () banked
 23605  004858  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23606  00485A  0E01               	movlw	high delCmdFsm@emptyNumber
 23607  00485C  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23608  00485E  0101               	movlb	1	; () banked
 23609  004860  5123               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23610  004862  EC5E  F034         	call	_saveNumberInMemory
 23611  004866                     l16226:
 23612                           
 23613                           ;app_delCmd.c: 100: currentState = DEL_FSM_COMPLETE;
 23614  004866  0E02               	movlw	2
 23615  004868  D7DC               	goto	L40
 23616  00486A                     
 23617                           ; BSR set to: 1
 23618                           ;app_delCmd.c: 105: isComplete = 1;
 23619                           
 23620                           ; BSR set to: 1
 23621  00486A  0E01               	movlw	1
 23622  00486C  6F22               	movwf	delCmdFsm@isComplete& (0+255),b
 23623                           
 23624                           ;app_delCmd.c: 106: currentState = DEL_FSM_CHECK_MASTER;
 23625  00486E  0E00               	movlw	0
 23626  004870                     L43:
 23627  004870  6FD6               	movwf	delCmdFsm@currentState& (0+255),b
 23628                           
 23629                           ; BSR set to: 1
 23630                           ;app_delCmd.c: 111: }
 23631                           
 23632                           ; BSR set to: 1
 23633                           ;app_delCmd.c: 110: break;
 23634                           
 23635                           ;app_delCmd.c: 109: default:
 23636                           
 23637                           ;app_delCmd.c: 107: break;
 23638  004872  D00A               	goto	l2832
 23639  004874                     l2828:
 23640                           
 23641                           ; BSR set to: 1
 23642                           
 23643                           ; BSR set to: 1
 23644  004874  51D6               	movf	delCmdFsm@currentState& (0+255),w,b
 23645                           
 23646                           ; Switch size 1, requested type "space"
 23647                           ; Number of cases is 3, Range of values is 0 to 2
 23648                           ; switch strategies available:
 23649                           ; Name         Instructions Cycles
 23650                           ; simple_byte           10     6 (average)
 23651                           ;	Chosen strategy is simple_byte
 23652  004876  0A00               	xorlw	0	; case 0
 23653  004878  B4D8               	btfsc	status,2,c
 23654  00487A  D7C9               	goto	l2829
 23655  00487C  0A01               	xorlw	1	; case 1
 23656  00487E  B4D8               	btfsc	status,2,c
 23657  004880  D7D2               	goto	l2833
 23658  004882  0A03               	xorlw	3	; case 2
 23659  004884  B4D8               	btfsc	status,2,c
 23660  004886  D7F1               	goto	l2837
 23661  004888                     l2832:
 23662                           
 23663                           ; BSR set to: 1
 23664                           ;app_delCmd.c: 112: return isComplete;
 23665                           
 23666                           ; BSR set to: 1
 23667  004888  5122               	movf	delCmdFsm@isComplete& (0+255),w,b
 23668  00488A  0012               	return	
 23669  00488C                     __end_of_delCmdFsm:
 23670                           	opt stack 0
 23671                           tosu	equ	0xFFF
 23672                           tosh	equ	0xFFE
 23673                           tosl	equ	0xFFD
 23674                           pclath	equ	0xFFA
 23675                           tblptru	equ	0xFF8
 23676                           tblptrh	equ	0xFF7
 23677                           tblptrl	equ	0xFF6
 23678                           tablat	equ	0xFF5
 23679                           prodh	equ	0xFF4
 23680                           prodl	equ	0xFF3
 23681                           intcon	equ	0xFF2
 23682                           intcon2	equ	0xFF1
 23683                           intcon3	equ	0xFF0
 23684                           indf0	equ	0xFEF
 23685                           postinc0	equ	0xFEE
 23686                           plusw0	equ	0xFEB
 23687                           fsr0h	equ	0xFEA
 23688                           fsr0l	equ	0xFE9
 23689                           wreg	equ	0xFE8
 23690                           indf1	equ	0xFE7
 23691                           postinc1	equ	0xFE6
 23692                           postdec1	equ	0xFE5
 23693                           fsr1h	equ	0xFE2
 23694                           fsr1l	equ	0xFE1
 23695                           indf2	equ	0xFDF
 23696                           postinc2	equ	0xFDE
 23697                           postdec2	equ	0xFDD
 23698                           plusw2	equ	0xFDB
 23699                           fsr2h	equ	0xFDA
 23700                           fsr2l	equ	0xFD9
 23701                           status	equ	0xFD8
 23702                           
 23703 ;; *************** function _addCmdFsm *****************
 23704 ;; Defined at:
 23705 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;  receivedNumb    2   17[BANK1 ] PTR unsigned char 
 23708 ;;		 -> receivedNumber(13), 
 23709 ;;  smsText         2   19[BANK1 ] PTR unsigned char 
 23710 ;;		 -> smsText(20), 
 23711 ;; Auto vars:     Size  Location     Type
 23712 ;;  numberInMemo    1   22[BANK1 ] unsigned char 
 23713 ;;  isComplete      1   21[BANK1 ] unsigned char 
 23714 ;; Return value:  Size  Location     Type
 23715 ;;                  1    wreg      unsigned char 
 23716 ;; Registers used:
 23717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23718 ;; Tracked objects:
 23719 ;;		On entry : 0/0
 23720 ;;		On exit  : 0/0
 23721 ;;		Unchanged: 0/0
 23722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23723 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23724 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23726 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23727 ;;Total ram usage:        6 bytes
 23728 ;; Hardware stack levels used:    1
 23729 ;; Hardware stack levels required when called:   18
 23730 ;; This function calls:
 23731 ;;		_findEmptySpot
 23732 ;;		_isMasterNumber
 23733 ;;		_isNumberInMemory
 23734 ;;		_saveNumberInMemory
 23735 ;; This function is called by:
 23736 ;;		_MyApp_Task
 23737 ;; This function uses a non-reentrant model
 23738 ;;
 23739                           
 23740                           	psect	text111
 23741  0041E0                     __ptext111:
 23742                           	opt stack 0
 23743  0041E0                     _addCmdFsm:
 23744                           	opt stack 9
 23745                           
 23746                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 23747                           ;app_addCmd.c: 75: bool isComplete = 0;
 23748                           
 23749                           ; BSR set to: 1
 23750                           ;incstack = 0
 23751  0041E0  0E00               	movlw	0
 23752  0041E2  0101               	movlb	1	; () banked
 23753  0041E4  6F15               	movwf	addCmdFsm@isComplete& (0+255),b
 23754                           
 23755                           ;app_addCmd.c: 76: uint8_t numberInMemory = 1;
 23756  0041E6  0E01               	movlw	1
 23757  0041E8  6F16               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23758                           
 23759                           ;app_addCmd.c: 78: switch (currentState)
 23760  0041EA  D047               	goto	l2794
 23761  0041EC                     
 23762                           ; BSR set to: 1
 23763                           ;app_addCmd.c: 81: if (isMasterNumber(receivedNumber) == OP_SUCCESS)
 23764                           
 23765                           ; BSR set to: 1
 23766  0041EC  C111  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23767  0041F0  C112  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23768  0041F4  EC61  F02A         	call	_isMasterNumber	;wreg free
 23769  0041F8  0900               	iorlw	0
 23770  0041FA  A4D8               	btfss	status,2,c
 23771  0041FC  D037               	goto	l16188
 23772                           
 23773                           ;app_addCmd.c: 82: {
 23774                           ;app_addCmd.c: 83: currentState = ADD_FSM_CHECK_DUPLICATED;
 23775  0041FE  0E01               	movlw	1
 23776  004200                     L44:
 23777  004200  0101               	movlb	1	; () banked
 23778  004202  D016               	goto	L46
 23779  004204                     
 23780                           ; BSR set to: 1
 23781                           ;app_addCmd.c: 92: numberInMemory = isNumberInMemory(smsText + 4);
 23782                           
 23783                           ; BSR set to: 1
 23784  004204  0E04               	movlw	4
 23785  004206  2513               	addwf	addCmdFsm@smsText& (0+255),w,b
 23786  004208  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23787  00420A  0E00               	movlw	0
 23788  00420C  2114               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23789  00420E  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23790  004210  EC49  F029         	call	_isNumberInMemory	;wreg free
 23791  004214  0101               	movlb	1	; () banked
 23792  004216  6F16               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23793                           
 23794                           ; BSR set to: 1
 23795                           ;app_addCmd.c: 93: if (numberInMemory == 1)
 23796  004218  0516               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23797  00421A  A4D8               	btfss	status,2,c
 23798  00421C  D002               	goto	l2800
 23799                           
 23800                           ; BSR set to: 1
 23801                           ;app_addCmd.c: 94: {
 23802                           ;app_addCmd.c: 95: currentState = ADD_FSM_SAVE_NEW;
 23803  00421E  0E02               	movlw	2
 23804  004220  D007               	goto	L46
 23805  004222                     l2800:
 23806                           
 23807                           ; BSR set to: 1
 23808                           ;app_addCmd.c: 97: else if (numberInMemory != 0 && numberInMemory != 1)
 23809                           
 23810                           ; BSR set to: 1
 23811  004222  5116               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23812  004224  B4D8               	btfsc	status,2,c
 23813  004226  D036               	goto	l2798
 23814                           
 23815                           ; BSR set to: 1
 23816  004228  0516               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23817  00422A  B4D8               	btfsc	status,2,c
 23818  00422C  D033               	goto	l2798
 23819  00422E  D009               	goto	u15840
 23820  004230                     L46:
 23821  004230  6FD7               	movwf	addCmdFsm@currentState& (0+255),b
 23822                           
 23823                           ; BSR set to: 1
 23824                           ;app_addCmd.c: 100: }
 23825                           ;app_addCmd.c: 101: break;
 23826                           
 23827                           ; BSR set to: 1
 23828  004232  D030               	goto	l2798
 23829  004234                     
 23830                           ; BSR set to: 1
 23831                           ;app_addCmd.c: 104: numberInMemory = findEmptySpot();
 23832                           
 23833                           ; BSR set to: 1
 23834  004234  ECCB  F02D         	call	_findEmptySpot	;wreg free
 23835  004238  0101               	movlb	1	; () banked
 23836  00423A  6F16               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23837                           
 23838                           ; BSR set to: 1
 23839                           ;app_addCmd.c: 105: if (numberInMemory == 1)
 23840  00423C  0516               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23841  00423E  A4D8               	btfss	status,2,c
 23842  004240  D002               	goto	l2804
 23843  004242                     u15840:
 23844                           
 23845                           ; BSR set to: 1
 23846                           ;app_addCmd.c: 106: {
 23847                           ;app_addCmd.c: 107: currentState = ADD_FSM_COMPLETE;
 23848  004242  0E03               	movlw	3
 23849  004244  D7F5               	goto	L46
 23850  004246                     l2804:
 23851                           
 23852                           ; BSR set to: 1
 23853                           ;app_addCmd.c: 109: else if (numberInMemory != 0 && numberInMemory != 1)
 23854                           
 23855                           ; BSR set to: 1
 23856  004246  5116               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23857  004248  B4D8               	btfsc	status,2,c
 23858  00424A  D024               	goto	l2798
 23859                           
 23860                           ; BSR set to: 1
 23861  00424C  0516               	decf	addCmdFsm@numberInMemory& (0+255),w,b
 23862  00424E  B4D8               	btfsc	status,2,c
 23863  004250  D021               	goto	l2798
 23864                           
 23865                           ; BSR set to: 1
 23866                           ;app_addCmd.c: 110: {
 23867                           ;app_addCmd.c: 111: saveNumberInMemory(numberInMemory, smsText + 4);
 23868  004252  0E04               	movlw	4
 23869  004254  2513               	addwf	addCmdFsm@smsText& (0+255),w,b
 23870  004256  0100               	movlb	0	; () banked
 23871  004258  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23872  00425A  0E00               	movlw	0
 23873  00425C  0101               	movlb	1	; () banked
 23874  00425E  2114               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23875  004260  0100               	movlb	0	; () banked
 23876  004262  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23877  004264  0101               	movlb	1	; () banked
 23878  004266  5116               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23879  004268  EC5E  F034         	call	_saveNumberInMemory
 23880  00426C                     l16188:
 23881                           
 23882                           ;app_addCmd.c: 112: currentState = ADD_FSM_COMPLETE;
 23883  00426C  0E03               	movlw	3
 23884  00426E  D7C8               	goto	L44
 23885  004270                     
 23886                           ; BSR set to: 1
 23887                           ;app_addCmd.c: 117: currentState = ADD_FSM_CHECK_MASTER;
 23888                           
 23889                           ; BSR set to: 1
 23890  004270  0E00               	movlw	0
 23891  004272  6FD7               	movwf	addCmdFsm@currentState& (0+255),b
 23892                           
 23893                           ;app_addCmd.c: 118: isComplete = 1;
 23894  004274  0E01               	movlw	1
 23895  004276  6F15               	movwf	addCmdFsm@isComplete& (0+255),b
 23896                           
 23897                           ; BSR set to: 1
 23898                           ;app_addCmd.c: 123: }
 23899                           
 23900                           ; BSR set to: 1
 23901                           ;app_addCmd.c: 122: break;
 23902                           
 23903                           ;app_addCmd.c: 121: default:
 23904                           
 23905                           ;app_addCmd.c: 119: break;
 23906  004278  D00D               	goto	l2798
 23907  00427A                     l2794:
 23908                           
 23909                           ; BSR set to: 1
 23910                           
 23911                           ; BSR set to: 1
 23912  00427A  51D7               	movf	addCmdFsm@currentState& (0+255),w,b
 23913                           
 23914                           ; Switch size 1, requested type "space"
 23915                           ; Number of cases is 4, Range of values is 0 to 3
 23916                           ; switch strategies available:
 23917                           ; Name         Instructions Cycles
 23918                           ; simple_byte           13     7 (average)
 23919                           ;	Chosen strategy is simple_byte
 23920  00427C  0A00               	xorlw	0	; case 0
 23921  00427E  B4D8               	btfsc	status,2,c
 23922  004280  D7B5               	goto	l2795
 23923  004282  0A01               	xorlw	1	; case 1
 23924  004284  B4D8               	btfsc	status,2,c
 23925  004286  D7BE               	goto	l2799
 23926  004288  0A03               	xorlw	3	; case 2
 23927  00428A  B4D8               	btfsc	status,2,c
 23928  00428C  D7D3               	goto	l2803
 23929  00428E  0A01               	xorlw	1	; case 3
 23930  004290  B4D8               	btfsc	status,2,c
 23931  004292  D7EE               	goto	l2807
 23932  004294                     l2798:
 23933                           
 23934                           ; BSR set to: 1
 23935                           ;app_addCmd.c: 124: return isComplete;
 23936                           
 23937                           ; BSR set to: 1
 23938  004294  5115               	movf	addCmdFsm@isComplete& (0+255),w,b
 23939  004296  0012               	return	
 23940  004298                     __end_of_addCmdFsm:
 23941                           	opt stack 0
 23942                           tosu	equ	0xFFF
 23943                           tosh	equ	0xFFE
 23944                           tosl	equ	0xFFD
 23945                           pclath	equ	0xFFA
 23946                           tblptru	equ	0xFF8
 23947                           tblptrh	equ	0xFF7
 23948                           tblptrl	equ	0xFF6
 23949                           tablat	equ	0xFF5
 23950                           prodh	equ	0xFF4
 23951                           prodl	equ	0xFF3
 23952                           intcon	equ	0xFF2
 23953                           intcon2	equ	0xFF1
 23954                           intcon3	equ	0xFF0
 23955                           indf0	equ	0xFEF
 23956                           postinc0	equ	0xFEE
 23957                           plusw0	equ	0xFEB
 23958                           fsr0h	equ	0xFEA
 23959                           fsr0l	equ	0xFE9
 23960                           wreg	equ	0xFE8
 23961                           indf1	equ	0xFE7
 23962                           postinc1	equ	0xFE6
 23963                           postdec1	equ	0xFE5
 23964                           fsr1h	equ	0xFE2
 23965                           fsr1l	equ	0xFE1
 23966                           indf2	equ	0xFDF
 23967                           postinc2	equ	0xFDE
 23968                           postdec2	equ	0xFDD
 23969                           plusw2	equ	0xFDB
 23970                           fsr2h	equ	0xFDA
 23971                           fsr2l	equ	0xFD9
 23972                           status	equ	0xFD8
 23973                           
 23974 ;; *************** function _saveNumberInMemory *****************
 23975 ;; Defined at:
 23976 ;;		line 116 in file "../Source/c/04_App/app_utils.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  address         1    wreg     unsigned char 
 23979 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 23980 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 23981 ;; Auto vars:     Size  Location     Type
 23982 ;;  address         1   56[BANK0 ] unsigned char 
 23983 ;; Return value:  Size  Location     Type
 23984 ;;                  1    wreg      void 
 23985 ;; Registers used:
 23986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23987 ;; Tracked objects:
 23988 ;;		On entry : 0/0
 23989 ;;		On exit  : 0/0
 23990 ;;		Unchanged: 0/0
 23991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23995 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23996 ;;Total ram usage:        3 bytes
 23997 ;; Hardware stack levels used:    1
 23998 ;; Hardware stack levels required when called:   14
 23999 ;; This function calls:
 24000 ;;		_Eeprom_Write
 24001 ;; This function is called by:
 24002 ;;		_initFsm
 24003 ;;		_addCmdFsm
 24004 ;;		_delCmdFsm
 24005 ;; This function uses a non-reentrant model
 24006 ;;
 24007                           
 24008                           	psect	text112
 24009  0068BC                     __ptext112:
 24010                           	opt stack 0
 24011  0068BC                     _saveNumberInMemory:
 24012                           	opt stack 12
 24013                           
 24014                           ; BSR set to: 1
 24015                           ;incstack = 0
 24016                           ;saveNumberInMemory@address stored from wreg
 24017  0068BC  0100               	movlb	0	; () banked
 24018  0068BE  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24019                           
 24020                           ;app_utils.c: 118: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24021  0068C0  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24022  0068C4  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24023  0068C8  0E0D               	movlw	13
 24024  0068CA  0100               	movlb	0	; () banked
 24025  0068CC  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24026  0068CE  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24027  0068D0  ECA2  F02D         	call	_Eeprom_Write
 24028  0068D4  0012               	return		;funcret
 24029  0068D6                     __end_of_saveNumberInMemory:
 24030                           	opt stack 0
 24031                           tosu	equ	0xFFF
 24032                           tosh	equ	0xFFE
 24033                           tosl	equ	0xFFD
 24034                           pclath	equ	0xFFA
 24035                           tblptru	equ	0xFF8
 24036                           tblptrh	equ	0xFF7
 24037                           tblptrl	equ	0xFF6
 24038                           tablat	equ	0xFF5
 24039                           prodh	equ	0xFF4
 24040                           prodl	equ	0xFF3
 24041                           intcon	equ	0xFF2
 24042                           intcon2	equ	0xFF1
 24043                           intcon3	equ	0xFF0
 24044                           indf0	equ	0xFEF
 24045                           postinc0	equ	0xFEE
 24046                           plusw0	equ	0xFEB
 24047                           fsr0h	equ	0xFEA
 24048                           fsr0l	equ	0xFE9
 24049                           wreg	equ	0xFE8
 24050                           indf1	equ	0xFE7
 24051                           postinc1	equ	0xFE6
 24052                           postdec1	equ	0xFE5
 24053                           fsr1h	equ	0xFE2
 24054                           fsr1l	equ	0xFE1
 24055                           indf2	equ	0xFDF
 24056                           postinc2	equ	0xFDE
 24057                           postdec2	equ	0xFDD
 24058                           plusw2	equ	0xFDB
 24059                           fsr2h	equ	0xFDA
 24060                           fsr2l	equ	0xFD9
 24061                           status	equ	0xFD8
 24062                           
 24063 ;; *************** function _Eeprom_Write *****************
 24064 ;; Defined at:
 24065 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24066 ;; Parameters:    Size  Location     Type
 24067 ;;  MemoryAddres    1    wreg     unsigned char 
 24068 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24069 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24070 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24071 ;; Auto vars:     Size  Location     Type
 24072 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24073 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24074 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24075 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24076 ;; Return value:  Size  Location     Type
 24077 ;;                  1    wreg      unsigned char 
 24078 ;; Registers used:
 24079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24080 ;; Tracked objects:
 24081 ;;		On entry : 0/0
 24082 ;;		On exit  : 0/0
 24083 ;;		Unchanged: 0/0
 24084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24085 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24086 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24088 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24089 ;;Total ram usage:        7 bytes
 24090 ;; Hardware stack levels used:    1
 24091 ;; Hardware stack levels required when called:   13
 24092 ;; This function calls:
 24093 ;;		_I2cSlv_SendI2cMsg
 24094 ;;		_StringCopy
 24095 ;; This function is called by:
 24096 ;;		_savePreamble
 24097 ;;		_saveNumberInMemory
 24098 ;; This function uses a non-reentrant model
 24099 ;;
 24100                           
 24101                           	psect	text113
 24102  005B44                     __ptext113:
 24103                           	opt stack 0
 24104  005B44                     _Eeprom_Write:
 24105                           	opt stack 12
 24106                           
 24107                           ;incstack = 0
 24108                           ;Eeprom_Write@MemoryAddress stored from wreg
 24109  005B44  0100               	movlb	0	; () banked
 24110  005B46  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24111                           
 24112                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24113  005B48  0E50               	movlw	80
 24114  005B4A  0100               	movlb	0	; () banked
 24115  005B4C  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24116                           
 24117                           ; BSR set to: 0
 24118                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24119  005B4E  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24120  005B50  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24124  005B52  0E00               	movlw	0
 24125  005B54  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24126                           
 24127                           ; BSR set to: 0
 24128                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24129  005B56  0E10               	movlw	16
 24130  005B58  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24131  005B5A  0012               	return	
 24132                           
 24133                           ; BSR set to: 0
 24134                           ;eeprom_if.c: 85: {
 24135                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24136  005B5C  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24137                           
 24138                           ; BSR set to: 0
 24139                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24140  005B60  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24141  005B64  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24142  005B68  0EBC               	movlw	low (_EepromBuffer+1)
 24143  005B6A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24144  005B6C  0E04               	movlw	high (_EepromBuffer+1)
 24145  005B6E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24146  005B70  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24147  005B74  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24148  005B76  EC63  F02B         	call	_StringCopy	;wreg free
 24149                           
 24150                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24151  005B7A  0EBB               	movlw	low _EepromBuffer
 24152  005B7C  0100               	movlb	0	; () banked
 24153  005B7E  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24154  005B80  0E04               	movlw	high _EepromBuffer
 24155  005B82  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24156  005B84  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24157  005B88  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24158  005B8C  ECCA  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 24159  005B90  0100               	movlb	0	; () banked
 24160  005B92  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24161                           
 24162                           ; BSR set to: 0
 24163  005B94  0012               	return	
 24164  005B96                     __end_of_Eeprom_Write:
 24165                           	opt stack 0
 24166                           tosu	equ	0xFFF
 24167                           tosh	equ	0xFFE
 24168                           tosl	equ	0xFFD
 24169                           pclath	equ	0xFFA
 24170                           tblptru	equ	0xFF8
 24171                           tblptrh	equ	0xFF7
 24172                           tblptrl	equ	0xFF6
 24173                           tablat	equ	0xFF5
 24174                           prodh	equ	0xFF4
 24175                           prodl	equ	0xFF3
 24176                           intcon	equ	0xFF2
 24177                           intcon2	equ	0xFF1
 24178                           intcon3	equ	0xFF0
 24179                           indf0	equ	0xFEF
 24180                           postinc0	equ	0xFEE
 24181                           plusw0	equ	0xFEB
 24182                           fsr0h	equ	0xFEA
 24183                           fsr0l	equ	0xFE9
 24184                           wreg	equ	0xFE8
 24185                           indf1	equ	0xFE7
 24186                           postinc1	equ	0xFE6
 24187                           postdec1	equ	0xFE5
 24188                           fsr1h	equ	0xFE2
 24189                           fsr1l	equ	0xFE1
 24190                           indf2	equ	0xFDF
 24191                           postinc2	equ	0xFDE
 24192                           postdec2	equ	0xFDD
 24193                           plusw2	equ	0xFDB
 24194                           fsr2h	equ	0xFDA
 24195                           fsr2l	equ	0xFD9
 24196                           status	equ	0xFD8
 24197                           
 24198 ;; *************** function _isNumberInMemory *****************
 24199 ;; Defined at:
 24200 ;;		line 143 in file "../Source/c/04_App/app_utils.c"
 24201 ;; Parameters:    Size  Location     Type
 24202 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24203 ;;		 -> receivedNumber(13), smsText(20), 
 24204 ;; Auto vars:     Size  Location     Type
 24205 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 24206 ;;  positionInMe    1   16[BANK1 ] unsigned char 
 24207 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 24208 ;; Return value:  Size  Location     Type
 24209 ;;                  1    wreg      unsigned char 
 24210 ;; Registers used:
 24211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24212 ;; Tracked objects:
 24213 ;;		On entry : 0/0
 24214 ;;		On exit  : 0/0
 24215 ;;		Unchanged: 0/0
 24216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24217 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24218 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24220 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24221 ;;Total ram usage:       17 bytes
 24222 ;; Hardware stack levels used:    1
 24223 ;; Hardware stack levels required when called:   17
 24224 ;; This function calls:
 24225 ;;		_Eeprom_Read
 24226 ;;		_StringCompare
 24227 ;;		_isNumberValid
 24228 ;; This function is called by:
 24229 ;;		_addCmdFsm
 24230 ;;		_delCmdFsm
 24231 ;;		_triggerCmdFsm
 24232 ;; This function uses a non-reentrant model
 24233 ;;
 24234                           
 24235                           	psect	text114
 24236  005292                     __ptext114:
 24237                           	opt stack 0
 24238  005292                     _isNumberInMemory:
 24239                           	opt stack 9
 24240                           
 24241                           ;app_utils.c: 145: static uint8_t currentPosition = 32;
 24242                           ;app_utils.c: 146: uint8_t positionInMemory = 0;
 24243                           
 24244                           ; BSR set to: 0
 24245                           ;incstack = 0
 24246  005292  0E00               	movlw	0
 24247  005294  0101               	movlb	1	; () banked
 24248  005296  6F10               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 24249                           
 24250                           ;app_utils.c: 147: uint8_t readBuffer[((UINT8)(13))];
 24251                           ;app_utils.c: 148: EepromStsType memoryOpResult = OP_PENDING;
 24252  005298  0E02               	movlw	2
 24253  00529A  6F0F               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24254                           
 24255                           ; BSR set to: 1
 24256                           ;app_utils.c: 153: }
 24257                           ;app_utils.c: 154: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24258                           
 24259                           ; BSR set to: 1
 24260                           
 24261                           ; BSR set to: 1
 24262                           ;app_utils.c: 151: {
 24263                           ;app_utils.c: 152: currentPosition = 32;
 24264                           
 24265                           ;app_utils.c: 150: if (currentPosition >= 32 * 10)
 24266  00529C  0E02               	movlw	low isNumberInMemory@readBuffer
 24267  00529E  0100               	movlb	0	; () banked
 24268  0052A0  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24269  0052A2  0E01               	movlw	high isNumberInMemory@readBuffer
 24270  0052A4  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24271  0052A6  0E0D               	movlw	13
 24272  0052A8  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24273  0052AA  5041               	movf	isNumberInMemory@currentPosition,w,c
 24274  0052AC  EC24  F02D         	call	_Eeprom_Read
 24275  0052B0  0101               	movlb	1	; () banked
 24276  0052B2  6F0F               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24277                           
 24278                           ; BSR set to: 1
 24279                           ;app_utils.c: 155: if (memoryOpResult != OP_PENDING)
 24280  0052B4  0E02               	movlw	2
 24281  0052B6  190F               	xorwf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24282  0052B8  B4D8               	btfsc	status,2,c
 24283  0052BA  D022               	goto	l2758
 24284                           
 24285                           ; BSR set to: 1
 24286                           ;app_utils.c: 156: {
 24287                           ;app_utils.c: 157: if (isNumberValid(readBuffer))
 24288  0052BC  0E02               	movlw	low isNumberInMemory@readBuffer
 24289  0052BE  0100               	movlb	0	; () banked
 24290  0052C0  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24291  0052C2  0E01               	movlw	high isNumberInMemory@readBuffer
 24292  0052C4  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24293  0052C6  EC30  F02B         	call	_isNumberValid	;wreg free
 24294  0052CA  0900               	iorlw	0
 24295  0052CC  B4D8               	btfsc	status,2,c
 24296  0052CE  D016               	goto	l2756
 24297                           
 24298                           ;app_utils.c: 158: {
 24299                           ;app_utils.c: 159: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24300  0052D0  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24301  0052D4  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24302  0052D8  0E02               	movlw	low isNumberInMemory@readBuffer
 24303  0052DA  0100               	movlb	0	; () banked
 24304  0052DC  6F7F               	movwf	StringCompare@String2& (0+255),b
 24305  0052DE  0E01               	movlw	high isNumberInMemory@readBuffer
 24306  0052E0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24307  0052E2  0E00               	movlw	0
 24308  0052E4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24309  0052E6  0E0D               	movlw	13
 24310  0052E8  6F81               	movwf	StringCompare@Len& (0+255),b
 24311  0052EA  ECF4  F02D         	call	_StringCompare	;wreg free
 24312  0052EE  0900               	iorlw	0
 24313  0052F0  B4D8               	btfsc	status,2,c
 24314  0052F2  D004               	goto	l2756
 24315                           
 24316                           ;app_utils.c: 160: {
 24317                           ;app_utils.c: 161: positionInMemory = currentPosition;
 24318  0052F4  C041  F110         	movff	isNumberInMemory@currentPosition,isNumberInMemory@positionInMemory
 24319                           
 24320                           ;app_utils.c: 162: currentPosition = 32 * 10;
 24321  0052F8  0E40               	movlw	64
 24322  0052FA  6E41               	movwf	isNumberInMemory@currentPosition,c
 24323  0052FC                     l2756:
 24324                           
 24325                           ;app_utils.c: 167: }
 24326                           ;app_utils.c: 168: }
 24327                           ;app_utils.c: 169: currentPosition += 32;
 24328                           
 24329                           ;app_utils.c: 164: else
 24330                           ;app_utils.c: 165: {
 24331  0052FC  0E20               	movlw	32
 24332  0052FE  2641               	addwf	isNumberInMemory@currentPosition,f,c
 24333  005300                     l2758:
 24334                           
 24335                           ;app_utils.c: 174: }
 24336                           ;app_utils.c: 175: return positionInMemory;
 24337  005300  0101               	movlb	1	; () banked
 24338  005302  5110               	movf	isNumberInMemory@positionInMemory& (0+255),w,b
 24339  005304  0012               	return	
 24340  005306                     __end_of_isNumberInMemory:
 24341                           	opt stack 0
 24342                           tosu	equ	0xFFF
 24343                           tosh	equ	0xFFE
 24344                           tosl	equ	0xFFD
 24345                           pclath	equ	0xFFA
 24346                           tblptru	equ	0xFF8
 24347                           tblptrh	equ	0xFF7
 24348                           tblptrl	equ	0xFF6
 24349                           tablat	equ	0xFF5
 24350                           prodh	equ	0xFF4
 24351                           prodl	equ	0xFF3
 24352                           intcon	equ	0xFF2
 24353                           intcon2	equ	0xFF1
 24354                           intcon3	equ	0xFF0
 24355                           indf0	equ	0xFEF
 24356                           postinc0	equ	0xFEE
 24357                           plusw0	equ	0xFEB
 24358                           fsr0h	equ	0xFEA
 24359                           fsr0l	equ	0xFE9
 24360                           wreg	equ	0xFE8
 24361                           indf1	equ	0xFE7
 24362                           postinc1	equ	0xFE6
 24363                           postdec1	equ	0xFE5
 24364                           fsr1h	equ	0xFE2
 24365                           fsr1l	equ	0xFE1
 24366                           indf2	equ	0xFDF
 24367                           postinc2	equ	0xFDE
 24368                           postdec2	equ	0xFDD
 24369                           plusw2	equ	0xFDB
 24370                           fsr2h	equ	0xFDA
 24371                           fsr2l	equ	0xFD9
 24372                           status	equ	0xFD8
 24373                           
 24374 ;; *************** function _isMasterNumber *****************
 24375 ;; Defined at:
 24376 ;;		line 178 in file "../Source/c/04_App/app_utils.c"
 24377 ;; Parameters:    Size  Location     Type
 24378 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24379 ;;		 -> receivedNumber(13), 
 24380 ;; Auto vars:     Size  Location     Type
 24381 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 24382 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 24383 ;; Return value:  Size  Location     Type
 24384 ;;                  1    wreg      unsigned char 
 24385 ;; Registers used:
 24386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24387 ;; Tracked objects:
 24388 ;;		On entry : 0/0
 24389 ;;		On exit  : 0/0
 24390 ;;		Unchanged: 0/0
 24391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24392 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24393 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24395 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24396 ;;Total ram usage:       16 bytes
 24397 ;; Hardware stack levels used:    1
 24398 ;; Hardware stack levels required when called:   17
 24399 ;; This function calls:
 24400 ;;		_Eeprom_Read
 24401 ;;		_StringCompare
 24402 ;;		_isNumberValid
 24403 ;; This function is called by:
 24404 ;;		_addCmdFsm
 24405 ;;		_delCmdFsm
 24406 ;; This function uses a non-reentrant model
 24407 ;;
 24408                           
 24409                           	psect	text115
 24410  0054C2                     __ptext115:
 24411                           	opt stack 0
 24412  0054C2                     _isMasterNumber:
 24413                           	opt stack 9
 24414                           
 24415                           ;app_utils.c: 180: uint8_t readBuffer[((UINT8)(13))];
 24416                           ;app_utils.c: 181: EepromStsType memoryOpResult = OP_PENDING;
 24417                           
 24418                           ; BSR set to: 1
 24419                           ;incstack = 0
 24420  0054C2  0E02               	movlw	2
 24421  0054C4  0101               	movlb	1	; () banked
 24422  0054C6  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24423                           
 24424                           ; BSR set to: 1
 24425                           ;app_utils.c: 183: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24426  0054C8  0E02               	movlw	low isMasterNumber@readBuffer
 24427  0054CA  0100               	movlb	0	; () banked
 24428  0054CC  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24429  0054CE  0E01               	movlw	high isMasterNumber@readBuffer
 24430  0054D0  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24431  0054D2  0E0D               	movlw	13
 24432  0054D4  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24433  0054D6  0E10               	movlw	16
 24434  0054D8  EC24  F02D         	call	_Eeprom_Read
 24435  0054DC  0101               	movlb	1	; () banked
 24436  0054DE  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24437                           
 24438                           ; BSR set to: 1
 24439                           ;app_utils.c: 184: if (memoryOpResult != OP_PENDING)
 24440  0054E0  0E02               	movlw	2
 24441  0054E2  190F               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24442  0054E4  B4D8               	btfsc	status,2,c
 24443  0054E6  D01F               	goto	l2764
 24444                           
 24445                           ; BSR set to: 1
 24446                           ;app_utils.c: 185: {
 24447                           ;app_utils.c: 186: if (isNumberValid(readBuffer))
 24448  0054E8  0E02               	movlw	low isMasterNumber@readBuffer
 24449  0054EA  0100               	movlb	0	; () banked
 24450  0054EC  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24451  0054EE  0E01               	movlw	high isMasterNumber@readBuffer
 24452  0054F0  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24453  0054F2  EC30  F02B         	call	_isNumberValid	;wreg free
 24454  0054F6  0900               	iorlw	0
 24455  0054F8  B4D8               	btfsc	status,2,c
 24456  0054FA  D015               	goto	l2764
 24457                           
 24458                           ;app_utils.c: 187: {
 24459                           ;app_utils.c: 188: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24460  0054FC  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 24461  005500  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 24462  005504  0E02               	movlw	low isMasterNumber@readBuffer
 24463  005506  0100               	movlb	0	; () banked
 24464  005508  6F7F               	movwf	StringCompare@String2& (0+255),b
 24465  00550A  0E01               	movlw	high isMasterNumber@readBuffer
 24466  00550C  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24467  00550E  0E00               	movlw	0
 24468  005510  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24469  005512  0E0D               	movlw	13
 24470  005514  6F81               	movwf	StringCompare@Len& (0+255),b
 24471  005516  ECF4  F02D         	call	_StringCompare	;wreg free
 24472  00551A  0900               	iorlw	0
 24473  00551C  B4D8               	btfsc	status,2,c
 24474  00551E  D003               	goto	l2764
 24475                           
 24476                           ;app_utils.c: 189: {
 24477                           ;app_utils.c: 190: memoryOpResult = OP_SUCCESS;
 24478  005520  0E00               	movlw	0
 24479  005522  0101               	movlb	1	; () banked
 24480  005524  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24481  005526                     l2764:
 24482                           
 24483                           ;app_utils.c: 191: }
 24484                           ;app_utils.c: 192: }
 24485                           ;app_utils.c: 193: }
 24486                           ;app_utils.c: 194: return memoryOpResult;
 24487                           
 24488                           ; BSR set to: 1
 24489                           
 24490                           ; BSR set to: 1
 24491  005526  0101               	movlb	1	; () banked
 24492  005528  510F               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 24493  00552A  0012               	return	
 24494  00552C                     __end_of_isMasterNumber:
 24495                           	opt stack 0
 24496                           tosu	equ	0xFFF
 24497                           tosh	equ	0xFFE
 24498                           tosl	equ	0xFFD
 24499                           pclath	equ	0xFFA
 24500                           tblptru	equ	0xFF8
 24501                           tblptrh	equ	0xFF7
 24502                           tblptrl	equ	0xFF6
 24503                           tablat	equ	0xFF5
 24504                           prodh	equ	0xFF4
 24505                           prodl	equ	0xFF3
 24506                           intcon	equ	0xFF2
 24507                           intcon2	equ	0xFF1
 24508                           intcon3	equ	0xFF0
 24509                           indf0	equ	0xFEF
 24510                           postinc0	equ	0xFEE
 24511                           plusw0	equ	0xFEB
 24512                           fsr0h	equ	0xFEA
 24513                           fsr0l	equ	0xFE9
 24514                           wreg	equ	0xFE8
 24515                           indf1	equ	0xFE7
 24516                           postinc1	equ	0xFE6
 24517                           postdec1	equ	0xFE5
 24518                           fsr1h	equ	0xFE2
 24519                           fsr1l	equ	0xFE1
 24520                           indf2	equ	0xFDF
 24521                           postinc2	equ	0xFDE
 24522                           postdec2	equ	0xFDD
 24523                           plusw2	equ	0xFDB
 24524                           fsr2h	equ	0xFDA
 24525                           fsr2l	equ	0xFD9
 24526                           status	equ	0xFD8
 24527                           
 24528 ;; *************** function _findEmptySpot *****************
 24529 ;; Defined at:
 24530 ;;		line 197 in file "../Source/c/04_App/app_utils.c"
 24531 ;; Parameters:    Size  Location     Type
 24532 ;;		None
 24533 ;; Auto vars:     Size  Location     Type
 24534 ;;  readBuffer     13    0[BANK1 ] unsigned char [13]
 24535 ;;  positionInMe    1   14[BANK1 ] unsigned char 
 24536 ;;  memoryOpResu    1   13[BANK1 ] enum E8246
 24537 ;; Return value:  Size  Location     Type
 24538 ;;                  1    wreg      unsigned char 
 24539 ;; Registers used:
 24540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24541 ;; Tracked objects:
 24542 ;;		On entry : 0/0
 24543 ;;		On exit  : 0/0
 24544 ;;		Unchanged: 0/0
 24545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24547 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24549 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24550 ;;Total ram usage:       15 bytes
 24551 ;; Hardware stack levels used:    1
 24552 ;; Hardware stack levels required when called:   17
 24553 ;; This function calls:
 24554 ;;		_Eeprom_Read
 24555 ;;		_isNumberValid
 24556 ;; This function is called by:
 24557 ;;		_addCmdFsm
 24558 ;; This function uses a non-reentrant model
 24559 ;;
 24560                           
 24561                           	psect	text116
 24562  005B96                     __ptext116:
 24563                           	opt stack 0
 24564  005B96                     _findEmptySpot:
 24565                           	opt stack 9
 24566                           
 24567                           ;app_utils.c: 199: static uint8_t currentPosition = 32;
 24568                           ;app_utils.c: 200: uint8_t positionInMemory = 0;
 24569                           
 24570                           ; BSR set to: 1
 24571                           ;incstack = 0
 24572  005B96  0E00               	movlw	0
 24573  005B98  0101               	movlb	1	; () banked
 24574  005B9A  6F0E               	movwf	findEmptySpot@positionInMemory& (0+255),b
 24575                           
 24576                           ;app_utils.c: 201: uint8_t readBuffer[((UINT8)(13))];
 24577                           ;app_utils.c: 202: EepromStsType memoryOpResult = OP_PENDING;
 24578  005B9C  0E02               	movlw	2
 24579  005B9E  6F0D               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24580                           
 24581                           ; BSR set to: 1
 24582                           ;app_utils.c: 207: }
 24583                           ;app_utils.c: 208: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24584                           
 24585                           ; BSR set to: 1
 24586                           
 24587                           ; BSR set to: 1
 24588                           ;app_utils.c: 205: {
 24589                           ;app_utils.c: 206: currentPosition = 32;
 24590                           
 24591                           ;app_utils.c: 204: if (currentPosition >= 32 * 10)
 24592  005BA0  0E00               	movlw	low findEmptySpot@readBuffer
 24593  005BA2  0100               	movlb	0	; () banked
 24594  005BA4  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24595  005BA6  0E01               	movlw	high findEmptySpot@readBuffer
 24596  005BA8  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24597  005BAA  0E0D               	movlw	13
 24598  005BAC  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24599  005BAE  5040               	movf	findEmptySpot@currentPosition,w,c
 24600  005BB0  EC24  F02D         	call	_Eeprom_Read
 24601  005BB4  0101               	movlb	1	; () banked
 24602  005BB6  6F0D               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24603                           
 24604                           ; BSR set to: 1
 24605                           ;app_utils.c: 209: if (memoryOpResult != OP_PENDING)
 24606  005BB8  0E02               	movlw	2
 24607  005BBA  190D               	xorwf	findEmptySpot@memoryOpResult& (0+255),w,b
 24608  005BBC  B4D8               	btfsc	status,2,c
 24609  005BBE  D011               	goto	l2774
 24610                           
 24611                           ; BSR set to: 1
 24612                           ;app_utils.c: 210: {
 24613                           ;app_utils.c: 211: if (isNumberValid(readBuffer))
 24614  005BC0  0E00               	movlw	low findEmptySpot@readBuffer
 24615  005BC2  0100               	movlb	0	; () banked
 24616  005BC4  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24617  005BC6  0E01               	movlw	high findEmptySpot@readBuffer
 24618  005BC8  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24619  005BCA  EC30  F02B         	call	_isNumberValid	;wreg free
 24620  005BCE  0900               	iorlw	0
 24621  005BD0  B4D8               	btfsc	status,2,c
 24622  005BD2  D003               	goto	l2772
 24623                           
 24624                           ;app_utils.c: 212: {
 24625                           ;app_utils.c: 213: currentPosition += 32;
 24626  005BD4  0E20               	movlw	32
 24627  005BD6  2640               	addwf	findEmptySpot@currentPosition,f,c
 24628                           
 24629                           ;app_utils.c: 214: }
 24630  005BD8  D004               	goto	l2774
 24631  005BDA                     l2772:
 24632                           
 24633                           ;app_utils.c: 215: else
 24634                           ;app_utils.c: 216: {
 24635                           ;app_utils.c: 217: positionInMemory = currentPosition;
 24636  005BDA  C040  F10E         	movff	findEmptySpot@currentPosition,findEmptySpot@positionInMemory
 24637                           
 24638                           ;app_utils.c: 218: currentPosition = 32 * 10;
 24639  005BDE  0E40               	movlw	64
 24640  005BE0  6E40               	movwf	findEmptySpot@currentPosition,c
 24641  005BE2                     l2774:
 24642                           
 24643                           ;app_utils.c: 224: }
 24644                           ;app_utils.c: 225: return positionInMemory;
 24645  005BE2  0101               	movlb	1	; () banked
 24646  005BE4  510E               	movf	findEmptySpot@positionInMemory& (0+255),w,b
 24647  005BE6  0012               	return	
 24648  005BE8                     __end_of_findEmptySpot:
 24649                           	opt stack 0
 24650                           tosu	equ	0xFFF
 24651                           tosh	equ	0xFFE
 24652                           tosl	equ	0xFFD
 24653                           pclath	equ	0xFFA
 24654                           tblptru	equ	0xFF8
 24655                           tblptrh	equ	0xFF7
 24656                           tblptrl	equ	0xFF6
 24657                           tablat	equ	0xFF5
 24658                           prodh	equ	0xFF4
 24659                           prodl	equ	0xFF3
 24660                           intcon	equ	0xFF2
 24661                           intcon2	equ	0xFF1
 24662                           intcon3	equ	0xFF0
 24663                           indf0	equ	0xFEF
 24664                           postinc0	equ	0xFEE
 24665                           plusw0	equ	0xFEB
 24666                           fsr0h	equ	0xFEA
 24667                           fsr0l	equ	0xFE9
 24668                           wreg	equ	0xFE8
 24669                           indf1	equ	0xFE7
 24670                           postinc1	equ	0xFE6
 24671                           postdec1	equ	0xFE5
 24672                           fsr1h	equ	0xFE2
 24673                           fsr1l	equ	0xFE1
 24674                           indf2	equ	0xFDF
 24675                           postinc2	equ	0xFDE
 24676                           postdec2	equ	0xFDD
 24677                           plusw2	equ	0xFDB
 24678                           fsr2h	equ	0xFDA
 24679                           fsr2l	equ	0xFD9
 24680                           status	equ	0xFD8
 24681                           
 24682 ;; *************** function _isNumberValid *****************
 24683 ;; Defined at:
 24684 ;;		line 121 in file "../Source/c/04_App/app_utils.c"
 24685 ;; Parameters:    Size  Location     Type
 24686 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 24687 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 24688 ;; Auto vars:     Size  Location     Type
 24689 ;;  i               1   33[BANK0 ] unsigned char 
 24690 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 24691 ;; Return value:  Size  Location     Type
 24692 ;;                  1    wreg      unsigned char 
 24693 ;; Registers used:
 24694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24695 ;; Tracked objects:
 24696 ;;		On entry : 0/0
 24697 ;;		On exit  : 0/0
 24698 ;;		Unchanged: 0/0
 24699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24701 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24702 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24703 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24704 ;;Total ram usage:        5 bytes
 24705 ;; Hardware stack levels used:    1
 24706 ;; Hardware stack levels required when called:   11
 24707 ;; This function calls:
 24708 ;;		Nothing
 24709 ;; This function is called by:
 24710 ;;		_parseCommand
 24711 ;;		_isNumberInMemory
 24712 ;;		_isMasterNumber
 24713 ;;		_findEmptySpot
 24714 ;; This function uses a non-reentrant model
 24715 ;;
 24716                           
 24717                           	psect	text117
 24718  005660                     __ptext117:
 24719                           	opt stack 0
 24720  005660                     _isNumberValid:
 24721                           	opt stack 14
 24722                           
 24723                           ;app_utils.c: 123: bool isNumberOk = 0;
 24724                           
 24725                           ; BSR set to: 1
 24726                           ;incstack = 0
 24727  005660  0E00               	movlw	0
 24728  005662  0100               	movlb	0	; () banked
 24729  005664  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24730                           
 24731                           ;app_utils.c: 124: uint8_t i = 0;
 24732  005666  0E00               	movlw	0
 24733  005668  6F81               	movwf	isNumberValid@i& (0+255),b
 24734                           
 24735                           ; BSR set to: 0
 24736                           ;app_utils.c: 125: if (phoneNumber[0] == '+')
 24737  00566A  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 24738  00566E  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 24739  005672  0E2B               	movlw	43
 24740  005674  18DE               	xorwf	postinc2,w,c
 24741  005676  A4D8               	btfss	status,2,c
 24742  005678  D024               	goto	u13150
 24743                           
 24744                           ; BSR set to: 0
 24745                           ;app_utils.c: 126: {
 24746                           ;app_utils.c: 127: for (i = 1; i < ((UINT8)(13)); i++)
 24747  00567A  0E01               	movlw	1
 24748  00567C  6F81               	movwf	isNumberValid@i& (0+255),b
 24749  00567E                     l14066:
 24750                           
 24751                           ; BSR set to: 0
 24752  00567E  0E0C               	movlw	12
 24753  005680  6581               	cpfsgt	isNumberValid@i& (0+255),b
 24754  005682  D001               	goto	l2744
 24755  005684  D01E               	goto	u13150
 24756  005686                     l2744:
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;app_utils.c: 128: {
 24760                           ;app_utils.c: 129: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 24761                           
 24762                           ; BSR set to: 0
 24763  005686  5181               	movf	isNumberValid@i& (0+255),w,b
 24764  005688  0D01               	mullw	1
 24765  00568A  50F3               	movf	prodl,w,c
 24766  00568C  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24767  00568E  6ED9               	movwf	fsr2l,c
 24768  005690  50F4               	movf	prodh,w,c
 24769  005692  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24770  005694  6EDA               	movwf	fsr2h,c
 24771  005696  0E2F               	movlw	47
 24772  005698  64DF               	cpfsgt	indf2,c
 24773  00569A  D00E               	goto	l2746
 24774                           
 24775                           ; BSR set to: 0
 24776  00569C  5181               	movf	isNumberValid@i& (0+255),w,b
 24777  00569E  0D01               	mullw	1
 24778  0056A0  50F3               	movf	prodl,w,c
 24779  0056A2  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24780  0056A4  6ED9               	movwf	fsr2l,c
 24781  0056A6  50F4               	movf	prodh,w,c
 24782  0056A8  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24783  0056AA  6EDA               	movwf	fsr2h,c
 24784  0056AC  0E3A               	movlw	58
 24785  0056AE  60DF               	cpfslt	indf2,c
 24786  0056B0  D003               	goto	l2746
 24787                           
 24788                           ; BSR set to: 0
 24789                           ;app_utils.c: 130: {
 24790                           ;app_utils.c: 131: isNumberOk = 1;
 24791  0056B2  0E01               	movlw	1
 24792  0056B4  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24793                           
 24794                           ;app_utils.c: 132: }
 24795  0056B6  D003               	goto	l2747
 24796  0056B8                     l2746:
 24797                           
 24798                           ; BSR set to: 0
 24799                           ;app_utils.c: 133: else
 24800                           ;app_utils.c: 134: {
 24801                           ;app_utils.c: 135: isNumberOk = 0;
 24802                           
 24803                           ; BSR set to: 0
 24804  0056B8  0E00               	movlw	0
 24805  0056BA  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24806                           
 24807                           ;app_utils.c: 136: break;
 24808  0056BC  D002               	goto	u13150
 24809  0056BE                     l2747:
 24810                           
 24811                           ; BSR set to: 0
 24812                           
 24813                           ; BSR set to: 0
 24814  0056BE  2B81               	incf	isNumberValid@i& (0+255),f,b
 24815  0056C0  D7DE               	goto	l14066
 24816  0056C2                     u13150:
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;app_utils.c: 137: }
 24820                           ;app_utils.c: 138: }
 24821                           ;app_utils.c: 139: }
 24822                           ;app_utils.c: 140: return isNumberOk;
 24823                           
 24824                           ; BSR set to: 0
 24825                           
 24826                           ; BSR set to: 0
 24827  0056C2  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 24828  0056C4  0012               	return	
 24829  0056C6                     __end_of_isNumberValid:
 24830                           	opt stack 0
 24831                           tosu	equ	0xFFF
 24832                           tosh	equ	0xFFE
 24833                           tosl	equ	0xFFD
 24834                           pclath	equ	0xFFA
 24835                           tblptru	equ	0xFF8
 24836                           tblptrh	equ	0xFF7
 24837                           tblptrl	equ	0xFF6
 24838                           tablat	equ	0xFF5
 24839                           prodh	equ	0xFF4
 24840                           prodl	equ	0xFF3
 24841                           intcon	equ	0xFF2
 24842                           intcon2	equ	0xFF1
 24843                           intcon3	equ	0xFF0
 24844                           indf0	equ	0xFEF
 24845                           postinc0	equ	0xFEE
 24846                           plusw0	equ	0xFEB
 24847                           fsr0h	equ	0xFEA
 24848                           fsr0l	equ	0xFE9
 24849                           wreg	equ	0xFE8
 24850                           indf1	equ	0xFE7
 24851                           postinc1	equ	0xFE6
 24852                           postdec1	equ	0xFE5
 24853                           fsr1h	equ	0xFE2
 24854                           fsr1l	equ	0xFE1
 24855                           indf2	equ	0xFDF
 24856                           postinc2	equ	0xFDE
 24857                           postdec2	equ	0xFDD
 24858                           plusw2	equ	0xFDB
 24859                           fsr2h	equ	0xFDA
 24860                           fsr2l	equ	0xFD9
 24861                           status	equ	0xFD8
 24862                           
 24863 ;; *************** function _Eeprom_Read *****************
 24864 ;; Defined at:
 24865 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24866 ;; Parameters:    Size  Location     Type
 24867 ;;  MemoryAddres    1    wreg     unsigned char 
 24868 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 24869 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 24870 ;;  DataLength      1   75[BANK0 ] unsigned char 
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 24873 ;;  QuerySts        1   79[BANK0 ] enum E8932
 24874 ;;  ReadSts         1   78[BANK0 ] enum E8958
 24875 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 24876 ;; Return value:  Size  Location     Type
 24877 ;;                  1    wreg      enum E8958
 24878 ;; Registers used:
 24879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24880 ;; Tracked objects:
 24881 ;;		On entry : 0/0
 24882 ;;		On exit  : 0/0
 24883 ;;		Unchanged: 0/0
 24884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24885 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24886 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24888 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24889 ;;Total ram usage:        7 bytes
 24890 ;; Hardware stack levels used:    1
 24891 ;; Hardware stack levels required when called:   16
 24892 ;; This function calls:
 24893 ;;		_I2cSlv_QueryI2cData
 24894 ;; This function is called by:
 24895 ;;		_initEeprom
 24896 ;;		_isNumberInMemory
 24897 ;;		_isMasterNumber
 24898 ;;		_findEmptySpot
 24899 ;; This function uses a non-reentrant model
 24900 ;;
 24901                           
 24902                           	psect	text118
 24903  005A48                     __ptext118:
 24904                           	opt stack 0
 24905  005A48                     _Eeprom_Read:
 24906                           	opt stack 9
 24907                           
 24908                           ; BSR set to: 0
 24909                           ;incstack = 0
 24910                           ;Eeprom_Read@MemoryAddress stored from wreg
 24911  005A48  0100               	movlb	0	; () banked
 24912  005A4A  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 24913                           
 24914                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 24915  005A4C  0E50               	movlw	80
 24916  005A4E  0100               	movlb	0	; () banked
 24917  005A50  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 24918                           
 24919                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 24920  005A52  0E00               	movlw	0
 24921  005A54  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 24922                           
 24923                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 24924  005A56  0E02               	movlw	2
 24925  005A58  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 24926                           
 24927                           ; BSR set to: 0
 24928                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 24929  005A5A  C0AC  F1FC         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 24930                           
 24931                           ; BSR set to: 0
 24932                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 24933  005A5E  0EFC               	movlw	low _ReadAddress
 24934  005A60  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 24935  005A62  0E01               	movlw	high _ReadAddress
 24936  005A64  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 24937  005A66  0E01               	movlw	1
 24938  005A68  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 24939  005A6A  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 24940  005A6E  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 24941  005A72  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 24942  005A76  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 24943  005A7A  ECA1  F01C         	call	_I2cSlv_QueryI2cData	;wreg free
 24944  005A7E  0100               	movlb	0	; () banked
 24945  005A80  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 24946                           
 24947                           ; BSR set to: 0
 24948                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 24949  005A82  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 24950  005A84  A4D8               	btfss	status,2,c
 24951  005A86  D002               	goto	l2037
 24952                           
 24953                           ; BSR set to: 0
 24954                           ;eeprom_if.c: 114: {
 24955                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 24956  005A88  0E00               	movlw	0
 24957  005A8A  D005               	goto	L47
 24958  005A8C                     l2037:
 24959                           
 24960                           ; BSR set to: 0
 24961                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 24962                           
 24963                           ; BSR set to: 0
 24964  005A8C  0E02               	movlw	2
 24965  005A8E  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 24966  005A90  A4D8               	btfss	status,2,c
 24967  005A92  D002               	goto	l2039
 24968                           
 24969                           ; BSR set to: 0
 24970                           ;eeprom_if.c: 118: {
 24971                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 24972  005A94  0E01               	movlw	1
 24973  005A96                     L47:
 24974  005A96  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 24975  005A98                     l2039:
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;eeprom_if.c: 120: }
 24979                           ;eeprom_if.c: 121: return ReadSts;
 24980                           
 24981                           ; BSR set to: 0
 24982  005A98  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 24983  005A9A  0012               	return	
 24984  005A9C                     __end_of_Eeprom_Read:
 24985                           	opt stack 0
 24986                           tosu	equ	0xFFF
 24987                           tosh	equ	0xFFE
 24988                           tosl	equ	0xFFD
 24989                           pclath	equ	0xFFA
 24990                           tblptru	equ	0xFF8
 24991                           tblptrh	equ	0xFF7
 24992                           tblptrl	equ	0xFF6
 24993                           tablat	equ	0xFF5
 24994                           prodh	equ	0xFF4
 24995                           prodl	equ	0xFF3
 24996                           intcon	equ	0xFF2
 24997                           intcon2	equ	0xFF1
 24998                           intcon3	equ	0xFF0
 24999                           indf0	equ	0xFEF
 25000                           postinc0	equ	0xFEE
 25001                           plusw0	equ	0xFEB
 25002                           fsr0h	equ	0xFEA
 25003                           fsr0l	equ	0xFE9
 25004                           wreg	equ	0xFE8
 25005                           indf1	equ	0xFE7
 25006                           postinc1	equ	0xFE6
 25007                           postdec1	equ	0xFE5
 25008                           fsr1h	equ	0xFE2
 25009                           fsr1l	equ	0xFE1
 25010                           indf2	equ	0xFDF
 25011                           postinc2	equ	0xFDE
 25012                           postdec2	equ	0xFDD
 25013                           plusw2	equ	0xFDB
 25014                           fsr2h	equ	0xFDA
 25015                           fsr2l	equ	0xFD9
 25016                           status	equ	0xFD8
 25017                           
 25018 ;; *************** function _I2cSlv_QueryI2cData *****************
 25019 ;; Defined at:
 25020 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25021 ;; Parameters:    Size  Location     Type
 25022 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25023 ;;		 -> ReadAddress(1), 
 25024 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25025 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25026 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25027 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25028 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25029 ;; Auto vars:     Size  Location     Type
 25030 ;;		None
 25031 ;; Return value:  Size  Location     Type
 25032 ;;                  1    wreg      enum E8947
 25033 ;; Registers used:
 25034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25035 ;; Tracked objects:
 25036 ;;		On entry : 0/0
 25037 ;;		On exit  : 0/0
 25038 ;;		Unchanged: 0/0
 25039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25040 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25043 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25044 ;;Total ram usage:        7 bytes
 25045 ;; Hardware stack levels used:    1
 25046 ;; Hardware stack levels required when called:   15
 25047 ;; This function calls:
 25048 ;;		_I2cSlv_I2cReadMsgSts
 25049 ;;		_I2cSlv_ReceiveI2cMsg
 25050 ;;		_I2cSlv_SendI2cMsg
 25051 ;;		_OsTmr_GetTimerStatus
 25052 ;;		_OsTmr_StartTimer
 25053 ;;		_OsTmr_Wait
 25054 ;; This function is called by:
 25055 ;;		_Eeprom_Read
 25056 ;; This function uses a non-reentrant model
 25057 ;;
 25058                           
 25059                           	psect	text119
 25060  003942                     __ptext119:
 25061                           	opt stack 0
 25062  003942                     _I2cSlv_QueryI2cData:
 25063                           	opt stack 9
 25064                           
 25065                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25066                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25067                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25068                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25069                           ;i2c_slv.c: 388: switch(I2cOpState)
 25070                           
 25071                           ; BSR set to: 0
 25072                           ;incstack = 0
 25073  003942  D05B               	goto	l1440
 25074  003944                     
 25075                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25076  003944  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25077  003948  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25078  00394C  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25079  003950  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25080  003954  ECCA  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 25081                           
 25082                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25083  003958  0E01               	movlw	1
 25084  00395A  0101               	movlb	1	; () banked
 25085  00395C  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25086                           
 25087                           ; BSR set to: 1
 25088                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25089  00395E  0E00               	movlw	0
 25090  003960  D04A               	goto	L51
 25091  003962                     
 25092                           ; BSR set to: 1
 25093                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25094                           
 25095                           ; BSR set to: 1
 25096  003962  0ED5               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25097  003964  0100               	movlb	0	; () banked
 25098  003966  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25099  003968  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25100  00396A  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25101  00396C  0EF4               	movlw	244
 25102  00396E  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25103  003970  0E01               	movlw	1
 25104  003972  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25105  003974  0E00               	movlw	0
 25106  003976  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25107  003978  0E00               	movlw	0
 25108  00397A  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25109  00397C  EC93  F028         	call	_OsTmr_Wait	;wreg free
 25110  003980  06E8               	decf	wreg,f,c
 25111  003982  A4D8               	btfss	status,2,c
 25112  003984  D036               	goto	l1448
 25113                           
 25114                           ;i2c_slv.c: 402: {
 25115                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25116  003986  0E49               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25117  003988  0100               	movlb	0	; () banked
 25118  00398A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25119  00398C  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25120  00398E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25121  003990  0EC4               	movlw	196
 25122  003992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25123  003994  0E09               	movlw	9
 25124  003996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25125  003998  0E00               	movlw	0
 25126  00399A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25127  00399C  0E00               	movlw	0
 25128  00399E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25129  0039A0  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 25130                           
 25131                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25132  0039A4  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25133  0039A8  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25134  0039AC  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25135  0039B0  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25136  0039B4  EC6B  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25137                           
 25138                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25139  0039B8  0E02               	movlw	2
 25140  0039BA  0101               	movlb	1	; () banked
 25141  0039BC  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25142  0039BE  D019               	goto	l1448
 25143  0039C0                     
 25144                           ; BSR set to: 1
 25145                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25146                           
 25147                           ; BSR set to: 1
 25148  0039C0  ECAD  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25149  0039C4  06E8               	decf	wreg,f,c
 25150  0039C6  A4D8               	btfss	status,2,c
 25151  0039C8  D005               	goto	l1446
 25152                           
 25153                           ;i2c_slv.c: 414: {
 25154                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25155  0039CA  0E00               	movlw	0
 25156  0039CC  0101               	movlb	1	; () banked
 25157  0039CE  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25158                           
 25159                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25160  0039D0  0E01               	movlw	1
 25161  0039D2  D011               	goto	L51
 25162  0039D4                     l1446:
 25163                           
 25164                           ;i2c_slv.c: 420: else
 25165                           ;i2c_slv.c: 421: {
 25166                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25167                           
 25168                           ; BSR set to: 1
 25169  0039D4  0E49               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25170  0039D6  0100               	movlb	0	; () banked
 25171  0039D8  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25172  0039DA  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25173  0039DC  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25174  0039DE  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25175  0039E2  06E8               	decf	wreg,f,c
 25176  0039E4  A4D8               	btfss	status,2,c
 25177  0039E6  D005               	goto	l1448
 25178                           
 25179                           ;i2c_slv.c: 423: {
 25180                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25181  0039E8  0E00               	movlw	0
 25182  0039EA  0101               	movlb	1	; () banked
 25183  0039EC  6FE5               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25184                           
 25185                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25186  0039EE  0E02               	movlw	2
 25187  0039F0  D002               	goto	L51
 25188  0039F2                     l1448:
 25189                           
 25190                           ;i2c_slv.c: 429: else
 25191                           ;i2c_slv.c: 430: {
 25192                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25193                           
 25194                           ; BSR set to: 1
 25195  0039F2  0E00               	movlw	0
 25196  0039F4  0101               	movlb	1	; () banked
 25197  0039F6                     L51:
 25198  0039F6  6FE4               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25199                           
 25200                           ; BSR set to: 1
 25201                           ;i2c_slv.c: 439: }
 25202                           
 25203                           ; BSR set to: 1
 25204                           ;i2c_slv.c: 438: break;
 25205                           
 25206                           ;i2c_slv.c: 437: default:
 25207                           
 25208                           ; BSR set to: 1
 25209                           ;i2c_slv.c: 433: }
 25210                           ;i2c_slv.c: 434: }
 25211                           ;i2c_slv.c: 435: break;
 25212                           
 25213                           ; BSR set to: 1
 25214  0039F8  D00B               	goto	l1442
 25215  0039FA                     l1440:
 25216                           
 25217                           ; BSR set to: 1
 25218  0039FA  0101               	movlb	1	; () banked
 25219  0039FC  51E5               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25220                           
 25221                           ; Switch size 1, requested type "space"
 25222                           ; Number of cases is 3, Range of values is 0 to 2
 25223                           ; switch strategies available:
 25224                           ; Name         Instructions Cycles
 25225                           ; simple_byte           10     6 (average)
 25226                           ;	Chosen strategy is simple_byte
 25227  0039FE  0A00               	xorlw	0	; case 0
 25228  003A00  B4D8               	btfsc	status,2,c
 25229  003A02  D7A0               	goto	l1441
 25230  003A04  0A01               	xorlw	1	; case 1
 25231  003A06  B4D8               	btfsc	status,2,c
 25232  003A08  D7AC               	goto	l1443
 25233  003A0A  0A03               	xorlw	3	; case 2
 25234  003A0C  B4D8               	btfsc	status,2,c
 25235  003A0E  D7D8               	goto	l1445
 25236  003A10                     l1442:
 25237                           
 25238                           ; BSR set to: 1
 25239                           ;i2c_slv.c: 441: return Ret;
 25240                           
 25241                           ; BSR set to: 1
 25242  003A10  51E4               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25243  003A12  0012               	return	
 25244  003A14                     __end_of_I2cSlv_QueryI2cData:
 25245                           	opt stack 0
 25246                           tosu	equ	0xFFF
 25247                           tosh	equ	0xFFE
 25248                           tosl	equ	0xFFD
 25249                           pclath	equ	0xFFA
 25250                           tblptru	equ	0xFF8
 25251                           tblptrh	equ	0xFF7
 25252                           tblptrl	equ	0xFF6
 25253                           tablat	equ	0xFF5
 25254                           prodh	equ	0xFF4
 25255                           prodl	equ	0xFF3
 25256                           intcon	equ	0xFF2
 25257                           intcon2	equ	0xFF1
 25258                           intcon3	equ	0xFF0
 25259                           indf0	equ	0xFEF
 25260                           postinc0	equ	0xFEE
 25261                           plusw0	equ	0xFEB
 25262                           fsr0h	equ	0xFEA
 25263                           fsr0l	equ	0xFE9
 25264                           wreg	equ	0xFE8
 25265                           indf1	equ	0xFE7
 25266                           postinc1	equ	0xFE6
 25267                           postdec1	equ	0xFE5
 25268                           fsr1h	equ	0xFE2
 25269                           fsr1l	equ	0xFE1
 25270                           indf2	equ	0xFDF
 25271                           postinc2	equ	0xFDE
 25272                           postdec2	equ	0xFDD
 25273                           plusw2	equ	0xFDB
 25274                           fsr2h	equ	0xFDA
 25275                           fsr2l	equ	0xFD9
 25276                           status	equ	0xFD8
 25277                           
 25278 ;; *************** function _OsTmr_Wait *****************
 25279 ;; Defined at:
 25280 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25281 ;; Parameters:    Size  Location     Type
 25282 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25283 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25284 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25285 ;; Auto vars:     Size  Location     Type
 25286 ;;  Ret             1   65[BANK0 ] enum E7749
 25287 ;; Return value:  Size  Location     Type
 25288 ;;                  1    wreg      enum E7749
 25289 ;; Registers used:
 25290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25291 ;; Tracked objects:
 25292 ;;		On entry : 0/0
 25293 ;;		On exit  : 0/0
 25294 ;;		Unchanged: 0/0
 25295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25299 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25300 ;;Total ram usage:        7 bytes
 25301 ;; Hardware stack levels used:    1
 25302 ;; Hardware stack levels required when called:   14
 25303 ;; This function calls:
 25304 ;;		_OsTmr_GetTimerStatus
 25305 ;;		_OsTmr_StartTimer
 25306 ;; This function is called by:
 25307 ;;		_I2cSlv_QueryI2cData
 25308 ;;		_Terminal
 25309 ;; This function uses a non-reentrant model
 25310 ;;
 25311                           
 25312                           	psect	text120
 25313  005126                     __ptext120:
 25314                           	opt stack 0
 25315  005126                     _OsTmr_Wait:
 25316                           	opt stack 11
 25317                           
 25318                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25319                           
 25320                           ; BSR set to: 1
 25321                           ;incstack = 0
 25322  005126  0E00               	movlw	0
 25323  005128  0100               	movlb	0	; () banked
 25324  00512A  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25325                           
 25326                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25327  00512C  D02D               	goto	l855
 25328  00512E                     
 25329                           ; BSR set to: 0
 25330                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25331                           
 25332                           ; BSR set to: 0
 25333  00512E  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25334  005132  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25335  005136  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25336  00513A  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25337  00513E  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25338  005142  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25339  005146  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 25340                           
 25341                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25342  00514A  0100               	movlb	0	; () banked
 25343  00514C  EE20 F00A          	lfsr	2,10
 25344  005150  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25345  005152  26D9               	addwf	fsr2l,f,c
 25346  005154  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25347  005156  22DA               	addwfc	fsr2h,f,c
 25348  005158  0E01               	movlw	1
 25349  00515A  6EDF               	movwf	indf2,c
 25350                           
 25351                           ;os_timers.c: 165: break;
 25352  00515C  D022               	goto	l857
 25353  00515E                     
 25354                           ; BSR set to: 0
 25355                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 25356                           
 25357                           ; BSR set to: 0
 25358  00515E  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 25359  005162  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 25360  005166  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 25361  00516A  06E8               	decf	wreg,f,c
 25362  00516C  A4D8               	btfss	status,2,c
 25363  00516E  D019               	goto	l857
 25364                           
 25365                           ;os_timers.c: 170: {
 25366                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 25367  005170  0100               	movlb	0	; () banked
 25368  005172  EE20 F00A          	lfsr	2,10
 25369  005176  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25370  005178  26D9               	addwf	fsr2l,f,c
 25371  00517A  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25372  00517C  22DA               	addwfc	fsr2h,f,c
 25373  00517E  0E00               	movlw	0
 25374  005180  6EDF               	movwf	indf2,c
 25375                           
 25376                           ; BSR set to: 0
 25377                           ;os_timers.c: 174: Ret = DelayExpired;
 25378  005182  0E01               	movlw	1
 25379  005184  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25380                           
 25381                           ; BSR set to: 0
 25382                           ;os_timers.c: 180: }
 25383                           
 25384                           ; BSR set to: 0
 25385                           ;os_timers.c: 179: break;
 25386                           
 25387                           ;os_timers.c: 178: default:
 25388                           
 25389                           ; BSR set to: 0
 25390                           ;os_timers.c: 175: }
 25391                           ;os_timers.c: 176: break;
 25392  005186  D00D               	goto	l857
 25393  005188                     l855:
 25394                           
 25395                           ; BSR set to: 0
 25396                           
 25397                           ; BSR set to: 0
 25398  005188  EE20 F00A          	lfsr	2,10
 25399  00518C  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25400  00518E  26D9               	addwf	fsr2l,f,c
 25401  005190  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25402  005192  22DA               	addwfc	fsr2h,f,c
 25403  005194  50DF               	movf	indf2,w,c
 25404                           
 25405                           ; Switch size 1, requested type "space"
 25406                           ; Number of cases is 2, Range of values is 0 to 1
 25407                           ; switch strategies available:
 25408                           ; Name         Instructions Cycles
 25409                           ; simple_byte            7     4 (average)
 25410                           ;	Chosen strategy is simple_byte
 25411  005196  0A00               	xorlw	0	; case 0
 25412  005198  B4D8               	btfsc	status,2,c
 25413  00519A  D7C9               	goto	l856
 25414  00519C  0A01               	xorlw	1	; case 1
 25415  00519E  B4D8               	btfsc	status,2,c
 25416  0051A0  D7DE               	goto	l858
 25417  0051A2                     l857:
 25418                           
 25419                           ;os_timers.c: 182: return Ret;
 25420                           
 25421                           ; BSR set to: 0
 25422  0051A2  0100               	movlb	0	; () banked
 25423  0051A4  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 25424  0051A6  0012               	return	
 25425  0051A8                     __end_of_OsTmr_Wait:
 25426                           	opt stack 0
 25427                           tosu	equ	0xFFF
 25428                           tosh	equ	0xFFE
 25429                           tosl	equ	0xFFD
 25430                           pclath	equ	0xFFA
 25431                           tblptru	equ	0xFF8
 25432                           tblptrh	equ	0xFF7
 25433                           tblptrl	equ	0xFF6
 25434                           tablat	equ	0xFF5
 25435                           prodh	equ	0xFF4
 25436                           prodl	equ	0xFF3
 25437                           intcon	equ	0xFF2
 25438                           intcon2	equ	0xFF1
 25439                           intcon3	equ	0xFF0
 25440                           indf0	equ	0xFEF
 25441                           postinc0	equ	0xFEE
 25442                           plusw0	equ	0xFEB
 25443                           fsr0h	equ	0xFEA
 25444                           fsr0l	equ	0xFE9
 25445                           wreg	equ	0xFE8
 25446                           indf1	equ	0xFE7
 25447                           postinc1	equ	0xFE6
 25448                           postdec1	equ	0xFE5
 25449                           fsr1h	equ	0xFE2
 25450                           fsr1l	equ	0xFE1
 25451                           indf2	equ	0xFDF
 25452                           postinc2	equ	0xFDE
 25453                           postdec2	equ	0xFDD
 25454                           plusw2	equ	0xFDB
 25455                           fsr2h	equ	0xFDA
 25456                           fsr2l	equ	0xFD9
 25457                           status	equ	0xFD8
 25458                           
 25459 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 25460 ;; Defined at:
 25461 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25462 ;; Parameters:    Size  Location     Type
 25463 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 25464 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25465 ;;		 -> Terminal@TermRxBuffer(50), 
 25466 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25467 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25468 ;; Auto vars:     Size  Location     Type
 25469 ;;  RxSts           1   36[BANK0 ] unsigned char 
 25470 ;; Return value:  Size  Location     Type
 25471 ;;                  1    wreg      unsigned char 
 25472 ;; Registers used:
 25473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25474 ;; Tracked objects:
 25475 ;;		On entry : 0/0
 25476 ;;		On exit  : 0/0
 25477 ;;		Unchanged: 0/0
 25478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25482 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25483 ;;Total ram usage:        5 bytes
 25484 ;; Hardware stack levels used:    1
 25485 ;; Hardware stack levels required when called:   12
 25486 ;; This function calls:
 25487 ;;		_GenerateEvt
 25488 ;; This function is called by:
 25489 ;;		_I2cSlv_QueryI2cData
 25490 ;;		_Terminal
 25491 ;; This function uses a non-reentrant model
 25492 ;;
 25493                           
 25494                           	psect	text121
 25495  0060D6                     __ptext121:
 25496                           	opt stack 0
 25497  0060D6                     _I2cSlv_ReceiveI2cMsg:
 25498                           	opt stack 13
 25499                           
 25500                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 25501                           
 25502                           ; BSR set to: 0
 25503                           ;incstack = 0
 25504  0060D6  0E00               	movlw	0
 25505  0060D8  0100               	movlb	0	; () banked
 25506  0060DA  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25507                           
 25508                           ; BSR set to: 0
 25509                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 25510  0060DC  0E02               	movlw	2
 25511  0060DE  19CF               	xorwf	_I2cComSts& (0+255),w,b
 25512  0060E0  B4D8               	btfsc	status,2,c
 25513  0060E2  D016               	goto	l1417
 25514                           
 25515                           ; BSR set to: 0
 25516                           ;i2c_slv.c: 294: {
 25517                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 25518  0060E4  C082  F39A         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 25519                           
 25520                           ; BSR set to: 0
 25521                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 25522  0060E8  0E01               	movlw	1
 25523  0060EA  0103               	movlb	3	; () banked
 25524  0060EC  6F9B               	movwf	(_I2cRxPacket+1)& (0+255),b
 25525                           
 25526                           ; BSR set to: 3
 25527                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 25528  0060EE  C083  F39E         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 25529                           
 25530                           ; BSR set to: 3
 25531                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 25532  0060F2  C080  F39C         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 25533  0060F6  C081  F39D         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 25534                           
 25535                           ; BSR set to: 3
 25536                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 25537  0060FA  0ED8               	movlw	low _I2cReadDataEvt
 25538  0060FC  0100               	movlb	0	; () banked
 25539  0060FE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25540  006100  0E00               	movlw	high _I2cReadDataEvt
 25541  006102  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25542  006104  EC83  F034         	call	_GenerateEvt	;wreg free
 25543                           
 25544                           ;i2c_slv.c: 304: RxSts = 1u;
 25545  006108  0E01               	movlw	1
 25546  00610A  0100               	movlb	0	; () banked
 25547  00610C  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25548                           
 25549                           ;i2c_slv.c: 305: }
 25550  00610E  0012               	return	
 25551  006110                     l1417:
 25552                           
 25553                           ; BSR set to: 0
 25554                           ;i2c_slv.c: 306: else
 25555                           ;i2c_slv.c: 307: {
 25556                           ;i2c_slv.c: 309: RxSts = 0u;
 25557                           
 25558                           ; BSR set to: 0
 25559  006110  0E00               	movlw	0
 25560  006112  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25561                           
 25562                           ; BSR set to: 0
 25563  006114  0012               	return	
 25564  006116                     __end_of_I2cSlv_ReceiveI2cMsg:
 25565                           	opt stack 0
 25566                           tosu	equ	0xFFF
 25567                           tosh	equ	0xFFE
 25568                           tosl	equ	0xFFD
 25569                           pclath	equ	0xFFA
 25570                           tblptru	equ	0xFF8
 25571                           tblptrh	equ	0xFF7
 25572                           tblptrl	equ	0xFF6
 25573                           tablat	equ	0xFF5
 25574                           prodh	equ	0xFF4
 25575                           prodl	equ	0xFF3
 25576                           intcon	equ	0xFF2
 25577                           intcon2	equ	0xFF1
 25578                           intcon3	equ	0xFF0
 25579                           indf0	equ	0xFEF
 25580                           postinc0	equ	0xFEE
 25581                           plusw0	equ	0xFEB
 25582                           fsr0h	equ	0xFEA
 25583                           fsr0l	equ	0xFE9
 25584                           wreg	equ	0xFE8
 25585                           indf1	equ	0xFE7
 25586                           postinc1	equ	0xFE6
 25587                           postdec1	equ	0xFE5
 25588                           fsr1h	equ	0xFE2
 25589                           fsr1l	equ	0xFE1
 25590                           indf2	equ	0xFDF
 25591                           postinc2	equ	0xFDE
 25592                           postdec2	equ	0xFDD
 25593                           plusw2	equ	0xFDB
 25594                           fsr2h	equ	0xFDA
 25595                           fsr2l	equ	0xFD9
 25596                           status	equ	0xFD8
 25597                           
 25598 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 25599 ;; Defined at:
 25600 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25601 ;; Parameters:    Size  Location     Type
 25602 ;;		None
 25603 ;; Auto vars:     Size  Location     Type
 25604 ;;  Result          1   33[BANK0 ] enum E8935
 25605 ;; Return value:  Size  Location     Type
 25606 ;;                  1    wreg      enum E8935
 25607 ;; Registers used:
 25608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25609 ;; Tracked objects:
 25610 ;;		On entry : 0/0
 25611 ;;		On exit  : 0/0
 25612 ;;		Unchanged: 0/0
 25613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25618 ;;Total ram usage:        1 bytes
 25619 ;; Hardware stack levels used:    1
 25620 ;; Hardware stack levels required when called:   12
 25621 ;; This function calls:
 25622 ;;		_ReceiveEvt
 25623 ;; This function is called by:
 25624 ;;		_I2cSlv_QueryI2cData
 25625 ;;		_Terminal
 25626 ;; This function uses a non-reentrant model
 25627 ;;
 25628                           
 25629                           	psect	text122
 25630  00675A                     __ptext122:
 25631                           	opt stack 0
 25632  00675A                     _I2cSlv_I2cReadMsgSts:
 25633                           	opt stack 13
 25634                           
 25635                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 25636                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 25637                           
 25638                           ; BSR set to: 0
 25639                           ;incstack = 0
 25640  00675A  0E9F               	movlw	low (_I2cRxPacket+5)
 25641  00675C  0100               	movlb	0	; () banked
 25642  00675E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25643  006760  0E03               	movlw	high (_I2cRxPacket+5)
 25644  006762  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25645  006764  EC92  F032         	call	_ReceiveEvt	;wreg free
 25646  006768  0900               	iorlw	0
 25647  00676A  B4D8               	btfsc	status,2,c
 25648  00676C  D002               	goto	l1422
 25649                           
 25650                           ;i2c_slv.c: 331: {
 25651                           ;i2c_slv.c: 332: Result = MessageReceived;
 25652  00676E  0E01               	movlw	1
 25653  006770  D001               	goto	L52
 25654  006772                     l1422:
 25655                           
 25656                           ;i2c_slv.c: 334: else
 25657                           ;i2c_slv.c: 335: {
 25658                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 25659                           
 25660                           ; BSR set to: 0
 25661  006772  0E00               	movlw	0
 25662  006774                     L52:
 25663  006774  0100               	movlb	0	; () banked
 25664  006776  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;i2c_slv.c: 337: }
 25668                           ;i2c_slv.c: 339: return Result;
 25669  006778  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 25670  00677A  0012               	return	
 25671  00677C                     __end_of_I2cSlv_I2cReadMsgSts:
 25672                           	opt stack 0
 25673                           tosu	equ	0xFFF
 25674                           tosh	equ	0xFFE
 25675                           tosl	equ	0xFFD
 25676                           pclath	equ	0xFFA
 25677                           tblptru	equ	0xFF8
 25678                           tblptrh	equ	0xFF7
 25679                           tblptrl	equ	0xFF6
 25680                           tablat	equ	0xFF5
 25681                           prodh	equ	0xFF4
 25682                           prodl	equ	0xFF3
 25683                           intcon	equ	0xFF2
 25684                           intcon2	equ	0xFF1
 25685                           intcon3	equ	0xFF0
 25686                           indf0	equ	0xFEF
 25687                           postinc0	equ	0xFEE
 25688                           plusw0	equ	0xFEB
 25689                           fsr0h	equ	0xFEA
 25690                           fsr0l	equ	0xFE9
 25691                           wreg	equ	0xFE8
 25692                           indf1	equ	0xFE7
 25693                           postinc1	equ	0xFE6
 25694                           postdec1	equ	0xFE5
 25695                           fsr1h	equ	0xFE2
 25696                           fsr1l	equ	0xFE1
 25697                           indf2	equ	0xFDF
 25698                           postinc2	equ	0xFDE
 25699                           postdec2	equ	0xFDD
 25700                           plusw2	equ	0xFDB
 25701                           fsr2h	equ	0xFDA
 25702                           fsr2l	equ	0xFD9
 25703                           status	equ	0xFD8
 25704                           
 25705 ;; *************** function _Led_SetLedBlinkTime *****************
 25706 ;; Defined at:
 25707 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 25708 ;; Parameters:    Size  Location     Type
 25709 ;;  Led             1    wreg     unsigned char 
 25710 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 25711 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 25712 ;; Auto vars:     Size  Location     Type
 25713 ;;  Led             1   33[BANK0 ] unsigned char 
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  1    wreg      void 
 25716 ;; Registers used:
 25717 ;;		wreg, status,2, status,0
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25726 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25727 ;;Total ram usage:        5 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; Hardware stack levels required when called:   11
 25730 ;; This function calls:
 25731 ;;		Nothing
 25732 ;; This function is called by:
 25733 ;;		_MyApp_Task
 25734 ;; This function uses a non-reentrant model
 25735 ;;
 25736                           
 25737                           	psect	text123
 25738  005A9C                     __ptext123:
 25739                           	opt stack 0
 25740  005A9C                     _Led_SetLedBlinkTime:
 25741                           	opt stack 16
 25742                           
 25743                           ; BSR set to: 0
 25744                           ;incstack = 0
 25745                           ;Led_SetLedBlinkTime@Led stored from wreg
 25746  005A9C  0100               	movlb	0	; () banked
 25747  005A9E  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 25748                           
 25749                           ;led.c: 374: switch (Led)
 25750  005AA0  D01B               	goto	l2150
 25751  005AA2                     l2151:
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 25755  005AA2  C07D  F374         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 25756  005AA6  C07E  F375         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 25757                           
 25758                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 25759  005AAA  C07F  F376         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 25760  005AAE  C080  F377         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 25761                           
 25762                           ;led.c: 379: break;
 25763  005AB2  0012               	return	
 25764  005AB4                     l2153:
 25765                           
 25766                           ; BSR set to: 0
 25767                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 25768  005AB4  C07D  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25769  005AB8  C07E  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25770                           
 25771                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 25772  005ABC  C07F  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25773  005AC0  C080  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25774                           
 25775                           ;led.c: 384: break;
 25776  005AC4  0012               	return	
 25777  005AC6                     l2154:
 25778                           
 25779                           ; BSR set to: 0
 25780                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 25781  005AC6  C07D  F36B         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25782  005ACA  C07E  F36C         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25783                           
 25784                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 25785  005ACE  C07F  F36D         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25786  005AD2  C080  F36E         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25787                           
 25788                           ; BSR set to: 0
 25789                           ;led.c: 393: }
 25790                           
 25791                           ; BSR set to: 0
 25792                           ;led.c: 392: break;
 25793                           
 25794                           ;led.c: 391: default:
 25795                           
 25796                           ;led.c: 389: break;
 25797  005AD6  0012               	return	
 25798  005AD8                     l2150:
 25799                           
 25800                           ; BSR set to: 0
 25801  005AD8  0100               	movlb	0	; () banked
 25802  005ADA  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 25803                           
 25804                           ; Switch size 1, requested type "space"
 25805                           ; Number of cases is 3, Range of values is 1 to 3
 25806                           ; switch strategies available:
 25807                           ; Name         Instructions Cycles
 25808                           ; simple_byte           10     6 (average)
 25809                           ;	Chosen strategy is simple_byte
 25810  005ADC  0A01               	xorlw	1	; case 1
 25811  005ADE  B4D8               	btfsc	status,2,c
 25812  005AE0  D7E0               	goto	l2151
 25813  005AE2  0A03               	xorlw	3	; case 2
 25814  005AE4  B4D8               	btfsc	status,2,c
 25815  005AE6  D7E6               	goto	l2153
 25816  005AE8  0A01               	xorlw	1	; case 3
 25817  005AEA  A4D8               	btfss	status,2,c
 25818  005AEC  0012               	return	
 25819  005AEE  D7EB               	goto	l2154
 25820  005AF0                     __end_of_Led_SetLedBlinkTime:
 25821                           	opt stack 0
 25822                           tosu	equ	0xFFF
 25823                           tosh	equ	0xFFE
 25824                           tosl	equ	0xFFD
 25825                           pclath	equ	0xFFA
 25826                           tblptru	equ	0xFF8
 25827                           tblptrh	equ	0xFF7
 25828                           tblptrl	equ	0xFF6
 25829                           tablat	equ	0xFF5
 25830                           prodh	equ	0xFF4
 25831                           prodl	equ	0xFF3
 25832                           intcon	equ	0xFF2
 25833                           intcon2	equ	0xFF1
 25834                           intcon3	equ	0xFF0
 25835                           indf0	equ	0xFEF
 25836                           postinc0	equ	0xFEE
 25837                           plusw0	equ	0xFEB
 25838                           fsr0h	equ	0xFEA
 25839                           fsr0l	equ	0xFE9
 25840                           wreg	equ	0xFE8
 25841                           indf1	equ	0xFE7
 25842                           postinc1	equ	0xFE6
 25843                           postdec1	equ	0xFE5
 25844                           fsr1h	equ	0xFE2
 25845                           fsr1l	equ	0xFE1
 25846                           indf2	equ	0xFDF
 25847                           postinc2	equ	0xFDE
 25848                           postdec2	equ	0xFDD
 25849                           plusw2	equ	0xFDB
 25850                           fsr2h	equ	0xFDA
 25851                           fsr2l	equ	0xFD9
 25852                           status	equ	0xFD8
 25853                           
 25854 ;; *************** function _Eeprom_Reset *****************
 25855 ;; Defined at:
 25856 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25857 ;; Parameters:    Size  Location     Type
 25858 ;;		None
 25859 ;; Auto vars:     Size  Location     Type
 25860 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 25861 ;; Return value:  Size  Location     Type
 25862 ;;                  1    wreg      unsigned char 
 25863 ;; Registers used:
 25864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25865 ;; Tracked objects:
 25866 ;;		On entry : 0/0
 25867 ;;		On exit  : 0/0
 25868 ;;		Unchanged: 0/0
 25869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25874 ;;Total ram usage:        1 bytes
 25875 ;; Hardware stack levels used:    1
 25876 ;; Hardware stack levels required when called:   13
 25877 ;; This function calls:
 25878 ;;		_ClearBuffer
 25879 ;;		_I2cSlv_SendI2cMsg
 25880 ;; This function is called by:
 25881 ;;		_MyApp_Task
 25882 ;; This function uses a non-reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text124
 25886  005EF4                     __ptext124:
 25887                           	opt stack 0
 25888  005EF4                     _Eeprom_Reset:
 25889                           	opt stack 14
 25890                           
 25891                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 25892                           
 25893                           ; BSR set to: 0
 25894                           ;incstack = 0
 25895  005EF4  0E50               	movlw	80
 25896  005EF6  0100               	movlb	0	; () banked
 25897  005EF8  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 25898                           
 25899                           ; BSR set to: 0
 25900                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 25901                           ;eeprom_if.c: 136: EepromBuffer[0] = memoryAddress;
 25902  005EFA  C0C4  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 25903                           
 25904                           ; BSR set to: 0
 25905                           ;eeprom_if.c: 137: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 25906  005EFE  0EBB               	movlw	low _EepromBuffer
 25907  005F00  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 25908  005F02  0E04               	movlw	high _EepromBuffer
 25909  005F04  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 25910  005F06  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 25911  005F0A  0E0F               	movlw	15
 25912  005F0C  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 25913  005F0E  ECCA  F030         	call	_I2cSlv_SendI2cMsg	;wreg free
 25914                           
 25915                           ;eeprom_if.c: 139: memoryAddress += 16;
 25916  005F12  0E10               	movlw	16
 25917  005F14  0100               	movlb	0	; () banked
 25918  005F16  27C4               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 25919                           
 25920                           ; BSR set to: 0
 25921                           ;eeprom_if.c: 140: if (memoryAddress >= 224)
 25922  005F18  0EDF               	movlw	223
 25923  005F1A  65C4               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 25924  005F1C  D00D               	goto	l2045
 25925                           
 25926                           ; BSR set to: 0
 25927                           ;eeprom_if.c: 141: {
 25928                           ;eeprom_if.c: 142: ClearBuffer(EepromBuffer, 15);
 25929  005F1E  0EBB               	movlw	low _EepromBuffer
 25930  005F20  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 25931  005F22  0E04               	movlw	high _EepromBuffer
 25932  005F24  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 25933  005F26  0E00               	movlw	0
 25934  005F28  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 25935  005F2A  0E0F               	movlw	15
 25936  005F2C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 25937  005F2E  ECB4  F031         	call	_ClearBuffer	;wreg free
 25938                           
 25939                           ;eeprom_if.c: 143: memoryAddress = 0;
 25940  005F32  0E00               	movlw	0
 25941  005F34  0100               	movlb	0	; () banked
 25942  005F36  6FC4               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 25943  005F38                     l2045:
 25944                           
 25945                           ; BSR set to: 0
 25946                           ;eeprom_if.c: 144: }
 25947                           ;eeprom_if.c: 145: return memoryAddress;
 25948                           
 25949                           ; BSR set to: 0
 25950  005F38  51C4               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 25951  005F3A  0012               	return	
 25952  005F3C                     __end_of_Eeprom_Reset:
 25953                           	opt stack 0
 25954                           tosu	equ	0xFFF
 25955                           tosh	equ	0xFFE
 25956                           tosl	equ	0xFFD
 25957                           pclath	equ	0xFFA
 25958                           tblptru	equ	0xFF8
 25959                           tblptrh	equ	0xFF7
 25960                           tblptrl	equ	0xFF6
 25961                           tablat	equ	0xFF5
 25962                           prodh	equ	0xFF4
 25963                           prodl	equ	0xFF3
 25964                           intcon	equ	0xFF2
 25965                           intcon2	equ	0xFF1
 25966                           intcon3	equ	0xFF0
 25967                           indf0	equ	0xFEF
 25968                           postinc0	equ	0xFEE
 25969                           plusw0	equ	0xFEB
 25970                           fsr0h	equ	0xFEA
 25971                           fsr0l	equ	0xFE9
 25972                           wreg	equ	0xFE8
 25973                           indf1	equ	0xFE7
 25974                           postinc1	equ	0xFE6
 25975                           postdec1	equ	0xFE5
 25976                           fsr1h	equ	0xFE2
 25977                           fsr1l	equ	0xFE1
 25978                           indf2	equ	0xFDF
 25979                           postinc2	equ	0xFDE
 25980                           postdec2	equ	0xFDD
 25981                           plusw2	equ	0xFDB
 25982                           fsr2h	equ	0xFDA
 25983                           fsr2l	equ	0xFD9
 25984                           status	equ	0xFD8
 25985                           
 25986 ;; *************** function _I2cSlv_SendI2cMsg *****************
 25987 ;; Defined at:
 25988 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25989 ;; Parameters:    Size  Location     Type
 25990 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 25991 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 25992 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 25993 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25994 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25995 ;; Auto vars:     Size  Location     Type
 25996 ;;  TxSts           1   36[BANK0 ] unsigned char 
 25997 ;; Return value:  Size  Location     Type
 25998 ;;                  1    wreg      unsigned char 
 25999 ;; Registers used:
 26000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26001 ;; Tracked objects:
 26002 ;;		On entry : 0/0
 26003 ;;		On exit  : 0/0
 26004 ;;		Unchanged: 0/0
 26005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;Total ram usage:        5 bytes
 26011 ;; Hardware stack levels used:    1
 26012 ;; Hardware stack levels required when called:   12
 26013 ;; This function calls:
 26014 ;;		_GenerateEvt
 26015 ;; This function is called by:
 26016 ;;		_I2cSlv_QueryI2cData
 26017 ;;		_Eeprom_Write
 26018 ;;		_Eeprom_Reset
 26019 ;;		_Terminal
 26020 ;;		_triggerRelay
 26021 ;; This function uses a non-reentrant model
 26022 ;;
 26023                           
 26024                           	psect	text125
 26025  006194                     __ptext125:
 26026                           	opt stack 0
 26027  006194                     _I2cSlv_SendI2cMsg:
 26028                           	opt stack 13
 26029                           
 26030                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26031                           
 26032                           ; BSR set to: 0
 26033                           ;incstack = 0
 26034  006194  0E00               	movlw	0
 26035  006196  0100               	movlb	0	; () banked
 26036  006198  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26037                           
 26038                           ; BSR set to: 0
 26039                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26040  00619A  05CF               	decf	_I2cComSts& (0+255),w,b
 26041  00619C  B4D8               	btfsc	status,2,c
 26042  00619E  D015               	goto	l1412
 26043                           
 26044                           ; BSR set to: 0
 26045                           ;i2c_slv.c: 257: {
 26046                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26047  0061A0  C082  F3A0         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26048                           
 26049                           ; BSR set to: 0
 26050                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26051  0061A4  0E00               	movlw	0
 26052  0061A6  0103               	movlb	3	; () banked
 26053  0061A8  6FA1               	movwf	(_I2cTxPacket+1)& (0+255),b
 26054                           
 26055                           ; BSR set to: 3
 26056                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26057  0061AA  C083  F3A4         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26058                           
 26059                           ; BSR set to: 3
 26060                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26061  0061AE  C080  F3A2         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26062  0061B2  C081  F3A3         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26063                           
 26064                           ; BSR set to: 3
 26065                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26066  0061B6  0ED9               	movlw	low _I2cWriteDataEvt
 26067  0061B8  0100               	movlb	0	; () banked
 26068  0061BA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26069  0061BC  0E00               	movlw	high _I2cWriteDataEvt
 26070  0061BE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26071  0061C0  EC83  F034         	call	_GenerateEvt	;wreg free
 26072                           
 26073                           ;i2c_slv.c: 267: TxSts = 1u;
 26074  0061C4  0E01               	movlw	1
 26075  0061C6  0100               	movlb	0	; () banked
 26076  0061C8  D001               	goto	L53
 26077  0061CA                     l1412:
 26078                           
 26079                           ; BSR set to: 0
 26080                           ;i2c_slv.c: 269: else
 26081                           ;i2c_slv.c: 270: {
 26082                           ;i2c_slv.c: 272: TxSts = 0u;
 26083                           
 26084                           ; BSR set to: 0
 26085  0061CA  0E00               	movlw	0
 26086  0061CC                     L53:
 26087  0061CC  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26088                           
 26089                           ; BSR set to: 0
 26090                           ;i2c_slv.c: 273: }
 26091                           ;i2c_slv.c: 275: return TxSts;
 26092  0061CE  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26093  0061D0  0012               	return	
 26094  0061D2                     __end_of_I2cSlv_SendI2cMsg:
 26095                           	opt stack 0
 26096                           tosu	equ	0xFFF
 26097                           tosh	equ	0xFFE
 26098                           tosl	equ	0xFFD
 26099                           pclath	equ	0xFFA
 26100                           tblptru	equ	0xFF8
 26101                           tblptrh	equ	0xFF7
 26102                           tblptrl	equ	0xFF6
 26103                           tablat	equ	0xFF5
 26104                           prodh	equ	0xFF4
 26105                           prodl	equ	0xFF3
 26106                           intcon	equ	0xFF2
 26107                           intcon2	equ	0xFF1
 26108                           intcon3	equ	0xFF0
 26109                           indf0	equ	0xFEF
 26110                           postinc0	equ	0xFEE
 26111                           plusw0	equ	0xFEB
 26112                           fsr0h	equ	0xFEA
 26113                           fsr0l	equ	0xFE9
 26114                           wreg	equ	0xFE8
 26115                           indf1	equ	0xFE7
 26116                           postinc1	equ	0xFE6
 26117                           postdec1	equ	0xFE5
 26118                           fsr1h	equ	0xFE2
 26119                           fsr1l	equ	0xFE1
 26120                           indf2	equ	0xFDF
 26121                           postinc2	equ	0xFDE
 26122                           postdec2	equ	0xFDD
 26123                           plusw2	equ	0xFDB
 26124                           fsr2h	equ	0xFDA
 26125                           fsr2l	equ	0xFD9
 26126                           status	equ	0xFD8
 26127                           
 26128 ;; *************** function _UartSetConfig *****************
 26129 ;; Defined at:
 26130 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26131 ;; Parameters:    Size  Location     Type
 26132 ;;		None
 26133 ;; Auto vars:     Size  Location     Type
 26134 ;;		None
 26135 ;; Return value:  Size  Location     Type
 26136 ;;                  1    wreg      void 
 26137 ;; Registers used:
 26138 ;;		wreg, status,2
 26139 ;; Tracked objects:
 26140 ;;		On entry : 0/0
 26141 ;;		On exit  : 0/0
 26142 ;;		Unchanged: 0/0
 26143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26148 ;;Total ram usage:        0 bytes
 26149 ;; Hardware stack levels used:    1
 26150 ;; Hardware stack levels required when called:   11
 26151 ;; This function calls:
 26152 ;;		Nothing
 26153 ;; This function is called by:
 26154 ;;		_Mdm_MainTask
 26155 ;; This function uses a non-reentrant model
 26156 ;;
 26157                           
 26158                           	psect	text126
 26159  005840                     __ptext126:
 26160                           	opt stack 0
 26161  005840                     _UartSetConfig:
 26162                           	opt stack 16
 26163                           
 26164                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26165                           
 26166                           ; BSR set to: 0
 26167                           ;incstack = 0
 26168  005840  0E01               	movlw	1
 26169  005842  0103               	movlb	3	; () banked
 26170  005844  6F1A               	movwf	_UartConfig& (0+255),b
 26171                           
 26172                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26173  005846  0E00               	movlw	0
 26174  005848  6F1B               	movwf	(_UartConfig+1)& (0+255),b
 26175                           
 26176                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26177  00584A  0E00               	movlw	0
 26178  00584C  6F1C               	movwf	(_UartConfig+2)& (0+255),b
 26179                           
 26180                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26181  00584E  0E00               	movlw	0
 26182  005850  6F1D               	movwf	(_UartConfig+3)& (0+255),b
 26183                           
 26184                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26185  005852  0E00               	movlw	0
 26186  005854  6F1E               	movwf	(_UartConfig+4)& (0+255),b
 26187                           
 26188                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26189  005856  0E00               	movlw	0
 26190  005858  6F1F               	movwf	(_UartConfig+5)& (0+255),b
 26191                           
 26192                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26193  00585A  0E01               	movlw	1
 26194  00585C  6F20               	movwf	(_UartConfig+6)& (0+255),b
 26195                           
 26196                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26197  00585E  0E01               	movlw	1
 26198  005860  6F21               	movwf	(_UartConfig+7)& (0+255),b
 26199                           
 26200                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26201  005862  0E00               	movlw	0
 26202  005864  6F22               	movwf	(_UartConfig+8)& (0+255),b
 26203                           
 26204                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26205  005866  0E00               	movlw	0
 26206  005868  6F23               	movwf	(_UartConfig+9)& (0+255),b
 26207                           
 26208                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26209  00586A  0E00               	movlw	0
 26210  00586C  6F24               	movwf	(_UartConfig+10)& (0+255),b
 26211                           
 26212                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26213  00586E  0E00               	movlw	0
 26214  005870  6F25               	movwf	(_UartConfig+11)& (0+255),b
 26215                           
 26216                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26217  005872  0E01               	movlw	1
 26218  005874  6F26               	movwf	(_UartConfig+12)& (0+255),b
 26219                           
 26220                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26221  005876  0E00               	movlw	0
 26222  005878  6F27               	movwf	(_UartConfig+13)& (0+255),b
 26223  00587A  0E6C               	movlw	108
 26224  00587C  6F28               	movwf	(_UartConfig+14)& (0+255),b
 26225  00587E  0EDC               	movlw	220
 26226  005880  6F29               	movwf	(_UartConfig+15)& (0+255),b
 26227  005882  0E02               	movlw	2
 26228  005884  6F2A               	movwf	(_UartConfig+16)& (0+255),b
 26229                           
 26230                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26231  005886  0E80               	movlw	128
 26232  005888  6F2B               	movwf	(_UartConfig+17)& (0+255),b
 26233  00588A  0E25               	movlw	37
 26234  00588C  6F2C               	movwf	(_UartConfig+18)& (0+255),b
 26235  00588E  0E00               	movlw	0
 26236  005890  6F2D               	movwf	(_UartConfig+19)& (0+255),b
 26237  005892  0E00               	movlw	0
 26238  005894  6F2E               	movwf	(_UartConfig+20)& (0+255),b
 26239                           
 26240                           ; BSR set to: 3
 26241  005896  0012               	return		;funcret
 26242  005898                     __end_of_UartSetConfig:
 26243                           	opt stack 0
 26244                           tosu	equ	0xFFF
 26245                           tosh	equ	0xFFE
 26246                           tosl	equ	0xFFD
 26247                           pclath	equ	0xFFA
 26248                           tblptru	equ	0xFF8
 26249                           tblptrh	equ	0xFF7
 26250                           tblptrl	equ	0xFF6
 26251                           tablat	equ	0xFF5
 26252                           prodh	equ	0xFF4
 26253                           prodl	equ	0xFF3
 26254                           intcon	equ	0xFF2
 26255                           intcon2	equ	0xFF1
 26256                           intcon3	equ	0xFF0
 26257                           indf0	equ	0xFEF
 26258                           postinc0	equ	0xFEE
 26259                           plusw0	equ	0xFEB
 26260                           fsr0h	equ	0xFEA
 26261                           fsr0l	equ	0xFE9
 26262                           wreg	equ	0xFE8
 26263                           indf1	equ	0xFE7
 26264                           postinc1	equ	0xFE6
 26265                           postdec1	equ	0xFE5
 26266                           fsr1h	equ	0xFE2
 26267                           fsr1l	equ	0xFE1
 26268                           indf2	equ	0xFDF
 26269                           postinc2	equ	0xFDE
 26270                           postdec2	equ	0xFDD
 26271                           plusw2	equ	0xFDB
 26272                           fsr2h	equ	0xFDA
 26273                           fsr2l	equ	0xFD9
 26274                           status	equ	0xFD8
 26275                           
 26276 ;; *************** function _TurnOnModem *****************
 26277 ;; Defined at:
 26278 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26279 ;; Parameters:    Size  Location     Type
 26280 ;;		None
 26281 ;; Auto vars:     Size  Location     Type
 26282 ;;		None
 26283 ;; Return value:  Size  Location     Type
 26284 ;;                  1    wreg      void 
 26285 ;; Registers used:
 26286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26287 ;; Tracked objects:
 26288 ;;		On entry : 0/0
 26289 ;;		On exit  : 0/0
 26290 ;;		Unchanged: 0/0
 26291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26296 ;;Total ram usage:        0 bytes
 26297 ;; Hardware stack levels used:    1
 26298 ;; Hardware stack levels required when called:   12
 26299 ;; This function calls:
 26300 ;;		_GenerateEvt
 26301 ;; This function is called by:
 26302 ;;		_Mdm_MainTask
 26303 ;; This function uses a non-reentrant model
 26304 ;;
 26305                           
 26306                           	psect	text127
 26307  005E60                     __ptext127:
 26308                           	opt stack 0
 26309  005E60                     _TurnOnModem:
 26310                           	opt stack 15
 26311                           
 26312                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26313                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26314                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26315                           
 26316                           ; BSR set to: 3
 26317                           ;incstack = 0
 26318  005E60  D01B               	goto	l1009
 26319  005E62                     
 26320                           ;mdm_gsm_gprs.c: 385: Counter++;
 26321  005E62  0102               	movlb	2	; () banked
 26322  005E64  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26323  005E66  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26324                           
 26325                           ; BSR set to: 2
 26326                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26327  005E68  0EB8               	movlw	184
 26328  005E6A  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 26329  005E6C  0E0B               	movlw	11
 26330  005E6E  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26331  005E70  A0D8               	btfss	status,0,c
 26332  005E72  0012               	return	
 26333                           
 26334                           ; BSR set to: 2
 26335                           ;mdm_gsm_gprs.c: 388: {
 26336                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26337  005E74  0E01               	movlw	1
 26338  005E76  0101               	movlb	1	; () banked
 26339  005E78  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26340                           
 26341                           ; BSR set to: 1
 26342                           ;mdm_gsm_gprs.c: 391: }
 26343                           ;mdm_gsm_gprs.c: 392: break;
 26344  005E7A  0012               	return	
 26345  005E7C                     
 26346                           ; BSR set to: 1
 26347                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 26348                           
 26349                           ; BSR set to: 1
 26350  005E7C  0EE2               	movlw	low _MdmOnOffPulseRequest
 26351  005E7E  0100               	movlb	0	; () banked
 26352  005E80  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26353  005E82  0E00               	movlw	high _MdmOnOffPulseRequest
 26354  005E84  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26355  005E86  EC83  F034         	call	_GenerateEvt	;wreg free
 26356                           
 26357                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 26358  005E8A  0E01               	movlw	1
 26359  005E8C  0100               	movlb	0	; () banked
 26360  005E8E  6FD2               	movwf	_MdmStatus& (0+255),b
 26361                           
 26362                           ; BSR set to: 0
 26363                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 26364  005E90  0E02               	movlw	2
 26365  005E92  0101               	movlb	1	; () banked
 26366  005E94  6FF4               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26367                           
 26368                           ; BSR set to: 1
 26369                           ;mdm_gsm_gprs.c: 408: }
 26370                           
 26371                           ; BSR set to: 1
 26372                           ;mdm_gsm_gprs.c: 407: break;
 26373                           
 26374                           ;mdm_gsm_gprs.c: 406: default:
 26375                           
 26376                           ; BSR set to: 1
 26377                           ;mdm_gsm_gprs.c: 404: break;
 26378                           
 26379                           ;mdm_gsm_gprs.c: 403: case Stop:
 26380                           
 26381                           ;mdm_gsm_gprs.c: 401: break;
 26382  005E96  0012               	return	
 26383  005E98                     l1009:
 26384                           
 26385                           ; BSR set to: 1
 26386  005E98  0101               	movlb	1	; () banked
 26387  005E9A  51F4               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 26388                           
 26389                           ; Switch size 1, requested type "space"
 26390                           ; Number of cases is 3, Range of values is 0 to 2
 26391                           ; switch strategies available:
 26392                           ; Name         Instructions Cycles
 26393                           ; simple_byte           10     6 (average)
 26394                           ;	Chosen strategy is simple_byte
 26395  005E9C  0A00               	xorlw	0	; case 0
 26396  005E9E  B4D8               	btfsc	status,2,c
 26397  005EA0  D7E0               	goto	l1010
 26398  005EA2  0A01               	xorlw	1	; case 1
 26399  005EA4  B4D8               	btfsc	status,2,c
 26400  005EA6  D7EA               	goto	l1013
 26401  005EA8  0A03               	xorlw	3	; case 2
 26402  005EAA  0012               	return	
 26403  005EAC                     __end_of_TurnOnModem:
 26404                           	opt stack 0
 26405                           tosu	equ	0xFFF
 26406                           tosh	equ	0xFFE
 26407                           tosl	equ	0xFFD
 26408                           pclath	equ	0xFFA
 26409                           tblptru	equ	0xFF8
 26410                           tblptrh	equ	0xFF7
 26411                           tblptrl	equ	0xFF6
 26412                           tablat	equ	0xFF5
 26413                           prodh	equ	0xFF4
 26414                           prodl	equ	0xFF3
 26415                           intcon	equ	0xFF2
 26416                           intcon2	equ	0xFF1
 26417                           intcon3	equ	0xFF0
 26418                           indf0	equ	0xFEF
 26419                           postinc0	equ	0xFEE
 26420                           plusw0	equ	0xFEB
 26421                           fsr0h	equ	0xFEA
 26422                           fsr0l	equ	0xFE9
 26423                           wreg	equ	0xFE8
 26424                           indf1	equ	0xFE7
 26425                           postinc1	equ	0xFE6
 26426                           postdec1	equ	0xFE5
 26427                           fsr1h	equ	0xFE2
 26428                           fsr1l	equ	0xFE1
 26429                           indf2	equ	0xFDF
 26430                           postinc2	equ	0xFDE
 26431                           postdec2	equ	0xFDD
 26432                           plusw2	equ	0xFDB
 26433                           fsr2h	equ	0xFDA
 26434                           fsr2l	equ	0xFD9
 26435                           status	equ	0xFD8
 26436                           
 26437 ;; *************** function _SendSmsSm *****************
 26438 ;; Defined at:
 26439 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26440 ;; Parameters:    Size  Location     Type
 26441 ;;		None
 26442 ;; Auto vars:     Size  Location     Type
 26443 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26444 ;; Return value:  Size  Location     Type
 26445 ;;                  1    wreg      void 
 26446 ;; Registers used:
 26447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26448 ;; Tracked objects:
 26449 ;;		On entry : 0/0
 26450 ;;		On exit  : 0/0
 26451 ;;		Unchanged: 0/0
 26452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26454 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26455 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26456 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26457 ;;Total ram usage:       52 bytes
 26458 ;; Hardware stack levels used:    1
 26459 ;; Hardware stack levels required when called:   14
 26460 ;; This function calls:
 26461 ;;		_OsTmr_GetTimerStatus
 26462 ;;		_OsTmr_StartTimer
 26463 ;;		_ReceiveEvt
 26464 ;;		_StringCopy
 26465 ;;		_Uart_WriteStringLen
 26466 ;; This function is called by:
 26467 ;;		_Mdm_MainTask
 26468 ;; This function uses a non-reentrant model
 26469 ;;
 26470                           
 26471                           	psect	text128
 26472  0019F2                     __ptext128:
 26473                           	opt stack 0
 26474  0019F2                     _SendSmsSm:
 26475                           	opt stack 13
 26476                           
 26477                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 26478                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 26479                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26480                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 26481                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 26482                           
 26483                           ;incstack = 0
 26484  0019F2  0E03               	movlw	3
 26485  0019F4  0100               	movlb	0	; () banked
 26486  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 26487  0019F8  A4D8               	btfss	status,2,c
 26488  0019FA  0012               	return	
 26489  0019FC  D0C1               	goto	l1091
 26490  0019FE                     
 26491                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 26492                           
 26493                           ; BSR set to: 0
 26494  0019FE  0EE1               	movlw	low _SendSmsEvent
 26495  001A00  0100               	movlb	0	; () banked
 26496  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26497  001A04  0E00               	movlw	high _SendSmsEvent
 26498  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26499  001A08  EC92  F032         	call	_ReceiveEvt	;wreg free
 26500  001A0C  0900               	iorlw	0
 26501  001A0E  B4D8               	btfsc	status,2,c
 26502  001A10  0012               	return	
 26503                           
 26504                           ;mdm_gsm_gprs.c: 671: {
 26505                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 26506  001A12  0E01               	movlw	1
 26507  001A14  0101               	movlb	1	; () banked
 26508  001A16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26509                           
 26510                           ; BSR set to: 1
 26511                           ;mdm_gsm_gprs.c: 674: }
 26512                           ;mdm_gsm_gprs.c: 675: break;
 26513  001A18  0012               	return	
 26514  001A1A                     
 26515                           ; BSR set to: 1
 26516                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 26517                           
 26518                           ; BSR set to: 1
 26519  001A1A  0ECE               	movlw	low STR_5
 26520  001A1C  0100               	movlb	0	; () banked
 26521  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26522  001A20  0EFF               	movlw	high STR_5
 26523  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26524  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 26525  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26526  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 26527  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26528  001A2C  0E00               	movlw	0
 26529  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26530  001A30  0E09               	movlw	9
 26531  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 26532  001A34  EC63  F02B         	call	_StringCopy	;wreg free
 26533                           
 26534                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 26535  001A38  0EA7               	movlw	low _PhoneNumber
 26536  001A3A  0100               	movlb	0	; () banked
 26537  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26538  001A3E  0E04               	movlw	high _PhoneNumber
 26539  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26540  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 26541  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26542  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 26543  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26544  001A4A  C0D3  F089         	movff	_PhoneNumbLen,StringCopy@Len
 26545  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26546  001A50  EC63  F02B         	call	_StringCopy	;wreg free
 26547                           
 26548                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 26549  001A54  0100               	movlb	0	; () banked
 26550  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26551  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26552  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26553  001A5C  0E09               	movlw	9
 26554  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26555  001A60  0E00               	movlw	0
 26556  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26557  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 26558  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26559  001A68  6ED9               	movwf	fsr2l,c
 26560  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 26561  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26562  001A6E  6EDA               	movwf	fsr2h,c
 26563  001A70  0E22               	movlw	34
 26564  001A72  6EDF               	movwf	indf2,c
 26565                           
 26566                           ; BSR set to: 0
 26567                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 26568  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26569  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26570  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26571  001A7A  0E0A               	movlw	10
 26572  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26573  001A7E  0E00               	movlw	0
 26574  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26575  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 26576  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26577  001A86  6ED9               	movwf	fsr2l,c
 26578  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 26579  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26580  001A8C  6EDA               	movwf	fsr2h,c
 26581  001A8E  0E0D               	movlw	13
 26582  001A90  6EDF               	movwf	indf2,c
 26583                           
 26584                           ; BSR set to: 0
 26585                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 26586  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 26587  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26588  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 26589  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26590  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26591  001A9C  0F0B               	addlw	11
 26592  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26593  001AA0  0E01               	movlw	1
 26594  001AA2  EC8B  F030         	call	_Uart_WriteStringLen
 26595                           
 26596                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 26597  001AA6  0EE8               	movlw	low SendSmsSm@SwTimer
 26598  001AA8  0100               	movlb	0	; () banked
 26599  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26600  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 26601  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26602  001AB0  0EC4               	movlw	196
 26603  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26604  001AB4  0E09               	movlw	9
 26605  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26606  001AB8  0E00               	movlw	0
 26607  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26608  001ABC  0E00               	movlw	0
 26609  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26610  001AC0  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 26611                           
 26612                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 26613  001AC4  0E05               	movlw	5
 26614  001AC6  0101               	movlb	1	; () banked
 26615  001AC8  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26616                           
 26617                           ; BSR set to: 1
 26618                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 26619  001ACA  0E02               	movlw	2
 26620  001ACC  6FEF               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 26621                           
 26622                           ;mdm_gsm_gprs.c: 691: break;
 26623  001ACE  0012               	return	
 26624  001AD0                     
 26625                           ; BSR set to: 1
 26626                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 26627                           
 26628                           ; BSR set to: 1
 26629  001AD0  0E0A               	movlw	10
 26630  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 26631                           
 26632                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 26633  001AD4  0E0D               	movlw	13
 26634  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 26635                           
 26636                           ; BSR set to: 1
 26637                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 26638  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 26639  001ADA  0100               	movlb	0	; () banked
 26640  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26641  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 26642  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26643  001AE2  0E02               	movlw	2
 26644  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26645  001AE6  0E01               	movlw	1
 26646  001AE8  EC8B  F030         	call	_Uart_WriteStringLen
 26647                           
 26648                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 26649  001AEC  0E03               	movlw	3
 26650  001AEE  0101               	movlb	1	; () banked
 26651  001AF0  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26652                           
 26653                           ;mdm_gsm_gprs.c: 701: break;
 26654  001AF2  0012               	return	
 26655  001AF4                     
 26656                           ; BSR set to: 1
 26657                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 26658                           
 26659                           ; BSR set to: 1
 26660  001AF4  0E3A               	movlw	low _NewStringReceived
 26661  001AF6  0100               	movlb	0	; () banked
 26662  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26663  001AFA  0E00               	movlw	high _NewStringReceived
 26664  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26665  001AFE  EC92  F032         	call	_ReceiveEvt	;wreg free
 26666  001B02  0900               	iorlw	0
 26667  001B04  B4D8               	btfsc	status,2,c
 26668  001B06  0012               	return	
 26669                           
 26670                           ;mdm_gsm_gprs.c: 706: {
 26671                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 26672  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 26673  001B0C  0A3E               	xorlw	62
 26674  001B0E  A4D8               	btfss	status,2,c
 26675  001B10  0012               	return	
 26676                           
 26677                           ;mdm_gsm_gprs.c: 709: {
 26678                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 26679  001B12  0E04               	movlw	4
 26680  001B14  0101               	movlb	1	; () banked
 26681  001B16  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26682                           
 26683                           ; BSR set to: 1
 26684                           ;mdm_gsm_gprs.c: 712: }
 26685                           ;mdm_gsm_gprs.c: 713: }
 26686                           ;mdm_gsm_gprs.c: 714: break;
 26687                           
 26688                           ; BSR set to: 1
 26689  001B18  0012               	return	
 26690  001B1A                     
 26691                           ; BSR set to: 1
 26692                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 26693                           
 26694                           ; BSR set to: 1
 26695  001B1A  0E72               	movlw	low _MessageText
 26696  001B1C  0100               	movlb	0	; () banked
 26697  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26698  001B20  0E05               	movlw	high _MessageText
 26699  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26700  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 26701  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26702  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 26703  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26704  001B2C  C0D4  F089         	movff	_SmsLen,StringCopy@Len
 26705  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26706  001B32  EC63  F02B         	call	_StringCopy	;wreg free
 26707                           
 26708                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 26709  001B36  0100               	movlb	0	; () banked
 26710  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 26711  001B3A  0D01               	mullw	1
 26712  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 26713  001B3E  24F3               	addwf	prodl,w,c
 26714  001B40  6ED9               	movwf	fsr2l,c
 26715  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 26716  001B44  20F4               	addwfc	prodh,w,c
 26717  001B46  6EDA               	movwf	fsr2h,c
 26718  001B48  0E1A               	movlw	26
 26719  001B4A  6EDF               	movwf	indf2,c
 26720                           
 26721                           ; BSR set to: 0
 26722                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 26723  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 26724  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26725  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 26726  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26727  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 26728  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26729  001B58  0E01               	movlw	1
 26730  001B5A  EC8B  F030         	call	_Uart_WriteStringLen
 26731                           
 26732                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 26733  001B5E  0E00               	movlw	0
 26734  001B60  0101               	movlb	1	; () banked
 26735  001B62  6FF0               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26736                           
 26737                           ;mdm_gsm_gprs.c: 725: break;
 26738  001B64  0012               	return	
 26739  001B66                     
 26740                           ; BSR set to: 1
 26741                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 26742                           
 26743                           ; BSR set to: 1
 26744  001B66  0EE8               	movlw	low SendSmsSm@SwTimer
 26745  001B68  0100               	movlb	0	; () banked
 26746  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26747  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 26748  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26749  001B70  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 26750  001B74  06E8               	decf	wreg,f,c
 26751  001B76  A4D8               	btfss	status,2,c
 26752  001B78  0012               	return	
 26753                           
 26754                           ;mdm_gsm_gprs.c: 730: {
 26755                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 26756  001B7A  C1EF  F1F0         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 26757                           
 26758                           ;mdm_gsm_gprs.c: 738: }
 26759                           
 26760                           ;mdm_gsm_gprs.c: 737: break;
 26761                           
 26762                           ;mdm_gsm_gprs.c: 736: default:
 26763                           
 26764                           ;mdm_gsm_gprs.c: 733: }
 26765                           ;mdm_gsm_gprs.c: 734: break;
 26766  001B7E  0012               	return	
 26767  001B80                     l1091:
 26768  001B80  0101               	movlb	1	; () banked
 26769  001B82  51F0               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 26770                           
 26771                           ; Switch size 1, requested type "space"
 26772                           ; Number of cases is 6, Range of values is 0 to 5
 26773                           ; switch strategies available:
 26774                           ; Name         Instructions Cycles
 26775                           ; simple_byte           19    10 (average)
 26776                           ;	Chosen strategy is simple_byte
 26777  001B84  0A00               	xorlw	0	; case 0
 26778  001B86  B4D8               	btfsc	status,2,c
 26779  001B88  D73A               	goto	l1092
 26780  001B8A  0A01               	xorlw	1	; case 1
 26781  001B8C  B4D8               	btfsc	status,2,c
 26782  001B8E  D745               	goto	l1095
 26783  001B90  0A03               	xorlw	3	; case 2
 26784  001B92  B4D8               	btfsc	status,2,c
 26785  001B94  D79D               	goto	l1096
 26786  001B96  0A01               	xorlw	1	; case 3
 26787  001B98  B4D8               	btfsc	status,2,c
 26788  001B9A  D7AC               	goto	l1097
 26789  001B9C  0A07               	xorlw	7	; case 4
 26790  001B9E  B4D8               	btfsc	status,2,c
 26791  001BA0  D7BC               	goto	l1100
 26792  001BA2  0A01               	xorlw	1	; case 5
 26793  001BA4  A4D8               	btfss	status,2,c
 26794                           
 26795                           ; BSR set to: 1
 26796  001BA6  0012               	return	
 26797  001BA8  D7DE               	goto	l1101
 26798  001BAA                     __end_of_SendSmsSm:
 26799                           	opt stack 0
 26800                           tosu	equ	0xFFF
 26801                           tosh	equ	0xFFE
 26802                           tosl	equ	0xFFD
 26803                           pclath	equ	0xFFA
 26804                           tblptru	equ	0xFF8
 26805                           tblptrh	equ	0xFF7
 26806                           tblptrl	equ	0xFF6
 26807                           tablat	equ	0xFF5
 26808                           prodh	equ	0xFF4
 26809                           prodl	equ	0xFF3
 26810                           intcon	equ	0xFF2
 26811                           intcon2	equ	0xFF1
 26812                           intcon3	equ	0xFF0
 26813                           indf0	equ	0xFEF
 26814                           postinc0	equ	0xFEE
 26815                           plusw0	equ	0xFEB
 26816                           fsr0h	equ	0xFEA
 26817                           fsr0l	equ	0xFE9
 26818                           wreg	equ	0xFE8
 26819                           indf1	equ	0xFE7
 26820                           postinc1	equ	0xFE6
 26821                           postdec1	equ	0xFE5
 26822                           fsr1h	equ	0xFE2
 26823                           fsr1l	equ	0xFE1
 26824                           indf2	equ	0xFDF
 26825                           postinc2	equ	0xFDE
 26826                           postdec2	equ	0xFDD
 26827                           plusw2	equ	0xFDB
 26828                           fsr2h	equ	0xFDA
 26829                           fsr2l	equ	0xFD9
 26830                           status	equ	0xFD8
 26831                           
 26832 ;; *************** function _Uart_WriteStringLen *****************
 26833 ;; Defined at:
 26834 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 26835 ;; Parameters:    Size  Location     Type
 26836 ;;  Module          1    wreg     unsigned char 
 26837 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 26838 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 26839 ;;  Len             1   34[BANK0 ] unsigned char 
 26840 ;; Auto vars:     Size  Location     Type
 26841 ;;  Module          1   36[BANK0 ] unsigned char 
 26842 ;;  Index           1   35[BANK0 ] unsigned char 
 26843 ;; Return value:  Size  Location     Type
 26844 ;;                  1    wreg      void 
 26845 ;; Registers used:
 26846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26847 ;; Tracked objects:
 26848 ;;		On entry : 0/0
 26849 ;;		On exit  : 0/0
 26850 ;;		Unchanged: 0/0
 26851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26852 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26855 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26856 ;;Total ram usage:        5 bytes
 26857 ;; Hardware stack levels used:    1
 26858 ;; Hardware stack levels required when called:   12
 26859 ;; This function calls:
 26860 ;;		_UartTxBufferStatus
 26861 ;;		_UartWriteByte
 26862 ;; This function is called by:
 26863 ;;		_SendSmsSm
 26864 ;;		_GsmGprsTerminal
 26865 ;; This function uses a non-reentrant model
 26866 ;;
 26867                           
 26868                           	psect	text129
 26869  006116                     __ptext129:
 26870                           	opt stack 0
 26871  006116                     _Uart_WriteStringLen:
 26872                           	opt stack 14
 26873                           
 26874                           ;incstack = 0
 26875                           ;Uart_WriteStringLen@Module stored from wreg
 26876  006116  0100               	movlb	0	; () banked
 26877  006118  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 26878                           
 26879                           ;uart_drv.c: 544: UINT8 Index;
 26880                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 26881  00611A  0E00               	movlw	0
 26882  00611C  0100               	movlb	0	; () banked
 26883  00611E  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 26884  006120  D015               	goto	l715
 26885  006122                     
 26886                           ; BSR set to: 0
 26887                           ;uart_drv.c: 547: {
 26888                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 26889                           
 26890                           ; BSR set to: 0
 26891  006122  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 26892  006126  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 26893  00612A  50DF               	movf	indf2,w,c
 26894  00612C  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 26895  00612E  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 26896  006130  ECDE  F033         	call	_UartWriteByte
 26897                           
 26898                           ;uart_drv.c: 551: StringToWrite++;
 26899  006134  0100               	movlb	0	; () banked
 26900  006136  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 26901  006138  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 26902  00613A                     
 26903                           ; BSR set to: 0
 26904                           
 26905                           ; BSR set to: 0
 26906  00613A  0100               	movlb	0	; () banked
 26907  00613C  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 26908  00613E  ECBC  F02E         	call	_UartTxBufferStatus
 26909  006142  06E8               	decf	wreg,f,c
 26910  006144  B4D8               	btfsc	status,2,c
 26911  006146  D7F9               	goto	l718
 26912  006148  0100               	movlb	0	; () banked
 26913  00614A  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 26914  00614C                     l715:
 26915                           
 26916                           ; BSR set to: 0
 26917                           
 26918                           ; BSR set to: 0
 26919  00614C  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 26920  00614E  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 26921  006150  B0D8               	btfsc	status,0,c
 26922  006152  0012               	return	
 26923  006154  D7E6               	goto	l716
 26924  006156                     __end_of_Uart_WriteStringLen:
 26925                           	opt stack 0
 26926                           tosu	equ	0xFFF
 26927                           tosh	equ	0xFFE
 26928                           tosl	equ	0xFFD
 26929                           pclath	equ	0xFFA
 26930                           tblptru	equ	0xFF8
 26931                           tblptrh	equ	0xFF7
 26932                           tblptrl	equ	0xFF6
 26933                           tablat	equ	0xFF5
 26934                           prodh	equ	0xFF4
 26935                           prodl	equ	0xFF3
 26936                           intcon	equ	0xFF2
 26937                           intcon2	equ	0xFF1
 26938                           intcon3	equ	0xFF0
 26939                           indf0	equ	0xFEF
 26940                           postinc0	equ	0xFEE
 26941                           plusw0	equ	0xFEB
 26942                           fsr0h	equ	0xFEA
 26943                           fsr0l	equ	0xFE9
 26944                           wreg	equ	0xFE8
 26945                           indf1	equ	0xFE7
 26946                           postinc1	equ	0xFE6
 26947                           postdec1	equ	0xFE5
 26948                           fsr1h	equ	0xFE2
 26949                           fsr1l	equ	0xFE1
 26950                           indf2	equ	0xFDF
 26951                           postinc2	equ	0xFDE
 26952                           postdec2	equ	0xFDD
 26953                           plusw2	equ	0xFDB
 26954                           fsr2h	equ	0xFDA
 26955                           fsr2l	equ	0xFD9
 26956                           status	equ	0xFD8
 26957                           
 26958 ;; *************** function _ModemEvtParser *****************
 26959 ;; Defined at:
 26960 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26961 ;; Parameters:    Size  Location     Type
 26962 ;;		None
 26963 ;; Auto vars:     Size  Location     Type
 26964 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 26965 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 26966 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 26967 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 26968 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 26969 ;;  Match           1   71[BANK0 ] unsigned char 
 26970 ;; Return value:  Size  Location     Type
 26971 ;;                  1    wreg      void 
 26972 ;; Registers used:
 26973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26974 ;; Tracked objects:
 26975 ;;		On entry : 0/0
 26976 ;;		On exit  : 0/0
 26977 ;;		Unchanged: 0/0
 26978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26980 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26982 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26983 ;;Total ram usage:       26 bytes
 26984 ;; Hardware stack levels used:    1
 26985 ;; Hardware stack levels required when called:   12
 26986 ;; This function calls:
 26987 ;;		_GenerateEvt
 26988 ;;		_ReceiveEvt
 26989 ;;		_StringCompare
 26990 ;;		_StringCopy
 26991 ;;		_Uart_ClearRxBuffer
 26992 ;; This function is called by:
 26993 ;;		_Mdm_MainTask
 26994 ;; This function uses a non-reentrant model
 26995 ;;
 26996                           
 26997                           	psect	text130
 26998  001D32                     __ptext130:
 26999                           	opt stack 0
 27000  001D32                     _ModemEvtParser:
 27001                           	opt stack 15
 27002                           
 27003                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27004                           
 27005                           ; BSR set to: 0
 27006                           ;incstack = 0
 27007  001D32  C3CC  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27008  001D36  C3CD  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27009  001D3A  C3CE  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27010  001D3E  C3CF  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27011                           
 27012                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27013  001D42  EE23  F0C7         	lfsr	2,ModemEvtParser@F9112
 27014  001D46  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27015  001D4A  0E04               	movlw	4
 27016  001D4C                     u14701:
 27017  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 27018  001D50  06E8               	decf	wreg,f,c
 27019  001D52  E2FC               	bc	u14701
 27020                           
 27021                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27022  001D54  EE23  F0C2         	lfsr	2,ModemEvtParser@F9114
 27023  001D58  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27024  001D5C  0E04               	movlw	4
 27025  001D5E                     u14711:
 27026  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 27027  001D62  06E8               	decf	wreg,f,c
 27028  001D64  E2FC               	bc	u14711
 27029                           
 27030                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27031  001D66  EE24  F0E0         	lfsr	2,ModemEvtParser@F9116
 27032  001D6A  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27033  001D6E  0E09               	movlw	9
 27034  001D70                     u14721:
 27035  001D70  CFDB FFE3          	movff	plusw2,plusw1
 27036  001D74  06E8               	decf	wreg,f,c
 27037  001D76  E2FC               	bc	u14721
 27038                           
 27039                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27040  001D78  0E00               	movlw	0
 27041  001D7A  0100               	movlb	0	; () banked
 27042  001D7C  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27043                           
 27044                           ; BSR set to: 0
 27045                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27046  001D7E  0E00               	movlw	0
 27047  001D80  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27048                           
 27049                           ; BSR set to: 0
 27050                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27051  001D82  0E39               	movlw	low _NewMdmEvtParserRequest
 27052  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27053  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 27054  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27055  001D8A  EC92  F032         	call	_ReceiveEvt	;wreg free
 27056  001D8E  0900               	iorlw	0
 27057  001D90  B4D8               	btfsc	status,2,c
 27058  001D92  0012               	return	
 27059                           
 27060                           ;mdm_gsm_gprs.c: 510: {
 27061                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27062  001D94  0E00               	movlw	0
 27063  001D96  0100               	movlb	0	; () banked
 27064  001D98  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27065  001D9A                     l15346:
 27066                           
 27067                           ; BSR set to: 0
 27068  001D9A  0E03               	movlw	3
 27069  001D9C  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27070  001D9E  D074               	goto	l1052
 27071  001DA0  D083               	goto	u14790
 27072  001DA2                     
 27073                           ; BSR set to: 0
 27074                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27075                           
 27076                           ; BSR set to: 0
 27077  001DA2  0EA3               	movlw	low ModemEvtParser@RingString
 27078  001DA4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27079  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 27080  001DA8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27081  001DAA  0E58               	movlw	low _RxBuffer
 27082  001DAC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27083  001DAE  0E0C               	movlw	high _RxBuffer
 27084  001DB0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27085  001DB2  0E00               	movlw	0
 27086  001DB4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27087  001DB6  0E04               	movlw	4
 27088  001DB8  6F81               	movwf	StringCompare@Len& (0+255),b
 27089  001DBA  ECF4  F02D         	call	_StringCompare	;wreg free
 27090  001DBE  0900               	iorlw	0
 27091  001DC0  B4D8               	btfsc	status,2,c
 27092  001DC2  D06F               	goto	l1055
 27093                           
 27094                           ;mdm_gsm_gprs.c: 518: {
 27095                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27096  001DC4  0EE0               	movlw	low _RingEvent
 27097  001DC6  0100               	movlb	0	; () banked
 27098  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27099  001DCA  0E00               	movlw	high _RingEvent
 27100  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27101  001DCE  EC83  F034         	call	_GenerateEvt	;wreg free
 27102  001DD2  D040               	goto	l15368
 27103  001DD4                     
 27104                           ; BSR set to: 0
 27105                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27106                           
 27107                           ; BSR set to: 0
 27108  001DD4  0E99               	movlw	low ModemEvtParser@ClipString
 27109  001DD6  6F7D               	movwf	StringCompare@String1& (0+255),b
 27110  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 27111  001DDA  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27112  001DDC  0E58               	movlw	low _RxBuffer
 27113  001DDE  6F7F               	movwf	StringCompare@String2& (0+255),b
 27114  001DE0  0E0C               	movlw	high _RxBuffer
 27115  001DE2  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27116  001DE4  0E00               	movlw	0
 27117  001DE6  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27118  001DE8  0E05               	movlw	5
 27119  001DEA  6F81               	movwf	StringCompare@Len& (0+255),b
 27120  001DEC  ECF4  F02D         	call	_StringCompare	;wreg free
 27121  001DF0  0900               	iorlw	0
 27122  001DF2  B4D8               	btfsc	status,2,c
 27123  001DF4  D056               	goto	l1055
 27124                           
 27125                           ;mdm_gsm_gprs.c: 529: {
 27126                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27127  001DF6  0E60               	movlw	low (_RxBuffer+8)
 27128  001DF8  0100               	movlb	0	; () banked
 27129  001DFA  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27130  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 27131  001DFE  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27132  001E00  0E3C               	movlw	low _callerNumber
 27133  001E02  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27134  001E04  0E03               	movlw	high _callerNumber
 27135  001E06  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27136  001E08  0E00               	movlw	0
 27137  001E0A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27138  001E0C  0E0D               	movlw	13
 27139  001E0E  6F89               	movwf	StringCopy@Len& (0+255),b
 27140  001E10  EC63  F02B         	call	_StringCopy	;wreg free
 27141                           
 27142                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27143  001E14  0EDF               	movlw	low _ClipEvent
 27144  001E16  0100               	movlb	0	; () banked
 27145  001E18  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27146  001E1A  0E00               	movlw	high _ClipEvent
 27147  001E1C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27148  001E1E  EC83  F034         	call	_GenerateEvt	;wreg free
 27149  001E22  D018               	goto	l15368
 27150  001E24                     
 27151                           ; BSR set to: 0
 27152                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27153                           
 27154                           ; BSR set to: 0
 27155  001E24  0E9E               	movlw	low ModemEvtParser@SmsString
 27156  001E26  6F7D               	movwf	StringCompare@String1& (0+255),b
 27157  001E28  0E00               	movlw	high ModemEvtParser@SmsString
 27158  001E2A  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27159  001E2C  0E58               	movlw	low _RxBuffer
 27160  001E2E  6F7F               	movwf	StringCompare@String2& (0+255),b
 27161  001E30  0E0C               	movlw	high _RxBuffer
 27162  001E32  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27163  001E34  0E00               	movlw	0
 27164  001E36  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27165  001E38  0E05               	movlw	5
 27166  001E3A  6F81               	movwf	StringCompare@Len& (0+255),b
 27167  001E3C  ECF4  F02D         	call	_StringCompare	;wreg free
 27168  001E40  0900               	iorlw	0
 27169  001E42  B4D8               	btfsc	status,2,c
 27170  001E44  D02E               	goto	l1055
 27171                           
 27172                           ;mdm_gsm_gprs.c: 541: {
 27173                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27174  001E46  0EDE               	movlw	low _SmsEvent
 27175  001E48  0100               	movlb	0	; () banked
 27176  001E4A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27177  001E4C  0E00               	movlw	high _SmsEvent
 27178  001E4E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27179  001E50  EC83  F034         	call	_GenerateEvt	;wreg free
 27180  001E54                     l15368:
 27181                           
 27182                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27183  001E54  0E01               	movlw	1
 27184  001E56  0100               	movlb	0	; () banked
 27185  001E58  D015               	goto	L54
 27186  001E5A                     
 27187                           ; BSR set to: 0
 27188                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27189                           
 27190                           ; BSR set to: 0
 27191  001E5A  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27192  001E5C  6F7D               	movwf	StringCompare@String1& (0+255),b
 27193  001E5E  0E00               	movlw	high ModemEvtParser@CallReadyString
 27194  001E60  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27195  001E62  0E58               	movlw	low _RxBuffer
 27196  001E64  6F7F               	movwf	StringCompare@String2& (0+255),b
 27197  001E66  0E0C               	movlw	high _RxBuffer
 27198  001E68  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27199  001E6A  0E00               	movlw	0
 27200  001E6C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27201  001E6E  0E0A               	movlw	10
 27202  001E70  6F81               	movwf	StringCompare@Len& (0+255),b
 27203  001E72  ECF4  F02D         	call	_StringCompare	;wreg free
 27204  001E76  0900               	iorlw	0
 27205  001E78  B4D8               	btfsc	status,2,c
 27206  001E7A  D013               	goto	l1055
 27207                           
 27208                           ;mdm_gsm_gprs.c: 552: {
 27209                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27210  001E7C  0E02               	movlw	2
 27211  001E7E  0100               	movlb	0	; () banked
 27212  001E80  6FD2               	movwf	_MdmStatus& (0+255),b
 27213                           
 27214                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27215  001E82  0E01               	movlw	1
 27216  001E84                     L54:
 27217  001E84  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27218                           
 27219                           ; BSR set to: 0
 27220                           ;mdm_gsm_gprs.c: 562: }
 27221                           
 27222                           ; BSR set to: 0
 27223                           ;mdm_gsm_gprs.c: 561: break;
 27224                           
 27225                           ;mdm_gsm_gprs.c: 560: default:
 27226                           
 27227                           ; BSR set to: 0
 27228                           ;mdm_gsm_gprs.c: 557: }
 27229                           ;mdm_gsm_gprs.c: 558: break;
 27230  001E86  D00D               	goto	l1055
 27231  001E88                     l1052:
 27232                           
 27233                           ; BSR set to: 0
 27234                           
 27235                           ; BSR set to: 0
 27236  001E88  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27237                           
 27238                           ; Switch size 1, requested type "space"
 27239                           ; Number of cases is 4, Range of values is 0 to 3
 27240                           ; switch strategies available:
 27241                           ; Name         Instructions Cycles
 27242                           ; simple_byte           13     7 (average)
 27243                           ;	Chosen strategy is simple_byte
 27244  001E8A  0A00               	xorlw	0	; case 0
 27245  001E8C  B4D8               	btfsc	status,2,c
 27246  001E8E  D789               	goto	l1053
 27247  001E90  0A01               	xorlw	1	; case 1
 27248  001E92  B4D8               	btfsc	status,2,c
 27249  001E94  D7C7               	goto	l1058
 27250  001E96  0A03               	xorlw	3	; case 2
 27251  001E98  B4D8               	btfsc	status,2,c
 27252  001E9A  D7DF               	goto	l1060
 27253  001E9C  0A01               	xorlw	1	; case 3
 27254  001E9E  B4D8               	btfsc	status,2,c
 27255  001EA0  D799               	goto	l1056
 27256  001EA2                     l1055:
 27257                           
 27258                           ; BSR set to: 0
 27259  001EA2  0100               	movlb	0	; () banked
 27260  001EA4  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27261  001EA6  D779               	goto	l15346
 27262  001EA8                     u14790:
 27263                           
 27264                           ; BSR set to: 0
 27265                           ;mdm_gsm_gprs.c: 563: }
 27266                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27267                           
 27268                           ; BSR set to: 0
 27269  001EA8  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27270  001EAA  A4D8               	btfss	status,2,c
 27271  001EAC  0012               	return	
 27272                           
 27273                           ; BSR set to: 0
 27274                           ;mdm_gsm_gprs.c: 567: {
 27275                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27276  001EAE  ECCF  F031         	call	_Uart_ClearRxBuffer	;wreg free
 27277  001EB2  0012               	return	
 27278  001EB4                     __end_of_ModemEvtParser:
 27279                           	opt stack 0
 27280                           tosu	equ	0xFFF
 27281                           tosh	equ	0xFFE
 27282                           tosl	equ	0xFFD
 27283                           pclath	equ	0xFFA
 27284                           tblptru	equ	0xFF8
 27285                           tblptrh	equ	0xFF7
 27286                           tblptrl	equ	0xFF6
 27287                           tablat	equ	0xFF5
 27288                           prodh	equ	0xFF4
 27289                           prodl	equ	0xFF3
 27290                           intcon	equ	0xFF2
 27291                           intcon2	equ	0xFF1
 27292                           intcon3	equ	0xFF0
 27293                           indf0	equ	0xFEF
 27294                           postinc0	equ	0xFEE
 27295                           plusw0	equ	0xFEB
 27296                           fsr0h	equ	0xFEA
 27297                           fsr0l	equ	0xFE9
 27298                           wreg	equ	0xFE8
 27299                           indf1	equ	0xFE7
 27300                           postinc1	equ	0xFE6
 27301                           postdec1	equ	0xFE5
 27302                           plusw1	equ	0xFE3
 27303                           fsr1h	equ	0xFE2
 27304                           fsr1l	equ	0xFE1
 27305                           indf2	equ	0xFDF
 27306                           postinc2	equ	0xFDE
 27307                           postdec2	equ	0xFDD
 27308                           plusw2	equ	0xFDB
 27309                           fsr2h	equ	0xFDA
 27310                           fsr2l	equ	0xFD9
 27311                           status	equ	0xFD8
 27312                           
 27313 ;; *************** function _Uart_ClearRxBuffer *****************
 27314 ;; Defined at:
 27315 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27316 ;; Parameters:    Size  Location     Type
 27317 ;;		None
 27318 ;; Auto vars:     Size  Location     Type
 27319 ;;  Index           2   29[BANK0 ] unsigned short 
 27320 ;; Return value:  Size  Location     Type
 27321 ;;                  1    wreg      void 
 27322 ;; Registers used:
 27323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27324 ;; Tracked objects:
 27325 ;;		On entry : 0/0
 27326 ;;		On exit  : 0/0
 27327 ;;		Unchanged: 0/0
 27328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27332 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27333 ;;Total ram usage:        2 bytes
 27334 ;; Hardware stack levels used:    1
 27335 ;; Hardware stack levels required when called:   11
 27336 ;; This function calls:
 27337 ;;		Nothing
 27338 ;; This function is called by:
 27339 ;;		_ModemEvtParser
 27340 ;; This function uses a non-reentrant model
 27341 ;;
 27342                           
 27343                           	psect	text131
 27344  00639E                     __ptext131:
 27345                           	opt stack 0
 27346  00639E                     _Uart_ClearRxBuffer:
 27347                           	opt stack 15
 27348                           
 27349                           ;uart_drv.c: 567: UINT16 Index = 0;
 27350                           
 27351                           ;incstack = 0
 27352  00639E  0E00               	movlw	0
 27353  0063A0  0100               	movlb	0	; () banked
 27354  0063A2  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27355  0063A4  0E00               	movlw	0
 27356  0063A6  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27357                           
 27358                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 27359  0063A8  0E00               	movlw	0
 27360  0063AA  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27361  0063AC  0E00               	movlw	0
 27362  0063AE  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27363  0063B0                     l14486:
 27364                           
 27365                           ; BSR set to: 0
 27366  0063B0  0E90               	movlw	144
 27367  0063B2  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27368  0063B4  0E01               	movlw	1
 27369  0063B6  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27370  0063B8  B0D8               	btfsc	status,0,c
 27371  0063BA  0012               	return	
 27372                           
 27373                           ; BSR set to: 0
 27374                           ;uart_drv.c: 571: {
 27375                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 27376                           
 27377                           ; BSR set to: 0
 27378                           
 27379                           ; BSR set to: 0
 27380  0063BC  0E58               	movlw	low _RxBuffer
 27381  0063BE  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27382  0063C0  6ED9               	movwf	fsr2l,c
 27383  0063C2  0E0C               	movlw	high _RxBuffer
 27384  0063C4  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27385  0063C6  6EDA               	movwf	fsr2h,c
 27386  0063C8  0E00               	movlw	0
 27387  0063CA  6EDF               	movwf	indf2,c
 27388                           
 27389                           ; BSR set to: 0
 27390  0063CC  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 27391  0063CE  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 27392  0063D0  D7EF               	goto	l14486
 27393  0063D2                     __end_of_Uart_ClearRxBuffer:
 27394                           	opt stack 0
 27395                           tosu	equ	0xFFF
 27396                           tosh	equ	0xFFE
 27397                           tosl	equ	0xFFD
 27398                           pclath	equ	0xFFA
 27399                           tblptru	equ	0xFF8
 27400                           tblptrh	equ	0xFF7
 27401                           tblptrl	equ	0xFF6
 27402                           tablat	equ	0xFF5
 27403                           prodh	equ	0xFF4
 27404                           prodl	equ	0xFF3
 27405                           intcon	equ	0xFF2
 27406                           intcon2	equ	0xFF1
 27407                           intcon3	equ	0xFF0
 27408                           indf0	equ	0xFEF
 27409                           postinc0	equ	0xFEE
 27410                           plusw0	equ	0xFEB
 27411                           fsr0h	equ	0xFEA
 27412                           fsr0l	equ	0xFE9
 27413                           wreg	equ	0xFE8
 27414                           indf1	equ	0xFE7
 27415                           postinc1	equ	0xFE6
 27416                           postdec1	equ	0xFE5
 27417                           plusw1	equ	0xFE3
 27418                           fsr1h	equ	0xFE2
 27419                           fsr1l	equ	0xFE1
 27420                           indf2	equ	0xFDF
 27421                           postinc2	equ	0xFDE
 27422                           postdec2	equ	0xFDD
 27423                           plusw2	equ	0xFDB
 27424                           fsr2h	equ	0xFDA
 27425                           fsr2l	equ	0xFD9
 27426                           status	equ	0xFD8
 27427                           
 27428 ;; *************** function _StringCompare *****************
 27429 ;; Defined at:
 27430 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27431 ;; Parameters:    Size  Location     Type
 27432 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 27433 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 27434 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 27435 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 27436 ;;		 -> isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNum
      +berCmd(4), 
 27437 ;;		 -> parseCommand@addNumberCmd(4), RxBuffer(400), 
 27438 ;;  Len             2   33[BANK0 ] unsigned short 
 27439 ;; Auto vars:     Size  Location     Type
 27440 ;;  Index           2   38[BANK0 ] unsigned short 
 27441 ;;  Result          1   37[BANK0 ] unsigned char 
 27442 ;; Return value:  Size  Location     Type
 27443 ;;                  1    wreg      unsigned char 
 27444 ;; Registers used:
 27445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27446 ;; Tracked objects:
 27447 ;;		On entry : 0/0
 27448 ;;		On exit  : 0/0
 27449 ;;		Unchanged: 0/0
 27450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27451 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27455 ;;Total ram usage:       11 bytes
 27456 ;; Hardware stack levels used:    1
 27457 ;; Hardware stack levels required when called:   11
 27458 ;; This function calls:
 27459 ;;		Nothing
 27460 ;; This function is called by:
 27461 ;;		_ModemEvtParser
 27462 ;;		_parseCommand
 27463 ;;		_isNumberInMemory
 27464 ;;		_isMasterNumber
 27465 ;; This function uses a non-reentrant model
 27466 ;;
 27467                           
 27468                           	psect	text132
 27469  005BE8                     __ptext132:
 27470                           	opt stack 0
 27471  005BE8                     _StringCompare:
 27472                           	opt stack 14
 27473                           
 27474                           ;sf.c: 77: UINT16 Index = 0;
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;incstack = 0
 27478  005BE8  0E00               	movlw	0
 27479  005BEA  0100               	movlb	0	; () banked
 27480  005BEC  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27481  005BEE  0E00               	movlw	0
 27482  005BF0  6F86               	movwf	StringCompare@Index& (0+255),b
 27483                           
 27484                           ;sf.c: 78: UINT8 Result = 1;
 27485  005BF2  0E01               	movlw	1
 27486  005BF4  6F85               	movwf	StringCompare@Result& (0+255),b
 27487                           
 27488                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 27489  005BF6  0E00               	movlw	0
 27490  005BF8  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27491  005BFA  0E00               	movlw	0
 27492  005BFC  6F86               	movwf	StringCompare@Index& (0+255),b
 27493  005BFE  D015               	goto	l2248
 27494  005C00                     
 27495                           ; BSR set to: 0
 27496                           ;sf.c: 82: {
 27497                           ;sf.c: 83: if (String1[Index] != String2[Index])
 27498                           
 27499                           ; BSR set to: 0
 27500  005C00  5186               	movf	StringCompare@Index& (0+255),w,b
 27501  005C02  257F               	addwf	StringCompare@String2& (0+255),w,b
 27502  005C04  6ED9               	movwf	fsr2l,c
 27503  005C06  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27504  005C08  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 27505  005C0A  6EDA               	movwf	fsr2h,c
 27506  005C0C  5186               	movf	StringCompare@Index& (0+255),w,b
 27507  005C0E  257D               	addwf	StringCompare@String1& (0+255),w,b
 27508  005C10  6EE1               	movwf	fsr1l,c
 27509  005C12  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27510  005C14  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 27511  005C16  6EE2               	movwf	fsr1h,c
 27512  005C18  50DE               	movf	postinc2,w,c
 27513  005C1A  18E6               	xorwf	postinc1,w,c
 27514  005C1C  B4D8               	btfsc	status,2,c
 27515  005C1E  D003               	goto	l2250
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;sf.c: 84: {
 27519                           ;sf.c: 85: Result = 0;
 27520  005C20  0E00               	movlw	0
 27521  005C22  6F85               	movwf	StringCompare@Result& (0+255),b
 27522                           
 27523                           ;sf.c: 86: break;
 27524  005C24  D008               	goto	u12610
 27525  005C26                     l2250:
 27526                           
 27527                           ; BSR set to: 0
 27528                           
 27529                           ; BSR set to: 0
 27530  005C26  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 27531  005C28  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 27532  005C2A                     l2248:
 27533                           
 27534                           ; BSR set to: 0
 27535                           
 27536                           ; BSR set to: 0
 27537  005C2A  5181               	movf	StringCompare@Len& (0+255),w,b
 27538  005C2C  5D86               	subwf	StringCompare@Index& (0+255),w,b
 27539  005C2E  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 27540  005C30  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 27541  005C32  A0D8               	btfss	status,0,c
 27542  005C34  D7E5               	goto	l2249
 27543  005C36                     u12610:
 27544                           
 27545                           ; BSR set to: 0
 27546                           ;sf.c: 87: }
 27547                           ;sf.c: 88: }
 27548                           ;sf.c: 91: return Result;
 27549                           
 27550                           ; BSR set to: 0
 27551  005C36  5185               	movf	StringCompare@Result& (0+255),w,b
 27552  005C38  0012               	return	
 27553  005C3A                     __end_of_StringCompare:
 27554                           	opt stack 0
 27555                           tosu	equ	0xFFF
 27556                           tosh	equ	0xFFE
 27557                           tosl	equ	0xFFD
 27558                           pclath	equ	0xFFA
 27559                           tblptru	equ	0xFF8
 27560                           tblptrh	equ	0xFF7
 27561                           tblptrl	equ	0xFF6
 27562                           tablat	equ	0xFF5
 27563                           prodh	equ	0xFF4
 27564                           prodl	equ	0xFF3
 27565                           intcon	equ	0xFF2
 27566                           intcon2	equ	0xFF1
 27567                           intcon3	equ	0xFF0
 27568                           indf0	equ	0xFEF
 27569                           postinc0	equ	0xFEE
 27570                           plusw0	equ	0xFEB
 27571                           fsr0h	equ	0xFEA
 27572                           fsr0l	equ	0xFE9
 27573                           wreg	equ	0xFE8
 27574                           indf1	equ	0xFE7
 27575                           postinc1	equ	0xFE6
 27576                           postdec1	equ	0xFE5
 27577                           plusw1	equ	0xFE3
 27578                           fsr1h	equ	0xFE2
 27579                           fsr1l	equ	0xFE1
 27580                           indf2	equ	0xFDF
 27581                           postinc2	equ	0xFDE
 27582                           postdec2	equ	0xFDD
 27583                           plusw2	equ	0xFDB
 27584                           fsr2h	equ	0xFDA
 27585                           fsr2l	equ	0xFD9
 27586                           status	equ	0xFD8
 27587                           
 27588 ;; *************** function _GetSmsSm *****************
 27589 ;; Defined at:
 27590 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27591 ;; Parameters:    Size  Location     Type
 27592 ;;		None
 27593 ;; Auto vars:     Size  Location     Type
 27594 ;;		None
 27595 ;; Return value:  Size  Location     Type
 27596 ;;                  1    wreg      void 
 27597 ;; Registers used:
 27598 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27599 ;; Tracked objects:
 27600 ;;		On entry : 0/0
 27601 ;;		On exit  : 0/0
 27602 ;;		Unchanged: 0/0
 27603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27608 ;;Total ram usage:        0 bytes
 27609 ;; Hardware stack levels used:    1
 27610 ;; Hardware stack levels required when called:   13
 27611 ;; This function calls:
 27612 ;;		_ClearBuffer
 27613 ;;		_GenerateEvt
 27614 ;;		_ReceiveEvt
 27615 ;;		_StringCopy
 27616 ;;		_Uart_WriteConstString
 27617 ;; This function is called by:
 27618 ;;		_Mdm_MainTask
 27619 ;; This function uses a non-reentrant model
 27620 ;;
 27621                           
 27622                           	psect	text133
 27623  002A9A                     __ptext133:
 27624                           	opt stack 0
 27625  002A9A                     _GetSmsSm:
 27626                           	opt stack 14
 27627                           
 27628                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 27629                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 27630                           
 27631                           ; BSR set to: 0
 27632                           ;incstack = 0
 27633  002A9A  0E03               	movlw	3
 27634  002A9C  0100               	movlb	0	; () banked
 27635  002A9E  19D2               	xorwf	_MdmStatus& (0+255),w,b
 27636  002AA0  A4D8               	btfss	status,2,c
 27637  002AA2  0012               	return	
 27638  002AA4  D084               	goto	l1070
 27639  002AA6                     
 27640                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 27641                           
 27642                           ; BSR set to: 0
 27643  002AA6  0EDD               	movlw	low _GetSmsText
 27644  002AA8  0100               	movlb	0	; () banked
 27645  002AAA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27646  002AAC  0E00               	movlw	high _GetSmsText
 27647  002AAE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27648  002AB0  EC92  F032         	call	_ReceiveEvt	;wreg free
 27649  002AB4  0900               	iorlw	0
 27650  002AB6  B4D8               	btfsc	status,2,c
 27651  002AB8  0012               	return	
 27652                           
 27653                           ;mdm_gsm_gprs.c: 596: {
 27654                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 27655  002ABA  0E01               	movlw	1
 27656  002ABC  0101               	movlb	1	; () banked
 27657  002ABE  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27658                           
 27659                           ; BSR set to: 1
 27660                           ;mdm_gsm_gprs.c: 599: }
 27661                           ;mdm_gsm_gprs.c: 600: break;
 27662  002AC0  0012               	return	
 27663  002AC2                     
 27664                           ; BSR set to: 1
 27665                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 27666                           
 27667                           ; BSR set to: 1
 27668  002AC2  0EC2               	movlw	low STR_4
 27669  002AC4  0100               	movlb	0	; () banked
 27670  002AC6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27671  002AC8  0EFF               	movlw	high STR_4
 27672  002ACA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27673  002ACC  0E01               	movlw	1
 27674  002ACE  EC49  F030         	call	_Uart_WriteConstString
 27675                           
 27676                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 27677  002AD2  0E02               	movlw	2
 27678  002AD4  0101               	movlb	1	; () banked
 27679  002AD6  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27680                           
 27681                           ;mdm_gsm_gprs.c: 607: break;
 27682  002AD8  0012               	return	
 27683  002ADA                     
 27684                           ; BSR set to: 1
 27685                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 27686                           
 27687                           ; BSR set to: 1
 27688  002ADA  0E3A               	movlw	low _NewStringReceived
 27689  002ADC  0100               	movlb	0	; () banked
 27690  002ADE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27691  002AE0  0E00               	movlw	high _NewStringReceived
 27692  002AE2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27693  002AE4  EC92  F032         	call	_ReceiveEvt	;wreg free
 27694  002AE8  0900               	iorlw	0
 27695  002AEA  B4D8               	btfsc	status,2,c
 27696  002AEC  0012               	return	
 27697                           
 27698                           ;mdm_gsm_gprs.c: 612: {
 27699                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 27700  002AEE  CC58  FFE8         	movff	_RxBuffer,wreg
 27701  002AF2  0A2B               	xorlw	43
 27702  002AF4  A4D8               	btfss	status,2,c
 27703  002AF6  0012               	return	
 27704  002AF8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27705  002AFC  0A43               	xorlw	67
 27706  002AFE  A4D8               	btfss	status,2,c
 27707  002B00  0012               	return	
 27708  002B02  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 27709  002B06  0A4D               	xorlw	77
 27710  002B08  A4D8               	btfss	status,2,c
 27711  002B0A  0012               	return	
 27712                           
 27713                           ;mdm_gsm_gprs.c: 614: {
 27714                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 27715  002B0C  0E00               	movlw	low _Mdm_SmsRx
 27716  002B0E  0100               	movlb	0	; () banked
 27717  002B10  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27718  002B12  0E07               	movlw	high _Mdm_SmsRx
 27719  002B14  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27720  002B16  0E00               	movlw	0
 27721  002B18  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27722  002B1A  0E50               	movlw	80
 27723  002B1C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27724  002B1E  ECB4  F031         	call	_ClearBuffer	;wreg free
 27725                           
 27726                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 27727  002B22  0E58               	movlw	low _RxBuffer
 27728  002B24  0100               	movlb	0	; () banked
 27729  002B26  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27730  002B28  0E0C               	movlw	high _RxBuffer
 27731  002B2A  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27732  002B2C  0E00               	movlw	low _Mdm_SmsRx
 27733  002B2E  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27734  002B30  0E07               	movlw	high _Mdm_SmsRx
 27735  002B32  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27736  002B34  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27737  002B38  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27738  002B3C  EC63  F02B         	call	_StringCopy	;wreg free
 27739                           
 27740                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 27741  002B40  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 27742                           
 27743                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 27744  002B44  0E03               	movlw	3
 27745  002B46  0101               	movlb	1	; () banked
 27746  002B48  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27747                           
 27748                           ; BSR set to: 1
 27749                           ;mdm_gsm_gprs.c: 622: }
 27750                           ;mdm_gsm_gprs.c: 623: }
 27751                           ;mdm_gsm_gprs.c: 624: break;
 27752                           
 27753                           ; BSR set to: 1
 27754  002B4A  0012               	return	
 27755  002B4C                     
 27756                           ; BSR set to: 1
 27757                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 27758                           
 27759                           ; BSR set to: 1
 27760  002B4C  0E3A               	movlw	low _NewStringReceived
 27761  002B4E  0100               	movlb	0	; () banked
 27762  002B50  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27763  002B52  0E00               	movlw	high _NewStringReceived
 27764  002B54  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27765  002B56  EC92  F032         	call	_ReceiveEvt	;wreg free
 27766  002B5A  0900               	iorlw	0
 27767  002B5C  B4D8               	btfsc	status,2,c
 27768  002B5E  0012               	return	
 27769                           
 27770                           ;mdm_gsm_gprs.c: 629: {
 27771                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 27772  002B60  0E50               	movlw	low (_Mdm_SmsRx+80)
 27773  002B62  0100               	movlb	0	; () banked
 27774  002B64  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27775  002B66  0E07               	movlw	high (_Mdm_SmsRx+80)
 27776  002B68  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27777  002B6A  0E00               	movlw	0
 27778  002B6C  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27779  002B6E  0E14               	movlw	20
 27780  002B70  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27781  002B72  ECB4  F031         	call	_ClearBuffer	;wreg free
 27782                           
 27783                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 27784  002B76  0E58               	movlw	low _RxBuffer
 27785  002B78  0100               	movlb	0	; () banked
 27786  002B7A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27787  002B7C  0E0C               	movlw	high _RxBuffer
 27788  002B7E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27789  002B80  0E50               	movlw	low (_Mdm_SmsRx+80)
 27790  002B82  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27791  002B84  0E07               	movlw	high (_Mdm_SmsRx+80)
 27792  002B86  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27793  002B88  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27794  002B8C  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27795  002B90  EC63  F02B         	call	_StringCopy	;wreg free
 27796                           
 27797                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 27798  002B94  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 27799                           
 27800                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 27801  002B98  0E00               	movlw	0
 27802  002B9A  0101               	movlb	1	; () banked
 27803  002B9C  6FF1               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27804                           
 27805                           ; BSR set to: 1
 27806                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 27807  002B9E  0EDC               	movlw	low _SmsTxtReady
 27808  002BA0  0100               	movlb	0	; () banked
 27809  002BA2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27810  002BA4  0E00               	movlw	high _SmsTxtReady
 27811  002BA6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27812  002BA8  EC83  F034         	call	_GenerateEvt	;wreg free
 27813                           
 27814                           ;mdm_gsm_gprs.c: 644: }
 27815                           
 27816                           ;mdm_gsm_gprs.c: 643: break;
 27817                           
 27818                           ;mdm_gsm_gprs.c: 642: default:
 27819                           
 27820                           ;mdm_gsm_gprs.c: 639: }
 27821                           ;mdm_gsm_gprs.c: 640: break;
 27822  002BAC  0012               	return	
 27823  002BAE                     l1070:
 27824  002BAE  0101               	movlb	1	; () banked
 27825  002BB0  51F1               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 27826                           
 27827                           ; Switch size 1, requested type "space"
 27828                           ; Number of cases is 4, Range of values is 0 to 3
 27829                           ; switch strategies available:
 27830                           ; Name         Instructions Cycles
 27831                           ; simple_byte           13     7 (average)
 27832                           ;	Chosen strategy is simple_byte
 27833  002BB2  0A00               	xorlw	0	; case 0
 27834  002BB4  B4D8               	btfsc	status,2,c
 27835  002BB6  D777               	goto	l1071
 27836  002BB8  0A01               	xorlw	1	; case 1
 27837  002BBA  B4D8               	btfsc	status,2,c
 27838  002BBC  D782               	goto	l1074
 27839  002BBE  0A03               	xorlw	3	; case 2
 27840  002BC0  B4D8               	btfsc	status,2,c
 27841  002BC2  D78B               	goto	l1075
 27842  002BC4  0A01               	xorlw	1	; case 3
 27843  002BC6  A4D8               	btfss	status,2,c
 27844                           
 27845                           ; BSR set to: 1
 27846  002BC8  0012               	return	
 27847  002BCA  D7C0               	goto	l1078
 27848  002BCC                     __end_of_GetSmsSm:
 27849                           	opt stack 0
 27850                           tosu	equ	0xFFF
 27851                           tosh	equ	0xFFE
 27852                           tosl	equ	0xFFD
 27853                           pclath	equ	0xFFA
 27854                           tblptru	equ	0xFF8
 27855                           tblptrh	equ	0xFF7
 27856                           tblptrl	equ	0xFF6
 27857                           tablat	equ	0xFF5
 27858                           prodh	equ	0xFF4
 27859                           prodl	equ	0xFF3
 27860                           intcon	equ	0xFF2
 27861                           intcon2	equ	0xFF1
 27862                           intcon3	equ	0xFF0
 27863                           indf0	equ	0xFEF
 27864                           postinc0	equ	0xFEE
 27865                           plusw0	equ	0xFEB
 27866                           fsr0h	equ	0xFEA
 27867                           fsr0l	equ	0xFE9
 27868                           wreg	equ	0xFE8
 27869                           indf1	equ	0xFE7
 27870                           postinc1	equ	0xFE6
 27871                           postdec1	equ	0xFE5
 27872                           plusw1	equ	0xFE3
 27873                           fsr1h	equ	0xFE2
 27874                           fsr1l	equ	0xFE1
 27875                           indf2	equ	0xFDF
 27876                           postinc2	equ	0xFDE
 27877                           postdec2	equ	0xFDD
 27878                           plusw2	equ	0xFDB
 27879                           fsr2h	equ	0xFDA
 27880                           fsr2l	equ	0xFD9
 27881                           status	equ	0xFD8
 27882                           
 27883 ;; *************** function _ConfigureModem *****************
 27884 ;; Defined at:
 27885 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27886 ;; Parameters:    Size  Location     Type
 27887 ;;		None
 27888 ;; Auto vars:     Size  Location     Type
 27889 ;;		None
 27890 ;; Return value:  Size  Location     Type
 27891 ;;                  1    wreg      void 
 27892 ;; Registers used:
 27893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27894 ;; Tracked objects:
 27895 ;;		On entry : 0/0
 27896 ;;		On exit  : 0/0
 27897 ;;		Unchanged: 0/0
 27898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27903 ;;Total ram usage:        0 bytes
 27904 ;; Hardware stack levels used:    1
 27905 ;; Hardware stack levels required when called:   14
 27906 ;; This function calls:
 27907 ;;		_GenerateEvt
 27908 ;;		_UartSetConfigLow
 27909 ;;		_Uart_InitUartModule
 27910 ;;		_Uart_WriteConstString
 27911 ;; This function is called by:
 27912 ;;		_Mdm_MainTask
 27913 ;; This function uses a non-reentrant model
 27914 ;;
 27915                           
 27916                           	psect	text134
 27917  00386E                     __ptext134:
 27918                           	opt stack 0
 27919  00386E                     _ConfigureModem:
 27920                           	opt stack 13
 27921                           
 27922                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 27923                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 27924                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 27925                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 27926                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 27927                           
 27928                           ;incstack = 0
 27929  00386E  D056               	goto	l1027
 27930  003870                     
 27931                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 27932  003870  0E02               	movlw	2
 27933  003872  0100               	movlb	0	; () banked
 27934  003874  19D2               	xorwf	_MdmStatus& (0+255),w,b
 27935  003876  A4D8               	btfss	status,2,c
 27936  003878  0012               	return	
 27937                           
 27938                           ; BSR set to: 0
 27939                           ;mdm_gsm_gprs.c: 431: {
 27940                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 27941  00387A  0E01               	movlw	1
 27942  00387C  0101               	movlb	1	; () banked
 27943  00387E  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27944                           
 27945                           ; BSR set to: 1
 27946                           ;mdm_gsm_gprs.c: 434: }
 27947                           ;mdm_gsm_gprs.c: 435: break;
 27948  003880  0012               	return	
 27949  003882                     
 27950                           ; BSR set to: 1
 27951                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 27952                           
 27953                           ; BSR set to: 1
 27954  003882  0E75               	movlw	low STR_2
 27955  003884  0100               	movlb	0	; () banked
 27956  003886  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27957  003888  0EFF               	movlw	high STR_2
 27958  00388A  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27959  00388C  0E01               	movlw	1
 27960  00388E  EC49  F030         	call	_Uart_WriteConstString
 27961                           
 27962                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 27963  003892  EC78  F02C         	call	_UartSetConfigLow	;wreg free
 27964                           
 27965                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 27966  003896  0E1A               	movlw	low _UartConfig
 27967  003898  0100               	movlb	0	; () banked
 27968  00389A  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 27969  00389C  0E03               	movlw	high _UartConfig
 27970  00389E  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 27971  0038A0  0E01               	movlw	1
 27972  0038A2  EC5E  F005         	call	_Uart_InitUartModule
 27973                           
 27974                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 27975  0038A6  0E03               	movlw	3
 27976  0038A8  0102               	movlb	2	; () banked
 27977  0038AA  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 27978  0038AC  0EE8               	movlw	232
 27979  0038AE  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 27980                           
 27981                           ; BSR set to: 2
 27982                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 27983  0038B0  0E02               	movlw	2
 27984  0038B2  0101               	movlb	1	; () banked
 27985  0038B4  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 27986                           
 27987                           ; BSR set to: 1
 27988                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 27989  0038B6  0E04               	movlw	4
 27990  0038B8  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 27991                           
 27992                           ;mdm_gsm_gprs.c: 449: break;
 27993  0038BA  0012               	return	
 27994  0038BC                     
 27995                           ; BSR set to: 1
 27996                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 27997                           
 27998                           ; BSR set to: 1
 27999  0038BC  0EDF               	movlw	low STR_3
 28000  0038BE  0100               	movlb	0	; () banked
 28001  0038C0  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28002  0038C2  0EFF               	movlw	high STR_3
 28003  0038C4  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28004  0038C6  0E01               	movlw	1
 28005  0038C8  EC49  F030         	call	_Uart_WriteConstString
 28006                           
 28007                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28008  0038CC  0E03               	movlw	3
 28009  0038CE  0102               	movlb	2	; () banked
 28010  0038D0  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28011  0038D2  0EE8               	movlw	232
 28012  0038D4  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28013                           
 28014                           ; BSR set to: 2
 28015                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28016  0038D6  0E05               	movlw	5
 28017  0038D8  0101               	movlb	1	; () banked
 28018  0038DA  6FF2               	movwf	ConfigureModem@NextState& (0+255),b
 28019                           
 28020                           ; BSR set to: 1
 28021                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28022  0038DC  0E04               	movlw	4
 28023  0038DE  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28024                           
 28025                           ;mdm_gsm_gprs.c: 459: break;
 28026  0038E0  0012               	return	
 28027  0038E2                     
 28028                           ; BSR set to: 1
 28029                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28030                           
 28031                           ; BSR set to: 1
 28032  0038E2  0102               	movlb	2	; () banked
 28033  0038E4  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28034  0038E6  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28035                           
 28036                           ; BSR set to: 2
 28037                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28038  0038E8  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28039  0038EA  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28040  0038EC  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28041  0038EE  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28042  0038F0  A0D8               	btfss	status,0,c
 28043  0038F2  0012               	return	
 28044                           
 28045                           ; BSR set to: 2
 28046                           ;mdm_gsm_gprs.c: 466: {
 28047                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28048  0038F4  0E00               	movlw	0
 28049  0038F6  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28050  0038F8  0E00               	movlw	0
 28051  0038FA  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28052                           
 28053                           ; BSR set to: 2
 28054                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28055  0038FC  C1F2  F1F3         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28056                           
 28057                           ; BSR set to: 2
 28058                           ;mdm_gsm_gprs.c: 471: }
 28059                           ;mdm_gsm_gprs.c: 472: break;
 28060  003900  0012               	return	
 28061  003902                     
 28062                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28063                           
 28064                           ; BSR set to: 2
 28065  003902  0E03               	movlw	3
 28066  003904  0100               	movlb	0	; () banked
 28067  003906  6FD2               	movwf	_MdmStatus& (0+255),b
 28068                           
 28069                           ; BSR set to: 0
 28070                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28071  003908  0E37               	movlw	low _MdmStsReady
 28072  00390A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28073  00390C  0E00               	movlw	high _MdmStsReady
 28074  00390E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28075  003910  EC83  F034         	call	_GenerateEvt	;wreg free
 28076                           
 28077                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28078  003914  0E06               	movlw	6
 28079  003916  0101               	movlb	1	; () banked
 28080  003918  6FF3               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28081                           
 28082                           ; BSR set to: 1
 28083                           ;mdm_gsm_gprs.c: 488: }
 28084                           
 28085                           ; BSR set to: 1
 28086                           ;mdm_gsm_gprs.c: 487: break;
 28087                           
 28088                           ;mdm_gsm_gprs.c: 486: default:
 28089                           
 28090                           ; BSR set to: 1
 28091                           ;mdm_gsm_gprs.c: 484: break;
 28092                           
 28093                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28094                           
 28095                           ;mdm_gsm_gprs.c: 481: break;
 28096  00391A  0012               	return	
 28097  00391C                     l1027:
 28098                           
 28099                           ; BSR set to: 1
 28100  00391C  0101               	movlb	1	; () banked
 28101  00391E  51F3               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28102                           
 28103                           ; Switch size 1, requested type "space"
 28104                           ; Number of cases is 6, Range of values is 0 to 6
 28105                           ; switch strategies available:
 28106                           ; Name         Instructions Cycles
 28107                           ; simple_byte           19    10 (average)
 28108                           ;	Chosen strategy is simple_byte
 28109  003920  0A00               	xorlw	0	; case 0
 28110  003922  B4D8               	btfsc	status,2,c
 28111  003924  D7A5               	goto	l1028
 28112  003926  0A01               	xorlw	1	; case 1
 28113  003928  B4D8               	btfsc	status,2,c
 28114  00392A  D7AB               	goto	l1031
 28115  00392C  0A03               	xorlw	3	; case 2
 28116  00392E  B4D8               	btfsc	status,2,c
 28117  003930  D7C5               	goto	l1032
 28118  003932  0A06               	xorlw	6	; case 4
 28119  003934  B4D8               	btfsc	status,2,c
 28120  003936  D7D5               	goto	l1033
 28121  003938  0A01               	xorlw	1	; case 5
 28122  00393A  B4D8               	btfsc	status,2,c
 28123  00393C  D7E2               	goto	l1035
 28124  00393E  0A03               	xorlw	3	; case 6
 28125  003940  0012               	return	
 28126  003942                     __end_of_ConfigureModem:
 28127                           	opt stack 0
 28128                           tosu	equ	0xFFF
 28129                           tosh	equ	0xFFE
 28130                           tosl	equ	0xFFD
 28131                           pclath	equ	0xFFA
 28132                           tblptru	equ	0xFF8
 28133                           tblptrh	equ	0xFF7
 28134                           tblptrl	equ	0xFF6
 28135                           tablat	equ	0xFF5
 28136                           prodh	equ	0xFF4
 28137                           prodl	equ	0xFF3
 28138                           intcon	equ	0xFF2
 28139                           intcon2	equ	0xFF1
 28140                           intcon3	equ	0xFF0
 28141                           indf0	equ	0xFEF
 28142                           postinc0	equ	0xFEE
 28143                           plusw0	equ	0xFEB
 28144                           fsr0h	equ	0xFEA
 28145                           fsr0l	equ	0xFE9
 28146                           wreg	equ	0xFE8
 28147                           indf1	equ	0xFE7
 28148                           postinc1	equ	0xFE6
 28149                           postdec1	equ	0xFE5
 28150                           plusw1	equ	0xFE3
 28151                           fsr1h	equ	0xFE2
 28152                           fsr1l	equ	0xFE1
 28153                           indf2	equ	0xFDF
 28154                           postinc2	equ	0xFDE
 28155                           postdec2	equ	0xFDD
 28156                           plusw2	equ	0xFDB
 28157                           fsr2h	equ	0xFDA
 28158                           fsr2l	equ	0xFD9
 28159                           status	equ	0xFD8
 28160                           
 28161 ;; *************** function _Uart_InitUartModule *****************
 28162 ;; Defined at:
 28163 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28164 ;; Parameters:    Size  Location     Type
 28165 ;;  Module          1    wreg     unsigned char 
 28166 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28167 ;;		 -> UartConfig(21), 
 28168 ;; Auto vars:     Size  Location     Type
 28169 ;;  Module          1   65[BANK0 ] unsigned char 
 28170 ;; Return value:  Size  Location     Type
 28171 ;;                  1    wreg      void 
 28172 ;; Registers used:
 28173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28174 ;; Tracked objects:
 28175 ;;		On entry : 0/0
 28176 ;;		On exit  : 0/0
 28177 ;;		Unchanged: 0/0
 28178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28182 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28183 ;;Total ram usage:        5 bytes
 28184 ;; Hardware stack levels used:    1
 28185 ;; Hardware stack levels required when called:   13
 28186 ;; This function calls:
 28187 ;;		_SetUartBaudRate
 28188 ;; This function is called by:
 28189 ;;		_ConfigureModem
 28190 ;;		_Mdm_MainTask
 28191 ;; This function uses a non-reentrant model
 28192 ;;
 28193                           
 28194                           	psect	text135
 28195  000ABC                     __ptext135:
 28196                           	opt stack 0
 28197  000ABC                     _Uart_InitUartModule:
 28198                           	opt stack 14
 28199                           
 28200                           ;incstack = 0
 28201                           ;Uart_InitUartModule@Module stored from wreg
 28202  000ABC  0100               	movlb	0	; () banked
 28203  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28204                           
 28205                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28206  000AC0  0100               	movlb	0	; () banked
 28207  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28208  000AC4  A4D8               	btfss	status,2,c
 28209  000AC6  D0BE               	goto	l668
 28210                           
 28211                           ; BSR set to: 0
 28212                           ;uart_drv.c: 291: {
 28213                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28214  000AC8  9C94               	bcf	3988,6,c	;volatile
 28215                           
 28216                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28217  000ACA  8E94               	bsf	3988,7,c	;volatile
 28218                           
 28219                           ; BSR set to: 0
 28220                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28221  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28222  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28223  000AD4  0E01               	movlw	1
 28224  000AD6  ECB1  F014         	call	_SetUartBaudRate
 28225                           
 28226                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28227  000ADA  0E00               	movlw	0
 28228  000ADC  6EAD               	movwf	4013,c	;volatile
 28229                           
 28230                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28231  000ADE  0100               	movlb	0	; () banked
 28232  000AE0  EE20 F004          	lfsr	2,4
 28233  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28234  000AE6  26D9               	addwf	fsr2l,f,c
 28235  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28236  000AEA  22DA               	addwfc	fsr2h,f,c
 28237  000AEC  50DF               	movf	indf2,w,c
 28238  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28239  000AF0  0E06               	movlw	6
 28240  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28241  000AF4                     u13465:
 28242  000AF4  90D8               	bcf	status,0,c
 28243  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28244  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28245  000AFA  D7FC               	goto	u13465
 28246  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28247  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28248                           
 28249                           ; BSR set to: 0
 28250                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28251  000B00  EE20 F006          	lfsr	2,6
 28252  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28253  000B06  26D9               	addwf	fsr2l,f,c
 28254  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28255  000B0A  22DA               	addwfc	fsr2h,f,c
 28256  000B0C  50DF               	movf	indf2,w,c
 28257  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28258  000B10  0E05               	movlw	5
 28259  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28260  000B14                     u13475:
 28261  000B14  90D8               	bcf	status,0,c
 28262  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28263  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28264  000B1A  D7FC               	goto	u13475
 28265  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28266  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28267                           
 28268                           ; BSR set to: 0
 28269                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28270  000B20  EE20 F001          	lfsr	2,1
 28271  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28272  000B26  26D9               	addwf	fsr2l,f,c
 28273  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28274  000B2A  22DA               	addwfc	fsr2h,f,c
 28275  000B2C  50DF               	movf	indf2,w,c
 28276  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28277  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28278  000B32  0BF0               	andlw	240
 28279  000B34  12AD               	iorwf	4013,f,c	;volatile
 28280                           
 28281                           ; BSR set to: 0
 28282                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28283  000B36  EE20 F008          	lfsr	2,8
 28284  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28285  000B3C  26D9               	addwf	fsr2l,f,c
 28286  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28287  000B40  22DA               	addwfc	fsr2h,f,c
 28288  000B42  50DF               	movf	indf2,w,c
 28289  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28290  000B46  90D8               	bcf	status,0,c
 28291  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28292  000B4A  90D8               	bcf	status,0,c
 28293  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28294  000B4E  90D8               	bcf	status,0,c
 28295  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28296  000B52  12AD               	iorwf	4013,f,c	;volatile
 28297                           
 28298                           ; BSR set to: 0
 28299                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28300  000B54  EE20 F003          	lfsr	2,3
 28301  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28302  000B5A  26D9               	addwf	fsr2l,f,c
 28303  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28304  000B5E  22DA               	addwfc	fsr2h,f,c
 28305  000B60  50DF               	movf	indf2,w,c
 28306  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28307  000B64  90D8               	bcf	status,0,c
 28308  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28309  000B68  90D8               	bcf	status,0,c
 28310  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28311  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28312                           
 28313                           ; BSR set to: 0
 28314                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28315  000B6E  0E00               	movlw	0
 28316  000B70  6EAC               	movwf	4012,c	;volatile
 28317                           
 28318                           ; BSR set to: 0
 28319                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28320  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28321  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28322  000B7A  50DF               	movf	indf2,w,c
 28323  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28324  000B7E  0E00               	movlw	0
 28325  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28326  000B82  0E80               	movlw	128
 28327  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28328  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28329  000B88  12AC               	iorwf	4012,f,c	;volatile
 28330                           
 28331                           ; BSR set to: 0
 28332                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28333  000B8A  EE20 F005          	lfsr	2,5
 28334  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28335  000B90  26D9               	addwf	fsr2l,f,c
 28336  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28337  000B94  22DA               	addwfc	fsr2h,f,c
 28338  000B96  50DF               	movf	indf2,w,c
 28339  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28340  000B9A  0E06               	movlw	6
 28341  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28342  000B9E                     u13485:
 28343  000B9E  90D8               	bcf	status,0,c
 28344  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28345  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28346  000BA4  D7FC               	goto	u13485
 28347  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28348  000BA8  12AC               	iorwf	4012,f,c	;volatile
 28349                           
 28350                           ; BSR set to: 0
 28351                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28352  000BAA  EE20 F007          	lfsr	2,7
 28353  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28354  000BB0  26D9               	addwf	fsr2l,f,c
 28355  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28356  000BB4  22DA               	addwfc	fsr2h,f,c
 28357  000BB6  50DF               	movf	indf2,w,c
 28358  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28359  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28360  000BBC  0BF0               	andlw	240
 28361  000BBE  12AC               	iorwf	4012,f,c	;volatile
 28362                           
 28363                           ; BSR set to: 0
 28364                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 28365  000BC0  0E00               	movlw	0
 28366  000BC2  6E7E               	movwf	3966,c	;volatile
 28367                           
 28368                           ; BSR set to: 0
 28369                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28370  000BC4  EE20 F002          	lfsr	2,2
 28371  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28372  000BCA  26D9               	addwf	fsr2l,f,c
 28373  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28374  000BCE  22DA               	addwfc	fsr2h,f,c
 28375  000BD0  50DF               	movf	indf2,w,c
 28376  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28377  000BD4  90D8               	bcf	status,0,c
 28378  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28379  000BD8  90D8               	bcf	status,0,c
 28380  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28381  000BDC  90D8               	bcf	status,0,c
 28382  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28383  000BE0  127E               	iorwf	3966,f,c	;volatile
 28384                           
 28385                           ; BSR set to: 0
 28386                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28387  000BE2  EE20 F00A          	lfsr	2,10
 28388  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28389  000BE8  26D9               	addwf	fsr2l,f,c
 28390  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28391  000BEC  22DA               	addwfc	fsr2h,f,c
 28392  000BEE  50DF               	movf	indf2,w,c
 28393  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28394  000BF2  90D8               	bcf	status,0,c
 28395  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28396  000BF6  127E               	iorwf	3966,f,c	;volatile
 28397                           
 28398                           ; BSR set to: 0
 28399                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28400  000BF8  EE20 F009          	lfsr	2,9
 28401  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28402  000BFE  26D9               	addwf	fsr2l,f,c
 28403  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28404  000C02  22DA               	addwfc	fsr2h,f,c
 28405  000C04  50DF               	movf	indf2,w,c
 28406  000C06  127E               	iorwf	3966,f,c	;volatile
 28407                           
 28408                           ; BSR set to: 0
 28409                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 28410  000C08  EE20 F00B          	lfsr	2,11
 28411  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28412  000C0E  26D9               	addwf	fsr2l,f,c
 28413  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28414  000C12  22DA               	addwfc	fsr2h,f,c
 28415  000C14  50DF               	movf	indf2,w,c
 28416  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28417  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28418  000C1A  509D               	movf	3997,w,c	;volatile
 28419  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28420  000C1E  0BEF               	andlw	-17
 28421  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28422  000C22  6E9D               	movwf	3997,c	;volatile
 28423                           
 28424                           ; BSR set to: 0
 28425                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 28426  000C24  EE20 F00C          	lfsr	2,12
 28427  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28428  000C2A  26D9               	addwf	fsr2l,f,c
 28429  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28430  000C2E  22DA               	addwfc	fsr2h,f,c
 28431  000C30  50DF               	movf	indf2,w,c
 28432  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28433  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28434  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28435  000C38  509D               	movf	3997,w,c	;volatile
 28436  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28437  000C3C  0BDF               	andlw	-33
 28438  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28439  000C40  6E9D               	movwf	3997,c	;volatile
 28440                           
 28441                           ;uart_drv.c: 326: }
 28442  000C42  0012               	return	
 28443  000C44                     l668:
 28444                           
 28445                           ; BSR set to: 0
 28446                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 28447                           
 28448                           ; BSR set to: 0
 28449  000C44  0E02               	movlw	2
 28450  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 28451  000C48  A4D8               	btfss	status,2,c
 28452  000C4A  0012               	return	
 28453                           
 28454                           ; BSR set to: 0
 28455                           ;uart_drv.c: 328: {
 28456                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 28457  000C4C  9094               	bcf	3988,0,c	;volatile
 28458                           
 28459                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 28460  000C4E  8294               	bsf	3988,1,c	;volatile
 28461                           
 28462                           ; BSR set to: 0
 28463                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 28464  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28465  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28466  000C58  0E02               	movlw	2
 28467  000C5A  ECB1  F014         	call	_SetUartBaudRate
 28468                           
 28469                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 28470  000C5E  0E00               	movlw	0
 28471  000C60  6EA8               	movwf	4008,c	;volatile
 28472                           
 28473                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28474  000C62  0100               	movlb	0	; () banked
 28475  000C64  EE20 F004          	lfsr	2,4
 28476  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28477  000C6A  26D9               	addwf	fsr2l,f,c
 28478  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28479  000C6E  22DA               	addwfc	fsr2h,f,c
 28480  000C70  50DF               	movf	indf2,w,c
 28481  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28482  000C74  0E06               	movlw	6
 28483  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28484  000C78                     u13505:
 28485  000C78  90D8               	bcf	status,0,c
 28486  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28487  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28488  000C7E  D7FC               	goto	u13505
 28489  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28490  000C82  12A8               	iorwf	4008,f,c	;volatile
 28491                           
 28492                           ; BSR set to: 0
 28493                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28494  000C84  EE20 F006          	lfsr	2,6
 28495  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28496  000C8A  26D9               	addwf	fsr2l,f,c
 28497  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28498  000C8E  22DA               	addwfc	fsr2h,f,c
 28499  000C90  50DF               	movf	indf2,w,c
 28500  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28501  000C94  0E05               	movlw	5
 28502  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28503  000C98                     u13515:
 28504  000C98  90D8               	bcf	status,0,c
 28505  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28506  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28507  000C9E  D7FC               	goto	u13515
 28508  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28509  000CA2  12A8               	iorwf	4008,f,c	;volatile
 28510                           
 28511                           ; BSR set to: 0
 28512                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 28513  000CA4  EE20 F001          	lfsr	2,1
 28514  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28515  000CAA  26D9               	addwf	fsr2l,f,c
 28516  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28517  000CAE  22DA               	addwfc	fsr2h,f,c
 28518  000CB0  50DF               	movf	indf2,w,c
 28519  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28520  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28521  000CB6  0BF0               	andlw	240
 28522  000CB8  12A8               	iorwf	4008,f,c	;volatile
 28523                           
 28524                           ; BSR set to: 0
 28525                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28526  000CBA  EE20 F008          	lfsr	2,8
 28527  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28528  000CC0  26D9               	addwf	fsr2l,f,c
 28529  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28530  000CC4  22DA               	addwfc	fsr2h,f,c
 28531  000CC6  50DF               	movf	indf2,w,c
 28532  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28533  000CCA  90D8               	bcf	status,0,c
 28534  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28535  000CCE  90D8               	bcf	status,0,c
 28536  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28537  000CD2  90D8               	bcf	status,0,c
 28538  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28539  000CD6  12A8               	iorwf	4008,f,c	;volatile
 28540                           
 28541                           ; BSR set to: 0
 28542                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28543  000CD8  EE20 F003          	lfsr	2,3
 28544  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28545  000CDE  26D9               	addwf	fsr2l,f,c
 28546  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28547  000CE2  22DA               	addwfc	fsr2h,f,c
 28548  000CE4  50DF               	movf	indf2,w,c
 28549  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28550  000CE8  90D8               	bcf	status,0,c
 28551  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28552  000CEC  90D8               	bcf	status,0,c
 28553  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28554  000CF0  12A8               	iorwf	4008,f,c	;volatile
 28555                           
 28556                           ; BSR set to: 0
 28557                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 28558  000CF2  0E00               	movlw	0
 28559  000CF4  6E9C               	movwf	3996,c	;volatile
 28560                           
 28561                           ; BSR set to: 0
 28562                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28563  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28564  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28565  000CFE  50DF               	movf	indf2,w,c
 28566  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28567  000D02  0E00               	movlw	0
 28568  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28569  000D06  0E80               	movlw	128
 28570  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28571  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28572  000D0C  129C               	iorwf	3996,f,c	;volatile
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28576  000D0E  EE20 F005          	lfsr	2,5
 28577  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28578  000D14  26D9               	addwf	fsr2l,f,c
 28579  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28580  000D18  22DA               	addwfc	fsr2h,f,c
 28581  000D1A  50DF               	movf	indf2,w,c
 28582  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28583  000D1E  0E06               	movlw	6
 28584  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28585  000D22                     u13525:
 28586  000D22  90D8               	bcf	status,0,c
 28587  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28588  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28589  000D28  D7FC               	goto	u13525
 28590  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28591  000D2C  129C               	iorwf	3996,f,c	;volatile
 28592                           
 28593                           ; BSR set to: 0
 28594                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28595  000D2E  EE20 F007          	lfsr	2,7
 28596  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28597  000D34  26D9               	addwf	fsr2l,f,c
 28598  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28599  000D38  22DA               	addwfc	fsr2h,f,c
 28600  000D3A  50DF               	movf	indf2,w,c
 28601  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28602  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28603  000D40  0BF0               	andlw	240
 28604  000D42  129C               	iorwf	3996,f,c	;volatile
 28605                           
 28606                           ; BSR set to: 0
 28607                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 28608  000D44  0E00               	movlw	0
 28609  000D46  6E7C               	movwf	3964,c	;volatile
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28613  000D48  EE20 F002          	lfsr	2,2
 28614  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28615  000D4E  26D9               	addwf	fsr2l,f,c
 28616  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28617  000D52  22DA               	addwfc	fsr2h,f,c
 28618  000D54  50DF               	movf	indf2,w,c
 28619  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28620  000D58  90D8               	bcf	status,0,c
 28621  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28622  000D5C  90D8               	bcf	status,0,c
 28623  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28624  000D60  90D8               	bcf	status,0,c
 28625  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28626  000D64  127C               	iorwf	3964,f,c	;volatile
 28627                           
 28628                           ; BSR set to: 0
 28629                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28630  000D66  EE20 F00A          	lfsr	2,10
 28631  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28632  000D6C  26D9               	addwf	fsr2l,f,c
 28633  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28634  000D70  22DA               	addwfc	fsr2h,f,c
 28635  000D72  50DF               	movf	indf2,w,c
 28636  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28637  000D76  90D8               	bcf	status,0,c
 28638  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28639  000D7A  127C               	iorwf	3964,f,c	;volatile
 28640                           
 28641                           ; BSR set to: 0
 28642                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28643  000D7C  EE20 F009          	lfsr	2,9
 28644  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28645  000D82  26D9               	addwf	fsr2l,f,c
 28646  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28647  000D86  22DA               	addwfc	fsr2h,f,c
 28648  000D88  50DF               	movf	indf2,w,c
 28649  000D8A  127C               	iorwf	3964,f,c	;volatile
 28650                           
 28651                           ; BSR set to: 0
 28652                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 28653  000D8C  EE20 F00B          	lfsr	2,11
 28654  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28655  000D92  26D9               	addwf	fsr2l,f,c
 28656  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28657  000D96  22DA               	addwfc	fsr2h,f,c
 28658  000D98  50DF               	movf	indf2,w,c
 28659  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28660  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28661  000D9E  50A3               	movf	4003,w,c	;volatile
 28662  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28663  000DA2  0BEF               	andlw	-17
 28664  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28665  000DA6  6EA3               	movwf	4003,c	;volatile
 28666                           
 28667                           ; BSR set to: 0
 28668                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 28669  000DA8  EE20 F00C          	lfsr	2,12
 28670  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28671  000DAE  26D9               	addwf	fsr2l,f,c
 28672  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28673  000DB2  22DA               	addwfc	fsr2h,f,c
 28674  000DB4  50DF               	movf	indf2,w,c
 28675  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28676  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28677  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28678  000DBC  50A3               	movf	4003,w,c	;volatile
 28679  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28680  000DC0  0BDF               	andlw	-33
 28681  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28682  000DC4  6EA3               	movwf	4003,c	;volatile
 28683                           
 28684                           ; BSR set to: 0
 28685  000DC6  0012               	return	
 28686  000DC8                     __end_of_Uart_InitUartModule:
 28687                           	opt stack 0
 28688                           tosu	equ	0xFFF
 28689                           tosh	equ	0xFFE
 28690                           tosl	equ	0xFFD
 28691                           pclath	equ	0xFFA
 28692                           tblptru	equ	0xFF8
 28693                           tblptrh	equ	0xFF7
 28694                           tblptrl	equ	0xFF6
 28695                           tablat	equ	0xFF5
 28696                           prodh	equ	0xFF4
 28697                           prodl	equ	0xFF3
 28698                           intcon	equ	0xFF2
 28699                           intcon2	equ	0xFF1
 28700                           intcon3	equ	0xFF0
 28701                           indf0	equ	0xFEF
 28702                           postinc0	equ	0xFEE
 28703                           plusw0	equ	0xFEB
 28704                           fsr0h	equ	0xFEA
 28705                           fsr0l	equ	0xFE9
 28706                           wreg	equ	0xFE8
 28707                           indf1	equ	0xFE7
 28708                           postinc1	equ	0xFE6
 28709                           postdec1	equ	0xFE5
 28710                           plusw1	equ	0xFE3
 28711                           fsr1h	equ	0xFE2
 28712                           fsr1l	equ	0xFE1
 28713                           indf2	equ	0xFDF
 28714                           postinc2	equ	0xFDE
 28715                           postdec2	equ	0xFDD
 28716                           plusw2	equ	0xFDB
 28717                           fsr2h	equ	0xFDA
 28718                           fsr2l	equ	0xFD9
 28719                           status	equ	0xFD8
 28720                           
 28721 ;; *************** function _SetUartBaudRate *****************
 28722 ;; Defined at:
 28723 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28724 ;; Parameters:    Size  Location     Type
 28725 ;;  Module          1    wreg     unsigned char 
 28726 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 28727 ;;		 -> UartConfig(21), 
 28728 ;; Auto vars:     Size  Location     Type
 28729 ;;  Module          1   57[BANK0 ] unsigned char 
 28730 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 28731 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 28732 ;; Return value:  Size  Location     Type
 28733 ;;                  1    wreg      void 
 28734 ;; Registers used:
 28735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28736 ;; Tracked objects:
 28737 ;;		On entry : 0/0
 28738 ;;		On exit  : 0/0
 28739 ;;		Unchanged: 0/0
 28740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28742 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28744 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28745 ;;Total ram usage:        7 bytes
 28746 ;; Hardware stack levels used:    1
 28747 ;; Hardware stack levels required when called:   12
 28748 ;; This function calls:
 28749 ;;		___lldiv
 28750 ;;		___lmul
 28751 ;; This function is called by:
 28752 ;;		_Uart_InitUartModule
 28753 ;; This function uses a non-reentrant model
 28754 ;;
 28755                           
 28756                           	psect	text136
 28757  002962                     __ptext136:
 28758                           	opt stack 0
 28759  002962                     _SetUartBaudRate:
 28760                           	opt stack 14
 28761                           
 28762                           ; BSR set to: 0
 28763                           ;incstack = 0
 28764                           ;SetUartBaudRate@Module stored from wreg
 28765  002962  0100               	movlb	0	; () banked
 28766  002964  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 28767                           
 28768                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 28769  002966  0E00               	movlw	0
 28770  002968  0100               	movlb	0	; () banked
 28771  00296A  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28772  00296C  0E00               	movlw	0
 28773  00296E  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28774                           
 28775                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 28776  002970  0E00               	movlw	0
 28777  002972  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28778                           
 28779                           ; BSR set to: 0
 28780                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 28781  002974  EE20 F002          	lfsr	2,2
 28782  002978  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28783  00297A  26D9               	addwf	fsr2l,f,c
 28784  00297C  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28785  00297E  22DA               	addwfc	fsr2h,f,c
 28786  002980  50DF               	movf	indf2,w,c
 28787  002982  A4D8               	btfss	status,2,c
 28788  002984  D00B               	goto	l625
 28789                           
 28790                           ; BSR set to: 0
 28791  002986  EE20 F002          	lfsr	2,2
 28792  00298A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28793  00298C  26D9               	addwf	fsr2l,f,c
 28794  00298E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28795  002990  22DA               	addwfc	fsr2h,f,c
 28796  002992  50DF               	movf	indf2,w,c
 28797  002994  A4D8               	btfss	status,2,c
 28798  002996  D002               	goto	l625
 28799                           
 28800                           ; BSR set to: 0
 28801                           ;uart_drv.c: 128: {
 28802                           ;uart_drv.c: 129: DivisionFactor = 64;
 28803  002998  0E40               	movlw	64
 28804  00299A  D039               	goto	L56
 28805  00299C                     l625:
 28806                           
 28807                           ; BSR set to: 0
 28808                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 28809                           
 28810                           ; BSR set to: 0
 28811  00299C  EE20 F002          	lfsr	2,2
 28812  0029A0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28813  0029A2  26D9               	addwf	fsr2l,f,c
 28814  0029A4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28815  0029A6  22DA               	addwfc	fsr2h,f,c
 28816  0029A8  04DE               	decf	postinc2,w,c
 28817  0029AA  A4D8               	btfss	status,2,c
 28818  0029AC  D009               	goto	l627
 28819                           
 28820                           ; BSR set to: 0
 28821  0029AE  EE20 F002          	lfsr	2,2
 28822  0029B2  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28823  0029B4  26D9               	addwf	fsr2l,f,c
 28824  0029B6  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28825  0029B8  22DA               	addwfc	fsr2h,f,c
 28826  0029BA  50DF               	movf	indf2,w,c
 28827  0029BC  B4D8               	btfsc	status,2,c
 28828  0029BE  D012               	goto	u12550
 28829  0029C0                     l627:
 28830                           
 28831                           ; BSR set to: 0
 28832                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 28833                           
 28834                           ; BSR set to: 0
 28835  0029C0  EE20 F002          	lfsr	2,2
 28836  0029C4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28837  0029C6  26D9               	addwf	fsr2l,f,c
 28838  0029C8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28839  0029CA  22DA               	addwfc	fsr2h,f,c
 28840  0029CC  50DF               	movf	indf2,w,c
 28841  0029CE  A4D8               	btfss	status,2,c
 28842  0029D0  D00B               	goto	l629
 28843                           
 28844                           ; BSR set to: 0
 28845  0029D2  EE20 F002          	lfsr	2,2
 28846  0029D6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28847  0029D8  26D9               	addwf	fsr2l,f,c
 28848  0029DA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28849  0029DC  22DA               	addwfc	fsr2h,f,c
 28850  0029DE  04DE               	decf	postinc2,w,c
 28851  0029E0  A4D8               	btfss	status,2,c
 28852  0029E2  D002               	goto	l629
 28853  0029E4                     u12550:
 28854                           
 28855                           ; BSR set to: 0
 28856                           ;uart_drv.c: 136: {
 28857                           ;uart_drv.c: 137: DivisionFactor = 16;
 28858  0029E4  0E10               	movlw	16
 28859  0029E6  D013               	goto	L56
 28860  0029E8                     l629:
 28861                           
 28862                           ; BSR set to: 0
 28863                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 28864                           
 28865                           ; BSR set to: 0
 28866  0029E8  EE20 F002          	lfsr	2,2
 28867  0029EC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28868  0029EE  26D9               	addwf	fsr2l,f,c
 28869  0029F0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28870  0029F2  22DA               	addwfc	fsr2h,f,c
 28871  0029F4  04DE               	decf	postinc2,w,c
 28872  0029F6  A4D8               	btfss	status,2,c
 28873  0029F8  D00B               	goto	l631
 28874                           
 28875                           ; BSR set to: 0
 28876  0029FA  EE20 F002          	lfsr	2,2
 28877  0029FE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28878  002A00  26D9               	addwf	fsr2l,f,c
 28879  002A02  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28880  002A04  22DA               	addwfc	fsr2h,f,c
 28881  002A06  04DE               	decf	postinc2,w,c
 28882  002A08  A4D8               	btfss	status,2,c
 28883  002A0A  D002               	goto	l631
 28884                           
 28885                           ; BSR set to: 0
 28886                           ;uart_drv.c: 140: {
 28887                           ;uart_drv.c: 141: DivisionFactor = 4;
 28888  002A0C  0E04               	movlw	4
 28889  002A0E                     L56:
 28890  002A0E  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28891  002A10                     l631:
 28892                           
 28893                           ; BSR set to: 0
 28894                           ;uart_drv.c: 146: }
 28895                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 28896                           
 28897                           ; BSR set to: 0
 28898                           
 28899                           ; BSR set to: 0
 28900                           
 28901                           ; BSR set to: 0
 28902                           
 28903                           ; BSR set to: 0
 28904                           
 28905                           ;uart_drv.c: 143: else
 28906                           ;uart_drv.c: 144: {
 28907                           
 28908                           ; BSR set to: 0
 28909  002A10  EE20 F00D          	lfsr	2,13
 28910  002A14  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28911  002A16  26D9               	addwf	fsr2l,f,c
 28912  002A18  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28913  002A1A  22DA               	addwfc	fsr2h,f,c
 28914  002A1C  CFDE F089          	movff	postinc2,___lldiv@dividend
 28915  002A20  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 28916  002A24  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 28917  002A28  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 28918  002A2C  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 28919  002A2E  6F7D               	movwf	___lmul@multiplier& (0+255),b
 28920  002A30  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 28921  002A32  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 28922  002A34  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 28923  002A36  EE20 F011          	lfsr	2,17
 28924  002A3A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28925  002A3C  26D9               	addwf	fsr2l,f,c
 28926  002A3E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28927  002A40  22DA               	addwfc	fsr2h,f,c
 28928  002A42  CFDE F081          	movff	postinc2,___lmul@multiplicand
 28929  002A46  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 28930  002A4A  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 28931  002A4E  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 28932  002A52  EC4C  F02C         	call	___lmul	;wreg free
 28933  002A56  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 28934  002A5A  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 28935  002A5E  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 28936  002A62  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 28937  002A66  EC51  F028         	call	___lldiv	;wreg free
 28938  002A6A  0EFF               	movlw	255
 28939  002A6C  0100               	movlb	0	; () banked
 28940  002A6E  2589               	addwf	?___lldiv& (0+255),w,b
 28941  002A70  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28942  002A72  0EFF               	movlw	255
 28943  002A74  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 28944  002A76  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28945                           
 28946                           ; BSR set to: 0
 28947                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 28948  002A78  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 28949  002A7A  A4D8               	btfss	status,2,c
 28950  002A7C  D005               	goto	l633
 28951                           
 28952                           ; BSR set to: 0
 28953                           ;uart_drv.c: 152: {
 28954                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28955  002A7E  0E00               	movlw	0
 28956  002A80  6E7F               	movwf	3967,c	;volatile
 28957                           
 28958                           ; BSR set to: 0
 28959                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28960  002A82  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 28961                           
 28962                           ;uart_drv.c: 156: }
 28963  002A86  0012               	return	
 28964  002A88                     l633:
 28965                           
 28966                           ; BSR set to: 0
 28967                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 28968                           
 28969                           ; BSR set to: 0
 28970  002A88  0E02               	movlw	2
 28971  002A8A  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 28972  002A8C  A4D8               	btfss	status,2,c
 28973  002A8E  0012               	return	
 28974                           
 28975                           ; BSR set to: 0
 28976                           ;uart_drv.c: 158: {
 28977                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 28978  002A90  0E00               	movlw	0
 28979  002A92  6E7D               	movwf	3965,c	;volatile
 28980                           
 28981                           ; BSR set to: 0
 28982                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 28983  002A94  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 28984                           
 28985                           ; BSR set to: 0
 28986  002A98  0012               	return	
 28987  002A9A                     __end_of_SetUartBaudRate:
 28988                           	opt stack 0
 28989                           tosu	equ	0xFFF
 28990                           tosh	equ	0xFFE
 28991                           tosl	equ	0xFFD
 28992                           pclath	equ	0xFFA
 28993                           tblptru	equ	0xFF8
 28994                           tblptrh	equ	0xFF7
 28995                           tblptrl	equ	0xFF6
 28996                           tablat	equ	0xFF5
 28997                           prodh	equ	0xFF4
 28998                           prodl	equ	0xFF3
 28999                           intcon	equ	0xFF2
 29000                           intcon2	equ	0xFF1
 29001                           intcon3	equ	0xFF0
 29002                           indf0	equ	0xFEF
 29003                           postinc0	equ	0xFEE
 29004                           plusw0	equ	0xFEB
 29005                           fsr0h	equ	0xFEA
 29006                           fsr0l	equ	0xFE9
 29007                           wreg	equ	0xFE8
 29008                           indf1	equ	0xFE7
 29009                           postinc1	equ	0xFE6
 29010                           postdec1	equ	0xFE5
 29011                           plusw1	equ	0xFE3
 29012                           fsr1h	equ	0xFE2
 29013                           fsr1l	equ	0xFE1
 29014                           indf2	equ	0xFDF
 29015                           postinc2	equ	0xFDE
 29016                           postdec2	equ	0xFDD
 29017                           plusw2	equ	0xFDB
 29018                           fsr2h	equ	0xFDA
 29019                           fsr2l	equ	0xFD9
 29020                           status	equ	0xFD8
 29021                           
 29022 ;; *************** function ___lmul *****************
 29023 ;; Defined at:
 29024 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29025 ;; Parameters:    Size  Location     Type
 29026 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29027 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29028 ;; Auto vars:     Size  Location     Type
 29029 ;;  product         4   37[BANK0 ] unsigned long 
 29030 ;; Return value:  Size  Location     Type
 29031 ;;                  4   29[BANK0 ] unsigned long 
 29032 ;; Registers used:
 29033 ;;		wreg, status,2, status,0
 29034 ;; Tracked objects:
 29035 ;;		On entry : 0/0
 29036 ;;		On exit  : 0/0
 29037 ;;		Unchanged: 0/0
 29038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29039 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29040 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29042 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29043 ;;Total ram usage:       12 bytes
 29044 ;; Hardware stack levels used:    1
 29045 ;; Hardware stack levels required when called:   11
 29046 ;; This function calls:
 29047 ;;		Nothing
 29048 ;; This function is called by:
 29049 ;;		_Tmr_TmrBPrSet
 29050 ;;		_SetUartBaudRate
 29051 ;;		_strtol
 29052 ;; This function uses a non-reentrant model
 29053 ;;
 29054                           
 29055                           	psect	text137
 29056  005898                     __ptext137:
 29057                           	opt stack 0
 29058  005898                     ___lmul:
 29059                           	opt stack 15
 29060                           
 29061                           ; BSR set to: 0
 29062                           ;incstack = 0
 29063  005898  0E00               	movlw	0
 29064  00589A  0100               	movlb	0	; () banked
 29065  00589C  6F85               	movwf	___lmul@product& (0+255),b
 29066  00589E  0E00               	movlw	0
 29067  0058A0  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29068  0058A2  0E00               	movlw	0
 29069  0058A4  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29070  0058A6  0E00               	movlw	0
 29071  0058A8  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29072  0058AA                     
 29073                           ; BSR set to: 0
 29074                           
 29075                           ; BSR set to: 0
 29076  0058AA  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29077  0058AC  D008               	goto	l2904
 29078                           
 29079                           ; BSR set to: 0
 29080  0058AE  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29081  0058B0  2785               	addwf	___lmul@product& (0+255),f,b
 29082  0058B2  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29083  0058B4  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29084  0058B6  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29085  0058B8  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29086  0058BA  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29087  0058BC  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29088  0058BE                     l2904:
 29089                           
 29090                           ; BSR set to: 0
 29091                           
 29092                           ; BSR set to: 0
 29093  0058BE  90D8               	bcf	status,0,c
 29094  0058C0  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29095  0058C2  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29096  0058C4  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29097  0058C6  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29098                           
 29099                           ; BSR set to: 0
 29100  0058C8  90D8               	bcf	status,0,c
 29101  0058CA  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29102  0058CC  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29103  0058CE  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29104  0058D0  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29105  0058D2  517D               	movf	___lmul@multiplier& (0+255),w,b
 29106  0058D4  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29107  0058D6  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29108  0058D8  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29109  0058DA  A4D8               	btfss	status,2,c
 29110  0058DC  D7E6               	goto	l2903
 29111                           
 29112                           ; BSR set to: 0
 29113  0058DE  C085  F07D         	movff	___lmul@product,?___lmul
 29114  0058E2  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29115  0058E6  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29116  0058EA  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29117                           
 29118                           ; BSR set to: 0
 29119  0058EE  0012               	return		;funcret
 29120  0058F0                     __end_of___lmul:
 29121                           	opt stack 0
 29122                           tosu	equ	0xFFF
 29123                           tosh	equ	0xFFE
 29124                           tosl	equ	0xFFD
 29125                           pclath	equ	0xFFA
 29126                           tblptru	equ	0xFF8
 29127                           tblptrh	equ	0xFF7
 29128                           tblptrl	equ	0xFF6
 29129                           tablat	equ	0xFF5
 29130                           prodh	equ	0xFF4
 29131                           prodl	equ	0xFF3
 29132                           intcon	equ	0xFF2
 29133                           intcon2	equ	0xFF1
 29134                           intcon3	equ	0xFF0
 29135                           indf0	equ	0xFEF
 29136                           postinc0	equ	0xFEE
 29137                           plusw0	equ	0xFEB
 29138                           fsr0h	equ	0xFEA
 29139                           fsr0l	equ	0xFE9
 29140                           wreg	equ	0xFE8
 29141                           indf1	equ	0xFE7
 29142                           postinc1	equ	0xFE6
 29143                           postdec1	equ	0xFE5
 29144                           plusw1	equ	0xFE3
 29145                           fsr1h	equ	0xFE2
 29146                           fsr1l	equ	0xFE1
 29147                           indf2	equ	0xFDF
 29148                           postinc2	equ	0xFDE
 29149                           postdec2	equ	0xFDD
 29150                           plusw2	equ	0xFDB
 29151                           fsr2h	equ	0xFDA
 29152                           fsr2l	equ	0xFD9
 29153                           status	equ	0xFD8
 29154                           
 29155 ;; *************** function _UartSetConfigLow *****************
 29156 ;; Defined at:
 29157 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29158 ;; Parameters:    Size  Location     Type
 29159 ;;		None
 29160 ;; Auto vars:     Size  Location     Type
 29161 ;;		None
 29162 ;; Return value:  Size  Location     Type
 29163 ;;                  1    wreg      void 
 29164 ;; Registers used:
 29165 ;;		wreg, status,2
 29166 ;; Tracked objects:
 29167 ;;		On entry : 0/0
 29168 ;;		On exit  : 0/0
 29169 ;;		Unchanged: 0/0
 29170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29175 ;;Total ram usage:        0 bytes
 29176 ;; Hardware stack levels used:    1
 29177 ;; Hardware stack levels required when called:   11
 29178 ;; This function calls:
 29179 ;;		Nothing
 29180 ;; This function is called by:
 29181 ;;		_ConfigureModem
 29182 ;; This function uses a non-reentrant model
 29183 ;;
 29184                           
 29185                           	psect	text138
 29186  0058F0                     __ptext138:
 29187                           	opt stack 0
 29188  0058F0                     _UartSetConfigLow:
 29189                           	opt stack 15
 29190                           
 29191                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29192                           
 29193                           ; BSR set to: 0
 29194                           ;incstack = 0
 29195  0058F0  0E01               	movlw	1
 29196  0058F2  0103               	movlb	3	; () banked
 29197  0058F4  6F1A               	movwf	_UartConfig& (0+255),b
 29198                           
 29199                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29200  0058F6  0E00               	movlw	0
 29201  0058F8  6F1B               	movwf	(_UartConfig+1)& (0+255),b
 29202                           
 29203                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29204  0058FA  0E00               	movlw	0
 29205  0058FC  6F1C               	movwf	(_UartConfig+2)& (0+255),b
 29206                           
 29207                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29208  0058FE  0E00               	movlw	0
 29209  005900  6F1D               	movwf	(_UartConfig+3)& (0+255),b
 29210                           
 29211                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29212  005902  0E00               	movlw	0
 29213  005904  6F1E               	movwf	(_UartConfig+4)& (0+255),b
 29214                           
 29215                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29216  005906  0E00               	movlw	0
 29217  005908  6F1F               	movwf	(_UartConfig+5)& (0+255),b
 29218                           
 29219                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29220  00590A  0E01               	movlw	1
 29221  00590C  6F20               	movwf	(_UartConfig+6)& (0+255),b
 29222                           
 29223                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29224  00590E  0E01               	movlw	1
 29225  005910  6F21               	movwf	(_UartConfig+7)& (0+255),b
 29226                           
 29227                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29228  005912  0E00               	movlw	0
 29229  005914  6F22               	movwf	(_UartConfig+8)& (0+255),b
 29230                           
 29231                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29232  005916  0E00               	movlw	0
 29233  005918  6F23               	movwf	(_UartConfig+9)& (0+255),b
 29234                           
 29235                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29236  00591A  0E00               	movlw	0
 29237  00591C  6F24               	movwf	(_UartConfig+10)& (0+255),b
 29238                           
 29239                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29240  00591E  0E00               	movlw	0
 29241  005920  6F25               	movwf	(_UartConfig+11)& (0+255),b
 29242                           
 29243                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29244  005922  0E01               	movlw	1
 29245  005924  6F26               	movwf	(_UartConfig+12)& (0+255),b
 29246                           
 29247                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29248  005926  0E00               	movlw	0
 29249  005928  6F27               	movwf	(_UartConfig+13)& (0+255),b
 29250  00592A  0E6C               	movlw	108
 29251  00592C  6F28               	movwf	(_UartConfig+14)& (0+255),b
 29252  00592E  0EDC               	movlw	220
 29253  005930  6F29               	movwf	(_UartConfig+15)& (0+255),b
 29254  005932  0E02               	movlw	2
 29255  005934  6F2A               	movwf	(_UartConfig+16)& (0+255),b
 29256                           
 29257                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29258  005936  0E80               	movlw	128
 29259  005938  6F2B               	movwf	(_UartConfig+17)& (0+255),b
 29260  00593A  0E25               	movlw	37
 29261  00593C  6F2C               	movwf	(_UartConfig+18)& (0+255),b
 29262  00593E  0E00               	movlw	0
 29263  005940  6F2D               	movwf	(_UartConfig+19)& (0+255),b
 29264  005942  0E00               	movlw	0
 29265  005944  6F2E               	movwf	(_UartConfig+20)& (0+255),b
 29266                           
 29267                           ; BSR set to: 3
 29268  005946  0012               	return		;funcret
 29269  005948                     __end_of_UartSetConfigLow:
 29270                           	opt stack 0
 29271                           tosu	equ	0xFFF
 29272                           tosh	equ	0xFFE
 29273                           tosl	equ	0xFFD
 29274                           pclath	equ	0xFFA
 29275                           tblptru	equ	0xFF8
 29276                           tblptrh	equ	0xFF7
 29277                           tblptrl	equ	0xFF6
 29278                           tablat	equ	0xFF5
 29279                           prodh	equ	0xFF4
 29280                           prodl	equ	0xFF3
 29281                           intcon	equ	0xFF2
 29282                           intcon2	equ	0xFF1
 29283                           intcon3	equ	0xFF0
 29284                           indf0	equ	0xFEF
 29285                           postinc0	equ	0xFEE
 29286                           plusw0	equ	0xFEB
 29287                           fsr0h	equ	0xFEA
 29288                           fsr0l	equ	0xFE9
 29289                           wreg	equ	0xFE8
 29290                           indf1	equ	0xFE7
 29291                           postinc1	equ	0xFE6
 29292                           postdec1	equ	0xFE5
 29293                           plusw1	equ	0xFE3
 29294                           fsr1h	equ	0xFE2
 29295                           fsr1l	equ	0xFE1
 29296                           indf2	equ	0xFDF
 29297                           postinc2	equ	0xFDE
 29298                           postdec2	equ	0xFDD
 29299                           plusw2	equ	0xFDB
 29300                           fsr2h	equ	0xFDA
 29301                           fsr2l	equ	0xFD9
 29302                           status	equ	0xFD8
 29303                           
 29304 ;; *************** function _CheckModem *****************
 29305 ;; Defined at:
 29306 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29307 ;; Parameters:    Size  Location     Type
 29308 ;;		None
 29309 ;; Auto vars:     Size  Location     Type
 29310 ;;		None
 29311 ;; Return value:  Size  Location     Type
 29312 ;;                  1    wreg      void 
 29313 ;; Registers used:
 29314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29315 ;; Tracked objects:
 29316 ;;		On entry : 0/0
 29317 ;;		On exit  : 0/0
 29318 ;;		Unchanged: 0/0
 29319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29324 ;;Total ram usage:        0 bytes
 29325 ;; Hardware stack levels used:    1
 29326 ;; Hardware stack levels required when called:   14
 29327 ;; This function calls:
 29328 ;;		_GenerateEvt
 29329 ;;		_OsTmr_GetTimerStatus
 29330 ;;		_OsTmr_StartTimer
 29331 ;;		_ReceiveEvt
 29332 ;;		_Uart_WriteConstString
 29333 ;; This function is called by:
 29334 ;;		_Mdm_MainTask
 29335 ;; This function uses a non-reentrant model
 29336 ;;
 29337                           
 29338                           	psect	text139
 29339  002582                     __ptext139:
 29340                           	opt stack 0
 29341  002582                     _CheckModem:
 29342                           	opt stack 13
 29343                           
 29344                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 29345                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 29346                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 29347                           
 29348                           ; BSR set to: 3
 29349                           ;incstack = 0
 29350  002582  D096               	goto	l982
 29351  002584                     
 29352                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 29353  002584  0EF3               	movlw	low CheckModem@Timeout
 29354  002586  0100               	movlb	0	; () banked
 29355  002588  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29356  00258A  0E03               	movlw	high CheckModem@Timeout
 29357  00258C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29358  00258E  0ED0               	movlw	208
 29359  002590  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29360  002592  0E07               	movlw	7
 29361  002594  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29362  002596  0E00               	movlw	0
 29363  002598  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29364  00259A  0E00               	movlw	0
 29365  00259C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29366  00259E  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 29367                           
 29368                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 29369  0025A2  0E01               	movlw	1
 29370  0025A4  6E28               	movwf	CheckModem@CheckMdmSts,c
 29371                           
 29372                           ;mdm_gsm_gprs.c: 295: break;
 29373  0025A6  0012               	return	
 29374  0025A8                     
 29375                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29376  0025A8  0EF3               	movlw	low CheckModem@Timeout
 29377  0025AA  0100               	movlb	0	; () banked
 29378  0025AC  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29379  0025AE  0E03               	movlw	high CheckModem@Timeout
 29380  0025B0  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29381  0025B2  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29382  0025B6  06E8               	decf	wreg,f,c
 29383  0025B8  A4D8               	btfss	status,2,c
 29384  0025BA  0012               	return	
 29385                           
 29386                           ;mdm_gsm_gprs.c: 300: {
 29387                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 29388  0025BC  0E02               	movlw	2
 29389  0025BE  6E28               	movwf	CheckModem@CheckMdmSts,c
 29390                           
 29391                           ;mdm_gsm_gprs.c: 303: }
 29392                           ;mdm_gsm_gprs.c: 304: break;
 29393  0025C0  0012               	return	
 29394  0025C2                     
 29395                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 29396  0025C2  0EE6               	movlw	low STR_1
 29397  0025C4  0100               	movlb	0	; () banked
 29398  0025C6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29399  0025C8  0EFF               	movlw	high STR_1
 29400  0025CA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29401  0025CC  0E01               	movlw	1
 29402  0025CE  EC49  F030         	call	_Uart_WriteConstString
 29403                           
 29404                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 29405  0025D2  0EF3               	movlw	low CheckModem@Timeout
 29406  0025D4  0100               	movlb	0	; () banked
 29407  0025D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29408  0025D8  0E03               	movlw	high CheckModem@Timeout
 29409  0025DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29410  0025DC  0ED0               	movlw	208
 29411  0025DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29412  0025E0  0E07               	movlw	7
 29413  0025E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29414  0025E4  0E00               	movlw	0
 29415  0025E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29416  0025E8  0E00               	movlw	0
 29417  0025EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29418  0025EC  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 29419                           
 29420                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 29421  0025F0  0E03               	movlw	3
 29422  0025F2  6E28               	movwf	CheckModem@CheckMdmSts,c
 29423                           
 29424                           ;mdm_gsm_gprs.c: 313: break;
 29425  0025F4  0012               	return	
 29426  0025F6                     
 29427                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 29428  0025F6  0E3A               	movlw	low _NewStringReceived
 29429  0025F8  0100               	movlb	0	; () banked
 29430  0025FA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29431  0025FC  0E00               	movlw	high _NewStringReceived
 29432  0025FE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29433  002600  EC92  F032         	call	_ReceiveEvt	;wreg free
 29434  002604  0900               	iorlw	0
 29435  002606  B4D8               	btfsc	status,2,c
 29436  002608  D02F               	goto	l989
 29437                           
 29438                           ;mdm_gsm_gprs.c: 318: {
 29439                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 29440  00260A  CC58  FFE8         	movff	_RxBuffer,wreg
 29441  00260E  0A4F               	xorlw	79
 29442  002610  A4D8               	btfss	status,2,c
 29443  002612  D005               	goto	u14620
 29444  002614  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29445  002618  0A4B               	xorlw	75
 29446  00261A  B4D8               	btfsc	status,2,c
 29447  00261C  D00A               	goto	u14640
 29448  00261E                     u14620:
 29449  00261E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29450  002622  0A4F               	xorlw	79
 29451  002624  A4D8               	btfss	status,2,c
 29452  002626  0012               	return	
 29453  002628  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 29454  00262C  0A4B               	xorlw	75
 29455  00262E  A4D8               	btfss	status,2,c
 29456  002630  0012               	return	
 29457  002632                     u14640:
 29458                           
 29459                           ;mdm_gsm_gprs.c: 321: {
 29460                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 29461  002632  0E02               	movlw	2
 29462  002634  0100               	movlb	0	; () banked
 29463  002636  6FD2               	movwf	_MdmStatus& (0+255),b
 29464                           
 29465                           ; BSR set to: 0
 29466                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 29467  002638  0EE2               	movlw	low _MdmOnOffPulseRequest
 29468  00263A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29469  00263C  0E00               	movlw	high _MdmOnOffPulseRequest
 29470  00263E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29471  002640  EC83  F034         	call	_GenerateEvt	;wreg free
 29472                           
 29473                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 29474  002644  0EF3               	movlw	low CheckModem@Timeout
 29475  002646  0100               	movlb	0	; () banked
 29476  002648  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29477  00264A  0E03               	movlw	high CheckModem@Timeout
 29478  00264C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29479  00264E  0EE8               	movlw	232
 29480  002650  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29481  002652  0E03               	movlw	3
 29482  002654  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29483  002656  0E00               	movlw	0
 29484  002658  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29485  00265A  0E00               	movlw	0
 29486  00265C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29487  00265E  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 29488                           
 29489                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 29490  002662  0E04               	movlw	4
 29491  002664  6E28               	movwf	CheckModem@CheckMdmSts,c
 29492                           
 29493                           ;mdm_gsm_gprs.c: 329: }
 29494                           ;mdm_gsm_gprs.c: 330: }
 29495  002666  0012               	return	
 29496  002668                     l989:
 29497                           
 29498                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29499  002668  0EF3               	movlw	low CheckModem@Timeout
 29500  00266A  0100               	movlb	0	; () banked
 29501  00266C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29502  00266E  0E03               	movlw	high CheckModem@Timeout
 29503  002670  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29504  002672  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29505  002676  06E8               	decf	wreg,f,c
 29506  002678  A4D8               	btfss	status,2,c
 29507  00267A  0012               	return	
 29508                           
 29509                           ;mdm_gsm_gprs.c: 332: {
 29510                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 29511  00267C  0E00               	movlw	0
 29512  00267E  0100               	movlb	0	; () banked
 29513  002680  6FD2               	movwf	_MdmStatus& (0+255),b
 29514                           
 29515                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 29516  002682  0E01               	movlw	1
 29517  002684  6E29               	movwf	_ComChecCompleted,c
 29518                           
 29519                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 29520  002686  0E05               	movlw	5
 29521  002688  6E28               	movwf	CheckModem@CheckMdmSts,c
 29522                           
 29523                           ; BSR set to: 0
 29524                           ;mdm_gsm_gprs.c: 343: }
 29525                           ;mdm_gsm_gprs.c: 344: break;
 29526                           
 29527                           ; BSR set to: 0
 29528                           
 29529                           ;mdm_gsm_gprs.c: 340: else
 29530                           ;mdm_gsm_gprs.c: 341: {
 29531                           
 29532                           ; BSR set to: 0
 29533                           
 29534                           ;mdm_gsm_gprs.c: 339: }
 29535  00268A  0012               	return	
 29536  00268C                     
 29537                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29538                           
 29539                           ; BSR set to: 0
 29540  00268C  0EF3               	movlw	low CheckModem@Timeout
 29541  00268E  0100               	movlb	0	; () banked
 29542  002690  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29543  002692  0E03               	movlw	high CheckModem@Timeout
 29544  002694  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29545  002696  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 29546  00269A  06E8               	decf	wreg,f,c
 29547  00269C  A4D8               	btfss	status,2,c
 29548  00269E  0012               	return	
 29549                           
 29550                           ;mdm_gsm_gprs.c: 349: {
 29551                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 29552  0026A0  0E00               	movlw	0
 29553  0026A2  0100               	movlb	0	; () banked
 29554  0026A4  6FD2               	movwf	_MdmStatus& (0+255),b
 29555                           
 29556                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 29557  0026A6  0E01               	movlw	1
 29558  0026A8  6E29               	movwf	_ComChecCompleted,c
 29559                           
 29560                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 29561  0026AA  0E05               	movlw	5
 29562  0026AC  6E28               	movwf	CheckModem@CheckMdmSts,c
 29563                           
 29564                           ; BSR set to: 0
 29565                           ;mdm_gsm_gprs.c: 365: }
 29566                           
 29567                           ; BSR set to: 0
 29568                           ;mdm_gsm_gprs.c: 364: break;
 29569                           
 29570                           ;mdm_gsm_gprs.c: 363: default:
 29571                           
 29572                           ; BSR set to: 0
 29573                           ;mdm_gsm_gprs.c: 361: break;
 29574                           
 29575                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 29576                           
 29577                           ; BSR set to: 0
 29578                           ;mdm_gsm_gprs.c: 356: }
 29579                           ;mdm_gsm_gprs.c: 357: break;
 29580  0026AE  0012               	return	
 29581  0026B0                     l982:
 29582                           
 29583                           ; BSR set to: 0
 29584  0026B0  5028               	movf	CheckModem@CheckMdmSts,w,c
 29585                           
 29586                           ; Switch size 1, requested type "space"
 29587                           ; Number of cases is 6, Range of values is 0 to 5
 29588                           ; switch strategies available:
 29589                           ; Name         Instructions Cycles
 29590                           ; simple_byte           19    10 (average)
 29591                           ;	Chosen strategy is simple_byte
 29592  0026B2  0A00               	xorlw	0	; case 0
 29593  0026B4  B4D8               	btfsc	status,2,c
 29594  0026B6  D766               	goto	l983
 29595  0026B8  0A01               	xorlw	1	; case 1
 29596  0026BA  B4D8               	btfsc	status,2,c
 29597  0026BC  D775               	goto	l985
 29598  0026BE  0A03               	xorlw	3	; case 2
 29599  0026C0  B4D8               	btfsc	status,2,c
 29600  0026C2  D77F               	goto	l987
 29601  0026C4  0A01               	xorlw	1	; case 3
 29602  0026C6  B4D8               	btfsc	status,2,c
 29603  0026C8  D796               	goto	l988
 29604  0026CA  0A07               	xorlw	7	; case 4
 29605  0026CC  B4D8               	btfsc	status,2,c
 29606  0026CE  D7DE               	goto	l998
 29607  0026D0  0A01               	xorlw	1	; case 5
 29608  0026D2  0012               	return	
 29609  0026D4                     __end_of_CheckModem:
 29610                           	opt stack 0
 29611                           tosu	equ	0xFFF
 29612                           tosh	equ	0xFFE
 29613                           tosl	equ	0xFFD
 29614                           pclath	equ	0xFFA
 29615                           tblptru	equ	0xFF8
 29616                           tblptrh	equ	0xFF7
 29617                           tblptrl	equ	0xFF6
 29618                           tablat	equ	0xFF5
 29619                           prodh	equ	0xFF4
 29620                           prodl	equ	0xFF3
 29621                           intcon	equ	0xFF2
 29622                           intcon2	equ	0xFF1
 29623                           intcon3	equ	0xFF0
 29624                           indf0	equ	0xFEF
 29625                           postinc0	equ	0xFEE
 29626                           plusw0	equ	0xFEB
 29627                           fsr0h	equ	0xFEA
 29628                           fsr0l	equ	0xFE9
 29629                           wreg	equ	0xFE8
 29630                           indf1	equ	0xFE7
 29631                           postinc1	equ	0xFE6
 29632                           postdec1	equ	0xFE5
 29633                           plusw1	equ	0xFE3
 29634                           fsr1h	equ	0xFE2
 29635                           fsr1l	equ	0xFE1
 29636                           indf2	equ	0xFDF
 29637                           postinc2	equ	0xFDE
 29638                           postdec2	equ	0xFDD
 29639                           plusw2	equ	0xFDB
 29640                           fsr2h	equ	0xFDA
 29641                           fsr2l	equ	0xFD9
 29642                           status	equ	0xFD8
 29643                           
 29644 ;; *************** function _MdmCntSm *****************
 29645 ;; Defined at:
 29646 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29647 ;; Parameters:    Size  Location     Type
 29648 ;;		None
 29649 ;; Auto vars:     Size  Location     Type
 29650 ;;		None
 29651 ;; Return value:  Size  Location     Type
 29652 ;;                  1    wreg      void 
 29653 ;; Registers used:
 29654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29655 ;; Tracked objects:
 29656 ;;		On entry : 0/0
 29657 ;;		On exit  : 0/0
 29658 ;;		Unchanged: 0/0
 29659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29664 ;;Total ram usage:        0 bytes
 29665 ;; Hardware stack levels used:    1
 29666 ;; Hardware stack levels required when called:   12
 29667 ;; This function calls:
 29668 ;;		_InitModemInterface
 29669 ;;		_ReceiveEvt
 29670 ;; This function is called by:
 29671 ;;		_Mdm_DrvMainFn
 29672 ;; This function uses a non-reentrant model
 29673 ;;
 29674                           
 29675                           	psect	text140
 29676  0045F8                     __ptext140:
 29677                           	opt stack 0
 29678  0045F8                     _MdmCntSm:
 29679                           	opt stack 15
 29680                           
 29681                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 29682                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 29683                           ;mdm_drv.c: 204: switch (MdmCntState)
 29684                           
 29685                           ;incstack = 0
 29686  0045F8  D045               	goto	l315
 29687  0045FA                     
 29688                           ;mdm_drv.c: 208: InitModemInterface();
 29689  0045FA  EC40  F035         	call	_InitModemInterface	;wreg free
 29690                           
 29691                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 29692  0045FE  0E01               	movlw	1
 29693  004600  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29694                           
 29695                           ;mdm_drv.c: 211: break;
 29696  004602  0012               	return	
 29697  004604                     
 29698                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 29699  004604  0EE2               	movlw	low _MdmOnOffPulseRequest
 29700  004606  0100               	movlb	0	; () banked
 29701  004608  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29702  00460A  0E00               	movlw	high _MdmOnOffPulseRequest
 29703  00460C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29704  00460E  EC92  F032         	call	_ReceiveEvt	;wreg free
 29705  004612  0900               	iorlw	0
 29706  004614  B4D8               	btfsc	status,2,c
 29707  004616  D009               	goto	l319
 29708                           
 29709                           ;mdm_drv.c: 216: {
 29710                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 29711  004618  0E02               	movlw	2
 29712  00461A  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29713                           
 29714                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 29715  00461C  8284               	bsf	3972,1,c	;volatile
 29716                           
 29717                           ;mdm_drv.c: 222: Counter = 0;
 29718  00461E  0E00               	movlw	0
 29719  004620  0102               	movlb	2	; () banked
 29720  004622  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29721  004624  0E00               	movlw	0
 29722  004626  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 29723                           
 29724                           ;mdm_drv.c: 223: }
 29725  004628  0012               	return	
 29726  00462A                     l319:
 29727                           
 29728                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 29729                           
 29730                           ; BSR set to: 2
 29731  00462A  0E3B               	movlw	low _MdmResetRequest
 29732  00462C  0100               	movlb	0	; () banked
 29733  00462E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29734  004630  0E00               	movlw	high _MdmResetRequest
 29735  004632  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29736  004634  EC92  F032         	call	_ReceiveEvt	;wreg free
 29737  004638  0900               	iorlw	0
 29738  00463A  B4D8               	btfsc	status,2,c
 29739  00463C  0012               	return	
 29740                           
 29741                           ;mdm_drv.c: 225: {
 29742                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 29743  00463E  0E03               	movlw	3
 29744  004640  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29745                           
 29746                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 29747  004642  8084               	bsf	3972,0,c	;volatile
 29748                           
 29749                           ;mdm_drv.c: 231: Counter = 0;
 29750  004644  0E00               	movlw	0
 29751  004646  0102               	movlb	2	; () banked
 29752  004648  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29753  00464A  0E00               	movlw	0
 29754  00464C  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 29755                           
 29756                           ; BSR set to: 2
 29757                           ;mdm_drv.c: 236: }
 29758                           ;mdm_drv.c: 237: break;
 29759                           
 29760                           ; BSR set to: 2
 29761                           
 29762                           ;mdm_drv.c: 233: else
 29763                           ;mdm_drv.c: 234: {
 29764                           
 29765                           ; BSR set to: 2
 29766                           
 29767                           ;mdm_drv.c: 232: }
 29768  00464E  0012               	return	
 29769  004650                     
 29770                           ;mdm_drv.c: 241: Counter++;
 29771                           
 29772                           ; BSR set to: 2
 29773  004650  0102               	movlb	2	; () banked
 29774  004652  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 29775  004654  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 29776                           
 29777                           ; BSR set to: 2
 29778                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 29779  004656  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 29780  004658  E104               	bnz	u14540
 29781  00465A  0E96               	movlw	150
 29782  00465C  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 29783  00465E  A0D8               	btfss	status,0,c
 29784  004660  0012               	return	
 29785  004662                     u14540:
 29786                           
 29787                           ; BSR set to: 2
 29788                           ;mdm_drv.c: 244: {
 29789                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 29790  004662  9284               	bcf	3972,1,c	;volatile
 29791                           
 29792                           ; BSR set to: 2
 29793                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 29794  004664  0E01               	movlw	1
 29795  004666  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29796                           
 29797                           ; BSR set to: 2
 29798                           ;mdm_drv.c: 249: }
 29799                           ;mdm_drv.c: 250: break;
 29800  004668  0012               	return	
 29801  00466A                     
 29802                           ;mdm_drv.c: 254: Counter++;
 29803                           
 29804                           ; BSR set to: 2
 29805  00466A  0102               	movlb	2	; () banked
 29806  00466C  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 29807  00466E  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 29808                           
 29809                           ; BSR set to: 2
 29810                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 29811  004670  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 29812  004672  E104               	bnz	u14550
 29813  004674  0E0A               	movlw	10
 29814  004676  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 29815  004678  A0D8               	btfss	status,0,c
 29816  00467A  0012               	return	
 29817  00467C                     u14550:
 29818                           
 29819                           ; BSR set to: 2
 29820                           ;mdm_drv.c: 257: {
 29821                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 29822  00467C  9084               	bcf	3972,0,c	;volatile
 29823                           
 29824                           ; BSR set to: 2
 29825                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 29826  00467E  0E01               	movlw	1
 29827  004680  6E2C               	movwf	MdmCntSm@MdmCntState,c
 29828                           
 29829                           ; BSR set to: 2
 29830                           ;mdm_drv.c: 267: }
 29831                           
 29832                           ; BSR set to: 2
 29833                           ;mdm_drv.c: 266: break;
 29834                           
 29835                           ;mdm_drv.c: 265: default:
 29836                           
 29837                           ; BSR set to: 2
 29838                           ;mdm_drv.c: 262: }
 29839                           ;mdm_drv.c: 263: break;
 29840  004682  0012               	return	
 29841  004684                     l315:
 29842                           
 29843                           ; BSR set to: 2
 29844  004684  502C               	movf	MdmCntSm@MdmCntState,w,c
 29845                           
 29846                           ; Switch size 1, requested type "space"
 29847                           ; Number of cases is 4, Range of values is 0 to 3
 29848                           ; switch strategies available:
 29849                           ; Name         Instructions Cycles
 29850                           ; simple_byte           13     7 (average)
 29851                           ;	Chosen strategy is simple_byte
 29852  004686  0A00               	xorlw	0	; case 0
 29853  004688  B4D8               	btfsc	status,2,c
 29854  00468A  D7B7               	goto	l316
 29855  00468C  0A01               	xorlw	1	; case 1
 29856  00468E  B4D8               	btfsc	status,2,c
 29857  004690  D7B9               	goto	l318
 29858  004692  0A03               	xorlw	3	; case 2
 29859  004694  B4D8               	btfsc	status,2,c
 29860  004696  D7DC               	goto	l323
 29861  004698  0A01               	xorlw	1	; case 3
 29862  00469A  A4D8               	btfss	status,2,c
 29863  00469C  0012               	return	
 29864  00469E  D7E5               	goto	l325
 29865  0046A0                     __end_of_MdmCntSm:
 29866                           	opt stack 0
 29867                           tosu	equ	0xFFF
 29868                           tosh	equ	0xFFE
 29869                           tosl	equ	0xFFD
 29870                           pclath	equ	0xFFA
 29871                           tblptru	equ	0xFF8
 29872                           tblptrh	equ	0xFF7
 29873                           tblptrl	equ	0xFF6
 29874                           tablat	equ	0xFF5
 29875                           prodh	equ	0xFF4
 29876                           prodl	equ	0xFF3
 29877                           intcon	equ	0xFF2
 29878                           intcon2	equ	0xFF1
 29879                           intcon3	equ	0xFF0
 29880                           indf0	equ	0xFEF
 29881                           postinc0	equ	0xFEE
 29882                           plusw0	equ	0xFEB
 29883                           fsr0h	equ	0xFEA
 29884                           fsr0l	equ	0xFE9
 29885                           wreg	equ	0xFE8
 29886                           indf1	equ	0xFE7
 29887                           postinc1	equ	0xFE6
 29888                           postdec1	equ	0xFE5
 29889                           plusw1	equ	0xFE3
 29890                           fsr1h	equ	0xFE2
 29891                           fsr1l	equ	0xFE1
 29892                           indf2	equ	0xFDF
 29893                           postinc2	equ	0xFDE
 29894                           postdec2	equ	0xFDD
 29895                           plusw2	equ	0xFDB
 29896                           fsr2h	equ	0xFDA
 29897                           fsr2l	equ	0xFD9
 29898                           status	equ	0xFD8
 29899                           
 29900 ;; *************** function _InitModemInterface *****************
 29901 ;; Defined at:
 29902 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29903 ;; Parameters:    Size  Location     Type
 29904 ;;		None
 29905 ;; Auto vars:     Size  Location     Type
 29906 ;;		None
 29907 ;; Return value:  Size  Location     Type
 29908 ;;                  1    wreg      void 
 29909 ;; Registers used:
 29910 ;;		None
 29911 ;; Tracked objects:
 29912 ;;		On entry : 0/0
 29913 ;;		On exit  : 0/0
 29914 ;;		Unchanged: 0/0
 29915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29920 ;;Total ram usage:        0 bytes
 29921 ;; Hardware stack levels used:    1
 29922 ;; Hardware stack levels required when called:   11
 29923 ;; This function calls:
 29924 ;;		Nothing
 29925 ;; This function is called by:
 29926 ;;		_MdmCntSm
 29927 ;; This function uses a non-reentrant model
 29928 ;;
 29929                           
 29930                           	psect	text141
 29931  006A80                     __ptext141:
 29932                           	opt stack 0
 29933  006A80                     _InitModemInterface:
 29934                           	opt stack 15
 29935                           
 29936                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 29937                           
 29938                           ;incstack = 0
 29939  006A80  9096               	bcf	3990,0,c	;volatile
 29940                           
 29941                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 29942  006A82  9296               	bcf	3990,1,c	;volatile
 29943                           
 29944                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 29945  006A84  8496               	bsf	3990,2,c	;volatile
 29946  006A86  0012               	return		;funcret
 29947  006A88                     __end_of_InitModemInterface:
 29948                           	opt stack 0
 29949                           tosu	equ	0xFFF
 29950                           tosh	equ	0xFFE
 29951                           tosl	equ	0xFFD
 29952                           pclath	equ	0xFFA
 29953                           tblptru	equ	0xFF8
 29954                           tblptrh	equ	0xFF7
 29955                           tblptrl	equ	0xFF6
 29956                           tablat	equ	0xFF5
 29957                           prodh	equ	0xFF4
 29958                           prodl	equ	0xFF3
 29959                           intcon	equ	0xFF2
 29960                           intcon2	equ	0xFF1
 29961                           intcon3	equ	0xFF0
 29962                           indf0	equ	0xFEF
 29963                           postinc0	equ	0xFEE
 29964                           plusw0	equ	0xFEB
 29965                           fsr0h	equ	0xFEA
 29966                           fsr0l	equ	0xFE9
 29967                           wreg	equ	0xFE8
 29968                           indf1	equ	0xFE7
 29969                           postinc1	equ	0xFE6
 29970                           postdec1	equ	0xFE5
 29971                           plusw1	equ	0xFE3
 29972                           fsr1h	equ	0xFE2
 29973                           fsr1l	equ	0xFE1
 29974                           indf2	equ	0xFDF
 29975                           postinc2	equ	0xFDE
 29976                           postdec2	equ	0xFDD
 29977                           plusw2	equ	0xFDB
 29978                           fsr2h	equ	0xFDA
 29979                           fsr2l	equ	0xFD9
 29980                           status	equ	0xFD8
 29981                           
 29982 ;; *************** function _InitGprsNetwork *****************
 29983 ;; Defined at:
 29984 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 29985 ;; Parameters:    Size  Location     Type
 29986 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 29987 ;;		 -> NULL(0), 
 29988 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 29989 ;; Auto vars:     Size  Location     Type
 29990 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 29991 ;;  Index           1   50[BANK1 ] unsigned char 
 29992 ;; Return value:  Size  Location     Type
 29993 ;;                  1    wreg      enum E8925
 29994 ;; Registers used:
 29995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29996 ;; Tracked objects:
 29997 ;;		On entry : 0/0
 29998 ;;		On exit  : 0/0
 29999 ;;		Unchanged: 0/0
 30000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30001 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30002 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30004 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30005 ;;Total ram usage:       56 bytes
 30006 ;; Hardware stack levels used:    1
 30007 ;; Hardware stack levels required when called:   14
 30008 ;; This function calls:
 30009 ;;		_ClearBuffer
 30010 ;;		_OsTmr_GetTimerStatus
 30011 ;;		_OsTmr_StartTimer
 30012 ;;		_ReceiveEvt
 30013 ;;		_StringCopy
 30014 ;;		_Uart_WriteConstString
 30015 ;;		_Uart_WriteString
 30016 ;; This function is called by:
 30017 ;;		_MdmHttp_MainTask
 30018 ;; This function uses a non-reentrant model
 30019 ;;
 30020                           
 30021                           	psect	text142
 30022  000DC8                     __ptext142:
 30023                           	opt stack 0
 30024  000DC8                     _InitGprsNetwork:
 30025                           	opt stack 13
 30026                           
 30027                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30028                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30029                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30030                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30031                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30032                           
 30033                           ;incstack = 0
 30034  000DC8  0E00               	movlw	0
 30035  000DCA  0101               	movlb	1	; () banked
 30036  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30037                           
 30038                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30039  000DCE  D154               	goto	l1219
 30040  000DD0                     
 30041                           ; BSR set to: 1
 30042                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30043                           
 30044                           ; BSR set to: 1
 30045  000DD0  0EDB               	movlw	low _InitNetwork
 30046  000DD2  0100               	movlb	0	; () banked
 30047  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30048  000DD6  0E00               	movlw	high _InitNetwork
 30049  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30050  000DDA  EC92  F032         	call	_ReceiveEvt	;wreg free
 30051  000DDE  0900               	iorlw	0
 30052  000DE0  B4D8               	btfsc	status,2,c
 30053  000DE2  D166               	goto	l1222
 30054                           
 30055                           ;mdm_gsm_gprs_http.c: 137: {
 30056                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30057  000DE4  0E01               	movlw	1
 30058  000DE6  D141               	goto	L96
 30059  000DE8                     
 30060                           ; BSR set to: 1
 30061                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30062                           
 30063                           ; BSR set to: 1
 30064  000DE8  0E89               	movlw	low STR_8
 30065  000DEA  0100               	movlb	0	; () banked
 30066  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30067  000DEE  0EFE               	movlw	high STR_8
 30068  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30069  000DF2  0E01               	movlw	1
 30070  000DF4  EC49  F030         	call	_Uart_WriteConstString
 30071                           
 30072                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30073  000DF8  0E07               	movlw	7
 30074  000DFA  0101               	movlb	1	; () banked
 30075  000DFC  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30076                           
 30077                           ; BSR set to: 1
 30078                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30079  000DFE  0E02               	movlw	2
 30080  000E00  0100               	movlb	0	; () banked
 30081  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30082                           
 30083                           ; BSR set to: 0
 30084                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30085  000E04  0EF5               	movlw	low _ConnTimeout
 30086  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30087  000E08  0E02               	movlw	high _ConnTimeout
 30088  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30089  000E0C  0E20               	movlw	32
 30090  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30091  000E10  0E4E               	movlw	78
 30092  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30093  000E14  0E00               	movlw	0
 30094  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30095  000E18  0E00               	movlw	0
 30096  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30097  000E1C  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30098  000E20  D0C7               	goto	l15538
 30099  000E22                     
 30100                           ; BSR set to: 1
 30101                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30102                           
 30103                           ; BSR set to: 1
 30104  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30105  000E24  0100               	movlb	0	; () banked
 30106  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30107  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30108  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30109  000E2C  0E00               	movlw	0
 30110  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30111  000E30  0E32               	movlw	50
 30112  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30113  000E34  ECB4  F031         	call	_ClearBuffer	;wreg free
 30114                           
 30115                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30116  000E38  0EBD               	movlw	low STR_9
 30117  000E3A  0100               	movlb	0	; () banked
 30118  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30119  000E3E  0EFE               	movlw	high STR_9
 30120  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30121  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30122  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30123  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30124  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30125  000E4A  0E00               	movlw	0
 30126  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30127  000E4E  0E14               	movlw	20
 30128  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30129  000E52  EC63  F02B         	call	_StringCopy	;wreg free
 30130                           
 30131                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30132  000E56  0E00               	movlw	0
 30133  000E58  0101               	movlb	1	; () banked
 30134  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30135  000E5C  D01C               	goto	l1225
 30136  000E5E                     
 30137                           ; BSR set to: 1
 30138                           ;mdm_gsm_gprs_http.c: 161: {
 30139                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30140                           
 30141                           ; BSR set to: 1
 30142  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30143  000E60  0D01               	mullw	1
 30144  000E62  50F3               	movf	prodl,w,c
 30145  000E64  0100               	movlb	0	; () banked
 30146  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30147  000E68  6ED9               	movwf	fsr2l,c
 30148  000E6A  50F4               	movf	prodh,w,c
 30149  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30150  000E6E  6EDA               	movwf	fsr2h,c
 30151  000E70  0101               	movlb	1	; () banked
 30152  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30153  000E74  0100               	movlb	0	; () banked
 30154  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30155  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30156  000E7A  0E14               	movlw	20
 30157  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30158  000E7E  0E00               	movlw	0
 30159  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30160  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30161  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30162  000E86  6EE1               	movwf	fsr1l,c
 30163  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30164  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30165  000E8C  6EE2               	movwf	fsr1h,c
 30166  000E8E  CFDF FFE7          	movff	indf2,indf1
 30167                           
 30168                           ; BSR set to: 0
 30169  000E92  0101               	movlb	1	; () banked
 30170  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30171  000E96                     l1225:
 30172                           
 30173                           ; BSR set to: 1
 30174                           
 30175                           ; BSR set to: 1
 30176  000E96  0100               	movlb	0	; () banked
 30177  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30178  000E9A  0101               	movlb	1	; () banked
 30179  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30180  000E9E  A0D8               	btfss	status,0,c
 30181  000EA0  D7DE               	goto	l1226
 30182                           
 30183                           ; BSR set to: 1
 30184                           ;mdm_gsm_gprs_http.c: 163: }
 30185                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30186                           
 30187                           ; BSR set to: 1
 30188  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30189  000EA4  0100               	movlb	0	; () banked
 30190  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30191  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30192  000EAA  0E14               	movlw	20
 30193  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30194  000EAE  0E00               	movlw	0
 30195  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30196  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30197  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30198  000EB6  6ED9               	movwf	fsr2l,c
 30199  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30200  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30201  000EBC  6EDA               	movwf	fsr2h,c
 30202  000EBE  0E22               	movlw	34
 30203  000EC0  6EDF               	movwf	indf2,c
 30204                           
 30205                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30206  000EC2  0101               	movlb	1	; () banked
 30207  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30208  000EC6  0100               	movlb	0	; () banked
 30209  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30210  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30211  000ECC  0E15               	movlw	21
 30212  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30213  000ED0  0E00               	movlw	0
 30214  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30215  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30216  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30217  000ED8  6ED9               	movwf	fsr2l,c
 30218  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30219  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30220  000EDE  6EDA               	movwf	fsr2h,c
 30221  000EE0  0E0D               	movlw	13
 30222  000EE2  6EDF               	movwf	indf2,c
 30223                           
 30224                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30225  000EE4  0101               	movlb	1	; () banked
 30226  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30227  000EE8  0100               	movlb	0	; () banked
 30228  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30229  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30230  000EEE  0E16               	movlw	22
 30231  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30232  000EF2  0E00               	movlw	0
 30233  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30234  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30235  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30236  000EFA  6ED9               	movwf	fsr2l,c
 30237  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30238  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30239  000F00  6EDA               	movwf	fsr2h,c
 30240  000F02  0E00               	movlw	0
 30241  000F04  6EDF               	movwf	indf2,c
 30242                           
 30243                           ; BSR set to: 0
 30244                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30245  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30246  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30247  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30248  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30249  000F0E  0E01               	movlw	1
 30250  000F10  ECE9  F030         	call	_Uart_WriteString
 30251                           
 30252                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30253  000F14  0E07               	movlw	7
 30254  000F16  0101               	movlb	1	; () banked
 30255  000F18  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30256                           
 30257                           ; BSR set to: 1
 30258                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30259  000F1A  0E03               	movlw	3
 30260  000F1C  0100               	movlb	0	; () banked
 30261  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30265  000F20  0EF5               	movlw	low _ConnTimeout
 30266  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30267  000F24  0E02               	movlw	high _ConnTimeout
 30268  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30269  000F28  0E20               	movlw	32
 30270  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30271  000F2C  0E4E               	movlw	78
 30272  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30273  000F30  0E00               	movlw	0
 30274  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30275  000F34  0E00               	movlw	0
 30276  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30277  000F38  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30278  000F3C  D039               	goto	l15538
 30279  000F3E                     
 30280                           ; BSR set to: 1
 30281                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30282                           
 30283                           ; BSR set to: 1
 30284  000F3E  0E4B               	movlw	low STR_10
 30285  000F40  0100               	movlb	0	; () banked
 30286  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30287  000F44  0EFF               	movlw	high STR_10
 30288  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30289  000F48  0E01               	movlw	1
 30290  000F4A  EC49  F030         	call	_Uart_WriteConstString
 30291                           
 30292                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30293  000F4E  0E07               	movlw	7
 30294  000F50  0101               	movlb	1	; () banked
 30295  000F52  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30296                           
 30297                           ; BSR set to: 1
 30298                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30299  000F54  0E05               	movlw	5
 30300  000F56  0100               	movlb	0	; () banked
 30301  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30302                           
 30303                           ; BSR set to: 0
 30304                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30305  000F5A  0EF5               	movlw	low _ConnTimeout
 30306  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30307  000F5E  0E02               	movlw	high _ConnTimeout
 30308  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30309  000F62  0E20               	movlw	32
 30310  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30311  000F66  0E4E               	movlw	78
 30312  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30313  000F6A  0E00               	movlw	0
 30314  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30315  000F6E  0E00               	movlw	0
 30316  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30317  000F72  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30318  000F76  D01C               	goto	l15538
 30319  000F78                     
 30320                           ; BSR set to: 1
 30321                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 30322                           
 30323                           ; BSR set to: 1
 30324  000F78  0E59               	movlw	low STR_11
 30325  000F7A  0100               	movlb	0	; () banked
 30326  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30327  000F7E  0EFF               	movlw	high STR_11
 30328  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30329  000F82  0E01               	movlw	1
 30330  000F84  EC49  F030         	call	_Uart_WriteConstString
 30331                           
 30332                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 30333  000F88  0E08               	movlw	8
 30334  000F8A  0101               	movlb	1	; () banked
 30335  000F8C  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30336                           
 30337                           ; BSR set to: 1
 30338                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 30339  000F8E  0E05               	movlw	5
 30340  000F90  0100               	movlb	0	; () banked
 30341  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30342                           
 30343                           ; BSR set to: 0
 30344                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 30345  000F94  0EF5               	movlw	low _ConnTimeout
 30346  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30347  000F98  0E02               	movlw	high _ConnTimeout
 30348  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30349  000F9C  0E20               	movlw	32
 30350  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30351  000FA0  0E4E               	movlw	78
 30352  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30353  000FA4  0E00               	movlw	0
 30354  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30355  000FA8  0E00               	movlw	0
 30356  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30357  000FAC  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30358  000FB0                     l15538:
 30359                           
 30360                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 30361  000FB0  0E01               	movlw	1
 30362  000FB2  0101               	movlb	1	; () banked
 30363  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30364                           
 30365                           ;mdm_gsm_gprs_http.c: 201: break;
 30366  000FB6  D07C               	goto	l1222
 30367  000FB8                     
 30368                           ; BSR set to: 1
 30369                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 30370                           
 30371                           ; BSR set to: 1
 30372  000FB8  0E02               	movlw	2
 30373  000FBA  D05A               	goto	L95
 30374  000FBC                     
 30375                           ; BSR set to: 1
 30376                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 30377                           
 30378                           ; BSR set to: 1
 30379  000FBC  0E3A               	movlw	low _NewStringReceived
 30380  000FBE  0100               	movlb	0	; () banked
 30381  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30382  000FC2  0E00               	movlw	high _NewStringReceived
 30383  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30384  000FC6  EC92  F032         	call	_ReceiveEvt	;wreg free
 30385  000FCA  0900               	iorlw	0
 30386  000FCC  B4D8               	btfsc	status,2,c
 30387  000FCE  D018               	goto	l1232
 30388                           
 30389                           ;mdm_gsm_gprs_http.c: 212: {
 30390                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30391  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 30392  000FD4  0A4F               	xorlw	79
 30393  000FD6  A4D8               	btfss	status,2,c
 30394  000FD8  D06B               	goto	l1222
 30395  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30396  000FDE  0A4B               	xorlw	75
 30397  000FE0  A4D8               	btfss	status,2,c
 30398  000FE2  D066               	goto	l1222
 30399                           
 30400                           ;mdm_gsm_gprs_http.c: 215: {
 30401                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 30402  000FE4  C0D1  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30403                           
 30404                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 30405  000FE8  0E58               	movlw	low _RxBuffer
 30406  000FEA  0100               	movlb	0	; () banked
 30407  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30408  000FEE  0E0C               	movlw	high _RxBuffer
 30409  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30410  000FF2  0E01               	movlw	1
 30411  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30412  000FF6  0E90               	movlw	144
 30413  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30414  000FFA  ECB4  F031         	call	_ClearBuffer	;wreg free
 30415                           
 30416                           ;mdm_gsm_gprs_http.c: 220: }
 30417                           ;mdm_gsm_gprs_http.c: 221: }
 30418  000FFE  D058               	goto	l1222
 30419  001000                     l1232:
 30420                           
 30421                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30422  001000  0EF5               	movlw	low _ConnTimeout
 30423  001002  0100               	movlb	0	; () banked
 30424  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30425  001006  0E02               	movlw	high _ConnTimeout
 30426  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30427  00100A  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30428  00100E  D029               	goto	L60
 30429  001010                     
 30430                           ; BSR set to: 1
 30431                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 30432                           
 30433                           ; BSR set to: 1
 30434  001010  0E3A               	movlw	low _NewStringReceived
 30435  001012  0100               	movlb	0	; () banked
 30436  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30437  001016  0E00               	movlw	high _NewStringReceived
 30438  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30439  00101A  EC92  F032         	call	_ReceiveEvt	;wreg free
 30440  00101E  0900               	iorlw	0
 30441  001020  B4D8               	btfsc	status,2,c
 30442  001022  D018               	goto	l1237
 30443                           
 30444                           ;mdm_gsm_gprs_http.c: 232: {
 30445                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 30446  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 30447  001028  0A2B               	xorlw	43
 30448  00102A  A4D8               	btfss	status,2,c
 30449  00102C  D041               	goto	l1222
 30450  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30451  001032  0A53               	xorlw	83
 30452  001034  A4D8               	btfss	status,2,c
 30453  001036  D03C               	goto	l1222
 30454                           
 30455                           ;mdm_gsm_gprs_http.c: 235: {
 30456                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 30457  001038  C0D1  F1EA         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30458                           
 30459                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 30460  00103C  0E58               	movlw	low _RxBuffer
 30461  00103E  0100               	movlb	0	; () banked
 30462  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30463  001042  0E0C               	movlw	high _RxBuffer
 30464  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30465  001046  0E01               	movlw	1
 30466  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30467  00104A  0E90               	movlw	144
 30468  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30469  00104E  ECB4  F031         	call	_ClearBuffer	;wreg free
 30470                           
 30471                           ;mdm_gsm_gprs_http.c: 240: }
 30472                           ;mdm_gsm_gprs_http.c: 241: }
 30473  001052  D02E               	goto	l1222
 30474  001054                     l1237:
 30475                           
 30476                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30477  001054  0EF5               	movlw	low _ConnTimeout
 30478  001056  0100               	movlb	0	; () banked
 30479  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30480  00105A  0E02               	movlw	high _ConnTimeout
 30481  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30482  00105E  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 30483  001062                     L60:
 30484  001062  06E8               	decf	wreg,f,c
 30485  001064  A4D8               	btfss	status,2,c
 30486  001066  D024               	goto	l1222
 30487                           
 30488                           ;mdm_gsm_gprs_http.c: 243: {
 30489                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 30490  001068  0E06               	movlw	6
 30491  00106A                     L96:
 30492  00106A  0101               	movlb	1	; () banked
 30493  00106C  D003               	goto	L59
 30494  00106E                     
 30495                           ; BSR set to: 1
 30496                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 30497                           
 30498                           ; BSR set to: 1
 30499  00106E  0E03               	movlw	3
 30500  001070                     L95:
 30501  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30502                           
 30503                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 30504  001072  0E00               	movlw	0
 30505  001074                     L59:
 30506  001074  6FEA               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30507                           
 30508                           ; BSR set to: 1
 30509                           ;mdm_gsm_gprs_http.c: 257: }
 30510                           
 30511                           ; BSR set to: 1
 30512                           ;mdm_gsm_gprs_http.c: 256: break;
 30513                           
 30514                           ;mdm_gsm_gprs_http.c: 255: default:
 30515                           
 30516                           ;mdm_gsm_gprs_http.c: 253: break;
 30517  001076  D01C               	goto	l1222
 30518  001078                     l1219:
 30519                           
 30520                           ; BSR set to: 1
 30521                           
 30522                           ; BSR set to: 1
 30523  001078  51EA               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 30524                           
 30525                           ; Switch size 1, requested type "space"
 30526                           ; Number of cases is 9, Range of values is 0 to 8
 30527                           ; switch strategies available:
 30528                           ; Name         Instructions Cycles
 30529                           ; simple_byte           28    15 (average)
 30530                           ;	Chosen strategy is simple_byte
 30531  00107A  0A00               	xorlw	0	; case 0
 30532  00107C  B4D8               	btfsc	status,2,c
 30533  00107E  D6A8               	goto	l1220
 30534  001080  0A01               	xorlw	1	; case 1
 30535  001082  B4D8               	btfsc	status,2,c
 30536  001084  D6B1               	goto	l1223
 30537  001086  0A03               	xorlw	3	; case 2
 30538  001088  B4D8               	btfsc	status,2,c
 30539  00108A  D6CB               	goto	l1224
 30540  00108C  0A01               	xorlw	1	; case 3
 30541  00108E  B4D8               	btfsc	status,2,c
 30542  001090  D756               	goto	l1228
 30543  001092  0A07               	xorlw	7	; case 4
 30544  001094  B4D8               	btfsc	status,2,c
 30545  001096  D770               	goto	l1229
 30546  001098  0A01               	xorlw	1	; case 5
 30547  00109A  B4D8               	btfsc	status,2,c
 30548  00109C  D78D               	goto	l1230
 30549  00109E  0A03               	xorlw	3	; case 6
 30550  0010A0  B4D8               	btfsc	status,2,c
 30551  0010A2  D7E5               	goto	l1241
 30552  0010A4  0A01               	xorlw	1	; case 7
 30553  0010A6  B4D8               	btfsc	status,2,c
 30554  0010A8  D789               	goto	l1231
 30555  0010AA  0A0F               	xorlw	15	; case 8
 30556  0010AC  B4D8               	btfsc	status,2,c
 30557  0010AE  D7B0               	goto	l1236
 30558  0010B0                     l1222:
 30559                           
 30560                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 30561                           
 30562                           ; BSR set to: 1
 30563  0010B0  0101               	movlb	1	; () banked
 30564  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 30565  0010B4  0012               	return	
 30566  0010B6                     __end_of_InitGprsNetwork:
 30567                           	opt stack 0
 30568                           tosu	equ	0xFFF
 30569                           tosh	equ	0xFFE
 30570                           tosl	equ	0xFFD
 30571                           pclath	equ	0xFFA
 30572                           tblptru	equ	0xFF8
 30573                           tblptrh	equ	0xFF7
 30574                           tblptrl	equ	0xFF6
 30575                           tablat	equ	0xFF5
 30576                           prodh	equ	0xFF4
 30577                           prodl	equ	0xFF3
 30578                           intcon	equ	0xFF2
 30579                           intcon2	equ	0xFF1
 30580                           intcon3	equ	0xFF0
 30581                           indf0	equ	0xFEF
 30582                           postinc0	equ	0xFEE
 30583                           plusw0	equ	0xFEB
 30584                           fsr0h	equ	0xFEA
 30585                           fsr0l	equ	0xFE9
 30586                           wreg	equ	0xFE8
 30587                           indf1	equ	0xFE7
 30588                           postinc1	equ	0xFE6
 30589                           postdec1	equ	0xFE5
 30590                           plusw1	equ	0xFE3
 30591                           fsr1h	equ	0xFE2
 30592                           fsr1l	equ	0xFE1
 30593                           indf2	equ	0xFDF
 30594                           postinc2	equ	0xFDE
 30595                           postdec2	equ	0xFDD
 30596                           plusw2	equ	0xFDB
 30597                           fsr2h	equ	0xFDA
 30598                           fsr2l	equ	0xFD9
 30599                           status	equ	0xFD8
 30600                           
 30601 ;; *************** function _HttpGetMethod *****************
 30602 ;; Defined at:
 30603 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30604 ;; Parameters:    Size  Location     Type
 30605 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 30606 ;;		 -> HttpGetDataLocal(5), 
 30607 ;; Auto vars:     Size  Location     Type
 30608 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 30609 ;;  Index           1  200[BANK1 ] unsigned char 
 30610 ;; Return value:  Size  Location     Type
 30611 ;;                  1    wreg      enum E8925
 30612 ;; Registers used:
 30613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30614 ;; Tracked objects:
 30615 ;;		On entry : 0/0
 30616 ;;		On exit  : 0/0
 30617 ;;		Unchanged: 0/0
 30618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30620 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30621 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30622 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30623 ;;Total ram usage:      207 bytes
 30624 ;; Hardware stack levels used:    1
 30625 ;; Hardware stack levels required when called:   14
 30626 ;; This function calls:
 30627 ;;		_ClearBuffer
 30628 ;;		_OsTmr_GetTimerStatus
 30629 ;;		_OsTmr_StartTimer
 30630 ;;		_ReceiveEvt
 30631 ;;		_StringCopy
 30632 ;;		_Uart_WriteConstString
 30633 ;;		_Uart_WriteString
 30634 ;; This function is called by:
 30635 ;;		_MdmHttp_MainTask
 30636 ;; This function uses a non-reentrant model
 30637 ;;
 30638                           
 30639                           	psect	text143
 30640  0005EC                     __ptext143:
 30641                           	opt stack 0
 30642  0005EC                     _HttpGetMethod:
 30643                           	opt stack 13
 30644                           
 30645                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 30646                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 30647                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 30648                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 30649                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 30650                           
 30651                           ; BSR set to: 1
 30652                           ;incstack = 0
 30653  0005EC  0E00               	movlw	0
 30654  0005EE  0101               	movlb	1	; () banked
 30655  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30656                           
 30657                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 30658  0005F2  D230               	goto	l1252
 30659  0005F4                     
 30660                           ; BSR set to: 1
 30661                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 30662                           
 30663                           ; BSR set to: 1
 30664  0005F4  0EDA               	movlw	low _GetMethod
 30665  0005F6  0100               	movlb	0	; () banked
 30666  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30667  0005FA  0E00               	movlw	high _GetMethod
 30668  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30669  0005FE  EC92  F032         	call	_ReceiveEvt	;wreg free
 30670  000602  0900               	iorlw	0
 30671  000604  B4D8               	btfsc	status,2,c
 30672  000606  D257               	goto	l1255
 30673                           
 30674                           ;mdm_gsm_gprs_http.c: 284: {
 30675                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 30676  000608  0E01               	movlw	1
 30677  00060A  D18C               	goto	L62
 30678  00060C                     
 30679                           ; BSR set to: 1
 30680                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 30681                           
 30682                           ; BSR set to: 1
 30683  00060C  0E9D               	movlw	low STR_12
 30684  00060E  0100               	movlb	0	; () banked
 30685  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30686  000612  0EFF               	movlw	high STR_12
 30687  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30688  000616  0E01               	movlw	1
 30689  000618  EC49  F030         	call	_Uart_WriteConstString
 30690                           
 30691                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 30692  00061C  0E0A               	movlw	10
 30693  00061E  0101               	movlb	1	; () banked
 30694  000620  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30695                           
 30696                           ; BSR set to: 1
 30697                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 30698  000622  0E02               	movlw	2
 30699  000624  0100               	movlb	0	; () banked
 30700  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30701                           
 30702                           ; BSR set to: 0
 30703                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 30704  000628  0EF5               	movlw	low _ConnTimeout
 30705  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30706  00062C  0E02               	movlw	high _ConnTimeout
 30707  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30708  000630  0E20               	movlw	32
 30709  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30710  000634  0E4E               	movlw	78
 30711  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30712  000638  0E00               	movlw	0
 30713  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30714  00063C  0E00               	movlw	0
 30715  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30716  000640  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30717  000644  D1AF               	goto	l15704
 30718  000646                     
 30719                           ; BSR set to: 1
 30720                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 30721                           
 30722                           ; BSR set to: 1
 30723  000646  0E67               	movlw	low STR_13
 30724  000648  0100               	movlb	0	; () banked
 30725  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30726  00064C  0EFF               	movlw	high STR_13
 30727  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30728  000650  0E01               	movlw	1
 30729  000652  EC49  F030         	call	_Uart_WriteConstString
 30730                           
 30731                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 30732  000656  0E0A               	movlw	10
 30733  000658  0101               	movlb	1	; () banked
 30734  00065A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30735                           
 30736                           ; BSR set to: 1
 30737                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 30738  00065C  0E03               	movlw	3
 30739  00065E  0100               	movlb	0	; () banked
 30740  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30741                           
 30742                           ; BSR set to: 0
 30743                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 30744  000662  0EF5               	movlw	low _ConnTimeout
 30745  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30746  000666  0E02               	movlw	high _ConnTimeout
 30747  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30748  00066A  0E20               	movlw	32
 30749  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30750  00066E  0E4E               	movlw	78
 30751  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30752  000672  0E00               	movlw	0
 30753  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30754  000676  0E00               	movlw	0
 30755  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30756  00067A  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30757  00067E  D192               	goto	l15704
 30758  000680                     
 30759                           ; BSR set to: 1
 30760                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 30761                           
 30762                           ; BSR set to: 1
 30763  000680  0EA8               	movlw	low STR_14
 30764  000682  0100               	movlb	0	; () banked
 30765  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30766  000686  0EFE               	movlw	high STR_14
 30767  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30768  00068A  0E01               	movlw	1
 30769  00068C  EC49  F030         	call	_Uart_WriteConstString
 30770                           
 30771                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 30772  000690  0E0A               	movlw	10
 30773  000692  0101               	movlb	1	; () banked
 30774  000694  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30775                           
 30776                           ; BSR set to: 1
 30777                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 30778  000696  0E04               	movlw	4
 30779  000698  0100               	movlb	0	; () banked
 30780  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30781                           
 30782                           ; BSR set to: 0
 30783                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 30784  00069C  0EF5               	movlw	low _ConnTimeout
 30785  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30786  0006A0  0E02               	movlw	high _ConnTimeout
 30787  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30788  0006A4  0E20               	movlw	32
 30789  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30790  0006A8  0E4E               	movlw	78
 30791  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30792  0006AC  0E00               	movlw	0
 30793  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30794  0006B0  0E00               	movlw	0
 30795  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30796  0006B4  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30797  0006B8  D175               	goto	l15704
 30798  0006BA                     
 30799                           ; BSR set to: 1
 30800                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 30801                           
 30802                           ; BSR set to: 1
 30803  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 30804  0006BC  0100               	movlb	0	; () banked
 30805  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30806  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 30807  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30808  0006C4  0E00               	movlw	0
 30809  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30810  0006C8  0EC8               	movlw	200
 30811  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30812  0006CC  ECB4  F031         	call	_ClearBuffer	;wreg free
 30813                           
 30814                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 30815  0006D0  0EE6               	movlw	low STR_15
 30816  0006D2  0100               	movlb	0	; () banked
 30817  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30818  0006D6  0EFE               	movlw	high STR_15
 30819  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30820  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 30821  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30822  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 30823  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30824  0006E2  0E00               	movlw	0
 30825  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30826  0006E6  0E13               	movlw	19
 30827  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 30828  0006EA  EC63  F02B         	call	_StringCopy	;wreg free
 30829                           
 30830                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 30831  0006EE  0E00               	movlw	0
 30832  0006F0  0101               	movlb	1	; () banked
 30833  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30834  0006F4  D024               	goto	l1260
 30835  0006F6                     
 30836                           ; BSR set to: 1
 30837                           ;mdm_gsm_gprs_http.c: 332: {
 30838                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 30839                           
 30840                           ; BSR set to: 1
 30841  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30842  0006F8  0D01               	mullw	1
 30843  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 30844  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 30845  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 30846  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 30847  00070A  50F3               	movf	prodl,w,c
 30848  00070C  0100               	movlb	0	; () banked
 30849  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30850  000710  6ED9               	movwf	fsr2l,c
 30851  000712  50F4               	movf	prodh,w,c
 30852  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30853  000716  6EDA               	movwf	fsr2h,c
 30854  000718  0101               	movlb	1	; () banked
 30855  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30856  00071C  0100               	movlb	0	; () banked
 30857  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 30858  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 30859  000722  0E13               	movlw	19
 30860  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 30861  000726  0E00               	movlw	0
 30862  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 30863  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 30864  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 30865  00072E  6EE1               	movwf	fsr1l,c
 30866  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 30867  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 30868  000734  6EE2               	movwf	fsr1h,c
 30869  000736  CFDF FFE7          	movff	indf2,indf1
 30870                           
 30871                           ; BSR set to: 0
 30872  00073A  0101               	movlb	1	; () banked
 30873  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 30874  00073E                     l1260:
 30875                           
 30876                           ; BSR set to: 1
 30877                           
 30878                           ; BSR set to: 1
 30879  00073E  0100               	movlb	0	; () banked
 30880  000740  EE20 F002          	lfsr	2,2
 30881  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 30882  000746  26D9               	addwf	fsr2l,f,c
 30883  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 30884  00074A  22DA               	addwfc	fsr2h,f,c
 30885  00074C  50DE               	movf	postinc2,w,c
 30886  00074E  0101               	movlb	1	; () banked
 30887  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 30888  000752  A0D8               	btfss	status,0,c
 30889  000754  D7D0               	goto	l1261
 30890                           
 30891                           ; BSR set to: 1
 30892                           ;mdm_gsm_gprs_http.c: 334: }
 30893                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 30894                           
 30895                           ; BSR set to: 1
 30896  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30897  000758  0100               	movlb	0	; () banked
 30898  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30899  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30900  00075E  0E13               	movlw	19
 30901  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30902  000762  0E00               	movlw	0
 30903  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30904  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 30905  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30906  00076A  6ED9               	movwf	fsr2l,c
 30907  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 30908  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30909  000770  6EDA               	movwf	fsr2h,c
 30910  000772  0E22               	movlw	34
 30911  000774  6EDF               	movwf	indf2,c
 30912                           
 30913                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 30914  000776  0101               	movlb	1	; () banked
 30915  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30916  00077A  0100               	movlb	0	; () banked
 30917  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30918  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30919  000780  0E14               	movlw	20
 30920  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30921  000784  0E00               	movlw	0
 30922  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30923  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 30924  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30925  00078C  6ED9               	movwf	fsr2l,c
 30926  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 30927  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30928  000792  6EDA               	movwf	fsr2h,c
 30929  000794  0E0D               	movlw	13
 30930  000796  6EDF               	movwf	indf2,c
 30931                           
 30932                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 30933  000798  0101               	movlb	1	; () banked
 30934  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 30935  00079C  0100               	movlb	0	; () banked
 30936  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 30937  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 30938  0007A2  0E15               	movlw	21
 30939  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 30940  0007A6  0E00               	movlw	0
 30941  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 30942  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 30943  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 30944  0007AE  6ED9               	movwf	fsr2l,c
 30945  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 30946  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 30947  0007B4  6EDA               	movwf	fsr2h,c
 30948  0007B6  0E00               	movlw	0
 30949  0007B8  6EDF               	movwf	indf2,c
 30950                           
 30951                           ; BSR set to: 0
 30952                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 30953  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 30954  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30955  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 30956  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30957  0007C2  0E01               	movlw	1
 30958  0007C4  ECE9  F030         	call	_Uart_WriteString
 30959                           
 30960                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 30961  0007C8  0E0A               	movlw	10
 30962  0007CA  0101               	movlb	1	; () banked
 30963  0007CC  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30964                           
 30965                           ; BSR set to: 1
 30966                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 30967  0007CE  0E05               	movlw	5
 30968  0007D0  0100               	movlb	0	; () banked
 30969  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30970                           
 30971                           ; BSR set to: 0
 30972                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 30973  0007D4  0EF5               	movlw	low _ConnTimeout
 30974  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30975  0007D8  0E02               	movlw	high _ConnTimeout
 30976  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30977  0007DC  0E20               	movlw	32
 30978  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30979  0007E0  0E4E               	movlw	78
 30980  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30981  0007E4  0E00               	movlw	0
 30982  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30983  0007E8  0E00               	movlw	0
 30984  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30985  0007EC  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 30986  0007F0  D0D9               	goto	l15704
 30987  0007F2                     
 30988                           ; BSR set to: 1
 30989                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 30990                           
 30991                           ; BSR set to: 1
 30992  0007F2  0E1E               	movlw	low STR_16
 30993  0007F4  0100               	movlb	0	; () banked
 30994  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30995  0007F8  0EFF               	movlw	high STR_16
 30996  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30997  0007FC  0E01               	movlw	1
 30998  0007FE  EC49  F030         	call	_Uart_WriteConstString
 30999                           
 31000                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31001  000802  0E0A               	movlw	10
 31002  000804  0101               	movlb	1	; () banked
 31003  000806  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31004                           
 31005                           ; BSR set to: 1
 31006                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31007  000808  0E06               	movlw	6
 31008  00080A  0100               	movlb	0	; () banked
 31009  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31010                           
 31011                           ; BSR set to: 0
 31012                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31013  00080E  0EF5               	movlw	low _ConnTimeout
 31014  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31015  000812  0E02               	movlw	high _ConnTimeout
 31016  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31017  000816  0E20               	movlw	32
 31018  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31019  00081A  0E4E               	movlw	78
 31020  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31021  00081E  0E00               	movlw	0
 31022  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31023  000822  0E00               	movlw	0
 31024  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31025  000826  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 31026                           
 31027                           ;mdm_gsm_gprs_http.c: 358: break;
 31028  00082A  D145               	goto	l1255
 31029  00082C                     
 31030                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31031  00082C  0E07               	movlw	7
 31032  00082E  0101               	movlb	1	; () banked
 31033  000830  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31034                           
 31035                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31036  000832  0E09               	movlw	9
 31037  000834  0100               	movlb	0	; () banked
 31038  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31042  000838  0EF5               	movlw	low _ConnTimeout
 31043  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31044  00083C  0E02               	movlw	high _ConnTimeout
 31045  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31046  000840  0E20               	movlw	32
 31047  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31048  000844  0E4E               	movlw	78
 31049  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31050  000848  0E00               	movlw	0
 31051  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31052  00084C  0E00               	movlw	0
 31053  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31054  000850  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 31055                           
 31056                           ;mdm_gsm_gprs_http.c: 371: break;
 31057  000854  D130               	goto	l1255
 31058  000856                     
 31059                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31060  000856  0E83               	movlw	low STR_17
 31061  000858  0100               	movlb	0	; () banked
 31062  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31063  00085C  0EFF               	movlw	high STR_17
 31064  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31065  000860  0E01               	movlw	1
 31066  000862  EC49  F030         	call	_Uart_WriteConstString
 31067                           
 31068                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31069  000866  0E0D               	movlw	13
 31070  000868  0101               	movlb	1	; () banked
 31071  00086A  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31072                           
 31073                           ; BSR set to: 1
 31074                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31075  00086C  0E09               	movlw	9
 31076  00086E  0100               	movlb	0	; () banked
 31077  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31078                           
 31079                           ; BSR set to: 0
 31080                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31081  000872  0EF5               	movlw	low _ConnTimeout
 31082  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31083  000876  0E02               	movlw	high _ConnTimeout
 31084  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31085  00087A  0E20               	movlw	32
 31086  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31087  00087E  0E4E               	movlw	78
 31088  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31089  000882  0E00               	movlw	0
 31090  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31091  000886  0E00               	movlw	0
 31092  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31093  00088A  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 31094  00088E  D08A               	goto	l15704
 31095  000890                     
 31096                           ; BSR set to: 1
 31097                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31098                           
 31099                           ; BSR set to: 1
 31100  000890  0E90               	movlw	low STR_18
 31101  000892  0100               	movlb	0	; () banked
 31102  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31103  000896  0EFF               	movlw	high STR_18
 31104  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31105  00089A  0E01               	movlw	1
 31106  00089C  EC49  F030         	call	_Uart_WriteConstString
 31107                           
 31108                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31109  0008A0  0E0A               	movlw	10
 31110  0008A2  0101               	movlb	1	; () banked
 31111  0008A4  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31112                           
 31113                           ; BSR set to: 1
 31114                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31115  0008A6  0E0E               	movlw	14
 31116  0008A8  0100               	movlb	0	; () banked
 31117  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31118                           
 31119                           ; BSR set to: 0
 31120                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31121  0008AC  0EF5               	movlw	low _ConnTimeout
 31122  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31123  0008B0  0E02               	movlw	high _ConnTimeout
 31124  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31125  0008B4  0E20               	movlw	32
 31126  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31127  0008B8  0E4E               	movlw	78
 31128  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31129  0008BC  0E00               	movlw	0
 31130  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31131  0008C0  0E00               	movlw	0
 31132  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31133  0008C4  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 31134  0008C8  D06D               	goto	l15704
 31135  0008CA                     
 31136                           ; BSR set to: 1
 31137                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31138                           
 31139                           ; BSR set to: 1
 31140  0008CA  0E3A               	movlw	low _NewStringReceived
 31141  0008CC  0100               	movlb	0	; () banked
 31142  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31143  0008D0  0E00               	movlw	high _NewStringReceived
 31144  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31145  0008D4  EC92  F032         	call	_ReceiveEvt	;wreg free
 31146  0008D8  0900               	iorlw	0
 31147  0008DA  B4D8               	btfsc	status,2,c
 31148  0008DC  D018               	goto	l1268
 31149                           
 31150                           ;mdm_gsm_gprs_http.c: 400: {
 31151                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31152  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31153  0008E2  0A4F               	xorlw	79
 31154  0008E4  A4D8               	btfss	status,2,c
 31155  0008E6  D0E7               	goto	l1255
 31156  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31157  0008EC  0A4B               	xorlw	75
 31158  0008EE  A4D8               	btfss	status,2,c
 31159  0008F0  D0E2               	goto	l1255
 31160                           
 31161                           ;mdm_gsm_gprs_http.c: 403: {
 31162                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31163  0008F2  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31164                           
 31165                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31166  0008F6  0E58               	movlw	low _RxBuffer
 31167  0008F8  0100               	movlb	0	; () banked
 31168  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31169  0008FC  0E0C               	movlw	high _RxBuffer
 31170  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31171  000900  0E01               	movlw	1
 31172  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31173  000904  0E90               	movlw	144
 31174  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31175  000908  ECB4  F031         	call	_ClearBuffer	;wreg free
 31176                           
 31177                           ;mdm_gsm_gprs_http.c: 408: }
 31178                           ;mdm_gsm_gprs_http.c: 409: }
 31179  00090C  D0D4               	goto	l1255
 31180  00090E                     l1268:
 31181                           
 31182                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31183  00090E  0EF5               	movlw	low _ConnTimeout
 31184  000910  0100               	movlb	0	; () banked
 31185  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31186  000914  0E02               	movlw	high _ConnTimeout
 31187  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31188  000918  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31189  00091C                     L63:
 31190  00091C  06E8               	decf	wreg,f,c
 31191  00091E  A4D8               	btfss	status,2,c
 31192  000920  D0CA               	goto	l1255
 31193                           
 31194                           ;mdm_gsm_gprs_http.c: 411: {
 31195                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31196  000922  0E0F               	movlw	15
 31197  000924                     L62:
 31198  000924  0101               	movlb	1	; () banked
 31199  000926  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31200                           
 31201                           ; BSR set to: 1
 31202                           ;mdm_gsm_gprs_http.c: 414: }
 31203                           ;mdm_gsm_gprs_http.c: 415: break;
 31204                           
 31205                           ; BSR set to: 1
 31206  000928  D0C6               	goto	l1255
 31207  00092A                     
 31208                           ; BSR set to: 1
 31209                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31210                           
 31211                           ; BSR set to: 1
 31212  00092A  0E3A               	movlw	low _NewStringReceived
 31213  00092C  0100               	movlb	0	; () banked
 31214  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31215  000930  0E00               	movlw	high _NewStringReceived
 31216  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31217  000934  EC92  F032         	call	_ReceiveEvt	;wreg free
 31218  000938  0900               	iorlw	0
 31219  00093A  B4D8               	btfsc	status,2,c
 31220  00093C  D018               	goto	l1273
 31221                           
 31222                           ;mdm_gsm_gprs_http.c: 420: {
 31223                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31224  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31225  000942  0A2B               	xorlw	43
 31226  000944  A4D8               	btfss	status,2,c
 31227  000946  D0B7               	goto	l1255
 31228  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31229  00094C  0A48               	xorlw	72
 31230  00094E  A4D8               	btfss	status,2,c
 31231  000950  D0B2               	goto	l1255
 31232                           
 31233                           ;mdm_gsm_gprs_http.c: 423: {
 31234                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31235  000952  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31236                           
 31237                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31238  000956  0E58               	movlw	low _RxBuffer
 31239  000958  0100               	movlb	0	; () banked
 31240  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31241  00095C  0E0C               	movlw	high _RxBuffer
 31242  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31243  000960  0E01               	movlw	1
 31244  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31245  000964  0E90               	movlw	144
 31246  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31247  000968  ECB4  F031         	call	_ClearBuffer	;wreg free
 31248                           
 31249                           ;mdm_gsm_gprs_http.c: 428: }
 31250                           ;mdm_gsm_gprs_http.c: 429: }
 31251  00096C  D0A4               	goto	l1255
 31252  00096E                     l1273:
 31253                           
 31254                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31255  00096E  0EF5               	movlw	low _ConnTimeout
 31256  000970  0100               	movlb	0	; () banked
 31257  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31258  000974  0E02               	movlw	high _ConnTimeout
 31259  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31260  000978  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31261  00097C  D7CF               	goto	L63
 31262  00097E                     
 31263                           ; BSR set to: 1
 31264                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31265                           
 31266                           ; BSR set to: 1
 31267  00097E  0E0C               	movlw	12
 31268  000980  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31269                           
 31270                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31271  000982  0E05               	movlw	5
 31272  000984  0100               	movlb	0	; () banked
 31273  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31274                           
 31275                           ; BSR set to: 0
 31276                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31277  000988  0EDD               	movlw	low _ConnWait
 31278  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31279  00098C  0E03               	movlw	high _ConnWait
 31280  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31281  000990  0EE8               	movlw	232
 31282  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31283  000994  0E03               	movlw	3
 31284  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31285  000998  0E00               	movlw	0
 31286  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31287  00099C  0E00               	movlw	0
 31288  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31289  0009A0  ECC3  F02B         	call	_OsTmr_StartTimer	;wreg free
 31290  0009A4                     l15704:
 31291                           
 31292                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31293  0009A4  0E01               	movlw	1
 31294  0009A6  0101               	movlb	1	; () banked
 31295  0009A8  D053               	goto	L65
 31296  0009AA                     
 31297                           ; BSR set to: 1
 31298                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31299                           
 31300                           ; BSR set to: 1
 31301  0009AA  0EDD               	movlw	low _ConnWait
 31302  0009AC  0100               	movlb	0	; () banked
 31303  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31304  0009B0  0E03               	movlw	high _ConnWait
 31305  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31306  0009B4  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31307  0009B8  06E8               	decf	wreg,f,c
 31308  0009BA  A4D8               	btfss	status,2,c
 31309  0009BC  D07C               	goto	l1255
 31310                           
 31311                           ;mdm_gsm_gprs_http.c: 450: {
 31312                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31313  0009BE  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31314                           
 31315                           ;mdm_gsm_gprs_http.c: 453: }
 31316                           ;mdm_gsm_gprs_http.c: 454: break;
 31317  0009C2  D079               	goto	l1255
 31318  0009C4                     
 31319                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 31320  0009C4  0E3A               	movlw	low _NewStringReceived
 31321  0009C6  0100               	movlb	0	; () banked
 31322  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31323  0009CA  0E00               	movlw	high _NewStringReceived
 31324  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31325  0009CE  EC92  F032         	call	_ReceiveEvt	;wreg free
 31326  0009D2  0900               	iorlw	0
 31327  0009D4  B4D8               	btfsc	status,2,c
 31328  0009D6  D02D               	goto	l1281
 31329                           
 31330                           ;mdm_gsm_gprs_http.c: 459: {
 31331                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31332  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 31333  0009DC  0A2B               	xorlw	43
 31334  0009DE  A4D8               	btfss	status,2,c
 31335  0009E0  D06A               	goto	l1255
 31336  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31337  0009E6  0A48               	xorlw	72
 31338  0009E8  A4D8               	btfss	status,2,c
 31339  0009EA  D065               	goto	l1255
 31340                           
 31341                           ;mdm_gsm_gprs_http.c: 462: {
 31342                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 31343  0009EC  C0D0  F1E9         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31344                           
 31345                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 31346  0009F0  0E58               	movlw	low _RxBuffer
 31347  0009F2  0100               	movlb	0	; () banked
 31348  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31349  0009F6  0E0C               	movlw	high _RxBuffer
 31350  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31351  0009FA  EE20 F003          	lfsr	2,3
 31352  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31353  000A00  26D9               	addwf	fsr2l,f,c
 31354  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31355  000A04  22DA               	addwfc	fsr2h,f,c
 31356  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 31357  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 31358  000A0E  0E01               	movlw	1
 31359  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31360  000A12  0E90               	movlw	144
 31361  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 31362  000A16  EC63  F02B         	call	_StringCopy	;wreg free
 31363                           
 31364                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 31365  000A1A  0E58               	movlw	low _RxBuffer
 31366  000A1C  0100               	movlb	0	; () banked
 31367  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31368  000A20  0E0C               	movlw	high _RxBuffer
 31369  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31370  000A24  0E01               	movlw	1
 31371  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31372  000A28  0E90               	movlw	144
 31373  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31374  000A2C  ECB4  F031         	call	_ClearBuffer	;wreg free
 31375                           
 31376                           ;mdm_gsm_gprs_http.c: 469: }
 31377                           ;mdm_gsm_gprs_http.c: 470: }
 31378  000A30  D042               	goto	l1255
 31379  000A32                     l1281:
 31380                           
 31381                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31382  000A32  0EF5               	movlw	low _ConnTimeout
 31383  000A34  0100               	movlb	0	; () banked
 31384  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31385  000A38  0E02               	movlw	high _ConnTimeout
 31386  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31387  000A3C  ECF3  F026         	call	_OsTmr_GetTimerStatus	;wreg free
 31388  000A40  D76D               	goto	L63
 31389  000A42                     
 31390                           ; BSR set to: 1
 31391                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 31392                           
 31393                           ; BSR set to: 1
 31394  000A42  0E00               	movlw	0
 31395  000A44  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31396                           
 31397                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 31398  000A46  0E02               	movlw	2
 31399  000A48  D003               	goto	L65
 31400  000A4A                     
 31401                           ; BSR set to: 1
 31402                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 31403                           
 31404                           ; BSR set to: 1
 31405  000A4A  0E00               	movlw	0
 31406  000A4C  6FE9               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31407                           
 31408                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 31409  000A4E  0E03               	movlw	3
 31410  000A50                     L65:
 31411  000A50  6FE8               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 31412                           
 31413                           ; BSR set to: 1
 31414                           ;mdm_gsm_gprs_http.c: 494: }
 31415                           
 31416                           ; BSR set to: 1
 31417                           ;mdm_gsm_gprs_http.c: 493: break;
 31418                           
 31419                           ;mdm_gsm_gprs_http.c: 492: default:
 31420                           
 31421                           ;mdm_gsm_gprs_http.c: 490: break;
 31422  000A52  D031               	goto	l1255
 31423  000A54                     l1252:
 31424                           
 31425                           ; BSR set to: 1
 31426                           
 31427                           ; BSR set to: 1
 31428  000A54  51E9               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 31429                           
 31430                           ; Switch size 1, requested type "space"
 31431                           ; Number of cases is 16, Range of values is 0 to 15
 31432                           ; switch strategies available:
 31433                           ; Name         Instructions Cycles
 31434                           ; simple_byte           49    25 (average)
 31435                           ;	Chosen strategy is simple_byte
 31436  000A56  0A00               	xorlw	0	; case 0
 31437  000A58  B4D8               	btfsc	status,2,c
 31438  000A5A  D5CC               	goto	l1253
 31439  000A5C  0A01               	xorlw	1	; case 1
 31440  000A5E  B4D8               	btfsc	status,2,c
 31441  000A60  D5D5               	goto	l1256
 31442  000A62  0A03               	xorlw	3	; case 2
 31443  000A64  B4D8               	btfsc	status,2,c
 31444  000A66  D5EF               	goto	l1257
 31445  000A68  0A01               	xorlw	1	; case 3
 31446  000A6A  B4D8               	btfsc	status,2,c
 31447  000A6C  D609               	goto	l1258
 31448  000A6E  0A07               	xorlw	7	; case 4
 31449  000A70  B4D8               	btfsc	status,2,c
 31450  000A72  D623               	goto	l1259
 31451  000A74  0A01               	xorlw	1	; case 5
 31452  000A76  B4D8               	btfsc	status,2,c
 31453  000A78  D6BC               	goto	l1263
 31454  000A7A  0A03               	xorlw	3	; case 6
 31455  000A7C  B4D8               	btfsc	status,2,c
 31456  000A7E  D6D6               	goto	l1264
 31457  000A80  0A01               	xorlw	1	; case 7
 31458  000A82  B4D8               	btfsc	status,2,c
 31459  000A84  D752               	goto	l1272
 31460  000A86  0A0F               	xorlw	15	; case 8
 31461  000A88  B4D8               	btfsc	status,2,c
 31462  000A8A  D6E5               	goto	l1265
 31463  000A8C  0A01               	xorlw	1	; case 9
 31464  000A8E  B4D8               	btfsc	status,2,c
 31465  000A90  D6FF               	goto	l1266
 31466  000A92  0A03               	xorlw	3	; case 10
 31467  000A94  B4D8               	btfsc	status,2,c
 31468  000A96  D719               	goto	l1267
 31469  000A98  0A01               	xorlw	1	; case 11
 31470  000A9A  B4D8               	btfsc	status,2,c
 31471  000A9C  D770               	goto	l1277
 31472  000A9E  0A07               	xorlw	7	; case 12
 31473  000AA0  B4D8               	btfsc	status,2,c
 31474  000AA2  D783               	goto	l1278
 31475  000AA4  0A01               	xorlw	1	; case 13
 31476  000AA6  B4D8               	btfsc	status,2,c
 31477  000AA8  D78D               	goto	l1280
 31478  000AAA  0A03               	xorlw	3	; case 14
 31479  000AAC  B4D8               	btfsc	status,2,c
 31480  000AAE  D7C9               	goto	l1285
 31481  000AB0  0A01               	xorlw	1	; case 15
 31482  000AB2  B4D8               	btfsc	status,2,c
 31483  000AB4  D7CA               	goto	l1286
 31484  000AB6                     l1255:
 31485                           
 31486                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 31487                           
 31488                           ; BSR set to: 1
 31489  000AB6  0101               	movlb	1	; () banked
 31490  000AB8  51E8               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 31491  000ABA  0012               	return	
 31492  000ABC                     __end_of_HttpGetMethod:
 31493                           	opt stack 0
 31494                           tosu	equ	0xFFF
 31495                           tosh	equ	0xFFE
 31496                           tosl	equ	0xFFD
 31497                           pclath	equ	0xFFA
 31498                           tblptru	equ	0xFF8
 31499                           tblptrh	equ	0xFF7
 31500                           tblptrl	equ	0xFF6
 31501                           tablat	equ	0xFF5
 31502                           prodh	equ	0xFF4
 31503                           prodl	equ	0xFF3
 31504                           intcon	equ	0xFF2
 31505                           intcon2	equ	0xFF1
 31506                           intcon3	equ	0xFF0
 31507                           indf0	equ	0xFEF
 31508                           postinc0	equ	0xFEE
 31509                           plusw0	equ	0xFEB
 31510                           fsr0h	equ	0xFEA
 31511                           fsr0l	equ	0xFE9
 31512                           wreg	equ	0xFE8
 31513                           indf1	equ	0xFE7
 31514                           postinc1	equ	0xFE6
 31515                           postdec1	equ	0xFE5
 31516                           plusw1	equ	0xFE3
 31517                           fsr1h	equ	0xFE2
 31518                           fsr1l	equ	0xFE1
 31519                           indf2	equ	0xFDF
 31520                           postinc2	equ	0xFDE
 31521                           postdec2	equ	0xFDD
 31522                           plusw2	equ	0xFDB
 31523                           fsr2h	equ	0xFDA
 31524                           fsr2l	equ	0xFD9
 31525                           status	equ	0xFD8
 31526                           
 31527 ;; *************** function _Uart_WriteString *****************
 31528 ;; Defined at:
 31529 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31530 ;; Parameters:    Size  Location     Type
 31531 ;;  Module          1    wreg     unsigned char 
 31532 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 31533 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 31534 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 31535 ;; Auto vars:     Size  Location     Type
 31536 ;;  Module          1   34[BANK0 ] unsigned char 
 31537 ;; Return value:  Size  Location     Type
 31538 ;;                  1    wreg      void 
 31539 ;; Registers used:
 31540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31541 ;; Tracked objects:
 31542 ;;		On entry : 0/0
 31543 ;;		On exit  : 0/0
 31544 ;;		Unchanged: 0/0
 31545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31547 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31549 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31550 ;;Total ram usage:        3 bytes
 31551 ;; Hardware stack levels used:    1
 31552 ;; Hardware stack levels required when called:   12
 31553 ;; This function calls:
 31554 ;;		_UartTxBufferStatus
 31555 ;;		_UartWriteByte
 31556 ;; This function is called by:
 31557 ;;		_Mdm_SetSmsFormat
 31558 ;;		_InitGprsNetwork
 31559 ;;		_HttpGetMethod
 31560 ;;		_Mdm_PinUnlock
 31561 ;;		_Mdm_MakePhoneCall
 31562 ;; This function uses a non-reentrant model
 31563 ;;
 31564                           
 31565                           	psect	text144
 31566  0061D2                     __ptext144:
 31567                           	opt stack 0
 31568  0061D2                     _Uart_WriteString:
 31569                           	opt stack 12
 31570                           
 31571                           ; BSR set to: 1
 31572                           ;incstack = 0
 31573                           ;Uart_WriteString@Module stored from wreg
 31574  0061D2  0100               	movlb	0	; () banked
 31575  0061D4  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 31576                           
 31577                           ;uart_drv.c: 521: while (*StringToWrite)
 31578  0061D6  D014               	goto	u12050
 31579  0061D8                     
 31580                           ;uart_drv.c: 522: {
 31581                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 31582  0061D8  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31583  0061DC  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31584  0061E0  50DF               	movf	indf2,w,c
 31585  0061E2  0100               	movlb	0	; () banked
 31586  0061E4  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 31587  0061E6  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31588  0061E8  ECDE  F033         	call	_UartWriteByte
 31589                           
 31590                           ;uart_drv.c: 526: StringToWrite++;
 31591  0061EC  0100               	movlb	0	; () banked
 31592  0061EE  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 31593  0061F0  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 31594  0061F2                     
 31595                           ; BSR set to: 0
 31596                           
 31597                           ; BSR set to: 0
 31598  0061F2  0100               	movlb	0	; () banked
 31599  0061F4  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31600  0061F6  ECBC  F02E         	call	_UartTxBufferStatus
 31601  0061FA  06E8               	decf	wreg,f,c
 31602  0061FC  B4D8               	btfsc	status,2,c
 31603  0061FE  D7F9               	goto	l709
 31604  006200                     u12050:
 31605  006200  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31606  006204  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31607  006208  50DF               	movf	indf2,w,c
 31608  00620A  B4D8               	btfsc	status,2,c
 31609  00620C  0012               	return	
 31610  00620E  D7E4               	goto	l707
 31611  006210                     __end_of_Uart_WriteString:
 31612                           	opt stack 0
 31613                           tosu	equ	0xFFF
 31614                           tosh	equ	0xFFE
 31615                           tosl	equ	0xFFD
 31616                           pclath	equ	0xFFA
 31617                           tblptru	equ	0xFF8
 31618                           tblptrh	equ	0xFF7
 31619                           tblptrl	equ	0xFF6
 31620                           tablat	equ	0xFF5
 31621                           prodh	equ	0xFF4
 31622                           prodl	equ	0xFF3
 31623                           intcon	equ	0xFF2
 31624                           intcon2	equ	0xFF1
 31625                           intcon3	equ	0xFF0
 31626                           indf0	equ	0xFEF
 31627                           postinc0	equ	0xFEE
 31628                           plusw0	equ	0xFEB
 31629                           fsr0h	equ	0xFEA
 31630                           fsr0l	equ	0xFE9
 31631                           wreg	equ	0xFE8
 31632                           indf1	equ	0xFE7
 31633                           postinc1	equ	0xFE6
 31634                           postdec1	equ	0xFE5
 31635                           plusw1	equ	0xFE3
 31636                           fsr1h	equ	0xFE2
 31637                           fsr1l	equ	0xFE1
 31638                           indf2	equ	0xFDF
 31639                           postinc2	equ	0xFDE
 31640                           postdec2	equ	0xFDD
 31641                           plusw2	equ	0xFDB
 31642                           fsr2h	equ	0xFDA
 31643                           fsr2l	equ	0xFD9
 31644                           status	equ	0xFD8
 31645                           
 31646 ;; *************** function _Uart_WriteConstString *****************
 31647 ;; Defined at:
 31648 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31649 ;; Parameters:    Size  Location     Type
 31650 ;;  Module          1    wreg     unsigned char 
 31651 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 31652 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 31653 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 31654 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 31655 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 31656 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 31657 ;; Auto vars:     Size  Location     Type
 31658 ;;  Module          1   34[BANK0 ] unsigned char 
 31659 ;; Return value:  Size  Location     Type
 31660 ;;                  1    wreg      void 
 31661 ;; Registers used:
 31662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31663 ;; Tracked objects:
 31664 ;;		On entry : 0/0
 31665 ;;		On exit  : 0/0
 31666 ;;		Unchanged: 0/0
 31667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31672 ;;Total ram usage:        3 bytes
 31673 ;; Hardware stack levels used:    1
 31674 ;; Hardware stack levels required when called:   12
 31675 ;; This function calls:
 31676 ;;		_UartTxBufferStatus
 31677 ;;		_UartWriteByte
 31678 ;; This function is called by:
 31679 ;;		_CheckModem
 31680 ;;		_ConfigureModem
 31681 ;;		_GetSmsSm
 31682 ;;		_Mdm_HangPhoneCall
 31683 ;;		_InitGprsNetwork
 31684 ;;		_HttpGetMethod
 31685 ;;		_detectCmd
 31686 ;;		_initGprsModem
 31687 ;;		_Mdm_GetPhoneCall
 31688 ;;		_MdmHttp_SetSsl
 31689 ;; This function uses a non-reentrant model
 31690 ;;
 31691                           
 31692                           	psect	text145
 31693  006092                     __ptext145:
 31694                           	opt stack 0
 31695  006092                     _Uart_WriteConstString:
 31696                           	opt stack 11
 31697                           
 31698                           ;incstack = 0
 31699                           ;Uart_WriteConstString@Module stored from wreg
 31700  006092  0100               	movlb	0	; () banked
 31701  006094  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 31702                           
 31703                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 31704  006096  D015               	goto	u11510
 31705  006098                     
 31706                           ;uart_drv.c: 500: {
 31707                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 31708  006098  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31709  00609C  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31710  0060A0                     	if	0	;tblptru may be non-zero
 31711  0060A0                     	endif
 31712  0060A0                     	if	0	;tblptru may be non-zero
 31713  0060A0                     	endif
 31714  0060A0  0008               	tblrd		*
 31715  0060A2  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 31716  0060A6  0100               	movlb	0	; () banked
 31717  0060A8  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31718  0060AA  ECDE  F033         	call	_UartWriteByte
 31719                           
 31720                           ;uart_drv.c: 504: ConstStringToWrite++;
 31721  0060AE  0100               	movlb	0	; () banked
 31722  0060B0  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 31723  0060B2  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 31724  0060B4                     
 31725                           ; BSR set to: 0
 31726                           
 31727                           ; BSR set to: 0
 31728  0060B4  0100               	movlb	0	; () banked
 31729  0060B6  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31730  0060B8  ECBC  F02E         	call	_UartTxBufferStatus
 31731  0060BC  06E8               	decf	wreg,f,c
 31732  0060BE  B4D8               	btfsc	status,2,c
 31733  0060C0  D7F9               	goto	l700
 31734  0060C2                     u11510:
 31735  0060C2  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31736  0060C6  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31737  0060CA                     	if	0	;tblptru may be non-zero
 31738  0060CA                     	endif
 31739  0060CA                     	if	0	;tblptru may be non-zero
 31740  0060CA                     	endif
 31741  0060CA  0008               	tblrd		*
 31742  0060CC  50F5               	movf	tablat,w,c
 31743  0060CE  0900               	iorlw	0
 31744  0060D0  B4D8               	btfsc	status,2,c
 31745  0060D2  0012               	return	
 31746  0060D4  D7E1               	goto	l698
 31747  0060D6                     __end_of_Uart_WriteConstString:
 31748                           	opt stack 0
 31749                           tosu	equ	0xFFF
 31750                           tosh	equ	0xFFE
 31751                           tosl	equ	0xFFD
 31752                           pclath	equ	0xFFA
 31753                           tblptru	equ	0xFF8
 31754                           tblptrh	equ	0xFF7
 31755                           tblptrl	equ	0xFF6
 31756                           tablat	equ	0xFF5
 31757                           prodh	equ	0xFF4
 31758                           prodl	equ	0xFF3
 31759                           intcon	equ	0xFF2
 31760                           intcon2	equ	0xFF1
 31761                           intcon3	equ	0xFF0
 31762                           indf0	equ	0xFEF
 31763                           postinc0	equ	0xFEE
 31764                           plusw0	equ	0xFEB
 31765                           fsr0h	equ	0xFEA
 31766                           fsr0l	equ	0xFE9
 31767                           wreg	equ	0xFE8
 31768                           indf1	equ	0xFE7
 31769                           postinc1	equ	0xFE6
 31770                           postdec1	equ	0xFE5
 31771                           plusw1	equ	0xFE3
 31772                           fsr1h	equ	0xFE2
 31773                           fsr1l	equ	0xFE1
 31774                           indf2	equ	0xFDF
 31775                           postinc2	equ	0xFDE
 31776                           postdec2	equ	0xFDD
 31777                           plusw2	equ	0xFDB
 31778                           fsr2h	equ	0xFDA
 31779                           fsr2l	equ	0xFD9
 31780                           status	equ	0xFD8
 31781                           
 31782 ;; *************** function _UartWriteByte *****************
 31783 ;; Defined at:
 31784 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31785 ;; Parameters:    Size  Location     Type
 31786 ;;  Module          1    wreg     unsigned char 
 31787 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 31788 ;; Auto vars:     Size  Location     Type
 31789 ;;  Module          1   30[BANK0 ] unsigned char 
 31790 ;; Return value:  Size  Location     Type
 31791 ;;                  1    wreg      void 
 31792 ;; Registers used:
 31793 ;;		wreg, status,2, status,0
 31794 ;; Tracked objects:
 31795 ;;		On entry : 0/0
 31796 ;;		On exit  : 0/0
 31797 ;;		Unchanged: 0/0
 31798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31799 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31803 ;;Total ram usage:        2 bytes
 31804 ;; Hardware stack levels used:    1
 31805 ;; Hardware stack levels required when called:   11
 31806 ;; This function calls:
 31807 ;;		Nothing
 31808 ;; This function is called by:
 31809 ;;		_Uart_WriteConstString
 31810 ;;		_Uart_WriteString
 31811 ;;		_Uart_WriteStringLen
 31812 ;; This function uses a non-reentrant model
 31813 ;;
 31814                           
 31815                           	psect	text146
 31816  0067BC                     __ptext146:
 31817                           	opt stack 0
 31818  0067BC                     _UartWriteByte:
 31819                           	opt stack 11
 31820                           
 31821                           ;incstack = 0
 31822                           ;UartWriteByte@Module stored from wreg
 31823  0067BC  0100               	movlb	0	; () banked
 31824  0067BE  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 31825                           
 31826                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 31827  0067C0  0100               	movlb	0	; () banked
 31828  0067C2  057E               	decf	UartWriteByte@Module& (0+255),w,b
 31829  0067C4  A4D8               	btfss	status,2,c
 31830  0067C6  D003               	goto	l639
 31831                           
 31832                           ; BSR set to: 0
 31833                           ;uart_drv.c: 176: {
 31834                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 31835  0067C8  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 31836                           
 31837                           ;uart_drv.c: 179: }
 31838  0067CC  0012               	return	
 31839  0067CE                     l639:
 31840                           
 31841                           ; BSR set to: 0
 31842                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 31843                           
 31844                           ; BSR set to: 0
 31845  0067CE  0E02               	movlw	2
 31846  0067D0  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 31847  0067D2  A4D8               	btfss	status,2,c
 31848  0067D4  0012               	return	
 31849                           
 31850                           ; BSR set to: 0
 31851                           ;uart_drv.c: 181: {
 31852                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 31853  0067D6  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 31854                           
 31855                           ; BSR set to: 0
 31856  0067DA  0012               	return	
 31857  0067DC                     __end_of_UartWriteByte:
 31858                           	opt stack 0
 31859                           tosu	equ	0xFFF
 31860                           tosh	equ	0xFFE
 31861                           tosl	equ	0xFFD
 31862                           pclath	equ	0xFFA
 31863                           tblptru	equ	0xFF8
 31864                           tblptrh	equ	0xFF7
 31865                           tblptrl	equ	0xFF6
 31866                           tablat	equ	0xFF5
 31867                           prodh	equ	0xFF4
 31868                           prodl	equ	0xFF3
 31869                           intcon	equ	0xFF2
 31870                           intcon2	equ	0xFF1
 31871                           intcon3	equ	0xFF0
 31872                           indf0	equ	0xFEF
 31873                           postinc0	equ	0xFEE
 31874                           plusw0	equ	0xFEB
 31875                           fsr0h	equ	0xFEA
 31876                           fsr0l	equ	0xFE9
 31877                           wreg	equ	0xFE8
 31878                           indf1	equ	0xFE7
 31879                           postinc1	equ	0xFE6
 31880                           postdec1	equ	0xFE5
 31881                           plusw1	equ	0xFE3
 31882                           fsr1h	equ	0xFE2
 31883                           fsr1l	equ	0xFE1
 31884                           indf2	equ	0xFDF
 31885                           postinc2	equ	0xFDE
 31886                           postdec2	equ	0xFDD
 31887                           plusw2	equ	0xFDB
 31888                           fsr2h	equ	0xFDA
 31889                           fsr2l	equ	0xFD9
 31890                           status	equ	0xFD8
 31891                           
 31892 ;; *************** function _UartTxBufferStatus *****************
 31893 ;; Defined at:
 31894 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31895 ;; Parameters:    Size  Location     Type
 31896 ;;  Module          1    wreg     unsigned char 
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;  Module          1   30[BANK0 ] unsigned char 
 31899 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 31900 ;; Return value:  Size  Location     Type
 31901 ;;                  1    wreg      enum E9037
 31902 ;; Registers used:
 31903 ;;		wreg, status,2, status,0
 31904 ;; Tracked objects:
 31905 ;;		On entry : 0/0
 31906 ;;		On exit  : 0/0
 31907 ;;		Unchanged: 0/0
 31908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31910 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31912 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31913 ;;Total ram usage:        3 bytes
 31914 ;; Hardware stack levels used:    1
 31915 ;; Hardware stack levels required when called:   11
 31916 ;; This function calls:
 31917 ;;		Nothing
 31918 ;; This function is called by:
 31919 ;;		_Uart_WriteConstString
 31920 ;;		_Uart_WriteString
 31921 ;;		_Uart_WriteStringLen
 31922 ;; This function uses a non-reentrant model
 31923 ;;
 31924                           
 31925                           	psect	text147
 31926  005D78                     __ptext147:
 31927                           	opt stack 0
 31928  005D78                     _UartTxBufferStatus:
 31929                           	opt stack 11
 31930                           
 31931                           ; BSR set to: 0
 31932                           ;incstack = 0
 31933                           ;UartTxBufferStatus@Module stored from wreg
 31934  005D78  0100               	movlb	0	; () banked
 31935  005D7A  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 31936                           
 31937                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 31938  005D7C  0E00               	movlw	0
 31939  005D7E  0100               	movlb	0	; () banked
 31940  005D80  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 31941                           
 31942                           ; BSR set to: 0
 31943                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 31944  005D82  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 31945  005D84  A4D8               	btfss	status,2,c
 31946  005D86  D00B               	goto	l651
 31947                           
 31948                           ; BSR set to: 0
 31949                           ;uart_drv.c: 228: {
 31950                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31951  005D88  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31952  005D8C  90D8               	bcf	status,0,c
 31953  005D8E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31954  005D90  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 31955  005D92  D002               	goto	l652
 31956  005D94                     u11350:
 31957                           
 31958                           ; BSR set to: 0
 31959                           ;uart_drv.c: 231: {
 31960                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 31961  005D94  0E01               	movlw	1
 31962  005D96  D014               	goto	L68
 31963  005D98                     l652:
 31964                           
 31965                           ; BSR set to: 0
 31966                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31967                           
 31968                           ; BSR set to: 0
 31969  005D98  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 31970  005D9C  D00C               	goto	L97
 31971  005D9E                     l651:
 31972                           
 31973                           ; BSR set to: 0
 31974                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 31975                           
 31976                           ; BSR set to: 0
 31977  005D9E  0E02               	movlw	2
 31978  005DA0  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 31979  005DA2  A4D8               	btfss	status,2,c
 31980  005DA4  D00E               	goto	l660
 31981                           
 31982                           ; BSR set to: 0
 31983                           ;uart_drv.c: 244: {
 31984                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 31985  005DA6  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 31986  005DAA  90D8               	bcf	status,0,c
 31987  005DAC  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 31988  005DAE  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 31989  005DB0  D7F1               	goto	u11350
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 31993                           
 31994                           ; BSR set to: 0
 31995                           
 31996                           ;uart_drv.c: 249: }
 31997                           
 31998                           ; BSR set to: 0
 31999                           ;uart_drv.c: 247: {
 32000                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32001  005DB2  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32002  005DB6                     L97:
 32003  005DB6  90D8               	bcf	status,0,c
 32004  005DB8  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32005  005DBA  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32006  005DBC  D002               	goto	l660
 32007                           
 32008                           ; BSR set to: 0
 32009                           ;uart_drv.c: 251: {
 32010                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32011  005DBE  0E02               	movlw	2
 32012  005DC0                     L68:
 32013  005DC0  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32014  005DC2                     l660:
 32015                           
 32016                           ; BSR set to: 0
 32017                           ;uart_drv.c: 257: }
 32018                           ;uart_drv.c: 258: }
 32019                           ;uart_drv.c: 260: return TxBufferStatus;
 32020                           
 32021                           ; BSR set to: 0
 32022                           
 32023                           ; BSR set to: 0
 32024                           
 32025                           ; BSR set to: 0
 32026                           
 32027                           ; BSR set to: 0
 32028                           
 32029                           ;uart_drv.c: 254: else
 32030                           ;uart_drv.c: 255: {
 32031                           
 32032                           ; BSR set to: 0
 32033  005DC2  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32034  005DC4  0012               	return	
 32035  005DC6                     __end_of_UartTxBufferStatus:
 32036                           	opt stack 0
 32037                           tosu	equ	0xFFF
 32038                           tosh	equ	0xFFE
 32039                           tosl	equ	0xFFD
 32040                           pclath	equ	0xFFA
 32041                           tblptru	equ	0xFF8
 32042                           tblptrh	equ	0xFF7
 32043                           tblptrl	equ	0xFF6
 32044                           tablat	equ	0xFF5
 32045                           prodh	equ	0xFF4
 32046                           prodl	equ	0xFF3
 32047                           intcon	equ	0xFF2
 32048                           intcon2	equ	0xFF1
 32049                           intcon3	equ	0xFF0
 32050                           indf0	equ	0xFEF
 32051                           postinc0	equ	0xFEE
 32052                           plusw0	equ	0xFEB
 32053                           fsr0h	equ	0xFEA
 32054                           fsr0l	equ	0xFE9
 32055                           wreg	equ	0xFE8
 32056                           indf1	equ	0xFE7
 32057                           postinc1	equ	0xFE6
 32058                           postdec1	equ	0xFE5
 32059                           plusw1	equ	0xFE3
 32060                           fsr1h	equ	0xFE2
 32061                           fsr1l	equ	0xFE1
 32062                           indf2	equ	0xFDF
 32063                           postinc2	equ	0xFDE
 32064                           postdec2	equ	0xFDD
 32065                           plusw2	equ	0xFDB
 32066                           fsr2h	equ	0xFDA
 32067                           fsr2l	equ	0xFD9
 32068                           status	equ	0xFD8
 32069                           
 32070 ;; *************** function _StringCopy *****************
 32071 ;; Defined at:
 32072 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32073 ;; Parameters:    Size  Location     Type
 32074 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32075 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32076 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32077 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32078 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32079 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32080 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32081 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32082 ;;  Len             2   41[BANK0 ] unsigned short 
 32083 ;; Auto vars:     Size  Location     Type
 32084 ;;  Index           2   45[BANK0 ] unsigned short 
 32085 ;; Return value:  Size  Location     Type
 32086 ;;                  1    wreg      void 
 32087 ;; Registers used:
 32088 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32089 ;; Tracked objects:
 32090 ;;		On entry : 0/0
 32091 ;;		On exit  : 0/0
 32092 ;;		Unchanged: 0/0
 32093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32094 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32095 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32096 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32097 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32098 ;;Total ram usage:       10 bytes
 32099 ;; Hardware stack levels used:    1
 32100 ;; Hardware stack levels required when called:   11
 32101 ;; This function calls:
 32102 ;;		Nothing
 32103 ;; This function is called by:
 32104 ;;		_ModemEvtParser
 32105 ;;		_GetSmsSm
 32106 ;;		_SendSmsSm
 32107 ;;		_Mdm_GetSmsData
 32108 ;;		_InitGprsNetwork
 32109 ;;		_HttpGetMethod
 32110 ;;		_Eeprom_Write
 32111 ;;		_detectCmd
 32112 ;;		_Mdm_SendSmsData
 32113 ;; This function uses a non-reentrant model
 32114 ;;
 32115                           
 32116                           	psect	text148
 32117  0056C6                     __ptext148:
 32118                           	opt stack 0
 32119  0056C6                     _StringCopy:
 32120                           	opt stack 13
 32121                           
 32122                           ;sf.c: 106: UINT16 Index = 0;
 32123                           
 32124                           ; BSR set to: 0
 32125                           ;incstack = 0
 32126  0056C6  0E00               	movlw	0
 32127  0056C8  0100               	movlb	0	; () banked
 32128  0056CA  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32129  0056CC  0E00               	movlw	0
 32130  0056CE  6F8D               	movwf	StringCopy@Index& (0+255),b
 32131                           
 32132                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32133  0056D0  0E00               	movlw	0
 32134  0056D2  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32135  0056D4  0E00               	movlw	0
 32136  0056D6  6F8D               	movwf	StringCopy@Index& (0+255),b
 32137  0056D8  D020               	goto	l2255
 32138  0056DA                     
 32139                           ; BSR set to: 0
 32140                           ;sf.c: 110: {
 32141                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32142                           
 32143                           ; BSR set to: 0
 32144  0056DA  518D               	movf	StringCopy@Index& (0+255),w,b
 32145  0056DC  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32146  0056DE  6F8B               	movwf	??_StringCopy& (0+255),b
 32147  0056E0  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32148  0056E2  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32149  0056E4  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32150  0056E6  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32151  0056EA  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32152  0056EE  6AF8               	clrf	tblptru,c
 32153  0056F0  518D               	movf	StringCopy@Index& (0+255),w,b
 32154  0056F2  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32155  0056F4  6ED9               	movwf	fsr2l,c
 32156  0056F6  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32157  0056F8  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32158  0056FA  6EDA               	movwf	fsr2h,c
 32159  0056FC  0E0E               	movlw	(high __ramtop+-1)
 32160  0056FE  64F7               	cpfsgt	tblptrh,c
 32161  005700  D003               	bra	u12077
 32162  005702  0008               	tblrd		*
 32163  005704  50F5               	movf	tablat,w,c
 32164  005706  D005               	bra	u12070
 32165  005708                     u12077:
 32166  005708  CFF6 FFE9          	movff	tblptrl,fsr0l
 32167  00570C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32168  005710  50EF               	movf	indf0,w,c
 32169  005712                     u12070:
 32170  005712  6EDF               	movwf	indf2,c
 32171  005714  0100               	movlb	0	; () banked
 32172  005716  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32173  005718  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32174  00571A                     l2255:
 32175                           
 32176                           ; BSR set to: 0
 32177                           
 32178                           ; BSR set to: 0
 32179  00571A  5189               	movf	StringCopy@Len& (0+255),w,b
 32180  00571C  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32181  00571E  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32182  005720  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32183  005722  B0D8               	btfsc	status,0,c
 32184  005724  0012               	return	
 32185  005726  D7D9               	goto	l2256
 32186  005728                     __end_of_StringCopy:
 32187                           	opt stack 0
 32188                           tosu	equ	0xFFF
 32189                           tosh	equ	0xFFE
 32190                           tosl	equ	0xFFD
 32191                           pclath	equ	0xFFA
 32192                           tblptru	equ	0xFF8
 32193                           tblptrh	equ	0xFF7
 32194                           tblptrl	equ	0xFF6
 32195                           tablat	equ	0xFF5
 32196                           prodh	equ	0xFF4
 32197                           prodl	equ	0xFF3
 32198                           intcon	equ	0xFF2
 32199                           intcon2	equ	0xFF1
 32200                           intcon3	equ	0xFF0
 32201                           indf0	equ	0xFEF
 32202                           postinc0	equ	0xFEE
 32203                           plusw0	equ	0xFEB
 32204                           fsr0h	equ	0xFEA
 32205                           fsr0l	equ	0xFE9
 32206                           wreg	equ	0xFE8
 32207                           indf1	equ	0xFE7
 32208                           postinc1	equ	0xFE6
 32209                           postdec1	equ	0xFE5
 32210                           plusw1	equ	0xFE3
 32211                           fsr1h	equ	0xFE2
 32212                           fsr1l	equ	0xFE1
 32213                           indf2	equ	0xFDF
 32214                           postinc2	equ	0xFDE
 32215                           postdec2	equ	0xFDD
 32216                           plusw2	equ	0xFDB
 32217                           fsr2h	equ	0xFDA
 32218                           fsr2l	equ	0xFD9
 32219                           status	equ	0xFD8
 32220                           
 32221 ;; *************** function _OsTmr_StartTimer *****************
 32222 ;; Defined at:
 32223 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32226 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32227 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32228 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32229 ;; Auto vars:     Size  Location     Type
 32230 ;;		None
 32231 ;; Return value:  Size  Location     Type
 32232 ;;                  1    wreg      void 
 32233 ;; Registers used:
 32234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32235 ;; Tracked objects:
 32236 ;;		On entry : 0/0
 32237 ;;		On exit  : 0/0
 32238 ;;		Unchanged: 0/0
 32239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32240 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32243 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32244 ;;Total ram usage:        6 bytes
 32245 ;; Hardware stack levels used:    1
 32246 ;; Hardware stack levels required when called:   12
 32247 ;; This function calls:
 32248 ;;		_GetOsTickCounter
 32249 ;; This function is called by:
 32250 ;;		_OsTmr_Wait
 32251 ;;		_CheckModem
 32252 ;;		_SendSmsSm
 32253 ;;		_InitGprsNetwork
 32254 ;;		_HttpGetMethod
 32255 ;;		_I2cSlv_QueryI2cData
 32256 ;;		_Term_MainSm
 32257 ;; This function uses a non-reentrant model
 32258 ;;
 32259                           
 32260                           	psect	text149
 32261  005786                     __ptext149:
 32262                           	opt stack 0
 32263  005786                     _OsTmr_StartTimer:
 32264                           	opt stack 12
 32265                           
 32266                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32267                           
 32268                           ; BSR set to: 0
 32269                           ;incstack = 0
 32270  005786  0100               	movlb	0	; () banked
 32271  005788  EE20 F001          	lfsr	2,1
 32272  00578C  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32273  00578E  26D9               	addwf	fsr2l,f,c
 32274  005790  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32275  005792  22DA               	addwfc	fsr2h,f,c
 32276  005794  0E00               	movlw	0
 32277  005796  6EDF               	movwf	indf2,c
 32278                           
 32279                           ; BSR set to: 0
 32280                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32281  005798  ECD7  F034         	call	_GetOsTickCounter	;wreg free
 32282  00579C  0100               	movlb	0	; () banked
 32283  00579E  EE20 F002          	lfsr	2,2
 32284  0057A2  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32285  0057A4  26D9               	addwf	fsr2l,f,c
 32286  0057A6  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32287  0057A8  22DA               	addwfc	fsr2h,f,c
 32288  0057AA  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32289  0057AE  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32290  0057B2  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32291  0057B6  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32292                           
 32293                           ; BSR set to: 0
 32294                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32295  0057BA  EE20 F006          	lfsr	2,6
 32296  0057BE  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32297  0057C0  26D9               	addwf	fsr2l,f,c
 32298  0057C2  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32299  0057C4  22DA               	addwfc	fsr2h,f,c
 32300  0057C6  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32301  0057CA  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32302  0057CE  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32303  0057D2  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32304                           
 32305                           ; BSR set to: 0
 32306                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32307  0057D6  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32308  0057DA  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32309  0057DE  0E01               	movlw	1
 32310  0057E0  6EDF               	movwf	indf2,c
 32311                           
 32312                           ; BSR set to: 0
 32313  0057E2  0012               	return		;funcret
 32314  0057E4                     __end_of_OsTmr_StartTimer:
 32315                           	opt stack 0
 32316                           tosu	equ	0xFFF
 32317                           tosh	equ	0xFFE
 32318                           tosl	equ	0xFFD
 32319                           pclath	equ	0xFFA
 32320                           tblptru	equ	0xFF8
 32321                           tblptrh	equ	0xFF7
 32322                           tblptrl	equ	0xFF6
 32323                           tablat	equ	0xFF5
 32324                           prodh	equ	0xFF4
 32325                           prodl	equ	0xFF3
 32326                           intcon	equ	0xFF2
 32327                           intcon2	equ	0xFF1
 32328                           intcon3	equ	0xFF0
 32329                           indf0	equ	0xFEF
 32330                           postinc0	equ	0xFEE
 32331                           plusw0	equ	0xFEB
 32332                           fsr0h	equ	0xFEA
 32333                           fsr0l	equ	0xFE9
 32334                           wreg	equ	0xFE8
 32335                           indf1	equ	0xFE7
 32336                           postinc1	equ	0xFE6
 32337                           postdec1	equ	0xFE5
 32338                           plusw1	equ	0xFE3
 32339                           fsr1h	equ	0xFE2
 32340                           fsr1l	equ	0xFE1
 32341                           indf2	equ	0xFDF
 32342                           postinc2	equ	0xFDE
 32343                           postdec2	equ	0xFDD
 32344                           plusw2	equ	0xFDB
 32345                           fsr2h	equ	0xFDA
 32346                           fsr2l	equ	0xFD9
 32347                           status	equ	0xFD8
 32348                           
 32349 ;; *************** function _OsTmr_GetTimerStatus *****************
 32350 ;; Defined at:
 32351 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32352 ;; Parameters:    Size  Location     Type
 32353 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 32354 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32355 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32356 ;; Auto vars:     Size  Location     Type
 32357 ;;		None
 32358 ;; Return value:  Size  Location     Type
 32359 ;;                  1    wreg      enum E7740
 32360 ;; Registers used:
 32361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32362 ;; Tracked objects:
 32363 ;;		On entry : 0/0
 32364 ;;		On exit  : 0/0
 32365 ;;		Unchanged: 0/0
 32366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32370 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32371 ;;Total ram usage:        6 bytes
 32372 ;; Hardware stack levels used:    1
 32373 ;; Hardware stack levels required when called:   13
 32374 ;; This function calls:
 32375 ;;		_GetElapsedTime
 32376 ;; This function is called by:
 32377 ;;		_OsTmr_Wait
 32378 ;;		_CheckModem
 32379 ;;		_SendSmsSm
 32380 ;;		_InitGprsNetwork
 32381 ;;		_HttpGetMethod
 32382 ;;		_I2cSlv_QueryI2cData
 32383 ;;		_Term_MainSm
 32384 ;; This function uses a non-reentrant model
 32385 ;;
 32386                           
 32387                           	psect	text150
 32388  004DE6                     __ptext150:
 32389                           	opt stack 0
 32390  004DE6                     _OsTmr_GetTimerStatus:
 32391                           	opt stack 11
 32392                           
 32393                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 32394                           
 32395                           ; BSR set to: 0
 32396                           ;incstack = 0
 32397  004DE6  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32398  004DEA  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32399  004DEE  04DE               	decf	postinc2,w,c
 32400  004DF0  A4D8               	btfss	status,2,c
 32401  004DF2  D030               	goto	l864
 32402                           
 32403                           ;os_timers.c: 197: {
 32404                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 32405  004DF4  0100               	movlb	0	; () banked
 32406  004DF6  EE20 F006          	lfsr	2,6
 32407  004DFA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32408  004DFC  26D9               	addwf	fsr2l,f,c
 32409  004DFE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32410  004E00  22DA               	addwfc	fsr2h,f,c
 32411  004E02  EE10 F002          	lfsr	1,2
 32412  004E06  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32413  004E08  26E1               	addwf	fsr1l,f,c
 32414  004E0A  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32415  004E0C  22E2               	addwfc	fsr1h,f,c
 32416  004E0E  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 32417  004E12  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 32418  004E16  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 32419  004E1A  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 32420  004E1E  EC06  F01F         	call	_GetElapsedTime	;wreg free
 32421  004E22  50DE               	movf	postinc2,w,c
 32422  004E24  0100               	movlb	0	; () banked
 32423  004E26  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 32424  004E28  50DE               	movf	postinc2,w,c
 32425  004E2A  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 32426  004E2C  50DE               	movf	postinc2,w,c
 32427  004E2E  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 32428  004E30  50DE               	movf	postinc2,w,c
 32429  004E32  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 32430  004E34  A0D8               	btfss	status,0,c
 32431  004E36  D017               	goto	l867
 32432                           
 32433                           ; BSR set to: 0
 32434                           ;os_timers.c: 200: {
 32435                           ;os_timers.c: 202: Timer->Enabled = 0u;
 32436  004E38  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32437  004E3C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32438  004E40  0E00               	movlw	0
 32439  004E42  6EDF               	movwf	indf2,c
 32440                           
 32441                           ; BSR set to: 0
 32442                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 32443  004E44  EE20 F001          	lfsr	2,1
 32444  004E48  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32445  004E4A  26D9               	addwf	fsr2l,f,c
 32446  004E4C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32447  004E4E  22DA               	addwfc	fsr2h,f,c
 32448  004E50  0E01               	movlw	1
 32449  004E52  D008               	goto	L98
 32450  004E54                     l864:
 32451                           
 32452                           ;os_timers.c: 211: else
 32453                           ;os_timers.c: 212: {
 32454                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 32455                           
 32456                           ; BSR set to: 0
 32457  004E54  0100               	movlb	0	; () banked
 32458  004E56  EE20 F001          	lfsr	2,1
 32459  004E5A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32460  004E5C  26D9               	addwf	fsr2l,f,c
 32461  004E5E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32462  004E60  22DA               	addwfc	fsr2h,f,c
 32463  004E62  0E02               	movlw	2
 32464  004E64                     L98:
 32465  004E64  6EDF               	movwf	indf2,c
 32466  004E66                     l867:
 32467                           
 32468                           ; BSR set to: 0
 32469                           ;os_timers.c: 215: }
 32470                           ;os_timers.c: 218: return Timer->Status;
 32471  004E66  EE20 F001          	lfsr	2,1
 32472  004E6A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32473  004E6C  26D9               	addwf	fsr2l,f,c
 32474  004E6E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32475  004E70  22DA               	addwfc	fsr2h,f,c
 32476  004E72  50DF               	movf	indf2,w,c
 32477  004E74  0012               	return	
 32478  004E76                     __end_of_OsTmr_GetTimerStatus:
 32479                           	opt stack 0
 32480                           tosu	equ	0xFFF
 32481                           tosh	equ	0xFFE
 32482                           tosl	equ	0xFFD
 32483                           pclath	equ	0xFFA
 32484                           tblptru	equ	0xFF8
 32485                           tblptrh	equ	0xFF7
 32486                           tblptrl	equ	0xFF6
 32487                           tablat	equ	0xFF5
 32488                           prodh	equ	0xFF4
 32489                           prodl	equ	0xFF3
 32490                           intcon	equ	0xFF2
 32491                           intcon2	equ	0xFF1
 32492                           intcon3	equ	0xFF0
 32493                           indf0	equ	0xFEF
 32494                           postinc0	equ	0xFEE
 32495                           plusw0	equ	0xFEB
 32496                           fsr0h	equ	0xFEA
 32497                           fsr0l	equ	0xFE9
 32498                           wreg	equ	0xFE8
 32499                           indf1	equ	0xFE7
 32500                           postinc1	equ	0xFE6
 32501                           postdec1	equ	0xFE5
 32502                           plusw1	equ	0xFE3
 32503                           fsr1h	equ	0xFE2
 32504                           fsr1l	equ	0xFE1
 32505                           indf2	equ	0xFDF
 32506                           postinc2	equ	0xFDE
 32507                           postdec2	equ	0xFDD
 32508                           plusw2	equ	0xFDB
 32509                           fsr2h	equ	0xFDA
 32510                           fsr2l	equ	0xFD9
 32511                           status	equ	0xFD8
 32512                           
 32513 ;; *************** function _GetElapsedTime *****************
 32514 ;; Defined at:
 32515 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32516 ;; Parameters:    Size  Location     Type
 32517 ;;  StartTime       4   33[BANK0 ] unsigned long 
 32518 ;; Auto vars:     Size  Location     Type
 32519 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 32520 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 32521 ;; Return value:  Size  Location     Type
 32522 ;;                  4   33[BANK0 ] unsigned long 
 32523 ;; Registers used:
 32524 ;;		wreg, status,2, status,0, cstack
 32525 ;; Tracked objects:
 32526 ;;		On entry : 0/0
 32527 ;;		On exit  : 0/0
 32528 ;;		Unchanged: 0/0
 32529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32530 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32531 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32532 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32533 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32534 ;;Total ram usage:       20 bytes
 32535 ;; Hardware stack levels used:    1
 32536 ;; Hardware stack levels required when called:   12
 32537 ;; This function calls:
 32538 ;;		_GetOsTickCounter
 32539 ;; This function is called by:
 32540 ;;		_OsTmr_GetTimerStatus
 32541 ;;		_OsTmr_GetRemainingTime
 32542 ;; This function uses a non-reentrant model
 32543 ;;
 32544                           
 32545                           	psect	text151
 32546  003E0C                     __ptext151:
 32547                           	opt stack 0
 32548  003E0C                     _GetElapsedTime:
 32549                           	opt stack 11
 32550                           
 32551                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 32552                           ;os_timers.c: 87: UINT32 TimeValue;
 32553                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 32554                           
 32555                           ; BSR set to: 0
 32556                           ;incstack = 0
 32557  003E0C  ECD7  F034         	call	_GetOsTickCounter	;wreg free
 32558  003E10  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 32559  003E14  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 32560  003E18  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 32561  003E1C  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 32562                           
 32563                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 32564  003E20  0100               	movlb	0	; () banked
 32565  003E22  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 32566  003E24  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32567  003E26  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 32568  003E28  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32569  003E2A  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 32570  003E2C  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32571  003E2E  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 32572  003E30  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32573  003E32  A0D8               	btfss	status,0,c
 32574  003E34  D01D               	goto	l844
 32575                           
 32576                           ; BSR set to: 0
 32577                           ;os_timers.c: 94: {
 32578                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 32579  003E36  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32580  003E3A  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32581  003E3E  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32582  003E42  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32583  003E46  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32584  003E48  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32585  003E4A  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32586  003E4C  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32587  003E4E  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32588  003E50  0E00               	movlw	0
 32589  003E52  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32590  003E54  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32591  003E56  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32592  003E58  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32593  003E5A  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32594  003E5C  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32595  003E5E  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32596  003E60  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32597  003E62  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32598  003E64  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32599  003E66  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32600  003E68  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32601  003E6A  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32602  003E6C  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32603  003E6E  D028               	goto	L69
 32604  003E70                     l844:
 32605                           
 32606                           ; BSR set to: 0
 32607                           ;os_timers.c: 97: else
 32608                           ;os_timers.c: 98: {
 32609                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 32610                           
 32611                           ; BSR set to: 0
 32612  003E70  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32613  003E74  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32614  003E78  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32615  003E7C  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32616  003E80  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32617  003E82  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32618  003E84  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32619  003E86  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32620  003E88  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32621  003E8A  0E00               	movlw	0
 32622  003E8C  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32623  003E8E  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32624  003E90  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32625  003E92  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32626  003E94  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32627  003E96  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 32628  003E98  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32629  003E9A  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32630  003E9C  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 32631  003E9E  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32632  003EA0  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32633  003EA2  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 32634  003EA4  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32635  003EA6  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32636  003EA8  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 32637  003EAA  0EFF               	movlw	255
 32638  003EAC  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 32639  003EAE  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32640  003EB0  0EFF               	movlw	255
 32641  003EB2  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 32642  003EB4  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32643  003EB6  0EFF               	movlw	255
 32644  003EB8  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 32645  003EBA  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32646  003EBC  0EFF               	movlw	255
 32647  003EBE  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 32648  003EC0                     L69:
 32649  003EC0  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 32650                           
 32651                           ; BSR set to: 0
 32652                           ;os_timers.c: 100: }
 32653                           ;os_timers.c: 102: return TimeValue;
 32654                           
 32655                           ; BSR set to: 0
 32656  003EC2  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 32657  003EC6  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 32658  003ECA  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 32659  003ECE  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 32660  003ED2  0012               	return	
 32661  003ED4                     __end_of_GetElapsedTime:
 32662                           	opt stack 0
 32663                           tosu	equ	0xFFF
 32664                           tosh	equ	0xFFE
 32665                           tosl	equ	0xFFD
 32666                           pclath	equ	0xFFA
 32667                           tblptru	equ	0xFF8
 32668                           tblptrh	equ	0xFF7
 32669                           tblptrl	equ	0xFF6
 32670                           tablat	equ	0xFF5
 32671                           prodh	equ	0xFF4
 32672                           prodl	equ	0xFF3
 32673                           intcon	equ	0xFF2
 32674                           intcon2	equ	0xFF1
 32675                           intcon3	equ	0xFF0
 32676                           indf0	equ	0xFEF
 32677                           postinc0	equ	0xFEE
 32678                           plusw0	equ	0xFEB
 32679                           fsr0h	equ	0xFEA
 32680                           fsr0l	equ	0xFE9
 32681                           wreg	equ	0xFE8
 32682                           indf1	equ	0xFE7
 32683                           postinc1	equ	0xFE6
 32684                           postdec1	equ	0xFE5
 32685                           plusw1	equ	0xFE3
 32686                           fsr1h	equ	0xFE2
 32687                           fsr1l	equ	0xFE1
 32688                           indf2	equ	0xFDF
 32689                           postinc2	equ	0xFDE
 32690                           postdec2	equ	0xFDD
 32691                           plusw2	equ	0xFDB
 32692                           fsr2h	equ	0xFDA
 32693                           fsr2l	equ	0xFD9
 32694                           status	equ	0xFD8
 32695                           
 32696 ;; *************** function _GetOsTickCounter *****************
 32697 ;; Defined at:
 32698 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32699 ;; Parameters:    Size  Location     Type
 32700 ;;		None
 32701 ;; Auto vars:     Size  Location     Type
 32702 ;;		None
 32703 ;; Return value:  Size  Location     Type
 32704 ;;                  4   29[BANK0 ] unsigned long 
 32705 ;; Registers used:
 32706 ;;		None
 32707 ;; Tracked objects:
 32708 ;;		On entry : 0/0
 32709 ;;		On exit  : 0/0
 32710 ;;		Unchanged: 0/0
 32711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32715 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32716 ;;Total ram usage:        4 bytes
 32717 ;; Hardware stack levels used:    1
 32718 ;; Hardware stack levels required when called:   11
 32719 ;; This function calls:
 32720 ;;		Nothing
 32721 ;; This function is called by:
 32722 ;;		_GetElapsedTime
 32723 ;;		_OsTmr_StartTimer
 32724 ;;		_OsTmr_GetElapsedTime
 32725 ;; This function uses a non-reentrant model
 32726 ;;
 32727                           
 32728                           	psect	text152
 32729  0069AE                     __ptext152:
 32730                           	opt stack 0
 32731  0069AE                     _GetOsTickCounter:
 32732                           	opt stack 12
 32733                           
 32734                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 32735                           
 32736                           ; BSR set to: 0
 32737                           ;incstack = 0
 32738  0069AE  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 32739  0069B2  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 32740  0069B6  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 32741  0069BA  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 32742  0069BE  0012               	return		;funcret
 32743  0069C0                     __end_of_GetOsTickCounter:
 32744                           	opt stack 0
 32745                           tosu	equ	0xFFF
 32746                           tosh	equ	0xFFE
 32747                           tosl	equ	0xFFD
 32748                           pclath	equ	0xFFA
 32749                           tblptru	equ	0xFF8
 32750                           tblptrh	equ	0xFF7
 32751                           tblptrl	equ	0xFF6
 32752                           tablat	equ	0xFF5
 32753                           prodh	equ	0xFF4
 32754                           prodl	equ	0xFF3
 32755                           intcon	equ	0xFF2
 32756                           intcon2	equ	0xFF1
 32757                           intcon3	equ	0xFF0
 32758                           indf0	equ	0xFEF
 32759                           postinc0	equ	0xFEE
 32760                           plusw0	equ	0xFEB
 32761                           fsr0h	equ	0xFEA
 32762                           fsr0l	equ	0xFE9
 32763                           wreg	equ	0xFE8
 32764                           indf1	equ	0xFE7
 32765                           postinc1	equ	0xFE6
 32766                           postdec1	equ	0xFE5
 32767                           plusw1	equ	0xFE3
 32768                           fsr1h	equ	0xFE2
 32769                           fsr1l	equ	0xFE1
 32770                           indf2	equ	0xFDF
 32771                           postinc2	equ	0xFDE
 32772                           postdec2	equ	0xFDD
 32773                           plusw2	equ	0xFDB
 32774                           fsr2h	equ	0xFDA
 32775                           fsr2l	equ	0xFD9
 32776                           status	equ	0xFD8
 32777                           
 32778 ;; *************** function _ClearBuffer *****************
 32779 ;; Defined at:
 32780 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32781 ;; Parameters:    Size  Location     Type
 32782 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 32783 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 32784 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32785 ;;  Len             2   31[BANK0 ] unsigned short 
 32786 ;; Auto vars:     Size  Location     Type
 32787 ;;  Index           2   33[BANK0 ] unsigned short 
 32788 ;; Return value:  Size  Location     Type
 32789 ;;                  1    wreg      void 
 32790 ;; Registers used:
 32791 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32792 ;; Tracked objects:
 32793 ;;		On entry : 0/0
 32794 ;;		On exit  : 0/0
 32795 ;;		Unchanged: 0/0
 32796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32798 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32800 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32801 ;;Total ram usage:        6 bytes
 32802 ;; Hardware stack levels used:    1
 32803 ;; Hardware stack levels required when called:   11
 32804 ;; This function calls:
 32805 ;;		Nothing
 32806 ;; This function is called by:
 32807 ;;		_GetSmsSm
 32808 ;;		_GetCallerNumber
 32809 ;;		_InitGprsNetwork
 32810 ;;		_HttpGetMethod
 32811 ;;		_Eeprom_Reset
 32812 ;;		_GsmGprsTerminal
 32813 ;; This function uses a non-reentrant model
 32814 ;;
 32815                           
 32816                           	psect	text153
 32817  006368                     __ptext153:
 32818                           	opt stack 0
 32819  006368                     _ClearBuffer:
 32820                           	opt stack 14
 32821                           
 32822                           ;sf.c: 126: UINT16 Index = 0;
 32823                           
 32824                           ;incstack = 0
 32825  006368  0E00               	movlw	0
 32826  00636A  0100               	movlb	0	; () banked
 32827  00636C  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 32828  00636E  0E00               	movlw	0
 32829  006370  6F81               	movwf	ClearBuffer@Index& (0+255),b
 32830                           
 32831                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 32832  006372  0E00               	movlw	0
 32833  006374  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 32834  006376  0E00               	movlw	0
 32835  006378  6F81               	movwf	ClearBuffer@Index& (0+255),b
 32836  00637A  D00A               	goto	l2261
 32837  00637C                     
 32838                           ; BSR set to: 0
 32839                           ;sf.c: 130: {
 32840                           ;sf.c: 131: *(Buffer + Index) = 0;
 32841                           
 32842                           ; BSR set to: 0
 32843  00637C  5181               	movf	ClearBuffer@Index& (0+255),w,b
 32844  00637E  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 32845  006380  6ED9               	movwf	fsr2l,c
 32846  006382  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 32847  006384  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 32848  006386  6EDA               	movwf	fsr2h,c
 32849  006388  0E00               	movlw	0
 32850  00638A  6EDF               	movwf	indf2,c
 32851                           
 32852                           ; BSR set to: 0
 32853  00638C  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 32854  00638E  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 32855  006390                     l2261:
 32856                           
 32857                           ; BSR set to: 0
 32858                           
 32859                           ; BSR set to: 0
 32860  006390  5181               	movf	ClearBuffer@Index& (0+255),w,b
 32861  006392  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 32862  006394  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 32863  006396  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 32864  006398  A0D8               	btfss	status,0,c
 32865  00639A  0012               	return	
 32866  00639C  D7EF               	goto	l2262
 32867  00639E                     __end_of_ClearBuffer:
 32868                           	opt stack 0
 32869                           tosu	equ	0xFFF
 32870                           tosh	equ	0xFFE
 32871                           tosl	equ	0xFFD
 32872                           pclath	equ	0xFFA
 32873                           tblptru	equ	0xFF8
 32874                           tblptrh	equ	0xFF7
 32875                           tblptrl	equ	0xFF6
 32876                           tablat	equ	0xFF5
 32877                           prodh	equ	0xFF4
 32878                           prodl	equ	0xFF3
 32879                           intcon	equ	0xFF2
 32880                           intcon2	equ	0xFF1
 32881                           intcon3	equ	0xFF0
 32882                           indf0	equ	0xFEF
 32883                           postinc0	equ	0xFEE
 32884                           plusw0	equ	0xFEB
 32885                           fsr0h	equ	0xFEA
 32886                           fsr0l	equ	0xFE9
 32887                           wreg	equ	0xFE8
 32888                           indf1	equ	0xFE7
 32889                           postinc1	equ	0xFE6
 32890                           postdec1	equ	0xFE5
 32891                           plusw1	equ	0xFE3
 32892                           fsr1h	equ	0xFE2
 32893                           fsr1l	equ	0xFE1
 32894                           indf2	equ	0xFDF
 32895                           postinc2	equ	0xFDE
 32896                           postdec2	equ	0xFDD
 32897                           plusw2	equ	0xFDB
 32898                           fsr2h	equ	0xFDA
 32899                           fsr2l	equ	0xFD9
 32900                           status	equ	0xFD8
 32901                           
 32902 ;; *************** function _LedStateMachine *****************
 32903 ;; Defined at:
 32904 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 32905 ;; Parameters:    Size  Location     Type
 32906 ;;  Led             1    wreg     unsigned char 
 32907 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 32908 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 32909 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 32910 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 32911 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 32912 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 32913 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 32914 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 32915 ;; Auto vars:     Size  Location     Type
 32916 ;;  Led             1   57[BANK0 ] unsigned char 
 32917 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 32918 ;; Return value:  Size  Location     Type
 32919 ;;                  1    wreg      unsigned char 
 32920 ;; Registers used:
 32921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32922 ;; Tracked objects:
 32923 ;;		On entry : 0/0
 32924 ;;		On exit  : 0/0
 32925 ;;		Unchanged: 0/0
 32926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32927 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32929 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32930 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32931 ;;Total ram usage:       11 bytes
 32932 ;; Hardware stack levels used:    1
 32933 ;; Hardware stack levels required when called:   13
 32934 ;; This function calls:
 32935 ;;		_LedBlinkStateMachine
 32936 ;;		_LedPulseStateMachine
 32937 ;;		_Led_SetLedStatus
 32938 ;; This function is called by:
 32939 ;;		_Led_MainTask
 32940 ;; This function uses a non-reentrant model
 32941 ;;
 32942                           
 32943                           	psect	text154
 32944  0046A0                     __ptext154:
 32945                           	opt stack 0
 32946  0046A0                     _LedStateMachine:
 32947                           	opt stack 14
 32948                           
 32949                           ; BSR set to: 0
 32950                           ;incstack = 0
 32951                           ;LedStateMachine@Led stored from wreg
 32952  0046A0  0100               	movlb	0	; () banked
 32953  0046A2  6F99               	movwf	LedStateMachine@Led& (0+255),b
 32954                           
 32955                           ;led.c: 238: UINT8 LedOutSts = 0u;
 32956  0046A4  0E00               	movlw	0
 32957  0046A6  0100               	movlb	0	; () banked
 32958  0046A8  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32959                           
 32960                           ;led.c: 241: switch (*LedSts)
 32961  0046AA  D037               	goto	l2120
 32962  0046AC                     
 32963                           ; BSR set to: 0
 32964                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 32965                           
 32966                           ; BSR set to: 0
 32967  0046AC  0E00               	movlw	0
 32968  0046AE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32969                           
 32970                           ; BSR set to: 0
 32971                           ;led.c: 246: *LedOut = ((UINT8)(0));
 32972  0046B0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32973  0046B4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32974  0046B8  0E00               	movlw	0
 32975  0046BA  D007               	goto	L70
 32976  0046BC                     
 32977                           ; BSR set to: 0
 32978                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 32979                           
 32980                           ; BSR set to: 0
 32981  0046BC  0E01               	movlw	1
 32982  0046BE  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 32983                           
 32984                           ; BSR set to: 0
 32985                           ;led.c: 252: *LedOut = ((UINT8)(1));
 32986  0046C0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 32987  0046C4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 32988  0046C8  0E01               	movlw	1
 32989  0046CA                     L70:
 32990  0046CA  6EDF               	movwf	indf2,c
 32991                           
 32992                           ;led.c: 253: break;
 32993  0046CC  D03A               	goto	l2122
 32994  0046CE                     
 32995                           ; BSR set to: 0
 32996                           ;led.c: 257: if (*LedOut == 1)
 32997                           
 32998                           ; BSR set to: 0
 32999  0046CE  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33000  0046D2  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33001  0046D6  04DE               	decf	postinc2,w,c
 33002  0046D8  A4D8               	btfss	status,2,c
 33003  0046DA  D006               	goto	l2125
 33004                           
 33005                           ; BSR set to: 0
 33006                           ;led.c: 258: {
 33007                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33008  0046DC  0E00               	movlw	0
 33009  0046DE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33010  0046E0  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33011  0046E2  EC63  F032         	call	_Led_SetLedStatus
 33012                           
 33013                           ;led.c: 261: }
 33014  0046E6  D02D               	goto	l2122
 33015  0046E8                     l2125:
 33016                           
 33017                           ;led.c: 262: else
 33018                           ;led.c: 263: {
 33019                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33020  0046E8  0E01               	movlw	1
 33021  0046EA  0100               	movlb	0	; () banked
 33022  0046EC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33023  0046EE  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33024  0046F0  EC63  F032         	call	_Led_SetLedStatus
 33025                           
 33026                           ;led.c: 266: }
 33027                           ;led.c: 267: break;
 33028  0046F4  D026               	goto	l2122
 33029  0046F6                     
 33030                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33031  0046F6  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33032  0046FA  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33033  0046FE  EC6A  F013         	call	_LedBlinkStateMachine	;wreg free
 33034  004702  D008               	goto	L71
 33035  004704                     
 33036                           ; BSR set to: 0
 33037                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33038                           
 33039                           ; BSR set to: 0
 33040  004704  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33041  004708  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33042  00470C  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33043  004710  EC21  F019         	call	_LedPulseStateMachine	;wreg free
 33044  004714                     L71:
 33045  004714  0100               	movlb	0	; () banked
 33046  004716  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33047                           
 33048                           ; BSR set to: 0
 33049                           ;led.c: 281: }
 33050                           
 33051                           ; BSR set to: 0
 33052                           ;led.c: 280: break;
 33053                           
 33054                           ;led.c: 279: default:
 33055                           
 33056                           ;led.c: 277: break;
 33057  004718  D014               	goto	l2122
 33058  00471A                     l2120:
 33059                           
 33060                           ; BSR set to: 0
 33061                           
 33062                           ; BSR set to: 0
 33063  00471A  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33064  00471E  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33065  004722  50DF               	movf	indf2,w,c
 33066                           
 33067                           ; Switch size 1, requested type "space"
 33068                           ; Number of cases is 5, Range of values is 0 to 4
 33069                           ; switch strategies available:
 33070                           ; Name         Instructions Cycles
 33071                           ; simple_byte           16     9 (average)
 33072                           ;	Chosen strategy is simple_byte
 33073  004724  0A00               	xorlw	0	; case 0
 33074  004726  B4D8               	btfsc	status,2,c
 33075  004728  D7C1               	goto	l2121
 33076  00472A  0A01               	xorlw	1	; case 1
 33077  00472C  B4D8               	btfsc	status,2,c
 33078  00472E  D7C6               	goto	l2123
 33079  004730  0A03               	xorlw	3	; case 2
 33080  004732  B4D8               	btfsc	status,2,c
 33081  004734  D7CC               	goto	l2124
 33082  004736  0A01               	xorlw	1	; case 3
 33083  004738  B4D8               	btfsc	status,2,c
 33084  00473A  D7DD               	goto	l2127
 33085  00473C  0A07               	xorlw	7	; case 4
 33086  00473E  B4D8               	btfsc	status,2,c
 33087  004740  D7E1               	goto	l2128
 33088  004742                     l2122:
 33089                           
 33090                           ;led.c: 283: return LedOutSts;
 33091                           
 33092                           ; BSR set to: 0
 33093  004742  0100               	movlb	0	; () banked
 33094  004744  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33095  004746  0012               	return	
 33096  004748                     __end_of_LedStateMachine:
 33097                           	opt stack 0
 33098                           tosu	equ	0xFFF
 33099                           tosh	equ	0xFFE
 33100                           tosl	equ	0xFFD
 33101                           pclath	equ	0xFFA
 33102                           tblptru	equ	0xFF8
 33103                           tblptrh	equ	0xFF7
 33104                           tblptrl	equ	0xFF6
 33105                           tablat	equ	0xFF5
 33106                           prodh	equ	0xFF4
 33107                           prodl	equ	0xFF3
 33108                           intcon	equ	0xFF2
 33109                           intcon2	equ	0xFF1
 33110                           intcon3	equ	0xFF0
 33111                           indf0	equ	0xFEF
 33112                           postinc0	equ	0xFEE
 33113                           plusw0	equ	0xFEB
 33114                           fsr0h	equ	0xFEA
 33115                           fsr0l	equ	0xFE9
 33116                           wreg	equ	0xFE8
 33117                           indf1	equ	0xFE7
 33118                           postinc1	equ	0xFE6
 33119                           postdec1	equ	0xFE5
 33120                           plusw1	equ	0xFE3
 33121                           fsr1h	equ	0xFE2
 33122                           fsr1l	equ	0xFE1
 33123                           indf2	equ	0xFDF
 33124                           postinc2	equ	0xFDE
 33125                           postdec2	equ	0xFDD
 33126                           plusw2	equ	0xFDB
 33127                           fsr2h	equ	0xFDA
 33128                           fsr2l	equ	0xFD9
 33129                           status	equ	0xFD8
 33130                           
 33131 ;; *************** function _LedPulseStateMachine *****************
 33132 ;; Defined at:
 33133 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33134 ;; Parameters:    Size  Location     Type
 33135 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33136 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33137 ;;  Led             1   44[BANK0 ] unsigned char 
 33138 ;; Auto vars:     Size  Location     Type
 33139 ;;		None
 33140 ;; Return value:  Size  Location     Type
 33141 ;;                  1    wreg      unsigned char 
 33142 ;; Registers used:
 33143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33144 ;; Tracked objects:
 33145 ;;		On entry : 0/0
 33146 ;;		On exit  : 0/0
 33147 ;;		Unchanged: 0/0
 33148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33149 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33151 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33152 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33153 ;;Total ram usage:        5 bytes
 33154 ;; Hardware stack levels used:    1
 33155 ;; Hardware stack levels required when called:   12
 33156 ;; This function calls:
 33157 ;;		_Led_SetLedStatus
 33158 ;;		___lwdiv
 33159 ;; This function is called by:
 33160 ;;		_LedStateMachine
 33161 ;; This function uses a non-reentrant model
 33162 ;;
 33163                           
 33164                           	psect	text155
 33165  003242                     __ptext155:
 33166                           	opt stack 0
 33167  003242                     _LedPulseStateMachine:
 33168                           	opt stack 14
 33169                           
 33170                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33171                           
 33172                           ; BSR set to: 0
 33173                           ;incstack = 0
 33174  003242  D05C               	goto	l2110
 33175  003244                     
 33176                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33177  003244  0100               	movlb	0	; () banked
 33178  003246  EE20 F001          	lfsr	2,1
 33179  00324A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33180  00324C  26D9               	addwf	fsr2l,f,c
 33181  00324E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33182  003250  22DA               	addwfc	fsr2h,f,c
 33183  003252  0E01               	movlw	1
 33184  003254  6EDF               	movwf	indf2,c
 33185                           
 33186                           ; BSR set to: 0
 33187                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33188  003256  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33189  00325A  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33190  00325E  0E01               	movlw	1
 33191  003260  D036               	goto	L72
 33192  003262                     
 33193                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33194                           
 33195                           ; BSR set to: 0
 33196  003262  0100               	movlb	0	; () banked
 33197  003264  EE20 F002          	lfsr	2,2
 33198  003268  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33199  00326A  26D9               	addwf	fsr2l,f,c
 33200  00326C  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33201  00326E  22DA               	addwfc	fsr2h,f,c
 33202  003270  2ADE               	incf	postinc2,f,c
 33203  003272  0E00               	movlw	0
 33204  003274  22DD               	addwfc	postdec2,f,c
 33205                           
 33206                           ; BSR set to: 0
 33207                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33208  003276  EE20 F004          	lfsr	2,4
 33209  00327A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33210  00327C  26D9               	addwf	fsr2l,f,c
 33211  00327E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33212  003280  22DA               	addwfc	fsr2h,f,c
 33213  003282  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33214  003286  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33215  00328A  0E00               	movlw	0
 33216  00328C  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33217  00328E  0E32               	movlw	50
 33218  003290  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33219  003292  EC78  F02D         	call	___lwdiv	;wreg free
 33220  003296  0100               	movlb	0	; () banked
 33221  003298  EE20 F002          	lfsr	2,2
 33222  00329C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33223  00329E  26D9               	addwf	fsr2l,f,c
 33224  0032A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33225  0032A2  22DA               	addwfc	fsr2h,f,c
 33226  0032A4  5183               	movf	?___lwdiv& (0+255),w,b
 33227  0032A6  5CDE               	subwf	postinc2,w,c
 33228  0032A8  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33229  0032AA  58DE               	subwfb	postinc2,w,c
 33230  0032AC  A0D8               	btfss	status,0,c
 33231  0032AE  D034               	goto	l2112
 33232                           
 33233                           ; BSR set to: 0
 33234                           ;led.c: 199: {
 33235                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33236  0032B0  EE20 F002          	lfsr	2,2
 33237  0032B4  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33238  0032B6  26D9               	addwf	fsr2l,f,c
 33239  0032B8  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33240  0032BA  22DA               	addwfc	fsr2h,f,c
 33241  0032BC  0E00               	movlw	0
 33242  0032BE  6EDE               	movwf	postinc2,c
 33243  0032C0  0E00               	movlw	0
 33244  0032C2  6EDD               	movwf	postdec2,c
 33245                           
 33246                           ; BSR set to: 0
 33247                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33248  0032C4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33249  0032C8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33250  0032CC  0E02               	movlw	2
 33251  0032CE                     L72:
 33252  0032CE  6EDF               	movwf	indf2,c
 33253                           
 33254                           ; BSR set to: 0
 33255                           ;led.c: 204: }
 33256                           ;led.c: 205: break;
 33257  0032D0  D023               	goto	l2112
 33258  0032D2                     
 33259                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33260                           
 33261                           ; BSR set to: 0
 33262  0032D2  0100               	movlb	0	; () banked
 33263  0032D4  EE20 F001          	lfsr	2,1
 33264  0032D8  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33265  0032DA  26D9               	addwf	fsr2l,f,c
 33266  0032DC  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33267  0032DE  22DA               	addwfc	fsr2h,f,c
 33268  0032E0  0E00               	movlw	0
 33269  0032E2  6EDF               	movwf	indf2,c
 33270                           
 33271                           ; BSR set to: 0
 33272                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33273  0032E4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33274  0032E8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33275  0032EC  0E00               	movlw	0
 33276  0032EE  6EDF               	movwf	indf2,c
 33277                           
 33278                           ; BSR set to: 0
 33279                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33280  0032F0  0E00               	movlw	0
 33281  0032F2  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33282  0032F4  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33283  0032F6  EC63  F032         	call	_Led_SetLedStatus
 33284                           
 33285                           ;led.c: 218: }
 33286                           
 33287                           ;led.c: 217: break;
 33288                           
 33289                           ;led.c: 216: default:
 33290                           
 33291                           ;led.c: 214: break;
 33292  0032FA  D00E               	goto	l2112
 33293  0032FC                     l2110:
 33294  0032FC  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33295  003300  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33296  003304  50DF               	movf	indf2,w,c
 33297                           
 33298                           ; Switch size 1, requested type "space"
 33299                           ; Number of cases is 3, Range of values is 0 to 2
 33300                           ; switch strategies available:
 33301                           ; Name         Instructions Cycles
 33302                           ; simple_byte           10     6 (average)
 33303                           ;	Chosen strategy is simple_byte
 33304  003306  0A00               	xorlw	0	; case 0
 33305  003308  B4D8               	btfsc	status,2,c
 33306  00330A  D79C               	goto	l2111
 33307  00330C  0A01               	xorlw	1	; case 1
 33308  00330E  B4D8               	btfsc	status,2,c
 33309  003310  D7A8               	goto	l2113
 33310  003312  0A03               	xorlw	3	; case 2
 33311  003314  B4D8               	btfsc	status,2,c
 33312  003316  D7DD               	goto	l2115
 33313  003318                     l2112:
 33314                           
 33315                           ;led.c: 221: return (LedPulse->LedOutState);
 33316  003318  0100               	movlb	0	; () banked
 33317  00331A  EE20 F001          	lfsr	2,1
 33318  00331E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33319  003320  26D9               	addwf	fsr2l,f,c
 33320  003322  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33321  003324  22DA               	addwfc	fsr2h,f,c
 33322  003326  50DF               	movf	indf2,w,c
 33323  003328  0012               	return	
 33324  00332A                     __end_of_LedPulseStateMachine:
 33325                           	opt stack 0
 33326                           tosu	equ	0xFFF
 33327                           tosh	equ	0xFFE
 33328                           tosl	equ	0xFFD
 33329                           pclath	equ	0xFFA
 33330                           tblptru	equ	0xFF8
 33331                           tblptrh	equ	0xFF7
 33332                           tblptrl	equ	0xFF6
 33333                           tablat	equ	0xFF5
 33334                           prodh	equ	0xFF4
 33335                           prodl	equ	0xFF3
 33336                           intcon	equ	0xFF2
 33337                           intcon2	equ	0xFF1
 33338                           intcon3	equ	0xFF0
 33339                           indf0	equ	0xFEF
 33340                           postinc0	equ	0xFEE
 33341                           plusw0	equ	0xFEB
 33342                           fsr0h	equ	0xFEA
 33343                           fsr0l	equ	0xFE9
 33344                           wreg	equ	0xFE8
 33345                           indf1	equ	0xFE7
 33346                           postinc1	equ	0xFE6
 33347                           postdec1	equ	0xFE5
 33348                           plusw1	equ	0xFE3
 33349                           fsr1h	equ	0xFE2
 33350                           fsr1l	equ	0xFE1
 33351                           indf2	equ	0xFDF
 33352                           postinc2	equ	0xFDE
 33353                           postdec2	equ	0xFDD
 33354                           plusw2	equ	0xFDB
 33355                           fsr2h	equ	0xFDA
 33356                           fsr2l	equ	0xFD9
 33357                           status	equ	0xFD8
 33358                           
 33359 ;; *************** function _Led_SetLedStatus *****************
 33360 ;; Defined at:
 33361 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33362 ;; Parameters:    Size  Location     Type
 33363 ;;  Led             1    wreg     unsigned char 
 33364 ;;  LedSts          1   29[BANK0 ] enum E8954
 33365 ;; Auto vars:     Size  Location     Type
 33366 ;;  Led             1   30[BANK0 ] unsigned char 
 33367 ;; Return value:  Size  Location     Type
 33368 ;;                  1    wreg      void 
 33369 ;; Registers used:
 33370 ;;		wreg, status,2, status,0
 33371 ;; Tracked objects:
 33372 ;;		On entry : 0/0
 33373 ;;		On exit  : 0/0
 33374 ;;		Unchanged: 0/0
 33375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33376 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33379 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33380 ;;Total ram usage:        2 bytes
 33381 ;; Hardware stack levels used:    1
 33382 ;; Hardware stack levels required when called:   11
 33383 ;; This function calls:
 33384 ;;		Nothing
 33385 ;; This function is called by:
 33386 ;;		_LedPulseStateMachine
 33387 ;;		_LedStateMachine
 33388 ;;		_waitSetupCall
 33389 ;;		_initFsm
 33390 ;;		_blinkForSeconds
 33391 ;; This function uses a non-reentrant model
 33392 ;;
 33393                           
 33394                           	psect	text156
 33395  0064C6                     __ptext156:
 33396                           	opt stack 0
 33397  0064C6                     _Led_SetLedStatus:
 33398                           	opt stack 14
 33399                           
 33400                           ; BSR set to: 0
 33401                           ;incstack = 0
 33402                           ;Led_SetLedStatus@Led stored from wreg
 33403  0064C6  0100               	movlb	0	; () banked
 33404  0064C8  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 33405                           
 33406                           ;led.c: 341: switch (Led)
 33407  0064CA  D009               	goto	l2141
 33408  0064CC                     l2142:
 33409                           
 33410                           ; BSR set to: 0
 33411                           ;led.c: 344: Led1Sts = LedSts;
 33412  0064CC  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 33413                           
 33414                           ;led.c: 345: break;
 33415  0064D0  0012               	return	
 33416  0064D2                     l2144:
 33417                           
 33418                           ; BSR set to: 0
 33419                           ;led.c: 348: Led2Sts = LedSts;
 33420  0064D2  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 33421                           
 33422                           ;led.c: 349: break;
 33423  0064D6  0012               	return	
 33424  0064D8                     l2145:
 33425                           
 33426                           ; BSR set to: 0
 33427                           ;led.c: 352: Led3Sts = LedSts;
 33428  0064D8  C07D  F1F7         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 33429                           
 33430                           ; BSR set to: 0
 33431                           ;led.c: 357: }
 33432                           
 33433                           ; BSR set to: 0
 33434                           ;led.c: 356: break;
 33435                           
 33436                           ;led.c: 355: default:
 33437                           
 33438                           ;led.c: 353: break;
 33439  0064DC  0012               	return	
 33440  0064DE                     l2141:
 33441                           
 33442                           ; BSR set to: 0
 33443  0064DE  0100               	movlb	0	; () banked
 33444  0064E0  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 33445                           
 33446                           ; Switch size 1, requested type "space"
 33447                           ; Number of cases is 3, Range of values is 1 to 3
 33448                           ; switch strategies available:
 33449                           ; Name         Instructions Cycles
 33450                           ; simple_byte           10     6 (average)
 33451                           ;	Chosen strategy is simple_byte
 33452  0064E2  0A01               	xorlw	1	; case 1
 33453  0064E4  B4D8               	btfsc	status,2,c
 33454  0064E6  D7F2               	goto	l2142
 33455  0064E8  0A03               	xorlw	3	; case 2
 33456  0064EA  B4D8               	btfsc	status,2,c
 33457  0064EC  D7F2               	goto	l2144
 33458  0064EE  0A01               	xorlw	1	; case 3
 33459  0064F0  A4D8               	btfss	status,2,c
 33460  0064F2  0012               	return	
 33461  0064F4  D7F1               	goto	l2145
 33462  0064F6                     __end_of_Led_SetLedStatus:
 33463                           	opt stack 0
 33464                           tosu	equ	0xFFF
 33465                           tosh	equ	0xFFE
 33466                           tosl	equ	0xFFD
 33467                           pclath	equ	0xFFA
 33468                           tblptru	equ	0xFF8
 33469                           tblptrh	equ	0xFF7
 33470                           tblptrl	equ	0xFF6
 33471                           tablat	equ	0xFF5
 33472                           prodh	equ	0xFF4
 33473                           prodl	equ	0xFF3
 33474                           intcon	equ	0xFF2
 33475                           intcon2	equ	0xFF1
 33476                           intcon3	equ	0xFF0
 33477                           indf0	equ	0xFEF
 33478                           postinc0	equ	0xFEE
 33479                           plusw0	equ	0xFEB
 33480                           fsr0h	equ	0xFEA
 33481                           fsr0l	equ	0xFE9
 33482                           wreg	equ	0xFE8
 33483                           indf1	equ	0xFE7
 33484                           postinc1	equ	0xFE6
 33485                           postdec1	equ	0xFE5
 33486                           plusw1	equ	0xFE3
 33487                           fsr1h	equ	0xFE2
 33488                           fsr1l	equ	0xFE1
 33489                           indf2	equ	0xFDF
 33490                           postinc2	equ	0xFDE
 33491                           postdec2	equ	0xFDD
 33492                           plusw2	equ	0xFDB
 33493                           fsr2h	equ	0xFDA
 33494                           fsr2l	equ	0xFD9
 33495                           status	equ	0xFD8
 33496                           
 33497 ;; *************** function _LedBlinkStateMachine *****************
 33498 ;; Defined at:
 33499 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33500 ;; Parameters:    Size  Location     Type
 33501 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 33502 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33503 ;; Auto vars:     Size  Location     Type
 33504 ;;		None
 33505 ;; Return value:  Size  Location     Type
 33506 ;;                  1    wreg      unsigned char 
 33507 ;; Registers used:
 33508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33509 ;; Tracked objects:
 33510 ;;		On entry : 0/0
 33511 ;;		On exit  : 0/0
 33512 ;;		Unchanged: 0/0
 33513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33516 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33517 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33518 ;;Total ram usage:        4 bytes
 33519 ;; Hardware stack levels used:    1
 33520 ;; Hardware stack levels required when called:   12
 33521 ;; This function calls:
 33522 ;;		___lwdiv
 33523 ;; This function is called by:
 33524 ;;		_LedStateMachine
 33525 ;; This function uses a non-reentrant model
 33526 ;;
 33527                           
 33528                           	psect	text157
 33529  0026D4                     __ptext157:
 33530                           	opt stack 0
 33531  0026D4                     _LedBlinkStateMachine:
 33532                           	opt stack 14
 33533                           
 33534                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 33535                           
 33536                           ; BSR set to: 0
 33537                           ;incstack = 0
 33538  0026D4  D08F               	goto	l2097
 33539  0026D6                     
 33540                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 33541  0026D6  0100               	movlb	0	; () banked
 33542  0026D8  EE20 F008          	lfsr	2,8
 33543  0026DC  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33544  0026DE  26D9               	addwf	fsr2l,f,c
 33545  0026E0  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33546  0026E2  22DA               	addwfc	fsr2h,f,c
 33547  0026E4  EE10 F001          	lfsr	1,1
 33548  0026E8  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33549  0026EA  26E1               	addwf	fsr1l,f,c
 33550  0026EC  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33551  0026EE  22E2               	addwfc	fsr1h,f,c
 33552  0026F0  CFDF FFE7          	movff	indf2,indf1
 33553                           
 33554                           ; BSR set to: 0
 33555                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 33556  0026F4  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33557  0026F8  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33558  0026FC  D040               	goto	L73
 33559  0026FE                     
 33560                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 33561                           
 33562                           ; BSR set to: 0
 33563  0026FE  0100               	movlb	0	; () banked
 33564  002700  EE20 F002          	lfsr	2,2
 33565  002704  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33566  002706  26D9               	addwf	fsr2l,f,c
 33567  002708  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33568  00270A  22DA               	addwfc	fsr2h,f,c
 33569  00270C  2ADE               	incf	postinc2,f,c
 33570  00270E  0E00               	movlw	0
 33571  002710  22DD               	addwfc	postdec2,f,c
 33572                           
 33573                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 33574  002712  EE20 F001          	lfsr	2,1
 33575  002716  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33576  002718  26D9               	addwf	fsr2l,f,c
 33577  00271A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33578  00271C  22DA               	addwfc	fsr2h,f,c
 33579  00271E  50DF               	movf	indf2,w,c
 33580  002720  A4D8               	btfss	status,2,c
 33581  002722  D02F               	goto	l2101
 33582                           
 33583                           ; BSR set to: 0
 33584                           ;led.c: 142: {
 33585                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 33586  002724  EE20 F006          	lfsr	2,6
 33587  002728  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33588  00272A  26D9               	addwf	fsr2l,f,c
 33589  00272C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33590  00272E  22DA               	addwfc	fsr2h,f,c
 33591  002730  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33592  002734  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33593  002738  0E00               	movlw	0
 33594  00273A  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33595  00273C  0E32               	movlw	50
 33596  00273E  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33597  002740  EC78  F02D         	call	___lwdiv	;wreg free
 33598  002744  0100               	movlb	0	; () banked
 33599  002746  EE20 F002          	lfsr	2,2
 33600  00274A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33601  00274C  26D9               	addwf	fsr2l,f,c
 33602  00274E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33603  002750  22DA               	addwfc	fsr2h,f,c
 33604  002752  5183               	movf	?___lwdiv& (0+255),w,b
 33605  002754  5CDE               	subwf	postinc2,w,c
 33606  002756  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33607  002758  58DE               	subwfb	postinc2,w,c
 33608  00275A  A0D8               	btfss	status,0,c
 33609  00275C  D056               	goto	l2099
 33610                           
 33611                           ; BSR set to: 0
 33612                           ;led.c: 145: {
 33613                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 33614  00275E  EE20 F002          	lfsr	2,2
 33615  002762  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33616  002764  26D9               	addwf	fsr2l,f,c
 33617  002766  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33618  002768  22DA               	addwfc	fsr2h,f,c
 33619  00276A  0E00               	movlw	0
 33620  00276C  6EDE               	movwf	postinc2,c
 33621  00276E  0E00               	movlw	0
 33622  002770  6EDD               	movwf	postdec2,c
 33623                           
 33624                           ;led.c: 149: LedBlink->LedOutState = OnState;
 33625  002772  EE20 F001          	lfsr	2,1
 33626  002776  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33627  002778  26D9               	addwf	fsr2l,f,c
 33628  00277A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33629  00277C  22DA               	addwfc	fsr2h,f,c
 33630  00277E                     L73:
 33631  00277E  0E01               	movlw	1
 33632  002780  D037               	goto	L74
 33633  002782                     l2101:
 33634                           
 33635                           ; BSR set to: 0
 33636                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 33637                           
 33638                           ; BSR set to: 0
 33639  002782  EE20 F001          	lfsr	2,1
 33640  002786  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33641  002788  26D9               	addwf	fsr2l,f,c
 33642  00278A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33643  00278C  22DA               	addwfc	fsr2h,f,c
 33644  00278E  04DE               	decf	postinc2,w,c
 33645  002790  A4D8               	btfss	status,2,c
 33646  002792  D03B               	goto	l2099
 33647                           
 33648                           ; BSR set to: 0
 33649                           ;led.c: 153: {
 33650                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 33651  002794  EE20 F004          	lfsr	2,4
 33652  002798  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33653  00279A  26D9               	addwf	fsr2l,f,c
 33654  00279C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33655  00279E  22DA               	addwfc	fsr2h,f,c
 33656  0027A0  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33657  0027A4  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33658  0027A8  0E00               	movlw	0
 33659  0027AA  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33660  0027AC  0E32               	movlw	50
 33661  0027AE  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33662  0027B0  EC78  F02D         	call	___lwdiv	;wreg free
 33663  0027B4  0100               	movlb	0	; () banked
 33664  0027B6  EE20 F002          	lfsr	2,2
 33665  0027BA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33666  0027BC  26D9               	addwf	fsr2l,f,c
 33667  0027BE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33668  0027C0  22DA               	addwfc	fsr2h,f,c
 33669  0027C2  5183               	movf	?___lwdiv& (0+255),w,b
 33670  0027C4  5CDE               	subwf	postinc2,w,c
 33671  0027C6  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33672  0027C8  58DE               	subwfb	postinc2,w,c
 33673  0027CA  A0D8               	btfss	status,0,c
 33674  0027CC  D01E               	goto	l2099
 33675                           
 33676                           ; BSR set to: 0
 33677                           ;led.c: 156: {
 33678                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 33679  0027CE  EE20 F002          	lfsr	2,2
 33680  0027D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33681  0027D4  26D9               	addwf	fsr2l,f,c
 33682  0027D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33683  0027D8  22DA               	addwfc	fsr2h,f,c
 33684  0027DA  0E00               	movlw	0
 33685  0027DC  6EDE               	movwf	postinc2,c
 33686  0027DE  0E00               	movlw	0
 33687  0027E0  6EDD               	movwf	postdec2,c
 33688                           
 33689                           ;led.c: 160: LedBlink->LedOutState = OffState;
 33690  0027E2  EE20 F001          	lfsr	2,1
 33691  0027E6  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33692  0027E8  26D9               	addwf	fsr2l,f,c
 33693  0027EA  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33694  0027EC  22DA               	addwfc	fsr2h,f,c
 33695  0027EE  0E00               	movlw	0
 33696  0027F0                     L74:
 33697  0027F0  6EDF               	movwf	indf2,c
 33698                           
 33699                           ; BSR set to: 0
 33700                           ;led.c: 167: }
 33701                           
 33702                           ; BSR set to: 0
 33703                           ;led.c: 166: break;
 33704                           
 33705                           ;led.c: 165: default:
 33706                           
 33707                           ; BSR set to: 0
 33708                           ;led.c: 161: }
 33709                           ;led.c: 162: }
 33710                           ;led.c: 163: break;
 33711                           
 33712                           ; BSR set to: 0
 33713                           
 33714                           ; BSR set to: 0
 33715  0027F2  D00B               	goto	l2099
 33716  0027F4                     l2097:
 33717                           
 33718                           ; BSR set to: 0
 33719  0027F4  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33720  0027F8  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33721  0027FC  50DF               	movf	indf2,w,c
 33722                           
 33723                           ; Switch size 1, requested type "space"
 33724                           ; Number of cases is 2, Range of values is 0 to 1
 33725                           ; switch strategies available:
 33726                           ; Name         Instructions Cycles
 33727                           ; simple_byte            7     4 (average)
 33728                           ;	Chosen strategy is simple_byte
 33729  0027FE  0A00               	xorlw	0	; case 0
 33730  002800  B4D8               	btfsc	status,2,c
 33731  002802  D769               	goto	l2098
 33732  002804  0A01               	xorlw	1	; case 1
 33733  002806  B4D8               	btfsc	status,2,c
 33734  002808  D77A               	goto	l2100
 33735  00280A                     l2099:
 33736                           
 33737                           ;led.c: 170: return (LedBlink->LedOutState);
 33738  00280A  0100               	movlb	0	; () banked
 33739  00280C  EE20 F001          	lfsr	2,1
 33740  002810  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33741  002812  26D9               	addwf	fsr2l,f,c
 33742  002814  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33743  002816  22DA               	addwfc	fsr2h,f,c
 33744  002818  50DF               	movf	indf2,w,c
 33745  00281A  0012               	return	
 33746  00281C                     __end_of_LedBlinkStateMachine:
 33747                           	opt stack 0
 33748                           tosu	equ	0xFFF
 33749                           tosh	equ	0xFFE
 33750                           tosl	equ	0xFFD
 33751                           pclath	equ	0xFFA
 33752                           tblptru	equ	0xFF8
 33753                           tblptrh	equ	0xFF7
 33754                           tblptrl	equ	0xFF6
 33755                           tablat	equ	0xFF5
 33756                           prodh	equ	0xFF4
 33757                           prodl	equ	0xFF3
 33758                           intcon	equ	0xFF2
 33759                           intcon2	equ	0xFF1
 33760                           intcon3	equ	0xFF0
 33761                           indf0	equ	0xFEF
 33762                           postinc0	equ	0xFEE
 33763                           plusw0	equ	0xFEB
 33764                           fsr0h	equ	0xFEA
 33765                           fsr0l	equ	0xFE9
 33766                           wreg	equ	0xFE8
 33767                           indf1	equ	0xFE7
 33768                           postinc1	equ	0xFE6
 33769                           postdec1	equ	0xFE5
 33770                           plusw1	equ	0xFE3
 33771                           fsr1h	equ	0xFE2
 33772                           fsr1l	equ	0xFE1
 33773                           indf2	equ	0xFDF
 33774                           postinc2	equ	0xFDE
 33775                           postdec2	equ	0xFDD
 33776                           plusw2	equ	0xFDB
 33777                           fsr2h	equ	0xFDA
 33778                           fsr2l	equ	0xFD9
 33779                           status	equ	0xFD8
 33780                           
 33781 ;; *************** function ___lwdiv *****************
 33782 ;; Defined at:
 33783 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 33784 ;; Parameters:    Size  Location     Type
 33785 ;;  dividend        2   35[BANK0 ] unsigned int 
 33786 ;;  divisor         2   37[BANK0 ] unsigned int 
 33787 ;; Auto vars:     Size  Location     Type
 33788 ;;  quotient        2   40[BANK0 ] unsigned int 
 33789 ;;  counter         1   39[BANK0 ] unsigned char 
 33790 ;; Return value:  Size  Location     Type
 33791 ;;                  2   35[BANK0 ] unsigned int 
 33792 ;; Registers used:
 33793 ;;		wreg, status,2, status,0
 33794 ;; Tracked objects:
 33795 ;;		On entry : 0/0
 33796 ;;		On exit  : 0/0
 33797 ;;		Unchanged: 0/0
 33798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33800 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33802 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33803 ;;Total ram usage:        7 bytes
 33804 ;; Hardware stack levels used:    1
 33805 ;; Hardware stack levels required when called:   11
 33806 ;; This function calls:
 33807 ;;		Nothing
 33808 ;; This function is called by:
 33809 ;;		_LedBlinkStateMachine
 33810 ;;		_LedPulseStateMachine
 33811 ;;		_secondsAppTimer
 33812 ;;		_utoa
 33813 ;; This function uses a non-reentrant model
 33814 ;;
 33815                           
 33816                           	psect	text158
 33817  005AF0                     __ptext158:
 33818                           	opt stack 0
 33819  005AF0                     ___lwdiv:
 33820                           	opt stack 14
 33821                           
 33822                           ; BSR set to: 0
 33823                           ;incstack = 0
 33824  005AF0  0E00               	movlw	0
 33825  005AF2  0100               	movlb	0	; () banked
 33826  005AF4  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 33827  005AF6  0E00               	movlw	0
 33828  005AF8  6F88               	movwf	___lwdiv@quotient& (0+255),b
 33829                           
 33830                           ; BSR set to: 0
 33831  005AFA  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33832  005AFC  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 33833  005AFE  B4D8               	btfsc	status,2,c
 33834  005B00  D01C               	goto	l3334
 33835                           
 33836                           ; BSR set to: 0
 33837  005B02  0E01               	movlw	1
 33838  005B04  6F87               	movwf	___lwdiv@counter& (0+255),b
 33839  005B06  D004               	goto	l3329
 33840  005B08                     
 33841                           ; BSR set to: 0
 33842                           
 33843                           ; BSR set to: 0
 33844  005B08  90D8               	bcf	status,0,c
 33845  005B0A  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 33846  005B0C  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 33847  005B0E  2B87               	incf	___lwdiv@counter& (0+255),f,b
 33848  005B10                     l3329:
 33849                           
 33850                           ; BSR set to: 0
 33851                           
 33852                           ; BSR set to: 0
 33853  005B10  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 33854  005B12  D7FA               	goto	l3330
 33855  005B14                     u11980:
 33856                           
 33857                           ; BSR set to: 0
 33858                           
 33859                           ; BSR set to: 0
 33860                           
 33861                           ; BSR set to: 0
 33862  005B14  90D8               	bcf	status,0,c
 33863  005B16  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 33864  005B18  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 33865                           
 33866                           ; BSR set to: 0
 33867  005B1A  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33868  005B1C  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 33869  005B1E  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 33870  005B20  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 33871  005B22  A0D8               	btfss	status,0,c
 33872  005B24  D005               	goto	l3333
 33873                           
 33874                           ; BSR set to: 0
 33875  005B26  5185               	movf	___lwdiv@divisor& (0+255),w,b
 33876  005B28  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 33877  005B2A  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 33878  005B2C  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 33879                           
 33880                           ; BSR set to: 0
 33881  005B2E  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 33882  005B30                     l3333:
 33883                           
 33884                           ; BSR set to: 0
 33885                           
 33886                           ; BSR set to: 0
 33887  005B30  90D8               	bcf	status,0,c
 33888  005B32  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 33889  005B34  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 33890                           
 33891                           ; BSR set to: 0
 33892  005B36  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 33893  005B38  D7ED               	goto	u11980
 33894  005B3A                     l3334:
 33895                           
 33896                           ; BSR set to: 0
 33897                           
 33898                           ; BSR set to: 0
 33899  005B3A  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 33900  005B3E  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 33901                           
 33902                           ; BSR set to: 0
 33903  005B42  0012               	return		;funcret
 33904  005B44                     __end_of___lwdiv:
 33905                           	opt stack 0
 33906                           tosu	equ	0xFFF
 33907                           tosh	equ	0xFFE
 33908                           tosl	equ	0xFFD
 33909                           pclath	equ	0xFFA
 33910                           tblptru	equ	0xFF8
 33911                           tblptrh	equ	0xFF7
 33912                           tblptrl	equ	0xFF6
 33913                           tablat	equ	0xFF5
 33914                           prodh	equ	0xFF4
 33915                           prodl	equ	0xFF3
 33916                           intcon	equ	0xFF2
 33917                           intcon2	equ	0xFF1
 33918                           intcon3	equ	0xFF0
 33919                           indf0	equ	0xFEF
 33920                           postinc0	equ	0xFEE
 33921                           plusw0	equ	0xFEB
 33922                           fsr0h	equ	0xFEA
 33923                           fsr0l	equ	0xFE9
 33924                           wreg	equ	0xFE8
 33925                           indf1	equ	0xFE7
 33926                           postinc1	equ	0xFE6
 33927                           postdec1	equ	0xFE5
 33928                           plusw1	equ	0xFE3
 33929                           fsr1h	equ	0xFE2
 33930                           fsr1l	equ	0xFE1
 33931                           indf2	equ	0xFDF
 33932                           postinc2	equ	0xFDE
 33933                           postdec2	equ	0xFDD
 33934                           plusw2	equ	0xFDB
 33935                           fsr2h	equ	0xFDA
 33936                           fsr2l	equ	0xFD9
 33937                           status	equ	0xFD8
 33938                           
 33939 ;; *************** function _OsAlrm_SetOsAlarm *****************
 33940 ;; Defined at:
 33941 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33942 ;; Parameters:    Size  Location     Type
 33943 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 33944 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 33945 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 33946 ;;		 -> I2cDummyTx(1), 
 33947 ;; Auto vars:     Size  Location     Type
 33948 ;;		None
 33949 ;; Return value:  Size  Location     Type
 33950 ;;                  1    wreg      void 
 33951 ;; Registers used:
 33952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33953 ;; Tracked objects:
 33954 ;;		On entry : 0/0
 33955 ;;		On exit  : 0/0
 33956 ;;		Unchanged: 0/0
 33957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33958 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33961 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33962 ;;Total ram usage:        8 bytes
 33963 ;; Hardware stack levels used:    1
 33964 ;; Hardware stack levels required when called:   12
 33965 ;; This function calls:
 33966 ;;		___wmul
 33967 ;; This function is called by:
 33968 ;;		_I2cSlv_MainTask
 33969 ;; This function uses a non-reentrant model
 33970 ;;
 33971                           
 33972                           	psect	text159
 33973  003ED4                     __ptext159:
 33974                           	opt stack 0
 33975  003ED4                     _OsAlrm_SetOsAlarm:
 33976                           	opt stack 15
 33977                           
 33978                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 33979                           
 33980                           ; BSR set to: 0
 33981                           ;incstack = 0
 33982  003ED4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 33983  003ED8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 33984  003EDC  0E00               	movlw	0
 33985  003EDE  0100               	movlb	0	; () banked
 33986  003EE0  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33987  003EE2  0E0B               	movlw	11
 33988  003EE4  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 33989  003EE6  ECE9  F032         	call	___wmul	;wreg free
 33990  003EEA  0E00               	movlw	low _OsAlarms
 33991  003EEC  0100               	movlb	0	; () banked
 33992  003EEE  257D               	addwf	?___wmul& (0+255),w,b
 33993  003EF0  6ED9               	movwf	fsr2l,c
 33994  003EF2  0E06               	movlw	high _OsAlarms
 33995  003EF4  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 33996  003EF6  6EDA               	movwf	fsr2h,c
 33997  003EF8  0E01               	movlw	1
 33998  003EFA  6EDF               	movwf	indf2,c
 33999                           
 34000                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34001  003EFC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34002  003F00  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34003  003F04  0E00               	movlw	0
 34004  003F06  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34005  003F08  0E0B               	movlw	11
 34006  003F0A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34007  003F0C  ECE9  F032         	call	___wmul	;wreg free
 34008  003F10  0E01               	movlw	1
 34009  003F12  0100               	movlb	0	; () banked
 34010  003F14  277D               	addwf	?___wmul& (0+255),f,b
 34011  003F16  0E00               	movlw	0
 34012  003F18  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34013  003F1A  0E00               	movlw	low _OsAlarms
 34014  003F1C  257D               	addwf	?___wmul& (0+255),w,b
 34015  003F1E  6ED9               	movwf	fsr2l,c
 34016  003F20  0E06               	movlw	high _OsAlarms
 34017  003F22  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34018  003F24  6EDA               	movwf	fsr2h,c
 34019  003F26  6ADE               	clrf	postinc2,c
 34020  003F28  6ADE               	clrf	postinc2,c
 34021  003F2A  6ADE               	clrf	postinc2,c
 34022  003F2C  6ADD               	clrf	postdec2,c
 34023                           
 34024                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34025  003F2E  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34026  003F32  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34027  003F36  0E00               	movlw	0
 34028  003F38  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34029  003F3A  0E0B               	movlw	11
 34030  003F3C  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34031  003F3E  ECE9  F032         	call	___wmul	;wreg free
 34032  003F42  0E05               	movlw	5
 34033  003F44  0100               	movlb	0	; () banked
 34034  003F46  277D               	addwf	?___wmul& (0+255),f,b
 34035  003F48  0E00               	movlw	0
 34036  003F4A  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34037  003F4C  0E00               	movlw	low _OsAlarms
 34038  003F4E  257D               	addwf	?___wmul& (0+255),w,b
 34039  003F50  6ED9               	movwf	fsr2l,c
 34040  003F52  0E06               	movlw	high _OsAlarms
 34041  003F54  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34042  003F56  6EDA               	movwf	fsr2h,c
 34043  003F58  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34044  003F5C  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34045  003F60  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34046  003F64  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34047                           
 34048                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34049  003F68  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34050  003F6C  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34051  003F70  0E00               	movlw	0
 34052  003F72  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34053  003F74  0E0B               	movlw	11
 34054  003F76  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34055  003F78  ECE9  F032         	call	___wmul	;wreg free
 34056  003F7C  0E09               	movlw	9
 34057  003F7E  0100               	movlb	0	; () banked
 34058  003F80  277D               	addwf	?___wmul& (0+255),f,b
 34059  003F82  0E00               	movlw	0
 34060  003F84  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34061  003F86  0E00               	movlw	low _OsAlarms
 34062  003F88  257D               	addwf	?___wmul& (0+255),w,b
 34063  003F8A  6ED9               	movwf	fsr2l,c
 34064  003F8C  0E06               	movlw	high _OsAlarms
 34065  003F8E  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34066  003F90  6EDA               	movwf	fsr2h,c
 34067  003F92  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34068  003F96  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34069                           
 34070                           ; BSR set to: 0
 34071  003F9A  0012               	return		;funcret
 34072  003F9C                     __end_of_OsAlrm_SetOsAlarm:
 34073                           	opt stack 0
 34074                           tosu	equ	0xFFF
 34075                           tosh	equ	0xFFE
 34076                           tosl	equ	0xFFD
 34077                           pclath	equ	0xFFA
 34078                           tblptru	equ	0xFF8
 34079                           tblptrh	equ	0xFF7
 34080                           tblptrl	equ	0xFF6
 34081                           tablat	equ	0xFF5
 34082                           prodh	equ	0xFF4
 34083                           prodl	equ	0xFF3
 34084                           intcon	equ	0xFF2
 34085                           intcon2	equ	0xFF1
 34086                           intcon3	equ	0xFF0
 34087                           indf0	equ	0xFEF
 34088                           postinc0	equ	0xFEE
 34089                           plusw0	equ	0xFEB
 34090                           fsr0h	equ	0xFEA
 34091                           fsr0l	equ	0xFE9
 34092                           wreg	equ	0xFE8
 34093                           indf1	equ	0xFE7
 34094                           postinc1	equ	0xFE6
 34095                           postdec1	equ	0xFE5
 34096                           plusw1	equ	0xFE3
 34097                           fsr1h	equ	0xFE2
 34098                           fsr1l	equ	0xFE1
 34099                           indf2	equ	0xFDF
 34100                           postinc2	equ	0xFDE
 34101                           postdec2	equ	0xFDD
 34102                           plusw2	equ	0xFDB
 34103                           fsr2h	equ	0xFDA
 34104                           fsr2l	equ	0xFD9
 34105                           status	equ	0xFD8
 34106                           
 34107 ;; *************** function ___wmul *****************
 34108 ;; Defined at:
 34109 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34110 ;; Parameters:    Size  Location     Type
 34111 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34112 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34113 ;; Auto vars:     Size  Location     Type
 34114 ;;  product         2   33[BANK0 ] unsigned int 
 34115 ;; Return value:  Size  Location     Type
 34116 ;;                  2   29[BANK0 ] unsigned int 
 34117 ;; Registers used:
 34118 ;;		wreg, status,2, status,0, prodl, prodh
 34119 ;; Tracked objects:
 34120 ;;		On entry : 0/0
 34121 ;;		On exit  : 0/0
 34122 ;;		Unchanged: 0/0
 34123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34127 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34128 ;;Total ram usage:        6 bytes
 34129 ;; Hardware stack levels used:    1
 34130 ;; Hardware stack levels required when called:   11
 34131 ;; This function calls:
 34132 ;;		Nothing
 34133 ;; This function is called by:
 34134 ;;		_OsAlrm_SetOsAlarm
 34135 ;;		_secondsAppTimer
 34136 ;;		_atoi
 34137 ;; This function uses a non-reentrant model
 34138 ;;
 34139                           
 34140                           	psect	text160
 34141  0065D2                     __ptext160:
 34142                           	opt stack 0
 34143  0065D2                     ___wmul:
 34144                           	opt stack 13
 34145                           
 34146                           ; BSR set to: 0
 34147                           ;incstack = 0
 34148  0065D2  0100               	movlb	0	; () banked
 34149  0065D4  517D               	movf	___wmul@multiplier& (0+255),w,b
 34150  0065D6  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34151  0065D8  CFF3 F081          	movff	prodl,___wmul@product
 34152  0065DC  CFF4 F082          	movff	prodh,___wmul@product+1
 34153  0065E0  517D               	movf	___wmul@multiplier& (0+255),w,b
 34154  0065E2  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34155  0065E4  50F3               	movf	prodl,w,c
 34156  0065E6  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34157  0065E8  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34158  0065EA  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34159  0065EC  50F3               	movf	prodl,w,c
 34160  0065EE  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34161                           
 34162                           ; BSR set to: 0
 34163  0065F0  C081  F07D         	movff	___wmul@product,?___wmul
 34164  0065F4  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34165  0065F8  0012               	return	
 34166  0065FA                     __end_of___wmul:
 34167                           	opt stack 0
 34168                           tosu	equ	0xFFF
 34169                           tosh	equ	0xFFE
 34170                           tosl	equ	0xFFD
 34171                           pclath	equ	0xFFA
 34172                           tblptru	equ	0xFF8
 34173                           tblptrh	equ	0xFF7
 34174                           tblptrl	equ	0xFF6
 34175                           tablat	equ	0xFF5
 34176                           prodh	equ	0xFF4
 34177                           prodl	equ	0xFF3
 34178                           intcon	equ	0xFF2
 34179                           intcon2	equ	0xFF1
 34180                           intcon3	equ	0xFF0
 34181                           indf0	equ	0xFEF
 34182                           postinc0	equ	0xFEE
 34183                           plusw0	equ	0xFEB
 34184                           fsr0h	equ	0xFEA
 34185                           fsr0l	equ	0xFE9
 34186                           wreg	equ	0xFE8
 34187                           indf1	equ	0xFE7
 34188                           postinc1	equ	0xFE6
 34189                           postdec1	equ	0xFE5
 34190                           plusw1	equ	0xFE3
 34191                           fsr1h	equ	0xFE2
 34192                           fsr1l	equ	0xFE1
 34193                           indf2	equ	0xFDF
 34194                           postinc2	equ	0xFDE
 34195                           postdec2	equ	0xFDD
 34196                           plusw2	equ	0xFDB
 34197                           fsr2h	equ	0xFDA
 34198                           fsr2l	equ	0xFD9
 34199                           status	equ	0xFD8
 34200                           
 34201 ;; *************** function _I2c_InitI2cModule *****************
 34202 ;; Defined at:
 34203 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34204 ;; Parameters:    Size  Location     Type
 34205 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34206 ;;		 -> I2cConfig(10), 
 34207 ;; Auto vars:     Size  Location     Type
 34208 ;;		None
 34209 ;; Return value:  Size  Location     Type
 34210 ;;                  1    wreg      void 
 34211 ;; Registers used:
 34212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34213 ;; Tracked objects:
 34214 ;;		On entry : 0/0
 34215 ;;		On exit  : 0/0
 34216 ;;		Unchanged: 0/0
 34217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34222 ;;Total ram usage:        4 bytes
 34223 ;; Hardware stack levels used:    1
 34224 ;; Hardware stack levels required when called:   13
 34225 ;; This function calls:
 34226 ;;		_SetBaudRate
 34227 ;; This function is called by:
 34228 ;;		_I2cSlv_MainTask
 34229 ;; This function uses a non-reentrant model
 34230 ;;
 34231                           
 34232                           	psect	text161
 34233  005378                     __ptext161:
 34234                           	opt stack 0
 34235  005378                     _I2c_InitI2cModule:
 34236                           	opt stack 14
 34237                           
 34238                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34239                           
 34240                           ; BSR set to: 0
 34241                           ;incstack = 0
 34242  005378  8295               	bsf	3989,1,c	;volatile
 34243                           
 34244                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34245  00537A  8095               	bsf	3989,0,c	;volatile
 34246                           
 34247                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34248  00537C  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34249  005380  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34250  005384  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34251  005388  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34252  00538C  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34253  005390  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34254  005394  0100               	movlb	0	; () banked
 34255  005396  EE20 F004          	lfsr	2,4
 34256  00539A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34257  00539C  26D9               	addwf	fsr2l,f,c
 34258  00539E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34259  0053A0  22DA               	addwfc	fsr2h,f,c
 34260  0053A2  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34261  0053A6  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34262  0053AA  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34263  0053AE  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34264  0053B2  ECE3  F02E         	call	_SetBaudRate	;wreg free
 34265                           
 34266                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34267  0053B6  0100               	movlb	0	; () banked
 34268  0053B8  EE20 F008          	lfsr	2,8
 34269  0053BC  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34270  0053BE  26D9               	addwf	fsr2l,f,c
 34271  0053C0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34272  0053C2  22DA               	addwfc	fsr2h,f,c
 34273  0053C4  50DF               	movf	indf2,w,c
 34274  0053C6  1272               	iorwf	3954,f,c	;volatile
 34275                           
 34276                           ; BSR set to: 0
 34277                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34278  0053C8  EE20 F009          	lfsr	2,9
 34279  0053CC  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34280  0053CE  26D9               	addwf	fsr2l,f,c
 34281  0053D0  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34282  0053D2  22DA               	addwfc	fsr2h,f,c
 34283  0053D4  50DF               	movf	indf2,w,c
 34284  0053D6  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34285  0053D8  0E05               	movlw	5
 34286  0053DA  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34287  0053DC                     u14505:
 34288  0053DC  90D8               	bcf	status,0,c
 34289  0053DE  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34290  0053E0  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34291  0053E2  D7FC               	goto	u14505
 34292  0053E4  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34293  0053E6  1272               	iorwf	3954,f,c	;volatile
 34294                           
 34295                           ; BSR set to: 0
 34296  0053E8  0012               	return		;funcret
 34297  0053EA                     __end_of_I2c_InitI2cModule:
 34298                           	opt stack 0
 34299                           tosu	equ	0xFFF
 34300                           tosh	equ	0xFFE
 34301                           tosl	equ	0xFFD
 34302                           pclath	equ	0xFFA
 34303                           tblptru	equ	0xFF8
 34304                           tblptrh	equ	0xFF7
 34305                           tblptrl	equ	0xFF6
 34306                           tablat	equ	0xFF5
 34307                           prodh	equ	0xFF4
 34308                           prodl	equ	0xFF3
 34309                           intcon	equ	0xFF2
 34310                           intcon2	equ	0xFF1
 34311                           intcon3	equ	0xFF0
 34312                           indf0	equ	0xFEF
 34313                           postinc0	equ	0xFEE
 34314                           plusw0	equ	0xFEB
 34315                           fsr0h	equ	0xFEA
 34316                           fsr0l	equ	0xFE9
 34317                           wreg	equ	0xFE8
 34318                           indf1	equ	0xFE7
 34319                           postinc1	equ	0xFE6
 34320                           postdec1	equ	0xFE5
 34321                           plusw1	equ	0xFE3
 34322                           fsr1h	equ	0xFE2
 34323                           fsr1l	equ	0xFE1
 34324                           indf2	equ	0xFDF
 34325                           postinc2	equ	0xFDE
 34326                           postdec2	equ	0xFDD
 34327                           plusw2	equ	0xFDB
 34328                           fsr2h	equ	0xFDA
 34329                           fsr2l	equ	0xFD9
 34330                           status	equ	0xFD8
 34331                           
 34332 ;; *************** function _SetBaudRate *****************
 34333 ;; Defined at:
 34334 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34335 ;; Parameters:    Size  Location     Type
 34336 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 34337 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;		None
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1    wreg      void 
 34342 ;; Registers used:
 34343 ;;		wreg, status,2, status,0, cstack
 34344 ;; Tracked objects:
 34345 ;;		On entry : 0/0
 34346 ;;		On exit  : 0/0
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34349 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34352 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34353 ;;Total ram usage:       12 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; Hardware stack levels required when called:   12
 34356 ;; This function calls:
 34357 ;;		___lldiv
 34358 ;; This function is called by:
 34359 ;;		_I2c_InitI2cModule
 34360 ;; This function uses a non-reentrant model
 34361 ;;
 34362                           
 34363                           	psect	text162
 34364  005DC6                     __ptext162:
 34365                           	opt stack 0
 34366  005DC6                     _SetBaudRate:
 34367                           	opt stack 14
 34368                           
 34369                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 34370                           
 34371                           ; BSR set to: 0
 34372                           ;incstack = 0
 34373  005DC6  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 34374  005DCA  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 34375  005DCE  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 34376  005DD2  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 34377  005DD6  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 34378  005DDA  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 34379  005DDE  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 34380  005DE2  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 34381  005DE6  0E02               	movlw	2
 34382  005DE8                     u13325:
 34383  005DE8  90D8               	bcf	status,0,c
 34384  005DEA  0100               	movlb	0	; () banked
 34385  005DEC  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 34386  005DEE  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 34387  005DF0  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 34388  005DF2  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 34389  005DF4  2EE8               	decfsz	wreg,f,c
 34390  005DF6  D7F8               	goto	u13325
 34391  005DF8  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 34392  005DFC  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 34393  005E00  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 34394  005E04  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 34395  005E08  EC51  F028         	call	___lldiv	;wreg free
 34396  005E0C  0100               	movlb	0	; () banked
 34397  005E0E  0589               	decf	?___lldiv& (0+255),w,b
 34398  005E10  6E74               	movwf	3956,c	;volatile
 34399                           
 34400                           ; BSR set to: 0
 34401  005E12  0012               	return		;funcret
 34402  005E14                     __end_of_SetBaudRate:
 34403                           	opt stack 0
 34404                           tosu	equ	0xFFF
 34405                           tosh	equ	0xFFE
 34406                           tosl	equ	0xFFD
 34407                           pclath	equ	0xFFA
 34408                           tblptru	equ	0xFF8
 34409                           tblptrh	equ	0xFF7
 34410                           tblptrl	equ	0xFF6
 34411                           tablat	equ	0xFF5
 34412                           prodh	equ	0xFF4
 34413                           prodl	equ	0xFF3
 34414                           intcon	equ	0xFF2
 34415                           intcon2	equ	0xFF1
 34416                           intcon3	equ	0xFF0
 34417                           indf0	equ	0xFEF
 34418                           postinc0	equ	0xFEE
 34419                           plusw0	equ	0xFEB
 34420                           fsr0h	equ	0xFEA
 34421                           fsr0l	equ	0xFE9
 34422                           wreg	equ	0xFE8
 34423                           indf1	equ	0xFE7
 34424                           postinc1	equ	0xFE6
 34425                           postdec1	equ	0xFE5
 34426                           plusw1	equ	0xFE3
 34427                           fsr1h	equ	0xFE2
 34428                           fsr1l	equ	0xFE1
 34429                           indf2	equ	0xFDF
 34430                           postinc2	equ	0xFDE
 34431                           postdec2	equ	0xFDD
 34432                           plusw2	equ	0xFDB
 34433                           fsr2h	equ	0xFDA
 34434                           fsr2l	equ	0xFD9
 34435                           status	equ	0xFD8
 34436                           
 34437 ;; *************** function ___lldiv *****************
 34438 ;; Defined at:
 34439 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 34440 ;; Parameters:    Size  Location     Type
 34441 ;;  dividend        4   41[BANK0 ] unsigned long 
 34442 ;;  divisor         4   45[BANK0 ] unsigned long 
 34443 ;; Auto vars:     Size  Location     Type
 34444 ;;  quotient        4   49[BANK0 ] unsigned long 
 34445 ;;  counter         1   53[BANK0 ] unsigned char 
 34446 ;; Return value:  Size  Location     Type
 34447 ;;                  4   41[BANK0 ] unsigned long 
 34448 ;; Registers used:
 34449 ;;		wreg, status,2, status,0
 34450 ;; Tracked objects:
 34451 ;;		On entry : 0/0
 34452 ;;		On exit  : 0/0
 34453 ;;		Unchanged: 0/0
 34454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34455 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34456 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34458 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34459 ;;Total ram usage:       13 bytes
 34460 ;; Hardware stack levels used:    1
 34461 ;; Hardware stack levels required when called:   11
 34462 ;; This function calls:
 34463 ;;		Nothing
 34464 ;; This function is called by:
 34465 ;;		_SetBaudRate
 34466 ;;		_Tmr_TmrBPrSet
 34467 ;;		_SetUartBaudRate
 34468 ;; This function uses a non-reentrant model
 34469 ;;
 34470                           
 34471                           	psect	text163
 34472  0050A2                     __ptext163:
 34473                           	opt stack 0
 34474  0050A2                     ___lldiv:
 34475                           	opt stack 15
 34476                           
 34477                           ; BSR set to: 0
 34478                           ;incstack = 0
 34479  0050A2  0E00               	movlw	0
 34480  0050A4  0100               	movlb	0	; () banked
 34481  0050A6  6F91               	movwf	___lldiv@quotient& (0+255),b
 34482  0050A8  0E00               	movlw	0
 34483  0050AA  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 34484  0050AC  0E00               	movlw	0
 34485  0050AE  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 34486  0050B0  0E00               	movlw	0
 34487  0050B2  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 34488                           
 34489                           ; BSR set to: 0
 34490  0050B4  518D               	movf	___lldiv@divisor& (0+255),w,b
 34491  0050B6  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34492  0050B8  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34493  0050BA  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34494  0050BC  B4D8               	btfsc	status,2,c
 34495  0050BE  D02A               	goto	l3281
 34496                           
 34497                           ; BSR set to: 0
 34498  0050C0  0E01               	movlw	1
 34499  0050C2  6F95               	movwf	___lldiv@counter& (0+255),b
 34500  0050C4  D006               	goto	l3276
 34501  0050C6                     
 34502                           ; BSR set to: 0
 34503                           
 34504                           ; BSR set to: 0
 34505  0050C6  90D8               	bcf	status,0,c
 34506  0050C8  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 34507  0050CA  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34508  0050CC  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34509  0050CE  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34510  0050D0  2B95               	incf	___lldiv@counter& (0+255),f,b
 34511  0050D2                     l3276:
 34512                           
 34513                           ; BSR set to: 0
 34514                           
 34515                           ; BSR set to: 0
 34516  0050D2  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34517  0050D4  D7F8               	goto	l3277
 34518  0050D6                     u12320:
 34519                           
 34520                           ; BSR set to: 0
 34521                           
 34522                           ; BSR set to: 0
 34523                           
 34524                           ; BSR set to: 0
 34525  0050D6  90D8               	bcf	status,0,c
 34526  0050D8  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 34527  0050DA  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34528  0050DC  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34529  0050DE  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34530                           
 34531                           ; BSR set to: 0
 34532  0050E0  518D               	movf	___lldiv@divisor& (0+255),w,b
 34533  0050E2  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 34534  0050E4  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34535  0050E6  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34536  0050E8  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34537  0050EA  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34538  0050EC  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34539  0050EE  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34540  0050F0  A0D8               	btfss	status,0,c
 34541  0050F2  D009               	goto	l3280
 34542                           
 34543                           ; BSR set to: 0
 34544  0050F4  518D               	movf	___lldiv@divisor& (0+255),w,b
 34545  0050F6  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 34546  0050F8  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34547  0050FA  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34548  0050FC  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34549  0050FE  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34550  005100  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34551  005102  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34552                           
 34553                           ; BSR set to: 0
 34554  005104  8191               	bsf	___lldiv@quotient& (0+255),0,b
 34555  005106                     l3280:
 34556                           
 34557                           ; BSR set to: 0
 34558                           
 34559                           ; BSR set to: 0
 34560  005106  90D8               	bcf	status,0,c
 34561  005108  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34562  00510A  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34563  00510C  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34564  00510E  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 34565                           
 34566                           ; BSR set to: 0
 34567  005110  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 34568  005112  D7E1               	goto	u12320
 34569  005114                     l3281:
 34570                           
 34571                           ; BSR set to: 0
 34572                           
 34573                           ; BSR set to: 0
 34574  005114  C091  F089         	movff	___lldiv@quotient,?___lldiv
 34575  005118  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 34576  00511C  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 34577  005120  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 34578                           
 34579                           ; BSR set to: 0
 34580  005124  0012               	return		;funcret
 34581  005126                     __end_of___lldiv:
 34582                           	opt stack 0
 34583                           tosu	equ	0xFFF
 34584                           tosh	equ	0xFFE
 34585                           tosl	equ	0xFFD
 34586                           pclath	equ	0xFFA
 34587                           tblptru	equ	0xFF8
 34588                           tblptrh	equ	0xFF7
 34589                           tblptrl	equ	0xFF6
 34590                           tablat	equ	0xFF5
 34591                           prodh	equ	0xFF4
 34592                           prodl	equ	0xFF3
 34593                           intcon	equ	0xFF2
 34594                           intcon2	equ	0xFF1
 34595                           intcon3	equ	0xFF0
 34596                           indf0	equ	0xFEF
 34597                           postinc0	equ	0xFEE
 34598                           plusw0	equ	0xFEB
 34599                           fsr0h	equ	0xFEA
 34600                           fsr0l	equ	0xFE9
 34601                           wreg	equ	0xFE8
 34602                           indf1	equ	0xFE7
 34603                           postinc1	equ	0xFE6
 34604                           postdec1	equ	0xFE5
 34605                           plusw1	equ	0xFE3
 34606                           fsr1h	equ	0xFE2
 34607                           fsr1l	equ	0xFE1
 34608                           indf2	equ	0xFDF
 34609                           postinc2	equ	0xFDE
 34610                           postdec2	equ	0xFDD
 34611                           plusw2	equ	0xFDB
 34612                           fsr2h	equ	0xFDA
 34613                           fsr2l	equ	0xFD9
 34614                           status	equ	0xFD8
 34615                           
 34616 ;; *************** function _I2cSetConfig *****************
 34617 ;; Defined at:
 34618 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34619 ;; Parameters:    Size  Location     Type
 34620 ;;		None
 34621 ;; Auto vars:     Size  Location     Type
 34622 ;;		None
 34623 ;; Return value:  Size  Location     Type
 34624 ;;                  1    wreg      void 
 34625 ;; Registers used:
 34626 ;;		wreg, status,2
 34627 ;; Tracked objects:
 34628 ;;		On entry : 0/0
 34629 ;;		On exit  : 0/0
 34630 ;;		Unchanged: 0/0
 34631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34636 ;;Total ram usage:        0 bytes
 34637 ;; Hardware stack levels used:    1
 34638 ;; Hardware stack levels required when called:   11
 34639 ;; This function calls:
 34640 ;;		Nothing
 34641 ;; This function is called by:
 34642 ;;		_I2cSlv_MainTask
 34643 ;; This function uses a non-reentrant model
 34644 ;;
 34645                           
 34646                           	psect	text164
 34647  006552                     __ptext164:
 34648                           	opt stack 0
 34649  006552                     _I2cSetConfig:
 34650                           	opt stack 16
 34651                           
 34652                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 34653                           
 34654                           ; BSR set to: 0
 34655                           ;incstack = 0
 34656  006552  0E80               	movlw	128
 34657  006554  0103               	movlb	3	; () banked
 34658  006556  6F54               	movwf	_I2cConfig& (0+255),b
 34659  006558  0E1A               	movlw	26
 34660  00655A  6F55               	movwf	(_I2cConfig+1)& (0+255),b
 34661  00655C  0E06               	movlw	6
 34662  00655E  6F56               	movwf	(_I2cConfig+2)& (0+255),b
 34663  006560  0E00               	movlw	0
 34664  006562  6F57               	movwf	(_I2cConfig+3)& (0+255),b
 34665                           
 34666                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 34667  006564  0E00               	movlw	0
 34668  006566  6F58               	movwf	(_I2cConfig+4)& (0+255),b
 34669  006568  0E6C               	movlw	108
 34670  00656A  6F59               	movwf	(_I2cConfig+5)& (0+255),b
 34671  00656C  0EDC               	movlw	220
 34672  00656E  6F5A               	movwf	(_I2cConfig+6)& (0+255),b
 34673  006570  0E02               	movlw	2
 34674  006572  6F5B               	movwf	(_I2cConfig+7)& (0+255),b
 34675                           
 34676                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 34677  006574  0E08               	movlw	8
 34678  006576  6F5C               	movwf	(_I2cConfig+8)& (0+255),b
 34679                           
 34680                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 34681  006578  0E01               	movlw	1
 34682  00657A  6F5D               	movwf	(_I2cConfig+9)& (0+255),b
 34683                           
 34684                           ; BSR set to: 3
 34685  00657C  0012               	return		;funcret
 34686  00657E                     __end_of_I2cSetConfig:
 34687                           	opt stack 0
 34688                           tosu	equ	0xFFF
 34689                           tosh	equ	0xFFE
 34690                           tosl	equ	0xFFD
 34691                           pclath	equ	0xFFA
 34692                           tblptru	equ	0xFF8
 34693                           tblptrh	equ	0xFF7
 34694                           tblptrl	equ	0xFF6
 34695                           tablat	equ	0xFF5
 34696                           prodh	equ	0xFF4
 34697                           prodl	equ	0xFF3
 34698                           intcon	equ	0xFF2
 34699                           intcon2	equ	0xFF1
 34700                           intcon3	equ	0xFF0
 34701                           indf0	equ	0xFEF
 34702                           postinc0	equ	0xFEE
 34703                           plusw0	equ	0xFEB
 34704                           fsr0h	equ	0xFEA
 34705                           fsr0l	equ	0xFE9
 34706                           wreg	equ	0xFE8
 34707                           indf1	equ	0xFE7
 34708                           postinc1	equ	0xFE6
 34709                           postdec1	equ	0xFE5
 34710                           plusw1	equ	0xFE3
 34711                           fsr1h	equ	0xFE2
 34712                           fsr1l	equ	0xFE1
 34713                           indf2	equ	0xFDF
 34714                           postinc2	equ	0xFDE
 34715                           postdec2	equ	0xFDD
 34716                           plusw2	equ	0xFDB
 34717                           fsr2h	equ	0xFDA
 34718                           fsr2l	equ	0xFD9
 34719                           status	equ	0xFD8
 34720                           
 34721 ;; *************** function _I2cSendMsgSm *****************
 34722 ;; Defined at:
 34723 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34724 ;; Parameters:    Size  Location     Type
 34725 ;;		None
 34726 ;; Auto vars:     Size  Location     Type
 34727 ;;		None
 34728 ;; Return value:  Size  Location     Type
 34729 ;;                  1    wreg      void 
 34730 ;; Registers used:
 34731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34732 ;; Tracked objects:
 34733 ;;		On entry : 0/0
 34734 ;;		On exit  : 0/0
 34735 ;;		Unchanged: 0/0
 34736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34741 ;;Total ram usage:        0 bytes
 34742 ;; Hardware stack levels used:    1
 34743 ;; Hardware stack levels required when called:   13
 34744 ;; This function calls:
 34745 ;;		_I2c_ReadData
 34746 ;;		_I2c_WriteData
 34747 ;;		_ReceiveEvt
 34748 ;; This function is called by:
 34749 ;;		_I2cSlv_MainTask
 34750 ;; This function uses a non-reentrant model
 34751 ;;
 34752                           
 34753                           	psect	text165
 34754  003F9C                     __ptext165:
 34755                           	opt stack 0
 34756  003F9C                     _I2cSendMsgSm:
 34757                           	opt stack 14
 34758                           
 34759                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 34760                           ;i2c_slv.c: 122: switch(I2cComState)
 34761                           
 34762                           ; BSR set to: 3
 34763                           ;incstack = 0
 34764  003F9C  D04F               	goto	l1382
 34765  003F9E                     
 34766                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 34767  003F9E  0ED9               	movlw	low _I2cWriteDataEvt
 34768  003FA0  0100               	movlb	0	; () banked
 34769  003FA2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 34770  003FA4  0E00               	movlw	high _I2cWriteDataEvt
 34771  003FA6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 34772  003FA8  EC92  F032         	call	_ReceiveEvt	;wreg free
 34773  003FAC  0900               	iorlw	0
 34774  003FAE  B4D8               	btfsc	status,2,c
 34775  003FB0  D007               	goto	l1384
 34776                           
 34777                           ;i2c_slv.c: 127: {
 34778                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 34779  003FB2  0E01               	movlw	1
 34780  003FB4  0101               	movlb	1	; () banked
 34781  003FB6  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34782                           
 34783                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 34784  003FB8  0E01               	movlw	1
 34785  003FBA  0100               	movlb	0	; () banked
 34786  003FBC  6FCF               	movwf	_I2cComSts& (0+255),b
 34787                           
 34788                           ;i2c_slv.c: 132: }
 34789  003FBE  0012               	return	
 34790  003FC0                     l1384:
 34791                           
 34792                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 34793                           
 34794                           ; BSR set to: 0
 34795  003FC0  0ED8               	movlw	low _I2cReadDataEvt
 34796  003FC2  0100               	movlb	0	; () banked
 34797  003FC4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 34798  003FC6  0E00               	movlw	high _I2cReadDataEvt
 34799  003FC8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 34800  003FCA  EC92  F032         	call	_ReceiveEvt	;wreg free
 34801  003FCE  0900               	iorlw	0
 34802  003FD0  B4D8               	btfsc	status,2,c
 34803  003FD2  D007               	goto	l1386
 34804                           
 34805                           ;i2c_slv.c: 134: {
 34806                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 34807  003FD4  0E02               	movlw	2
 34808  003FD6  0101               	movlb	1	; () banked
 34809  003FD8  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34810                           
 34811                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 34812  003FDA  0E02               	movlw	2
 34813  003FDC  0100               	movlb	0	; () banked
 34814  003FDE  6FCF               	movwf	_I2cComSts& (0+255),b
 34815                           
 34816                           ;i2c_slv.c: 139: }
 34817  003FE0  0012               	return	
 34818  003FE2                     l1386:
 34819                           
 34820                           ;i2c_slv.c: 140: else
 34821                           ;i2c_slv.c: 141: {
 34822                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 34823                           
 34824                           ; BSR set to: 0
 34825  003FE2  0E00               	movlw	0
 34826  003FE4  0100               	movlb	0	; () banked
 34827  003FE6  6FCF               	movwf	_I2cComSts& (0+255),b
 34828                           
 34829                           ; BSR set to: 0
 34830                           ;i2c_slv.c: 144: }
 34831                           ;i2c_slv.c: 145: break;
 34832                           
 34833                           ; BSR set to: 0
 34834  003FE8  0012               	return	
 34835  003FEA                     
 34836                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 34837                           
 34838                           ; BSR set to: 0
 34839  003FEA  0EA0               	movlw	low _I2cTxPacket
 34840  003FEC  0100               	movlb	0	; () banked
 34841  003FEE  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 34842  003FF0  0E03               	movlw	high _I2cTxPacket
 34843  003FF2  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 34844  003FF4  EC5A  F00F         	call	_I2c_WriteData	;wreg free
 34845  003FF8  0900               	iorlw	0
 34846  003FFA  B4D8               	btfsc	status,2,c
 34847  003FFC  0012               	return	
 34848                           
 34849                           ;i2c_slv.c: 150: {
 34850                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 34851  003FFE  0E03               	movlw	3
 34852  004000  0101               	movlb	1	; () banked
 34853  004002  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34854                           
 34855                           ; BSR set to: 1
 34856                           ;i2c_slv.c: 153: }
 34857                           ;i2c_slv.c: 154: break;
 34858  004004  0012               	return	
 34859  004006                     
 34860                           ; BSR set to: 1
 34861                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 34862                           
 34863                           ; BSR set to: 1
 34864  004006  0E9A               	movlw	low _I2cRxPacket
 34865  004008  0100               	movlb	0	; () banked
 34866  00400A  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 34867  00400C  0E03               	movlw	high _I2cRxPacket
 34868  00400E  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 34869  004010  EC11  F010         	call	_I2c_ReadData	;wreg free
 34870  004014  0900               	iorlw	0
 34871  004016  B4D8               	btfsc	status,2,c
 34872  004018  0012               	return	
 34873                           
 34874                           ;i2c_slv.c: 159: {
 34875                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 34876  00401A  0E04               	movlw	4
 34877  00401C  0101               	movlb	1	; () banked
 34878  00401E  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34879                           
 34880                           ; BSR set to: 1
 34881                           ;i2c_slv.c: 162: }
 34882                           ;i2c_slv.c: 164: break;
 34883  004020  0012               	return	
 34884  004022                     
 34885                           ; BSR set to: 1
 34886                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 34887                           
 34888                           ; BSR set to: 1
 34889  004022  0E00               	movlw	0
 34890  004024  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34891                           
 34892                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 34893  004026  0E00               	movlw	0
 34894  004028  0100               	movlb	0	; () banked
 34895  00402A  6FCF               	movwf	_I2cComSts& (0+255),b
 34896                           
 34897                           ;i2c_slv.c: 171: break;
 34898  00402C  0012               	return	
 34899  00402E                     
 34900                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 34901                           
 34902                           ; BSR set to: 0
 34903  00402E  0E00               	movlw	0
 34904  004030  0101               	movlb	1	; () banked
 34905  004032  6FE6               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34906                           
 34907                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 34908  004034  0E00               	movlw	0
 34909  004036  0100               	movlb	0	; () banked
 34910  004038  6FCF               	movwf	_I2cComSts& (0+255),b
 34911                           
 34912                           ; BSR set to: 0
 34913                           ;i2c_slv.c: 182: }
 34914                           
 34915                           ; BSR set to: 0
 34916                           ;i2c_slv.c: 181: break;
 34917                           
 34918                           ;i2c_slv.c: 180: default:
 34919                           
 34920                           ;i2c_slv.c: 178: break;
 34921  00403A  0012               	return	
 34922  00403C                     l1382:
 34923                           
 34924                           ; BSR set to: 0
 34925  00403C  0101               	movlb	1	; () banked
 34926  00403E  51E6               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 34927                           
 34928                           ; Switch size 1, requested type "space"
 34929                           ; Number of cases is 5, Range of values is 0 to 4
 34930                           ; switch strategies available:
 34931                           ; Name         Instructions Cycles
 34932                           ; simple_byte           16     9 (average)
 34933                           ;	Chosen strategy is simple_byte
 34934  004040  0A00               	xorlw	0	; case 0
 34935  004042  B4D8               	btfsc	status,2,c
 34936  004044  D7AC               	goto	l1383
 34937  004046  0A01               	xorlw	1	; case 1
 34938  004048  B4D8               	btfsc	status,2,c
 34939  00404A  D7CF               	goto	l1389
 34940  00404C  0A03               	xorlw	3	; case 2
 34941  00404E  B4D8               	btfsc	status,2,c
 34942  004050  D7DA               	goto	l1391
 34943  004052  0A01               	xorlw	1	; case 3
 34944  004054  B4D8               	btfsc	status,2,c
 34945  004056  D7E5               	goto	l1393
 34946  004058  0A07               	xorlw	7	; case 4
 34947  00405A  A4D8               	btfss	status,2,c
 34948  00405C  0012               	return	
 34949  00405E  D7E7               	goto	l1394
 34950  004060                     __end_of_I2cSendMsgSm:
 34951                           	opt stack 0
 34952                           tosu	equ	0xFFF
 34953                           tosh	equ	0xFFE
 34954                           tosl	equ	0xFFD
 34955                           pclath	equ	0xFFA
 34956                           tblptru	equ	0xFF8
 34957                           tblptrh	equ	0xFF7
 34958                           tblptrl	equ	0xFF6
 34959                           tablat	equ	0xFF5
 34960                           prodh	equ	0xFF4
 34961                           prodl	equ	0xFF3
 34962                           intcon	equ	0xFF2
 34963                           intcon2	equ	0xFF1
 34964                           intcon3	equ	0xFF0
 34965                           indf0	equ	0xFEF
 34966                           postinc0	equ	0xFEE
 34967                           plusw0	equ	0xFEB
 34968                           fsr0h	equ	0xFEA
 34969                           fsr0l	equ	0xFE9
 34970                           wreg	equ	0xFE8
 34971                           indf1	equ	0xFE7
 34972                           postinc1	equ	0xFE6
 34973                           postdec1	equ	0xFE5
 34974                           plusw1	equ	0xFE3
 34975                           fsr1h	equ	0xFE2
 34976                           fsr1l	equ	0xFE1
 34977                           indf2	equ	0xFDF
 34978                           postinc2	equ	0xFDE
 34979                           postdec2	equ	0xFDD
 34980                           plusw2	equ	0xFDB
 34981                           fsr2h	equ	0xFDA
 34982                           fsr2l	equ	0xFD9
 34983                           status	equ	0xFD8
 34984                           
 34985 ;; *************** function _ReceiveEvt *****************
 34986 ;; Defined at:
 34987 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34988 ;; Parameters:    Size  Location     Type
 34989 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 34990 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 34991 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 34992 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 34993 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 34994 ;;		 -> ActivateRiDetection(1), 
 34995 ;; Auto vars:     Size  Location     Type
 34996 ;;  EventStatus     1   32[BANK0 ] enum E7727
 34997 ;; Return value:  Size  Location     Type
 34998 ;;                  1    wreg      enum E7699
 34999 ;; Registers used:
 35000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35001 ;; Tracked objects:
 35002 ;;		On entry : 0/0
 35003 ;;		On exit  : 0/0
 35004 ;;		Unchanged: 0/0
 35005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35009 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35010 ;;Total ram usage:        4 bytes
 35011 ;; Hardware stack levels used:    1
 35012 ;; Hardware stack levels required when called:   11
 35013 ;; This function calls:
 35014 ;;		Nothing
 35015 ;; This function is called by:
 35016 ;;		_MdmCntSm
 35017 ;;		_CheckModem
 35018 ;;		_ModemEvtParser
 35019 ;;		_GetSmsSm
 35020 ;;		_SendSmsSm
 35021 ;;		_Mdm_GetSmsData
 35022 ;;		_Mdm_IsSmsReceived
 35023 ;;		_Mdm_IsRinging
 35024 ;;		_GetCallerNumber
 35025 ;;		_InitGprsNetwork
 35026 ;;		_HttpGetMethod
 35027 ;;		_I2cSendMsgSm
 35028 ;;		_I2cSlv_I2cReadMsgSts
 35029 ;;		_RiSm
 35030 ;;		_GsmGprsTerminal
 35031 ;; This function uses a non-reentrant model
 35032 ;;
 35033                           
 35034                           	psect	text166
 35035  006524                     __ptext166:
 35036                           	opt stack 0
 35037  006524                     _ReceiveEvt:
 35038                           	opt stack 13
 35039                           
 35040                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35041                           
 35042                           ;incstack = 0
 35043  006524  0E00               	movlw	0
 35044  006526  0100               	movlb	0	; () banked
 35045  006528  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35046                           
 35047                           ; BSR set to: 0
 35048                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35049  00652A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35050  00652E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35051  006532  0E02               	movlw	2
 35052  006534  18DE               	xorwf	postinc2,w,c
 35053  006536  A4D8               	btfss	status,2,c
 35054  006538  D008               	goto	l832
 35055                           
 35056                           ; BSR set to: 0
 35057                           ;os_ser.c: 106: {
 35058                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35059  00653A  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35060  00653E  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35061  006542  0E01               	movlw	1
 35062  006544  6EDF               	movwf	indf2,c
 35063                           
 35064                           ; BSR set to: 0
 35065                           ;os_ser.c: 110: EventStatus = EventReceived;
 35066  006546  0E01               	movlw	1
 35067  006548  D001               	goto	L75
 35068  00654A                     l832:
 35069                           
 35070                           ; BSR set to: 0
 35071                           ;os_ser.c: 112: else
 35072                           ;os_ser.c: 113: {
 35073                           ;os_ser.c: 115: EventStatus = EventIdle;
 35074                           
 35075                           ; BSR set to: 0
 35076  00654A  0E00               	movlw	0
 35077  00654C                     L75:
 35078  00654C  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35079                           
 35080                           ; BSR set to: 0
 35081                           ;os_ser.c: 116: }
 35082                           ;os_ser.c: 119: return(EventStatus);
 35083  00654E  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35084  006550  0012               	return	
 35085  006552                     __end_of_ReceiveEvt:
 35086                           	opt stack 0
 35087                           tosu	equ	0xFFF
 35088                           tosh	equ	0xFFE
 35089                           tosl	equ	0xFFD
 35090                           pclath	equ	0xFFA
 35091                           tblptru	equ	0xFF8
 35092                           tblptrh	equ	0xFF7
 35093                           tblptrl	equ	0xFF6
 35094                           tablat	equ	0xFF5
 35095                           prodh	equ	0xFF4
 35096                           prodl	equ	0xFF3
 35097                           intcon	equ	0xFF2
 35098                           intcon2	equ	0xFF1
 35099                           intcon3	equ	0xFF0
 35100                           indf0	equ	0xFEF
 35101                           postinc0	equ	0xFEE
 35102                           plusw0	equ	0xFEB
 35103                           fsr0h	equ	0xFEA
 35104                           fsr0l	equ	0xFE9
 35105                           wreg	equ	0xFE8
 35106                           indf1	equ	0xFE7
 35107                           postinc1	equ	0xFE6
 35108                           postdec1	equ	0xFE5
 35109                           plusw1	equ	0xFE3
 35110                           fsr1h	equ	0xFE2
 35111                           fsr1l	equ	0xFE1
 35112                           indf2	equ	0xFDF
 35113                           postinc2	equ	0xFDE
 35114                           postdec2	equ	0xFDD
 35115                           plusw2	equ	0xFDB
 35116                           fsr2h	equ	0xFDA
 35117                           fsr2l	equ	0xFD9
 35118                           status	equ	0xFD8
 35119                           
 35120 ;; *************** function _I2c_WriteData *****************
 35121 ;; Defined at:
 35122 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35123 ;; Parameters:    Size  Location     Type
 35124 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35125 ;;		 -> I2cTxPacket(5), 
 35126 ;; Auto vars:     Size  Location     Type
 35127 ;;		None
 35128 ;; Return value:  Size  Location     Type
 35129 ;;                  1    wreg      enum E7740
 35130 ;; Registers used:
 35131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35132 ;; Tracked objects:
 35133 ;;		On entry : 0/0
 35134 ;;		On exit  : 0/0
 35135 ;;		Unchanged: 0/0
 35136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35140 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35141 ;;Total ram usage:        4 bytes
 35142 ;; Hardware stack levels used:    1
 35143 ;; Hardware stack levels required when called:   12
 35144 ;; This function calls:
 35145 ;;		_CheckAckStatus
 35146 ;;		_CheckTxStatus
 35147 ;;		_StartCondition
 35148 ;;		_StopCondition
 35149 ;;		_WriteByte
 35150 ;; This function is called by:
 35151 ;;		_I2cSendMsgSm
 35152 ;; This function uses a non-reentrant model
 35153 ;;
 35154                           
 35155                           	psect	text167
 35156  001EB4                     __ptext167:
 35157                           	opt stack 0
 35158  001EB4                     _I2c_WriteData:
 35159                           	opt stack 14
 35160                           
 35161                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35162                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35163                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35164                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35165                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;incstack = 0
 35169  001EB4  D095               	goto	l160
 35170  001EB6                     
 35171                           ;i2c_drv.c: 264: StartCondition();
 35172  001EB6  EC4E  F035         	call	_StartCondition	;wreg free
 35173                           
 35174                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35175  001EBA  0E00               	movlw	0
 35176  001EBC  6E33               	movwf	I2c_WriteData@WriteStatus,c
 35177                           
 35178                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35179  001EBE  0E01               	movlw	1
 35180  001EC0  D084               	goto	L82
 35181  001EC2                     
 35182                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35183  001EC2  0100               	movlb	0	; () banked
 35184  001EC4  EE20 F001          	lfsr	2,1
 35185  001EC8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35186  001ECA  26D9               	addwf	fsr2l,f,c
 35187  001ECC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35188  001ECE  22DA               	addwfc	fsr2h,f,c
 35189  001ED0  50DF               	movf	indf2,w,c
 35190  001ED2  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35191  001ED4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35192  001ED8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35193  001EDC  50DF               	movf	indf2,w,c
 35194  001EDE  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35195  001EE0  90D8               	bcf	status,0,c
 35196  001EE2  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35197  001EE4  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35198  001EE6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35199  001EEA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35200  001EEE  6EDF               	movwf	indf2,c
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35204  001EF0  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35205  001EF4  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35206  001EF8  50DF               	movf	indf2,w,c
 35207  001EFA  EC2C  F035         	call	_WriteByte
 35208                           
 35209                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35210  001EFE  0E02               	movlw	2
 35211  001F00  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35212  001F02                     
 35213                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35214  001F02  EC36  F035         	call	_CheckTxStatus	;wreg free
 35215  001F06  0900               	iorlw	0
 35216  001F08  A4D8               	btfss	status,2,c
 35217  001F0A  D089               	goto	l162
 35218                           
 35219                           ;i2c_drv.c: 282: {
 35220                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35221  001F0C  0E03               	movlw	3
 35222  001F0E  D01A               	goto	L84
 35223  001F10                     
 35224                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35225  001F10  0100               	movlb	0	; () banked
 35226  001F12  EE20 F002          	lfsr	2,2
 35227  001F16  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35228  001F18  26D9               	addwf	fsr2l,f,c
 35229  001F1A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35230  001F1C  22DA               	addwfc	fsr2h,f,c
 35231  001F1E  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35232  001F22  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35233  001F26  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35234  001F2A  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35235  001F2E  50DF               	movf	indf2,w,c
 35236  001F30  EC2C  F035         	call	_WriteByte
 35237                           
 35238                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35239  001F34  0E04               	movlw	4
 35240  001F36  D049               	goto	L82
 35241  001F38                     
 35242                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35243  001F38  EC36  F035         	call	_CheckTxStatus	;wreg free
 35244  001F3C  0900               	iorlw	0
 35245  001F3E  A4D8               	btfss	status,2,c
 35246  001F40  D06E               	goto	l162
 35247                           
 35248                           ;i2c_drv.c: 300: {
 35249                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35250  001F42  0E05               	movlw	5
 35251  001F44                     L84:
 35252  001F44  6E35               	movwf	I2c_WriteData@I2cNextState,c
 35253                           
 35254                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35255  001F46  0E08               	movlw	8
 35256  001F48  D040               	goto	L82
 35257  001F4A                     
 35258                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35259  001F4A  0100               	movlb	0	; () banked
 35260  001F4C  EE20 F004          	lfsr	2,4
 35261  001F50  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35262  001F52  26D9               	addwf	fsr2l,f,c
 35263  001F54  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35264  001F56  22DA               	addwfc	fsr2h,f,c
 35265  001F58  50DF               	movf	indf2,w,c
 35266  001F5A  B4D8               	btfsc	status,2,c
 35267  001F5C  D010               	goto	l170
 35268                           
 35269                           ; BSR set to: 0
 35270                           ;i2c_drv.c: 310: {
 35271                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35272  001F5E  EE20 F004          	lfsr	2,4
 35273  001F62  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35274  001F64  26D9               	addwf	fsr2l,f,c
 35275  001F66  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35276  001F68  22DA               	addwfc	fsr2h,f,c
 35277  001F6A  06DF               	decf	indf2,f,c
 35278                           
 35279                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35280  001F6C  EE20 F002          	lfsr	2,2
 35281  001F70  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35282  001F72  26D9               	addwf	fsr2l,f,c
 35283  001F74  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35284  001F76  22DA               	addwfc	fsr2h,f,c
 35285  001F78  2ADE               	incf	postinc2,f,c
 35286  001F7A  0E00               	movlw	0
 35287  001F7C  22DD               	addwfc	postdec2,f,c
 35288  001F7E                     l170:
 35289                           
 35290                           ; BSR set to: 0
 35291                           ;i2c_drv.c: 315: }
 35292                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35293  001F7E  EE20 F004          	lfsr	2,4
 35294  001F82  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35295  001F84  26D9               	addwf	fsr2l,f,c
 35296  001F86  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35297  001F88  22DA               	addwfc	fsr2h,f,c
 35298  001F8A  50DF               	movf	indf2,w,c
 35299  001F8C  A4D8               	btfss	status,2,c
 35300  001F8E  D002               	goto	l171
 35301                           
 35302                           ; BSR set to: 0
 35303                           ;i2c_drv.c: 319: {
 35304                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35305  001F90  0E06               	movlw	6
 35306  001F92  D01B               	goto	L82
 35307  001F94                     l171:
 35308                           
 35309                           ; BSR set to: 0
 35310                           ;i2c_drv.c: 323: else
 35311                           ;i2c_drv.c: 324: {
 35312                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35313                           
 35314                           ; BSR set to: 0
 35315  001F94  0E03               	movlw	3
 35316  001F96  D019               	goto	L82
 35317  001F98                     
 35318                           ;i2c_drv.c: 332: StopCondition();
 35319                           
 35320                           ; BSR set to: 0
 35321  001F98  EC4C  F035         	call	_StopCondition	;wreg free
 35322                           
 35323                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 35324  001F9C  0E07               	movlw	7
 35325  001F9E  D015               	goto	L82
 35326  001FA0                     
 35327                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 35328  001FA0  0E00               	movlw	0
 35329  001FA2  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35330                           
 35331                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 35332  001FA4  0E00               	movlw	0
 35333  001FA6  6E35               	movwf	I2c_WriteData@I2cNextState,c
 35334                           
 35335                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 35336  001FA8  0E02               	movlw	2
 35337  001FAA  D018               	goto	L83
 35338  001FAC                     
 35339                           ;i2c_drv.c: 347: TentativeCounter++;
 35340  001FAC  2A34               	incf	I2c_WriteData@TentativeCounter,f,c
 35341                           
 35342                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 35343  001FAE  EC3B  F035         	call	_CheckAckStatus	;wreg free
 35344  001FB2  0900               	iorlw	0
 35345  001FB4  A4D8               	btfss	status,2,c
 35346  001FB6  D005               	goto	l176
 35347                           
 35348                           ;i2c_drv.c: 350: {
 35349                           ;i2c_drv.c: 352: TentativeCounter = 0;
 35350  001FB8  0E00               	movlw	0
 35351  001FBA  6E34               	movwf	I2c_WriteData@TentativeCounter,c
 35352                           
 35353                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 35354  001FBC  C035  F036         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 35355                           
 35356                           ;i2c_drv.c: 355: }
 35357  001FC0  D02E               	goto	l162
 35358  001FC2                     l176:
 35359                           
 35360                           ;i2c_drv.c: 356: else
 35361                           ;i2c_drv.c: 357: {
 35362                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 35363  001FC2  0E02               	movlw	2
 35364  001FC4  6434               	cpfsgt	I2c_WriteData@TentativeCounter,c
 35365  001FC6  D02B               	goto	l162
 35366                           
 35367                           ;i2c_drv.c: 360: {
 35368                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 35369  001FC8  0E09               	movlw	9
 35370  001FCA                     L82:
 35371  001FCA  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35372                           
 35373                           ;i2c_drv.c: 363: }
 35374                           ;i2c_drv.c: 364: }
 35375                           ;i2c_drv.c: 365: break;
 35376  001FCC  D028               	goto	l162
 35377  001FCE                     
 35378                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 35379  001FCE  0E00               	movlw	0
 35380  001FD0  6E36               	movwf	I2c_WriteData@I2cWriteState,c
 35381                           
 35382                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 35383  001FD2  0E00               	movlw	0
 35384  001FD4  6E35               	movwf	I2c_WriteData@I2cNextState,c
 35385                           
 35386                           ;i2c_drv.c: 372: TentativeCounter = 0;
 35387  001FD6  0E00               	movlw	0
 35388  001FD8  6E34               	movwf	I2c_WriteData@TentativeCounter,c
 35389                           
 35390                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 35391  001FDA  0E01               	movlw	1
 35392  001FDC                     L83:
 35393  001FDC  6E33               	movwf	I2c_WriteData@WriteStatus,c
 35394                           
 35395                           ;i2c_drv.c: 379: }
 35396                           
 35397                           ;i2c_drv.c: 378: break;
 35398                           
 35399                           ;i2c_drv.c: 377: default:
 35400                           
 35401                           ;i2c_drv.c: 375: break;
 35402  001FDE  D01F               	goto	l162
 35403  001FE0                     l160:
 35404  001FE0  5036               	movf	I2c_WriteData@I2cWriteState,w,c
 35405                           
 35406                           ; Switch size 1, requested type "space"
 35407                           ; Number of cases is 10, Range of values is 0 to 9
 35408                           ; switch strategies available:
 35409                           ; Name         Instructions Cycles
 35410                           ; simple_byte           31    16 (average)
 35411                           ;	Chosen strategy is simple_byte
 35412  001FE2  0A00               	xorlw	0	; case 0
 35413  001FE4  B4D8               	btfsc	status,2,c
 35414  001FE6  D767               	goto	l161
 35415  001FE8  0A01               	xorlw	1	; case 1
 35416  001FEA  B4D8               	btfsc	status,2,c
 35417  001FEC  D76A               	goto	l163
 35418  001FEE  0A03               	xorlw	3	; case 2
 35419  001FF0  B4D8               	btfsc	status,2,c
 35420  001FF2  D787               	goto	l164
 35421  001FF4  0A01               	xorlw	1	; case 3
 35422  001FF6  B4D8               	btfsc	status,2,c
 35423  001FF8  D78B               	goto	l166
 35424  001FFA  0A07               	xorlw	7	; case 4
 35425  001FFC  B4D8               	btfsc	status,2,c
 35426  001FFE  D79C               	goto	l167
 35427  002000  0A01               	xorlw	1	; case 5
 35428  002002  B4D8               	btfsc	status,2,c
 35429  002004  D7A2               	goto	l169
 35430  002006  0A03               	xorlw	3	; case 6
 35431  002008  B4D8               	btfsc	status,2,c
 35432  00200A  D7C6               	goto	l173
 35433  00200C  0A01               	xorlw	1	; case 7
 35434  00200E  B4D8               	btfsc	status,2,c
 35435  002010  D7C7               	goto	l174
 35436  002012  0A0F               	xorlw	15	; case 8
 35437  002014  B4D8               	btfsc	status,2,c
 35438  002016  D7CA               	goto	l175
 35439  002018  0A01               	xorlw	1	; case 9
 35440  00201A  B4D8               	btfsc	status,2,c
 35441  00201C  D7D8               	goto	l179
 35442  00201E                     l162:
 35443                           
 35444                           ;i2c_drv.c: 382: return WriteStatus;
 35445  00201E  5033               	movf	I2c_WriteData@WriteStatus,w,c
 35446  002020  0012               	return	
 35447  002022                     __end_of_I2c_WriteData:
 35448                           	opt stack 0
 35449                           tosu	equ	0xFFF
 35450                           tosh	equ	0xFFE
 35451                           tosl	equ	0xFFD
 35452                           pclath	equ	0xFFA
 35453                           tblptru	equ	0xFF8
 35454                           tblptrh	equ	0xFF7
 35455                           tblptrl	equ	0xFF6
 35456                           tablat	equ	0xFF5
 35457                           prodh	equ	0xFF4
 35458                           prodl	equ	0xFF3
 35459                           intcon	equ	0xFF2
 35460                           intcon2	equ	0xFF1
 35461                           intcon3	equ	0xFF0
 35462                           indf0	equ	0xFEF
 35463                           postinc0	equ	0xFEE
 35464                           plusw0	equ	0xFEB
 35465                           fsr0h	equ	0xFEA
 35466                           fsr0l	equ	0xFE9
 35467                           wreg	equ	0xFE8
 35468                           indf1	equ	0xFE7
 35469                           postinc1	equ	0xFE6
 35470                           postdec1	equ	0xFE5
 35471                           plusw1	equ	0xFE3
 35472                           fsr1h	equ	0xFE2
 35473                           fsr1l	equ	0xFE1
 35474                           indf2	equ	0xFDF
 35475                           postinc2	equ	0xFDE
 35476                           postdec2	equ	0xFDD
 35477                           plusw2	equ	0xFDB
 35478                           fsr2h	equ	0xFDA
 35479                           fsr2l	equ	0xFD9
 35480                           status	equ	0xFD8
 35481                           
 35482 ;; *************** function _I2c_ReadData *****************
 35483 ;; Defined at:
 35484 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35485 ;; Parameters:    Size  Location     Type
 35486 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 35487 ;;		 -> I2cRxPacket(6), 
 35488 ;; Auto vars:     Size  Location     Type
 35489 ;;		None
 35490 ;; Return value:  Size  Location     Type
 35491 ;;                  1    wreg      enum E7787
 35492 ;; Registers used:
 35493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35494 ;; Tracked objects:
 35495 ;;		On entry : 0/0
 35496 ;;		On exit  : 0/0
 35497 ;;		Unchanged: 0/0
 35498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35503 ;;Total ram usage:        4 bytes
 35504 ;; Hardware stack levels used:    1
 35505 ;; Hardware stack levels required when called:   12
 35506 ;; This function calls:
 35507 ;;		_CheckAckStatus
 35508 ;;		_CheckTxStatus
 35509 ;;		_EnableReceiver
 35510 ;;		_GenerateEvt
 35511 ;;		_ReadByte
 35512 ;;		_SetAckStatus
 35513 ;;		_StartCondition
 35514 ;;		_StopCondition
 35515 ;;		_WriteByte
 35516 ;; This function is called by:
 35517 ;;		_I2cSendMsgSm
 35518 ;; This function uses a non-reentrant model
 35519 ;;
 35520                           
 35521                           	psect	text168
 35522  002022                     __ptext168:
 35523                           	opt stack 0
 35524  002022                     _I2c_ReadData:
 35525                           	opt stack 14
 35526                           
 35527                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 35528                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 35529                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 35530                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 35531                           ;i2c_drv.c: 402: switch (I2cReadState)
 35532                           
 35533                           ;incstack = 0
 35534  002022  D090               	goto	l192
 35535  002024                     
 35536                           ;i2c_drv.c: 406: StartCondition();
 35537  002024  EC4E  F035         	call	_StartCondition	;wreg free
 35538                           
 35539                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 35540  002028  0E00               	movlw	0
 35541  00202A  6E2F               	movwf	I2c_ReadData@ReadStatus,c
 35542                           
 35543                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 35544  00202C  0E01               	movlw	1
 35545  00202E  D083               	goto	L92
 35546  002030                     
 35547                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 35548  002030  0100               	movlb	0	; () banked
 35549  002032  EE20 F001          	lfsr	2,1
 35550  002036  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35551  002038  26D9               	addwf	fsr2l,f,c
 35552  00203A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35553  00203C  22DA               	addwfc	fsr2h,f,c
 35554  00203E  50DF               	movf	indf2,w,c
 35555  002040  6F82               	movwf	??_I2c_ReadData& (0+255),b
 35556  002042  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35557  002046  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35558  00204A  50DF               	movf	indf2,w,c
 35559  00204C  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 35560  00204E  90D8               	bcf	status,0,c
 35561  002050  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 35562  002052  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 35563  002054  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35564  002058  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35565  00205C  6EDF               	movwf	indf2,c
 35566                           
 35567                           ; BSR set to: 0
 35568                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 35569  00205E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35570  002062  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35571  002066  50DF               	movf	indf2,w,c
 35572  002068  EC2C  F035         	call	_WriteByte
 35573                           
 35574                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 35575  00206C  0E02               	movlw	2
 35576  00206E  D063               	goto	L92
 35577  002070                     
 35578                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 35579  002070  EC36  F035         	call	_CheckTxStatus	;wreg free
 35580  002074  0900               	iorlw	0
 35581  002076  A4D8               	btfss	status,2,c
 35582  002078  D081               	goto	l194
 35583                           
 35584                           ;i2c_drv.c: 425: {
 35585                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 35586  00207A  0E03               	movlw	3
 35587  00207C  D05C               	goto	L92
 35588  00207E                     
 35589                           ;i2c_drv.c: 433: TentativeCounter++;
 35590  00207E  2A30               	incf	I2c_ReadData@TentativeCounter,f,c
 35591                           
 35592                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 35593  002080  EC3B  F035         	call	_CheckAckStatus	;wreg free
 35594  002084  0900               	iorlw	0
 35595  002086  A4D8               	btfss	status,2,c
 35596  002088  D004               	goto	l199
 35597                           
 35598                           ;i2c_drv.c: 436: {
 35599                           ;i2c_drv.c: 438: TentativeCounter = 0;
 35600  00208A  0E00               	movlw	0
 35601  00208C  6E30               	movwf	I2c_ReadData@TentativeCounter,c
 35602  00208E                     
 35603                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 35604  00208E  0E04               	movlw	4
 35605  002090  D052               	goto	L92
 35606  002092                     l199:
 35607                           
 35608                           ;i2c_drv.c: 442: else
 35609                           ;i2c_drv.c: 443: {
 35610                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 35611  002092  0E02               	movlw	2
 35612  002094  6430               	cpfsgt	I2c_ReadData@TentativeCounter,c
 35613  002096  D072               	goto	l194
 35614                           
 35615                           ;i2c_drv.c: 446: {
 35616                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 35617  002098  0E08               	movlw	8
 35618  00209A  D04D               	goto	L92
 35619  00209C                     
 35620                           ;i2c_drv.c: 455: EnableReceiver();
 35621  00209C  EC50  F035         	call	_EnableReceiver	;wreg free
 35622                           
 35623                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 35624  0020A0  0E05               	movlw	5
 35625  0020A2  D049               	goto	L92
 35626  0020A4                     
 35627                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 35628  0020A4  EC36  F035         	call	_CheckTxStatus	;wreg free
 35629  0020A8  0900               	iorlw	0
 35630  0020AA  A4D8               	btfss	status,2,c
 35631  0020AC  D067               	goto	l194
 35632                           
 35633                           ;i2c_drv.c: 463: {
 35634                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 35635  0020AE  0100               	movlb	0	; () banked
 35636  0020B0  EE20 F002          	lfsr	2,2
 35637  0020B4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35638  0020B6  26D9               	addwf	fsr2l,f,c
 35639  0020B8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35640  0020BA  22DA               	addwfc	fsr2h,f,c
 35641  0020BC  CFDE F082          	movff	postinc2,??_I2c_ReadData
 35642  0020C0  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 35643  0020C4  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 35644  0020C8  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 35645  0020CC  EC31  F035         	call	_ReadByte	;wreg free
 35646  0020D0  6EDF               	movwf	indf2,c
 35647                           
 35648                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 35649  0020D2  0100               	movlb	0	; () banked
 35650  0020D4  EE20 F002          	lfsr	2,2
 35651  0020D8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35652  0020DA  26D9               	addwf	fsr2l,f,c
 35653  0020DC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35654  0020DE  22DA               	addwfc	fsr2h,f,c
 35655  0020E0  2ADE               	incf	postinc2,f,c
 35656  0020E2  0E00               	movlw	0
 35657  0020E4  22DD               	addwfc	postdec2,f,c
 35658                           
 35659                           ; BSR set to: 0
 35660                           ;i2c_drv.c: 469: DataCounter++;
 35661  0020E6  2A31               	incf	I2c_ReadData@DataCounter,f,c
 35662                           
 35663                           ; BSR set to: 0
 35664                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 35665  0020E8  0E06               	movlw	6
 35666  0020EA  D025               	goto	L92
 35667  0020EC                     
 35668                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 35669                           
 35670                           ; BSR set to: 0
 35671  0020EC  0100               	movlb	0	; () banked
 35672  0020EE  EE20 F004          	lfsr	2,4
 35673  0020F2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35674  0020F4  26D9               	addwf	fsr2l,f,c
 35675  0020F6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35676  0020F8  22DA               	addwfc	fsr2h,f,c
 35677  0020FA  50DE               	movf	postinc2,w,c
 35678  0020FC  5C31               	subwf	I2c_ReadData@DataCounter,w,c
 35679  0020FE  A0D8               	btfss	status,0,c
 35680  002100  D008               	goto	l206
 35681                           
 35682                           ; BSR set to: 0
 35683                           ;i2c_drv.c: 478: {
 35684                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 35685  002102  0E01               	movlw	1
 35686  002104  ECBB  F034         	call	_SetAckStatus
 35687                           
 35688                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 35689  002108  0E07               	movlw	7
 35690  00210A  6E32               	movwf	I2c_ReadData@I2cReadState,c
 35691                           
 35692                           ;i2c_drv.c: 484: DataCounter = 0;
 35693  00210C  0E00               	movlw	0
 35694  00210E  6E31               	movwf	I2c_ReadData@DataCounter,c
 35695                           
 35696                           ;i2c_drv.c: 485: }
 35697  002110  D035               	goto	l194
 35698  002112                     l206:
 35699                           
 35700                           ;i2c_drv.c: 486: else
 35701                           ;i2c_drv.c: 487: {
 35702                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 35703  002112  0E00               	movlw	0
 35704  002114  ECBB  F034         	call	_SetAckStatus
 35705  002118  D7BA               	goto	L93
 35706  00211A                     
 35707                           ;i2c_drv.c: 497: StopCondition();
 35708  00211A  EC4C  F035         	call	_StopCondition	;wreg free
 35709                           
 35710                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 35711  00211E  0E02               	movlw	2
 35712  002120  6E2F               	movwf	I2c_ReadData@ReadStatus,c
 35713                           
 35714                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 35715  002122  0E05               	movlw	5
 35716  002124  0100               	movlb	0	; () banked
 35717  002126  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 35718  002128  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 35719  00212A  0E00               	movlw	0
 35720  00212C  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35721  00212E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 35722  002130  EC83  F034         	call	_GenerateEvt	;wreg free
 35723                           
 35724                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 35725  002134  0E00               	movlw	0
 35726  002136                     L92:
 35727  002136  6E32               	movwf	I2c_ReadData@I2cReadState,c
 35728                           
 35729                           ;i2c_drv.c: 504: break;
 35730  002138  D021               	goto	l194
 35731  00213A                     
 35732                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 35733  00213A  0E00               	movlw	0
 35734  00213C  6E32               	movwf	I2c_ReadData@I2cReadState,c
 35735                           
 35736                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 35737  00213E  0E01               	movlw	1
 35738  002140  6E2F               	movwf	I2c_ReadData@ReadStatus,c
 35739                           
 35740                           ;i2c_drv.c: 515: }
 35741                           
 35742                           ;i2c_drv.c: 514: break;
 35743                           
 35744                           ;i2c_drv.c: 513: default:
 35745                           
 35746                           ;i2c_drv.c: 511: break;
 35747  002142  D01C               	goto	l194
 35748  002144                     l192:
 35749  002144  5032               	movf	I2c_ReadData@I2cReadState,w,c
 35750                           
 35751                           ; Switch size 1, requested type "space"
 35752                           ; Number of cases is 9, Range of values is 0 to 8
 35753                           ; switch strategies available:
 35754                           ; Name         Instructions Cycles
 35755                           ; simple_byte           28    15 (average)
 35756                           ;	Chosen strategy is simple_byte
 35757  002146  0A00               	xorlw	0	; case 0
 35758  002148  B4D8               	btfsc	status,2,c
 35759  00214A  D76C               	goto	l193
 35760  00214C  0A01               	xorlw	1	; case 1
 35761  00214E  B4D8               	btfsc	status,2,c
 35762  002150  D76F               	goto	l195
 35763  002152  0A03               	xorlw	3	; case 2
 35764  002154  B4D8               	btfsc	status,2,c
 35765  002156  D78C               	goto	l196
 35766  002158  0A01               	xorlw	1	; case 3
 35767  00215A  B4D8               	btfsc	status,2,c
 35768  00215C  D790               	goto	l198
 35769  00215E  0A07               	xorlw	7	; case 4
 35770  002160  B4D8               	btfsc	status,2,c
 35771  002162  D79C               	goto	l202
 35772  002164  0A01               	xorlw	1	; case 5
 35773  002166  B4D8               	btfsc	status,2,c
 35774  002168  D79D               	goto	l203
 35775  00216A  0A03               	xorlw	3	; case 6
 35776  00216C  B4D8               	btfsc	status,2,c
 35777  00216E  D7BE               	goto	l205
 35778  002170  0A01               	xorlw	1	; case 7
 35779  002172  B4D8               	btfsc	status,2,c
 35780  002174  D7D2               	goto	l208
 35781  002176  0A0F               	xorlw	15	; case 8
 35782  002178  B4D8               	btfsc	status,2,c
 35783  00217A  D7DF               	goto	l209
 35784  00217C                     l194:
 35785                           
 35786                           ;i2c_drv.c: 518: return ReadStatus;
 35787  00217C  502F               	movf	I2c_ReadData@ReadStatus,w,c
 35788  00217E  0012               	return	
 35789  002180                     __end_of_I2c_ReadData:
 35790                           	opt stack 0
 35791                           tosu	equ	0xFFF
 35792                           tosh	equ	0xFFE
 35793                           tosl	equ	0xFFD
 35794                           pclath	equ	0xFFA
 35795                           tblptru	equ	0xFF8
 35796                           tblptrh	equ	0xFF7
 35797                           tblptrl	equ	0xFF6
 35798                           tablat	equ	0xFF5
 35799                           prodh	equ	0xFF4
 35800                           prodl	equ	0xFF3
 35801                           intcon	equ	0xFF2
 35802                           intcon2	equ	0xFF1
 35803                           intcon3	equ	0xFF0
 35804                           indf0	equ	0xFEF
 35805                           postinc0	equ	0xFEE
 35806                           plusw0	equ	0xFEB
 35807                           fsr0h	equ	0xFEA
 35808                           fsr0l	equ	0xFE9
 35809                           wreg	equ	0xFE8
 35810                           indf1	equ	0xFE7
 35811                           postinc1	equ	0xFE6
 35812                           postdec1	equ	0xFE5
 35813                           plusw1	equ	0xFE3
 35814                           fsr1h	equ	0xFE2
 35815                           fsr1l	equ	0xFE1
 35816                           indf2	equ	0xFDF
 35817                           postinc2	equ	0xFDE
 35818                           postdec2	equ	0xFDD
 35819                           plusw2	equ	0xFDB
 35820                           fsr2h	equ	0xFDA
 35821                           fsr2l	equ	0xFD9
 35822                           status	equ	0xFD8
 35823                           
 35824 ;; *************** function _WriteByte *****************
 35825 ;; Defined at:
 35826 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35827 ;; Parameters:    Size  Location     Type
 35828 ;;  Byte            1    wreg     unsigned char 
 35829 ;; Auto vars:     Size  Location     Type
 35830 ;;  Byte            1   29[BANK0 ] unsigned char 
 35831 ;; Return value:  Size  Location     Type
 35832 ;;                  1    wreg      void 
 35833 ;; Registers used:
 35834 ;;		wreg
 35835 ;; Tracked objects:
 35836 ;;		On entry : 0/0
 35837 ;;		On exit  : 0/0
 35838 ;;		Unchanged: 0/0
 35839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35844 ;;Total ram usage:        1 bytes
 35845 ;; Hardware stack levels used:    1
 35846 ;; Hardware stack levels required when called:   11
 35847 ;; This function calls:
 35848 ;;		Nothing
 35849 ;; This function is called by:
 35850 ;;		_I2c_WriteData
 35851 ;;		_I2c_ReadData
 35852 ;; This function uses a non-reentrant model
 35853 ;;
 35854                           
 35855                           	psect	text169
 35856  006A58                     __ptext169:
 35857                           	opt stack 0
 35858  006A58                     _WriteByte:
 35859                           	opt stack 14
 35860                           
 35861                           ;incstack = 0
 35862                           ;WriteByte@Byte stored from wreg
 35863  006A58  0100               	movlb	0	; () banked
 35864  006A5A  6F7D               	movwf	WriteByte@Byte& (0+255),b
 35865                           
 35866                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 35867  006A5C  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 35868  006A60  0012               	return		;funcret
 35869  006A62                     __end_of_WriteByte:
 35870                           	opt stack 0
 35871                           tosu	equ	0xFFF
 35872                           tosh	equ	0xFFE
 35873                           tosl	equ	0xFFD
 35874                           pclath	equ	0xFFA
 35875                           tblptru	equ	0xFF8
 35876                           tblptrh	equ	0xFF7
 35877                           tblptrl	equ	0xFF6
 35878                           tablat	equ	0xFF5
 35879                           prodh	equ	0xFF4
 35880                           prodl	equ	0xFF3
 35881                           intcon	equ	0xFF2
 35882                           intcon2	equ	0xFF1
 35883                           intcon3	equ	0xFF0
 35884                           indf0	equ	0xFEF
 35885                           postinc0	equ	0xFEE
 35886                           plusw0	equ	0xFEB
 35887                           fsr0h	equ	0xFEA
 35888                           fsr0l	equ	0xFE9
 35889                           wreg	equ	0xFE8
 35890                           indf1	equ	0xFE7
 35891                           postinc1	equ	0xFE6
 35892                           postdec1	equ	0xFE5
 35893                           plusw1	equ	0xFE3
 35894                           fsr1h	equ	0xFE2
 35895                           fsr1l	equ	0xFE1
 35896                           indf2	equ	0xFDF
 35897                           postinc2	equ	0xFDE
 35898                           postdec2	equ	0xFDD
 35899                           plusw2	equ	0xFDB
 35900                           fsr2h	equ	0xFDA
 35901                           fsr2l	equ	0xFD9
 35902                           status	equ	0xFD8
 35903                           
 35904 ;; *************** function _StopCondition *****************
 35905 ;; Defined at:
 35906 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35907 ;; Parameters:    Size  Location     Type
 35908 ;;		None
 35909 ;; Auto vars:     Size  Location     Type
 35910 ;;		None
 35911 ;; Return value:  Size  Location     Type
 35912 ;;                  1    wreg      void 
 35913 ;; Registers used:
 35914 ;;		status,2, status,0
 35915 ;; Tracked objects:
 35916 ;;		On entry : 0/0
 35917 ;;		On exit  : 0/0
 35918 ;;		Unchanged: 0/0
 35919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35924 ;;Total ram usage:        0 bytes
 35925 ;; Hardware stack levels used:    1
 35926 ;; Hardware stack levels required when called:   11
 35927 ;; This function calls:
 35928 ;;		Nothing
 35929 ;; This function is called by:
 35930 ;;		_I2c_WriteData
 35931 ;;		_I2c_ReadData
 35932 ;; This function uses a non-reentrant model
 35933 ;;
 35934                           
 35935                           	psect	text170
 35936  006A98                     __ptext170:
 35937                           	opt stack 0
 35938  006A98                     _StopCondition:
 35939                           	opt stack 14
 35940                           
 35941                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 35942                           
 35943                           ;incstack = 0
 35944  006A98  8471               	bsf	3953,2,c	;volatile
 35945  006A9A  0012               	return		;funcret
 35946  006A9C                     __end_of_StopCondition:
 35947                           	opt stack 0
 35948                           tosu	equ	0xFFF
 35949                           tosh	equ	0xFFE
 35950                           tosl	equ	0xFFD
 35951                           pclath	equ	0xFFA
 35952                           tblptru	equ	0xFF8
 35953                           tblptrh	equ	0xFF7
 35954                           tblptrl	equ	0xFF6
 35955                           tablat	equ	0xFF5
 35956                           prodh	equ	0xFF4
 35957                           prodl	equ	0xFF3
 35958                           intcon	equ	0xFF2
 35959                           intcon2	equ	0xFF1
 35960                           intcon3	equ	0xFF0
 35961                           indf0	equ	0xFEF
 35962                           postinc0	equ	0xFEE
 35963                           plusw0	equ	0xFEB
 35964                           fsr0h	equ	0xFEA
 35965                           fsr0l	equ	0xFE9
 35966                           wreg	equ	0xFE8
 35967                           indf1	equ	0xFE7
 35968                           postinc1	equ	0xFE6
 35969                           postdec1	equ	0xFE5
 35970                           plusw1	equ	0xFE3
 35971                           fsr1h	equ	0xFE2
 35972                           fsr1l	equ	0xFE1
 35973                           indf2	equ	0xFDF
 35974                           postinc2	equ	0xFDE
 35975                           postdec2	equ	0xFDD
 35976                           plusw2	equ	0xFDB
 35977                           fsr2h	equ	0xFDA
 35978                           fsr2l	equ	0xFD9
 35979                           status	equ	0xFD8
 35980                           
 35981 ;; *************** function _StartCondition *****************
 35982 ;; Defined at:
 35983 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35984 ;; Parameters:    Size  Location     Type
 35985 ;;		None
 35986 ;; Auto vars:     Size  Location     Type
 35987 ;;		None
 35988 ;; Return value:  Size  Location     Type
 35989 ;;                  1    wreg      void 
 35990 ;; Registers used:
 35991 ;;		status,2, status,0
 35992 ;; Tracked objects:
 35993 ;;		On entry : 0/0
 35994 ;;		On exit  : 0/0
 35995 ;;		Unchanged: 0/0
 35996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36001 ;;Total ram usage:        0 bytes
 36002 ;; Hardware stack levels used:    1
 36003 ;; Hardware stack levels required when called:   11
 36004 ;; This function calls:
 36005 ;;		Nothing
 36006 ;; This function is called by:
 36007 ;;		_I2c_WriteData
 36008 ;;		_I2c_ReadData
 36009 ;; This function uses a non-reentrant model
 36010 ;;
 36011                           
 36012                           	psect	text171
 36013  006A9C                     __ptext171:
 36014                           	opt stack 0
 36015  006A9C                     _StartCondition:
 36016                           	opt stack 14
 36017                           
 36018                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36019                           
 36020                           ;incstack = 0
 36021  006A9C  8071               	bsf	3953,0,c	;volatile
 36022  006A9E  0012               	return		;funcret
 36023  006AA0                     __end_of_StartCondition:
 36024                           	opt stack 0
 36025                           tosu	equ	0xFFF
 36026                           tosh	equ	0xFFE
 36027                           tosl	equ	0xFFD
 36028                           pclath	equ	0xFFA
 36029                           tblptru	equ	0xFF8
 36030                           tblptrh	equ	0xFF7
 36031                           tblptrl	equ	0xFF6
 36032                           tablat	equ	0xFF5
 36033                           prodh	equ	0xFF4
 36034                           prodl	equ	0xFF3
 36035                           intcon	equ	0xFF2
 36036                           intcon2	equ	0xFF1
 36037                           intcon3	equ	0xFF0
 36038                           indf0	equ	0xFEF
 36039                           postinc0	equ	0xFEE
 36040                           plusw0	equ	0xFEB
 36041                           fsr0h	equ	0xFEA
 36042                           fsr0l	equ	0xFE9
 36043                           wreg	equ	0xFE8
 36044                           indf1	equ	0xFE7
 36045                           postinc1	equ	0xFE6
 36046                           postdec1	equ	0xFE5
 36047                           plusw1	equ	0xFE3
 36048                           fsr1h	equ	0xFE2
 36049                           fsr1l	equ	0xFE1
 36050                           indf2	equ	0xFDF
 36051                           postinc2	equ	0xFDE
 36052                           postdec2	equ	0xFDD
 36053                           plusw2	equ	0xFDB
 36054                           fsr2h	equ	0xFDA
 36055                           fsr2l	equ	0xFD9
 36056                           status	equ	0xFD8
 36057                           
 36058 ;; *************** function _SetAckStatus *****************
 36059 ;; Defined at:
 36060 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36061 ;; Parameters:    Size  Location     Type
 36062 ;;  AckSts          1    wreg     unsigned char 
 36063 ;; Auto vars:     Size  Location     Type
 36064 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36065 ;; Return value:  Size  Location     Type
 36066 ;;                  1    wreg      void 
 36067 ;; Registers used:
 36068 ;;		wreg
 36069 ;; Tracked objects:
 36070 ;;		On entry : 0/0
 36071 ;;		On exit  : 0/0
 36072 ;;		Unchanged: 0/0
 36073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36077 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36078 ;;Total ram usage:        1 bytes
 36079 ;; Hardware stack levels used:    1
 36080 ;; Hardware stack levels required when called:   11
 36081 ;; This function calls:
 36082 ;;		Nothing
 36083 ;; This function is called by:
 36084 ;;		_I2c_ReadData
 36085 ;; This function uses a non-reentrant model
 36086 ;;
 36087                           
 36088                           	psect	text172
 36089  006976                     __ptext172:
 36090                           	opt stack 0
 36091  006976                     _SetAckStatus:
 36092                           	opt stack 14
 36093                           
 36094                           ;incstack = 0
 36095                           ;SetAckStatus@AckSts stored from wreg
 36096  006976  0100               	movlb	0	; () banked
 36097  006978  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36098                           
 36099                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36100  00697A  0100               	movlb	0	; () banked
 36101  00697C  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36102  00697E  D002               	bra	u12495
 36103  006980  9A71               	bcf	3953,5,c	;volatile
 36104  006982  D001               	bra	u12496
 36105  006984                     u12495:
 36106  006984  8A71               	bsf	3953,5,c	;volatile
 36107  006986                     u12496:
 36108                           
 36109                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36110  006986  8871               	bsf	3953,4,c	;volatile
 36111  006988  0012               	return		;funcret
 36112  00698A                     __end_of_SetAckStatus:
 36113                           	opt stack 0
 36114                           tosu	equ	0xFFF
 36115                           tosh	equ	0xFFE
 36116                           tosl	equ	0xFFD
 36117                           pclath	equ	0xFFA
 36118                           tblptru	equ	0xFF8
 36119                           tblptrh	equ	0xFF7
 36120                           tblptrl	equ	0xFF6
 36121                           tablat	equ	0xFF5
 36122                           prodh	equ	0xFF4
 36123                           prodl	equ	0xFF3
 36124                           intcon	equ	0xFF2
 36125                           intcon2	equ	0xFF1
 36126                           intcon3	equ	0xFF0
 36127                           indf0	equ	0xFEF
 36128                           postinc0	equ	0xFEE
 36129                           plusw0	equ	0xFEB
 36130                           fsr0h	equ	0xFEA
 36131                           fsr0l	equ	0xFE9
 36132                           wreg	equ	0xFE8
 36133                           indf1	equ	0xFE7
 36134                           postinc1	equ	0xFE6
 36135                           postdec1	equ	0xFE5
 36136                           plusw1	equ	0xFE3
 36137                           fsr1h	equ	0xFE2
 36138                           fsr1l	equ	0xFE1
 36139                           indf2	equ	0xFDF
 36140                           postinc2	equ	0xFDE
 36141                           postdec2	equ	0xFDD
 36142                           plusw2	equ	0xFDB
 36143                           fsr2h	equ	0xFDA
 36144                           fsr2l	equ	0xFD9
 36145                           status	equ	0xFD8
 36146                           
 36147 ;; *************** function _ReadByte *****************
 36148 ;; Defined at:
 36149 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36150 ;; Parameters:    Size  Location     Type
 36151 ;;		None
 36152 ;; Auto vars:     Size  Location     Type
 36153 ;;  Byte            1   29[BANK0 ] unsigned char 
 36154 ;; Return value:  Size  Location     Type
 36155 ;;                  1    wreg      unsigned char 
 36156 ;; Registers used:
 36157 ;;		wreg, status,2
 36158 ;; Tracked objects:
 36159 ;;		On entry : 0/0
 36160 ;;		On exit  : 0/0
 36161 ;;		Unchanged: 0/0
 36162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36167 ;;Total ram usage:        1 bytes
 36168 ;; Hardware stack levels used:    1
 36169 ;; Hardware stack levels required when called:   11
 36170 ;; This function calls:
 36171 ;;		Nothing
 36172 ;; This function is called by:
 36173 ;;		_I2c_ReadData
 36174 ;; This function uses a non-reentrant model
 36175 ;;
 36176                           
 36177                           	psect	text173
 36178  006A62                     __ptext173:
 36179                           	opt stack 0
 36180  006A62                     _ReadByte:
 36181                           	opt stack 14
 36182                           
 36183                           ;i2c_drv.c: 207: UINT8 Byte;
 36184                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36185                           
 36186                           ;incstack = 0
 36187  006A62  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36188                           
 36189                           ;i2c_drv.c: 213: return Byte;
 36190  006A66  0100               	movlb	0	; () banked
 36191  006A68  517D               	movf	ReadByte@Byte& (0+255),w,b
 36192  006A6A  0012               	return	
 36193  006A6C                     __end_of_ReadByte:
 36194                           	opt stack 0
 36195                           tosu	equ	0xFFF
 36196                           tosh	equ	0xFFE
 36197                           tosl	equ	0xFFD
 36198                           pclath	equ	0xFFA
 36199                           tblptru	equ	0xFF8
 36200                           tblptrh	equ	0xFF7
 36201                           tblptrl	equ	0xFF6
 36202                           tablat	equ	0xFF5
 36203                           prodh	equ	0xFF4
 36204                           prodl	equ	0xFF3
 36205                           intcon	equ	0xFF2
 36206                           intcon2	equ	0xFF1
 36207                           intcon3	equ	0xFF0
 36208                           indf0	equ	0xFEF
 36209                           postinc0	equ	0xFEE
 36210                           plusw0	equ	0xFEB
 36211                           fsr0h	equ	0xFEA
 36212                           fsr0l	equ	0xFE9
 36213                           wreg	equ	0xFE8
 36214                           indf1	equ	0xFE7
 36215                           postinc1	equ	0xFE6
 36216                           postdec1	equ	0xFE5
 36217                           plusw1	equ	0xFE3
 36218                           fsr1h	equ	0xFE2
 36219                           fsr1l	equ	0xFE1
 36220                           indf2	equ	0xFDF
 36221                           postinc2	equ	0xFDE
 36222                           postdec2	equ	0xFDD
 36223                           plusw2	equ	0xFDB
 36224                           fsr2h	equ	0xFDA
 36225                           fsr2l	equ	0xFD9
 36226                           status	equ	0xFD8
 36227                           
 36228 ;; *************** function _GenerateEvt *****************
 36229 ;; Defined at:
 36230 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36231 ;; Parameters:    Size  Location     Type
 36232 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36233 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36234 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36235 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36236 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36237 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36238 ;; Auto vars:     Size  Location     Type
 36239 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36240 ;; Return value:  Size  Location     Type
 36241 ;;                  1    wreg      enum E7699
 36242 ;; Registers used:
 36243 ;;		wreg, fsr2l, fsr2h, status,2
 36244 ;; Tracked objects:
 36245 ;;		On entry : 0/0
 36246 ;;		On exit  : 0/0
 36247 ;;		Unchanged: 0/0
 36248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36252 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36253 ;;Total ram usage:        3 bytes
 36254 ;; Hardware stack levels used:    1
 36255 ;; Hardware stack levels required when called:   11
 36256 ;; This function calls:
 36257 ;;		Nothing
 36258 ;; This function is called by:
 36259 ;;		_I2c_ReadData
 36260 ;;		_CheckModem
 36261 ;;		_TurnOnModem
 36262 ;;		_ConfigureModem
 36263 ;;		_ModemEvtParser
 36264 ;;		_GetSmsSm
 36265 ;;		_Mdm_RequestSmsData
 36266 ;;		_I2cSlv_SendI2cMsg
 36267 ;;		_I2cSlv_ReceiveI2cMsg
 36268 ;;		_RiSm
 36269 ;;		_Mdm_SendSmsData
 36270 ;;		_MdmHttp_InitGprsNetwork
 36271 ;;		_MdmHttp_GetMethod
 36272 ;;		_Alarm
 36273 ;; This function uses a non-reentrant model
 36274 ;;
 36275                           
 36276                           	psect	text174
 36277  006906                     __ptext174:
 36278                           	opt stack 0
 36279  006906                     _GenerateEvt:
 36280                           	opt stack 13
 36281                           
 36282                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36283                           
 36284                           ; BSR set to: 0
 36285                           ;incstack = 0
 36286  006906  0E00               	movlw	0
 36287  006908  0100               	movlb	0	; () banked
 36288  00690A  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36289                           
 36290                           ; BSR set to: 0
 36291                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36292  00690C  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36293  006910  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36294  006914  0E02               	movlw	2
 36295  006916  6EDF               	movwf	indf2,c
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;os_ser.c: 83: EventStatus = EventSent;
 36299  006918  0E02               	movlw	2
 36300  00691A  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36301  00691C  0012               	return	
 36302  00691E                     __end_of_GenerateEvt:
 36303                           	opt stack 0
 36304                           tosu	equ	0xFFF
 36305                           tosh	equ	0xFFE
 36306                           tosl	equ	0xFFD
 36307                           pclath	equ	0xFFA
 36308                           tblptru	equ	0xFF8
 36309                           tblptrh	equ	0xFF7
 36310                           tblptrl	equ	0xFF6
 36311                           tablat	equ	0xFF5
 36312                           prodh	equ	0xFF4
 36313                           prodl	equ	0xFF3
 36314                           intcon	equ	0xFF2
 36315                           intcon2	equ	0xFF1
 36316                           intcon3	equ	0xFF0
 36317                           indf0	equ	0xFEF
 36318                           postinc0	equ	0xFEE
 36319                           plusw0	equ	0xFEB
 36320                           fsr0h	equ	0xFEA
 36321                           fsr0l	equ	0xFE9
 36322                           wreg	equ	0xFE8
 36323                           indf1	equ	0xFE7
 36324                           postinc1	equ	0xFE6
 36325                           postdec1	equ	0xFE5
 36326                           plusw1	equ	0xFE3
 36327                           fsr1h	equ	0xFE2
 36328                           fsr1l	equ	0xFE1
 36329                           indf2	equ	0xFDF
 36330                           postinc2	equ	0xFDE
 36331                           postdec2	equ	0xFDD
 36332                           plusw2	equ	0xFDB
 36333                           fsr2h	equ	0xFDA
 36334                           fsr2l	equ	0xFD9
 36335                           status	equ	0xFD8
 36336                           
 36337 ;; *************** function _EnableReceiver *****************
 36338 ;; Defined at:
 36339 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36340 ;; Parameters:    Size  Location     Type
 36341 ;;		None
 36342 ;; Auto vars:     Size  Location     Type
 36343 ;;		None
 36344 ;; Return value:  Size  Location     Type
 36345 ;;                  1    wreg      void 
 36346 ;; Registers used:
 36347 ;;		status,2, status,0
 36348 ;; Tracked objects:
 36349 ;;		On entry : 0/0
 36350 ;;		On exit  : 0/0
 36351 ;;		Unchanged: 0/0
 36352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36357 ;;Total ram usage:        0 bytes
 36358 ;; Hardware stack levels used:    1
 36359 ;; Hardware stack levels required when called:   11
 36360 ;; This function calls:
 36361 ;;		Nothing
 36362 ;; This function is called by:
 36363 ;;		_I2c_ReadData
 36364 ;; This function uses a non-reentrant model
 36365 ;;
 36366                           
 36367                           	psect	text175
 36368  006AA0                     __ptext175:
 36369                           	opt stack 0
 36370  006AA0                     _EnableReceiver:
 36371                           	opt stack 14
 36372                           
 36373                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 36374                           
 36375                           ; BSR set to: 0
 36376                           ;incstack = 0
 36377  006AA0  8671               	bsf	3953,3,c	;volatile
 36378  006AA2  0012               	return		;funcret
 36379  006AA4                     __end_of_EnableReceiver:
 36380                           	opt stack 0
 36381                           tosu	equ	0xFFF
 36382                           tosh	equ	0xFFE
 36383                           tosl	equ	0xFFD
 36384                           pclath	equ	0xFFA
 36385                           tblptru	equ	0xFF8
 36386                           tblptrh	equ	0xFF7
 36387                           tblptrl	equ	0xFF6
 36388                           tablat	equ	0xFF5
 36389                           prodh	equ	0xFF4
 36390                           prodl	equ	0xFF3
 36391                           intcon	equ	0xFF2
 36392                           intcon2	equ	0xFF1
 36393                           intcon3	equ	0xFF0
 36394                           indf0	equ	0xFEF
 36395                           postinc0	equ	0xFEE
 36396                           plusw0	equ	0xFEB
 36397                           fsr0h	equ	0xFEA
 36398                           fsr0l	equ	0xFE9
 36399                           wreg	equ	0xFE8
 36400                           indf1	equ	0xFE7
 36401                           postinc1	equ	0xFE6
 36402                           postdec1	equ	0xFE5
 36403                           plusw1	equ	0xFE3
 36404                           fsr1h	equ	0xFE2
 36405                           fsr1l	equ	0xFE1
 36406                           indf2	equ	0xFDF
 36407                           postinc2	equ	0xFDE
 36408                           postdec2	equ	0xFDD
 36409                           plusw2	equ	0xFDB
 36410                           fsr2h	equ	0xFDA
 36411                           fsr2l	equ	0xFD9
 36412                           status	equ	0xFD8
 36413                           
 36414 ;; *************** function _CheckTxStatus *****************
 36415 ;; Defined at:
 36416 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36417 ;; Parameters:    Size  Location     Type
 36418 ;;		None
 36419 ;; Auto vars:     Size  Location     Type
 36420 ;;		None
 36421 ;; Return value:  Size  Location     Type
 36422 ;;                  1    wreg      unsigned char 
 36423 ;; Registers used:
 36424 ;;		wreg, status,2, status,0
 36425 ;; Tracked objects:
 36426 ;;		On entry : 0/0
 36427 ;;		On exit  : 0/0
 36428 ;;		Unchanged: 0/0
 36429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36434 ;;Total ram usage:        0 bytes
 36435 ;; Hardware stack levels used:    1
 36436 ;; Hardware stack levels required when called:   11
 36437 ;; This function calls:
 36438 ;;		Nothing
 36439 ;; This function is called by:
 36440 ;;		_I2c_WriteData
 36441 ;;		_I2c_ReadData
 36442 ;; This function uses a non-reentrant model
 36443 ;;
 36444                           
 36445                           	psect	text176
 36446  006A6C                     __ptext176:
 36447                           	opt stack 0
 36448  006A6C                     _CheckTxStatus:
 36449                           	opt stack 14
 36450                           
 36451                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 36452                           
 36453                           ;incstack = 0
 36454  006A6C  4073               	rrncf	3955,w,c	;volatile
 36455  006A6E  42E8               	rrncf	wreg,f,c
 36456  006A70  0B3F               	andlw	63
 36457  006A72  0B01               	andlw	1
 36458  006A74  0012               	return	
 36459  006A76                     __end_of_CheckTxStatus:
 36460                           	opt stack 0
 36461                           tosu	equ	0xFFF
 36462                           tosh	equ	0xFFE
 36463                           tosl	equ	0xFFD
 36464                           pclath	equ	0xFFA
 36465                           tblptru	equ	0xFF8
 36466                           tblptrh	equ	0xFF7
 36467                           tblptrl	equ	0xFF6
 36468                           tablat	equ	0xFF5
 36469                           prodh	equ	0xFF4
 36470                           prodl	equ	0xFF3
 36471                           intcon	equ	0xFF2
 36472                           intcon2	equ	0xFF1
 36473                           intcon3	equ	0xFF0
 36474                           indf0	equ	0xFEF
 36475                           postinc0	equ	0xFEE
 36476                           plusw0	equ	0xFEB
 36477                           fsr0h	equ	0xFEA
 36478                           fsr0l	equ	0xFE9
 36479                           wreg	equ	0xFE8
 36480                           indf1	equ	0xFE7
 36481                           postinc1	equ	0xFE6
 36482                           postdec1	equ	0xFE5
 36483                           plusw1	equ	0xFE3
 36484                           fsr1h	equ	0xFE2
 36485                           fsr1l	equ	0xFE1
 36486                           indf2	equ	0xFDF
 36487                           postinc2	equ	0xFDE
 36488                           postdec2	equ	0xFDD
 36489                           plusw2	equ	0xFDB
 36490                           fsr2h	equ	0xFDA
 36491                           fsr2l	equ	0xFD9
 36492                           status	equ	0xFD8
 36493                           
 36494 ;; *************** function _CheckAckStatus *****************
 36495 ;; Defined at:
 36496 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36497 ;; Parameters:    Size  Location     Type
 36498 ;;		None
 36499 ;; Auto vars:     Size  Location     Type
 36500 ;;		None
 36501 ;; Return value:  Size  Location     Type
 36502 ;;                  1    wreg      unsigned char 
 36503 ;; Registers used:
 36504 ;;		wreg, status,2, status,0
 36505 ;; Tracked objects:
 36506 ;;		On entry : 0/0
 36507 ;;		On exit  : 0/0
 36508 ;;		Unchanged: 0/0
 36509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36514 ;;Total ram usage:        0 bytes
 36515 ;; Hardware stack levels used:    1
 36516 ;; Hardware stack levels required when called:   11
 36517 ;; This function calls:
 36518 ;;		Nothing
 36519 ;; This function is called by:
 36520 ;;		_I2c_WriteData
 36521 ;;		_I2c_ReadData
 36522 ;; This function uses a non-reentrant model
 36523 ;;
 36524                           
 36525                           	psect	text177
 36526  006A76                     __ptext177:
 36527                           	opt stack 0
 36528  006A76                     _CheckAckStatus:
 36529                           	opt stack 14
 36530                           
 36531                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 36532                           
 36533                           ;incstack = 0
 36534  006A76  4471               	rlncf	3953,w,c	;volatile
 36535  006A78  46E8               	rlncf	wreg,f,c
 36536  006A7A  0B03               	andlw	3
 36537  006A7C  0B01               	andlw	1
 36538  006A7E  0012               	return	
 36539  006A80                     __end_of_CheckAckStatus:
 36540                           	opt stack 0
 36541                           tosu	equ	0xFFF
 36542                           tosh	equ	0xFFE
 36543                           tosl	equ	0xFFD
 36544                           pclath	equ	0xFFA
 36545                           tblptru	equ	0xFF8
 36546                           tblptrh	equ	0xFF7
 36547                           tblptrl	equ	0xFF6
 36548                           tablat	equ	0xFF5
 36549                           prodh	equ	0xFF4
 36550                           prodl	equ	0xFF3
 36551                           intcon	equ	0xFF2
 36552                           intcon2	equ	0xFF1
 36553                           intcon3	equ	0xFF0
 36554                           indf0	equ	0xFEF
 36555                           postinc0	equ	0xFEE
 36556                           plusw0	equ	0xFEB
 36557                           fsr0h	equ	0xFEA
 36558                           fsr0l	equ	0xFE9
 36559                           wreg	equ	0xFE8
 36560                           indf1	equ	0xFE7
 36561                           postinc1	equ	0xFE6
 36562                           postdec1	equ	0xFE5
 36563                           plusw1	equ	0xFE3
 36564                           fsr1h	equ	0xFE2
 36565                           fsr1l	equ	0xFE1
 36566                           indf2	equ	0xFDF
 36567                           postinc2	equ	0xFDE
 36568                           postdec2	equ	0xFDD
 36569                           plusw2	equ	0xFDB
 36570                           fsr2h	equ	0xFDA
 36571                           fsr2l	equ	0xFD9
 36572                           status	equ	0xFD8
 36573                           
 36574 ;; *************** function _LowPriorityIsr *****************
 36575 ;; Defined at:
 36576 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36577 ;; Parameters:    Size  Location     Type
 36578 ;;		None
 36579 ;; Auto vars:     Size  Location     Type
 36580 ;;		None
 36581 ;; Return value:  Size  Location     Type
 36582 ;;                  1    wreg      void 
 36583 ;; Registers used:
 36584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36585 ;; Tracked objects:
 36586 ;;		On entry : 0/0
 36587 ;;		On exit  : 0/0
 36588 ;;		Unchanged: 0/0
 36589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36592 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36593 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36594 ;;Total ram usage:       21 bytes
 36595 ;; Hardware stack levels used:    1
 36596 ;; Hardware stack levels required when called:   10
 36597 ;; This function calls:
 36598 ;;		_Tmr_Tmr2Isr
 36599 ;; This function is called by:
 36600 ;;		Interrupt level 1
 36601 ;; This function uses a non-reentrant model
 36602 ;;
 36603                           
 36604                           	psect	intcodelo
 36605  000018                     __pintcodelo:
 36606                           	opt stack 0
 36607  000018                     _LowPriorityIsr:
 36608                           	opt stack 8
 36609                           
 36610                           ;incstack = 0
 36611  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 36612  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 36613  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 36614  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 36615  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 36616  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 36617  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 36618  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 36619  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 36620  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 36621  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 36622  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 36623  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 36624  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 36625  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 36626  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 36627  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 36628  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 36629  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 36630  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 36631  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 36632  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 36633                           
 36634                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 36635  00006E  B29E               	btfsc	3998,1,c	;volatile
 36636                           
 36637                           ;irq.c: 259: {
 36638                           ;irq.c: 261: Tmr_Tmr2Isr();
 36639  000070  EC46  F033         	call	_Tmr_Tmr2Isr	;wreg free
 36640  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 36641  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 36642  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 36643  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 36644  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 36645  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 36646  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 36647  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 36648  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 36649  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 36650  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 36651  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 36652  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 36653  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 36654  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 36655  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 36656  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 36657  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 36658  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 36659  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 36660  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 36661  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 36662  0000CA  0010               	retfie	
 36663  0000CC                     __end_of_LowPriorityIsr:
 36664                           	opt stack 0
 36665                           tosu	equ	0xFFF
 36666                           tosh	equ	0xFFE
 36667                           tosl	equ	0xFFD
 36668                           pclatu	equ	0xFFB
 36669                           pclath	equ	0xFFA
 36670                           tblptru	equ	0xFF8
 36671                           tblptrh	equ	0xFF7
 36672                           tblptrl	equ	0xFF6
 36673                           tablat	equ	0xFF5
 36674                           prodh	equ	0xFF4
 36675                           prodl	equ	0xFF3
 36676                           intcon	equ	0xFF2
 36677                           intcon2	equ	0xFF1
 36678                           intcon3	equ	0xFF0
 36679                           indf0	equ	0xFEF
 36680                           postinc0	equ	0xFEE
 36681                           plusw0	equ	0xFEB
 36682                           fsr0h	equ	0xFEA
 36683                           fsr0l	equ	0xFE9
 36684                           wreg	equ	0xFE8
 36685                           indf1	equ	0xFE7
 36686                           postinc1	equ	0xFE6
 36687                           postdec1	equ	0xFE5
 36688                           plusw1	equ	0xFE3
 36689                           fsr1h	equ	0xFE2
 36690                           fsr1l	equ	0xFE1
 36691                           bsr	equ	0xFE0
 36692                           indf2	equ	0xFDF
 36693                           postinc2	equ	0xFDE
 36694                           postdec2	equ	0xFDD
 36695                           plusw2	equ	0xFDB
 36696                           fsr2h	equ	0xFDA
 36697                           fsr2l	equ	0xFD9
 36698                           status	equ	0xFD8
 36699                           
 36700 ;; *************** function _Tmr_Tmr2Isr *****************
 36701 ;; Defined at:
 36702 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 36703 ;; Parameters:    Size  Location     Type
 36704 ;;		None
 36705 ;; Auto vars:     Size  Location     Type
 36706 ;;		None
 36707 ;; Return value:  Size  Location     Type
 36708 ;;                  1    wreg      void 
 36709 ;; Registers used:
 36710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36711 ;; Tracked objects:
 36712 ;;		On entry : 0/0
 36713 ;;		On exit  : 0/0
 36714 ;;		Unchanged: 0/0
 36715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36720 ;;Total ram usage:        0 bytes
 36721 ;; Hardware stack levels used:    1
 36722 ;; Hardware stack levels required when called:    9
 36723 ;; This function calls:
 36724 ;;		Absolute function
 36725 ;;		_Sch_SchmIntService
 36726 ;; This function is called by:
 36727 ;;		_LowPriorityIsr
 36728 ;; This function uses a non-reentrant model
 36729 ;;
 36730                           
 36731                           	psect	text179
 36732  00668C                     __ptext179:
 36733                           	opt stack 0
 36734  00668C                     _Tmr_Tmr2Isr:
 36735                           	opt stack 8
 36736                           
 36737                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 36738                           
 36739                           ;incstack = 0
 36740  00668C  929E               	bcf	3998,1,c	;volatile
 36741                           
 36742                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 36743  00668E  0101               	movlb	1	; () banked
 36744  006690  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 36745  006692  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36746  006694  B4D8               	btfsc	status,2,c
 36747  006696  0012               	return	
 36748                           
 36749                           ; BSR set to: 1
 36750                           ;tmr_drv.c: 315: {
 36751                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 36752  006698  D801               	call	i1u1623_28
 36753  00669A  0012               	return	
 36754  00669C                     i1u1623_28:
 36755  00669C  0005               	push	
 36756  00669E  6EFA               	movwf	pclath,c
 36757  0066A0  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 36758  0066A2  6EFD               	movwf	tosl,c
 36759  0066A4  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36760  0066A6  6EFE               	movwf	tosh,c
 36761  0066A8  50F8               	movf	tblptru,w,c
 36762  0066AA  6EFF               	movwf	tosu,c
 36763  0066AC  50FA               	movf	pclath,w,c
 36764  0066AE  0012               	return		;indir
 36765  0066B0                     __end_of_Tmr_Tmr2Isr:
 36766                           	opt stack 0
 36767                           tosu	equ	0xFFF
 36768                           tosh	equ	0xFFE
 36769                           tosl	equ	0xFFD
 36770                           pclatu	equ	0xFFB
 36771                           pclath	equ	0xFFA
 36772                           tblptru	equ	0xFF8
 36773                           tblptrh	equ	0xFF7
 36774                           tblptrl	equ	0xFF6
 36775                           tablat	equ	0xFF5
 36776                           prodh	equ	0xFF4
 36777                           prodl	equ	0xFF3
 36778                           intcon	equ	0xFF2
 36779                           intcon2	equ	0xFF1
 36780                           intcon3	equ	0xFF0
 36781                           indf0	equ	0xFEF
 36782                           postinc0	equ	0xFEE
 36783                           plusw0	equ	0xFEB
 36784                           fsr0h	equ	0xFEA
 36785                           fsr0l	equ	0xFE9
 36786                           wreg	equ	0xFE8
 36787                           indf1	equ	0xFE7
 36788                           postinc1	equ	0xFE6
 36789                           postdec1	equ	0xFE5
 36790                           plusw1	equ	0xFE3
 36791                           fsr1h	equ	0xFE2
 36792                           fsr1l	equ	0xFE1
 36793                           bsr	equ	0xFE0
 36794                           indf2	equ	0xFDF
 36795                           postinc2	equ	0xFDE
 36796                           postdec2	equ	0xFDD
 36797                           plusw2	equ	0xFDB
 36798                           fsr2h	equ	0xFDA
 36799                           fsr2l	equ	0xFD9
 36800                           status	equ	0xFD8
 36801                           
 36802 ;; *************** function _Sch_SchmIntService *****************
 36803 ;; Defined at:
 36804 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36805 ;; Parameters:    Size  Location     Type
 36806 ;;		None
 36807 ;; Auto vars:     Size  Location     Type
 36808 ;;		None
 36809 ;; Return value:  Size  Location     Type
 36810 ;;                  1    wreg      void 
 36811 ;; Registers used:
 36812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36813 ;; Tracked objects:
 36814 ;;		On entry : 0/0
 36815 ;;		On exit  : 0/0
 36816 ;;		Unchanged: 0/0
 36817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36822 ;;Total ram usage:        0 bytes
 36823 ;; Hardware stack levels used:    1
 36824 ;; Hardware stack levels required when called:    8
 36825 ;; This function calls:
 36826 ;;		_OsAlrm_ProcessOsAlarms
 36827 ;;		_UpdateOsCounters
 36828 ;;		_UpdateSchFlag
 36829 ;; This function is called by:
 36830 ;;		_SystemInit
 36831 ;;		_Tmr_Tmr2Isr
 36832 ;; This function uses a non-reentrant model
 36833 ;;
 36834                           
 36835                           	psect	text180
 36836  006A10                     __ptext180:
 36837                           	opt stack 0
 36838  006A10                     _Sch_SchmIntService:
 36839                           	opt stack 8
 36840                           
 36841                           ;os_sched.c: 217: UpdateSchFlag();
 36842                           
 36843                           ;incstack = 0
 36844  006A10  EC1B  F034         	call	_UpdateSchFlag	;wreg free
 36845                           
 36846                           ;os_sched.c: 219: UpdateOsCounters();
 36847  006A14  ECF8  F034         	call	_UpdateOsCounters	;wreg free
 36848                           
 36849                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 36850  006A18  EC16  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 36851  006A1C  0012               	return		;funcret
 36852  006A1E                     __end_of_Sch_SchmIntService:
 36853                           	opt stack 0
 36854                           tosu	equ	0xFFF
 36855                           tosh	equ	0xFFE
 36856                           tosl	equ	0xFFD
 36857                           pclatu	equ	0xFFB
 36858                           pclath	equ	0xFFA
 36859                           tblptru	equ	0xFF8
 36860                           tblptrh	equ	0xFF7
 36861                           tblptrl	equ	0xFF6
 36862                           tablat	equ	0xFF5
 36863                           prodh	equ	0xFF4
 36864                           prodl	equ	0xFF3
 36865                           intcon	equ	0xFF2
 36866                           intcon2	equ	0xFF1
 36867                           intcon3	equ	0xFF0
 36868                           indf0	equ	0xFEF
 36869                           postinc0	equ	0xFEE
 36870                           plusw0	equ	0xFEB
 36871                           fsr0h	equ	0xFEA
 36872                           fsr0l	equ	0xFE9
 36873                           wreg	equ	0xFE8
 36874                           indf1	equ	0xFE7
 36875                           postinc1	equ	0xFE6
 36876                           postdec1	equ	0xFE5
 36877                           plusw1	equ	0xFE3
 36878                           fsr1h	equ	0xFE2
 36879                           fsr1l	equ	0xFE1
 36880                           bsr	equ	0xFE0
 36881                           indf2	equ	0xFDF
 36882                           postinc2	equ	0xFDE
 36883                           postdec2	equ	0xFDD
 36884                           plusw2	equ	0xFDB
 36885                           fsr2h	equ	0xFDA
 36886                           fsr2l	equ	0xFD9
 36887                           status	equ	0xFD8
 36888                           
 36889 ;; *************** function _UpdateSchFlag *****************
 36890 ;; Defined at:
 36891 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36892 ;; Parameters:    Size  Location     Type
 36893 ;;		None
 36894 ;; Auto vars:     Size  Location     Type
 36895 ;;		None
 36896 ;; Return value:  Size  Location     Type
 36897 ;;                  1    wreg      void 
 36898 ;; Registers used:
 36899 ;;		wreg, status,2, status,0
 36900 ;; Tracked objects:
 36901 ;;		On entry : 0/0
 36902 ;;		On exit  : 0/0
 36903 ;;		Unchanged: 0/0
 36904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36909 ;;Total ram usage:        0 bytes
 36910 ;; Hardware stack levels used:    1
 36911 ;; Hardware stack levels required when called:    4
 36912 ;; This function calls:
 36913 ;;		Nothing
 36914 ;; This function is called by:
 36915 ;;		_Sch_SchmIntService
 36916 ;; This function uses a non-reentrant model
 36917 ;;
 36918                           
 36919                           	psect	text181
 36920  006836                     __ptext181:
 36921                           	opt stack 0
 36922  006836                     _UpdateSchFlag:
 36923                           	opt stack 11
 36924                           
 36925                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 36926                           ;os_sched.c: 138: InterruptCounter++;
 36927                           
 36928                           ;incstack = 0
 36929  006836  0102               	movlb	2	; () banked
 36930  006838  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 36931  00683A  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 36932                           
 36933                           ; BSR set to: 2
 36934                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 36935  00683C  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 36936  00683E  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 36937  006840  B4D8               	btfsc	status,2,c
 36938  006842  0012               	return	
 36939                           
 36940                           ; BSR set to: 2
 36941                           ;os_sched.c: 141: {
 36942                           ;os_sched.c: 143: InterruptCounter = 0;
 36943  006844  0E00               	movlw	0
 36944  006846  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 36945  006848  0E00               	movlw	0
 36946  00684A  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 36947                           
 36948                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 36949  00684C  0E00               	movlw	0
 36950  00684E  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 36951  006850  0012               	return	
 36952  006852                     __end_of_UpdateSchFlag:
 36953                           	opt stack 0
 36954                           tosu	equ	0xFFF
 36955                           tosh	equ	0xFFE
 36956                           tosl	equ	0xFFD
 36957                           pclatu	equ	0xFFB
 36958                           pclath	equ	0xFFA
 36959                           tblptru	equ	0xFF8
 36960                           tblptrh	equ	0xFF7
 36961                           tblptrl	equ	0xFF6
 36962                           tablat	equ	0xFF5
 36963                           prodh	equ	0xFF4
 36964                           prodl	equ	0xFF3
 36965                           intcon	equ	0xFF2
 36966                           intcon2	equ	0xFF1
 36967                           intcon3	equ	0xFF0
 36968                           indf0	equ	0xFEF
 36969                           postinc0	equ	0xFEE
 36970                           plusw0	equ	0xFEB
 36971                           fsr0h	equ	0xFEA
 36972                           fsr0l	equ	0xFE9
 36973                           wreg	equ	0xFE8
 36974                           indf1	equ	0xFE7
 36975                           postinc1	equ	0xFE6
 36976                           postdec1	equ	0xFE5
 36977                           plusw1	equ	0xFE3
 36978                           fsr1h	equ	0xFE2
 36979                           fsr1l	equ	0xFE1
 36980                           bsr	equ	0xFE0
 36981                           indf2	equ	0xFDF
 36982                           postinc2	equ	0xFDE
 36983                           postdec2	equ	0xFDD
 36984                           plusw2	equ	0xFDB
 36985                           fsr2h	equ	0xFDA
 36986                           fsr2l	equ	0xFD9
 36987                           status	equ	0xFD8
 36988                           
 36989 ;; *************** function _UpdateOsCounters *****************
 36990 ;; Defined at:
 36991 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 36992 ;; Parameters:    Size  Location     Type
 36993 ;;		None
 36994 ;; Auto vars:     Size  Location     Type
 36995 ;;		None
 36996 ;; Return value:  Size  Location     Type
 36997 ;;                  1    wreg      void 
 36998 ;; Registers used:
 36999 ;;		wreg, status,2, status,0
 37000 ;; Tracked objects:
 37001 ;;		On entry : 0/0
 37002 ;;		On exit  : 0/0
 37003 ;;		Unchanged: 0/0
 37004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37009 ;;Total ram usage:        0 bytes
 37010 ;; Hardware stack levels used:    1
 37011 ;; Hardware stack levels required when called:    4
 37012 ;; This function calls:
 37013 ;;		Nothing
 37014 ;; This function is called by:
 37015 ;;		_Sch_SchmIntService
 37016 ;; This function uses a non-reentrant model
 37017 ;;
 37018                           
 37019                           	psect	text182
 37020  0069F0                     __ptext182:
 37021                           	opt stack 0
 37022  0069F0                     _UpdateOsCounters:
 37023                           	opt stack 11
 37024                           
 37025                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37026                           
 37027                           ; BSR set to: 2
 37028                           ;incstack = 0
 37029  0069F0  0E01               	movlw	1
 37030  0069F2  0103               	movlb	3	; () banked
 37031  0069F4  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37032  0069F6  0E00               	movlw	0
 37033  0069F8  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37034  0069FA  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37035  0069FC  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37036                           
 37037                           ; BSR set to: 3
 37038  0069FE  0012               	return		;funcret
 37039  006A00                     __end_of_UpdateOsCounters:
 37040                           	opt stack 0
 37041                           tosu	equ	0xFFF
 37042                           tosh	equ	0xFFE
 37043                           tosl	equ	0xFFD
 37044                           pclatu	equ	0xFFB
 37045                           pclath	equ	0xFFA
 37046                           tblptru	equ	0xFF8
 37047                           tblptrh	equ	0xFF7
 37048                           tblptrl	equ	0xFF6
 37049                           tablat	equ	0xFF5
 37050                           prodh	equ	0xFF4
 37051                           prodl	equ	0xFF3
 37052                           intcon	equ	0xFF2
 37053                           intcon2	equ	0xFF1
 37054                           intcon3	equ	0xFF0
 37055                           indf0	equ	0xFEF
 37056                           postinc0	equ	0xFEE
 37057                           plusw0	equ	0xFEB
 37058                           fsr0h	equ	0xFEA
 37059                           fsr0l	equ	0xFE9
 37060                           wreg	equ	0xFE8
 37061                           indf1	equ	0xFE7
 37062                           postinc1	equ	0xFE6
 37063                           postdec1	equ	0xFE5
 37064                           plusw1	equ	0xFE3
 37065                           fsr1h	equ	0xFE2
 37066                           fsr1l	equ	0xFE1
 37067                           bsr	equ	0xFE0
 37068                           indf2	equ	0xFDF
 37069                           postinc2	equ	0xFDE
 37070                           postdec2	equ	0xFDD
 37071                           plusw2	equ	0xFDB
 37072                           fsr2h	equ	0xFDA
 37073                           fsr2l	equ	0xFD9
 37074                           status	equ	0xFD8
 37075                           
 37076 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37077 ;; Defined at:
 37078 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37079 ;; Parameters:    Size  Location     Type
 37080 ;;		None
 37081 ;; Auto vars:     Size  Location     Type
 37082 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37083 ;; Return value:  Size  Location     Type
 37084 ;;                  1    wreg      void 
 37085 ;; Registers used:
 37086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37087 ;; Tracked objects:
 37088 ;;		On entry : 0/0
 37089 ;;		On exit  : 0/0
 37090 ;;		Unchanged: 0/0
 37091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37094 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37095 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37096 ;;Total ram usage:       10 bytes
 37097 ;; Hardware stack levels used:    1
 37098 ;; Hardware stack levels required when called:    7
 37099 ;; This function calls:
 37100 ;;		_I2cDummyTx
 37101 ;;		_OsAlrm_ClearOsAlarm
 37102 ;;		i1___wmul
 37103 ;; This function is called by:
 37104 ;;		_Sch_SchmIntService
 37105 ;; This function uses a non-reentrant model
 37106 ;;
 37107                           
 37108                           	psect	text183
 37109  00242C                     __ptext183:
 37110                           	opt stack 0
 37111  00242C                     _OsAlrm_ProcessOsAlarms:
 37112                           	opt stack 8
 37113                           
 37114                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37115                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37116                           
 37117                           ; BSR set to: 3
 37118                           ;incstack = 0
 37119  00242C  0E00               	movlw	0
 37120  00242E  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37121  002430  0E00               	movlw	0
 37122  002432  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37123  002434  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37124  002436  E105               	bnz	i1u1598_20
 37125  002438  0E14               	movlw	20
 37126  00243A  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37127  00243C  B0D8               	btfsc	status,0,c
 37128  00243E  0012               	return	
 37129  002440  D001               	goto	i1l742
 37130  002442                     i1u1598_20:
 37131  002442  0012               	return	
 37132  002444                     i1l742:
 37133                           
 37134                           ;os_alarms.c: 121: {
 37135                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37136  002444  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37137  002448  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37138  00244C  0E00               	movlw	0
 37139  00244E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37140  002450  0E0B               	movlw	11
 37141  002452  6E1B               	movwf	i1___wmul@multiplicand,c
 37142  002454  ECFD  F032         	call	i1___wmul	;wreg free
 37143  002458  0E00               	movlw	low _OsAlarms
 37144  00245A  2419               	addwf	?i1___wmul,w,c
 37145  00245C  6ED9               	movwf	fsr2l,c
 37146  00245E  0E06               	movlw	high _OsAlarms
 37147  002460  201A               	addwfc	?i1___wmul+1,w,c
 37148  002462  6EDA               	movwf	fsr2h,c
 37149  002464  04DE               	decf	postinc2,w,c
 37150  002466  A4D8               	btfss	status,2,c
 37151  002468  D086               	goto	i1u1602_29
 37152                           
 37153                           ;os_alarms.c: 124: {
 37154                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37155  00246A  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37156  00246E  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37157  002472  0E00               	movlw	0
 37158  002474  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37159  002476  0E0B               	movlw	11
 37160  002478  6E1B               	movwf	i1___wmul@multiplicand,c
 37161  00247A  ECFD  F032         	call	i1___wmul	;wreg free
 37162  00247E  0E01               	movlw	1
 37163  002480  2619               	addwf	?i1___wmul,f,c
 37164  002482  0E00               	movlw	0
 37165  002484  221A               	addwfc	?i1___wmul+1,f,c
 37166  002486  0E00               	movlw	low _OsAlarms
 37167  002488  2419               	addwf	?i1___wmul,w,c
 37168  00248A  6ED9               	movwf	fsr2l,c
 37169  00248C  0E06               	movlw	high _OsAlarms
 37170  00248E  201A               	addwfc	?i1___wmul+1,w,c
 37171  002490  6EDA               	movwf	fsr2h,c
 37172  002492  2ADE               	incf	postinc2,f,c
 37173  002494  0E00               	movlw	0
 37174  002496  22DE               	addwfc	postinc2,f,c
 37175  002498  22DE               	addwfc	postinc2,f,c
 37176  00249A  22DE               	addwfc	postinc2,f,c
 37177                           
 37178                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37179  00249C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37180  0024A0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37181  0024A4  0E00               	movlw	0
 37182  0024A6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37183  0024A8  0E0B               	movlw	11
 37184  0024AA  6E1B               	movwf	i1___wmul@multiplicand,c
 37185  0024AC  ECFD  F032         	call	i1___wmul	;wreg free
 37186  0024B0  0E05               	movlw	5
 37187  0024B2  2619               	addwf	?i1___wmul,f,c
 37188  0024B4  0E00               	movlw	0
 37189  0024B6  221A               	addwfc	?i1___wmul+1,f,c
 37190  0024B8  0E00               	movlw	low _OsAlarms
 37191  0024BA  2419               	addwf	?i1___wmul,w,c
 37192  0024BC  6ED9               	movwf	fsr2l,c
 37193  0024BE  0E06               	movlw	high _OsAlarms
 37194  0024C0  201A               	addwfc	?i1___wmul+1,w,c
 37195  0024C2  6EDA               	movwf	fsr2h,c
 37196  0024C4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37197  0024C8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37198  0024CC  0E00               	movlw	0
 37199  0024CE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37200  0024D0  0E0B               	movlw	11
 37201  0024D2  6E1B               	movwf	i1___wmul@multiplicand,c
 37202  0024D4  ECFD  F032         	call	i1___wmul	;wreg free
 37203  0024D8  0E01               	movlw	1
 37204  0024DA  2619               	addwf	?i1___wmul,f,c
 37205  0024DC  0E00               	movlw	0
 37206  0024DE  221A               	addwfc	?i1___wmul+1,f,c
 37207  0024E0  0E00               	movlw	low _OsAlarms
 37208  0024E2  2419               	addwf	?i1___wmul,w,c
 37209  0024E4  6EE1               	movwf	fsr1l,c
 37210  0024E6  0E06               	movlw	high _OsAlarms
 37211  0024E8  201A               	addwfc	?i1___wmul+1,w,c
 37212  0024EA  6EE2               	movwf	fsr1h,c
 37213  0024EC  50DE               	movf	postinc2,w,c
 37214  0024EE  5CE6               	subwf	postinc1,w,c
 37215  0024F0  50DE               	movf	postinc2,w,c
 37216  0024F2  58E6               	subwfb	postinc1,w,c
 37217  0024F4  50DE               	movf	postinc2,w,c
 37218  0024F6  58E6               	subwfb	postinc1,w,c
 37219  0024F8  50DE               	movf	postinc2,w,c
 37220  0024FA  58E6               	subwfb	postinc1,w,c
 37221  0024FC  A0D8               	btfss	status,0,c
 37222  0024FE  D03B               	goto	i1u1602_29
 37223                           
 37224                           ;os_alarms.c: 129: {
 37225                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37226  002500  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37227  002502  ECA4  F02C         	call	_OsAlrm_ClearOsAlarm
 37228                           
 37229                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37230  002506  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37231  00250A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37232  00250E  0E00               	movlw	0
 37233  002510  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37234  002512  0E0B               	movlw	11
 37235  002514  6E1B               	movwf	i1___wmul@multiplicand,c
 37236  002516  ECFD  F032         	call	i1___wmul	;wreg free
 37237  00251A  0E09               	movlw	9
 37238  00251C  2619               	addwf	?i1___wmul,f,c
 37239  00251E  0E00               	movlw	0
 37240  002520  221A               	addwfc	?i1___wmul+1,f,c
 37241  002522  0E00               	movlw	low _OsAlarms
 37242  002524  2419               	addwf	?i1___wmul,w,c
 37243  002526  6ED9               	movwf	fsr2l,c
 37244  002528  0E06               	movlw	high _OsAlarms
 37245  00252A  201A               	addwfc	?i1___wmul+1,w,c
 37246  00252C  6EDA               	movwf	fsr2h,c
 37247  00252E  50DE               	movf	postinc2,w,c
 37248  002530  10DE               	iorwf	postinc2,w,c
 37249  002532  B4D8               	btfsc	status,2,c
 37250  002534  D020               	goto	i1u1602_29
 37251                           
 37252                           ;os_alarms.c: 134: {
 37253                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37254  002536  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37255  00253A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37256  00253E  0E00               	movlw	0
 37257  002540  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37258  002542  0E0B               	movlw	11
 37259  002544  6E1B               	movwf	i1___wmul@multiplicand,c
 37260  002546  ECFD  F032         	call	i1___wmul	;wreg free
 37261  00254A  0E09               	movlw	9
 37262  00254C  2619               	addwf	?i1___wmul,f,c
 37263  00254E  0E00               	movlw	0
 37264  002550  221A               	addwfc	?i1___wmul+1,f,c
 37265  002552  0E00               	movlw	low _OsAlarms
 37266  002554  2419               	addwf	?i1___wmul,w,c
 37267  002556  6ED9               	movwf	fsr2l,c
 37268  002558  0E06               	movlw	high _OsAlarms
 37269  00255A  201A               	addwfc	?i1___wmul+1,w,c
 37270  00255C  6EDA               	movwf	fsr2h,c
 37271  00255E  D801               	call	i1u1602_28
 37272  002560  D00A               	goto	i1u1602_29
 37273  002562                     i1u1602_28:
 37274  002562  0005               	push	
 37275  002564  6EFA               	movwf	pclath,c
 37276  002566  50DE               	movf	postinc2,w,c
 37277  002568  6EFD               	movwf	tosl,c
 37278  00256A  50DE               	movf	postinc2,w,c
 37279  00256C  6EFE               	movwf	tosh,c
 37280  00256E  50F8               	movf	tblptru,w,c
 37281  002570  6EFF               	movwf	tosu,c
 37282  002572  50FA               	movf	pclath,w,c
 37283  002574  0012               	return		;indir
 37284  002576                     i1u1602_29:
 37285  002576  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37286  002578  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37287  00257A  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37288  00257C  E101               	bnz	i1l747
 37289  00257E  D75C               	goto	L94
 37290  002580                     i1l747:
 37291  002580  0012               	return		;funcret
 37292  002582                     __end_of_OsAlrm_ProcessOsAlarms:
 37293                           	opt stack 0
 37294                           tosu	equ	0xFFF
 37295                           tosh	equ	0xFFE
 37296                           tosl	equ	0xFFD
 37297                           pclatu	equ	0xFFB
 37298                           pclath	equ	0xFFA
 37299                           tblptru	equ	0xFF8
 37300                           tblptrh	equ	0xFF7
 37301                           tblptrl	equ	0xFF6
 37302                           tablat	equ	0xFF5
 37303                           prodh	equ	0xFF4
 37304                           prodl	equ	0xFF3
 37305                           intcon	equ	0xFF2
 37306                           intcon2	equ	0xFF1
 37307                           intcon3	equ	0xFF0
 37308                           indf0	equ	0xFEF
 37309                           postinc0	equ	0xFEE
 37310                           plusw0	equ	0xFEB
 37311                           fsr0h	equ	0xFEA
 37312                           fsr0l	equ	0xFE9
 37313                           wreg	equ	0xFE8
 37314                           indf1	equ	0xFE7
 37315                           postinc1	equ	0xFE6
 37316                           postdec1	equ	0xFE5
 37317                           plusw1	equ	0xFE3
 37318                           fsr1h	equ	0xFE2
 37319                           fsr1l	equ	0xFE1
 37320                           bsr	equ	0xFE0
 37321                           indf2	equ	0xFDF
 37322                           postinc2	equ	0xFDE
 37323                           postdec2	equ	0xFDD
 37324                           plusw2	equ	0xFDB
 37325                           fsr2h	equ	0xFDA
 37326                           fsr2l	equ	0xFD9
 37327                           status	equ	0xFD8
 37328                           
 37329 ;; *************** function i1___wmul *****************
 37330 ;; Defined at:
 37331 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 37332 ;; Parameters:    Size  Location     Type
 37333 ;;  multiplier      2   24[COMRAM] unsigned int 
 37334 ;;  multiplicand    2   26[COMRAM] unsigned int 
 37335 ;; Auto vars:     Size  Location     Type
 37336 ;;  __wmul          2   28[COMRAM] unsigned int 
 37337 ;; Return value:  Size  Location     Type
 37338 ;;                  2   24[COMRAM] unsigned int 
 37339 ;; Registers used:
 37340 ;;		wreg, status,2, status,0, prodl, prodh
 37341 ;; Tracked objects:
 37342 ;;		On entry : 0/0
 37343 ;;		On exit  : 0/0
 37344 ;;		Unchanged: 0/0
 37345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37350 ;;Total ram usage:        6 bytes
 37351 ;; Hardware stack levels used:    1
 37352 ;; Hardware stack levels required when called:    4
 37353 ;; This function calls:
 37354 ;;		Nothing
 37355 ;; This function is called by:
 37356 ;;		_OsAlrm_ProcessOsAlarms
 37357 ;; This function uses a non-reentrant model
 37358 ;;
 37359                           
 37360                           	psect	text184
 37361  0065FA                     __ptext184:
 37362                           	opt stack 0
 37363  0065FA                     i1___wmul:
 37364                           	opt stack 10
 37365                           
 37366                           ;incstack = 0
 37367  0065FA  5019               	movf	i1___wmul@multiplier,w,c
 37368  0065FC  021B               	mulwf	i1___wmul@multiplicand,c
 37369  0065FE  CFF3 F01D          	movff	prodl,i1___wmul@product
 37370  006602  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 37371  006606  5019               	movf	i1___wmul@multiplier,w,c
 37372  006608  021C               	mulwf	i1___wmul@multiplicand+1,c
 37373  00660A  50F3               	movf	prodl,w,c
 37374  00660C  261E               	addwf	i1___wmul@product+1,f,c
 37375  00660E  501A               	movf	i1___wmul@multiplier+1,w,c
 37376  006610  021B               	mulwf	i1___wmul@multiplicand,c
 37377  006612  50F3               	movf	prodl,w,c
 37378  006614  261E               	addwf	i1___wmul@product+1,f,c
 37379  006616  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 37380  00661A  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 37381  00661E  0012               	return	
 37382  006620                     __end_ofi1___wmul:
 37383                           	opt stack 0
 37384                           tosu	equ	0xFFF
 37385                           tosh	equ	0xFFE
 37386                           tosl	equ	0xFFD
 37387                           pclatu	equ	0xFFB
 37388                           pclath	equ	0xFFA
 37389                           tblptru	equ	0xFF8
 37390                           tblptrh	equ	0xFF7
 37391                           tblptrl	equ	0xFF6
 37392                           tablat	equ	0xFF5
 37393                           prodh	equ	0xFF4
 37394                           prodl	equ	0xFF3
 37395                           intcon	equ	0xFF2
 37396                           intcon2	equ	0xFF1
 37397                           intcon3	equ	0xFF0
 37398                           indf0	equ	0xFEF
 37399                           postinc0	equ	0xFEE
 37400                           plusw0	equ	0xFEB
 37401                           fsr0h	equ	0xFEA
 37402                           fsr0l	equ	0xFE9
 37403                           wreg	equ	0xFE8
 37404                           indf1	equ	0xFE7
 37405                           postinc1	equ	0xFE6
 37406                           postdec1	equ	0xFE5
 37407                           plusw1	equ	0xFE3
 37408                           fsr1h	equ	0xFE2
 37409                           fsr1l	equ	0xFE1
 37410                           bsr	equ	0xFE0
 37411                           indf2	equ	0xFDF
 37412                           postinc2	equ	0xFDE
 37413                           postdec2	equ	0xFDD
 37414                           plusw2	equ	0xFDB
 37415                           fsr2h	equ	0xFDA
 37416                           fsr2l	equ	0xFD9
 37417                           status	equ	0xFD8
 37418                           
 37419 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 37420 ;; Defined at:
 37421 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37422 ;; Parameters:    Size  Location     Type
 37423 ;;  OsAlarmId       1    wreg     unsigned char 
 37424 ;; Auto vars:     Size  Location     Type
 37425 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 37426 ;; Return value:  Size  Location     Type
 37427 ;;                  1    wreg      void 
 37428 ;; Registers used:
 37429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37430 ;; Tracked objects:
 37431 ;;		On entry : 0/0
 37432 ;;		On exit  : 0/0
 37433 ;;		Unchanged: 0/0
 37434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37439 ;;Total ram usage:        1 bytes
 37440 ;; Hardware stack levels used:    1
 37441 ;; Hardware stack levels required when called:    4
 37442 ;; This function calls:
 37443 ;;		Nothing
 37444 ;; This function is called by:
 37445 ;;		_OsAlrm_ProcessOsAlarms
 37446 ;; This function uses a non-reentrant model
 37447 ;;
 37448                           
 37449                           	psect	text185
 37450  005948                     __ptext185:
 37451                           	opt stack 0
 37452  005948                     _OsAlrm_ClearOsAlarm:
 37453                           	opt stack 10
 37454                           
 37455                           ;incstack = 0
 37456                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 37457  005948  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 37458                           
 37459                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 37460  00594A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37461  00594C  0D0B               	mullw	11
 37462  00594E  0E00               	movlw	low _OsAlarms
 37463  005950  24F3               	addwf	prodl,w,c
 37464  005952  6ED9               	movwf	fsr2l,c
 37465  005954  0E06               	movlw	high _OsAlarms
 37466  005956  20F4               	addwfc	prodh,w,c
 37467  005958  6EDA               	movwf	fsr2h,c
 37468  00595A  0E00               	movlw	0
 37469  00595C  6EDF               	movwf	indf2,c
 37470                           
 37471                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 37472  00595E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37473  005960  0D0B               	mullw	11
 37474  005962  0E01               	movlw	1
 37475  005964  26F3               	addwf	prodl,f,c
 37476  005966  0E00               	movlw	0
 37477  005968  22F4               	addwfc	prodh,f,c
 37478  00596A  0E00               	movlw	low _OsAlarms
 37479  00596C  24F3               	addwf	prodl,w,c
 37480  00596E  6ED9               	movwf	fsr2l,c
 37481  005970  0E06               	movlw	high _OsAlarms
 37482  005972  20F4               	addwfc	prodh,w,c
 37483  005974  6EDA               	movwf	fsr2h,c
 37484  005976  6ADE               	clrf	postinc2,c
 37485  005978  6ADE               	clrf	postinc2,c
 37486  00597A  6ADE               	clrf	postinc2,c
 37487  00597C  6ADD               	clrf	postdec2,c
 37488                           
 37489                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 37490  00597E  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37491  005980  0D0B               	mullw	11
 37492  005982  0E05               	movlw	5
 37493  005984  26F3               	addwf	prodl,f,c
 37494  005986  0E00               	movlw	0
 37495  005988  22F4               	addwfc	prodh,f,c
 37496  00598A  0E00               	movlw	low _OsAlarms
 37497  00598C  24F3               	addwf	prodl,w,c
 37498  00598E  6ED9               	movwf	fsr2l,c
 37499  005990  0E06               	movlw	high _OsAlarms
 37500  005992  20F4               	addwfc	prodh,w,c
 37501  005994  6EDA               	movwf	fsr2h,c
 37502  005996  6ADE               	clrf	postinc2,c
 37503  005998  6ADE               	clrf	postinc2,c
 37504  00599A  6ADE               	clrf	postinc2,c
 37505  00599C  6ADD               	clrf	postdec2,c
 37506  00599E  0012               	return		;funcret
 37507  0059A0                     __end_of_OsAlrm_ClearOsAlarm:
 37508                           	opt stack 0
 37509                           tosu	equ	0xFFF
 37510                           tosh	equ	0xFFE
 37511                           tosl	equ	0xFFD
 37512                           pclatu	equ	0xFFB
 37513                           pclath	equ	0xFFA
 37514                           tblptru	equ	0xFF8
 37515                           tblptrh	equ	0xFF7
 37516                           tblptrl	equ	0xFF6
 37517                           tablat	equ	0xFF5
 37518                           prodh	equ	0xFF4
 37519                           prodl	equ	0xFF3
 37520                           intcon	equ	0xFF2
 37521                           intcon2	equ	0xFF1
 37522                           intcon3	equ	0xFF0
 37523                           indf0	equ	0xFEF
 37524                           postinc0	equ	0xFEE
 37525                           plusw0	equ	0xFEB
 37526                           fsr0h	equ	0xFEA
 37527                           fsr0l	equ	0xFE9
 37528                           wreg	equ	0xFE8
 37529                           indf1	equ	0xFE7
 37530                           postinc1	equ	0xFE6
 37531                           postdec1	equ	0xFE5
 37532                           plusw1	equ	0xFE3
 37533                           fsr1h	equ	0xFE2
 37534                           fsr1l	equ	0xFE1
 37535                           bsr	equ	0xFE0
 37536                           indf2	equ	0xFDF
 37537                           postinc2	equ	0xFDE
 37538                           postdec2	equ	0xFDD
 37539                           plusw2	equ	0xFDB
 37540                           fsr2h	equ	0xFDA
 37541                           fsr2l	equ	0xFD9
 37542                           status	equ	0xFD8
 37543                           
 37544 ;; *************** function _I2cDummyTx *****************
 37545 ;; Defined at:
 37546 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37547 ;; Parameters:    Size  Location     Type
 37548 ;;		None
 37549 ;; Auto vars:     Size  Location     Type
 37550 ;;		None
 37551 ;; Return value:  Size  Location     Type
 37552 ;;                  1    wreg      void 
 37553 ;; Registers used:
 37554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37555 ;; Tracked objects:
 37556 ;;		On entry : 0/0
 37557 ;;		On exit  : 0/0
 37558 ;;		Unchanged: 0/0
 37559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37564 ;;Total ram usage:        0 bytes
 37565 ;; Hardware stack levels used:    1
 37566 ;; Hardware stack levels required when called:    6
 37567 ;; This function calls:
 37568 ;;		i1_I2cSlv_SendI2cMsg
 37569 ;; This function is called by:
 37570 ;;		_I2cSlv_MainTask
 37571 ;;		_OsAlrm_ProcessOsAlarms
 37572 ;; This function uses a non-reentrant model
 37573 ;;
 37574                           
 37575                           	psect	text186
 37576  006852                     __ptext186:
 37577                           	opt stack 0
 37578  006852                     _I2cDummyTx:
 37579                           	opt stack 8
 37580                           
 37581                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 37582                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 37583                           
 37584                           ;incstack = 0
 37585  006852  0EFD               	movlw	low I2cDummyTx@DummyBuffer
 37586  006854  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 37587  006856  0E01               	movlw	high I2cDummyTx@DummyBuffer
 37588  006858  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 37589  00685A  0E00               	movlw	0
 37590  00685C  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 37591  00685E  0E01               	movlw	1
 37592  006860  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 37593  006862  EC61  F031         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 37594                           
 37595                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 37596  006866  0E01               	movlw	1
 37597  006868  0101               	movlb	1	; () banked
 37598  00686A  6FE7               	movwf	_I2cBusStatus& (0+255),b
 37599                           
 37600                           ; BSR set to: 1
 37601  00686C  0012               	return		;funcret
 37602  00686E                     __end_of_I2cDummyTx:
 37603                           	opt stack 0
 37604                           tosu	equ	0xFFF
 37605                           tosh	equ	0xFFE
 37606                           tosl	equ	0xFFD
 37607                           pclatu	equ	0xFFB
 37608                           pclath	equ	0xFFA
 37609                           tblptru	equ	0xFF8
 37610                           tblptrh	equ	0xFF7
 37611                           tblptrl	equ	0xFF6
 37612                           tablat	equ	0xFF5
 37613                           prodh	equ	0xFF4
 37614                           prodl	equ	0xFF3
 37615                           intcon	equ	0xFF2
 37616                           intcon2	equ	0xFF1
 37617                           intcon3	equ	0xFF0
 37618                           indf0	equ	0xFEF
 37619                           postinc0	equ	0xFEE
 37620                           plusw0	equ	0xFEB
 37621                           fsr0h	equ	0xFEA
 37622                           fsr0l	equ	0xFE9
 37623                           wreg	equ	0xFE8
 37624                           indf1	equ	0xFE7
 37625                           postinc1	equ	0xFE6
 37626                           postdec1	equ	0xFE5
 37627                           plusw1	equ	0xFE3
 37628                           fsr1h	equ	0xFE2
 37629                           fsr1l	equ	0xFE1
 37630                           bsr	equ	0xFE0
 37631                           indf2	equ	0xFDF
 37632                           postinc2	equ	0xFDE
 37633                           postdec2	equ	0xFDD
 37634                           plusw2	equ	0xFDB
 37635                           fsr2h	equ	0xFDA
 37636                           fsr2l	equ	0xFD9
 37637                           status	equ	0xFD8
 37638                           
 37639 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 37640 ;; Defined at:
 37641 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37642 ;; Parameters:    Size  Location     Type
 37643 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 37644 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 37645 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 37646 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 37647 ;;  DataLenght      1   30[COMRAM] unsigned char 
 37648 ;; Auto vars:     Size  Location     Type
 37649 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 37650 ;; Return value:  Size  Location     Type
 37651 ;;                  1    wreg      unsigned char 
 37652 ;; Registers used:
 37653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37654 ;; Tracked objects:
 37655 ;;		On entry : 0/0
 37656 ;;		On exit  : 0/0
 37657 ;;		Unchanged: 0/0
 37658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37662 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37663 ;;Total ram usage:        5 bytes
 37664 ;; Hardware stack levels used:    1
 37665 ;; Hardware stack levels required when called:    5
 37666 ;; This function calls:
 37667 ;;		i1_GenerateEvt
 37668 ;; This function is called by:
 37669 ;;		_I2cDummyTx
 37670 ;; This function uses a non-reentrant model
 37671 ;;
 37672                           
 37673                           	psect	text187
 37674  0062C2                     __ptext187:
 37675                           	opt stack 0
 37676  0062C2                     i1_I2cSlv_SendI2cMsg:
 37677                           	opt stack 8
 37678                           
 37679                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 37680                           
 37681                           ; BSR set to: 1
 37682                           ;incstack = 0
 37683  0062C2  0E00               	movlw	0
 37684  0062C4  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37685                           
 37686                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 37687  0062C6  0100               	movlb	0	; () banked
 37688  0062C8  05CF               	decf	_I2cComSts& (0+255),w,b
 37689  0062CA  B4D8               	btfsc	status,2,c
 37690  0062CC  D014               	goto	i1l1412
 37691                           
 37692                           ; BSR set to: 0
 37693                           ;i2c_slv.c: 257: {
 37694                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 37695  0062CE  C01E  F3A0         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 37696                           
 37697                           ; BSR set to: 0
 37698                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 37699  0062D2  0E00               	movlw	0
 37700  0062D4  0103               	movlb	3	; () banked
 37701  0062D6  6FA1               	movwf	(_I2cTxPacket+1)& (0+255),b
 37702                           
 37703                           ; BSR set to: 3
 37704                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 37705  0062D8  C01F  F3A4         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 37706                           
 37707                           ; BSR set to: 3
 37708                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 37709  0062DC  C01C  F3A2         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 37710  0062E0  C01D  F3A3         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 37711                           
 37712                           ; BSR set to: 3
 37713                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 37714  0062E4  0ED9               	movlw	low _I2cWriteDataEvt
 37715  0062E6  6E19               	movwf	i1GenerateEvt@Event,c
 37716  0062E8  0E00               	movlw	high _I2cWriteDataEvt
 37717  0062EA  6E1A               	movwf	i1GenerateEvt@Event+1,c
 37718  0062EC  ECA5  F034         	call	i1_GenerateEvt	;wreg free
 37719                           
 37720                           ;i2c_slv.c: 267: TxSts = 1u;
 37721  0062F0  0E01               	movlw	1
 37722  0062F2  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37723                           
 37724                           ;i2c_slv.c: 268: }
 37725  0062F4  0012               	return	
 37726  0062F6                     i1l1412:
 37727                           
 37728                           ;i2c_slv.c: 269: else
 37729                           ;i2c_slv.c: 270: {
 37730                           ;i2c_slv.c: 272: TxSts = 0u;
 37731  0062F6  0E00               	movlw	0
 37732  0062F8  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37733  0062FA  0012               	return	
 37734  0062FC                     __end_ofi1_I2cSlv_SendI2cMsg:
 37735                           	opt stack 0
 37736                           tosu	equ	0xFFF
 37737                           tosh	equ	0xFFE
 37738                           tosl	equ	0xFFD
 37739                           pclatu	equ	0xFFB
 37740                           pclath	equ	0xFFA
 37741                           tblptru	equ	0xFF8
 37742                           tblptrh	equ	0xFF7
 37743                           tblptrl	equ	0xFF6
 37744                           tablat	equ	0xFF5
 37745                           prodh	equ	0xFF4
 37746                           prodl	equ	0xFF3
 37747                           intcon	equ	0xFF2
 37748                           intcon2	equ	0xFF1
 37749                           intcon3	equ	0xFF0
 37750                           indf0	equ	0xFEF
 37751                           postinc0	equ	0xFEE
 37752                           plusw0	equ	0xFEB
 37753                           fsr0h	equ	0xFEA
 37754                           fsr0l	equ	0xFE9
 37755                           wreg	equ	0xFE8
 37756                           indf1	equ	0xFE7
 37757                           postinc1	equ	0xFE6
 37758                           postdec1	equ	0xFE5
 37759                           plusw1	equ	0xFE3
 37760                           fsr1h	equ	0xFE2
 37761                           fsr1l	equ	0xFE1
 37762                           bsr	equ	0xFE0
 37763                           indf2	equ	0xFDF
 37764                           postinc2	equ	0xFDE
 37765                           postdec2	equ	0xFDD
 37766                           plusw2	equ	0xFDB
 37767                           fsr2h	equ	0xFDA
 37768                           fsr2l	equ	0xFD9
 37769                           status	equ	0xFD8
 37770                           
 37771 ;; *************** function i1_GenerateEvt *****************
 37772 ;; Defined at:
 37773 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37774 ;; Parameters:    Size  Location     Type
 37775 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 37776 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37777 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37778 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37779 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37780 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37781 ;; Auto vars:     Size  Location     Type
 37782 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 37783 ;; Return value:  Size  Location     Type
 37784 ;;                  1    wreg      enum E7699
 37785 ;; Registers used:
 37786 ;;		wreg, fsr2l, fsr2h, status,2
 37787 ;; Tracked objects:
 37788 ;;		On entry : 0/0
 37789 ;;		On exit  : 0/0
 37790 ;;		Unchanged: 0/0
 37791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37796 ;;Total ram usage:        3 bytes
 37797 ;; Hardware stack levels used:    1
 37798 ;; Hardware stack levels required when called:    4
 37799 ;; This function calls:
 37800 ;;		Nothing
 37801 ;; This function is called by:
 37802 ;;		i1_I2cSlv_SendI2cMsg
 37803 ;; This function uses a non-reentrant model
 37804 ;;
 37805                           
 37806                           	psect	text188
 37807  00694A                     __ptext188:
 37808                           	opt stack 0
 37809  00694A                     i1_GenerateEvt:
 37810                           	opt stack 8
 37811                           
 37812                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 37813                           
 37814                           ;incstack = 0
 37815  00694A  0E00               	movlw	0
 37816  00694C  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 37817                           
 37818                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 37819  00694E  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 37820  006952  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 37821  006956  0E02               	movlw	2
 37822  006958  6EDF               	movwf	indf2,c
 37823                           
 37824                           ;os_ser.c: 83: EventStatus = EventSent;
 37825  00695A  0E02               	movlw	2
 37826  00695C  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 37827  00695E  0012               	return	
 37828  006960                     __end_ofi1_GenerateEvt:
 37829                           	opt stack 0
 37830                           tosu	equ	0xFFF
 37831                           tosh	equ	0xFFE
 37832                           tosl	equ	0xFFD
 37833                           pclatu	equ	0xFFB
 37834                           pclath	equ	0xFFA
 37835                           tblptru	equ	0xFF8
 37836                           tblptrh	equ	0xFF7
 37837                           tblptrl	equ	0xFF6
 37838                           tablat	equ	0xFF5
 37839                           prodh	equ	0xFF4
 37840                           prodl	equ	0xFF3
 37841                           intcon	equ	0xFF2
 37842                           intcon2	equ	0xFF1
 37843                           intcon3	equ	0xFF0
 37844                           indf0	equ	0xFEF
 37845                           postinc0	equ	0xFEE
 37846                           plusw0	equ	0xFEB
 37847                           fsr0h	equ	0xFEA
 37848                           fsr0l	equ	0xFE9
 37849                           wreg	equ	0xFE8
 37850                           indf1	equ	0xFE7
 37851                           postinc1	equ	0xFE6
 37852                           postdec1	equ	0xFE5
 37853                           plusw1	equ	0xFE3
 37854                           fsr1h	equ	0xFE2
 37855                           fsr1l	equ	0xFE1
 37856                           bsr	equ	0xFE0
 37857                           indf2	equ	0xFDF
 37858                           postinc2	equ	0xFDE
 37859                           postdec2	equ	0xFDD
 37860                           plusw2	equ	0xFDB
 37861                           fsr2h	equ	0xFDA
 37862                           fsr2l	equ	0xFD9
 37863                           status	equ	0xFD8
 37864                           
 37865 ;; *************** function _HighPriorityIsr *****************
 37866 ;; Defined at:
 37867 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 37868 ;; Parameters:    Size  Location     Type
 37869 ;;		None
 37870 ;; Auto vars:     Size  Location     Type
 37871 ;;		None
 37872 ;; Return value:  Size  Location     Type
 37873 ;;                  1    wreg      void 
 37874 ;; Registers used:
 37875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 37876 ;; Tracked objects:
 37877 ;;		On entry : 0/0
 37878 ;;		On exit  : 0/0
 37879 ;;		Unchanged: 0/0
 37880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37883 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37884 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37885 ;;Total ram usage:       18 bytes
 37886 ;; Hardware stack levels used:    1
 37887 ;; Hardware stack levels required when called:    3
 37888 ;; This function calls:
 37889 ;;		_Mcu_Int0Isr
 37890 ;;		_Mcu_Int1Isr
 37891 ;;		_Rtcc_RtcIsr
 37892 ;;		_Uart_Uart1RxIsr
 37893 ;; This function is called by:
 37894 ;;		Interrupt level 2
 37895 ;; This function uses a non-reentrant model
 37896 ;;
 37897                           
 37898                           	psect	intcode
 37899  000008                     __pintcode:
 37900                           	opt stack 0
 37901  000008                     _HighPriorityIsr:
 37902                           	opt stack 8
 37903                           
 37904                           ;incstack = 0
 37905  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 37906  00000A  EFFD  F021         	goto	int_func
 37907                           tosu	equ	0xFFF
 37908                           tosh	equ	0xFFE
 37909                           tosl	equ	0xFFD
 37910                           pclatu	equ	0xFFB
 37911                           pclath	equ	0xFFA
 37912                           tblptru	equ	0xFF8
 37913                           tblptrh	equ	0xFF7
 37914                           tblptrl	equ	0xFF6
 37915                           tablat	equ	0xFF5
 37916                           prodh	equ	0xFF4
 37917                           prodl	equ	0xFF3
 37918                           intcon	equ	0xFF2
 37919                           intcon2	equ	0xFF1
 37920                           intcon3	equ	0xFF0
 37921                           indf0	equ	0xFEF
 37922                           postinc0	equ	0xFEE
 37923                           plusw0	equ	0xFEB
 37924                           fsr0h	equ	0xFEA
 37925                           fsr0l	equ	0xFE9
 37926                           wreg	equ	0xFE8
 37927                           indf1	equ	0xFE7
 37928                           postinc1	equ	0xFE6
 37929                           postdec1	equ	0xFE5
 37930                           plusw1	equ	0xFE3
 37931                           fsr1h	equ	0xFE2
 37932                           fsr1l	equ	0xFE1
 37933                           bsr	equ	0xFE0
 37934                           indf2	equ	0xFDF
 37935                           postinc2	equ	0xFDE
 37936                           postdec2	equ	0xFDD
 37937                           plusw2	equ	0xFDB
 37938                           fsr2h	equ	0xFDA
 37939                           fsr2l	equ	0xFD9
 37940                           status	equ	0xFD8
 37941                           
 37942                           	psect	intcode_body
 37943  0043FA                     __pintcode_body:
 37944                           	opt stack 8
 37945  0043FA                     int_func:
 37946                           	opt stack 8
 37947  0043FA  CFFA F007          	movff	pclath,??_HighPriorityIsr
 37948  0043FE  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 37949  004402  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 37950  004406  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 37951  00440A  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 37952  00440E  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 37953  004412  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 37954  004416  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 37955  00441A  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 37956  00441E  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 37957  004422  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 37958  004426  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 37959  00442A  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 37960  00442E  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 37961  004432  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 37962  004436  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 37963  00443A  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 37964  00443E  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 37965                           
 37966                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 37967  004442  B2F2               	btfsc	intcon,1,c	;volatile
 37968                           
 37969                           ;irq.c: 158: {
 37970                           ;irq.c: 160: Mcu_Int0Isr();
 37971  004444  EC56  F035         	call	_Mcu_Int0Isr	;wreg free
 37972                           
 37973                           ;irq.c: 161: }
 37974                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 37975  004448  B0F0               	btfsc	intcon3,0,c	;volatile
 37976                           
 37977                           ;irq.c: 167: {
 37978                           ;irq.c: 169: Mcu_Int1Isr();
 37979  00444A  EC54  F035         	call	_Mcu_Int1Isr	;wreg free
 37980                           
 37981                           ;irq.c: 170: }
 37982                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 37983  00444E  B0A4               	btfsc	4004,0,c	;volatile
 37984                           
 37985                           ;irq.c: 203: {
 37986                           ;irq.c: 205: Rtcc_RtcIsr();
 37987  004450  EC52  F035         	call	_Rtcc_RtcIsr	;wreg free
 37988                           
 37989                           ;irq.c: 206: }
 37990                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 37991  004454  BA9E               	btfsc	3998,5,c	;volatile
 37992                           
 37993                           ;irq.c: 212: {
 37994                           ;irq.c: 214: Uart_Uart1RxIsr();
 37995  004456  EC00  F035         	call	_Uart_Uart1RxIsr	;wreg free
 37996  00445A  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 37997  00445E  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 37998  004462  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 37999  004466  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38000  00446A  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38001  00446E  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38002  004472  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38003  004476  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38004  00447A  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38005  00447E  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38006  004482  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38007  004486  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38008  00448A  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38009  00448E  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38010  004492  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38011  004496  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38012  00449A  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38013  00449E  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38014  0044A2  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38015  0044A4  0011               	retfie		f
 38016  0044A6                     __end_of_HighPriorityIsr:
 38017                           	opt stack 0
 38018                           tosu	equ	0xFFF
 38019                           tosh	equ	0xFFE
 38020                           tosl	equ	0xFFD
 38021                           pclatu	equ	0xFFB
 38022                           pclath	equ	0xFFA
 38023                           tblptru	equ	0xFF8
 38024                           tblptrh	equ	0xFF7
 38025                           tblptrl	equ	0xFF6
 38026                           tablat	equ	0xFF5
 38027                           prodh	equ	0xFF4
 38028                           prodl	equ	0xFF3
 38029                           intcon	equ	0xFF2
 38030                           intcon2	equ	0xFF1
 38031                           intcon3	equ	0xFF0
 38032                           indf0	equ	0xFEF
 38033                           postinc0	equ	0xFEE
 38034                           plusw0	equ	0xFEB
 38035                           fsr0h	equ	0xFEA
 38036                           fsr0l	equ	0xFE9
 38037                           wreg	equ	0xFE8
 38038                           indf1	equ	0xFE7
 38039                           postinc1	equ	0xFE6
 38040                           postdec1	equ	0xFE5
 38041                           plusw1	equ	0xFE3
 38042                           fsr1h	equ	0xFE2
 38043                           fsr1l	equ	0xFE1
 38044                           bsr	equ	0xFE0
 38045                           indf2	equ	0xFDF
 38046                           postinc2	equ	0xFDE
 38047                           postdec2	equ	0xFDD
 38048                           plusw2	equ	0xFDB
 38049                           fsr2h	equ	0xFDA
 38050                           fsr2l	equ	0xFD9
 38051                           status	equ	0xFD8
 38052                           
 38053 ;; *************** function _Uart_Uart1RxIsr *****************
 38054 ;; Defined at:
 38055 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38056 ;; Parameters:    Size  Location     Type
 38057 ;;		None
 38058 ;; Auto vars:     Size  Location     Type
 38059 ;;		None
 38060 ;; Return value:  Size  Location     Type
 38061 ;;                  1    wreg      void 
 38062 ;; Registers used:
 38063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38064 ;; Tracked objects:
 38065 ;;		On entry : 0/0
 38066 ;;		On exit  : 0/0
 38067 ;;		Unchanged: 0/0
 38068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38073 ;;Total ram usage:        0 bytes
 38074 ;; Hardware stack levels used:    1
 38075 ;; Hardware stack levels required when called:    2
 38076 ;; This function calls:
 38077 ;;		_Uart_MdmGsmGprsReadService
 38078 ;; This function is called by:
 38079 ;;		_HighPriorityIsr
 38080 ;; This function uses a non-reentrant model
 38081 ;;
 38082                           
 38083                           	psect	text190
 38084  006A00                     __ptext190:
 38085                           	opt stack 0
 38086  006A00                     _Uart_Uart1RxIsr:
 38087                           	opt stack 8
 38088                           
 38089                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38090                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38091                           
 38092                           ;incstack = 0
 38093  006A00  CFAF F02A          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38094                           
 38095                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38096  006A04  C02A  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38097  006A08  0E01               	movlw	1
 38098  006A0A  EC3D  F01E         	call	_Uart_MdmGsmGprsReadService
 38099  006A0E  0012               	return		;funcret
 38100  006A10                     __end_of_Uart_Uart1RxIsr:
 38101                           	opt stack 0
 38102                           tosu	equ	0xFFF
 38103                           tosh	equ	0xFFE
 38104                           tosl	equ	0xFFD
 38105                           pclatu	equ	0xFFB
 38106                           pclath	equ	0xFFA
 38107                           tblptru	equ	0xFF8
 38108                           tblptrh	equ	0xFF7
 38109                           tblptrl	equ	0xFF6
 38110                           tablat	equ	0xFF5
 38111                           prodh	equ	0xFF4
 38112                           prodl	equ	0xFF3
 38113                           intcon	equ	0xFF2
 38114                           intcon2	equ	0xFF1
 38115                           intcon3	equ	0xFF0
 38116                           indf0	equ	0xFEF
 38117                           postinc0	equ	0xFEE
 38118                           plusw0	equ	0xFEB
 38119                           fsr0h	equ	0xFEA
 38120                           fsr0l	equ	0xFE9
 38121                           wreg	equ	0xFE8
 38122                           indf1	equ	0xFE7
 38123                           postinc1	equ	0xFE6
 38124                           postdec1	equ	0xFE5
 38125                           plusw1	equ	0xFE3
 38126                           fsr1h	equ	0xFE2
 38127                           fsr1l	equ	0xFE1
 38128                           bsr	equ	0xFE0
 38129                           indf2	equ	0xFDF
 38130                           postinc2	equ	0xFDE
 38131                           postdec2	equ	0xFDD
 38132                           plusw2	equ	0xFDB
 38133                           fsr2h	equ	0xFDA
 38134                           fsr2l	equ	0xFD9
 38135                           status	equ	0xFD8
 38136                           
 38137 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38138 ;; Defined at:
 38139 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38140 ;; Parameters:    Size  Location     Type
 38141 ;;  Module          1    wreg     unsigned char 
 38142 ;;  UartData        1    3[COMRAM] unsigned char 
 38143 ;; Auto vars:     Size  Location     Type
 38144 ;;  Module          1    0[COMRAM] unsigned char 
 38145 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38146 ;; Return value:  Size  Location     Type
 38147 ;;                  1    wreg      void 
 38148 ;; Registers used:
 38149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38150 ;; Tracked objects:
 38151 ;;		On entry : 0/0
 38152 ;;		On exit  : 0/0
 38153 ;;		Unchanged: 0/0
 38154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38158 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38159 ;;Total ram usage:        3 bytes
 38160 ;; Hardware stack levels used:    1
 38161 ;; Hardware stack levels required when called:    1
 38162 ;; This function calls:
 38163 ;;		i2_GenerateEvt
 38164 ;; This function is called by:
 38165 ;;		_Uart_Uart1RxIsr
 38166 ;; This function uses a non-reentrant model
 38167 ;;
 38168                           
 38169                           	psect	text191
 38170  003C7A                     __ptext191:
 38171                           	opt stack 0
 38172  003C7A                     _Uart_MdmGsmGprsReadService:
 38173                           	opt stack 8
 38174                           
 38175                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38176                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38177                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38178                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38179                           
 38180                           ;incstack = 0
 38181  003C7A  0E00               	movlw	0
 38182  003C7C  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38183  003C7E  0E00               	movlw	0
 38184  003C80  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38185                           
 38186                           ;uart_drv.c: 383: switch (RxState)
 38187  003C82  D058               	goto	i2l680
 38188  003C84                     
 38189                           ;uart_drv.c: 387: if (UartData == '\r')
 38190  003C84  0E0D               	movlw	13
 38191  003C86  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38192  003C88  A4D8               	btfss	status,2,c
 38193  003C8A  D003               	goto	i2l682
 38194                           
 38195                           ;uart_drv.c: 388: {
 38196                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38197  003C8C  0E01               	movlw	1
 38198  003C8E  6E2B               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38199                           
 38200                           ;uart_drv.c: 391: }
 38201  003C90  0012               	return	
 38202  003C92                     i2l682:
 38203                           
 38204                           ;uart_drv.c: 392: else
 38205                           ;uart_drv.c: 393: {
 38206                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38207  003C92  0E90               	movlw	144
 38208  003C94  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38209  003C96  0E01               	movlw	1
 38210  003C98  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38211  003C9A  B0D8               	btfsc	status,0,c
 38212  003C9C  0012               	return	
 38213                           
 38214                           ;uart_drv.c: 395: {
 38215                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38216  003C9E  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38217  003CA0  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38218  003CA2  6ED9               	movwf	fsr2l,c
 38219  003CA4  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38220  003CA6  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38221  003CA8  6EDA               	movwf	fsr2h,c
 38222  003CAA  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38223                           
 38224                           ;uart_drv.c: 399: RxCounter++;
 38225  003CAE  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38226  003CB0  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38227                           
 38228                           ;uart_drv.c: 400: }
 38229                           ;uart_drv.c: 401: }
 38230                           ;uart_drv.c: 402: break;
 38231  003CB2  0012               	return	
 38232  003CB4                     
 38233                           ;uart_drv.c: 406: if (UartData == '\n')
 38234  003CB4  0E0A               	movlw	10
 38235  003CB6  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38236  003CB8  A4D8               	btfss	status,2,c
 38237  003CBA  D035               	goto	i2l688
 38238                           
 38239                           ;uart_drv.c: 407: {
 38240                           ;uart_drv.c: 409: if (RxCounter > 0)
 38241  003CBC  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38242  003CBE  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38243  003CC0  B4D8               	btfsc	status,2,c
 38244  003CC2  D031               	goto	i2l688
 38245                           
 38246                           ;uart_drv.c: 410: {
 38247                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38248  003CC4  0E00               	movlw	0
 38249  003CC6  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38250  003CC8  0E00               	movlw	0
 38251  003CCA  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38252  003CCC  D010               	goto	i2l689
 38253  003CCE                     
 38254                           ;uart_drv.c: 413: {
 38255                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38256  003CCE  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38257  003CD0  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38258  003CD2  6ED9               	movwf	fsr2l,c
 38259  003CD4  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38260  003CD6  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38261  003CD8  6EDA               	movwf	fsr2h,c
 38262  003CDA  0E58               	movlw	low _RxBuffer
 38263  003CDC  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38264  003CDE  6EE1               	movwf	fsr1l,c
 38265  003CE0  0E0C               	movlw	high _RxBuffer
 38266  003CE2  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38267  003CE4  6EE2               	movwf	fsr1h,c
 38268  003CE6  CFDF FFE7          	movff	indf2,indf1
 38269  003CEA  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38270  003CEC  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38271  003CEE                     i2l689:
 38272  003CEE  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38273  003CF0  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38274  003CF2  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38275  003CF4  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38276  003CF6  A0D8               	btfss	status,0,c
 38277  003CF8  D7EA               	goto	i2l690
 38278                           
 38279                           ;uart_drv.c: 415: }
 38280                           ;uart_drv.c: 417: RxLen = RxCounter;
 38281  003CFA  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38282  003CFE  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38283                           
 38284                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38285  003D02  0E3A               	movlw	low _NewStringReceived
 38286  003D04  6E01               	movwf	i2GenerateEvt@Event,c
 38287  003D06  0E00               	movlw	high _NewStringReceived
 38288  003D08  6E02               	movwf	i2GenerateEvt@Event+1,c
 38289  003D0A  ECB0  F034         	call	i2_GenerateEvt	;wreg free
 38290                           
 38291                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38292  003D0E  0E39               	movlw	low _NewMdmEvtParserRequest
 38293  003D10  6E01               	movwf	i2GenerateEvt@Event,c
 38294  003D12  0E00               	movlw	high _NewMdmEvtParserRequest
 38295  003D14  6E02               	movwf	i2GenerateEvt@Event+1,c
 38296  003D16  ECB0  F034         	call	i2_GenerateEvt	;wreg free
 38297                           
 38298                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38299  003D1A  0E38               	movlw	low _NewStringMdmTerminal
 38300  003D1C  6E01               	movwf	i2GenerateEvt@Event,c
 38301  003D1E  0E00               	movlw	high _NewStringMdmTerminal
 38302  003D20  6E02               	movwf	i2GenerateEvt@Event+1,c
 38303  003D22  ECB0  F034         	call	i2_GenerateEvt	;wreg free
 38304  003D26                     i2l688:
 38305                           
 38306                           ;uart_drv.c: 427: }
 38307                           ;uart_drv.c: 429: RxState = ReadData;
 38308                           
 38309                           ;uart_drv.c: 424: else
 38310                           ;uart_drv.c: 425: {
 38311                           
 38312                           ;uart_drv.c: 422: }
 38313                           ;uart_drv.c: 423: }
 38314  003D26  0E00               	movlw	0
 38315  003D28  6E2B               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38316                           
 38317                           ;uart_drv.c: 431: RxCounter = 0;
 38318  003D2A  0E00               	movlw	0
 38319  003D2C  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 38320  003D2E  0E00               	movlw	0
 38321  003D30  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 38322                           
 38323                           ;uart_drv.c: 436: }
 38324                           
 38325                           ;uart_drv.c: 435: break;
 38326                           
 38327                           ;uart_drv.c: 434: default:
 38328                           
 38329                           ;uart_drv.c: 432: break;
 38330  003D32  0012               	return	
 38331  003D34                     i2l680:
 38332  003D34  502B               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 38333                           
 38334                           ; Switch size 1, requested type "space"
 38335                           ; Number of cases is 2, Range of values is 0 to 1
 38336                           ; switch strategies available:
 38337                           ; Name         Instructions Cycles
 38338                           ; simple_byte            7     4 (average)
 38339                           ;	Chosen strategy is simple_byte
 38340  003D36  0A00               	xorlw	0	; case 0
 38341  003D38  B4D8               	btfsc	status,2,c
 38342  003D3A  D7A4               	goto	i2l681
 38343  003D3C  0A01               	xorlw	1	; case 1
 38344  003D3E  A4D8               	btfss	status,2,c
 38345  003D40  0012               	return	
 38346  003D42  D7B8               	goto	i2l686
 38347  003D44                     __end_of_Uart_MdmGsmGprsReadService:
 38348                           	opt stack 0
 38349                           tosu	equ	0xFFF
 38350                           tosh	equ	0xFFE
 38351                           tosl	equ	0xFFD
 38352                           pclatu	equ	0xFFB
 38353                           pclath	equ	0xFFA
 38354                           tblptru	equ	0xFF8
 38355                           tblptrh	equ	0xFF7
 38356                           tblptrl	equ	0xFF6
 38357                           tablat	equ	0xFF5
 38358                           prodh	equ	0xFF4
 38359                           prodl	equ	0xFF3
 38360                           intcon	equ	0xFF2
 38361                           intcon2	equ	0xFF1
 38362                           intcon3	equ	0xFF0
 38363                           indf0	equ	0xFEF
 38364                           postinc0	equ	0xFEE
 38365                           plusw0	equ	0xFEB
 38366                           fsr0h	equ	0xFEA
 38367                           fsr0l	equ	0xFE9
 38368                           wreg	equ	0xFE8
 38369                           indf1	equ	0xFE7
 38370                           postinc1	equ	0xFE6
 38371                           postdec1	equ	0xFE5
 38372                           plusw1	equ	0xFE3
 38373                           fsr1h	equ	0xFE2
 38374                           fsr1l	equ	0xFE1
 38375                           bsr	equ	0xFE0
 38376                           indf2	equ	0xFDF
 38377                           postinc2	equ	0xFDE
 38378                           postdec2	equ	0xFDD
 38379                           plusw2	equ	0xFDB
 38380                           fsr2h	equ	0xFDA
 38381                           fsr2l	equ	0xFD9
 38382                           status	equ	0xFD8
 38383                           
 38384 ;; *************** function i2_GenerateEvt *****************
 38385 ;; Defined at:
 38386 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38387 ;; Parameters:    Size  Location     Type
 38388 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 38389 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38390 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38391 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38392 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38393 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38394 ;; Auto vars:     Size  Location     Type
 38395 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 38396 ;; Return value:  Size  Location     Type
 38397 ;;                  1    wreg      enum E7699
 38398 ;; Registers used:
 38399 ;;		wreg, fsr2l, fsr2h, status,2
 38400 ;; Tracked objects:
 38401 ;;		On entry : 0/0
 38402 ;;		On exit  : 0/0
 38403 ;;		Unchanged: 0/0
 38404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38409 ;;Total ram usage:        3 bytes
 38410 ;; Hardware stack levels used:    1
 38411 ;; This function calls:
 38412 ;;		Nothing
 38413 ;; This function is called by:
 38414 ;;		_Uart_MdmGsmGprsReadService
 38415 ;; This function uses a non-reentrant model
 38416 ;;
 38417                           
 38418                           	psect	text192
 38419  006960                     __ptext192:
 38420                           	opt stack 0
 38421  006960                     i2_GenerateEvt:
 38422                           	opt stack 8
 38423                           
 38424                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38425                           
 38426                           ;incstack = 0
 38427  006960  0E00               	movlw	0
 38428  006962  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38429                           
 38430                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38431  006964  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 38432  006968  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 38433  00696C  0E02               	movlw	2
 38434  00696E  6EDF               	movwf	indf2,c
 38435                           
 38436                           ;os_ser.c: 83: EventStatus = EventSent;
 38437  006970  0E02               	movlw	2
 38438  006972  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38439  006974  0012               	return	
 38440  006976                     __end_ofi2_GenerateEvt:
 38441                           	opt stack 0
 38442                           tosu	equ	0xFFF
 38443                           tosh	equ	0xFFE
 38444                           tosl	equ	0xFFD
 38445                           pclatu	equ	0xFFB
 38446                           pclath	equ	0xFFA
 38447                           tblptru	equ	0xFF8
 38448                           tblptrh	equ	0xFF7
 38449                           tblptrl	equ	0xFF6
 38450                           tablat	equ	0xFF5
 38451                           prodh	equ	0xFF4
 38452                           prodl	equ	0xFF3
 38453                           intcon	equ	0xFF2
 38454                           intcon2	equ	0xFF1
 38455                           intcon3	equ	0xFF0
 38456                           indf0	equ	0xFEF
 38457                           postinc0	equ	0xFEE
 38458                           plusw0	equ	0xFEB
 38459                           fsr0h	equ	0xFEA
 38460                           fsr0l	equ	0xFE9
 38461                           wreg	equ	0xFE8
 38462                           indf1	equ	0xFE7
 38463                           postinc1	equ	0xFE6
 38464                           postdec1	equ	0xFE5
 38465                           plusw1	equ	0xFE3
 38466                           fsr1h	equ	0xFE2
 38467                           fsr1l	equ	0xFE1
 38468                           bsr	equ	0xFE0
 38469                           indf2	equ	0xFDF
 38470                           postinc2	equ	0xFDE
 38471                           postdec2	equ	0xFDD
 38472                           plusw2	equ	0xFDB
 38473                           fsr2h	equ	0xFDA
 38474                           fsr2l	equ	0xFD9
 38475                           status	equ	0xFD8
 38476                           
 38477 ;; *************** function _Rtcc_RtcIsr *****************
 38478 ;; Defined at:
 38479 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 38480 ;; Parameters:    Size  Location     Type
 38481 ;;		None
 38482 ;; Auto vars:     Size  Location     Type
 38483 ;;		None
 38484 ;; Return value:  Size  Location     Type
 38485 ;;                  1    wreg      void 
 38486 ;; Registers used:
 38487 ;;		wreg, status,2, status,0
 38488 ;; Tracked objects:
 38489 ;;		On entry : 0/0
 38490 ;;		On exit  : 0/0
 38491 ;;		Unchanged: 0/0
 38492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38497 ;;Total ram usage:        0 bytes
 38498 ;; Hardware stack levels used:    1
 38499 ;; This function calls:
 38500 ;;		Nothing
 38501 ;; This function is called by:
 38502 ;;		_HighPriorityIsr
 38503 ;; This function uses a non-reentrant model
 38504 ;;
 38505                           
 38506                           	psect	text193
 38507  006AA4                     __ptext193:
 38508                           	opt stack 0
 38509  006AA4                     _Rtcc_RtcIsr:
 38510                           	opt stack 10
 38511                           
 38512                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 38513                           
 38514                           ;incstack = 0
 38515  006AA4  90A4               	bcf	4004,0,c	;volatile
 38516  006AA6  0012               	return	
 38517  006AA8                     __end_of_Rtcc_RtcIsr:
 38518                           	opt stack 0
 38519                           tosu	equ	0xFFF
 38520                           tosh	equ	0xFFE
 38521                           tosl	equ	0xFFD
 38522                           pclatu	equ	0xFFB
 38523                           pclath	equ	0xFFA
 38524                           tblptru	equ	0xFF8
 38525                           tblptrh	equ	0xFF7
 38526                           tblptrl	equ	0xFF6
 38527                           tablat	equ	0xFF5
 38528                           prodh	equ	0xFF4
 38529                           prodl	equ	0xFF3
 38530                           intcon	equ	0xFF2
 38531                           intcon2	equ	0xFF1
 38532                           intcon3	equ	0xFF0
 38533                           indf0	equ	0xFEF
 38534                           postinc0	equ	0xFEE
 38535                           plusw0	equ	0xFEB
 38536                           fsr0h	equ	0xFEA
 38537                           fsr0l	equ	0xFE9
 38538                           wreg	equ	0xFE8
 38539                           indf1	equ	0xFE7
 38540                           postinc1	equ	0xFE6
 38541                           postdec1	equ	0xFE5
 38542                           plusw1	equ	0xFE3
 38543                           fsr1h	equ	0xFE2
 38544                           fsr1l	equ	0xFE1
 38545                           bsr	equ	0xFE0
 38546                           indf2	equ	0xFDF
 38547                           postinc2	equ	0xFDE
 38548                           postdec2	equ	0xFDD
 38549                           plusw2	equ	0xFDB
 38550                           fsr2h	equ	0xFDA
 38551                           fsr2l	equ	0xFD9
 38552                           status	equ	0xFD8
 38553                           
 38554 ;; *************** function _Mcu_Int1Isr *****************
 38555 ;; Defined at:
 38556 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38557 ;; Parameters:    Size  Location     Type
 38558 ;;		None
 38559 ;; Auto vars:     Size  Location     Type
 38560 ;;		None
 38561 ;; Return value:  Size  Location     Type
 38562 ;;                  1    wreg      void 
 38563 ;; Registers used:
 38564 ;;		wreg, status,2, status,0
 38565 ;; Tracked objects:
 38566 ;;		On entry : 0/0
 38567 ;;		On exit  : 0/0
 38568 ;;		Unchanged: 0/0
 38569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38574 ;;Total ram usage:        0 bytes
 38575 ;; Hardware stack levels used:    1
 38576 ;; This function calls:
 38577 ;;		Nothing
 38578 ;; This function is called by:
 38579 ;;		_HighPriorityIsr
 38580 ;; This function uses a non-reentrant model
 38581 ;;
 38582                           
 38583                           	psect	text194
 38584  006AA8                     __ptext194:
 38585                           	opt stack 0
 38586  006AA8                     _Mcu_Int1Isr:
 38587                           	opt stack 10
 38588                           
 38589                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 38590                           
 38591                           ;incstack = 0
 38592  006AA8  90F0               	bcf	intcon3,0,c	;volatile
 38593  006AAA  0012               	return	
 38594  006AAC                     __end_of_Mcu_Int1Isr:
 38595                           	opt stack 0
 38596                           tosu	equ	0xFFF
 38597                           tosh	equ	0xFFE
 38598                           tosl	equ	0xFFD
 38599                           pclatu	equ	0xFFB
 38600                           pclath	equ	0xFFA
 38601                           tblptru	equ	0xFF8
 38602                           tblptrh	equ	0xFF7
 38603                           tblptrl	equ	0xFF6
 38604                           tablat	equ	0xFF5
 38605                           prodh	equ	0xFF4
 38606                           prodl	equ	0xFF3
 38607                           intcon	equ	0xFF2
 38608                           intcon2	equ	0xFF1
 38609                           intcon3	equ	0xFF0
 38610                           indf0	equ	0xFEF
 38611                           postinc0	equ	0xFEE
 38612                           plusw0	equ	0xFEB
 38613                           fsr0h	equ	0xFEA
 38614                           fsr0l	equ	0xFE9
 38615                           wreg	equ	0xFE8
 38616                           indf1	equ	0xFE7
 38617                           postinc1	equ	0xFE6
 38618                           postdec1	equ	0xFE5
 38619                           plusw1	equ	0xFE3
 38620                           fsr1h	equ	0xFE2
 38621                           fsr1l	equ	0xFE1
 38622                           bsr	equ	0xFE0
 38623                           indf2	equ	0xFDF
 38624                           postinc2	equ	0xFDE
 38625                           postdec2	equ	0xFDD
 38626                           plusw2	equ	0xFDB
 38627                           fsr2h	equ	0xFDA
 38628                           fsr2l	equ	0xFD9
 38629                           status	equ	0xFD8
 38630                           
 38631 ;; *************** function _Mcu_Int0Isr *****************
 38632 ;; Defined at:
 38633 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38634 ;; Parameters:    Size  Location     Type
 38635 ;;		None
 38636 ;; Auto vars:     Size  Location     Type
 38637 ;;		None
 38638 ;; Return value:  Size  Location     Type
 38639 ;;                  1    wreg      void 
 38640 ;; Registers used:
 38641 ;;		wreg, status,2, status,0
 38642 ;; Tracked objects:
 38643 ;;		On entry : 0/0
 38644 ;;		On exit  : 0/0
 38645 ;;		Unchanged: 0/0
 38646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38651 ;;Total ram usage:        0 bytes
 38652 ;; Hardware stack levels used:    1
 38653 ;; This function calls:
 38654 ;;		Nothing
 38655 ;; This function is called by:
 38656 ;;		_HighPriorityIsr
 38657 ;; This function uses a non-reentrant model
 38658 ;;
 38659                           
 38660                           	psect	text195
 38661  006AAC                     __ptext195:
 38662                           	opt stack 0
 38663  006AAC                     _Mcu_Int0Isr:
 38664                           	opt stack 10
 38665                           
 38666                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 38667                           
 38668                           ;incstack = 0
 38669  006AAC  92F2               	bcf	intcon,1,c	;volatile
 38670  006AAE  0012               	return	
 38671  006AB0                     __end_of_Mcu_Int0Isr:
 38672                           	opt stack 0
 38673                           tosu	equ	0xFFF
 38674                           tosh	equ	0xFFE
 38675                           tosl	equ	0xFFD
 38676                           pclatu	equ	0xFFB
 38677                           pclath	equ	0xFFA
 38678                           tblptru	equ	0xFF8
 38679                           tblptrh	equ	0xFF7
 38680                           tblptrl	equ	0xFF6
 38681                           tablat	equ	0xFF5
 38682                           prodh	equ	0xFF4
 38683                           prodl	equ	0xFF3
 38684                           intcon	equ	0xFF2
 38685                           intcon2	equ	0xFF1
 38686                           intcon3	equ	0xFF0
 38687                           indf0	equ	0xFEF
 38688                           postinc0	equ	0xFEE
 38689                           plusw0	equ	0xFEB
 38690                           fsr0h	equ	0xFEA
 38691                           fsr0l	equ	0xFE9
 38692                           wreg	equ	0xFE8
 38693                           indf1	equ	0xFE7
 38694                           postinc1	equ	0xFE6
 38695                           postdec1	equ	0xFE5
 38696                           plusw1	equ	0xFE3
 38697                           fsr1h	equ	0xFE2
 38698                           fsr1l	equ	0xFE1
 38699                           bsr	equ	0xFE0
 38700                           indf2	equ	0xFDF
 38701                           postinc2	equ	0xFDE
 38702                           postdec2	equ	0xFDD
 38703                           plusw2	equ	0xFDB
 38704                           fsr2h	equ	0xFDA
 38705                           fsr2l	equ	0xFD9
 38706                           status	equ	0xFD8
 38707                           tosu	equ	0xFFF
 38708                           tosh	equ	0xFFE
 38709                           tosl	equ	0xFFD
 38710                           pclatu	equ	0xFFB
 38711                           pclath	equ	0xFFA
 38712                           tblptru	equ	0xFF8
 38713                           tblptrh	equ	0xFF7
 38714                           tblptrl	equ	0xFF6
 38715                           tablat	equ	0xFF5
 38716                           prodh	equ	0xFF4
 38717                           prodl	equ	0xFF3
 38718                           intcon	equ	0xFF2
 38719                           intcon2	equ	0xFF1
 38720                           intcon3	equ	0xFF0
 38721                           indf0	equ	0xFEF
 38722                           postinc0	equ	0xFEE
 38723                           plusw0	equ	0xFEB
 38724                           fsr0h	equ	0xFEA
 38725                           fsr0l	equ	0xFE9
 38726                           wreg	equ	0xFE8
 38727                           indf1	equ	0xFE7
 38728                           postinc1	equ	0xFE6
 38729                           postdec1	equ	0xFE5
 38730                           plusw1	equ	0xFE3
 38731                           fsr1h	equ	0xFE2
 38732                           fsr1l	equ	0xFE1
 38733                           bsr	equ	0xFE0
 38734                           indf2	equ	0xFDF
 38735                           postinc2	equ	0xFDE
 38736                           postdec2	equ	0xFDD
 38737                           plusw2	equ	0xFDB
 38738                           fsr2h	equ	0xFDA
 38739                           fsr2l	equ	0xFD9
 38740                           status	equ	0xFD8
 38741                           
 38742                           	psect	text196
 38743  000000                     __ptext196:
 38744                           	opt stack 0
 38745                           tosu	equ	0xFFF
 38746                           tosh	equ	0xFFE
 38747                           tosl	equ	0xFFD
 38748                           pclatu	equ	0xFFB
 38749                           pclath	equ	0xFFA
 38750                           tblptru	equ	0xFF8
 38751                           tblptrh	equ	0xFF7
 38752                           tblptrl	equ	0xFF6
 38753                           tablat	equ	0xFF5
 38754                           prodh	equ	0xFF4
 38755                           prodl	equ	0xFF3
 38756                           intcon	equ	0xFF2
 38757                           intcon2	equ	0xFF1
 38758                           intcon3	equ	0xFF0
 38759                           indf0	equ	0xFEF
 38760                           postinc0	equ	0xFEE
 38761                           plusw0	equ	0xFEB
 38762                           fsr0h	equ	0xFEA
 38763                           fsr0l	equ	0xFE9
 38764                           wreg	equ	0xFE8
 38765                           indf1	equ	0xFE7
 38766                           postinc1	equ	0xFE6
 38767                           postdec1	equ	0xFE5
 38768                           plusw1	equ	0xFE3
 38769                           fsr1h	equ	0xFE2
 38770                           fsr1l	equ	0xFE1
 38771                           bsr	equ	0xFE0
 38772                           indf2	equ	0xFDF
 38773                           postinc2	equ	0xFDE
 38774                           postdec2	equ	0xFDD
 38775                           plusw2	equ	0xFDB
 38776                           fsr2h	equ	0xFDA
 38777                           fsr2l	equ	0xFD9
 38778                           status	equ	0xFD8
 38779                           
 38780                           	psect	rparam
 38781  0000                     tosu	equ	0xFFF
 38782                           tosh	equ	0xFFE
 38783                           tosl	equ	0xFFD
 38784                           pclatu	equ	0xFFB
 38785                           pclath	equ	0xFFA
 38786                           tblptru	equ	0xFF8
 38787                           tblptrh	equ	0xFF7
 38788                           tblptrl	equ	0xFF6
 38789                           tablat	equ	0xFF5
 38790                           prodh	equ	0xFF4
 38791                           prodl	equ	0xFF3
 38792                           intcon	equ	0xFF2
 38793                           intcon2	equ	0xFF1
 38794                           intcon3	equ	0xFF0
 38795                           indf0	equ	0xFEF
 38796                           postinc0	equ	0xFEE
 38797                           plusw0	equ	0xFEB
 38798                           fsr0h	equ	0xFEA
 38799                           fsr0l	equ	0xFE9
 38800                           wreg	equ	0xFE8
 38801                           indf1	equ	0xFE7
 38802                           postinc1	equ	0xFE6
 38803                           postdec1	equ	0xFE5
 38804                           plusw1	equ	0xFE3
 38805                           fsr1h	equ	0xFE2
 38806                           fsr1l	equ	0xFE1
 38807                           bsr	equ	0xFE0
 38808                           indf2	equ	0xFDF
 38809                           postinc2	equ	0xFDE
 38810                           postdec2	equ	0xFDD
 38811                           plusw2	equ	0xFDB
 38812                           fsr2h	equ	0xFDA
 38813                           fsr2l	equ	0xFD9
 38814                           status	equ	0xFD8
 38815                           
 38816                           	psect	temp
 38817  000042                     btemp:
 38818                           	opt stack 0
 38819  000042                     	ds	1
 38820  0000                     int$flags	set	btemp
 38821  0000                     wtemp6	set	btemp+1
 38822                           tosu	equ	0xFFF
 38823                           tosh	equ	0xFFE
 38824                           tosl	equ	0xFFD
 38825                           pclatu	equ	0xFFB
 38826                           pclath	equ	0xFFA
 38827                           tblptru	equ	0xFF8
 38828                           tblptrh	equ	0xFF7
 38829                           tblptrl	equ	0xFF6
 38830                           tablat	equ	0xFF5
 38831                           prodh	equ	0xFF4
 38832                           prodl	equ	0xFF3
 38833                           intcon	equ	0xFF2
 38834                           intcon2	equ	0xFF1
 38835                           intcon3	equ	0xFF0
 38836                           indf0	equ	0xFEF
 38837                           postinc0	equ	0xFEE
 38838                           plusw0	equ	0xFEB
 38839                           fsr0h	equ	0xFEA
 38840                           fsr0l	equ	0xFE9
 38841                           wreg	equ	0xFE8
 38842                           indf1	equ	0xFE7
 38843                           postinc1	equ	0xFE6
 38844                           postdec1	equ	0xFE5
 38845                           plusw1	equ	0xFE3
 38846                           fsr1h	equ	0xFE2
 38847                           fsr1l	equ	0xFE1
 38848                           bsr	equ	0xFE0
 38849                           indf2	equ	0xFDF
 38850                           postinc2	equ	0xFDE
 38851                           postdec2	equ	0xFDD
 38852                           plusw2	equ	0xFDB
 38853                           fsr2h	equ	0xFDA
 38854                           fsr2l	equ	0xFD9
 38855                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        167
    BSS         2360
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      2     256
    BANK4           192      4     174
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), 
		 -> parseCommand@addNumberCmd(BANK0[4]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _triggerCmdFsm->_isNumberInMemory
    _initFsm->_initEeprom
    _delCmdFsm->_isNumberInMemory
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_InitializeTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1186859
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1182228
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  591207
                                              0 BANK3      1     1      0
                                              0 BANK4      4     4      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  591021
                                              0 BANK3      2     2      0
                                              0 BANK4      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  325237
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        4     2      2   33674
                                             17 BANK1      4     2      2
                   _isNumberInMemory
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         4     4      0    4141
                                             37 BANK0      4     4      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   84592
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17638
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15578
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           19    15      4   69124
                                             17 BANK1     19    15      4
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                            6     2      4   95028
                                             17 BANK1      6     2      4
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                    17    15      2   29262
                                              0 BANK1     17    15      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                      16    14      2   29121
                                              0 BANK1     16    14      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                       15    15      0   25845
                                              0 BANK1     15    15      0
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      2     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      4      AE      14       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     990       8        0.0%
DATA                 0      0     CB0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 28 15:40:33 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5948  
                              _USB_SD_Ptr FC1C                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                           ?_isMasterNumber 0100  
                    __size_of_TurnOnModem 004C                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 67DC               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 22D6  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 002F  
                                     l202 209C                                       l203 20A4  
                                     l205 20EC                                       l206 2112  
                                     l208 211A                                       l160 1FE0  
                                     l209 213A                                       l161 1EB6  
                                     l162 201E                                       l170 1F7E  
                                     l171 1F94                                       l163 1EC2  
                                     l315 4684                                       l323 4650  
                                     l164 1F02                                       l316 45FA  
                                     l420 4CD2                                       l500 4B82  
                                     l173 1F98                                       l325 466A  
                                     l421 4CF2                                       l237 67E8  
                                     l174 1FA0                                       l166 1F10  
                                     l318 4604                                       l422 4CFE  
             __end_of_USBStdGetDscHandler 2CFA                                       l510 4B54  
                                     l502 4B14                                       l175 1FAC  
                                     l167 1F38                                       l319 462A  
                                     l423 4D0A                                       l511 4B44  
                                     l503 4B04                                       l192 2144  
                                     l176 1FC2                                       l416 4D1E  
                                     l424 4D16                                       l512 4B68  
                                     l504 4B2A                                       l520 5E4E  
                                     l193 2024                                       l169 1F4A  
                                     l417 4CC4                                       l441 17EC  
                                     l513 4B48                                       l505 4B08  
                                     l521 5E1A                                       l194 217C  
                                     l418 4D4C                                       l442 15F4  
                                     l514 4B4E                                       l506 4B0E  
                                     l530 31D0                                       l195 2030  
                                     l179 1FCE                                       l419 4CCC  
                                     l523 5E34                                       l531 3236  
                                     l196 2070                                       l700 60B4  
                                     l444 163C                                       l532 31FC  
                                     l445 1684                                       l541 6786  
                                     l198 207E                                       l446 16CC  
                                     l199 2092                                       l631 2A10  
                                     l447 1714                                       l448 175C  
                                     l528 323C                                       l633 2A88  
                                     l625 299C                                       l449 17A4  
                                     l529 3228                                       l538 678A  
                                     l546 3D9C                                       l651 5D9E  
                                     l707 61D8                                       l627 29C0  
                                     l715 614C                                       l539 6782  
                                     l547 3DB8                                       l660 5DC2  
                                     l652 5D98                                       l716 6122  
                                     l709 61F2                                       l629 29E8  
                                     l718 613A                                       l639 67CE  
                                     l832 654A                                       l844 3E70  
                                     l668 0C44                                       _BDT 000400  
                                     l790 6804                                       l855 5188  
                                     l775 2E1C                                       l864 4E54  
                                     l856 512E                                       l857 51A2  
                                     l698 6098                                       l858 515E  
                                     l867 4E66                                       l982 26B0  
                                     l983 2584                                       l985 25A8  
                                     l987 25C2                                       l988 25F6  
                                     l989 2668                                       l998 268C  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 44A6                            ??_Mdm_MainTask 00A9  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 63D2  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00CE               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 6116                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 2582             findEmptySpot@positionInMemory 010E  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5E62  
         InitGprsNetwork@GprsNetInitState 01EA                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 5E7C  
                                    l1110 5CA2                               RiSm@Counter 02E2  
                                    l1031 3882                                      l1111 5CB6  
                                    l1032 38BC                                      l2000 5736  
                                    l1033 38E2                                      l1009 5E98  
                                    l1121 5D0E                                      l1027 391C  
                                    l1035 3902                                      l1107 5CC8  
                                    l2100 26FE                                      l1220 0DD0  
                                    l1028 3870                                      l1052 1E88  
                                    l1060 1E5A                                      l1108 5C8C  
                                    l2101 2782                                      l1053 1DA2  
                                    l2110 32FC                                      l1222 10B0  
                                    l1230 0FB8                                      l1070 2BAE  
                                    l2006 572A                                      l2111 3244  
                                    l1231 0FBC                                      l1223 0DE8  
                                    l1071 2AA6                                      l1055 1EA2  
                                    l2112 3318                                      l2120 471A  
                                    l1232 1000                                      l1224 0E22  
                                    l1056 1DD4                                      l1152 6686  
                                    l1136 6662                                      l2008 5730  
                                    l2113 3262                                      l2121 46AC  
                                    l1241 106E                                      l1225 0E96  
                                    l1129 558E                                      l2122 4742  
                                    l1226 0E5E                                      l1074 2AC2  
                                    l1058 1E24                                      l2115 32D2  
                                    l2123 46BC                                      l1219 1078  
                                    l1075 2ADA                                      l1091 1B80  
                                    l2124 46CE                                      l1252 0A54  
                                    l1260 073E                                      l1236 1010  
                                    l1228 0F3E                                      l1092 19FE  
                                    l1412 61CA                                      l1156 635C  
                                    l1404 59E2                                      l2220 4E78  
                                    l2141 64DE                                      l2125 46E8  
                                    l1261 06F6                                      l1253 05F4  
                                    l1237 1054                                      l1229 0F78  
                                    l2045 5F38                                      l2037 5A8C  
                                    l1405 59A2                                      l2133 3B9C  
                                    l2142 64CC                                      l1078 2B4C  
                                    l2150 5AD8                                      l1422 6772  
                                    l2134 3AE4                                      l2222 4EDE  
                                    l2127 46F6                                      l1255 0AB6  
                                    l1263 07F2                                      l1095 1A1A  
                                    l2151 5AA2                                      l2039 5A98  
                                    l1407 59DC                                      l2144 64D2  
                                    l2128 4704                                      l1280 09C4  
                                    l1272 092A                                      l1264 082C  
                                    l1256 060C                                      l1096 1AD0  
                                    l1440 39FA                                      l2136 3AF2  
                                    l2145 64D8                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l1097 1AF4  
                                    l2153 5AB4                                      l1417 6110  
                                    l1441 3944                                      l1266 0890  
                                    l1258 0680                                      l2250 5C26  
                                    l2154 5AC6                                      l1442 3A10  
                                    l1267 08CA                                      l1259 06BA  
                                    l1443 3962                                      l2411 01AE  
                                    l1291 5F70                                      l2219 4EF2  
                                    l1268 090E                                      l2404 05D2  
                                    l2412 019C                                      l1700 36E8  
                                    l1604 2320                                      l1620 1BF2  
                                    l2261 6390                                      l1285 0A42  
                                    l1277 097E                                      l1445 39C0  
                                    l3061 3830                                      l2405 00E2  
                                    l1621 1C02                                      l1382 403C  
                                    l2262 637C                                      l1286 0A4A  
                                    l1278 09AA                                      l1446 39D4  
                                    l3062 37F2                                      l2422 0392  
                                    l1702 374C                                      l1606 2348  
                                    l1630 1CA0                                      l1622 1C0A  
                                    l2510 66B2                                      l1294 5F3E  
                                    l1391 4006                                      l1383 3F9E  
                                    l2255 571A                                      l3055 379E  
                                    l2423 0326                                      l1703 3712  
                                    l1631 1CAC                                      l1623 1C20  
                                    l1615 1BD6                                      l1384 3FC0  
                                    l2256 56DA                                      l2248 5C2A  
                                    l1448 39F2                                      l3064 3864  
                                    l3056 3798                                      l2440 041E  
                                    l2424 02B4                                      l2408 0152  
                                    l1608 2388                                      l1640 1D28  
                                    l1624 1C2C                                      l1616 1BCC  
                                    l2512 66BA                                      l1393 4022  
                                    l2097 27F4                                      l2249 5C00  
                                    l3081 5080                                      l2425 0250  
                                    l2409 01E2                                      l2417 01D0  
                                    l1713 2E7C                                      l1633 1CC0  
                                    l1617 1BCA                                      l2601 3550  
                                    l1394 402E                                      l1386 3FE2  
                                    l3330 5B08                                      l2098 26D6  
                                    l3082 508A                                      l3074 5032  
                                    l3090 533E                                      l3058 37E0  
                                    l1650 4166                                      l3242 6030  
                                    l2450 0570                                      l2442 045E  
                                    l2434 0402                                      l1706 378E  
                                    l1714 2E56                                      l1626 1C54  
                                    l2099 280A                                      l3083 5098  
                                    l3075 5042                                      l3091 5336  
                                    l2443 0578                                      l2435 03D2  
                                    l2427 0304                                      l1707 3754  
                                    l1643 5FDA                                      l1811 35F4  
                                    l2603 3572                                      l3236 6752  
                                    l1652 41C2                                      l3340 605E  
                                    l2428 02C6                                      l3500 6166  
                                    l1716 2EF4                                      l1644 5FEA  
                                    l1740 2CD2                                      l1812 35FA  
                                    l1636 1CE6                                      l1628 1C6A  
              USBConfigureEndpoint@handle 0083                                      l1389 3FEA  
                                    l3333 5B30                                      l2701 4582  
                                    l3077 5060                                      l2445 04B4  
                                    l3501 6160                                      l1717 2EDA  
                                    l1733 2CE2                                      l1725 3378  
                                    l1813 3600                                      l1629 1C76  
                                    l2509 66C0                                      l2605 358C  
                                    l3334 5B3A                                      l2702 45AA  
                                    l3078 5058                                      l3094 5356  
                                    l3246 44AE                                      l2446 0478  
                                    l1902 43D6                                      l1830 143E  
                                    l1742 2CDA                                      l1734 2BDE  
                                    l1750 4334                                      l1814 3614  
                                    l1638 1D0A                                      l3095 5360  
                                    l3087 531C                                      l3343 607E  
                                    l1903 4370                                      l1831 1440  
                                    l1751 42B6                                      l1727 33EC  
                                    l1815 361A                                      l3280 5106  
                                    l2800 4222                                      l3096 536E  
                                    l3088 5328                                      l1648 413C  
                                    l3344 6088                                      l3248 44EA  
                                    l3520 18C8                                      l3360 6470  
                                    l2464 131E                                      l2480 128E  
                                    l1840 153E                                      l1832 145C  
                                    l1736 2BF2                                      l1752 42BC  
                                    l1808 367A                                      l1760 5FC2  
                                    l3281 5114                                      l3329 5B10  
                                    l2705 45AE                                      l3249 452C  
                                    l2449 0524                                      l2465 10B8  
                                    l1905 4388                                      l1841 15BA  
                                    l1825 137E                                      l1737 2C7A  
                                    l1753 42DC                                      l1817 3620  
                                    l1809 35EA                                      l1673 497C  
                                    l3353 5EE0                                      l1761 5FC0  
                                    l2570 2FE4                                      l2730 47D6  
                                    l2706 45BA                                      l3602 670E  
                                    l2482 12F8                                      l2474 110E  
                                    l1906 4396                                      l1834 14EA  
                                    l1826 1384                                      l1746 431E  
                                    l1818 363E                                      l3354 5EBE  
                                    l2803 4234                                      l2731 47E6  
                                    l3339 6066                                      l2467 10DE  
                                    l1667 3BF6                                      l1907 43B4  
                                    l1739 2C82                                      l1747 42A4  
                                    l1819 365A                                      l1675 4996  
                                    l3276 50D2                                      l2804 4246  
                                    l2652 4DC4                                      l2660 4DA0  
                                    l1924 4C24                                      l3540 6902  
                                    l3532 1914                                      l3516 185C  
                                    l2484 1318                                      l2476 112E  
                                    l1908 43CC                                      l1844 1570  
                                    l1836 14B2                                      l1828 13F6  
                                    l1684 30D4                                      l2492 688A  
                                    l3277 50C6                                      l2573 3024  
                                    l2661 4DB8                                      l2653 4D5A  
                                    l3533 1980                                      l3613 68EA  
                                    l2469 10FA                                      l1837 14D0  
                                    l1685 307C                                      l3526 18D8  
                                    l3518 1874                                      l2478 114E  
                                    l1846 15C6                                      l1774 4CAC  
                                    l2590 35C8                                      l2903 58AA  
                                    l2807 4270                                      l2583 4A2A  
                                    l2671 4FE6                                      l1927 4BD2  
                                    l3535 19A6                                      l3527 18E8  
                                    l3359 6482                                      l1679 4ACC  
                                    l1839 1532                                      l1775 4CA6  
                                    l2591 34F8                                      l2904 58BE  
                                    l2744 5686                                      l2832 4888  
                                    l2584 4A60                                      l2728 47AA  
                                    l2680 67B6                                      l1928 4BFE  
                                    l3536 19E0                                      l3560 34AE  
                                    l1960 288A                                      l1952 2832  
                                    l1768 62B6                                      l2833 4826  
                                    l2577 304E                                      l2569 2FE8  
                                    l2673 5018                                      l1929 4BD8  
                                    l3529 1902                                      l3609 627E  
                                    l3561 3466                                      l1793 4092  
                                    l1785 55A4                                      l1689 30FE  
                                    l1769 62B4                                      l2489 6890  
                                    l2746 56B8                                      l2834 4840  
                                    l2674 4FEC                                      l2658 4DE0  
                                    l3562 347E                                      l3554 3426  
                                    l1970 293E                                      l1962 28E2  
                                    l1954 2840                                      l1698 36DE  
                                    l1794 4098                                      l2594 359E  
                                    l2747 56BE                                      l2675 4FF6  
                                    l2659 4D8C                                      l3563 348E  
                                    l3555 3420                                      l1971 2942  
                                    l1963 28AA                                      l1795 4114  
                                    l1787 55F2                                      l2595 3512  
                                    l2772 5BDA                                      l2764 5526  
                                    l2756 52FC                                      l2828 4874  
                                    l2668 5004                                      l2684 5D66  
                                    l2860 5200                                      l1956 2874  
                                    l1796 40DA                                      l2837 486A  
                                    l2829 480E                                      l2669 4FA0  
                                    l2861 51B4                                      l3557 344E  
                                    l3485 57F4                                      l2774 5BE2  
                                    l2758 5300                                      l2686 5D72  
                                    l2854 6318                                      l2862 51CE  
                                    l3494 6418                                      l3566 34EC  
                                    l3486 57EE                                      l1966 2924  
                                    l1798 40FA                                      l2598 3524  
                                    l2695 45D2                                      l3495 640E  
                                    l1967 28EC                                      l1959 2886  
                                    l2599 352E                __size_of_Mdm_IsSmsReceived 0024  
                                    l2696 4558                                      l3592 64BC  
                                    l2880 3A9C                                      l3488 580E  
                                    l1992 6632                                _Led1OutSts 01FA  
                                    l2865 521A                                      l3489 5804  
                                    l1993 6622                                      l2794 427A  
                                    l2698 45F2                                      l2866 51DE  
                                    l2795 41EC                                      l2699 4566  
                                    l2867 51EC                                      l2883 3A40  
                                    l1995 6628                                      l2868 51F8  
                                    l3597 65CA                                      l2885 3A88  
                                    l2798 4294                                      l2886 3A6A  
                                    l2878 3A20                                      l2799 4204  
                                    l2879 3A3A                                      l2889 3ABC  
                                    STR_1 FFE6                                      STR_2 FF75  
                                    STR_3 FFDF                                      STR_4 FFC2  
                                    STR_5 FFCE                                      STR_6 FFF0  
                                    STR_7 FFEB                                      STR_8 FE89  
                                    STR_9 FEBD                                _Led2OutSts 01F8  
                              _Led3OutSts 01F6                                      u9015 5E24  
                   ??_USBCtrlTrfTxService 007D                                      u9016 5E26  
                                    u9025 5E30                                      u9026 5E32  
                                    u9035 5E3E                                      u9036 5E40  
                                    u9045 5E4A                                      u9046 5E4C  
                                    _UCFG 000F39                                      _UEP0 000F26  
                                    _UEP1 000F27                                      _UEIE 000F37  
                __size_of_Uart_Uart1RxIsr 0010                                      _UEIR 000F63  
                                    _UCON 000F65                                _AlarmEvent 01F5  
                          ?_StopCondition 0001                              _triggerRelay 62FC  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 0314  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6A80  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0030               Led_SetLedBlinkTime@OnTimeMs 007D  
            findEmptySpot@currentPosition 0040    USBStdFeatureReqHandler@current_ep_data 0094  
                                    _pDst 02D4                      _NewStringMdmTerminal 0038  
                                    _atoi 3796                                      _main 6A2C  
                         ??_Mdm_IsRinging 0081                                      _itoa 600A  
                        ?_SetUartBaudRate 0096                   __end_of_GetCallerNumber 6368  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 030C                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0042                                      _utoa 44A6  
                                    _xtoi 3410                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 6A88               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 4CBE               I2cSlv_SendI2cMsg@DataLenght 0083  
                    ??_Mcu_StartSystemPll 007D               __end_of_Uart_WriteStringLen 6156  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_Eeprom_Read 5A9C  
 Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8                         ??_secondsAppTimer 008D  
                     __end_of_GenerateEvt 691E                             _isNumberValid 5660  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
        isNumberInMemory@positionInMemory 0110                __end_of_USBCheckStdRequest 36BE  
                         _Rtcm_SystemDate 0459                    ??_USBCtrlTrfOutHandler 007F  
                __end_of_GetOsTickCounter 69C0         __size_of_GetLastInteractionNumber 000C  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 0086                 ?_GetLastInteractionNumber 007D  
                          _GetElapsedTime 3E0C             I2cSlv_ReceiveI2cMsg@SlaveAddr 0082  
                            ___param_bank 000000                 ??_USBStdFeatureReqHandler 0091  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 59A0  
                Eeprom_Write@SlaveAddress 0094                     addCmdFsm@currentState 01D7  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 61D2                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DD  
                                   l12142 67E8                                     l14104 47E6  
                                   l13082 3370                                     l14066 567E  
                                   l15220 323C                                     l12910 36E8  
                                   l14360 4CD8                                     l12872 6470  
                                   l15346 1D9A                                     l16226 4866  
                                   l13746 5EBE                                     l14546 2318  
                                   l14486 63B0                                     l14574 2380  
                                   l15704 09A4                                     l15368 1E54  
                                   l13928 382C                                     l15538 0FB0  
                                   l16188 426C                                     l16456 5228  
                                   l16468 2D04                                     l15856 1CB8  
                                   l16786 5750                                     l16788 5780  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 50A2  
                                   STR_10 FF4B                                     STR_11 FF59  
                                   STR_12 FF9D                                     STR_20 FF3D  
                                   STR_13 FF67                                     STR_21 FE5F  
                                   STR_30 FEFA                                     STR_14 FEA8  
                                   STR_31 FFAA                                     STR_15 FEE6  
                                   STR_23 FED2                                     STR_24 FFF5  
                                   STR_32 FFD8                                     STR_16 FF1E  
                                   STR_25 FFF5                                     STR_17 FF83  
                                   STR_26 FE86                                     STR_18 FF90  
                                   STR_27 FF0D                                     STR_28 FFB6  
                         __end_of___awmod 5378                                     STR_29 FF2F  
                           _triggerCmdFsm 51A8         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 5126                                     ?_utoa 008A  
                                   u12010 606A                                     u12050 6200  
                                   u13010 18AE                           ___awdiv@divisor 007F  
                                   u12070 5712                                     u11350 5D94  
                                   u11510 60C2                                     u12320 50D6  
                                   u10625 658C                    __end_of_USBDeviceTasks 1D32  
                                   u10626 658E                                     u10635 6598  
                                   u10636 659A                                     u12077 5708  
                                   u10645 65A4                                     u13150 56C2  
                                   u13230 5064                                     u11470 373A  
                                   u11710 2CC6                                     u10646 65A6  
                                   ?_xtoi 0083                                     u12360 65C6  
                                   u11640 33A4                                     u12610 5C36  
                                   u12450 6262                                     u14130 04BE  
                                   u11490 377C                                     u12380 64AC  
                                   u13325 5DE8                                     u11477 3730  
                                   u11717 2CBC                                     u12550 29E4  
                                   u12470 626E                                     u14320 4D6A  
                                   u11680 2C44                                     u13505 0C78  
                                   u11497 3772                                     u13290 5342  
                                   u14250 3AD4                                     u11930 1554  
                                   u11690 2C74                                     u13610 233C  
                                   u13515 0C98                                     u12740 4BAE  
                                   u13525 0D22                                     u13445 6944  
                                   u14270 2FE0                                     u13446 6946  
                                   u14190 5836                                     u12495 6984  
                                   u11687 2C3A                                     u12496 6986  
                                   u13640 23E4                                     u14505 53DC  
                                   u13465 0AF4                                     u11697 2C6A  
               ?_USBCtrlEPServiceComplete 0001                                     u13475 0B14  
                                   u14515 6998                                     u11980 5B14  
                                   u14540 4662                                     u14620 261E  
                                   u14516 699A                                     u13485 0B9E  
                                   u14701 1D4C                                     u14197 582C  
                                   u14550 467C                                     u14711 1D5E  
                                   u16071 4ED0                                     u14640 2632  
                                   u12960 1864                                     u14721 1D70  
                                   u16081 4EE8                                     u12990 189E  
                                   u15470 1D2E                                     u16158 525E  
                                   u14575 692E                                     u16159 528C  
                                   u14576 6932                                     u15560 28D2  
                                   u15641 5656                                     u15580 2914  
                                   u14790 1EA8                                     u15590 292C  
                                   u16198 2DD0                                     u15567 28C8  
                                   u16199 2DFE                                     u15840 4242  
                                   u15587 290A                                     u15870 47F8  
                         __end_of___lwdiv 5B44                           __end_of___lwmod 6092  
               TurnOnModem@TurnOnMdmState 01F4                        ??_UpdateOsCounters 0019  
                                   i1l742 2444                                     i1l747 2580  
                                   i2l680 3D34                                     i2l681 3C84  
                                   i2l690 3CCE                                     i2l682 3C92  
                                   i2l686 3CB4                                     i2l688 3D26  
                                   i2l689 3CEE                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03B6  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E6  
                                   _USTAT 000F64                   __end_of_LedStateMachine 4748  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 49CA                             _StringCompare 5BE8  
                                   _sd000 FE5B                                     _sd001 FE14  
                                   _sd002 FDEE            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3BAE  
                             _ApnLenLocal 01EE                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_initFsm 45F8  
                         __end_of_isalpha 64C6                           __end_of_isdigit 675A  
               saveNumberInMemory@address 0098                                     atoi@a 0088  
                                   atoi@s 0083                    Eeprom_Write@DataLength 0091  
                             _ClearBuffer 6368                           __end_of_isspace 65D2  
             I2cSlv_QueryI2cData@RxBuffer 00A5                I2c_WriteData@I2cWriteState 0036  
               Rtcc_GetRtccValue@RegValue 0080                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 6716                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 6620  
                    triggerRelay@txBuffer 0087                 __end_of_Rtcc_GetRtccValue 4D52  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 5456                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 59A0  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3AE2  
                         __end_of_tolower 68EE                       __end_of_Mcu_Int0Isr 6AB0  
                     __end_of_Mcu_Int1Isr 6AAC                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 6906  
                    __end_of_Eeprom_Reset 5F3C                    __end_of_GetElapsedTime 3ED4  
                   __end_of_UartSetConfig 5898                      __end_of_Eeprom_Write 5B96  
                        delCmdFsm@smsText 0113                    __size_of_initGprsModem 0094  
                          ?_isNumberValid 007D               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 68A2  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BCC  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 657E                            _InitSchedTimer 64F6  
                         __initialization 2180               __size_of_saveNumberInMemory 001A  
                        __end_of_MdmCntSm 46A0                      __end_of_I2c_ReadData 2180  
                 Rtcc_RtcConfig@RtcConfig 007E                      __end_of_I2cSendMsgSm 4060  
                 LedStateMachine@LedPulse 0095                                _MyApp_Task 34F6  
                            __end_of_atoi 386E                              __end_of_main 6A38  
                     StringCompare@Result 0085                              __end_of_itoa 604E  
                  ??_LedPulseStateMachine 008D                     _control_signal_bitmap 01DE  
                            __end_of_utoa 4550                              __end_of_xtoi 34F6  
                __end_of_Rtcm_SetRtccDate 5A48                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 007D                          __end_of_ReadByte 6A6C  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03D2  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE49  
               __size_of_USBCtrlEPService 0094                            ?_triggerCmdFsm 0111  
                                  ??_atoi 0085                                    ??_main 00B0  
            __size_of_Uart_InitUartModule 030C                                    ??_itoa 0099  
                                  ??_utoa 0090                                    ??_xtoi 0085  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                        __end_of_TmrBInit 4B94                             ?_initPreamble 007D  
                              _ReceiveEvt 6524          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 69E0  
                          ?_StringCompare 007D                          __end_of_Terminal 05EC  
                    initFsm@isInitialized 0103                             ?_SetAckStatus 0001  
                       ?_Led_SetLedStatus 007D                                _OsTmr_Wait 5126  
                            _cdc_mem_type 01DF                        ??_Mcu_ConfigExtInt 007D  
                        addCmdFsm@smsText 0113                         CheckModem@Timeout 03F3  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3D44                _Uart_MdmGsmGprsReadService 3C7A  
              __end_of_UsbDevice_MainTask 6644                           getsUSBUSART@len 0086  
                    __end_of_getSetupCall 67BC                       ?_Mdm_RequestSmsData 0001  
                   __end_of_UartWriteByte 67DC                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5A48        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 62F6  
                             _GenerateEvt 6906                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                   triggerRelay@isRelayOn 0086                 Uart_Uart1RxIsr@UartRxData 002A  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 54C2                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 6524                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6AA0  
                              _UartConfig 031A                      __end_of_Mdm_MainTask 5CDA  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 5F82  
                                  _SmsLen 00D4                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5E14                                    ___lmul 5898  
                    _I2cSlv_ReceiveI2cMsg 60D6                        TurnOnModem@Counter 02DC  
                            ?_putUSBUSART 0083                                    ___wmul 65D2  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5CDA  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5A9C  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4C2A  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
               isMasterNumber@phoneNumber 0100                         _USBEnableEndpoint 5FC6  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                       addCmdFsm@isComplete 0115  
                                  _memcpy 5EAC                    __size_of_HttpGetMethod 04D0  
                                  _memset 6466                                    clear_0 2238  
                                  clear_1 224A                                    clear_2 2256  
                                  clear_3 2262                                    clear_4 226E  
                                  clear_5 227A                         parseCommand@F9021 FC22  
                                  clear_6 2286                                    clear_7 2292  
                                  clear_8 229E                                    clear_9 22AA  
                       parseCommand@F9017 FC2A                         parseCommand@F9019 FC26  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E6  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01EB  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01F1                        ?_USBEnableEndpoint 0085  
                          ??_initPreamble 007F                                    _strcat 57E4  
                                  _strcpy 6404                                    _strlen 6156  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 6288  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 4D52                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                              __pdataCOMRAM 0040  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03CC  
                     ModemEvtParser@F9112 03C7                       ModemEvtParser@F9114 03C2  
                     ModemEvtParser@F9116 04E0                              _CDCTxService 281C  
                     MdmCntSm@MdmCntState 002C                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 033C                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6A98  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0037  
                 __end_of_I2cSlv_MainTask 59F4                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6AAC  
                             _Mcu_Int1Isr 6AA8                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00B8                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0126                   delCmdFsm@receivedNumber 0111  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 6960                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 4F04                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0001                        _ExtInt1IsrCallback 02E4  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 22C8                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 6AA4  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FC  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5DC6                          ??_isMasterNumber 00B0  
         I2cSlv_QueryI2cData@TimeoutTimer 0349                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 56C6  
                          __pcstackBANK10 0A00                        __size_of_delCmdFsm 00A2  
                isMasterNumber@readBuffer 0102                     I2cDummyTx@DummyBuffer 01FD  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D8  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02E0                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 600A  
                             _InitNetwork 00DB                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK1 6AB2                              __pidataBANK2 6A1E  
                            __pidataBANK3 6210                              __pidataBANK4 6A44  
                            __pidataBANK5 5C3A                 __end_ofparseCommand@F9021 FC26  
               __end_ofparseCommand@F9017 FC2E                 __end_ofparseCommand@F9019 FC2A  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 6092                       __size_of_CheckModem 0152  
                         ??_triggerCmdFsm 00B0                __end_of_Uart_ClearRxBuffer 63D2  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008C  
                 addCmdFsm@numberInMemory 0116                  __size_of_InitializeTasks 0074  
                      __end_of_I2cDummyTx 686E               __end_of_USBCtrlTrfInHandler 4122  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 0074                       __end_of_Term_MainSm 135A  
               initGprsModem@currentState 01DA                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 694A                        __size_of_detectCmd 009C  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E5                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 003E                                _SystemInit 6436  
                              _cdc_notice 044F                     __end_of_Tmr_TmrBPrSet 3242  
                   __end_of_waitSetupCall 5D78                       __end_of_Rtcc_RtcIsr 6AA8  
                              _cdc_rx_len 00C7                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C5                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 62FC                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01E0                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4748          __end_of_GetLastInteractionNumber 6A44  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 657E  
                  _USBStdGetStatusHandler 4298                         __end_of_SendSmsSm 1BAA  
                   __size_of_Eeprom_Reset 0048       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01ED                            _Rtcc_RtcConfig 488C  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 0088  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6976               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 6210              getSetupCall@isCalledReceived 0083  
                               ?_ReadByte 0001                         MyApp_Task@Options 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                   __size_of_I2c_ReadData 015E                     __size_of_I2cSendMsgSm 00C4  
                     __end_of_Tmr_Tmr2Isr 66B0                               _SetBaudRate 5DC6  
                           ?_savePreamble 0001                     __end_of_findEmptySpot 5BE8  
               initGprsModem@modemCounter 03BE               __size_of_USBWakeFromSuspend 003A  
              SendSmsSm@SendSms_NextState 01EF                               _pBDTEntryIn 00B6  
        UartTxBufferStatus@TxBufferStatus 007F          __end_of_USBCtrlEPServiceComplete 3154  
                               ?_TmrBInit 007D                             _CheckTxStatus 6A6C  
                           ??_TurnOnModem 0080                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                  Uart_WriteStringLen@Index 0083  
                       ?_GetOsTickCounter 007D                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 007D                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3AE2                            _Rtcc_UnlockRtc 69C0  
                            _I2cBusStatus 01E7                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2CFA  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2022  
                       __end_of_addCmdFsm 4298                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4C2A  
                   __end_of_UpdateSchFlag 6852                              _EepromBuffer 04BB  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2F44  
                       __end_of_WriteByte 6A62                        _USBCheckStdRequest 35DA  
                       _configDescriptor1 FDAB                              _Eeprom_Reset 5EF4  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A7  
                            _Eeprom_Write 5B44                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 3796                         triggerRelay@F9003 03D0  
                     _USBStdSetCfgHandler 332A                         __end_of_delCmdFsm 488C  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E4  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 6552                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 492C  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2022  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 3F9C                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DC            __end_of_Pm_DsReleasePinControl 6A8E  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00E4                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E2                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 0028                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FB                       _I2cSlv_QueryI2cData 3942  
                                 _Led2Sts 01F9                                   _Led3Sts 01F7  
              __end_of_Sch_SchmIntService 6A1E                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C6  
                              ??_ReadByte 007D                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6A94  
                    __end_of_initPreamble 6836                    initEeprom@currentState 01D9  
                       __end_of_detectCmd 4A66                          _ComChecCompleted 0029  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 668C  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D8  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 53EA                    __end_of_Rtcc_UnlockRtc 69D0  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 698A                                _initEeprom 4F90  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 67FA                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 6934             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 501C                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 5306                                   ___lldiv 50A2  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                 triggerCmdFsm@isComplete 0113                                   ___lwdiv 5AF0  
                       ??_USBStallHandler 007D                                   ___lwmod 604E  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 679C  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6AA4                      __size_of_putUSBUSART 0022  
                                 __pcinit 2180                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     __end_of_TurnOnModem 5EAC                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0354  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDEE  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0091  
                             Terminal@Len 03B2                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6A2C                                   __ptext1 6436  
                                 __ptext2 6A4E                                   __ptext3 6A88  
                                 __ptext4 67DC                                   __ptext5 686E  
                                 __ptext6 657E                                   __ptext7 64F6  
                                 __ptext8 3D44                                   __ptext9 3154  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 47EA  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 4550                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 6496  
                                 _isdigit 6738            isNumberInMemory@memoryOpResult 010F  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 22B6  
                                 clear_11 22C2                          ___awmod@dividend 007D  
                       ??_InitializeTasks 03FE                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 01D3       __end_of_Tmr_RegisterTmr2IsrCallback 6A58  
             _Tmr_RegisterTmr2IsrCallback 6A4E                                   _isspace 65A8  
                            _Mdm_MainTask 5C8A                                   _isupper 66F4  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0493  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 242C                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 668C                                   _sprintf 3A14  
                                 _tolower 68D6           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6A00                          _HttpGetDataLocal 03A5  
                __end_of_Mdm_SetSmsFormat 5D2A                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 43FA                                   _toupper 68EE  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 22C8                              _getsUSBUSART 4B94  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DC               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC22       Irq_InitIntController@PerInt_LowPInt 007E  
               triggerCmdFsm@currentState 01D5                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC0E  
                          _ModemEvtParser 1D32                                   int_func 43FA  
                         _USB1msTickCount 0310                                 i1u1602_28 2562  
                               i1u1602_29 2576           _dummy_encapsulated_cmd_response 0379  
                               i1u1623_28 669C                  _GetLastInteractionNumber 6A38  
                               i1u1598_20 2442                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 68D6  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 6818  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 691E  
                     _ActivateRiDetection 003F                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 6404  
                           StringCopy@Len 0089                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 492C  
                      _UsbDevice_MainTask 6620                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6A94                 Eeprom_Reset@memoryAddress 00C4  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 3054                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E8                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 26D4                           _RtccIsrCallback 02E8  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 5292                      __end_of_parseCommand 3054  
              _USBStatusStageEnabledFlag1 00C8                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 66D2  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0300                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 699C  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 677C  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02EA  
                        _HttpGetMethodSts 01EC                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01E1                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0035                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB4  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D6                     __end_of_StopCondition 6A9C  
                __size_of_HighPriorityIsr 449E                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0370  
                               _Led2Blink 0367                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 035E              __end_of_USBTransferOnePacket 41E0  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0394  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 6934  
                               _Led2Pulse 038E                                 _Led3Pulse 0388  
                       _I2cSlv_SendI2cMsg 6194           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 04EA  
                          _Tmr_TmrBConfig 3D44                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 699C                         _OsAlrm_SetOsAlarm 3ED4  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5E14  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5E60                                 _ClipEvent 00DF  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 00DA  
                  _USBCtrlTrfSetupHandler 4F04                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 242C     __end_of_USBIncrement1msInternalTimers 66F4  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 66D2  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 58F0  
                          _CheckAckStatus 6A76                            __end_of___wmul 65FA  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 69AE  
                           __pidataCOMRAM 6AB0               triggerCmdFsm@numberInMemory 0114  
                  __size_of_UartWriteByte 0020                   addCmdFsm@receivedNumber 0111  
                          __end_of_memcpy 5EF4                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002B                            __end_of_memset 6496  
                      _UartTxBufferStatus 5D78                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 68BC                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E2  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6A10  
                               _MdmStatus 00D2                            __end_of_strcat 5840  
                          __end_of_strcpy 6436                            __end_of_strlen 6194  
                          __end_of_strtol 19F2                       start_initialization 2180  
         isNumberInMemory@currentPosition 0041                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 386E  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003B  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 639E  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4AFE                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 35DA                          _UpdateOsCounters 69F0  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3C7A                 __end_of_I2cSlv_SendI2cMsg 61D2  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4CBE                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 69E0  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3E0C                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 3F9C                    __end_of_Tmr_TmrBIrqSet 5E60  
                               _TaskTable 05A4                                 _RingEvent 00E0  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D5                     __end_of_isNumberValid 56C6  
            isMasterNumber@memoryOpResult 010F                         __size_of_ReadByte 000A  
                               _RtcConfig 03BA                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 5840  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 6552  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 6888  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6A80  
                                ??___lmul 0085                             _isxdigit$6680 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BCC                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 51A8                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03C2                isNumberInMemory@readBuffer 0102  
                             __pdataBANK4 04E0                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                   detectCmd@currentState 0095                     __end_of_triggerCmdFsm 521E  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                               _addCmdFsm 41E0                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5AF0                    __end_of_ConfigureModem 3942  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D7  
          __end_of_USBStdGetStatusHandler 434A                              _initPreamble 6818  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5C3A                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03FE  
            __size_of_USBCtrlTrfInHandler 00C2                             __pcstackBANK4 04EA  
                         RiSm@MdmDrvState 002D                              _SetAckStatus 6976  
                            _isalpha$6670 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 6A58                       __size_of_initEeprom 008C  
                            _isdigit$6404 007E                      ?_USBStdGetDscHandler 0001  
           UpdateSchFlag@InterruptCounter 02DE                            ??_triggerRelay 0085  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 6116  
                               _delCmdFsm 47EA       InitGprsNetwork@GprsNetInitNextState 00D1  
                 GetElapsedTime@StartTime 0081                             _UartWriteByte 67BC  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 62C2  
            __end_of_LedBlinkStateMachine 281C                               sprintf@flag 0083  
                    __size_of_Eeprom_Read 0054                           _USBStallHandler 5F82  
                              ?_SendSmsSm 0001                              _pBDTEntryOut 0306  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 00A0                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 686E                __end_of_USBCheckCDCRequest 43FA  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 5948  
                         ?_Tmr_TmrBIrqSet 007D                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 679C  
                            ??_StringCopy 008B                          _Led_SetLedStatus 64C6  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 675A                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_parseCommand 0110  
                  __size_of_waitSetupCall 004E                                 _detectCmd 49CA  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
             findEmptySpot@memoryOpResult 010D             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC0E                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 4F90                                 __ptext101 49CA  
                               __ptext110 47EA                                 __ptext102 2F44  
                               __ptext111 41E0                                 __ptext103 69E0  
                               __ptext120 5126                                 __ptext112 68BC  
                               __ptext104 6644                                 __ptext121 60D6  
                               __ptext113 5B44                                 __ptext105 6668  
                               __ptext130 1D32                                 __ptext122 675A  
                               __ptext114 5292                                 __ptext106 699C  
                           Terminal@Index 00A6                                 __ptext131 639E  
                               __ptext123 5A9C                                 __ptext115 54C2  
                               __ptext107 552C                                 __ptext140 45F8  
                               __ptext132 5BE8                                 __ptext124 5EF4  
                               __ptext116 5B96                                 __ptext108 6A38  
                               __ptext141 6A80                                 __ptext133 2A9A  
                               __ptext125 6194                                 __ptext117 5660  
                               __ptext109 6332                                 __ptext150 4DE6  
                               __ptext142 0DC8                                 __ptext134 386E  
                               __ptext126 5840                                 __ptext118 5A48  
                               __ptext151 3E0C                                 __ptext143 05EC  
                               __ptext135 0ABC                                 __ptext127 5E60  
                               __ptext119 3942                                 __ptext160 65D2  
                               __ptext152 69AE                                 __ptext144 61D2  
                               __ptext136 2962                                 __ptext128 19F2  
                               __ptext161 5378                                 __ptext153 6368  
                               __ptext145 6092                                 __ptext137 5898  
                               __ptext129 6116                                 __ptext170 6A98  
                               __ptext162 5DC6                                 __ptext154 46A0  
                               __ptext146 67BC                                 __ptext138 58F0  
                               __ptext171 6A9C                                 __ptext163 50A2  
                               __ptext155 3242                                 __ptext147 5D78  
                               __ptext139 2582                                 __ptext180 6A10  
                               __ptext172 6976                                 __ptext164 6552  
                               __ptext156 64C6                                 __ptext148 56C6  
                               __ptext181 6836                                 __ptext173 6A62  
                               __ptext165 3F9C                                 __ptext157 26D4  
                               __ptext149 5786                                 __ptext190 6A00  
                               __ptext182 69F0                                 __ptext174 6906  
                               __ptext166 6524                                 __ptext158 5AF0  
                               __ptext191 3C7A                                 __ptext183 242C  
                               __ptext175 6AA0                                 __ptext167 1EB4  
                               __ptext159 3ED4                                 __ptext192 6960  
                               __ptext184 65FA                                 __ptext176 6A6C  
                               __ptext168 2022                                 __ptext193 6AA4  
                               __ptext185 5948                                 __ptext177 6A76  
                               __ptext169 6A58                                 __ptext194 6AA8  
                               __ptext186 6852                                 __ptext195 6AAC  
                               __ptext187 62C2                                 __ptext179 668C  
                                ?___awmod 007D                        _Sch_SchmIntService 6A10  
                               __ptext196 0000                                 __ptext188 694A  
                         _InitializeTasks 521E                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                   findEmptySpot@readBuffer 0100  
                         _CallClosedEvent 003C                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                __size_of_Mdm_HangPhoneCall 0012  
                 isNumberValid@isNumberOk 0080                   __size_of_isMasterNumber 006A  
                  __size_ofi2_GenerateEvt 0016             I2cSlv_QueryI2cData@QueryTimer 04D5  
                              ?_addCmdFsm 0111                   Eeprom_Write@WriteBuffer 008F  
                        ??_Rtcc_RtcConfig 0080                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 039A                       Mdm_MainTask@Options 0001  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 4122  
                         ?_ConfigureModem 0001                   ??_Irq_InitIntController 007F  
      Uart_MdmGsmGprsReadService@UartData 0004                                  ?_initFsm 0001  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                       ??_GetCallerNumber 0085                                  ?_isalpha 0001  
                            ??_SystemInit 00AB                                  ?_isdigit 0001  
                             _I2cTxPacket 03A0            InitializeTasks@ActiveTaskIndex 04EA  
                  __size_of_findEmptySpot 0052                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                            _Mdm_GetSmsData 552C  
                    InitGprsNetwork@Index 0132                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 02EC                ??_GetLastInteractionNumber 007F  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 55FA                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 55FA  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 5728  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E1  
                         Terminal@SwTimer 04CA                  initEeprom@memoryOpResult 0101  
                                ?_sprintf 007D                                  ?_tolower 0001  
               __size_of_Rtcm_SetRtccDate 0054                            _setupCallTicks 03C0  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                ?_delCmdFsm 0111  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02DA  
                        _OsTmr_StartTimer 5786                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E                  __end_of_isNumberInMemory 5306  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 007D  
                           i1_GenerateEvt 694A                __end_of_Mcu_StartSystemPll 67FA  
                            _parseCommand 2F44                              _PhoneNumbLen 00D3  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 66B0  
                           _Rtcm_MainTask 4E76                            ___wmul@product 0081  
                ModemEvtParser@ClipString 0099                          SendSmsSm@SwTimer 03E8  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 01F3  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 5378                         _IncomingCallEvent 003D  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 6466                                  _RCONbits 000FD0  
                              ?_detectCmd 0001                             ??_putUSBUSART 0086  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0040  
              _USBDeferINDataStagePackets 0026                        ?_I2c_InitI2cModule 00A2  
                   ??_Uart_WriteStringLen 0083                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001                     __size_of_savePreamble 001A  
            __end_of_OsTmr_GetTimerStatus 4E76                                  _UCONbits 000F65  
                                _SSP2STAT 000F73                  ModemEvtParser@CompareIdx 00A8  
                    _USBConfigureEndpoint 4A66                     delCmdFsm@currentState 01D6  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                      _saveNumberInMemory 68BC                     SetUartBaudRate@Module 0099  
          __end_of_OsAlrm_ProcessOsAlarms 2582                     ??_OsAlrm_ClearOsAlarm 0019  
                       ___wmul@multiplier 007D                     ?_USBTransferOnePacket 007D  
                                i1___wmul 65FA                     __end_of_initGprsModem 4DE6  
                     ??_I2c_InitI2cModule 00A4                            delCmdFsm@F9004 FC0F  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 6A88  
                  __end_of_Mdm_GetSmsData 5594                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 0089                    __size_of_Mdm_DrvMainFn 0006  
                            _RemoteWakeup 01E3                                  _ApnLocal 02D6  
                          _StartCondition 6A9C                        SetAckStatus@AckSts 007D  
               __size_of_MdmHttp_MainTask 0046                    __size_of_Mdm_IsRinging 0024  
                        StringCompare@Len 0081               HttpGetMethod@GetMethodState 01E9  
                           _Tmr_TmrBPrSet 3154                             _waitSetupCall 5D2A  
                     ?_saveNumberInMemory 0096                         _NewStringReceived 003A  
                            _isspace$6673 007E                          _UartSetConfigLow 58F0  
                                _GetSmsSm 2A9A                   __end_of_USBStallHandler 5FC6  
                    Mdm_DrvMainFn@Options 0001                            _memoryPreamble 03AA  
                   __size_of_Rtcc_LockRtc 0010                                  _ConnWait 03DD  
                                _MdmCntSm 45F8                         ___lmul@multiplier 007D  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 2194  
                               copy_data1 21B4                                 copy_data2 21D4  
                               copy_data3 220C              __end_of_LedPulseStateMachine 332A  
                  I2cSlv_SendI2cMsg@TxSts 0084               ??_USBCtrlEPAllowStatusStage 007D  
             __end_of_USBStdSetCfgHandler 3410                            ?i1_GenerateEvt 0019  
                Tmr_TmrBConfig@TmrBConfig 00A0                                  _OsAlarms 0600  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0081  
            LedBlinkStateMachine@LedBlink 008A                                  _ReadByte 6A62  
                           i2_GenerateEvt 6960                           ??_UartSetConfig 007D  
                             ??_SendSmsSm 009B                        __end_of_device_dsc FE5B  
               __end_of_I2c_InitI2cModule 53EA                                  _MsgReady FE32  
                         ??_Term_MainTask 00A7                              _savePreamble 68A2  
                 __end_of_InitializeTasks 5292                initGprsModem@isInitialized 0099  
                 ?_USBCtrlTrfSetupHandler 0001                            isNumberValid@i 0081  
                           _findEmptySpot 5B96               __end_of_I2cSlv_QueryI2cData 3A14  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 4AFE                      __size_of_SetBaudRate 004E  
                            ??_initEeprom 00B0                      ??_saveNumberInMemory 0098  
                            ?_TurnOnModem 0001                            _LowPriorityIsr 0018  
                               memcpy@tmp 0083                      Tmr_TmrBPrSet@Divisor 009C  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0081  
             __end_of_Uart_InitUartModule 0DC8                                  _SmsEvent 00DE  
                         _SetUartBaudRate 2962              i1I2cSlv_SendI2cMsg@SlaveAddr 001E  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0080                     SetBaudRate@McuClockHz 009A  
                   ?_USBConfigureEndpoint 007D              OsAlrm_ClearOsAlarm@OsAlarmId 0019  
                           _I2c_WriteData 1EB4                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 6A00  
                    __end_of_triggerRelay 6332                          __size_of___lldiv 0084  
                       Terminal@SlaveAddr 02EE                       OsTmr_Wait@WaitTimer 009B  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 009B  
                  __end_ofdelCmdFsm@F9004 FC1C                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                             ??_addCmdFsm 00B0                             _UpdateSchFlag 6836  
                     __end_of_putUSBUSART 6738                               _line_coding 0381  
                            _Rtcc_LockRtc 69D0              I2cSlv_QueryI2cData@SlaveAddr 00A8  
                    _LedBlinkStateMachine 26D4               triggerCmdFsm@receivedNumber 0111  
                  __end_of_StartCondition 6AA0                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F0  
               Rtcm_GetRtccDate@LocalDate 008A                  parseCommand@addNumberCmd 0088  
                         ?_Mdm_GetSmsData 008F                  I2c_WriteData@WriteStatus 0033  
                            _isupper$6676 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0031                            ?_Tmr_TmrBPrSet 0096  
                        __size_of_initFsm 00A8                            ?_waitSetupCall 0001  
                        ??_ModemEvtParser 008F                          _GetOsTickCounter 69AE  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03AE                  ModemEvtParser@RingString 00A3  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                                  __ptext10 5E14  
                                __ptext11 677C                                  __ptext20 6620  
                                __ptext12 4AFE                                  __ptext21 5F3C  
                                __ptext13 67FA                           ??_UartWriteByte 007E  
                                __ptext30 63D2                                  __ptext22 5C8A  
                                __ptext14 2CFA                                  __ptext31 5F82  
                                __ptext23 59A0                                  __ptext15 521E  
                                __ptext40 332A                                  __ptext32 66D2  
                                __ptext24 6A8E                                  __ptext16 34F6  
                                __ptext41 4298                                  __ptext33 22D6  
                                __ptext25 66B0                                  __ptext17 6888  
                                __ptext50 2E20                                  __ptext42 2BCC  
                                __ptext34 4C2A                                  __ptext26 698A  
                                __ptext18 4E76                                  __ptext51 3BAE  
                                __ptext43 135A                                  __ptext35 5EAC  
                                __ptext27 6A94                                  __ptext19 3AE2  
                                __ptext60 00D0                                  __ptext52 4060  
                                __ptext44 5728                                  __ptext36 4F04  
                                __ptext28 1BAA                                  __ptext61 3410  
                                __ptext53 36BE                                  __ptext45 434A  
                                __ptext37 3054                                  __ptext29 6288  
                                __ptext70 6716                                  __ptext62 68D6  
                                __ptext54 281C                                  __ptext46 53EA  
                                __ptext38 492C                                  __ptext71 600A  
                                __ptext63 624C                                  __ptext55 10B6  
                                __ptext47 5FC6                                  __ptext39 35DA  
                                __ptext80 15EE                                  __ptext72 44A6  
                                __ptext64 181C                                  __ptext56 6156  
                                __ptext48 4A66                                  __ptext81 5306  
                                __ptext73 604E                                  __ptext65 68EE  
                                __ptext57 57E4                                  __ptext49 5594  
                                __ptext90 51A8                                  __ptext82 501C  
                                __ptext74 4B94                                  __ptext66 65A8  
                                __ptext58 3A14                                  __ptext91 62FC  
                                __ptext83 69D0                                  __ptext75 4122  
                                __ptext67 6496                                  __ptext59 6466  
                                __ptext92 4550                                  __ptext84 55FA  
                                __ptext76 3796                                  __ptext68 66F4  
                                __ptext93 5D2A                                  __ptext85 4CBE  
                                __ptext77 6738                                  __ptext69 6404  
                                __ptext94 679C                                  __ptext86 691E  
                                __ptext78 59F4                                  __ptext95 68A2  
                                __ptext87 488C                                  __ptext79 69C0  
                                __ptext96 6818                                  __ptext88 6934  
                                __ptext97 4D52                                  __ptext89 5456  
                                __ptext98 4748                                  __ptext99 5CDA  
                        __size_of_isupper 0022                   initEeprom@addressToRead 0100  
                              _I2cDummyTx 6852                    Tmr_TmrBIrqSet@Priority 007D  
                      __end_of_initEeprom 501C                     __end_of_HttpGetMethod 0ABC  
                    delCmdFsm@emptyNumber 0115                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                               ??_delCmdFsm 00B0  
                               isxdigit@c 0082                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                           triggerRelay@res 0085  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 002E  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 6644               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4F90                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
               Mdm_GetSmsData@MessageText 008F                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                             __size_of_xtoi 00E6  
                  ??_I2cSlv_I2cReadMsgSts 0081                            ?_findEmptySpot 0001  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6A76  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 6A8E  
                      ??_USBCtrlEPService 0097                                  _isxdigit 624C  
                           _Mdm_IsRinging 6668                       _USBCtrlTrfInHandler 4060  
                I2c_ReadData@I2cReadState 0032                __end_of_Mdm_RequestSmsData 69F0  
                             ??_detectCmd 0095                     __end_of_ScheduleTasks 2E20  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 01C9                      _USBCtrlTrfOutHandler 5594  
                     Led_SetLedStatus@Led 007E                                  int$flags 0042  
                              strtol@base 008D                            ?_I2c_WriteData 007E  
                                atoi@sign 0087                         ??_I2cSlv_MainTask 00A6  
                         StringCopy@Index 008D                 _USBCtrlEPAllowStatusStage 3BAE  
                     ??_Mdm_IsSmsReceived 0081                            _receivedNumber 032F  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 03FE  
                              strtol@sign 0093                           Term_MainSm@Data 0461  
                     delCmdFsm@isComplete 0122                      __size_of_RtccIrqInit 0016  
               __size_of_Uart_WriteString 003E                    ??_USBTransferOnePacket 0081  
                          _isMasterNumber 54C2                            ?_UpdateSchFlag 0001  
                  __size_of_StopCondition 0004                     ?_LedBlinkStateMachine 008A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 62C2  
                __end_of_Mcu_ConfigExtInt 6888                             ?_Eeprom_Reset 0001  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00C9  
                CDCTxService@byte_to_send 0085                             ?_Eeprom_Write 008F  
           I2c_WriteData@TentativeCounter 0034                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 677C                  __end_of_Led_SetLedStatus 64F6  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 59F4  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 6668  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    parseCommand@resetCmd 0090                      _OsTmr_GetTimerStatus 4DE6  
                               sprintf@ap 0084                                 sprintf@cp 0087  
                               sprintf@sp 007D                         TmrBInit@Prescaler 007D  
                    __size_of_Tmr_Tmr2Isr 0024                    __size_of_USBDeviceInit 0156  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5786  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 008F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0089  
         _USER_USB_CALLBACK_EVENT_HANDLER 5728                   Rtcc_SetRtcStatus@Status 007D  
                        ___lwmod@dividend 007D                   __end_of_SetUartBaudRate 2A9A  
                                isspace@c 007F                          ___lldiv@dividend 0089  
                GsmGprsTerminal@UsbBuffer 0800                      ?i1_I2cSlv_SendI2cMsg 001C  
              __size_of_I2c_InitI2cModule 0072                            ?_Mdm_DrvMainFn 0001  
                        ??_CheckAckStatus 007D                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084                    MyApp_Task@currentState 01DB  
          __size_of_Uart_WriteConstString 0044                   ModemEvtParser@SmsString 009E  
                          ??_Led_MainTask 009A             __end_of_Uart_WriteConstString 60D6  
                           OsTmr_Wait@Ret 00A1                         OsTmr_Wait@DelayMs 009D  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 007E  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                         _GetCallerNumber 6332                  __end_of_Rtcm_GetRtccDate 5660  
                             _putUSBUSART 6716                 Eeprom_Write@CommandLength 0095  
                     _USBCtrlTrfRxService 2E20                    __end_of_isMasterNumber 552C  
                        ??_ConfigureModem 00A2                    Rtcc_SetRtccValue@Value 0085  
                      _USBWakeFromSuspend 6288                             ?_getSetupCall 0001  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 57E4  
                    _LedPulseStateMachine 3242                        _USBCheckCDCRequest 434A  
                     _USBCtrlTrfTxService 36BE                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                            ??_Eeprom_Reset 0085  
                              _RTCCFGbits 000F3F               __size_of_Uart_ClearRxBuffer 0034  
                           _isMemoryEmpty 01FE                            ??_Eeprom_Write 0092  
                        _Rtcc_AlarmConfig 5456                           ??_Tmr_TmrBPrSet 009A  
                         ??_waitSetupCall 0093                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01DD  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 5F3C  
                  __size_of_isNumberValid 0066                            ??_I2c_ReadData 0082  
                          ??_I2cSendMsgSm 0084             __end_of_Irq_InitIntController 65A8  
                   ReceiveEvt@EventStatus 0080              ?_Tmr_RegisterTmr2IsrCallback 007D  
                 delCmdFsm@numberInMemory 0123                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                                  xtoi@sign 0087  
                  _NewMdmEvtParserRequest 0039       Uart_MdmGsmGprsReadService@RxCounter 0023  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 0084  
                           ??_Eeprom_Read 00AC                  UartTxBufferStatus@Module 007E  
                   ?_OsTmr_GetTimerStatus 0095             SetUartBaudRate@DivisionFactor 009C  
          I2cSlv_ReceiveI2cMsg@DataLenght 0083                             ??_GenerateEvt 007F  
                         _LedStateMachine 46A0          Uart_MdmGsmGprsReadService@Module 0001  
                         TmrBInit@TmrNumb 0080                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001              ??_Uart_MdmGsmGprsReadService 0005  
                         ??_findEmptySpot 00B0                             _StopCondition 6A98  
                   ??i1_I2cSlv_SendI2cMsg 0020                         ?_isNumberInMemory 0100  
                  Led_SetLedStatus@LedSts 007D              _USBStatusStageTimeoutCounter 00CA  
                        Mdm_IsRinging@Ret 0081                    __size_of_triggerCmdFsm 0076  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 639E  
                    __end_of_CDCTxService 2962                        ??_isNumberInMemory 00B0  
                    ??_USBCheckCDCRequest 007D                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FC2E                     __size_of_triggerRelay 0036  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F2                   _UsbMasterPhoneNumberLen 0318  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 698A  
