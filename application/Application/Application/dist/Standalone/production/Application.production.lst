

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 20 08:37:41 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    29                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    30                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	text0,global,reloc=2,class=CODE,delta=1
    36                           	psect	text1,global,reloc=2,class=CODE,delta=1
    37                           	psect	text2,global,reloc=2,class=CODE,delta=1
    38                           	psect	text3,global,reloc=2,class=CODE,delta=1
    39                           	psect	text4,global,reloc=2,class=CODE,delta=1
    40                           	psect	text5,global,reloc=2,class=CODE,delta=1
    41                           	psect	text6,global,reloc=2,class=CODE,delta=1
    42                           	psect	text7,global,reloc=2,class=CODE,delta=1
    43                           	psect	text8,global,reloc=2,class=CODE,delta=1
    44                           	psect	text9,global,reloc=2,class=CODE,delta=1
    45                           	psect	text10,global,reloc=2,class=CODE,delta=1
    46                           	psect	text11,global,reloc=2,class=CODE,delta=1
    47                           	psect	text12,global,reloc=2,class=CODE,delta=1
    48                           	psect	text13,global,reloc=2,class=CODE,delta=1
    49                           	psect	text14,global,reloc=2,class=CODE,delta=1
    50                           	psect	text15,global,reloc=2,class=CODE,delta=1
    51                           	psect	text16,global,reloc=2,class=CODE,delta=1
    52                           	psect	text17,global,reloc=2,class=CODE,delta=1
    53                           	psect	text18,global,reloc=2,class=CODE,delta=1
    54                           	psect	text19,global,reloc=2,class=CODE,delta=1
    55                           	psect	text20,global,reloc=2,class=CODE,delta=1
    56                           	psect	text21,global,reloc=2,class=CODE,delta=1
    57                           	psect	text22,global,reloc=2,class=CODE,delta=1
    58                           	psect	text23,global,reloc=2,class=CODE,delta=1
    59                           	psect	text24,global,reloc=2,class=CODE,delta=1
    60                           	psect	text25,global,reloc=2,class=CODE,delta=1
    61                           	psect	text26,global,reloc=2,class=CODE,delta=1
    62                           	psect	text27,global,reloc=2,class=CODE,delta=1
    63                           	psect	text28,global,reloc=2,class=CODE,delta=1
    64                           	psect	text29,global,reloc=2,class=CODE,delta=1
    65                           	psect	text30,global,reloc=2,class=CODE,delta=1
    66                           	psect	text31,global,reloc=2,class=CODE,delta=1
    67                           	psect	text32,global,reloc=2,class=CODE,delta=1
    68                           	psect	text33,global,reloc=2,class=CODE,delta=1
    69                           	psect	text34,global,reloc=2,class=CODE,delta=1
    70                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text36,global,reloc=2,class=CODE,delta=1
    72                           	psect	text37,global,reloc=2,class=CODE,delta=1
    73                           	psect	text38,global,reloc=2,class=CODE,delta=1
    74                           	psect	text39,global,reloc=2,class=CODE,delta=1
    75                           	psect	text40,global,reloc=2,class=CODE,delta=1
    76                           	psect	text41,global,reloc=2,class=CODE,delta=1
    77                           	psect	text42,global,reloc=2,class=CODE,delta=1
    78                           	psect	text43,global,reloc=2,class=CODE,delta=1
    79                           	psect	text44,global,reloc=2,class=CODE,delta=1
    80                           	psect	text45,global,reloc=2,class=CODE,delta=1
    81                           	psect	text46,global,reloc=2,class=CODE,delta=1
    82                           	psect	text47,global,reloc=2,class=CODE,delta=1
    83                           	psect	text48,global,reloc=2,class=CODE,delta=1
    84                           	psect	text49,global,reloc=2,class=CODE,delta=1
    85                           	psect	text50,global,reloc=2,class=CODE,delta=1
    86                           	psect	text51,global,reloc=2,class=CODE,delta=1
    87                           	psect	text52,global,reloc=2,class=CODE,delta=1
    88                           	psect	text53,global,reloc=2,class=CODE,delta=1
    89                           	psect	text54,global,reloc=2,class=CODE,delta=1
    90                           	psect	text55,global,reloc=2,class=CODE,delta=1
    91                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text58,global,reloc=2,class=CODE,delta=1
    94                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text60,global,reloc=2,class=CODE,delta=1
    96                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text70,global,reloc=2,class=CODE,delta=1
   106                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text74,global,reloc=2,class=CODE,delta=1
   110                           	psect	text75,global,reloc=2,class=CODE,delta=1
   111                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text78,global,reloc=2,class=CODE,delta=1
   114                           	psect	text79,global,reloc=2,class=CODE,delta=1
   115                           	psect	text80,global,reloc=2,class=CODE,delta=1
   116                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text83,global,reloc=2,class=CODE,delta=1
   119                           	psect	text84,global,reloc=2,class=CODE,delta=1
   120                           	psect	text85,global,reloc=2,class=CODE,delta=1
   121                           	psect	text86,global,reloc=2,class=CODE,delta=1
   122                           	psect	text87,global,reloc=2,class=CODE,delta=1
   123                           	psect	text88,global,reloc=2,class=CODE,delta=1
   124                           	psect	text89,global,reloc=2,class=CODE,delta=1
   125                           	psect	text90,global,reloc=2,class=CODE,delta=1
   126                           	psect	text91,global,reloc=2,class=CODE,delta=1
   127                           	psect	text92,global,reloc=2,class=CODE,delta=1
   128                           	psect	text93,global,reloc=2,class=CODE,delta=1
   129                           	psect	text94,global,reloc=2,class=CODE,delta=1
   130                           	psect	text95,global,reloc=2,class=CODE,delta=1
   131                           	psect	text96,global,reloc=2,class=CODE,delta=1
   132                           	psect	text97,global,reloc=2,class=CODE,delta=1
   133                           	psect	text98,global,reloc=2,class=CODE,delta=1
   134                           	psect	text99,global,reloc=2,class=CODE,delta=1
   135                           	psect	text100,global,reloc=2,class=CODE,delta=1
   136                           	psect	text101,global,reloc=2,class=CODE,delta=1
   137                           	psect	text102,global,reloc=2,class=CODE,delta=1
   138                           	psect	text103,global,reloc=2,class=CODE,delta=1
   139                           	psect	text104,global,reloc=2,class=CODE,delta=1
   140                           	psect	text105,global,reloc=2,class=CODE,delta=1
   141                           	psect	text106,global,reloc=2,class=CODE,delta=1
   142                           	psect	text107,global,reloc=2,class=CODE,delta=1
   143                           	psect	text108,global,reloc=2,class=CODE,delta=1
   144                           	psect	text109,global,reloc=2,class=CODE,delta=1
   145                           	psect	text110,global,reloc=2,class=CODE,delta=1
   146                           	psect	text111,global,reloc=2,class=CODE,delta=1
   147                           	psect	text112,global,reloc=2,class=CODE,delta=1
   148                           	psect	text113,global,reloc=2,class=CODE,delta=1
   149                           	psect	text114,global,reloc=2,class=CODE,delta=1
   150                           	psect	text115,global,reloc=2,class=CODE,delta=1
   151                           	psect	text116,global,reloc=2,class=CODE,delta=1
   152                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   153                           	psect	text118,global,reloc=2,class=CODE,delta=1
   154                           	psect	text119,global,reloc=2,class=CODE,delta=1
   155                           	psect	text120,global,reloc=2,class=CODE,delta=1
   156                           	psect	text121,global,reloc=2,class=CODE,delta=1
   157                           	psect	text122,global,reloc=2,class=CODE,delta=1
   158                           	psect	text123,global,reloc=2,class=CODE,delta=1
   159                           	psect	text124,global,reloc=2,class=CODE,delta=1
   160                           	psect	text125,global,reloc=2,class=CODE,delta=1
   161                           	psect	text126,global,reloc=2,class=CODE,delta=1
   162                           	psect	text127,global,reloc=2,class=CODE,delta=1
   163                           	psect	text128,global,reloc=2,class=CODE,delta=1
   164                           	psect	text129,global,reloc=2,class=CODE,delta=1
   165                           	psect	text130,global,reloc=2,class=CODE,delta=1
   166                           	psect	text131,global,reloc=2,class=CODE,delta=1
   167                           	psect	text132,global,reloc=2,class=CODE,delta=1
   168                           	psect	text133,global,reloc=2,class=CODE,delta=1
   169                           	psect	text134,global,reloc=2,class=CODE,delta=1
   170                           	psect	text135,global,reloc=2,class=CODE,delta=1
   171                           	psect	text136,global,reloc=2,class=CODE,delta=1
   172                           	psect	text137,global,reloc=2,class=CODE,delta=1
   173                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text139,global,reloc=2,class=CODE,delta=1
   175                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text141,global,reloc=2,class=CODE,delta=1
   177                           	psect	text142,global,reloc=2,class=CODE,delta=1
   178                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text144,global,reloc=2,class=CODE,delta=1
   180                           	psect	text145,global,reloc=2,class=CODE,delta=1
   181                           	psect	text146,global,reloc=2,class=CODE,delta=1
   182                           	psect	text147,global,reloc=2,class=CODE,delta=1
   183                           	psect	text148,global,reloc=2,class=CODE,delta=1
   184                           	psect	text149,global,reloc=2,class=CODE,delta=1
   185                           	psect	text150,global,reloc=2,class=CODE,delta=1
   186                           	psect	text151,global,reloc=2,class=CODE,delta=1
   187                           	psect	text152,global,reloc=2,class=CODE,delta=1
   188                           	psect	text153,global,reloc=2,class=CODE,delta=1
   189                           	psect	text154,global,reloc=2,class=CODE,delta=1
   190                           	psect	text155,global,reloc=2,class=CODE,delta=1
   191                           	psect	text156,global,reloc=2,class=CODE,delta=1
   192                           	psect	text157,global,reloc=2,class=CODE,delta=1
   193                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   194                           	psect	text159,global,reloc=2,class=CODE,delta=1
   195                           	psect	text160,global,reloc=2,class=CODE,delta=1
   196                           	psect	text161,global,reloc=2,class=CODE,delta=1
   197                           	psect	text162,global,reloc=2,class=CODE,delta=1
   198                           	psect	text163,global,reloc=2,class=CODE,delta=1
   199                           	psect	text164,global,reloc=2,class=CODE,delta=1
   200                           	psect	text165,global,reloc=2,class=CODE,delta=1
   201                           	psect	text166,global,reloc=2,class=CODE,delta=1
   202                           	psect	text167,global,reloc=2,class=CODE,delta=1
   203                           	psect	text168,global,reloc=2,class=CODE,delta=1
   204                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   205                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   206                           	psect	text170,global,reloc=2,class=CODE,delta=1
   207                           	psect	text171,global,reloc=2,class=CODE,delta=1
   208                           	psect	text172,global,reloc=2,class=CODE,delta=1
   209                           	psect	text173,global,reloc=2,class=CODE,delta=1
   210                           	psect	text174,global,reloc=2,class=CODE,delta=1
   211                           	psect	text175,global,reloc=2,class=CODE,delta=1
   212                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   215                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   216                           	dabs	1,0x400,48,_BDT
   217                           	dabs	1,0x438,8,_CtrlTrfData
   218                           	dabs	1,0x430,8,_SetupPkt
   219  0000                     
   220                           ; Version 1.45
   221                           ; Generated 16/11/2017 GMT
   222                           ; 
   223                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution.
   237                           ; 
   238                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   239                           ;        software without specific prior written permission.
   240                           ; 
   241                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   242                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   243                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   244                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   245                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   246                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   247                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   248                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   249                           ; 
   250                           ; 
   251                           ; Code-generator required, PIC18F46J50 Definitions
   252                           ; 
   253                           ; SFR Addresses
   254  0000                     
   255                           	psect	idataBANK1
   256  0062C2                     __pidataBANK1:
   257                           	opt stack 0
   258                           
   259                           ;initializer for InitGprsNetwork@GprsInitSts
   260  0062C2  01                 	db	1
   261                           
   262                           	psect	idataBANK2
   263  006246                     __pidataBANK2:
   264                           	opt stack 0
   265                           
   266                           ;initializer for Terminal@EchoOption
   267  006246  01                 	db	1
   268                           
   269                           ;initializer for _MainSystemTimebaseFlag
   270  006247  01                 	db	1
   271                           
   272                           ;initializer for _ConnTimeout
   273  006248  00                 	db	0
   274  006249  01                 	db	1
   275  00624A  0000               	dw	0
   276  00624C  0000               	dw	0
   277  00624E  0000               	dw	0
   278  006250  0000               	dw	0
   279  006252  00                 	db	0
   280                           
   281                           	psect	idataBANK3
   282  00594E                     __pidataBANK3:
   283                           	opt stack 0
   284                           
   285                           ;initializer for ModemEvtParser@F9111
   286  00594E  2B                 	db	43
   287  00594F  43                 	db	67
   288  005950  4D                 	db	77
   289  005951  54                 	db	84
   290  005952  49                 	db	73
   291                           
   292                           ;initializer for ModemEvtParser@F9109
   293  005953  2B                 	db	43
   294  005954  43                 	db	67
   295  005955  4C                 	db	76
   296  005956  49                 	db	73
   297  005957  50                 	db	80
   298                           
   299                           ;initializer for ModemEvtParser@F9107
   300  005958  52                 	db	82
   301  005959  49                 	db	73
   302  00595A  4E                 	db	78
   303  00595B  47                 	db	71
   304                           
   305                           ;initializer for MyApp_Task@F9008
   306  00595C  63                 	db	99
   307  00595D  61                 	db	97
   308  00595E  74                 	db	116
   309                           
   310                           ;initializer for triggerRelay@F8983
   311  00595F  50                 	db	80
   312  005960  00                 	db	0
   313                           
   314                           ;initializer for Term_MainSm@TermDelay
   315  005961  01                 	db	1
   316  005962  01                 	db	1
   317  005963  0000               	dw	0
   318  005965  0000               	dw	0
   319  005967  0000               	dw	0
   320  005969  0000               	dw	0
   321  00596B  00                 	db	0
   322                           
   323                           ;initializer for _ConnWait
   324  00596C  00                 	db	0
   325  00596D  01                 	db	1
   326  00596E  0000               	dw	0
   327  005970  0000               	dw	0
   328  005972  0000               	dw	0
   329  005974  0000               	dw	0
   330  005976  00                 	db	0
   331                           
   332                           ;initializer for SendSmsSm@SwTimer
   333  005977  01                 	db	1
   334  005978  01                 	db	1
   335  005979  0000               	dw	0
   336  00597B  0000               	dw	0
   337  00597D  0000               	dw	0
   338  00597F  0000               	dw	0
   339  005981  00                 	db	0
   340                           
   341                           ;initializer for CheckModem@Timeout
   342  005982  00                 	db	0
   343  005983  01                 	db	1
   344  005984  0000               	dw	0
   345  005986  0000               	dw	0
   346  005988  0000               	dw	0
   347  00598A  0000               	dw	0
   348  00598C  00                 	db	0
   349                           
   350                           ;initializer for MyApp_Task@blinkTicks
   351  00598D  FFFF               	dw	65535
   352                           
   353                           	psect	idataBANK4
   354  0060E6                     __pidataBANK4:
   355                           	opt stack 0
   356                           
   357                           ;initializer for ModemEvtParser@F9113
   358  0060E6  43                 	db	67
   359  0060E7  61                 	db	97
   360  0060E8  6C                 	db	108
   361  0060E9  6C                 	db	108
   362  0060EA  20                 	db	32
   363  0060EB  52                 	db	82
   364  0060EC  65                 	db	101
   365  0060ED  61                 	db	97
   366  0060EE  64                 	db	100
   367  0060EF  79                 	db	121
   368                           
   369                           ;initializer for MyApp_Task@phone
   370  0060F0  2B                 	db	43
   371  0060F1  33                 	db	51
   372  0060F2  39                 	db	57
   373  0060F3  30                 	db	48
   374  0060F4  31                 	db	49
   375  0060F5  32                 	db	50
   376  0060F6  33                 	db	51
   377  0060F7  34                 	db	52
   378  0060F8  35                 	db	53
   379  0060F9  36                 	db	54
   380  0060FA  37                 	db	55
   381  0060FB  38                 	db	56
   382  0060FC  39                 	db	57
   383  0060FD  00                 	db	0
   384                           
   385                           	psect	idataBANK5
   386  00554E                     __pidataBANK5:
   387                           	opt stack 0
   388                           
   389                           ;initializer for _TaskTable
   390  00554E  A0                 	db	low _Mdm_DrvMainFn
   391  00554F  62                 	db	high _Mdm_DrvMainFn
   392  005550  00                 	db	0
   393  005551  0000               	dw	0
   394  005553  000A               	dw	10
   395  005555  00                 	db	0
   396  005556  58                 	db	low _I2cSlv_MainTask
   397  005557  53                 	db	high _I2cSlv_MainTask
   398  005558  00                 	db	0
   399  005559  0000               	dw	0
   400  00555B  0001               	dw	1
   401  00555D  00                 	db	0
   402  00555E  9E                 	db	low _Mdm_MainTask
   403  00555F  55                 	db	high _Mdm_MainTask
   404  005560  00                 	db	0
   405  005561  0000               	dw	0
   406  005563  0001               	dw	1
   407  005565  00                 	db	0
   408  005566  6E                 	db	low _MdmHttp_MainTask
   409  005567  57                 	db	high _MdmHttp_MainTask
   410  005568  00                 	db	0
   411  005569  0000               	dw	0
   412  00556B  0001               	dw	1
   413  00556D  00                 	db	0
   414  00556E  A2                 	db	low _UsbDevice_MainTask
   415  00556F  5E                 	db	high _UsbDevice_MainTask
   416  005570  00                 	db	0
   417  005571  0000               	dw	0
   418  005573  0001               	dw	1
   419  005575  00                 	db	0
   420  005576  32                 	db	low _Wdg_MainTask
   421  005577  5F                 	db	high _Wdg_MainTask
   422  005578  00                 	db	0
   423  005579  0000               	dw	0
   424  00557B  0064               	dw	100
   425  00557D  00                 	db	0
   426  00557E  E0                 	db	low _Led_MainTask
   427  00557F  39                 	db	high _Led_MainTask
   428  005580  00                 	db	0
   429  005581  0000               	dw	0
   430  005583  0032               	dw	50
   431  005585  00                 	db	0
   432  005586  E0                 	db	low _Rtcm_MainTask
   433  005587  4A                 	db	high _Rtcm_MainTask
   434  005588  00                 	db	0
   435  005589  0000               	dw	0
   436  00558B  0064               	dw	100
   437  00558D  00                 	db	0
   438  00558E  CC                 	db	low _Term_MainTask
   439  00558F  60                 	db	high _Term_MainTask
   440  005590  00                 	db	0
   441  005591  0000               	dw	0
   442  005593  0001               	dw	1
   443  005595  00                 	db	0
   444  005596  22                 	db	low _MyApp_Task
   445  005597  2F                 	db	high _MyApp_Task
   446  005598  00                 	db	0
   447  005599  0000               	dw	0
   448  00559B  0064               	dw	100
   449  00559D  00                 	db	0
   450                           
   451                           	psect	mediumconst
   452  00FC34                     __pmediumconst:
   453                           	opt stack 0
   454  00FC34  00                 	db	0
   455  00FC35                     _USB_SD_Ptr:
   456                           	opt stack 0
   457  00FC35  68                 	db	low _sd000
   458  00FC36  FE                 	db	high _sd000
   459  00FC37  21                 	db	low _sd001
   460  00FC38  FE                 	db	high _sd001
   461  00FC39  FB                 	db	low _sd002
   462  00FC3A  FD                 	db	high _sd002
   463  00FC3B                     __end_of_USB_SD_Ptr:
   464                           	opt stack 0
   465  00FC3B                     _USB_CD_Ptr:
   466                           	opt stack 0
   467  00FC3B  B8                 	db	low _configDescriptor1
   468  00FC3C  FD                 	db	high _configDescriptor1
   469  00FC3D                     __end_of_USB_CD_Ptr:
   470                           	opt stack 0
   471  00FC3D                     _TaskNumber:
   472                           	opt stack 0
   473  00FC3D  000A               	dw	10
   474  00FC3F                     __end_of_TaskNumber:
   475                           	opt stack 0
   476  00FC3F                     _MsgFormat:
   477                           	opt stack 0
   478  00FC3F  48                 	db	72
   479  00FC40  6F                 	db	111
   480  00FC41  73                 	db	115
   481  00FC42  74                 	db	116
   482  00FC43  20                 	db	32
   483  00FC44  6D                 	db	109
   484  00FC45  65                 	db	101
   485  00FC46  73                 	db	115
   486  00FC47  73                 	db	115
   487  00FC48  61                 	db	97
   488  00FC49  67                 	db	103
   489  00FC4A  65                 	db	101
   490  00FC4B  20                 	db	32
   491  00FC4C  66                 	db	102
   492  00FC4D  6F                 	db	111
   493  00FC4E  72                 	db	114
   494  00FC4F  6D                 	db	109
   495  00FC50  61                 	db	97
   496  00FC51  74                 	db	116
   497  00FC52  3A                 	db	58
   498  00FC53  20                 	db	32
   499  00FC54  0D                 	db	13
   500  00FC55  0A                 	db	10
   501  00FC56  5B                 	db	91
   502  00FC57  6F                 	db	111
   503  00FC58  70                 	db	112
   504  00FC59  5F                 	db	95
   505  00FC5A  74                 	db	116
   506  00FC5B  79                 	db	121
   507  00FC5C  70                 	db	112
   508  00FC5D  65                 	db	101
   509  00FC5E  5D                 	db	93
   510  00FC5F  3A                 	db	58
   511  00FC60  5B                 	db	91
   512  00FC61  6F                 	db	111
   513  00FC62  70                 	db	112
   514  00FC63  5D                 	db	93
   515  00FC64  3A                 	db	58
   516  00FC65  5B                 	db	91
   517  00FC66  6C                 	db	108
   518  00FC67  65                 	db	101
   519  00FC68  6E                 	db	110
   520  00FC69  5D                 	db	93
   521  00FC6A  3A                 	db	58
   522  00FC6B  5B                 	db	91
   523  00FC6C  61                 	db	97
   524  00FC6D  64                 	db	100
   525  00FC6E  64                 	db	100
   526  00FC6F  72                 	db	114
   527  00FC70  5D                 	db	93
   528  00FC71  3A                 	db	58
   529  00FC72  5B                 	db	91
   530  00FC73  70                 	db	112
   531  00FC74  61                 	db	97
   532  00FC75  79                 	db	121
   533  00FC76  6C                 	db	108
   534  00FC77  6F                 	db	111
   535  00FC78  61                 	db	97
   536  00FC79  64                 	db	100
   537  00FC7A  5D                 	db	93
   538  00FC7B  0D                 	db	13
   539  00FC7C  0A                 	db	10
   540  00FC7D  0D                 	db	13
   541  00FC7E  0A                 	db	10
   542  00FC7F  5B                 	db	91
   543  00FC80  6F                 	db	111
   544  00FC81  70                 	db	112
   545  00FC82  5F                 	db	95
   546  00FC83  74                 	db	116
   547  00FC84  79                 	db	121
   548  00FC85  70                 	db	112
   549  00FC86  65                 	db	101
   550  00FC87  5D                 	db	93
   551  00FC88  20                 	db	32
   552  00FC89  3D                 	db	61
   553  00FC8A  20                 	db	32
   554  00FC8B  53                 	db	83
   555  00FC8C  4F                 	db	79
   556  00FC8D  2C                 	db	44
   557  00FC8E  53                 	db	83
   558  00FC8F  42                 	db	66
   559  00FC90  0D                 	db	13
   560  00FC91  0A                 	db	10
   561  00FC92  5B                 	db	91
   562  00FC93  6F                 	db	111
   563  00FC94  70                 	db	112
   564  00FC95  5D                 	db	93
   565  00FC96  20                 	db	32
   566  00FC97  3D                 	db	61
   567  00FC98  20                 	db	32
   568  00FC99  52                 	db	82
   569  00FC9A  3A                 	db	58
   570  00FC9B  20                 	db	32
   571  00FC9C  72                 	db	114
   572  00FC9D  65                 	db	101
   573  00FC9E  61                 	db	97
   574  00FC9F  64                 	db	100
   575  00FCA0  2C                 	db	44
   576  00FCA1  57                 	db	87
   577  00FCA2  3A                 	db	58
   578  00FCA3  20                 	db	32
   579  00FCA4  77                 	db	119
   580  00FCA5  72                 	db	114
   581  00FCA6  69                 	db	105
   582  00FCA7  74                 	db	116
   583  00FCA8  65                 	db	101
   584  00FCA9  0D                 	db	13
   585  00FCAA  0A                 	db	10
   586  00FCAB  5B                 	db	91
   587  00FCAC  6C                 	db	108
   588  00FCAD  65                 	db	101
   589  00FCAE  6E                 	db	110
   590  00FCAF  5D                 	db	93
   591  00FCB0  20                 	db	32
   592  00FCB1  3D                 	db	61
   593  00FCB2  20                 	db	32
   594  00FCB3  32                 	db	50
   595  00FCB4  20                 	db	32
   596  00FCB5  62                 	db	98
   597  00FCB6  79                 	db	121
   598  00FCB7  74                 	db	116
   599  00FCB8  65                 	db	101
   600  00FCB9  20                 	db	32
   601  00FCBA  41                 	db	65
   602  00FCBB  53                 	db	83
   603  00FCBC  43                 	db	67
   604  00FCBD  49                 	db	73
   605  00FCBE  49                 	db	73
   606  00FCBF  0D                 	db	13
   607  00FCC0  0A                 	db	10
   608  00FCC1  5B                 	db	91
   609  00FCC2  61                 	db	97
   610  00FCC3  64                 	db	100
   611  00FCC4  64                 	db	100
   612  00FCC5  72                 	db	114
   613  00FCC6  5D                 	db	93
   614  00FCC7  20                 	db	32
   615  00FCC8  3D                 	db	61
   616  00FCC9  20                 	db	32
   617  00FCCA  32                 	db	50
   618  00FCCB  20                 	db	32
   619  00FCCC  62                 	db	98
   620  00FCCD  79                 	db	121
   621  00FCCE  74                 	db	116
   622  00FCCF  65                 	db	101
   623  00FCD0  20                 	db	32
   624  00FCD1  41                 	db	65
   625  00FCD2  53                 	db	83
   626  00FCD3  43                 	db	67
   627  00FCD4  49                 	db	73
   628  00FCD5  49                 	db	73
   629  00FCD6  0D                 	db	13
   630  00FCD7  0A                 	db	10
   631  00FCD8  5B                 	db	91
   632  00FCD9  70                 	db	112
   633  00FCDA  61                 	db	97
   634  00FCDB  79                 	db	121
   635  00FCDC  6C                 	db	108
   636  00FCDD  6F                 	db	111
   637  00FCDE  61                 	db	97
   638  00FCDF  64                 	db	100
   639  00FCE0  5D                 	db	93
   640  00FCE1  20                 	db	32
   641  00FCE2  3D                 	db	61
   642  00FCE3  20                 	db	32
   643  00FCE4  6D                 	db	109
   644  00FCE5  61                 	db	97
   645  00FCE6  78                 	db	120
   646  00FCE7  20                 	db	32
   647  00FCE8  32                 	db	50
   648  00FCE9  30                 	db	48
   649  00FCEA  20                 	db	32
   650  00FCEB  62                 	db	98
   651  00FCEC  79                 	db	121
   652  00FCED  74                 	db	116
   653  00FCEE  65                 	db	101
   654  00FCEF  20                 	db	32
   655  00FCF0  41                 	db	65
   656  00FCF1  53                 	db	83
   657  00FCF2  43                 	db	67
   658  00FCF3  49                 	db	73
   659  00FCF4  49                 	db	73
   660  00FCF5  0D                 	db	13
   661  00FCF6  0A                 	db	10
   662  00FCF7  0D                 	db	13
   663  00FCF8  0A                 	db	10
   664  00FCF9  54                 	db	84
   665  00FCFA  65                 	db	101
   666  00FCFB  72                 	db	114
   667  00FCFC  6D                 	db	109
   668  00FCFD  69                 	db	105
   669  00FCFE  6E                 	db	110
   670  00FCFF  61                 	db	97
   671  00FD00  6C                 	db	108
   672  00FD01  20                 	db	32
   673  00FD02  4D                 	db	77
   674  00FD03  6F                 	db	111
   675  00FD04  64                 	db	100
   676  00FD05  65                 	db	101
   677  00FD06  3A                 	db	58
   678  00FD07  20                 	db	32
   679  00FD08  43                 	db	67
   680  00FD09  4F                 	db	79
   681  00FD0A  4D                 	db	77
   682  00FD0B  4D                 	db	77
   683  00FD0C  41                 	db	65
   684  00FD0D  4E                 	db	78
   685  00FD0E  44                 	db	68
   686  00FD0F  20                 	db	32
   687  00FD10  4D                 	db	77
   688  00FD11  4F                 	db	79
   689  00FD12  44                 	db	68
   690  00FD13  45                 	db	69
   691  00FD14  0D                 	db	13
   692  00FD15  0A                 	db	10
   693  00FD16  4D                 	db	77
   694  00FD17  6F                 	db	111
   695  00FD18  64                 	db	100
   696  00FD19  65                 	db	101
   697  00FD1A  6D                 	db	109
   698  00FD1B  20                 	db	32
   699  00FD1C  54                 	db	84
   700  00FD1D  79                 	db	121
   701  00FD1E  70                 	db	112
   702  00FD1F  65                 	db	101
   703  00FD20  3A                 	db	58
   704  00FD21  20                 	db	32
   705  00FD22  47                 	db	71
   706  00FD23  53                 	db	83
   707  00FD24  4D                 	db	77
   708  00FD25  2F                 	db	47
   709  00FD26  47                 	db	71
   710  00FD27  50                 	db	80
   711  00FD28  52                 	db	82
   712  00FD29  53                 	db	83
   713  00FD2A  0D                 	db	13
   714  00FD2B  0A                 	db	10
   715  00FD2C  0D                 	db	13
   716  00FD2D  0A                 	db	10
   717  00FD2E  00                 	db	0
   718  00FD2F                     __end_of_MsgFormat:
   719                           	opt stack 0
   720  00FD2F                     _Welcome:
   721                           	opt stack 0
   722  00FD2F  2A                 	db	42
   723  00FD30  2A                 	db	42
   724  00FD31  2A                 	db	42
   725  00FD32  2A                 	db	42
   726  00FD33  2A                 	db	42
   727  00FD34  2A                 	db	42
   728  00FD35  2A                 	db	42
   729  00FD36  2A                 	db	42
   730  00FD37  2A                 	db	42
   731  00FD38  2A                 	db	42
   732  00FD39  2A                 	db	42
   733  00FD3A  2A                 	db	42
   734  00FD3B  2A                 	db	42
   735  00FD3C  2A                 	db	42
   736  00FD3D  2A                 	db	42
   737  00FD3E  2A                 	db	42
   738  00FD3F  2A                 	db	42
   739  00FD40  2A                 	db	42
   740  00FD41  2A                 	db	42
   741  00FD42  2A                 	db	42
   742  00FD43  2A                 	db	42
   743  00FD44  2A                 	db	42
   744  00FD45  2A                 	db	42
   745  00FD46  2A                 	db	42
   746  00FD47  2A                 	db	42
   747  00FD48  2A                 	db	42
   748  00FD49  2A                 	db	42
   749  00FD4A  2A                 	db	42
   750  00FD4B  2A                 	db	42
   751  00FD4C  2A                 	db	42
   752  00FD4D  2A                 	db	42
   753  00FD4E  2A                 	db	42
   754  00FD4F  2A                 	db	42
   755  00FD50  2A                 	db	42
   756  00FD51  2A                 	db	42
   757  00FD52  2A                 	db	42
   758  00FD53  2A                 	db	42
   759  00FD54  2A                 	db	42
   760  00FD55  2A                 	db	42
   761  00FD56  2A                 	db	42
   762  00FD57  2A                 	db	42
   763  00FD58  2A                 	db	42
   764  00FD59  2A                 	db	42
   765  00FD5A  2A                 	db	42
   766  00FD5B  2A                 	db	42
   767  00FD5C  2A                 	db	42
   768  00FD5D  2A                 	db	42
   769  00FD5E  2A                 	db	42
   770  00FD5F  2A                 	db	42
   771  00FD60  0D                 	db	13
   772  00FD61  0A                 	db	10
   773  00FD62  20                 	db	32
   774  00FD63  20                 	db	32
   775  00FD64  20                 	db	32
   776  00FD65  20                 	db	32
   777  00FD66  20                 	db	32
   778  00FD67  20                 	db	32
   779  00FD68  20                 	db	32
   780  00FD69  20                 	db	32
   781  00FD6A  20                 	db	32
   782  00FD6B  20                 	db	32
   783  00FD6C  20                 	db	32
   784  00FD6D  20                 	db	32
   785  00FD6E  20                 	db	32
   786  00FD6F  20                 	db	32
   787  00FD70  20                 	db	32
   788  00FD71  20                 	db	32
   789  00FD72  20                 	db	32
   790  00FD73  20                 	db	32
   791  00FD74  4D                 	db	77
   792  00FD75  45                 	db	69
   793  00FD76  52                 	db	82
   794  00FD77  43                 	db	67
   795  00FD78  55                 	db	85
   796  00FD79  52                 	db	82
   797  00FD7A  59                 	db	89
   798  00FD7B  20                 	db	32
   799  00FD7C  53                 	db	83
   800  00FD7D  59                 	db	89
   801  00FD7E  53                 	db	83
   802  00FD7F  54                 	db	84
   803  00FD80  45                 	db	69
   804  00FD81  4D                 	db	77
   805  00FD82  0D                 	db	13
   806  00FD83  0A                 	db	10
   807  00FD84  2A                 	db	42
   808  00FD85  2A                 	db	42
   809  00FD86  2A                 	db	42
   810  00FD87  2A                 	db	42
   811  00FD88  2A                 	db	42
   812  00FD89  2A                 	db	42
   813  00FD8A  2A                 	db	42
   814  00FD8B  2A                 	db	42
   815  00FD8C  2A                 	db	42
   816  00FD8D  2A                 	db	42
   817  00FD8E  2A                 	db	42
   818  00FD8F  2A                 	db	42
   819  00FD90  2A                 	db	42
   820  00FD91  2A                 	db	42
   821  00FD92  2A                 	db	42
   822  00FD93  2A                 	db	42
   823  00FD94  2A                 	db	42
   824  00FD95  2A                 	db	42
   825  00FD96  2A                 	db	42
   826  00FD97  2A                 	db	42
   827  00FD98  2A                 	db	42
   828  00FD99  2A                 	db	42
   829  00FD9A  2A                 	db	42
   830  00FD9B  2A                 	db	42
   831  00FD9C  2A                 	db	42
   832  00FD9D  2A                 	db	42
   833  00FD9E  2A                 	db	42
   834  00FD9F  2A                 	db	42
   835  00FDA0  2A                 	db	42
   836  00FDA1  2A                 	db	42
   837  00FDA2  2A                 	db	42
   838  00FDA3  2A                 	db	42
   839  00FDA4  2A                 	db	42
   840  00FDA5  2A                 	db	42
   841  00FDA6  2A                 	db	42
   842  00FDA7  2A                 	db	42
   843  00FDA8  2A                 	db	42
   844  00FDA9  2A                 	db	42
   845  00FDAA  2A                 	db	42
   846  00FDAB  2A                 	db	42
   847  00FDAC  2A                 	db	42
   848  00FDAD  2A                 	db	42
   849  00FDAE  2A                 	db	42
   850  00FDAF  2A                 	db	42
   851  00FDB0  2A                 	db	42
   852  00FDB1  2A                 	db	42
   853  00FDB2  2A                 	db	42
   854  00FDB3  2A                 	db	42
   855  00FDB4  2A                 	db	42
   856  00FDB5  0D                 	db	13
   857  00FDB6  0A                 	db	10
   858  00FDB7  00                 	db	0
   859  00FDB8                     __end_of_Welcome:
   860                           	opt stack 0
   861  00FDB8                     _configDescriptor1:
   862                           	opt stack 0
   863  00FDB8  09                 	db	9
   864  00FDB9  02                 	db	2
   865  00FDBA  43                 	db	67
   866  00FDBB  00                 	db	0
   867  00FDBC  02                 	db	2
   868  00FDBD  01                 	db	1
   869  00FDBE  00                 	db	0
   870  00FDBF  C0                 	db	192
   871  00FDC0  32                 	db	50
   872  00FDC1  09                 	db	9
   873  00FDC2  04                 	db	4
   874  00FDC3  00                 	db	0
   875  00FDC4  00                 	db	0
   876  00FDC5  01                 	db	1
   877  00FDC6  02                 	db	2
   878  00FDC7  02                 	db	2
   879  00FDC8  01                 	db	1
   880  00FDC9  00                 	db	0
   881  00FDCA  05                 	db	5
   882  00FDCB  24                 	db	36
   883  00FDCC  00                 	db	0
   884  00FDCD  10                 	db	16
   885  00FDCE  01                 	db	1
   886  00FDCF  04                 	db	4
   887  00FDD0  24                 	db	36
   888  00FDD1  02                 	db	2
   889  00FDD2  02                 	db	2
   890  00FDD3  05                 	db	5
   891  00FDD4  24                 	db	36
   892  00FDD5  06                 	db	6
   893  00FDD6  00                 	db	0
   894  00FDD7  01                 	db	1
   895  00FDD8  05                 	db	5
   896  00FDD9  24                 	db	36
   897  00FDDA  01                 	db	1
   898  00FDDB  00                 	db	0
   899  00FDDC  01                 	db	1
   900  00FDDD  07                 	db	7
   901  00FDDE  05                 	db	5
   902  00FDDF  81                 	db	129
   903  00FDE0  03                 	db	3
   904  00FDE1  08                 	db	8
   905  00FDE2  00                 	db	0
   906  00FDE3  02                 	db	2
   907  00FDE4  09                 	db	9
   908  00FDE5  04                 	db	4
   909  00FDE6  01                 	db	1
   910  00FDE7  00                 	db	0
   911  00FDE8  02                 	db	2
   912  00FDE9  0A                 	db	10
   913  00FDEA  00                 	db	0
   914  00FDEB  00                 	db	0
   915  00FDEC  00                 	db	0
   916  00FDED  07                 	db	7
   917  00FDEE  05                 	db	5
   918  00FDEF  02                 	db	2
   919  00FDF0  02                 	db	2
   920  00FDF1  40                 	db	64
   921  00FDF2  00                 	db	0
   922  00FDF3  00                 	db	0
   923  00FDF4  07                 	db	7
   924  00FDF5  05                 	db	5
   925  00FDF6  82                 	db	130
   926  00FDF7  02                 	db	2
   927  00FDF8  40                 	db	64
   928  00FDF9  00                 	db	0
   929  00FDFA  00                 	db	0
   930  00FDFB                     __end_of_configDescriptor1:
   931                           	opt stack 0
   932  00FDFB                     _sd002:
   933                           	opt stack 0
   934  00FDFB  26                 	db	38
   935  00FDFC  03                 	db	3
   936  00FDFD  0054               	dw	84
   937  00FDFF  0065               	dw	101
   938  00FE01  0072               	dw	114
   939  00FE03  006D               	dw	109
   940  00FE05  0069               	dw	105
   941  00FE07  006E               	dw	110
   942  00FE09  0061               	dw	97
   943  00FE0B  006C               	dw	108
   944  00FE0D  0020               	dw	32
   945  00FE0F  0049               	dw	73
   946  00FE11  006E               	dw	110
   947  00FE13  0074               	dw	116
   948  00FE15  0065               	dw	101
   949  00FE17  0072               	dw	114
   950  00FE19  0066               	dw	102
   951  00FE1B  0061               	dw	97
   952  00FE1D  0063               	dw	99
   953  00FE1F  0065               	dw	101
   954  00FE21                     __end_of_sd002:
   955                           	opt stack 0
   956  00FE21                     _sd001:
   957                           	opt stack 0
   958  00FE21  1E                 	db	30
   959  00FE22  03                 	db	3
   960  00FE23  004D               	dw	77
   961  00FE25  0065               	dw	101
   962  00FE27  0072               	dw	114
   963  00FE29  0063               	dw	99
   964  00FE2B  0075               	dw	117
   965  00FE2D  0072               	dw	114
   966  00FE2F  0079               	dw	121
   967  00FE31  0020               	dw	32
   968  00FE33  0053               	dw	83
   969  00FE35  0079               	dw	121
   970  00FE37  0073               	dw	115
   971  00FE39  0074               	dw	116
   972  00FE3B  0065               	dw	101
   973  00FE3D  006D               	dw	109
   974  00FE3F                     __end_of_sd001:
   975                           	opt stack 0
   976  00FE3F                     _MsgReady:
   977                           	opt stack 0
   978  00FE3F  0D                 	db	13
   979  00FE40  0A                 	db	10
   980  00FE41  53                 	db	83
   981  00FE42  79                 	db	121
   982  00FE43  73                 	db	115
   983  00FE44  74                 	db	116
   984  00FE45  65                 	db	101
   985  00FE46  6D                 	db	109
   986  00FE47  20                 	db	32
   987  00FE48  52                 	db	82
   988  00FE49  65                 	db	101
   989  00FE4A  61                 	db	97
   990  00FE4B  64                 	db	100
   991  00FE4C  79                 	db	121
   992  00FE4D  2E                 	db	46
   993  00FE4E  2E                 	db	46
   994  00FE4F  2E                 	db	46
   995  00FE50  20                 	db	32
   996  00FE51  0D                 	db	13
   997  00FE52  0A                 	db	10
   998  00FE53  0D                 	db	13
   999  00FE54  0A                 	db	10
  1000  00FE55  00                 	db	0
  1001  00FE56                     __end_of_MsgReady:
  1002                           	opt stack 0
  1003  00FE56                     _device_dsc:
  1004                           	opt stack 0
  1005  00FE56  12                 	db	18
  1006  00FE57  01                 	db	1
  1007  00FE58  0200               	dw	512
  1008  00FE5A  02                 	db	2
  1009  00FE5B  00                 	db	0
  1010  00FE5C  00                 	db	0
  1011  00FE5D  08                 	db	8
  1012  00FE5E  04D8               	dw	1240
  1013  00FE60  000A               	dw	10
  1014  00FE62  0100               	dw	256
  1015  00FE64  01                 	db	1
  1016  00FE65  02                 	db	2
  1017  00FE66  00                 	db	0
  1018  00FE67  01                 	db	1
  1019  00FE68                     __end_of_device_dsc:
  1020                           	opt stack 0
  1021  00FE68                     _sd000:
  1022                           	opt stack 0
  1023  00FE68  04                 	db	4
  1024  00FE69  03                 	db	3
  1025  00FE6A  0409               	dw	1033
  1026  00FE6C                     __end_of_sd000:
  1027                           	opt stack 0
  1028  0000                     _RPINR1	set	3815
  1029  0000                     _UEP0bits	set	3878
  1030  0000                     _UIEbits	set	3894
  1031  0000                     _UADDR	set	3896
  1032  0000                     _UIE	set	3894
  1033  0000                     _UEIE	set	3895
  1034  0000                     _UCFG	set	3897
  1035  0000                     _RTCCAL	set	3902
  1036  0000                     _PADCFG1bits	set	3900
  1037  0000                     _RTCCFGbits	set	3903
  1038  0000                     _DSCONLbits	set	3916
  1039  0000                     _DSGPR1	set	3919
  1040  0000                     _DSGPR0	set	3918
  1041  0000                     _DSCONHbits	set	3917
  1042  0000                     _ANCON1bits	set	3913
  1043  0000                     _UEP1	set	3879
  1044  0000                     _UEP0	set	3878
  1045  0000                     _T1CONbits	set	4045
  1046  0000                     _PORTDbits	set	3971
  1047  0000                     _USTAT	set	3940
  1048  0000                     _PIR2bits	set	4001
  1049  0000                     _UCON	set	3941
  1050  0000                     _UIRbits	set	3938
  1051  0000                     _UCONbits	set	3941
  1052  0000                     _UIR	set	3938
  1053  0000                     _UEIR	set	3939
  1054  0000                     _PIE2bits	set	4000
  1055  0000                     _BAUDCON2	set	3964
  1056  0000                     _RCSTA2	set	3996
  1057  0000                     _BAUDCON1	set	3966
  1058  0000                     _RCSTA1	set	4012
  1059  0000                     _TRISCbits	set	3988
  1060  0000                     _TXSTA2	set	4008
  1061  0000                     _TXSTA1	set	4013
  1062  0000                     _RCREG2	set	4010
  1063  0000                     _RCREG1	set	4015
  1064  0000                     _TXREG2	set	4009
  1065  0000                     _TXREG1	set	4014
  1066  0000                     _SPBRG2	set	4011
  1067  0000                     _SPBRGH2	set	3965
  1068  0000                     _SPBRG1	set	4016
  1069  0000                     _SPBRGH1	set	3967
  1070  0000                     _PR4	set	3959
  1071  0000                     _PR2	set	4043
  1072  0000                     _PIE1bits	set	3997
  1073  0000                     _IPR1bits	set	3999
  1074  0000                     _T4CONbits	set	3958
  1075  0000                     _T2CONbits	set	4042
  1076  0000                     _ALRMVALL	set	3982
  1077  0000                     _ALRMVALH	set	3983
  1078  0000                     _RTCVALH	set	3993
  1079  0000                     _RTCVALL	set	3992
  1080  0000                     _ALRMRPTbits	set	3984
  1081  0000                     _ALRMCFGbits	set	3985
  1082  0000                     _PIE3bits	set	4003
  1083  0000                     _IPR3bits	set	4005
  1084  0000                     _OSCCONbits	set	4051
  1085  0000                     _PORTEbits	set	3972
  1086  0000                     _TRISEbits	set	3990
  1087  0000                     _WDTCONbits	set	4032
  1088  0000                     _INTCON2bits	set	4081
  1089  0000                     _TRISBbits	set	3987
  1090  0000                     _OSCTUNEbits	set	3995
  1091  0000                     _SSP2CON1	set	3954
  1092  0000                     _TRISDbits	set	3989
  1093  0000                     _SSP2BUF	set	3957
  1094  0000                     _SSP2CON2bits	set	3953
  1095  0000                     _SSP2STAT	set	3955
  1096  0000                     _SSP2CON2	set	3953
  1097  0000                     _SSP2ADD	set	3956
  1098  0000                     _PIR1bits	set	3998
  1099  0000                     _PIR3bits	set	4004
  1100  0000                     _INTCON3bits	set	4080
  1101  0000                     _INTCONbits	set	4082
  1102  0000                     _RCONbits	set	4048
  1103  00FE6C                     STR_21:
  1104  00FE6C  20                 	db	32
  1105  00FE6D  4C                 	db	76	;'L'
  1106  00FE6E  61                 	db	97	;'a'
  1107  00FE6F  7A                 	db	122	;'z'
  1108  00FE70  79                 	db	121	;'y'
  1109  00FE71  20                 	db	32
  1110  00FE72  64                 	db	100	;'d'
  1111  00FE73  65                 	db	101	;'e'
  1112  00FE74  76                 	db	118	;'v'
  1113  00FE75  69                 	db	105	;'i'
  1114  00FE76  63                 	db	99	;'c'
  1115  00FE77  65                 	db	101	;'e'
  1116  00FE78  2E                 	db	46
  1117  00FE79  2E                 	db	46
  1118  00FE7A  2E                 	db	46
  1119  00FE7B  79                 	db	121	;'y'
  1120  00FE7C  6F                 	db	111	;'o'
  1121  00FE7D  75                 	db	117	;'u'
  1122  00FE7E  27                 	db	39
  1123  00FE7F  76                 	db	118	;'v'
  1124  00FE80  65                 	db	101	;'e'
  1125  00FE81  20                 	db	32
  1126  00FE82  62                 	db	98	;'b'
  1127  00FE83  65                 	db	101	;'e'
  1128  00FE84  65                 	db	101	;'e'
  1129  00FE85  6E                 	db	110	;'n'
  1130  00FE86  20                 	db	32
  1131  00FE87  74                 	db	116	;'t'
  1132  00FE88  69                 	db	105	;'i'
  1133  00FE89  6D                 	db	109	;'m'
  1134  00FE8A  65                 	db	101	;'e'
  1135  00FE8B  64                 	db	100	;'d'
  1136  00FE8C  2D                 	db	45
  1137  00FE8D  6F                 	db	111	;'o'
  1138  00FE8E  75                 	db	117	;'u'
  1139  00FE8F  74                 	db	116	;'t'
  1140  00FE90  21                 	db	33
  1141  00FE91  21                 	db	33
  1142  00FE92  21                 	db	33
  1143  00FE93  0D                 	db	13
  1144  00FE94  0A                 	db	10
  1145  00FE95  00                 	db	0
  1146  00FE96                     STR_8:
  1147  00FE96  41                 	db	65	;'A'
  1148  00FE97  54                 	db	84	;'T'
  1149  00FE98  2B                 	db	43
  1150  00FE99  53                 	db	83	;'S'
  1151  00FE9A  41                 	db	65	;'A'
  1152  00FE9B  50                 	db	80	;'P'
  1153  00FE9C  42                 	db	66	;'B'
  1154  00FE9D  52                 	db	82	;'R'
  1155  00FE9E  3D                 	db	61	;'='
  1156  00FE9F  33                 	db	51	;'3'
  1157  00FEA0  2C                 	db	44
  1158  00FEA1  31                 	db	49	;'1'
  1159  00FEA2  2C                 	db	44
  1160  00FEA3  22                 	db	34
  1161  00FEA4  43                 	db	67	;'C'
  1162  00FEA5  6F                 	db	111	;'o'
  1163  00FEA6  6E                 	db	110	;'n'
  1164  00FEA7  74                 	db	116	;'t'
  1165  00FEA8  79                 	db	121	;'y'
  1166  00FEA9  70                 	db	112	;'p'
  1167  00FEAA  65                 	db	101	;'e'
  1168  00FEAB  22                 	db	34
  1169  00FEAC  2C                 	db	44
  1170  00FEAD  22                 	db	34
  1171  00FEAE  47                 	db	71	;'G'
  1172  00FEAF  50                 	db	80	;'P'
  1173  00FEB0  52                 	db	82	;'R'
  1174  00FEB1  53                 	db	83	;'S'
  1175  00FEB2  22                 	db	34
  1176  00FEB3  0D                 	db	13
  1177  00FEB4  00                 	db	0
  1178  00FEB5                     STR_14:
  1179  00FEB5  41                 	db	65	;'A'
  1180  00FEB6  54                 	db	84	;'T'
  1181  00FEB7  2B                 	db	43
  1182  00FEB8  48                 	db	72	;'H'
  1183  00FEB9  54                 	db	84	;'T'
  1184  00FEBA  54                 	db	84	;'T'
  1185  00FEBB  50                 	db	80	;'P'
  1186  00FEBC  50                 	db	80	;'P'
  1187  00FEBD  41                 	db	65	;'A'
  1188  00FEBE  52                 	db	82	;'R'
  1189  00FEBF  41                 	db	65	;'A'
  1190  00FEC0  3D                 	db	61	;'='
  1191  00FEC1  22                 	db	34
  1192  00FEC2  43                 	db	67	;'C'
  1193  00FEC3  49                 	db	73	;'I'
  1194  00FEC4  44                 	db	68	;'D'
  1195  00FEC5  22                 	db	34
  1196  00FEC6  2C                 	db	44
  1197  00FEC7  31                 	db	49	;'1'
  1198  00FEC8  0D                 	db	13
  1199  00FEC9  00                 	db	0
  1200  00FECA                     STR_9:
  1201  00FECA  41                 	db	65	;'A'
  1202  00FECB  54                 	db	84	;'T'
  1203  00FECC  2B                 	db	43
  1204  00FECD  53                 	db	83	;'S'
  1205  00FECE  41                 	db	65	;'A'
  1206  00FECF  50                 	db	80	;'P'
  1207  00FED0  42                 	db	66	;'B'
  1208  00FED1  52                 	db	82	;'R'
  1209  00FED2  3D                 	db	61	;'='
  1210  00FED3  33                 	db	51	;'3'
  1211  00FED4  2C                 	db	44
  1212  00FED5  31                 	db	49	;'1'
  1213  00FED6  2C                 	db	44
  1214  00FED7  22                 	db	34
  1215  00FED8  41                 	db	65	;'A'
  1216  00FED9  50                 	db	80	;'P'
  1217  00FEDA  4E                 	db	78	;'N'
  1218  00FEDB  22                 	db	34
  1219  00FEDC  2C                 	db	44
  1220  00FEDD  22                 	db	34
  1221  00FEDE  00                 	db	0
  1222  00FEDF                     STR_23:
  1223  00FEDF  46                 	db	70	;'F'
  1224  00FEE0  72                 	db	114	;'r'
  1225  00FEE1  61                 	db	97	;'a'
  1226  00FEE2  6D                 	db	109	;'m'
  1227  00FEE3  65                 	db	101	;'e'
  1228  00FEE4  77                 	db	119	;'w'
  1229  00FEE5  6F                 	db	111	;'o'
  1230  00FEE6  72                 	db	114	;'r'
  1231  00FEE7  6B                 	db	107	;'k'
  1232  00FEE8  20                 	db	32
  1233  00FEE9  56                 	db	86	;'V'
  1234  00FEEA  65                 	db	101	;'e'
  1235  00FEEB  72                 	db	114	;'r'
  1236  00FEEC  73                 	db	115	;'s'
  1237  00FEED  69                 	db	105	;'i'
  1238  00FEEE  6F                 	db	111	;'o'
  1239  00FEEF  6E                 	db	110	;'n'
  1240  00FEF0  3A                 	db	58	;':'
  1241  00FEF1  20                 	db	32
  1242  00FEF2  00                 	db	0
  1243  00FEF3                     STR_15:
  1244  00FEF3  41                 	db	65	;'A'
  1245  00FEF4  54                 	db	84	;'T'
  1246  00FEF5  2B                 	db	43
  1247  00FEF6  48                 	db	72	;'H'
  1248  00FEF7  54                 	db	84	;'T'
  1249  00FEF8  54                 	db	84	;'T'
  1250  00FEF9  50                 	db	80	;'P'
  1251  00FEFA  50                 	db	80	;'P'
  1252  00FEFB  41                 	db	65	;'A'
  1253  00FEFC  52                 	db	82	;'R'
  1254  00FEFD  41                 	db	65	;'A'
  1255  00FEFE  3D                 	db	61	;'='
  1256  00FEFF  22                 	db	34
  1257  00FF00  55                 	db	85	;'U'
  1258  00FF01  52                 	db	82	;'R'
  1259  00FF02  4C                 	db	76	;'L'
  1260  00FF03  22                 	db	34
  1261  00FF04  2C                 	db	44
  1262  00FF05  22                 	db	34
  1263  00FF06  00                 	db	0
  1264  00FF07                     STR_29:
  1265  00FF07  41                 	db	65	;'A'
  1266  00FF08  54                 	db	84	;'T'
  1267  00FF09  2B                 	db	43
  1268  00FF0A  43                 	db	67	;'C'
  1269  00FF0B  4D                 	db	77	;'M'
  1270  00FF0C  47                 	db	71	;'G'
  1271  00FF0D  44                 	db	68	;'D'
  1272  00FF0E  41                 	db	65	;'A'
  1273  00FF0F  3D                 	db	61	;'='
  1274  00FF10  44                 	db	68	;'D'
  1275  00FF11  45                 	db	69	;'E'
  1276  00FF12  4C                 	db	76	;'L'
  1277  00FF13  20                 	db	32
  1278  00FF14  41                 	db	65	;'A'
  1279  00FF15  4C                 	db	76	;'L'
  1280  00FF16  4C                 	db	76	;'L'
  1281  00FF17  0D                 	db	13
  1282  00FF18  0A                 	db	10
  1283  00FF19  00                 	db	0
  1284  00FF1A                     STR_27:
  1285  00FF1A  42                 	db	66	;'B'
  1286  00FF1B  75                 	db	117	;'u'
  1287  00FF1C  69                 	db	105	;'i'
  1288  00FF1D  6C                 	db	108	;'l'
  1289  00FF1E  64                 	db	100	;'d'
  1290  00FF1F  20                 	db	32
  1291  00FF20  44                 	db	68	;'D'
  1292  00FF21  61                 	db	97	;'a'
  1293  00FF22  74                 	db	116	;'t'
  1294  00FF23  65                 	db	101	;'e'
  1295  00FF24  3A                 	db	58	;':'
  1296  00FF25  20                 	db	32
  1297  00FF26  25                 	db	37
  1298  00FF27  73                 	db	115	;'s'
  1299  00FF28  0D                 	db	13
  1300  00FF29  0A                 	db	10
  1301  00FF2A  00                 	db	0
  1302  00FF2B                     STR_16:
  1303  00FF2B  41                 	db	65	;'A'
  1304  00FF2C  54                 	db	84	;'T'
  1305  00FF2D  2B                 	db	43
  1306  00FF2E  48                 	db	72	;'H'
  1307  00FF2F  54                 	db	84	;'T'
  1308  00FF30  54                 	db	84	;'T'
  1309  00FF31  50                 	db	80	;'P'
  1310  00FF32  41                 	db	65	;'A'
  1311  00FF33  43                 	db	67	;'C'
  1312  00FF34  54                 	db	84	;'T'
  1313  00FF35  49                 	db	73	;'I'
  1314  00FF36  4F                 	db	79	;'O'
  1315  00FF37  4E                 	db	78	;'N'
  1316  00FF38  3D                 	db	61	;'='
  1317  00FF39  30                 	db	48	;'0'
  1318  00FF3A  0D                 	db	13
  1319  00FF3B  00                 	db	0
  1320  00FF3C  41                 	db	65	;'A'
  1321  00FF3D  54                 	db	84	;'T'
  1322  00FF3E  2B                 	db	43
  1323  00FF3F  48                 	db	72	;'H'
  1324  00FF40  54                 	db	84	;'T'
  1325  00FF41  54                 	db	84	;'T'
  1326  00FF42  50                 	db	80	;'P'
  1327  00FF43  53                 	db	83	;'S'
  1328  00FF44  53                 	db	83	;'S'
  1329  00FF45  4C                 	db	76	;'L'
  1330  00FF46  3D                 	db	61	;'='
  1331  00FF47  30                 	db	48	;'0'
  1332  00FF48  0D                 	db	13
  1333  00FF49  00                 	db	0
  1334  00FF4A                     STR_10:
  1335  00FF4A  41                 	db	65	;'A'
  1336  00FF4B  54                 	db	84	;'T'
  1337  00FF4C  2B                 	db	43
  1338  00FF4D  53                 	db	83	;'S'
  1339  00FF4E  41                 	db	65	;'A'
  1340  00FF4F  50                 	db	80	;'P'
  1341  00FF50  42                 	db	66	;'B'
  1342  00FF51  52                 	db	82	;'R'
  1343  00FF52  3D                 	db	61	;'='
  1344  00FF53  31                 	db	49	;'1'
  1345  00FF54  2C                 	db	44
  1346  00FF55  31                 	db	49	;'1'
  1347  00FF56  0D                 	db	13
  1348  00FF57  00                 	db	0
  1349  00FF58                     STR_11:
  1350  00FF58  41                 	db	65	;'A'
  1351  00FF59  54                 	db	84	;'T'
  1352  00FF5A  2B                 	db	43
  1353  00FF5B  53                 	db	83	;'S'
  1354  00FF5C  41                 	db	65	;'A'
  1355  00FF5D  50                 	db	80	;'P'
  1356  00FF5E  42                 	db	66	;'B'
  1357  00FF5F  52                 	db	82	;'R'
  1358  00FF60  3D                 	db	61	;'='
  1359  00FF61  32                 	db	50	;'2'
  1360  00FF62  2C                 	db	44
  1361  00FF63  31                 	db	49	;'1'
  1362  00FF64  0D                 	db	13
  1363  00FF65  00                 	db	0
  1364  00FF66                     STR_13:
  1365  00FF66  41                 	db	65	;'A'
  1366  00FF67  54                 	db	84	;'T'
  1367  00FF68  2B                 	db	43
  1368  00FF69  48                 	db	72	;'H'
  1369  00FF6A  54                 	db	84	;'T'
  1370  00FF6B  54                 	db	84	;'T'
  1371  00FF6C  50                 	db	80	;'P'
  1372  00FF6D  53                 	db	83	;'S'
  1373  00FF6E  53                 	db	83	;'S'
  1374  00FF6F  4C                 	db	76	;'L'
  1375  00FF70  3D                 	db	61	;'='
  1376  00FF71  31                 	db	49	;'1'
  1377  00FF72  0D                 	db	13
  1378  00FF73  00                 	db	0
  1379  00FF74                     STR_2:
  1380  00FF74  41                 	db	65	;'A'
  1381  00FF75  54                 	db	84	;'T'
  1382  00FF76  2B                 	db	43
  1383  00FF77  49                 	db	73	;'I'
  1384  00FF78  50                 	db	80	;'P'
  1385  00FF79  52                 	db	82	;'R'
  1386  00FF7A  3D                 	db	61	;'='
  1387  00FF7B  39                 	db	57	;'9'
  1388  00FF7C  36                 	db	54	;'6'
  1389  00FF7D  30                 	db	48	;'0'
  1390  00FF7E  30                 	db	48	;'0'
  1391  00FF7F  0D                 	db	13
  1392  00FF80  0A                 	db	10
  1393  00FF81  00                 	db	0
  1394  00FF82                     STR_17:
  1395  00FF82  41                 	db	65	;'A'
  1396  00FF83  54                 	db	84	;'T'
  1397  00FF84  2B                 	db	43
  1398  00FF85  48                 	db	72	;'H'
  1399  00FF86  54                 	db	84	;'T'
  1400  00FF87  54                 	db	84	;'T'
  1401  00FF88  50                 	db	80	;'P'
  1402  00FF89  52                 	db	82	;'R'
  1403  00FF8A  45                 	db	69	;'E'
  1404  00FF8B  41                 	db	65	;'A'
  1405  00FF8C  44                 	db	68	;'D'
  1406  00FF8D  0D                 	db	13
  1407  00FF8E  00                 	db	0
  1408  00FF8F                     STR_18:
  1409  00FF8F  41                 	db	65	;'A'
  1410  00FF90  54                 	db	84	;'T'
  1411  00FF91  2B                 	db	43
  1412  00FF92  48                 	db	72	;'H'
  1413  00FF93  54                 	db	84	;'T'
  1414  00FF94  54                 	db	84	;'T'
  1415  00FF95  50                 	db	80	;'P'
  1416  00FF96  54                 	db	84	;'T'
  1417  00FF97  45                 	db	69	;'E'
  1418  00FF98  52                 	db	82	;'R'
  1419  00FF99  4D                 	db	77	;'M'
  1420  00FF9A  0D                 	db	13
  1421  00FF9B  00                 	db	0
  1422  00FF9C                     STR_12:
  1423  00FF9C  41                 	db	65	;'A'
  1424  00FF9D  54                 	db	84	;'T'
  1425  00FF9E  2B                 	db	43
  1426  00FF9F  48                 	db	72	;'H'
  1427  00FFA0  54                 	db	84	;'T'
  1428  00FFA1  54                 	db	84	;'T'
  1429  00FFA2  50                 	db	80	;'P'
  1430  00FFA3  49                 	db	73	;'I'
  1431  00FFA4  4E                 	db	78	;'N'
  1432  00FFA5  49                 	db	73	;'I'
  1433  00FFA6  54                 	db	84	;'T'
  1434  00FFA7  0D                 	db	13
  1435  00FFA8  00                 	db	0
  1436  00FFA9                     STR_30:
  1437  00FFA9  41                 	db	65	;'A'
  1438  00FFAA  54                 	db	84	;'T'
  1439  00FFAB  2B                 	db	43
  1440  00FFAC  43                 	db	67	;'C'
  1441  00FFAD  4C                 	db	76	;'L'
  1442  00FFAE  49                 	db	73	;'I'
  1443  00FFAF  50                 	db	80	;'P'
  1444  00FFB0  3D                 	db	61	;'='
  1445  00FFB1  31                 	db	49	;'1'
  1446  00FFB2  0D                 	db	13
  1447  00FFB3  0A                 	db	10
  1448  00FFB4  00                 	db	0
  1449  00FFB5                     STR_28:
  1450  00FFB5  4D                 	db	77	;'M'
  1451  00FFB6  61                 	db	97	;'a'
  1452  00FFB7  72                 	db	114	;'r'
  1453  00FFB8  20                 	db	32
  1454  00FFB9  32                 	db	50	;'2'
  1455  00FFBA  30                 	db	48	;'0'
  1456  00FFBB  20                 	db	32
  1457  00FFBC  32                 	db	50	;'2'
  1458  00FFBD  30                 	db	48	;'0'
  1459  00FFBE  32                 	db	50	;'2'
  1460  00FFBF  32                 	db	50	;'2'
  1461  00FFC0  00                 	db	0
  1462  00FFC1                     STR_4:
  1463  00FFC1  41                 	db	65	;'A'
  1464  00FFC2  54                 	db	84	;'T'
  1465  00FFC3  2B                 	db	43
  1466  00FFC4  43                 	db	67	;'C'
  1467  00FFC5  4D                 	db	77	;'M'
  1468  00FFC6  47                 	db	71	;'G'
  1469  00FFC7  52                 	db	82	;'R'
  1470  00FFC8  3D                 	db	61	;'='
  1471  00FFC9  31                 	db	49	;'1'
  1472  00FFCA  0D                 	db	13
  1473  00FFCB  0A                 	db	10
  1474  00FFCC  00                 	db	0
  1475  00FFCD                     STR_5:
  1476  00FFCD  41                 	db	65	;'A'
  1477  00FFCE  54                 	db	84	;'T'
  1478  00FFCF  2B                 	db	43
  1479  00FFD0  43                 	db	67	;'C'
  1480  00FFD1  4D                 	db	77	;'M'
  1481  00FFD2  47                 	db	71	;'G'
  1482  00FFD3  53                 	db	83	;'S'
  1483  00FFD4  3D                 	db	61	;'='
  1484  00FFD5  22                 	db	34
  1485  00FFD6  00                 	db	0
  1486  00FFD7                     STR_31:
  1487  00FFD7  28                 	db	40
  1488  00FFD8  6E                 	db	110	;'n'
  1489  00FFD9  75                 	db	117	;'u'
  1490  00FFDA  6C                 	db	108	;'l'
  1491  00FFDB  6C                 	db	108	;'l'
  1492  00FFDC  29                 	db	41
  1493  00FFDD  00                 	db	0
  1494  00FFDE                     STR_3:
  1495  00FFDE  41                 	db	65	;'A'
  1496  00FFDF  54                 	db	84	;'T'
  1497  00FFE0  45                 	db	69	;'E'
  1498  00FFE1  30                 	db	48	;'0'
  1499  00FFE2  0D                 	db	13
  1500  00FFE3  0A                 	db	10
  1501  00FFE4  00                 	db	0
  1502  00FFE5                     STR_1:
  1503  00FFE5  41                 	db	65	;'A'
  1504  00FFE6  54                 	db	84	;'T'
  1505  00FFE7  0D                 	db	13
  1506  00FFE8  0A                 	db	10
  1507  00FFE9  00                 	db	0
  1508  00FFEA  41                 	db	65	;'A'
  1509  00FFEB  54                 	db	84	;'T'
  1510  00FFEC  41                 	db	65	;'A'
  1511  00FFED  0D                 	db	13
  1512  00FFEE  00                 	db	0
  1513  00FFEF                     STR_6:
  1514  00FFEF  41                 	db	65	;'A'
  1515  00FFF0  54                 	db	84	;'T'
  1516  00FFF1  48                 	db	72	;'H'
  1517  00FFF2  0D                 	db	13
  1518  00FFF3  00                 	db	0
  1519  00FFF4                     STR_24:
  1520  00FFF4  2E                 	db	46
  1521  00FFF5  00                 	db	0
  1522  0000                     
  1523                           ; #config settings
  1524  00FFF6  00                 	db	0	; dummy byte at the end
  1525  0000                     
  1526                           	psect	cinit
  1527  00280C                     __pcinit:
  1528                           	opt stack 0
  1529  00280C                     start_initialization:
  1530                           	opt stack 0
  1531  00280C                     __initialization:
  1532                           	opt stack 0
  1533                           
  1534                           ; Initialize objects allocated to BANK5 (80 bytes)
  1535                           ; load TBLPTR registers with __pidataBANK5
  1536  00280C  0E4E               	movlw	low __pidataBANK5
  1537  00280E  6EF6               	movwf	tblptrl,c
  1538  002810  0E55               	movlw	high __pidataBANK5
  1539  002812  6EF7               	movwf	tblptrh,c
  1540  002814  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1541  002816  6EF8               	movwf	tblptru,c
  1542  002818  EE05  F0A4         	lfsr	0,__pdataBANK5
  1543  00281C  EE10 F050          	lfsr	1,80
  1544  002820                     copy_data0:
  1545  002820  0009               	tblrd		*+
  1546  002822  CFF5 FFEE          	movff	tablat,postinc0
  1547  002826  50E5               	movf	postdec1,w,c
  1548  002828  50E1               	movf	fsr1l,w,c
  1549  00282A  E1FA               	bnz	copy_data0
  1550                           
  1551                           ; Initialize objects allocated to BANK3 (65 bytes)
  1552                           ; load TBLPTR registers with __pidataBANK3
  1553  00282C  0E4E               	movlw	low __pidataBANK3
  1554  00282E  6EF6               	movwf	tblptrl,c
  1555  002830  0E59               	movlw	high __pidataBANK3
  1556  002832  6EF7               	movwf	tblptrh,c
  1557  002834  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1558  002836  6EF8               	movwf	tblptru,c
  1559  002838  EE03  F0B7         	lfsr	0,__pdataBANK3
  1560  00283C  EE10 F041          	lfsr	1,65
  1561  002840                     copy_data1:
  1562  002840  0009               	tblrd		*+
  1563  002842  CFF5 FFEE          	movff	tablat,postinc0
  1564  002846  50E5               	movf	postdec1,w,c
  1565  002848  50E1               	movf	fsr1l,w,c
  1566  00284A  E1FA               	bnz	copy_data1
  1567                           
  1568                           ; Initialize objects allocated to BANK2 (13 bytes)
  1569                           ; load TBLPTR registers with __pidataBANK2
  1570  00284C  0E46               	movlw	low __pidataBANK2
  1571  00284E  6EF6               	movwf	tblptrl,c
  1572  002850  0E62               	movlw	high __pidataBANK2
  1573  002852  6EF7               	movwf	tblptrh,c
  1574  002854  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1575  002856  6EF8               	movwf	tblptru,c
  1576  002858  EE02  F0F3         	lfsr	0,__pdataBANK2
  1577  00285C  EE10 F00D          	lfsr	1,13
  1578  002860                     copy_data2:
  1579  002860  0009               	tblrd		*+
  1580  002862  CFF5 FFEE          	movff	tablat,postinc0
  1581  002866  50E5               	movf	postdec1,w,c
  1582  002868  50E1               	movf	fsr1l,w,c
  1583  00286A  E1FA               	bnz	copy_data2
  1584                           
  1585                           ; Initialize objects allocated to BANK1 (1 bytes)
  1586                           ; load TBLPTR registers with __pidataBANK1
  1587  00286C  0EC2               	movlw	low __pidataBANK1
  1588  00286E  6EF6               	movwf	tblptrl,c
  1589  002870  0E62               	movlw	high __pidataBANK1
  1590  002872  6EF7               	movwf	tblptrh,c
  1591  002874  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1592  002876  6EF8               	movwf	tblptru,c
  1593  002878  0009               	tblrd		*+	;fetch initializer
  1594  00287A  CFF5 F1FF          	movff	tablat,__pdataBANK1
  1595                           
  1596                           ; Initialize objects allocated to BANK4 (24 bytes)
  1597                           ; load TBLPTR registers with __pidataBANK4
  1598  00287E  0EE6               	movlw	low __pidataBANK4
  1599  002880  6EF6               	movwf	tblptrl,c
  1600  002882  0E60               	movlw	high __pidataBANK4
  1601  002884  6EF7               	movwf	tblptrh,c
  1602  002886  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1603  002888  6EF8               	movwf	tblptru,c
  1604  00288A  EE04  F0D0         	lfsr	0,__pdataBANK4
  1605  00288E  EE10 F018          	lfsr	1,24
  1606  002892                     copy_data3:
  1607  002892  0009               	tblrd		*+
  1608  002894  CFF5 FFEE          	movff	tablat,postinc0
  1609  002898  50E5               	movf	postdec1,w,c
  1610  00289A  50E1               	movf	fsr1l,w,c
  1611  00289C  E1FA               	bnz	copy_data3
  1612                           
  1613                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1614  00289E  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1615  0028A2  EE13 F020          	lfsr	1,800
  1616  0028A6                     clear_0:
  1617  0028A6  6AEE               	clrf	postinc0,c
  1618  0028A8  50E5               	movf	postdec1,w,c
  1619  0028AA  50E1               	movf	fsr1l,w,c
  1620  0028AC  E1FC               	bnz	clear_0
  1621  0028AE  50E2               	movf	fsr1h,w,c
  1622  0028B0  E1FA               	bnz	clear_0
  1623                           
  1624                           ; Clear objects allocated to BANK9 (200 bytes)
  1625  0028B2  EE09  F000         	lfsr	0,__pbssBANK9
  1626  0028B6  0EC8               	movlw	200
  1627  0028B8                     clear_1:
  1628  0028B8  6AEE               	clrf	postinc0,c
  1629  0028BA  06E8               	decf	wreg,f,c
  1630  0028BC  E1FD               	bnz	clear_1
  1631                           
  1632                           ; Clear objects allocated to BANK8 (200 bytes)
  1633  0028BE  EE08  F000         	lfsr	0,__pbssBANK8
  1634  0028C2  0EC8               	movlw	200
  1635  0028C4                     clear_2:
  1636  0028C4  6AEE               	clrf	postinc0,c
  1637  0028C6  06E8               	decf	wreg,f,c
  1638  0028C8  E1FD               	bnz	clear_2
  1639                           
  1640                           ; Clear objects allocated to BANK7 (246 bytes)
  1641  0028CA  EE07  F000         	lfsr	0,__pbssBANK7
  1642  0028CE  0EF6               	movlw	246
  1643  0028D0                     clear_3:
  1644  0028D0  6AEE               	clrf	postinc0,c
  1645  0028D2  06E8               	decf	wreg,f,c
  1646  0028D4  E1FD               	bnz	clear_3
  1647                           
  1648                           ; Clear objects allocated to BANK6 (220 bytes)
  1649  0028D6  EE06  F000         	lfsr	0,__pbssBANK6
  1650  0028DA  0EDC               	movlw	220
  1651  0028DC                     clear_4:
  1652  0028DC  6AEE               	clrf	postinc0,c
  1653  0028DE  06E8               	decf	wreg,f,c
  1654  0028E0  E1FD               	bnz	clear_4
  1655                           
  1656                           ; Clear objects allocated to BANK5 (164 bytes)
  1657  0028E2  EE05  F000         	lfsr	0,__pbssBANK5
  1658  0028E6  0EA4               	movlw	164
  1659  0028E8                     clear_5:
  1660  0028E8  6AEE               	clrf	postinc0,c
  1661  0028EA  06E8               	decf	wreg,f,c
  1662  0028EC  E1FD               	bnz	clear_5
  1663                           
  1664                           ; Clear objects allocated to BANK3 (183 bytes)
  1665  0028EE  EE03  F000         	lfsr	0,__pbssBANK3
  1666  0028F2  0EB7               	movlw	183
  1667  0028F4                     clear_6:
  1668  0028F4  6AEE               	clrf	postinc0,c
  1669  0028F6  06E8               	decf	wreg,f,c
  1670  0028F8  E1FD               	bnz	clear_6
  1671                           
  1672                           ; Clear objects allocated to BANK2 (43 bytes)
  1673  0028FA  EE02  F0C8         	lfsr	0,__pbssBANK2
  1674  0028FE  0E2B               	movlw	43
  1675  002900                     clear_7:
  1676  002900  6AEE               	clrf	postinc0,c
  1677  002902  06E8               	decf	wreg,f,c
  1678  002904  E1FD               	bnz	clear_7
  1679                           
  1680                           ; Clear objects allocated to BANK1 (54 bytes)
  1681  002906  EE01  F0C9         	lfsr	0,__pbssBANK1
  1682  00290A  0E36               	movlw	54
  1683  00290C                     clear_8:
  1684  00290C  6AEE               	clrf	postinc0,c
  1685  00290E  06E8               	decf	wreg,f,c
  1686  002910  E1FD               	bnz	clear_8
  1687                           
  1688                           ; Clear objects allocated to BANK4 (144 bytes)
  1689  002912  EE04  F040         	lfsr	0,__pbssBANK4
  1690  002916  0E90               	movlw	144
  1691  002918                     clear_9:
  1692  002918  6AEE               	clrf	postinc0,c
  1693  00291A  06E8               	decf	wreg,f,c
  1694  00291C  E1FD               	bnz	clear_9
  1695                           
  1696                           ; Clear objects allocated to BANK0 (51 bytes)
  1697  00291E  EE00  F0B0         	lfsr	0,__pbssBANK0
  1698  002922  0E33               	movlw	51
  1699  002924                     clear_10:
  1700  002924  6AEE               	clrf	postinc0,c
  1701  002926  06E8               	decf	wreg,f,c
  1702  002928  E1FD               	bnz	clear_10
  1703                           
  1704                           ; Clear objects allocated to COMRAM (31 bytes)
  1705  00292A  EE00  F023         	lfsr	0,__pbssCOMRAM
  1706  00292E  0E1F               	movlw	31
  1707  002930                     clear_11:
  1708  002930  6AEE               	clrf	postinc0,c
  1709  002932  06E8               	decf	wreg,f,c
  1710  002934  E1FD               	bnz	clear_11
  1711  002936                     end_of_initialization:
  1712                           	opt stack 0
  1713  002936                     __end_of__initialization:
  1714                           	opt stack 0
  1715  002936  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1716  002938  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1717  00293A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1718  00293C  6EF8               	movwf	tblptru,c
  1719  00293E  0100               	movlb	0
  1720  002940  EF2A  F031         	goto	_main	;jump to C main() function
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postdec1	equ	0xFE5
  1728                           fsr1h	equ	0xFE2
  1729                           fsr1l	equ	0xFE1
  1730                           
  1731                           	psect	bssCOMRAM
  1732  000023                     __pbssCOMRAM:
  1733                           	opt stack 0
  1734  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1735                           	opt stack 0
  1736  000023                     	ds	2
  1737  000025                     _USBDeferOUTDataStagePackets:
  1738                           	opt stack 0
  1739  000025                     	ds	1
  1740  000026                     _USBDeferINDataStagePackets:
  1741                           	opt stack 0
  1742  000026                     	ds	1
  1743  000027                     _USBStatusStageEnabledFlag2:
  1744                           	opt stack 0
  1745  000027                     	ds	1
  1746  000028                     ConfigureModem@MdmConfigState:
  1747                           	opt stack 0
  1748  000028                     	ds	1
  1749  000029                     TurnOnModem@TurnOnMdmState:
  1750                           	opt stack 0
  1751  000029                     	ds	1
  1752  00002A                     CheckModem@CheckMdmSts:
  1753                           	opt stack 0
  1754  00002A                     	ds	1
  1755  00002B                     _ComChecCompleted:
  1756                           	opt stack 0
  1757  00002B                     	ds	1
  1758  00002C                     Uart_Uart1RxIsr@UartRxData:
  1759                           	opt stack 0
  1760  00002C                     	ds	1
  1761  00002D                     Uart_MdmGsmGprsReadService@RxState:
  1762                           	opt stack 0
  1763  00002D                     	ds	1
  1764  00002E                     MdmCntSm@MdmCntState:
  1765                           	opt stack 0
  1766  00002E                     	ds	1
  1767  00002F                     RiSm@MdmDrvState:
  1768                           	opt stack 0
  1769  00002F                     	ds	1
  1770  000030                     _Mmd_RingIndicator:
  1771                           	opt stack 0
  1772  000030                     	ds	1
  1773  000031                     I2c_ReadData@ReadStatus:
  1774                           	opt stack 0
  1775  000031                     	ds	1
  1776  000032                     I2c_ReadData@TentativeCounter:
  1777                           	opt stack 0
  1778  000032                     	ds	1
  1779  000033                     I2c_ReadData@DataCounter:
  1780                           	opt stack 0
  1781  000033                     	ds	1
  1782  000034                     I2c_ReadData@I2cReadState:
  1783                           	opt stack 0
  1784  000034                     	ds	1
  1785  000035                     I2c_WriteData@WriteStatus:
  1786                           	opt stack 0
  1787  000035                     	ds	1
  1788  000036                     I2c_WriteData@TentativeCounter:
  1789                           	opt stack 0
  1790  000036                     	ds	1
  1791  000037                     I2c_WriteData@I2cNextState:
  1792                           	opt stack 0
  1793  000037                     	ds	1
  1794  000038                     I2c_WriteData@I2cWriteState:
  1795                           	opt stack 0
  1796  000038                     	ds	1
  1797  000039                     _MdmStsReady:
  1798                           	opt stack 0
  1799  000039                     	ds	1
  1800  00003A                     _NewStringMdmTerminal:
  1801                           	opt stack 0
  1802  00003A                     	ds	1
  1803  00003B                     _NewMdmEvtParserRequest:
  1804                           	opt stack 0
  1805  00003B                     	ds	1
  1806  00003C                     _NewStringReceived:
  1807                           	opt stack 0
  1808  00003C                     	ds	1
  1809  00003D                     _MdmResetRequest:
  1810                           	opt stack 0
  1811  00003D                     	ds	1
  1812  00003E                     _CallClosedEvent:
  1813                           	opt stack 0
  1814  00003E                     	ds	1
  1815  00003F                     _IncomingCallEvent:
  1816                           	opt stack 0
  1817  00003F                     	ds	1
  1818  000040                     _NewSmsEvent:
  1819                           	opt stack 0
  1820  000040                     	ds	1
  1821  000041                     _ActivateRiDetection:
  1822                           	opt stack 0
  1823  000041                     	ds	1
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           postdec1	equ	0xFE5
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           
  1834                           	psect	bssBANK0
  1835  0000B0                     __pbssBANK0:
  1836                           	opt stack 0
  1837  0000B0                     _inPipes:
  1838                           	opt stack 0
  1839  0000B0                     	ds	6
  1840  0000B6                     _pBDTEntryIn:
  1841                           	opt stack 0
  1842  0000B6                     	ds	6
  1843  0000BC                     _CDCDataOutHandle:
  1844                           	opt stack 0
  1845  0000BC                     	ds	2
  1846  0000BE                     _pBDTEntryEP0OutNext:
  1847                           	opt stack 0
  1848  0000BE                     	ds	2
  1849  0000C0                     _pBDTEntryEP0OutCurrent:
  1850                           	opt stack 0
  1851  0000C0                     	ds	2
  1852  0000C2                     _RxLen:
  1853                           	opt stack 0
  1854  0000C2                     	ds	2
  1855  0000C4                     MyApp_Task@memoryFlag:
  1856                           	opt stack 0
  1857  0000C4                     	ds	1
  1858  0000C5                     _cdc_tx_len:
  1859                           	opt stack 0
  1860  0000C5                     	ds	1
  1861  0000C6                     _cdc_trf_state:
  1862                           	opt stack 0
  1863  0000C6                     	ds	1
  1864  0000C7                     _cdc_rx_len:
  1865                           	opt stack 0
  1866  0000C7                     	ds	1
  1867  0000C8                     _USBStatusStageEnabledFlag1:
  1868                           	opt stack 0
  1869  0000C8                     	ds	1
  1870  0000C9                     _USBDeferStatusStagePacket:
  1871                           	opt stack 0
  1872  0000C9                     	ds	1
  1873  0000CA                     _USBStatusStageTimeoutCounter:
  1874                           	opt stack 0
  1875  0000CA                     	ds	1
  1876  0000CB                     _endpoint_number:
  1877                           	opt stack 0
  1878  0000CB                     	ds	1
  1879  0000CC                     _controlTransferState:
  1880                           	opt stack 0
  1881  0000CC                     	ds	1
  1882  0000CD                     _shortPacketStatus:
  1883                           	opt stack 0
  1884  0000CD                     	ds	1
  1885  0000CE                     _USBDeviceState:
  1886                           	opt stack 0
  1887  0000CE                     	ds	1
  1888  0000CF                     _I2cComSts:
  1889                           	opt stack 0
  1890  0000CF                     	ds	1
  1891  0000D0                     HttpGetMethod@GetMethodNextState:
  1892                           	opt stack 0
  1893  0000D0                     	ds	1
  1894  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1895                           	opt stack 0
  1896  0000D1                     	ds	1
  1897  0000D2                     _MdmStatus:
  1898                           	opt stack 0
  1899  0000D2                     	ds	1
  1900  0000D3                     _PhoneNumbLen:
  1901                           	opt stack 0
  1902  0000D3                     	ds	1
  1903  0000D4                     _SmsLen:
  1904                           	opt stack 0
  1905  0000D4                     	ds	1
  1906  0000D5                     _SystemState:
  1907                           	opt stack 0
  1908  0000D5                     	ds	1
  1909  0000D6                     _USTATcopy:
  1910                           	opt stack 0
  1911  0000D6                     	ds	1
  1912  0000D7                     _USBActiveConfiguration:
  1913                           	opt stack 0
  1914  0000D7                     	ds	1
  1915  0000D8                     _I2cReadDataEvt:
  1916                           	opt stack 0
  1917  0000D8                     	ds	1
  1918  0000D9                     _I2cWriteDataEvt:
  1919                           	opt stack 0
  1920  0000D9                     	ds	1
  1921  0000DA                     _GetMethod:
  1922                           	opt stack 0
  1923  0000DA                     	ds	1
  1924  0000DB                     _InitNetwork:
  1925                           	opt stack 0
  1926  0000DB                     	ds	1
  1927  0000DC                     _SmsTxtReady:
  1928                           	opt stack 0
  1929  0000DC                     	ds	1
  1930  0000DD                     _GetSmsText:
  1931                           	opt stack 0
  1932  0000DD                     	ds	1
  1933  0000DE                     _SmsEvent:
  1934                           	opt stack 0
  1935  0000DE                     	ds	1
  1936  0000DF                     _ClipEvent:
  1937                           	opt stack 0
  1938  0000DF                     	ds	1
  1939  0000E0                     _RingEvent:
  1940                           	opt stack 0
  1941  0000E0                     	ds	1
  1942  0000E1                     _SendSmsEvent:
  1943                           	opt stack 0
  1944  0000E1                     	ds	1
  1945  0000E2                     _MdmOnOffPulseRequest:
  1946                           	opt stack 0
  1947  0000E2                     	ds	1
  1948                           tblptru	equ	0xFF8
  1949                           tblptrh	equ	0xFF7
  1950                           tblptrl	equ	0xFF6
  1951                           tablat	equ	0xFF5
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           postdec1	equ	0xFE5
  1955                           fsr1h	equ	0xFE2
  1956                           fsr1l	equ	0xFE1
  1957                           
  1958                           	psect	bssBANK1
  1959  0001C9                     __pbssBANK1:
  1960                           	opt stack 0
  1961  0001C9                     _outPipes:
  1962                           	opt stack 0
  1963  0001C9                     	ds	8
  1964  0001D1                     _CDCDataInHandle:
  1965                           	opt stack 0
  1966  0001D1                     	ds	2
  1967  0001D3                     _Tmr2IsrCallback:
  1968                           	opt stack 0
  1969  0001D3                     	ds	2
  1970  0001D5                     MyApp_Task@blinkSeconds:
  1971                           	opt stack 0
  1972  0001D5                     	ds	1
  1973  0001D6                     initGprsModem@initMdm:
  1974                           	opt stack 0
  1975  0001D6                     	ds	1
  1976  0001D7                     initGprsModem@isInitialized:
  1977                           	opt stack 0
  1978  0001D7                     	ds	1
  1979  0001D8                     	ds	1
  1980  0001D9                     	ds	1
  1981  0001DA                     	ds	1
  1982  0001DB                     	ds	1
  1983  0001DC                     	ds	1
  1984  0001DD                     	ds	1
  1985  0001DE                     	ds	1
  1986  0001DF                     GsmGprsTerminal@SMS:
  1987                           	opt stack 0
  1988  0001DF                     	ds	1
  1989  0001E0                     	ds	1
  1990  0001E1                     _control_signal_bitmap:
  1991                           	opt stack 0
  1992  0001E1                     	ds	1
  1993  0001E2                     _cdc_mem_type:
  1994                           	opt stack 0
  1995  0001E2                     	ds	1
  1996  0001E3                     _USBTicksSinceSuspendEnd:
  1997                           	opt stack 0
  1998  0001E3                     	ds	1
  1999  0001E4                     _BothEP0OutUOWNsSet:
  2000                           	opt stack 0
  2001  0001E4                     	ds	1
  2002  0001E5                     _USBBusIsSuspended:
  2003                           	opt stack 0
  2004  0001E5                     	ds	1
  2005  0001E6                     _RemoteWakeup:
  2006                           	opt stack 0
  2007  0001E6                     	ds	1
  2008  0001E7                     I2cSlv_QueryI2cData@Ret:
  2009                           	opt stack 0
  2010  0001E7                     	ds	1
  2011  0001E8                     I2cSlv_QueryI2cData@I2cOpState:
  2012                           	opt stack 0
  2013  0001E8                     	ds	1
  2014  0001E9                     I2cSendMsgSm@I2cComState:
  2015                           	opt stack 0
  2016  0001E9                     	ds	1
  2017  0001EA                     _I2cBusStatus:
  2018                           	opt stack 0
  2019  0001EA                     	ds	1
  2020  0001EB                     HttpGetMethod@GetMOutSts:
  2021                           	opt stack 0
  2022  0001EB                     	ds	1
  2023  0001EC                     HttpGetMethod@GetMethodState:
  2024                           	opt stack 0
  2025  0001EC                     	ds	1
  2026  0001ED                     InitGprsNetwork@GprsNetInitState:
  2027                           	opt stack 0
  2028  0001ED                     	ds	1
  2029  0001EE                     _PostMethod:
  2030                           	opt stack 0
  2031  0001EE                     	ds	1
  2032  0001EF                     _HttpGetMethodSts:
  2033                           	opt stack 0
  2034  0001EF                     	ds	1
  2035  0001F0                     _GprsNetworkSts:
  2036                           	opt stack 0
  2037  0001F0                     	ds	1
  2038  0001F1                     _ApnLenLocal:
  2039                           	opt stack 0
  2040  0001F1                     	ds	1
  2041  0001F2                     SendSmsSm@SendSms_NextState:
  2042                           	opt stack 0
  2043  0001F2                     	ds	1
  2044  0001F3                     SendSmsSm@SendSms_State:
  2045                           	opt stack 0
  2046  0001F3                     	ds	1
  2047  0001F4                     GetSmsSm@GetSmsState:
  2048                           	opt stack 0
  2049  0001F4                     	ds	1
  2050  0001F5                     ConfigureModem@NextState:
  2051                           	opt stack 0
  2052  0001F5                     	ds	1
  2053  0001F6                     _ReadAddress:
  2054                           	opt stack 0
  2055  0001F6                     	ds	1
  2056  0001F7                     _AlarmEvent:
  2057                           	opt stack 0
  2058  0001F7                     	ds	1
  2059  0001F8                     _Led3OutSts:
  2060                           	opt stack 0
  2061  0001F8                     	ds	1
  2062  0001F9                     _Led3Sts:
  2063                           	opt stack 0
  2064  0001F9                     	ds	1
  2065  0001FA                     _Led2OutSts:
  2066                           	opt stack 0
  2067  0001FA                     	ds	1
  2068  0001FB                     _Led2Sts:
  2069                           	opt stack 0
  2070  0001FB                     	ds	1
  2071  0001FC                     _Led1OutSts:
  2072                           	opt stack 0
  2073  0001FC                     	ds	1
  2074  0001FD                     _Led1Sts:
  2075                           	opt stack 0
  2076  0001FD                     	ds	1
  2077  0001FE                     I2cDummyTx@DummyBuffer:
  2078                           	opt stack 0
  2079  0001FE                     	ds	1
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           postdec1	equ	0xFE5
  2087                           fsr1h	equ	0xFE2
  2088                           fsr1l	equ	0xFE1
  2089                           
  2090                           	psect	dataBANK1
  2091  0001FF                     __pdataBANK1:
  2092                           	opt stack 0
  2093  0001FF                     InitGprsNetwork@GprsInitSts:
  2094                           	opt stack 0
  2095  0001FF                     	ds	1
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           postinc0	equ	0xFEE
  2101                           wreg	equ	0xFE8
  2102                           postdec1	equ	0xFE5
  2103                           fsr1h	equ	0xFE2
  2104                           fsr1l	equ	0xFE1
  2105                           
  2106                           	psect	bssBANK2
  2107  0002C8                     __pbssBANK2:
  2108                           	opt stack 0
  2109  0002C8                     _pCDCDst:
  2110                           	opt stack 0
  2111  0002C8                     	ds	3
  2112  0002CB                     _pCDCSrc:
  2113                           	opt stack 0
  2114  0002CB                     	ds	3
  2115  0002CE                     _ep_data_out:
  2116                           	opt stack 0
  2117  0002CE                     	ds	3
  2118  0002D1                     _ep_data_in:
  2119                           	opt stack 0
  2120  0002D1                     	ds	3
  2121  0002D4                     _pDst:
  2122                           	opt stack 0
  2123  0002D4                     	ds	2
  2124  0002D6                     _ApnLocal:
  2125                           	opt stack 0
  2126  0002D6                     	ds	2
  2127  0002D8                     ConfigureModem@DelayCounter:
  2128                           	opt stack 0
  2129  0002D8                     	ds	2
  2130  0002DA                     ConfigureModem@DelayValueMs:
  2131                           	opt stack 0
  2132  0002DA                     	ds	2
  2133  0002DC                     TurnOnModem@Counter:
  2134                           	opt stack 0
  2135  0002DC                     	ds	2
  2136  0002DE                     UpdateSchFlag@InterruptCounter:
  2137                           	opt stack 0
  2138  0002DE                     	ds	2
  2139  0002E0                     MdmCntSm@Counter:
  2140                           	opt stack 0
  2141  0002E0                     	ds	2
  2142  0002E2                     RiSm@Counter:
  2143                           	opt stack 0
  2144  0002E2                     	ds	2
  2145  0002E4                     _ExtInt1IsrCallback:
  2146                           	opt stack 0
  2147  0002E4                     	ds	2
  2148  0002E6                     _ExtInt0IsrCallback:
  2149                           	opt stack 0
  2150  0002E6                     	ds	2
  2151  0002E8                     _RtccIsrCallback:
  2152                           	opt stack 0
  2153  0002E8                     	ds	2
  2154  0002EA                     _Tmr4IsrCallback:
  2155                           	opt stack 0
  2156  0002EA                     	ds	2
  2157  0002EC                     Term_MainSm@TermMainSmState:
  2158                           	opt stack 0
  2159  0002EC                     	ds	1
  2160  0002ED                     Terminal@FormatOption:
  2161                           	opt stack 0
  2162  0002ED                     	ds	1
  2163  0002EE                     Terminal@SlaveAddr:
  2164                           	opt stack 0
  2165  0002EE                     	ds	1
  2166  0002EF                     Terminal@PackageLen:
  2167                           	opt stack 0
  2168  0002EF                     	ds	1
  2169  0002F0                     Terminal@TermState:
  2170                           	opt stack 0
  2171  0002F0                     	ds	1
  2172  0002F1                     _USBAlternateInterface:
  2173                           	opt stack 0
  2174  0002F1                     	ds	2
  2175                           tblptru	equ	0xFF8
  2176                           tblptrh	equ	0xFF7
  2177                           tblptrl	equ	0xFF6
  2178                           tablat	equ	0xFF5
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           fsr1h	equ	0xFE2
  2183                           fsr1l	equ	0xFE1
  2184                           
  2185                           	psect	dataBANK2
  2186  0002F3                     __pdataBANK2:
  2187                           	opt stack 0
  2188  0002F3                     Terminal@EchoOption:
  2189                           	opt stack 0
  2190  0002F3                     	ds	1
  2191  0002F4                     _MainSystemTimebaseFlag:
  2192                           	opt stack 0
  2193  0002F4                     	ds	1
  2194  0002F5                     _ConnTimeout:
  2195                           	opt stack 0
  2196  0002F5                     	ds	11
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           postdec1	equ	0xFE5
  2204                           fsr1h	equ	0xFE2
  2205                           fsr1l	equ	0xFE1
  2206                           
  2207                           	psect	bssBANK3
  2208  000300                     __pbssBANK3:
  2209                           	opt stack 0
  2210  000300                     _Rtcm_SystemDate:
  2211                           	opt stack 0
  2212  000300                     	ds	8
  2213  000308                     _Rtcm_RtccAlarm:
  2214                           	opt stack 0
  2215  000308                     	ds	6
  2216  00030E                     _pBDTEntryOut:
  2217                           	opt stack 0
  2218  00030E                     	ds	6
  2219  000314                     _BaudRateGen:
  2220                           	opt stack 0
  2221  000314                     	ds	4
  2222  000318                     _USB1msTickCount:
  2223                           	opt stack 0
  2224  000318                     	ds	4
  2225  00031C                     _OsTmr_OsTickCounter:
  2226                           	opt stack 0
  2227  00031C                     	ds	4
  2228  000320                     	ds	2
  2229  000322                     _UsbMasterPhoneNumberLen:
  2230                           	opt stack 0
  2231  000322                     	ds	2
  2232  000324                     _UartConfig:
  2233                           	opt stack 0
  2234  000324                     	ds	21
  2235  000339                     I2cSlv_QueryI2cData@TimeoutTimer:
  2236                           	opt stack 0
  2237  000339                     	ds	11
  2238  000344                     I2cSlv_QueryI2cData@QueryTimer:
  2239                           	opt stack 0
  2240  000344                     	ds	11
  2241  00034F                     _I2cConfig:
  2242                           	opt stack 0
  2243  00034F                     	ds	10
  2244  000359                     _Led3Blink:
  2245                           	opt stack 0
  2246  000359                     	ds	9
  2247  000362                     _Led2Blink:
  2248                           	opt stack 0
  2249  000362                     	ds	9
  2250  00036B                     _Led1Blink:
  2251                           	opt stack 0
  2252  00036B                     	ds	9
  2253  000374                     _dummy_encapsulated_cmd_response:
  2254                           	opt stack 0
  2255  000374                     	ds	8
  2256  00037C                     _line_coding:
  2257                           	opt stack 0
  2258  00037C                     	ds	7
  2259  000383                     _Led3Pulse:
  2260                           	opt stack 0
  2261  000383                     	ds	6
  2262  000389                     _Led2Pulse:
  2263                           	opt stack 0
  2264  000389                     	ds	6
  2265  00038F                     _Led1Pulse:
  2266                           	opt stack 0
  2267  00038F                     	ds	6
  2268  000395                     _I2cRxPacket:
  2269                           	opt stack 0
  2270  000395                     	ds	6
  2271  00039B                     _I2cTxPacket:
  2272                           	opt stack 0
  2273  00039B                     	ds	5
  2274  0003A0                     _HttpGetDataLocal:
  2275                           	opt stack 0
  2276  0003A0                     	ds	5
  2277  0003A5                     Terminal@Addr:
  2278                           	opt stack 0
  2279  0003A5                     	ds	4
  2280  0003A9                     Terminal@Len:
  2281                           	opt stack 0
  2282  0003A9                     	ds	4
  2283  0003AD                     _AlCfg:
  2284                           	opt stack 0
  2285  0003AD                     	ds	4
  2286  0003B1                     _RtcConfig:
  2287                           	opt stack 0
  2288  0003B1                     	ds	4
  2289  0003B5                     initGprsModem@modemCounter:
  2290                           	opt stack 0
  2291  0003B5                     	ds	2
  2292                           tblptru	equ	0xFF8
  2293                           tblptrh	equ	0xFF7
  2294                           tblptrl	equ	0xFF6
  2295                           tablat	equ	0xFF5
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postdec1	equ	0xFE5
  2299                           fsr1h	equ	0xFE2
  2300                           fsr1l	equ	0xFE1
  2301                           
  2302                           	psect	dataBANK3
  2303  0003B7                     __pdataBANK3:
  2304                           	opt stack 0
  2305  0003B7                     ModemEvtParser@F9111:
  2306                           	opt stack 0
  2307  0003B7                     	ds	5
  2308  0003BC                     ModemEvtParser@F9109:
  2309                           	opt stack 0
  2310  0003BC                     	ds	5
  2311  0003C1                     ModemEvtParser@F9107:
  2312                           	opt stack 0
  2313  0003C1                     	ds	4
  2314  0003C5                     MyApp_Task@F9008:
  2315                           	opt stack 0
  2316  0003C5                     	ds	3
  2317  0003C8                     triggerRelay@F8983:
  2318                           	opt stack 0
  2319  0003C8                     	ds	2
  2320  0003CA                     Term_MainSm@TermDelay:
  2321                           	opt stack 0
  2322  0003CA                     	ds	11
  2323  0003D5                     _ConnWait:
  2324                           	opt stack 0
  2325  0003D5                     	ds	11
  2326  0003E0                     SendSmsSm@SwTimer:
  2327                           	opt stack 0
  2328  0003E0                     	ds	11
  2329  0003EB                     CheckModem@Timeout:
  2330                           	opt stack 0
  2331  0003EB                     	ds	11
  2332  0003F6                     MyApp_Task@blinkTicks:
  2333                           	opt stack 0
  2334  0003F6                     	ds	2
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           postinc0	equ	0xFEE
  2340                           wreg	equ	0xFE8
  2341                           postdec1	equ	0xFE5
  2342                           fsr1h	equ	0xFE2
  2343                           fsr1l	equ	0xFE1
  2344                           
  2345                           	psect	bssBANK4
  2346  000440                     __pbssBANK4:
  2347                           	opt stack 0
  2348  000440                     _UsbMasterPhoneNumber:
  2349                           	opt stack 0
  2350  000440                     	ds	15
  2351  00044F                     	ds	10
  2352  000459                     _cdc_notice:
  2353                           	opt stack 0
  2354  000459                     	ds	10
  2355  000463                     Term_MainSm@Data:
  2356                           	opt stack 0
  2357  000463                     	ds	50
  2358  000495                     _PhoneNumber:
  2359                           	opt stack 0
  2360  000495                     	ds	20
  2361  0004A9                     _EepromBuffer:
  2362                           	opt stack 0
  2363  0004A9                     	ds	15
  2364  0004B8                     _callerNumber:
  2365                           	opt stack 0
  2366  0004B8                     	ds	13
  2367  0004C5                     Terminal@SwTimer:
  2368                           	opt stack 0
  2369  0004C5                     	ds	11
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           postdec1	equ	0xFE5
  2377                           fsr1h	equ	0xFE2
  2378                           fsr1l	equ	0xFE1
  2379                           
  2380                           	psect	dataBANK4
  2381  0004D0                     __pdataBANK4:
  2382                           	opt stack 0
  2383  0004D0                     ModemEvtParser@F9113:
  2384                           	opt stack 0
  2385  0004D0                     	ds	10
  2386  0004DA                     MyApp_Task@phone:
  2387                           	opt stack 0
  2388  0004DA                     	ds	14
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           
  2399                           	psect	bssBANK5
  2400  000500                     __pbssBANK5:
  2401                           	opt stack 0
  2402  000500                     _cdc_data_rx:
  2403                           	opt stack 0
  2404  000500                     	ds	64
  2405  000540                     Terminal@TermRxBuffer:
  2406                           	opt stack 0
  2407  000540                     	ds	50
  2408  000572                     _MessageText:
  2409                           	opt stack 0
  2410  000572                     	ds	50
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           
  2421                           	psect	dataBANK5
  2422  0005A4                     __pdataBANK5:
  2423                           	opt stack 0
  2424  0005A4                     _TaskTable:
  2425                           	opt stack 0
  2426  0005A4                     	ds	80
  2427                           tblptru	equ	0xFF8
  2428                           tblptrh	equ	0xFF7
  2429                           tblptrl	equ	0xFF6
  2430                           tablat	equ	0xFF5
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           
  2437                           	psect	bssBANK6
  2438  000600                     __pbssBANK6:
  2439                           	opt stack 0
  2440  000600                     _OsAlarms:
  2441                           	opt stack 0
  2442  000600                     	ds	220
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           
  2453                           	psect	bssBANK7
  2454  000700                     __pbssBANK7:
  2455                           	opt stack 0
  2456  000700                     _Mdm_SmsRx:
  2457                           	opt stack 0
  2458  000700                     	ds	102
  2459  000766                     Terminal@Payload:
  2460                           	opt stack 0
  2461  000766                     	ds	80
  2462  0007B6                     _cdc_data_tx:
  2463                           	opt stack 0
  2464  0007B6                     	ds	64
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1h	equ	0xFE2
  2473                           fsr1l	equ	0xFE1
  2474                           
  2475                           	psect	bssBANK8
  2476  000800                     __pbssBANK8:
  2477                           	opt stack 0
  2478  000800                     GsmGprsTerminal@UsbBuffer:
  2479                           	opt stack 0
  2480  000800                     	ds	200
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           postdec1	equ	0xFE5
  2488                           fsr1h	equ	0xFE2
  2489                           fsr1l	equ	0xFE1
  2490                           
  2491                           	psect	bssBANK9
  2492  000900                     __pbssBANK9:
  2493                           	opt stack 0
  2494  000900                     GsmGprsTerminal@UartBuffer:
  2495                           	opt stack 0
  2496  000900                     	ds	200
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1h	equ	0xFE2
  2505                           fsr1l	equ	0xFE1
  2506                           
  2507                           	psect	bssBIGRAMl
  2508  000AC8                     __pbssBIGRAMl:
  2509                           	opt stack 0
  2510  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2511                           	opt stack 0
  2512  000AC8                     	ds	400
  2513  000C58                     _RxBuffer:
  2514                           	opt stack 0
  2515  000C58                     	ds	400
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           postdec1	equ	0xFE5
  2523                           fsr1h	equ	0xFE2
  2524                           fsr1l	equ	0xFE1
  2525                           
  2526                           	psect	cstackBANK10
  2527  000A00                     __pcstackBANK10:
  2528                           	opt stack 0
  2529  000A00                     Terminal@UsbRxBuffer:
  2530                           	opt stack 0
  2531                           
  2532                           ; 200 bytes @ 0x0
  2533  000A00                     	ds	200
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           postinc0	equ	0xFEE
  2539                           wreg	equ	0xFE8
  2540                           postdec1	equ	0xFE5
  2541                           fsr1h	equ	0xFE2
  2542                           fsr1l	equ	0xFE1
  2543                           
  2544                           	psect	cstackBANK3
  2545  0003F8                     __pcstackBANK3:
  2546                           	opt stack 0
  2547  0003F8                     ??_InitializeTasks:
  2548  0003F8                     ??_ScheduleTasks:
  2549                           
  2550                           ; 1 bytes @ 0x0
  2551  0003F8                     	ds	2
  2552  0003FA                     InitializeTasks@ActiveTaskIndex:
  2553                           	opt stack 0
  2554                           
  2555                           ; 1 bytes @ 0x2
  2556  0003FA                     	ds	2
  2557  0003FC                     ScheduleTasks@ActiveTaskIndex:
  2558                           	opt stack 0
  2559                           
  2560                           ; 1 bytes @ 0x4
  2561  0003FC                     	ds	1
  2562                           tblptru	equ	0xFF8
  2563                           tblptrh	equ	0xFF7
  2564                           tblptrl	equ	0xFF6
  2565                           tablat	equ	0xFF5
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           
  2572                           	psect	cstackBANK2
  2573  000200                     __pcstackBANK2:
  2574                           	opt stack 0
  2575  000200                     Terminal@UsbTxBuffer:
  2576                           	opt stack 0
  2577                           
  2578                           ; 200 bytes @ 0x0
  2579  000200                     	ds	200
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           postdec1	equ	0xFE5
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           
  2590                           	psect	cstackBANK1
  2591  000100                     __pcstackBANK1:
  2592                           	opt stack 0
  2593  000100                     MyApp_Task@cmpString:
  2594                           	opt stack 0
  2595  000100                     SendSmsSm@UartMessage:
  2596                           	opt stack 0
  2597  000100                     InitGprsNetwork@UartMessage:
  2598                           	opt stack 0
  2599  000100                     Terminal@TermTxBuffer:
  2600                           	opt stack 0
  2601  000100                     HttpGetMethod@UartMessage:
  2602                           	opt stack 0
  2603                           
  2604                           ; 200 bytes @ 0x0
  2605  000100                     	ds	3
  2606  000103                     MyApp_Task@memoryResult:
  2607                           	opt stack 0
  2608                           
  2609                           ; 1 bytes @ 0x3
  2610  000103                     	ds	47
  2611  000132                     InitGprsNetwork@Index:
  2612                           	opt stack 0
  2613  000132                     Term_MainSm@FwkMajorStr:
  2614                           	opt stack 0
  2615                           
  2616                           ; 4 bytes @ 0x32
  2617  000132                     	ds	4
  2618  000136                     Term_MainSm@FwkMinorStr:
  2619                           	opt stack 0
  2620                           
  2621                           ; 4 bytes @ 0x36
  2622  000136                     	ds	4
  2623  00013A                     Term_MainSm@FwkBuildStr:
  2624                           	opt stack 0
  2625                           
  2626                           ; 4 bytes @ 0x3A
  2627  00013A                     	ds	142
  2628  0001C8                     HttpGetMethod@Index:
  2629                           	opt stack 0
  2630                           
  2631                           ; 1 bytes @ 0xC8
  2632  0001C8                     	ds	1
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           postdec1	equ	0xFE5
  2640                           fsr1h	equ	0xFE2
  2641                           fsr1l	equ	0xFE1
  2642                           
  2643                           	psect	cstackBANK0
  2644  000060                     __pcstackBANK0:
  2645                           	opt stack 0
  2646  000060                     
  2647                           ; 1 bytes @ 0x0
  2648  000060                     	ds	8
  2649  000068                     ??_LowPriorityIsr:
  2650                           
  2651                           ; 1 bytes @ 0x8
  2652  000068                     	ds	21
  2653  00007D                     ??_isdigit:
  2654  00007D                     ??_isspace:
  2655  00007D                     ??_isupper:
  2656  00007D                     ??_Rtcc_GetRtccValue:
  2657  00007D                     ??_UartTxBufferStatus:
  2658  00007D                     ??_USBStdGetDscHandler:
  2659  00007D                     ??_USBStdGetStatusHandler:
  2660  00007D                     ?_USBTransferOnePacket:
  2661                           	opt stack 0
  2662  00007D                     ?_strlen:
  2663                           	opt stack 0
  2664  00007D                     ?_sprintf:
  2665                           	opt stack 0
  2666  00007D                     ?___wmul:
  2667                           	opt stack 0
  2668  00007D                     ?___awdiv:
  2669                           	opt stack 0
  2670  00007D                     ?___awmod:
  2671                           	opt stack 0
  2672  00007D                     ?___lwmod:
  2673                           	opt stack 0
  2674  00007D                     ?_GetOsTickCounter:
  2675                           	opt stack 0
  2676  00007D                     ?___lmul:
  2677                           	opt stack 0
  2678  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2679                           	opt stack 0
  2680  00007D                     SetAckStatus@AckSts:
  2681                           	opt stack 0
  2682  00007D                     WriteByte@Byte:
  2683                           	opt stack 0
  2684  00007D                     ReadByte@Byte:
  2685                           	opt stack 0
  2686  00007D                     Mcu_SetWdgSts@WdgSts:
  2687                           	opt stack 0
  2688  00007D                     RtccIrqInit@Priority:
  2689                           	opt stack 0
  2690  00007D                     Rtcc_SetRtcStatus@Status:
  2691                           	opt stack 0
  2692  00007D                     TmrBInit@Prescaler:
  2693                           	opt stack 0
  2694  00007D                     Tmr_TmrBIrqSet@Priority:
  2695                           	opt stack 0
  2696  00007D                     Tmr_StartTmr@TmrNumb:
  2697                           	opt stack 0
  2698  00007D                     UartWriteByte@ByteToWrite:
  2699                           	opt stack 0
  2700  00007D                     USBTransferOnePacket@dir:
  2701                           	opt stack 0
  2702  00007D                     USBConfigureEndpoint@direction:
  2703                           	opt stack 0
  2704  00007D                     USBCtrlTrfTxService@byteToSend:
  2705                           	opt stack 0
  2706  00007D                     USBCtrlTrfRxService@i:
  2707                           	opt stack 0
  2708  00007D                     Led_SetLedStatus@LedSts:
  2709                           	opt stack 0
  2710  00007D                     toupper@c:
  2711                           	opt stack 0
  2712  00007D                     tolower@c:
  2713                           	opt stack 0
  2714  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2715                           	opt stack 0
  2716  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2717                           	opt stack 0
  2718  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2719                           	opt stack 0
  2720  00007D                     Uart_ClearRxBuffer@Index:
  2721                           	opt stack 0
  2722  00007D                     GenerateEvt@Event:
  2723                           	opt stack 0
  2724  00007D                     ReceiveEvt@Event:
  2725                           	opt stack 0
  2726  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2727                           	opt stack 0
  2728  00007D                     StringCopy@SourceStr:
  2729                           	opt stack 0
  2730  00007D                     ClearBuffer@Buffer:
  2731                           	opt stack 0
  2732  00007D                     sprintf@sp:
  2733                           	opt stack 0
  2734  00007D                     ___wmul@multiplier:
  2735                           	opt stack 0
  2736  00007D                     ___awdiv@dividend:
  2737                           	opt stack 0
  2738  00007D                     ___awmod@dividend:
  2739                           	opt stack 0
  2740  00007D                     ___lwmod@dividend:
  2741                           	opt stack 0
  2742  00007D                     memcpy@d1:
  2743                           	opt stack 0
  2744  00007D                     memset@p1:
  2745                           	opt stack 0
  2746  00007D                     strcat@to:
  2747                           	opt stack 0
  2748  00007D                     strcpy@to:
  2749                           	opt stack 0
  2750  00007D                     strlen@s:
  2751                           	opt stack 0
  2752  00007D                     ___lmul@multiplier:
  2753                           	opt stack 0
  2754                           
  2755                           ; 4 bytes @ 0x1D
  2756  00007D                     	ds	1
  2757  00007E                     ??_USBConfigureEndpoint:
  2758  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2759                           	opt stack 0
  2760  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2761                           	opt stack 0
  2762  00007E                     TmrBInit@Postscaler:
  2763                           	opt stack 0
  2764  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2765                           	opt stack 0
  2766  00007E                     UartWriteByte@Module:
  2767                           	opt stack 0
  2768  00007E                     UartTxBufferStatus@Module:
  2769                           	opt stack 0
  2770  00007E                     USBCtrlTrfRxService@byteToRead:
  2771                           	opt stack 0
  2772  00007E                     USBCtrlTrfInHandler@lastDTS:
  2773                           	opt stack 0
  2774  00007E                     Led_SetLedStatus@Led:
  2775                           	opt stack 0
  2776  00007E                     _isdigit$6193:
  2777                           	opt stack 0
  2778  00007E                     _isspace$6462:
  2779                           	opt stack 0
  2780  00007E                     _isupper$6465:
  2781                           	opt stack 0
  2782  00007E                     I2c_WriteData@WritePacket:
  2783                           	opt stack 0
  2784  00007E                     Rtcc_RtcConfig@RtcConfig:
  2785                           	opt stack 0
  2786  00007E                     USBTransferOnePacket@data:
  2787                           	opt stack 0
  2788  00007E                     USBStdGetStatusHandler@p:
  2789                           	opt stack 0
  2790                           
  2791                           ; 2 bytes @ 0x1E
  2792  00007E                     	ds	1
  2793  00007F                     ??_strlen:
  2794  00007F                     ??_Rtcc_AlarmConfig:
  2795  00007F                     ??_TmrBInit:
  2796  00007F                     Irq_InitIntController@IntPriorityEn:
  2797                           	opt stack 0
  2798  00007F                     Rtcc_GetRtccValue@RetValue:
  2799                           	opt stack 0
  2800  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  2801                           	opt stack 0
  2802  00007F                     UartTxBufferStatus@TxBufferStatus:
  2803                           	opt stack 0
  2804  00007F                     GenerateEvt@EventStatus:
  2805                           	opt stack 0
  2806  00007F                     isdigit@c:
  2807                           	opt stack 0
  2808  00007F                     isspace@c:
  2809                           	opt stack 0
  2810  00007F                     isupper@c:
  2811                           	opt stack 0
  2812  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  2813                           	opt stack 0
  2814  00007F                     StringCopy@DestStr:
  2815                           	opt stack 0
  2816  00007F                     ClearBuffer@Len:
  2817                           	opt stack 0
  2818  00007F                     sprintf@f:
  2819                           	opt stack 0
  2820  00007F                     ___wmul@multiplicand:
  2821                           	opt stack 0
  2822  00007F                     ___awdiv@divisor:
  2823                           	opt stack 0
  2824  00007F                     ___awmod@divisor:
  2825                           	opt stack 0
  2826  00007F                     ___lwmod@divisor:
  2827                           	opt stack 0
  2828  00007F                     memcpy@s1:
  2829                           	opt stack 0
  2830  00007F                     memset@c:
  2831                           	opt stack 0
  2832  00007F                     strcat@from:
  2833                           	opt stack 0
  2834  00007F                     strcpy@from:
  2835                           	opt stack 0
  2836                           
  2837                           ; 2 bytes @ 0x1F
  2838  00007F                     	ds	1
  2839  000080                     ??_isalpha:
  2840  000080                     ??_isxdigit:
  2841  000080                     ??_I2c_WriteData:
  2842  000080                     ??_Rtcc_RtcConfig:
  2843  000080                     Rtcc_GetRtccValue@RegValue:
  2844                           	opt stack 0
  2845  000080                     TmrBInit@TmrNumb:
  2846                           	opt stack 0
  2847  000080                     ReceiveEvt@EventStatus:
  2848                           	opt stack 0
  2849  000080                     USBTransferOnePacket@len:
  2850                           	opt stack 0
  2851  000080                     I2c_ReadData@ReadPacket:
  2852                           	opt stack 0
  2853  000080                     Uart_WriteConstString@ConstStringToWrite:
  2854                           	opt stack 0
  2855  000080                     Uart_WriteString@StringToWrite:
  2856                           	opt stack 0
  2857  000080                     Uart_WriteStringLen@StringToWrite:
  2858                           	opt stack 0
  2859  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  2860                           	opt stack 0
  2861  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2862                           	opt stack 0
  2863                           
  2864                           ; 2 bytes @ 0x20
  2865  000080                     	ds	1
  2866  000081                     ?_GetElapsedTime:
  2867                           	opt stack 0
  2868  000081                     ?_Rtcm_GetRtccDate:
  2869                           	opt stack 0
  2870  000081                     Mdm_IsSmsReceived@Ret:
  2871                           	opt stack 0
  2872  000081                     Mdm_IsRinging@Ret:
  2873                           	opt stack 0
  2874  000081                     I2cSlv_I2cReadMsgSts@Result:
  2875                           	opt stack 0
  2876  000081                     USBTransferOnePacket@ep:
  2877                           	opt stack 0
  2878  000081                     Led_SetLedBlinkTime@Led:
  2879                           	opt stack 0
  2880  000081                     ___awdiv@counter:
  2881                           	opt stack 0
  2882  000081                     ___awmod@counter:
  2883                           	opt stack 0
  2884  000081                     ___lwmod@counter:
  2885                           	opt stack 0
  2886  000081                     _isalpha$6459:
  2887                           	opt stack 0
  2888  000081                     _isxdigit$6469:
  2889                           	opt stack 0
  2890  000081                     OsTmr_StartTimer@Timer:
  2891                           	opt stack 0
  2892  000081                     StringCopy@Len:
  2893                           	opt stack 0
  2894  000081                     ClearBuffer@Index:
  2895                           	opt stack 0
  2896  000081                     ___wmul@product:
  2897                           	opt stack 0
  2898  000081                     memcpy@n:
  2899                           	opt stack 0
  2900  000081                     memset@n:
  2901                           	opt stack 0
  2902  000081                     strcat@cp:
  2903                           	opt stack 0
  2904  000081                     strcpy@cp:
  2905                           	opt stack 0
  2906  000081                     strlen@cp:
  2907                           	opt stack 0
  2908  000081                     GetElapsedTime@StartTime:
  2909                           	opt stack 0
  2910  000081                     ___lmul@multiplicand:
  2911                           	opt stack 0
  2912                           
  2913                           ; 4 bytes @ 0x21
  2914  000081                     	ds	1
  2915  000082                     ??_I2c_ReadData:
  2916  000082                     Uart_WriteConstString@Module:
  2917                           	opt stack 0
  2918  000082                     Uart_WriteString@Module:
  2919                           	opt stack 0
  2920  000082                     Uart_WriteStringLen@Len:
  2921                           	opt stack 0
  2922  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  2923                           	opt stack 0
  2924  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2925                           	opt stack 0
  2926  000082                     USBConfigureEndpoint@EPNum:
  2927                           	opt stack 0
  2928  000082                     ___awdiv@sign:
  2929                           	opt stack 0
  2930  000082                     ___awmod@sign:
  2931                           	opt stack 0
  2932  000082                     isalpha@c:
  2933                           	opt stack 0
  2934  000082                     isxdigit@c:
  2935                           	opt stack 0
  2936  000082                     USBTransferOnePacket@handle:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x22
  2940  000082                     	ds	1
  2941  000083                     ??_StringCopy:
  2942  000083                     ?_GetCallerNumber:
  2943                           	opt stack 0
  2944  000083                     ?_atoi:
  2945                           	opt stack 0
  2946  000083                     ?_xtoi:
  2947                           	opt stack 0
  2948  000083                     ?___lwdiv:
  2949                           	opt stack 0
  2950  000083                     Uart_WriteStringLen@Index:
  2951                           	opt stack 0
  2952  000083                     Mdm_SetSmsFormat@Index:
  2953                           	opt stack 0
  2954  000083                     I2cSlv_SendI2cMsg@DataLenght:
  2955                           	opt stack 0
  2956  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2957                           	opt stack 0
  2958  000083                     sprintf@flag:
  2959                           	opt stack 0
  2960  000083                     memcpy@tmp:
  2961                           	opt stack 0
  2962  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  2963                           	opt stack 0
  2964  000083                     USBConfigureEndpoint@handle:
  2965                           	opt stack 0
  2966  000083                     putUSBUSART@data:
  2967                           	opt stack 0
  2968  000083                     atoi@s:
  2969                           	opt stack 0
  2970  000083                     ___awdiv@quotient:
  2971                           	opt stack 0
  2972  000083                     ___lwdiv@dividend:
  2973                           	opt stack 0
  2974  000083                     memset@p:
  2975                           	opt stack 0
  2976  000083                     xtoi@s:
  2977                           	opt stack 0
  2978  000083                     OsTmr_StartTimer@Timeout:
  2979                           	opt stack 0
  2980                           
  2981                           ; 4 bytes @ 0x23
  2982  000083                     	ds	1
  2983  000084                     Uart_WriteStringLen@Module:
  2984                           	opt stack 0
  2985  000084                     I2cSlv_SendI2cMsg@TxSts:
  2986                           	opt stack 0
  2987  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  2988                           	opt stack 0
  2989  000084                     CDCTxService@i:
  2990                           	opt stack 0
  2991  000084                     getsUSBUSART@buffer:
  2992                           	opt stack 0
  2993  000084                     sprintf@ap:
  2994                           	opt stack 0
  2995  000084                     memcpy@d:
  2996                           	opt stack 0
  2997  000084                     Mdm_SetSmsFormat@UartMessage:
  2998                           	opt stack 0
  2999                           
  3000                           ; 20 bytes @ 0x24
  3001  000084                     	ds	1
  3002  000085                     ??_atoi:
  3003  000085                     ??_xtoi:
  3004  000085                     ??_GetElapsedTime:
  3005  000085                     Rtcc_SetRtccValue@Value:
  3006                           	opt stack 0
  3007  000085                     USBDeviceInit@i:
  3008                           	opt stack 0
  3009  000085                     USBEnableEndpoint@options:
  3010                           	opt stack 0
  3011  000085                     putUSBUSART@length:
  3012                           	opt stack 0
  3013  000085                     CDCTxService@byte_to_send:
  3014                           	opt stack 0
  3015  000085                     StringCompare@String1:
  3016                           	opt stack 0
  3017  000085                     StringCopy@Index:
  3018                           	opt stack 0
  3019  000085                     ___lwdiv@divisor:
  3020                           	opt stack 0
  3021  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3022                           	opt stack 0
  3023  000085                     ___lmul@product:
  3024                           	opt stack 0
  3025                           
  3026                           ; 4 bytes @ 0x25
  3027  000085                     	ds	1
  3028  000086                     ??_Rtcc_SetRtccValue:
  3029  000086                     getsUSBUSART@len:
  3030                           	opt stack 0
  3031  000086                     sprintf@c:
  3032                           	opt stack 0
  3033  000086                     USBEnableEndpoint@p:
  3034                           	opt stack 0
  3035  000086                     memcpy@s:
  3036                           	opt stack 0
  3037                           
  3038                           ; 2 bytes @ 0x26
  3039  000086                     	ds	1
  3040  000087                     atoi@sign:
  3041                           	opt stack 0
  3042  000087                     ___lwdiv@counter:
  3043                           	opt stack 0
  3044  000087                     xtoi@sign:
  3045                           	opt stack 0
  3046  000087                     StringCompare@String2:
  3047                           	opt stack 0
  3048  000087                     sprintf@cp:
  3049                           	opt stack 0
  3050                           
  3051                           ; 2 bytes @ 0x27
  3052  000087                     	ds	1
  3053  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3054                           	opt stack 0
  3055  000088                     USBEnableEndpoint@ep:
  3056                           	opt stack 0
  3057  000088                     atoi@a:
  3058                           	opt stack 0
  3059  000088                     ___lwdiv@quotient:
  3060                           	opt stack 0
  3061  000088                     xtoi@val:
  3062                           	opt stack 0
  3063                           
  3064                           ; 2 bytes @ 0x28
  3065  000088                     	ds	1
  3066  000089                     ??_Rtcm_GetRtccDate:
  3067  000089                     ?_strtol:
  3068                           	opt stack 0
  3069  000089                     ?___lldiv:
  3070                           	opt stack 0
  3071  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3072                           	opt stack 0
  3073  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3074                           	opt stack 0
  3075  000089                     StringCompare@Len:
  3076                           	opt stack 0
  3077  000089                     strtol@s:
  3078                           	opt stack 0
  3079  000089                     ___lldiv@dividend:
  3080                           	opt stack 0
  3081  000089                     Rtcm_SetRtccDate@Date:
  3082                           	opt stack 0
  3083                           
  3084                           ; 8 bytes @ 0x29
  3085  000089                     	ds	1
  3086  00008A                     xtoi@c:
  3087                           	opt stack 0
  3088  00008A                     LedBlinkStateMachine@LedBlink:
  3089                           	opt stack 0
  3090  00008A                     LedPulseStateMachine@LedPulse:
  3091                           	opt stack 0
  3092  00008A                     secondsAppTimer@counter:
  3093                           	opt stack 0
  3094  00008A                     utoa@buf:
  3095                           	opt stack 0
  3096  00008A                     Rtcm_GetRtccDate@LocalDate:
  3097                           	opt stack 0
  3098                           
  3099                           ; 8 bytes @ 0x2A
  3100  00008A                     	ds	1
  3101  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3102                           	opt stack 0
  3103  00008B                     strtol@endptr:
  3104                           	opt stack 0
  3105                           
  3106                           ; 2 bytes @ 0x2B
  3107  00008B                     	ds	1
  3108  00008C                     LedPulseStateMachine@Led:
  3109                           	opt stack 0
  3110  00008C                     secondsAppTimer@isCyclic:
  3111                           	opt stack 0
  3112  00008C                     utoa@val:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x2C
  3116  00008C                     	ds	1
  3117  00008D                     StringCompare@Result:
  3118                           	opt stack 0
  3119  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3120                           	opt stack 0
  3121  00008D                     strtol@base:
  3122                           	opt stack 0
  3123  00008D                     GetElapsedTime@TimeValue:
  3124                           	opt stack 0
  3125  00008D                     ___lldiv@divisor:
  3126                           	opt stack 0
  3127                           
  3128                           ; 4 bytes @ 0x2D
  3129  00008D                     	ds	1
  3130  00008E                     StringCompare@Index:
  3131                           	opt stack 0
  3132  00008E                     utoa@base:
  3133                           	opt stack 0
  3134                           
  3135                           ; 2 bytes @ 0x2E
  3136  00008E                     	ds	1
  3137  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3138  00008F                     ??_strtol:
  3139  00008F                     secondsAppTimer@seconds:
  3140                           	opt stack 0
  3141  00008F                     LedStateMachine@LedSts:
  3142                           	opt stack 0
  3143                           
  3144                           ; 2 bytes @ 0x2F
  3145  00008F                     	ds	1
  3146  000090                     secondsAppTimer@isExpired:
  3147                           	opt stack 0
  3148  000090                     utoa@v:
  3149                           	opt stack 0
  3150  000090                     ModemEvtParser@CallReadyString:
  3151                           	opt stack 0
  3152                           
  3153                           ; 10 bytes @ 0x30
  3154  000090                     	ds	1
  3155  000091                     ??_USBStdFeatureReqHandler:
  3156  000091                     USBStdSetCfgHandler@i:
  3157                           	opt stack 0
  3158  000091                     LedStateMachine@LedOut:
  3159                           	opt stack 0
  3160  000091                     secondsAppTimer@destinationTicks:
  3161                           	opt stack 0
  3162  000091                     GetElapsedTime@CurrentTimestamp:
  3163                           	opt stack 0
  3164  000091                     ___lldiv@quotient:
  3165                           	opt stack 0
  3166                           
  3167                           ; 4 bytes @ 0x31
  3168  000091                     	ds	1
  3169  000092                     utoa@c:
  3170                           	opt stack 0
  3171  000092                     USBStdFeatureReqHandler@pUEP:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x32
  3175  000092                     	ds	1
  3176  000093                     strtol@sign:
  3177                           	opt stack 0
  3178  000093                     LedStateMachine@LedBlink:
  3179                           	opt stack 0
  3180  000093                     blinkForSeconds@blinkTicks:
  3181                           	opt stack 0
  3182  000093                     itoa@buf:
  3183                           	opt stack 0
  3184                           
  3185                           ; 2 bytes @ 0x33
  3186  000093                     	ds	1
  3187  000094                     USBStdFeatureReqHandler@current_ep_data:
  3188                           	opt stack 0
  3189  000094                     strtol@a:
  3190                           	opt stack 0
  3191                           
  3192                           ; 4 bytes @ 0x34
  3193  000094                     	ds	1
  3194  000095                     blinkForSeconds@seconds:
  3195                           	opt stack 0
  3196  000095                     ___lldiv@counter:
  3197                           	opt stack 0
  3198  000095                     OsTmr_GetTimerStatus@Timer:
  3199                           	opt stack 0
  3200  000095                     USBStdFeatureReqHandler@p:
  3201                           	opt stack 0
  3202  000095                     LedStateMachine@LedPulse:
  3203                           	opt stack 0
  3204  000095                     itoa@val:
  3205                           	opt stack 0
  3206                           
  3207                           ; 2 bytes @ 0x35
  3208  000095                     	ds	1
  3209  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3210                           	opt stack 0
  3211  000096                     SetUartBaudRate@UartConfig:
  3212                           	opt stack 0
  3213  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3214                           	opt stack 0
  3215                           
  3216                           ; 4 bytes @ 0x36
  3217  000096                     	ds	1
  3218  000097                     ??_USBCtrlEPService:
  3219  000097                     itoa@base:
  3220                           	opt stack 0
  3221                           
  3222                           ; 2 bytes @ 0x37
  3223  000097                     	ds	1
  3224  000098                     Tmr_TmrBPrSet@Prescaler:
  3225                           	opt stack 0
  3226  000098                     Mdm_SetSmsFormat@TextFormat:
  3227                           	opt stack 0
  3228  000098                     USBDeviceTasks@i:
  3229                           	opt stack 0
  3230  000098                     LedStateMachine@LedOutSts:
  3231                           	opt stack 0
  3232  000098                     strtol@c:
  3233                           	opt stack 0
  3234                           
  3235                           ; 1 bytes @ 0x38
  3236  000098                     	ds	1
  3237  000099                     Tmr_TmrBPrSet@Postscaler:
  3238                           	opt stack 0
  3239  000099                     SetUartBaudRate@Module:
  3240                           	opt stack 0
  3241  000099                     LedStateMachine@Led:
  3242                           	opt stack 0
  3243  000099                     itoa@cp:
  3244                           	opt stack 0
  3245                           
  3246                           ; 2 bytes @ 0x39
  3247  000099                     	ds	1
  3248  00009A                     ??_Led_MainTask:
  3249  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3250                           	opt stack 0
  3251  00009A                     SetUartBaudRate@BaudRateRegister:
  3252                           	opt stack 0
  3253  00009A                     SetBaudRate@McuClockHz:
  3254                           	opt stack 0
  3255  00009A                     ModemEvtParser@ClipString:
  3256                           	opt stack 0
  3257                           
  3258                           ; 5 bytes @ 0x3A
  3259  00009A                     	ds	1
  3260  00009B                     ??_SendSmsSm:
  3261  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3262                           	opt stack 0
  3263  00009B                     OsTmr_Wait@WaitTimer:
  3264                           	opt stack 0
  3265  00009B                     InitGprsNetwork@Apn:
  3266                           	opt stack 0
  3267  00009B                     HttpGetMethod@GetData:
  3268                           	opt stack 0
  3269                           
  3270                           ; 2 bytes @ 0x3B
  3271  00009B                     	ds	1
  3272  00009C                     SetUartBaudRate@DivisionFactor:
  3273                           	opt stack 0
  3274  00009C                     Tmr_TmrBPrSet@Divisor:
  3275                           	opt stack 0
  3276                           
  3277                           ; 4 bytes @ 0x3C
  3278  00009C                     	ds	1
  3279  00009D                     ??_HttpGetMethod:
  3280  00009D                     InitGprsNetwork@ApnLen:
  3281                           	opt stack 0
  3282  00009D                     Uart_InitUartModule@UartConfig:
  3283                           	opt stack 0
  3284  00009D                     OsTmr_Wait@DelayMs:
  3285                           	opt stack 0
  3286                           
  3287                           ; 4 bytes @ 0x3D
  3288  00009D                     	ds	1
  3289  00009E                     ??_SetBaudRate:
  3290  00009E                     ??_InitGprsNetwork:
  3291                           
  3292                           ; 1 bytes @ 0x3E
  3293  00009E                     	ds	1
  3294  00009F                     ??_Uart_InitUartModule:
  3295  00009F                     ModemEvtParser@SmsString:
  3296                           	opt stack 0
  3297                           
  3298                           ; 5 bytes @ 0x3F
  3299  00009F                     	ds	1
  3300  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3301                           	opt stack 0
  3302                           
  3303                           ; 2 bytes @ 0x40
  3304  0000A0                     	ds	1
  3305  0000A1                     Uart_InitUartModule@Module:
  3306                           	opt stack 0
  3307  0000A1                     OsTmr_Wait@Ret:
  3308                           	opt stack 0
  3309                           
  3310                           ; 1 bytes @ 0x41
  3311  0000A1                     	ds	1
  3312  0000A2                     ??_Terminal:
  3313  0000A2                     I2c_InitI2cModule@I2cConfig:
  3314                           	opt stack 0
  3315  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3316                           	opt stack 0
  3317                           
  3318                           ; 2 bytes @ 0x42
  3319  0000A2                     	ds	1
  3320  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3321                           	opt stack 0
  3322                           
  3323                           ; 1 bytes @ 0x43
  3324  0000A3                     	ds	1
  3325  0000A4                     ??_I2c_InitI2cModule:
  3326  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3327                           	opt stack 0
  3328  0000A4                     Terminal@i:
  3329                           	opt stack 0
  3330  0000A4                     ModemEvtParser@RingString:
  3331                           	opt stack 0
  3332  0000A4                     InitSchedTimer@TmrBConfig:
  3333                           	opt stack 0
  3334                           
  3335                           ; 7 bytes @ 0x44
  3336  0000A4                     	ds	1
  3337  0000A5                     Terminal@ReceivedBytes:
  3338                           	opt stack 0
  3339  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3340                           	opt stack 0
  3341                           
  3342                           ; 2 bytes @ 0x45
  3343  0000A5                     	ds	1
  3344  0000A6                     Terminal@Index:
  3345                           	opt stack 0
  3346                           
  3347                           ; 1 bytes @ 0x46
  3348  0000A6                     	ds	1
  3349  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3350                           	opt stack 0
  3351                           
  3352                           ; 1 bytes @ 0x47
  3353  0000A7                     	ds	1
  3354  0000A8                     ModemEvtParser@Match:
  3355                           	opt stack 0
  3356  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3357                           	opt stack 0
  3358                           
  3359                           ; 1 bytes @ 0x48
  3360  0000A8                     	ds	1
  3361  0000A9                     ModemEvtParser@CompareIdx:
  3362                           	opt stack 0
  3363  0000A9                     Eeprom_Read@ReadBuffer:
  3364                           	opt stack 0
  3365                           
  3366                           ; 2 bytes @ 0x49
  3367  0000A9                     	ds	1
  3368  0000AA                     
  3369                           ; 1 bytes @ 0x4A
  3370  0000AA                     	ds	1
  3371  0000AB                     Eeprom_Read@DataLength:
  3372                           	opt stack 0
  3373                           
  3374                           ; 1 bytes @ 0x4B
  3375  0000AB                     	ds	1
  3376  0000AC                     Eeprom_Read@MemoryAddress:
  3377                           	opt stack 0
  3378                           
  3379                           ; 1 bytes @ 0x4C
  3380  0000AC                     	ds	1
  3381  0000AD                     Eeprom_Read@SlaveAddress:
  3382                           	opt stack 0
  3383                           
  3384                           ; 1 bytes @ 0x4D
  3385  0000AD                     	ds	1
  3386  0000AE                     Eeprom_Read@ReadSts:
  3387                           	opt stack 0
  3388                           
  3389                           ; 1 bytes @ 0x4E
  3390  0000AE                     	ds	1
  3391  0000AF                     Eeprom_Read@QuerySts:
  3392                           	opt stack 0
  3393                           
  3394                           ; 1 bytes @ 0x4F
  3395  0000AF                     	ds	1
  3396  0000B0                     tblptru	equ	0xFF8
  3397                           tblptrh	equ	0xFF7
  3398                           tblptrl	equ	0xFF6
  3399                           tablat	equ	0xFF5
  3400                           postinc0	equ	0xFEE
  3401                           wreg	equ	0xFE8
  3402                           postdec1	equ	0xFE5
  3403                           fsr1h	equ	0xFE2
  3404                           fsr1l	equ	0xFE1
  3405                           
  3406                           ; 1 bytes @ 0x50
  3407                           
  3408                           	psect	cstackCOMRAM
  3409  000001                     __pcstackCOMRAM:
  3410                           	opt stack 0
  3411  000001                     i2GenerateEvt@Event:
  3412                           	opt stack 0
  3413                           
  3414                           ; 2 bytes @ 0x0
  3415  000001                     	ds	2
  3416  000003                     i2GenerateEvt@EventStatus:
  3417                           	opt stack 0
  3418                           
  3419                           ; 1 bytes @ 0x2
  3420  000003                     	ds	1
  3421  000004                     Uart_MdmGsmGprsReadService@UartData:
  3422                           	opt stack 0
  3423                           
  3424                           ; 1 bytes @ 0x3
  3425  000004                     	ds	1
  3426  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3427                           	opt stack 0
  3428                           
  3429                           ; 2 bytes @ 0x4
  3430  000005                     	ds	2
  3431  000007                     ??_HighPriorityIsr:
  3432                           
  3433                           ; 1 bytes @ 0x6
  3434  000007                     	ds	18
  3435  000019                     ?i1___wmul:
  3436                           	opt stack 0
  3437  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3438                           	opt stack 0
  3439  000019                     i1GenerateEvt@Event:
  3440                           	opt stack 0
  3441  000019                     i1___wmul@multiplier:
  3442                           	opt stack 0
  3443                           
  3444                           ; 2 bytes @ 0x18
  3445  000019                     	ds	2
  3446  00001B                     i1GenerateEvt@EventStatus:
  3447                           	opt stack 0
  3448  00001B                     i1___wmul@multiplicand:
  3449                           	opt stack 0
  3450                           
  3451                           ; 2 bytes @ 0x1A
  3452  00001B                     	ds	1
  3453  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3454                           	opt stack 0
  3455                           
  3456                           ; 2 bytes @ 0x1B
  3457  00001C                     	ds	1
  3458  00001D                     i1___wmul@product:
  3459                           	opt stack 0
  3460                           
  3461                           ; 2 bytes @ 0x1C
  3462  00001D                     	ds	1
  3463  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3464                           	opt stack 0
  3465                           
  3466                           ; 1 bytes @ 0x1D
  3467  00001E                     	ds	1
  3468  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3469                           	opt stack 0
  3470                           
  3471                           ; 1 bytes @ 0x1E
  3472  00001F                     	ds	1
  3473  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3474                           	opt stack 0
  3475                           
  3476                           ; 1 bytes @ 0x1F
  3477  000020                     	ds	1
  3478  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3479                           	opt stack 0
  3480                           
  3481                           ; 2 bytes @ 0x20
  3482  000021                     	ds	2
  3483  000023                     tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           postinc0	equ	0xFEE
  3488                           wreg	equ	0xFE8
  3489                           postdec1	equ	0xFE5
  3490                           fsr1h	equ	0xFE2
  3491                           fsr1l	equ	0xFE1
  3492                           
  3493                           ; 1 bytes @ 0x22
  3494 ;;
  3495 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3496 ;;
  3497 ;; *************** function _main *****************
  3498 ;; Defined at:
  3499 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2   14[None  ] short 
  3506 ;; Registers used:
  3507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels required when called:   23
  3519 ;; This function calls:
  3520 ;;		_Sch_MainScheduler
  3521 ;;		_SystemInit
  3522 ;; This function is called by:
  3523 ;;		Startup code after reset
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text0
  3528  006254                     __ptext0:
  3529                           	opt stack 0
  3530  006254                     _main:
  3531                           	opt stack 8
  3532                           
  3533                           ;main.c: 61: SystemInit();
  3534                           
  3535                           ;incstack = 0
  3536  006254  EC5C  F02E         	call	_SystemInit	;wreg free
  3537                           
  3538                           ;main.c: 64: Sch_MainScheduler();
  3539  006258  EC2E  F030         	call	_Sch_MainScheduler	;wreg free
  3540                           
  3541                           ;main.c: 67: return 0;
  3542                           ;	Return value of _main is never used
  3543  00625C  EF66  F000         	goto	start
  3544  006260                     __end_of_main:
  3545                           	opt stack 0
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           postdec1	equ	0xFE5
  3553                           fsr1h	equ	0xFE2
  3554                           fsr1l	equ	0xFE1
  3555                           
  3556 ;; *************** function _SystemInit *****************
  3557 ;; Defined at:
  3558 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:   15
  3579 ;; This function calls:
  3580 ;;		_InitSchedTimer
  3581 ;;		_Irq_InitIntController
  3582 ;;		_Mcu_ConfigExtInt
  3583 ;;		_Mcu_StartSystemPll
  3584 ;;		_Pm_DsReleasePinControl
  3585 ;;		_Tmr_RegisterTmr2IsrCallback
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text1
  3592  005CB8                     __ptext1:
  3593                           	opt stack 0
  3594  005CB8                     _SystemInit:
  3595                           	opt stack 15
  3596                           
  3597                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3598                           
  3599                           ;incstack = 0
  3600  005CB8  EC4D  F031         	call	_Pm_DsReleasePinControl	;wreg free
  3601                           
  3602                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3603  005CBC  EC1F  F030         	call	_Mcu_StartSystemPll	;wreg free
  3604                           
  3605                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3606  005CC0  0E01               	movlw	1
  3607  005CC2  0100               	movlb	0	; () banked
  3608  005CC4  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3609  005CC6  0E01               	movlw	1
  3610  005CC8  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3611  005CCA  0E01               	movlw	1
  3612  005CCC  EC00  F02F         	call	_Irq_InitIntController
  3613                           
  3614                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3615  005CD0  0E38               	movlw	low _Sch_SchmIntService
  3616  005CD2  0100               	movlb	0	; () banked
  3617  005CD4  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3618  005CD6  0E62               	movlw	high _Sch_SchmIntService
  3619  005CD8  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3620  005CDA  EC30  F031         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3621                           
  3622                           ;sys_init.c: 132: InitSchedTimer();
  3623  005CDE  ECBC  F02E         	call	_InitSchedTimer	;wreg free
  3624                           
  3625                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3626  005CE2  EC59  F030         	call	_Mcu_ConfigExtInt	;wreg free
  3627  005CE6  0012               	return		;funcret
  3628  005CE8                     __end_of_SystemInit:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postdec1	equ	0xFE5
  3637                           fsr1h	equ	0xFE2
  3638                           fsr1l	equ	0xFE1
  3639                           
  3640 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3641 ;; Defined at:
  3642 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3645 ;;		 -> Sch_SchmIntService(1), 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:   11
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_SystemInit
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text2
  3672  006260                     __ptext2:
  3673                           	opt stack 0
  3674  006260                     _Tmr_RegisterTmr2IsrCallback:
  3675                           	opt stack 18
  3676                           
  3677                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3678                           
  3679                           ;incstack = 0
  3680  006260  C07D  F1D3         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3681  006264  C07E  F1D4         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3682  006268  0012               	return		;funcret
  3683  00626A                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           tblptrh	equ	0xFF7
  3687                           tblptrl	equ	0xFF6
  3688                           tablat	equ	0xFF5
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           postdec1	equ	0xFE5
  3692                           fsr1h	equ	0xFE2
  3693                           fsr1l	equ	0xFE1
  3694                           
  3695 ;; *************** function _Pm_DsReleasePinControl *****************
  3696 ;; Defined at:
  3697 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		None
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:   11
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_SystemInit
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text3
  3726  00629A                     __ptext3:
  3727                           	opt stack 0
  3728  00629A                     _Pm_DsReleasePinControl:
  3729                           	opt stack 18
  3730                           
  3731                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3732                           
  3733                           ;incstack = 0
  3734  00629A  010F               	movlb	15	; () banked
  3735  00629C  914C               	bcf	76,0,b	;volatile
  3736                           
  3737                           ; BSR set to: 15
  3738  00629E  0012               	return		;funcret
  3739  0062A0                     __end_of_Pm_DsReleasePinControl:
  3740                           	opt stack 0
  3741                           tblptru	equ	0xFF8
  3742                           tblptrh	equ	0xFF7
  3743                           tblptrl	equ	0xFF6
  3744                           tablat	equ	0xFF5
  3745                           postinc0	equ	0xFEE
  3746                           wreg	equ	0xFE8
  3747                           postdec1	equ	0xFE5
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           
  3751 ;; *************** function _Mcu_StartSystemPll *****************
  3752 ;; Defined at:
  3753 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:   11
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_SystemInit
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text4
  3782  00603E                     __ptext4:
  3783                           	opt stack 0
  3784  00603E                     _Mcu_StartSystemPll:
  3785                           	opt stack 18
  3786                           
  3787                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3788                           
  3789                           ; BSR set to: 15
  3790                           ;incstack = 0
  3791  00603E  0E03               	movlw	3
  3792  006040  0100               	movlb	0	; () banked
  3793  006042  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3794  006044  0EE8               	movlw	232
  3795  006046  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3799  006048  8C9B               	bsf	3995,6,c	;volatile
  3800  00604A                     l11134:
  3801                           
  3802                           ; BSR set to: 0
  3803  00604A  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3804  00604C  A0D8               	btfss	status,0,c
  3805  00604E  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3806  006050  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3807  006052  E1FB               	bnz	l11134
  3808  006054  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3809  006056  B4D8               	btfsc	status,2,c
  3810  006058  0012               	return	
  3811  00605A  D7F7               	goto	l237
  3812  00605C                     __end_of_Mcu_StartSystemPll:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           postinc0	equ	0xFEE
  3819                           wreg	equ	0xFE8
  3820                           postdec1	equ	0xFE5
  3821                           fsr1h	equ	0xFE2
  3822                           fsr1l	equ	0xFE1
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _Mcu_ConfigExtInt *****************
  3826 ;; Defined at:
  3827 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:   11
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_SystemInit
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text5
  3856  0060B2                     __ptext5:
  3857                           	opt stack 0
  3858  0060B2                     _Mcu_ConfigExtInt:
  3859                           	opt stack 18
  3860                           
  3861                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;incstack = 0
  3865  0060B2  8093               	bsf	3987,0,c	;volatile
  3866                           
  3867                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  3868  0060B4  8695               	bsf	3989,3,c	;volatile
  3869                           
  3870                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  3871  0060B6  010F               	movlb	15	; () banked
  3872  0060B8  8949               	bsf	73,4,b	;volatile
  3873                           
  3874                           ; BSR set to: 15
  3875                           ;mcu_drv.c: 108: RPINR1 = 20;
  3876  0060BA  0E14               	movlw	20
  3877  0060BC  010E               	movlb	14	; () banked
  3878  0060BE  6FE7               	movwf	231,b	;volatile
  3879                           
  3880                           ; BSR set to: 14
  3881                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  3882  0060C0  88F2               	bsf	intcon,4,c	;volatile
  3883                           
  3884                           ; BSR set to: 14
  3885                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  3886  0060C2  86F0               	bsf	intcon3,3,c	;volatile
  3887                           
  3888                           ; BSR set to: 14
  3889                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  3890  0060C4  8CF0               	bsf	intcon3,6,c	;volatile
  3891                           
  3892                           ; BSR set to: 14
  3893                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  3894  0060C6  9CF1               	bcf	intcon2,6,c	;volatile
  3895                           
  3896                           ; BSR set to: 14
  3897                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  3898  0060C8  9AF1               	bcf	intcon2,5,c	;volatile
  3899                           
  3900                           ; BSR set to: 14
  3901  0060CA  0012               	return		;funcret
  3902  0060CC                     __end_of_Mcu_ConfigExtInt:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           intcon	equ	0xFF2
  3909                           intcon2	equ	0xFF1
  3910                           intcon3	equ	0xFF0
  3911                           postinc0	equ	0xFEE
  3912                           wreg	equ	0xFE8
  3913                           postdec1	equ	0xFE5
  3914                           fsr1h	equ	0xFE2
  3915                           fsr1l	equ	0xFE1
  3916                           status	equ	0xFD8
  3917                           
  3918 ;; *************** function _Irq_InitIntController *****************
  3919 ;; Defined at:
  3920 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  IntPriorityE    1    wreg     enum E7720
  3923 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  3924 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:        3 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:   11
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_SystemInit
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text6
  3951  005E00                     __ptext6:
  3952                           	opt stack 0
  3953  005E00                     _Irq_InitIntController:
  3954                           	opt stack 18
  3955                           
  3956                           ; BSR set to: 14
  3957                           ;incstack = 0
  3958                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3959  005E00  0100               	movlb	0	; () banked
  3960  005E02  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3961                           
  3962                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3963  005E04  0100               	movlb	0	; () banked
  3964  005E06  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3965  005E08  D002               	bra	u9685
  3966  005E0A  9ED0               	bcf	4048,7,c	;volatile
  3967  005E0C  D001               	bra	u9686
  3968  005E0E                     u9685:
  3969  005E0E  8ED0               	bsf	4048,7,c	;volatile
  3970  005E10                     u9686:
  3971                           
  3972                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3973  005E10  0100               	movlb	0	; () banked
  3974  005E12  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3975  005E14  D002               	bra	u9695
  3976  005E16  9EF2               	bcf	intcon,7,c	;volatile
  3977  005E18  D001               	bra	u9696
  3978  005E1A                     u9695:
  3979  005E1A  8EF2               	bsf	intcon,7,c	;volatile
  3980  005E1C                     u9696:
  3981                           
  3982                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3983  005E1C  0100               	movlb	0	; () banked
  3984  005E1E  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3985  005E20  D002               	bra	u9705
  3986  005E22  9CF2               	bcf	intcon,6,c	;volatile
  3987  005E24  D001               	bra	u9706
  3988  005E26                     u9705:
  3989  005E26  8CF2               	bsf	intcon,6,c	;volatile
  3990  005E28                     u9706:
  3991  005E28  0012               	return		;funcret
  3992  005E2A                     __end_of_Irq_InitIntController:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           intcon	equ	0xFF2
  3999                           intcon2	equ	0xFF1
  4000                           intcon3	equ	0xFF0
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           postdec1	equ	0xFE5
  4004                           fsr1h	equ	0xFE2
  4005                           fsr1l	equ	0xFE1
  4006                           status	equ	0xFD8
  4007                           
  4008 ;; *************** function _InitSchedTimer *****************
  4009 ;; Defined at:
  4010 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:        7 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   14
  4031 ;; This function calls:
  4032 ;;		_Tmr_TmrBConfig
  4033 ;; This function is called by:
  4034 ;;		_SystemInit
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text7
  4039  005D78                     __ptext7:
  4040                           	opt stack 0
  4041  005D78                     _InitSchedTimer:
  4042                           	opt stack 15
  4043                           
  4044                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4045                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4046                           
  4047                           ;incstack = 0
  4048  005D78  0E04               	movlw	4
  4049  005D7A  0100               	movlb	0	; () banked
  4050  005D7C  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4051                           
  4052                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4053  005D7E  0E0C               	movlw	12
  4054  005D80  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4055                           
  4056                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4057  005D82  0E00               	movlw	0
  4058  005D84  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4059                           
  4060                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4061  005D86  0E01               	movlw	1
  4062  005D88  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4063                           
  4064                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4065  005D8A  0E03               	movlw	3
  4066  005D8C  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4067  005D8E  0EE8               	movlw	232
  4068  005D90  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4069                           
  4070                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4071  005D92  0E01               	movlw	1
  4072  005D94  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4076  005D96  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4077  005D98  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4078  005D9A  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4079  005D9C  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4080  005D9E  0E02               	movlw	2
  4081  005DA0  EC21  F01E         	call	_Tmr_TmrBConfig
  4082  005DA4  0012               	return		;funcret
  4083  005DA6                     __end_of_InitSchedTimer:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           intcon	equ	0xFF2
  4090                           intcon2	equ	0xFF1
  4091                           intcon3	equ	0xFF0
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           postdec1	equ	0xFE5
  4095                           fsr1h	equ	0xFE2
  4096                           fsr1l	equ	0xFE1
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function _Tmr_TmrBConfig *****************
  4100 ;; Defined at:
  4101 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  TmrNumb         1    wreg     unsigned char 
  4104 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4105 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4121 ;;Total ram usage:        4 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:   13
  4124 ;; This function calls:
  4125 ;;		_TmrBInit
  4126 ;;		_Tmr_StartTmr
  4127 ;;		_Tmr_TmrBIrqSet
  4128 ;;		_Tmr_TmrBPrSet
  4129 ;; This function is called by:
  4130 ;;		_InitSchedTimer
  4131 ;;		_InitAuxTimer
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text8
  4136  003C42                     __ptext8:
  4137                           	opt stack 0
  4138  003C42                     _Tmr_TmrBConfig:
  4139                           	opt stack 15
  4140                           
  4141                           ;incstack = 0
  4142                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4143  003C42  0100               	movlb	0	; () banked
  4144  003C44  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4145                           
  4146                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4147  003C46  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4148  003C4A  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4149  003C4E  50DF               	movf	indf2,w,c
  4150  003C50  0100               	movlb	0	; () banked
  4151  003C52  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4152  003C54  EE20 F001          	lfsr	2,1
  4153  003C58  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4154  003C5A  26D9               	addwf	fsr2l,f,c
  4155  003C5C  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4156  003C5E  22DA               	addwfc	fsr2h,f,c
  4157  003C60  50DF               	movf	indf2,w,c
  4158  003C62  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4159  003C64  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4160  003C66  ECFE  F023         	call	_TmrBInit
  4161                           
  4162                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4163  003C6A  0100               	movlb	0	; () banked
  4164  003C6C  EE20 F002          	lfsr	2,2
  4165  003C70  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4166  003C72  26D9               	addwf	fsr2l,f,c
  4167  003C74  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4168  003C76  22DA               	addwfc	fsr2h,f,c
  4169  003C78  04DE               	decf	postinc2,w,c
  4170  003C7A  A4D8               	btfss	status,2,c
  4171  003C7C  D00E               	goto	l546
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;tmr_drv.c: 277: {
  4175                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4176  003C7E  EE20 F003          	lfsr	2,3
  4177  003C82  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4178  003C84  26D9               	addwf	fsr2l,f,c
  4179  003C86  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4180  003C88  22DA               	addwfc	fsr2h,f,c
  4181  003C8A  50DF               	movf	indf2,w,c
  4182  003C8C  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4183  003C8E  0E01               	movlw	1
  4184  003C90  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4185  003C92  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4186  003C94  EC6D  F02B         	call	_Tmr_TmrBIrqSet
  4187                           
  4188                           ;tmr_drv.c: 280: }
  4189  003C98  D00E               	goto	l547
  4190  003C9A                     l546:
  4191                           
  4192                           ;tmr_drv.c: 281: else
  4193                           ;tmr_drv.c: 282: {
  4194                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4195  003C9A  0100               	movlb	0	; () banked
  4196  003C9C  EE20 F003          	lfsr	2,3
  4197  003CA0  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4198  003CA2  26D9               	addwf	fsr2l,f,c
  4199  003CA4  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4200  003CA6  22DA               	addwfc	fsr2h,f,c
  4201  003CA8  50DF               	movf	indf2,w,c
  4202  003CAA  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4203  003CAC  0E00               	movlw	0
  4204  003CAE  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4205  003CB0  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4206  003CB2  EC6D  F02B         	call	_Tmr_TmrBIrqSet
  4207  003CB6                     l547:
  4208                           
  4209                           ;tmr_drv.c: 285: }
  4210                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4211  003CB6  0100               	movlb	0	; () banked
  4212  003CB8  EE20 F004          	lfsr	2,4
  4213  003CBC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4214  003CBE  26D9               	addwf	fsr2l,f,c
  4215  003CC0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4216  003CC2  22DA               	addwfc	fsr2h,f,c
  4217  003CC4  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4218  003CC8  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4219  003CCC  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4220  003CD0  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4221  003CD4  50DF               	movf	indf2,w,c
  4222  003CD6  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4223  003CD8  EE20 F001          	lfsr	2,1
  4224  003CDC  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4225  003CDE  26D9               	addwf	fsr2l,f,c
  4226  003CE0  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4227  003CE2  22DA               	addwfc	fsr2h,f,c
  4228  003CE4  50DF               	movf	indf2,w,c
  4229  003CE6  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4230  003CE8  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4231  003CEA  EC9E  F018         	call	_Tmr_TmrBPrSet
  4232                           
  4233                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4234  003CEE  0100               	movlb	0	; () banked
  4235  003CF0  EE20 F006          	lfsr	2,6
  4236  003CF4  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4237  003CF6  26D9               	addwf	fsr2l,f,c
  4238  003CF8  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4239  003CFA  22DA               	addwfc	fsr2h,f,c
  4240  003CFC  04DE               	decf	postinc2,w,c
  4241  003CFE  A4D8               	btfss	status,2,c
  4242  003D00  0012               	return	
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;tmr_drv.c: 290: {
  4246                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4247  003D02  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4248  003D04  ECFF  F02F         	call	_Tmr_StartTmr
  4249                           
  4250                           ;tmr_drv.c: 293: }
  4251  003D08  0012               	return	
  4252  003D0A                     __end_of_Tmr_TmrBConfig:
  4253                           	opt stack 0
  4254                           tblptru	equ	0xFF8
  4255                           tblptrh	equ	0xFF7
  4256                           tblptrl	equ	0xFF6
  4257                           tablat	equ	0xFF5
  4258                           intcon	equ	0xFF2
  4259                           intcon2	equ	0xFF1
  4260                           intcon3	equ	0xFF0
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           postdec1	equ	0xFE5
  4264                           fsr1h	equ	0xFE2
  4265                           fsr1l	equ	0xFE1
  4266                           indf2	equ	0xFDF
  4267                           postinc2	equ	0xFDE
  4268                           postdec2	equ	0xFDD
  4269                           fsr2h	equ	0xFDA
  4270                           fsr2l	equ	0xFD9
  4271                           status	equ	0xFD8
  4272                           
  4273 ;; *************** function _Tmr_TmrBPrSet *****************
  4274 ;; Defined at:
  4275 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  TmrNumb         1    wreg     unsigned char 
  4278 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4279 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4280 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4283 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4284 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      enum E7736
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4298 ;;Total ram usage:       10 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:   12
  4301 ;; This function calls:
  4302 ;;		___lldiv
  4303 ;;		___lmul
  4304 ;; This function is called by:
  4305 ;;		_Tmr_TmrBConfig
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text9
  4310  00313C                     __ptext9:
  4311                           	opt stack 0
  4312  00313C                     _Tmr_TmrBPrSet:
  4313                           	opt stack 15
  4314                           
  4315                           ;incstack = 0
  4316                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4317  00313C  0100               	movlb	0	; () banked
  4318  00313E  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4319                           
  4320                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4321                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4322  003140  0E00               	movlw	0
  4323  003142  0100               	movlb	0	; () banked
  4324  003144  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4325  003146  0E00               	movlw	0
  4326  003148  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4327  00314A  0E00               	movlw	0
  4328  00314C  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4329  00314E  0E00               	movlw	0
  4330  003150  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4334  003152  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4335  003154  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4336  003156  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4337  00315A  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4338  00315E  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4339  003160  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4340  003162  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4341  003166  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4342  00316A  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4343  00316C  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4344  00316E  EC28  F029         	call	___lmul	;wreg free
  4345  003172  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4346  003176  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4347  00317A  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4348  00317E  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4349                           
  4350                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4351  003182  0E00               	movlw	0
  4352  003184  0100               	movlb	0	; () banked
  4353  003186  6F89               	movwf	___lldiv@dividend& (0+255),b
  4354  003188  0E1B               	movlw	27
  4355  00318A  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4356  00318C  0EB7               	movlw	183
  4357  00318E  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4358  003190  0E00               	movlw	0
  4359  003192  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4360  003194  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4361  003198  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4362  00319C  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4363  0031A0  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4364  0031A4  EC40  F026         	call	___lldiv	;wreg free
  4365  0031A8  0100               	movlb	0	; () banked
  4366  0031AA  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4367  0031AC  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4368  0031AE  E13A               	bnz	l13944
  4369  0031B0  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4370  0031B2  A0D8               	btfss	status,0,c
  4371  0031B4  D02D               	goto	l529
  4372  0031B6  D036               	goto	l528
  4373  0031B8                     
  4374                           ; BSR set to: 0
  4375                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4376                           
  4377                           ; BSR set to: 0
  4378  0031B8  0E00               	movlw	0
  4379  0031BA  6F89               	movwf	___lldiv@dividend& (0+255),b
  4380  0031BC  0E1B               	movlw	27
  4381  0031BE  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4382  0031C0  0EB7               	movlw	183
  4383  0031C2  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4384  0031C4  0E00               	movlw	0
  4385  0031C6  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4386  0031C8  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4387  0031CC  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4388  0031D0  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4389  0031D4  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4390  0031D8  EC40  F026         	call	___lldiv	;wreg free
  4391  0031DC  0100               	movlb	0	; () banked
  4392  0031DE  5189               	movf	?___lldiv& (0+255),w,b
  4393  0031E0  6ECB               	movwf	4043,c	;volatile
  4394                           
  4395                           ;tmr_drv.c: 210: break;
  4396  0031E2  D01D               	goto	l531
  4397  0031E4                     
  4398                           ; BSR set to: 0
  4399                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4400                           
  4401                           ; BSR set to: 0
  4402  0031E4  0E00               	movlw	0
  4403  0031E6  6F89               	movwf	___lldiv@dividend& (0+255),b
  4404  0031E8  0E1B               	movlw	27
  4405  0031EA  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4406  0031EC  0EB7               	movlw	183
  4407  0031EE  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4408  0031F0  0E00               	movlw	0
  4409  0031F2  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4410  0031F4  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4411  0031F8  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4412  0031FC  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4413  003200  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4414  003204  EC40  F026         	call	___lldiv	;wreg free
  4415  003208  0100               	movlb	0	; () banked
  4416  00320A  5189               	movf	?___lldiv& (0+255),w,b
  4417  00320C  6E77               	movwf	3959,c	;volatile
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;tmr_drv.c: 219: }
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;tmr_drv.c: 218: break;
  4424                           
  4425                           ;tmr_drv.c: 217: default:
  4426                           
  4427                           ;tmr_drv.c: 215: break;
  4428  00320E  D007               	goto	l531
  4429  003210                     l529:
  4430                           
  4431                           ; BSR set to: 0
  4432                           
  4433                           ; BSR set to: 0
  4434  003210  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4435                           
  4436                           ; Switch size 1, requested type "space"
  4437                           ; Number of cases is 2, Range of values is 2 to 4
  4438                           ; switch strategies available:
  4439                           ; Name         Instructions Cycles
  4440                           ; simple_byte            7     4 (average)
  4441                           ;	Chosen strategy is simple_byte
  4442  003212  0A02               	xorlw	2	; case 2
  4443  003214  B4D8               	btfsc	status,2,c
  4444  003216  D7D0               	goto	l530
  4445  003218  0A06               	xorlw	6	; case 4
  4446  00321A  B4D8               	btfsc	status,2,c
  4447  00321C  D7E3               	goto	l532
  4448  00321E                     l531:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4452                           
  4453                           ; BSR set to: 0
  4454  00321E  0E00               	movlw	0
  4455  003220  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4456                           
  4457                           ;tmr_drv.c: 223: }
  4458  003222  0012               	return	
  4459  003224                     l528:
  4460  003224                     l13944:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;tmr_drv.c: 224: else
  4464                           ;tmr_drv.c: 225: {
  4465                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4466  003224  0E01               	movlw	1
  4467  003226  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4468                           
  4469                           ; BSR set to: 0
  4470  003228  0012               	return	
  4471  00322A                     __end_of_Tmr_TmrBPrSet:
  4472                           	opt stack 0
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           prodh	equ	0xFF4
  4478                           prodl	equ	0xFF3
  4479                           intcon	equ	0xFF2
  4480                           intcon2	equ	0xFF1
  4481                           intcon3	equ	0xFF0
  4482                           postinc0	equ	0xFEE
  4483                           wreg	equ	0xFE8
  4484                           postdec1	equ	0xFE5
  4485                           fsr1h	equ	0xFE2
  4486                           fsr1l	equ	0xFE1
  4487                           indf2	equ	0xFDF
  4488                           postinc2	equ	0xFDE
  4489                           postdec2	equ	0xFDD
  4490                           fsr2h	equ	0xFDA
  4491                           fsr2l	equ	0xFD9
  4492                           status	equ	0xFD8
  4493                           
  4494 ;; *************** function _Tmr_TmrBIrqSet *****************
  4495 ;; Defined at:
  4496 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  TmrNumb         1    wreg     unsigned char 
  4499 ;;  Priority        1   29[BANK0 ] enum E7716
  4500 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4512 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4515 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4516 ;;Total ram usage:        3 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:   11
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_Tmr_TmrBConfig
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text10
  4527  0056DA                     __ptext10:
  4528                           	opt stack 0
  4529  0056DA                     _Tmr_TmrBIrqSet:
  4530                           	opt stack 16
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;incstack = 0
  4534                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4535  0056DA  0100               	movlb	0	; () banked
  4536  0056DC  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4537                           
  4538                           ;tmr_drv.c: 156: switch (TmrNumb)
  4539  0056DE  D01A               	goto	l520
  4540  0056E0                     l521:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4544  0056E0  929E               	bcf	3998,1,c	;volatile
  4545                           
  4546                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4547  0056E2  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4548  0056E4  D002               	bra	u8185
  4549  0056E6  929F               	bcf	3999,1,c	;volatile
  4550  0056E8  D001               	bra	u8186
  4551  0056EA                     u8185:
  4552  0056EA  829F               	bsf	3999,1,c	;volatile
  4553  0056EC                     u8186:
  4554                           
  4555                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4556  0056EC  0100               	movlb	0	; () banked
  4557  0056EE  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4558  0056F0  D002               	bra	u8195
  4559  0056F2  929D               	bcf	3997,1,c	;volatile
  4560  0056F4  D001               	bra	u8196
  4561  0056F6                     u8195:
  4562  0056F6  829D               	bsf	3997,1,c	;volatile
  4563  0056F8                     u8196:
  4564                           
  4565                           ;tmr_drv.c: 165: break;
  4566  0056F8  0012               	return	
  4567  0056FA                     l523:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4571  0056FA  96A4               	bcf	4004,3,c	;volatile
  4572                           
  4573                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4574  0056FC  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4575  0056FE  D002               	bra	u8205
  4576  005700  96A5               	bcf	4005,3,c	;volatile
  4577  005702  D001               	bra	u8206
  4578  005704                     u8205:
  4579  005704  86A5               	bsf	4005,3,c	;volatile
  4580  005706                     u8206:
  4581                           
  4582                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4583  005706  0100               	movlb	0	; () banked
  4584  005708  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4585  00570A  D002               	bra	u8215
  4586  00570C  96A3               	bcf	4003,3,c	;volatile
  4587  00570E  D001               	bra	u8216
  4588  005710                     u8215:
  4589  005710  86A3               	bsf	4003,3,c	;volatile
  4590  005712                     u8216:
  4591                           
  4592                           ;tmr_drv.c: 178: }
  4593                           
  4594                           ;tmr_drv.c: 177: break;
  4595                           
  4596                           ;tmr_drv.c: 176: default:
  4597                           
  4598                           ;tmr_drv.c: 174: break;
  4599  005712  0012               	return	
  4600  005714                     l520:
  4601  005714  0100               	movlb	0	; () banked
  4602  005716  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4603                           
  4604                           ; Switch size 1, requested type "space"
  4605                           ; Number of cases is 2, Range of values is 2 to 4
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte            7     4 (average)
  4609                           ;	Chosen strategy is simple_byte
  4610  005718  0A02               	xorlw	2	; case 2
  4611  00571A  B4D8               	btfsc	status,2,c
  4612  00571C  D7E1               	goto	l521
  4613  00571E  0A06               	xorlw	6	; case 4
  4614  005720  A4D8               	btfss	status,2,c
  4615  005722  0012               	return	
  4616  005724  D7EA               	goto	l523
  4617  005726                     __end_of_Tmr_TmrBIrqSet:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           prodh	equ	0xFF4
  4624                           prodl	equ	0xFF3
  4625                           intcon	equ	0xFF2
  4626                           intcon2	equ	0xFF1
  4627                           intcon3	equ	0xFF0
  4628                           postinc0	equ	0xFEE
  4629                           wreg	equ	0xFE8
  4630                           postdec1	equ	0xFE5
  4631                           fsr1h	equ	0xFE2
  4632                           fsr1l	equ	0xFE1
  4633                           indf2	equ	0xFDF
  4634                           postinc2	equ	0xFDE
  4635                           postdec2	equ	0xFDD
  4636                           fsr2h	equ	0xFDA
  4637                           fsr2l	equ	0xFD9
  4638                           status	equ	0xFD8
  4639                           
  4640 ;; *************** function _Tmr_StartTmr *****************
  4641 ;; Defined at:
  4642 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  TmrNumb         1    wreg     unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:   11
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_Tmr_TmrBConfig
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text11
  4671  005FFE                     __ptext11:
  4672                           	opt stack 0
  4673  005FFE                     _Tmr_StartTmr:
  4674                           	opt stack 16
  4675                           
  4676                           ;incstack = 0
  4677                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4678  005FFE  0100               	movlb	0	; () banked
  4679  006000  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4680                           
  4681                           ;tmr_drv.c: 245: switch (TmrNumb)
  4682  006002  D004               	goto	l538
  4683  006004                     l539:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4687  006004  84CA               	bsf	4042,2,c	;volatile
  4688                           
  4689                           ;tmr_drv.c: 250: break;
  4690  006006  0012               	return	
  4691  006008                     l541:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4695  006008  8476               	bsf	3958,2,c	;volatile
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;tmr_drv.c: 259: }
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;tmr_drv.c: 258: break;
  4702                           
  4703                           ;tmr_drv.c: 257: default:
  4704                           
  4705                           ;tmr_drv.c: 255: break;
  4706  00600A  0012               	return	
  4707  00600C                     l538:
  4708                           
  4709                           ; BSR set to: 0
  4710  00600C  0100               	movlb	0	; () banked
  4711  00600E  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4712                           
  4713                           ; Switch size 1, requested type "space"
  4714                           ; Number of cases is 2, Range of values is 2 to 4
  4715                           ; switch strategies available:
  4716                           ; Name         Instructions Cycles
  4717                           ; simple_byte            7     4 (average)
  4718                           ;	Chosen strategy is simple_byte
  4719  006010  0A02               	xorlw	2	; case 2
  4720  006012  B4D8               	btfsc	status,2,c
  4721  006014  D7F7               	goto	l539
  4722  006016  0A06               	xorlw	6	; case 4
  4723  006018  A4D8               	btfss	status,2,c
  4724  00601A  0012               	return	
  4725  00601C  D7F5               	goto	l541
  4726  00601E                     __end_of_Tmr_StartTmr:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           prodh	equ	0xFF4
  4733                           prodl	equ	0xFF3
  4734                           intcon	equ	0xFF2
  4735                           intcon2	equ	0xFF1
  4736                           intcon3	equ	0xFF0
  4737                           postinc0	equ	0xFEE
  4738                           wreg	equ	0xFE8
  4739                           postdec1	equ	0xFE5
  4740                           fsr1h	equ	0xFE2
  4741                           fsr1l	equ	0xFE1
  4742                           indf2	equ	0xFDF
  4743                           postinc2	equ	0xFDE
  4744                           postdec2	equ	0xFDD
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function _TmrBInit *****************
  4750 ;; Defined at:
  4751 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  TmrNumb         1    wreg     unsigned char 
  4754 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  4755 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;Total ram usage:        4 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:   11
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_Tmr_TmrBConfig
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text12
  4782  0047FC                     __ptext12:
  4783                           	opt stack 0
  4784  0047FC                     _TmrBInit:
  4785                           	opt stack 16
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;incstack = 0
  4789                           ;TmrBInit@TmrNumb stored from wreg
  4790  0047FC  0100               	movlb	0	; () banked
  4791  0047FE  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  4792                           
  4793                           ;tmr_drv.c: 75: switch (TmrNumb)
  4794  004800  D03F               	goto	l500
  4795  004802                     l503:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4799  004802  90CA               	bcf	4042,0,c	;volatile
  4800  004804  D001               	goto	L1
  4801  004806                     l505:
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4805  004806  80CA               	bsf	4042,0,c	;volatile
  4806  004808                     L1:
  4807                           
  4808                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4809  004808  92CA               	bcf	4042,1,c	;volatile
  4810                           
  4811                           ;tmr_drv.c: 91: break;
  4812  00480A  D00E               	goto	l504
  4813  00480C                     l506:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4817  00480C  80CA               	bsf	4042,0,c	;volatile
  4818                           
  4819                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4820  00480E  82CA               	bsf	4042,1,c	;volatile
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;tmr_drv.c: 100: }
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;tmr_drv.c: 99: break;
  4827                           
  4828                           ;tmr_drv.c: 98: default:
  4829                           
  4830                           ;tmr_drv.c: 96: break;
  4831  004810  D00B               	goto	l504
  4832  004812                     
  4833                           ; BSR set to: 0
  4834  004812  0100               	movlb	0	; () banked
  4835  004814  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4836                           
  4837                           ; Switch size 1, requested type "space"
  4838                           ; Number of cases is 3, Range of values is 1 to 16
  4839                           ; switch strategies available:
  4840                           ; Name         Instructions Cycles
  4841                           ; simple_byte           10     6 (average)
  4842                           ;	Chosen strategy is simple_byte
  4843  004816  0A01               	xorlw	1	; case 1
  4844  004818  B4D8               	btfsc	status,2,c
  4845  00481A  D7F3               	goto	l503
  4846  00481C  0A05               	xorlw	5	; case 4
  4847  00481E  B4D8               	btfsc	status,2,c
  4848  004820  D7F2               	goto	l505
  4849  004822  0A14               	xorlw	20	; case 16
  4850  004824  B4D8               	btfsc	status,2,c
  4851  004826  D7F2               	goto	l506
  4852  004828                     l504:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4856                           
  4857                           ; BSR set to: 0
  4858  004828  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4859  00482C  0EFF               	movlw	255
  4860  00482E  277F               	addwf	??_TmrBInit& (0+255),f,b
  4861  004830  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4862  004832  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4863  004834  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4864  004836  50CA               	movf	4042,w,c	;volatile
  4865  004838  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4866  00483A  0B87               	andlw	-121
  4867  00483C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4868  00483E  6ECA               	movwf	4042,c	;volatile
  4869                           
  4870                           ;tmr_drv.c: 104: break;
  4871  004840  0012               	return	
  4872  004842                     l511:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4876  004842  9076               	bcf	3958,0,c	;volatile
  4877  004844  D001               	goto	L2
  4878  004846                     l513:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4882  004846  8076               	bsf	3958,0,c	;volatile
  4883  004848                     L2:
  4884                           
  4885                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4886  004848  9276               	bcf	3958,1,c	;volatile
  4887                           
  4888                           ;tmr_drv.c: 120: break;
  4889  00484A  D00D               	goto	l512
  4890  00484C                     l514:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4894  00484C  8076               	bsf	3958,0,c	;volatile
  4895                           
  4896                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4897  00484E  8276               	bsf	3958,1,c	;volatile
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;tmr_drv.c: 129: }
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;tmr_drv.c: 128: break;
  4904                           
  4905                           ;tmr_drv.c: 127: default:
  4906                           
  4907                           ;tmr_drv.c: 125: break;
  4908  004850  D00A               	goto	l512
  4909  004852                     
  4910                           ; BSR set to: 0
  4911                           
  4912                           ; BSR set to: 0
  4913  004852  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  4914                           
  4915                           ; Switch size 1, requested type "space"
  4916                           ; Number of cases is 3, Range of values is 1 to 16
  4917                           ; switch strategies available:
  4918                           ; Name         Instructions Cycles
  4919                           ; simple_byte           10     6 (average)
  4920                           ;	Chosen strategy is simple_byte
  4921  004854  0A01               	xorlw	1	; case 1
  4922  004856  B4D8               	btfsc	status,2,c
  4923  004858  D7F4               	goto	l511
  4924  00485A  0A05               	xorlw	5	; case 4
  4925  00485C  B4D8               	btfsc	status,2,c
  4926  00485E  D7F3               	goto	l513
  4927  004860  0A14               	xorlw	20	; case 16
  4928  004862  B4D8               	btfsc	status,2,c
  4929  004864  D7F3               	goto	l514
  4930  004866                     l512:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4934                           
  4935                           ; BSR set to: 0
  4936  004866  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  4937  00486A  0EFF               	movlw	255
  4938  00486C  277F               	addwf	??_TmrBInit& (0+255),f,b
  4939  00486E  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4940  004870  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4941  004872  477F               	rlncf	??_TmrBInit& (0+255),f,b
  4942  004874  5076               	movf	3958,w,c	;volatile
  4943  004876  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4944  004878  0B87               	andlw	-121
  4945  00487A  197F               	xorwf	??_TmrBInit& (0+255),w,b
  4946  00487C  6E76               	movwf	3958,c	;volatile
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;tmr_drv.c: 137: }
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;tmr_drv.c: 136: break;
  4953                           
  4954                           ;tmr_drv.c: 135: default:
  4955                           
  4956                           ;tmr_drv.c: 133: break;
  4957  00487E  0012               	return	
  4958  004880                     l500:
  4959                           
  4960                           ; BSR set to: 0
  4961  004880  0100               	movlb	0	; () banked
  4962  004882  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4963                           
  4964                           ; Switch size 1, requested type "space"
  4965                           ; Number of cases is 2, Range of values is 2 to 4
  4966                           ; switch strategies available:
  4967                           ; Name         Instructions Cycles
  4968                           ; simple_byte            7     4 (average)
  4969                           ;	Chosen strategy is simple_byte
  4970  004884  0A02               	xorlw	2	; case 2
  4971  004886  B4D8               	btfsc	status,2,c
  4972  004888  D7C4               	goto	l502
  4973  00488A  0A06               	xorlw	6	; case 4
  4974  00488C  A4D8               	btfss	status,2,c
  4975  00488E  0012               	return	
  4976  004890  D7E0               	goto	l510
  4977  004892                     __end_of_TmrBInit:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           intcon	equ	0xFF2
  4986                           intcon2	equ	0xFF1
  4987                           intcon3	equ	0xFF0
  4988                           postinc0	equ	0xFEE
  4989                           wreg	equ	0xFE8
  4990                           postdec1	equ	0xFE5
  4991                           fsr1h	equ	0xFE2
  4992                           fsr1l	equ	0xFE1
  4993                           indf2	equ	0xFDF
  4994                           postinc2	equ	0xFDE
  4995                           postdec2	equ	0xFDD
  4996                           fsr2h	equ	0xFDA
  4997                           fsr2l	equ	0xFD9
  4998                           status	equ	0xFD8
  4999                           
  5000 ;; *************** function _Sch_MainScheduler *****************
  5001 ;; Defined at:
  5002 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:   22
  5023 ;; This function calls:
  5024 ;;		_InitializeTasks
  5025 ;;		_ScheduleTasks
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text13
  5032  00605C                     __ptext13:
  5033                           	opt stack 0
  5034  00605C                     _Sch_MainScheduler:
  5035                           	opt stack 8
  5036                           
  5037                           ;os_sched.c: 178: InitializeTasks();
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;incstack = 0
  5041  00605C  EC35  F027         	call	_InitializeTasks	;wreg free
  5042                           
  5043                           ;os_sched.c: 180: SystemState = RunningState;
  5044  006060  0E01               	movlw	1
  5045  006062  0100               	movlb	0	; () banked
  5046  006064  6FD5               	movwf	_SystemState& (0+255),b
  5047  006066                     
  5048                           ;os_sched.c: 188: {
  5049                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5050                           
  5051                           ; BSR set to: 0
  5052  006066  0102               	movlb	2	; () banked
  5053  006068  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5054  00606A  A4D8               	btfss	status,2,c
  5055  00606C  D7FC               	goto	l790
  5056                           
  5057                           ; BSR set to: 2
  5058                           ;os_sched.c: 191: {
  5059                           ;os_sched.c: 196: ScheduleTasks();
  5060  00606E  EC00  F017         	call	_ScheduleTasks	;wreg free
  5061                           
  5062                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5063  006072  0E01               	movlw	1
  5064  006074  0102               	movlb	2	; () banked
  5065  006076  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5066                           
  5067                           ; BSR set to: 2
  5068                           
  5069                           ; BSR set to: 2
  5070  006078  D7F6               	goto	l790
  5071  00607A                     __end_of_Sch_MainScheduler:
  5072                           	opt stack 0
  5073                           tblptru	equ	0xFF8
  5074                           tblptrh	equ	0xFF7
  5075                           tblptrl	equ	0xFF6
  5076                           tablat	equ	0xFF5
  5077                           prodh	equ	0xFF4
  5078                           prodl	equ	0xFF3
  5079                           intcon	equ	0xFF2
  5080                           intcon2	equ	0xFF1
  5081                           intcon3	equ	0xFF0
  5082                           postinc0	equ	0xFEE
  5083                           wreg	equ	0xFE8
  5084                           postdec1	equ	0xFE5
  5085                           fsr1h	equ	0xFE2
  5086                           fsr1l	equ	0xFE1
  5087                           indf2	equ	0xFDF
  5088                           postinc2	equ	0xFDE
  5089                           postdec2	equ	0xFDD
  5090                           fsr2h	equ	0xFDA
  5091                           fsr2l	equ	0xFD9
  5092                           status	equ	0xFD8
  5093                           
  5094 ;; *************** function _ScheduleTasks *****************
  5095 ;; Defined at:
  5096 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  ActiveTaskIn    1    4[BANK3 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5111 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5112 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  5113 ;;      Totals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0
  5114 ;;Total ram usage:        5 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:   21
  5117 ;; This function calls:
  5118 ;;		_I2cSlv_MainTask
  5119 ;;		_Led_MainTask
  5120 ;;		_MdmHttp_MainTask
  5121 ;;		_Mdm_DrvMainFn
  5122 ;;		_Mdm_MainTask
  5123 ;;		_MyApp_Task
  5124 ;;		_Rtcm_MainTask
  5125 ;;		_Term_MainTask
  5126 ;;		_UsbDevice_MainTask
  5127 ;;		_Wdg_MainTask
  5128 ;; This function is called by:
  5129 ;;		_Sch_MainScheduler
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text14
  5134  002E00                     __ptext14:
  5135                           	opt stack 0
  5136  002E00                     _ScheduleTasks:
  5137                           	opt stack 8
  5138                           
  5139                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5140                           
  5141                           ; BSR set to: 2
  5142                           ;incstack = 0
  5143  002E00  0E00               	movlw	0
  5144  002E02  0103               	movlb	3	; () banked
  5145  002E04  6FFC               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5146                           
  5147                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5148  002E06  0E00               	movlw	0
  5149  002E08  6FFC               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5150  002E0A                     l15096:
  5151                           
  5152                           ; BSR set to: 3
  5153  002E0A  0E3D               	movlw	low _TaskNumber
  5154  002E0C  6EF6               	movwf	tblptrl,c
  5155  002E0E                     	if	1	;There is more than 1 active tblptr byte
  5156  002E0E  0EFC               	movlw	high _TaskNumber
  5157  002E10  6EF7               	movwf	tblptrh,c
  5158  002E12                     	endif
  5159  002E12                     	if	0	;There are less than 3 active tblptr bytes
  5160  002E12                     	endif
  5161  002E12  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5162  002E14  6FF8               	movwf	??_ScheduleTasks& (0+255),b
  5163  002E16  6BF9               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5164  002E18  0009               	tblrd		*+
  5165  002E1A  50F5               	movf	tablat,w,c
  5166  002E1C  5DF8               	subwf	??_ScheduleTasks& (0+255),w,b
  5167  002E1E  0009               	tblrd		*+
  5168  002E20  50F5               	movf	tablat,w,c
  5169  002E22  59F9               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5170  002E24  B0D8               	btfsc	status,0,c
  5171  002E26  0012               	return	
  5172                           
  5173                           ; BSR set to: 3
  5174                           ;os_sched.c: 106: {
  5175                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5176                           
  5177                           ; BSR set to: 3
  5178                           
  5179                           ; BSR set to: 3
  5180  002E28  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5181  002E2A  0D08               	mullw	8
  5182  002E2C  0E03               	movlw	3
  5183  002E2E  26F3               	addwf	prodl,f,c
  5184  002E30  0E00               	movlw	0
  5185  002E32  22F4               	addwfc	prodh,f,c
  5186  002E34  0EA4               	movlw	low _TaskTable
  5187  002E36  24F3               	addwf	prodl,w,c
  5188  002E38  6ED9               	movwf	fsr2l,c
  5189  002E3A  0E05               	movlw	high _TaskTable
  5190  002E3C  20F4               	addwfc	prodh,w,c
  5191  002E3E  6EDA               	movwf	fsr2h,c
  5192  002E40  2ADE               	incf	postinc2,f,c
  5193  002E42  0E00               	movlw	0
  5194  002E44  22DD               	addwfc	postdec2,f,c
  5195                           
  5196                           ; BSR set to: 3
  5197                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5198  002E46  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5199  002E48  0D08               	mullw	8
  5200  002E4A  0E05               	movlw	5
  5201  002E4C  26F3               	addwf	prodl,f,c
  5202  002E4E  0E00               	movlw	0
  5203  002E50  22F4               	addwfc	prodh,f,c
  5204  002E52  0EA4               	movlw	low _TaskTable
  5205  002E54  24F3               	addwf	prodl,w,c
  5206  002E56  6ED9               	movwf	fsr2l,c
  5207  002E58  0E05               	movlw	high _TaskTable
  5208  002E5A  20F4               	addwfc	prodh,w,c
  5209  002E5C  6EDA               	movwf	fsr2h,c
  5210  002E5E  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5211  002E60  0D08               	mullw	8
  5212  002E62  0E03               	movlw	3
  5213  002E64  26F3               	addwf	prodl,f,c
  5214  002E66  0E00               	movlw	0
  5215  002E68  22F4               	addwfc	prodh,f,c
  5216  002E6A  0EA4               	movlw	low _TaskTable
  5217  002E6C  24F3               	addwf	prodl,w,c
  5218  002E6E  6EE1               	movwf	fsr1l,c
  5219  002E70  0E05               	movlw	high _TaskTable
  5220  002E72  20F4               	addwfc	prodh,w,c
  5221  002E74  6EE2               	movwf	fsr1h,c
  5222  002E76  50DE               	movf	postinc2,w,c
  5223  002E78  5CE6               	subwf	postinc1,w,c
  5224  002E7A  50DE               	movf	postinc2,w,c
  5225  002E7C  58E6               	subwfb	postinc1,w,c
  5226  002E7E  A0D8               	btfss	status,0,c
  5227  002E80  D04E               	goto	l775
  5228                           
  5229                           ; BSR set to: 3
  5230                           ;os_sched.c: 111: {
  5231                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5232  002E82  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5233  002E84  0D08               	mullw	8
  5234  002E86  0E03               	movlw	3
  5235  002E88  26F3               	addwf	prodl,f,c
  5236  002E8A  0E00               	movlw	0
  5237  002E8C  22F4               	addwfc	prodh,f,c
  5238  002E8E  0EA4               	movlw	low _TaskTable
  5239  002E90  24F3               	addwf	prodl,w,c
  5240  002E92  6ED9               	movwf	fsr2l,c
  5241  002E94  0E05               	movlw	high _TaskTable
  5242  002E96  20F4               	addwfc	prodh,w,c
  5243  002E98  6EDA               	movwf	fsr2h,c
  5244  002E9A  0E00               	movlw	0
  5245  002E9C  6EDE               	movwf	postinc2,c
  5246  002E9E  0E00               	movlw	0
  5247  002EA0  6EDD               	movwf	postdec2,c
  5248                           
  5249                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5250  002EA2  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5251  002EA4  0D08               	mullw	8
  5252  002EA6  0E02               	movlw	2
  5253  002EA8  26F3               	addwf	prodl,f,c
  5254  002EAA  0E00               	movlw	0
  5255  002EAC  22F4               	addwfc	prodh,f,c
  5256  002EAE  0EA4               	movlw	low _TaskTable
  5257  002EB0  24F3               	addwf	prodl,w,c
  5258  002EB2  6ED9               	movwf	fsr2l,c
  5259  002EB4  0E05               	movlw	high _TaskTable
  5260  002EB6  20F4               	addwfc	prodh,w,c
  5261  002EB8  6EDA               	movwf	fsr2h,c
  5262  002EBA  0E01               	movlw	1
  5263  002EBC  6EDF               	movwf	indf2,c
  5264                           
  5265                           ; BSR set to: 3
  5266                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5267  002EBE  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5268  002EC0  0D08               	mullw	8
  5269  002EC2  0EA4               	movlw	low _TaskTable
  5270  002EC4  24F3               	addwf	prodl,w,c
  5271  002EC6  6ED9               	movwf	fsr2l,c
  5272  002EC8  0E05               	movlw	high _TaskTable
  5273  002ECA  20F4               	addwfc	prodh,w,c
  5274  002ECC  6EDA               	movwf	fsr2h,c
  5275  002ECE  D801               	call	u14798
  5276  002ED0  D017               	goto	u14799
  5277  002ED2                     u14798:
  5278  002ED2  0005               	push	
  5279  002ED4  6EFA               	movwf	pclath,c
  5280  002ED6  50DE               	movf	postinc2,w,c
  5281  002ED8  6EFD               	movwf	tosl,c
  5282  002EDA  50DE               	movf	postinc2,w,c
  5283  002EDC  6EFE               	movwf	tosh,c
  5284  002EDE  50F8               	movf	tblptru,w,c
  5285  002EE0  6EFF               	movwf	tosu,c
  5286  002EE2  50FA               	movf	pclath,w,c
  5287  002EE4  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5288  002EE6  0D08               	mullw	8
  5289  002EE8  0E07               	movlw	7
  5290  002EEA  26F3               	addwf	prodl,f,c
  5291  002EEC  0E00               	movlw	0
  5292  002EEE  22F4               	addwfc	prodh,f,c
  5293  002EF0  0EA4               	movlw	low _TaskTable
  5294  002EF2  24F3               	addwf	prodl,w,c
  5295  002EF4  6ED9               	movwf	fsr2l,c
  5296  002EF6  0E05               	movlw	high _TaskTable
  5297  002EF8  20F4               	addwfc	prodh,w,c
  5298  002EFA  6EDA               	movwf	fsr2h,c
  5299  002EFC  50DF               	movf	indf2,w,c
  5300  002EFE  0012               	return		;indir
  5301  002F00                     u14799:
  5302                           
  5303                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5304  002F00  0103               	movlb	3	; () banked
  5305  002F02  51FC               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5306  002F04  0D08               	mullw	8
  5307  002F06  0E02               	movlw	2
  5308  002F08  26F3               	addwf	prodl,f,c
  5309  002F0A  0E00               	movlw	0
  5310  002F0C  22F4               	addwfc	prodh,f,c
  5311  002F0E  0EA4               	movlw	low _TaskTable
  5312  002F10  24F3               	addwf	prodl,w,c
  5313  002F12  6ED9               	movwf	fsr2l,c
  5314  002F14  0E05               	movlw	high _TaskTable
  5315  002F16  20F4               	addwfc	prodh,w,c
  5316  002F18  6EDA               	movwf	fsr2h,c
  5317  002F1A  0E00               	movlw	0
  5318  002F1C  6EDF               	movwf	indf2,c
  5319  002F1E                     l775:
  5320                           
  5321                           ; BSR set to: 3
  5322                           
  5323                           ; BSR set to: 3
  5324                           
  5325                           ;os_sched.c: 117: else
  5326                           ;os_sched.c: 118: {
  5327                           
  5328                           ; BSR set to: 3
  5329  002F1E  2BFC               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5330  002F20  D774               	goto	l15096
  5331  002F22                     __end_of_ScheduleTasks:
  5332                           	opt stack 0
  5333                           tosu	equ	0xFFF
  5334                           tosh	equ	0xFFE
  5335                           tosl	equ	0xFFD
  5336                           pclath	equ	0xFFA
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           intcon2	equ	0xFF1
  5345                           intcon3	equ	0xFF0
  5346                           postinc0	equ	0xFEE
  5347                           wreg	equ	0xFE8
  5348                           postinc1	equ	0xFE6
  5349                           postdec1	equ	0xFE5
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function _InitializeTasks *****************
  5360 ;; Defined at:
  5361 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  ActiveTaskIn    1    2[BANK3 ] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0
  5377 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;Total ram usage:        3 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:   21
  5382 ;; This function calls:
  5383 ;;		_I2cSlv_MainTask
  5384 ;;		_Led_MainTask
  5385 ;;		_MdmHttp_MainTask
  5386 ;;		_Mdm_DrvMainFn
  5387 ;;		_Mdm_MainTask
  5388 ;;		_MyApp_Task
  5389 ;;		_Rtcm_MainTask
  5390 ;;		_Term_MainTask
  5391 ;;		_UsbDevice_MainTask
  5392 ;;		_Wdg_MainTask
  5393 ;; This function is called by:
  5394 ;;		_Sch_MainScheduler
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text15
  5399  004E6A                     __ptext15:
  5400                           	opt stack 0
  5401  004E6A                     _InitializeTasks:
  5402                           	opt stack 8
  5403                           
  5404                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5405                           
  5406                           ; BSR set to: 3
  5407                           ;incstack = 0
  5408  004E6A  0E00               	movlw	0
  5409  004E6C  0103               	movlb	3	; () banked
  5410  004E6E  6FFA               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5411                           
  5412                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5413  004E70  0E00               	movlw	0
  5414  004E72  6FFA               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5415  004E74                     l15084:
  5416                           
  5417                           ; BSR set to: 3
  5418  004E74  0E3D               	movlw	low _TaskNumber
  5419  004E76  6EF6               	movwf	tblptrl,c
  5420  004E78                     	if	1	;There is more than 1 active tblptr byte
  5421  004E78  0EFC               	movlw	high _TaskNumber
  5422  004E7A  6EF7               	movwf	tblptrh,c
  5423  004E7C                     	endif
  5424  004E7C                     	if	0	;There are less than 3 active tblptr bytes
  5425  004E7C                     	endif
  5426  004E7C  51FA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5427  004E7E  6FF8               	movwf	??_InitializeTasks& (0+255),b
  5428  004E80  6BF9               	clrf	(??_InitializeTasks+1)& (0+255),b
  5429  004E82  0009               	tblrd		*+
  5430  004E84  50F5               	movf	tablat,w,c
  5431  004E86  5DF8               	subwf	??_InitializeTasks& (0+255),w,b
  5432  004E88  0009               	tblrd		*+
  5433  004E8A  50F5               	movf	tablat,w,c
  5434  004E8C  59F9               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5435  004E8E  B0D8               	btfsc	status,0,c
  5436  004E90  0012               	return	
  5437                           
  5438                           ; BSR set to: 3
  5439                           ;os_sched.c: 86: {
  5440                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5441                           
  5442                           ; BSR set to: 3
  5443                           
  5444                           ; BSR set to: 3
  5445  004E92  51FA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5446  004E94  0D08               	mullw	8
  5447  004E96  0EA4               	movlw	low _TaskTable
  5448  004E98  24F3               	addwf	prodl,w,c
  5449  004E9A  6ED9               	movwf	fsr2l,c
  5450  004E9C  0E05               	movlw	high _TaskTable
  5451  004E9E  20F4               	addwfc	prodh,w,c
  5452  004EA0  6EDA               	movwf	fsr2h,c
  5453  004EA2  D801               	call	u14758
  5454  004EA4  D017               	goto	u14759
  5455  004EA6                     u14758:
  5456  004EA6  0005               	push	
  5457  004EA8  6EFA               	movwf	pclath,c
  5458  004EAA  50DE               	movf	postinc2,w,c
  5459  004EAC  6EFD               	movwf	tosl,c
  5460  004EAE  50DE               	movf	postinc2,w,c
  5461  004EB0  6EFE               	movwf	tosh,c
  5462  004EB2  50F8               	movf	tblptru,w,c
  5463  004EB4  6EFF               	movwf	tosu,c
  5464  004EB6  50FA               	movf	pclath,w,c
  5465  004EB8  51FA               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5466  004EBA  0D08               	mullw	8
  5467  004EBC  0E07               	movlw	7
  5468  004EBE  26F3               	addwf	prodl,f,c
  5469  004EC0  0E00               	movlw	0
  5470  004EC2  22F4               	addwfc	prodh,f,c
  5471  004EC4  0EA4               	movlw	low _TaskTable
  5472  004EC6  24F3               	addwf	prodl,w,c
  5473  004EC8  6ED9               	movwf	fsr2l,c
  5474  004ECA  0E05               	movlw	high _TaskTable
  5475  004ECC  20F4               	addwfc	prodh,w,c
  5476  004ECE  6EDA               	movwf	fsr2h,c
  5477  004ED0  50DF               	movf	indf2,w,c
  5478  004ED2  0012               	return		;indir
  5479  004ED4                     u14759:
  5480  004ED4  0103               	movlb	3	; () banked
  5481  004ED6  2BFA               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5482  004ED8  D7CD               	goto	l15084
  5483  004EDA                     __end_of_InitializeTasks:
  5484                           	opt stack 0
  5485                           tosu	equ	0xFFF
  5486                           tosh	equ	0xFFE
  5487                           tosl	equ	0xFFD
  5488                           pclath	equ	0xFFA
  5489                           tblptru	equ	0xFF8
  5490                           tblptrh	equ	0xFF7
  5491                           tblptrl	equ	0xFF6
  5492                           tablat	equ	0xFF5
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           intcon	equ	0xFF2
  5496                           intcon2	equ	0xFF1
  5497                           intcon3	equ	0xFF0
  5498                           postinc0	equ	0xFEE
  5499                           wreg	equ	0xFE8
  5500                           postinc1	equ	0xFE6
  5501                           postdec1	equ	0xFE5
  5502                           fsr1h	equ	0xFE2
  5503                           fsr1l	equ	0xFE1
  5504                           indf2	equ	0xFDF
  5505                           postinc2	equ	0xFDE
  5506                           postdec2	equ	0xFDD
  5507                           fsr2h	equ	0xFDA
  5508                           fsr2l	equ	0xFD9
  5509                           status	equ	0xFD8
  5510                           
  5511 ;; *************** function _MyApp_Task *****************
  5512 ;; Defined at:
  5513 ;;		line 167 in file "../Source/c/04_App/app.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  Options         1    wreg     unsigned char 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  Options         1    0[COMRAM] unsigned char 
  5518 ;;  smsText        20    0        unsigned char [20]
  5519 ;;  cmpString       3    0[BANK1 ] unsigned char [3]
  5520 ;;  memoryResult    1    3[BANK1 ] enum E8114
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5531 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5533 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5534 ;;Total ram usage:        4 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:   17
  5537 ;; This function calls:
  5538 ;;		_ClearBuffer
  5539 ;;		_Eeprom_Read
  5540 ;;		_GetCallerNumber
  5541 ;;		_Led_SetLedBlinkTime
  5542 ;;		_Mdm_HangPhoneCall
  5543 ;;		_Mdm_IsRinging
  5544 ;;		_Mdm_IsSmsReceived
  5545 ;;		_Mdm_RequestSmsData
  5546 ;;		_StringCompare
  5547 ;;		_blinkForSeconds
  5548 ;;		_initGprsModem
  5549 ;; This function is called by:
  5550 ;;		_InitializeTasks
  5551 ;;		_ScheduleTasks
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text16
  5556  002F22                     __ptext16:
  5557                           	opt stack 0
  5558  002F22                     _MyApp_Task:
  5559                           	opt stack 11
  5560                           
  5561                           ;app.c: 169: static UINT8 phone[] = {'+', '3', '9', '0', '1', '2', '3', '4', '5', '6', '
      +                          7', '8', '9', '\0'};
  5562                           ;app.c: 171: static uint16_t blinkTicks = 0xFFFF;
  5563                           ;app.c: 172: static uint8_t blinkSeconds = 0;
  5564                           ;app.c: 174: uint8_t smsText[((UINT8)(20))];
  5565                           ;app.c: 175: uint8_t cmpString[] = {'c', 'a', 't'};
  5566                           
  5567                           ; BSR set to: 3
  5568                           ;incstack = 0
  5569  002F22  C3C5  F100         	movff	MyApp_Task@F9008,MyApp_Task@cmpString
  5570  002F26  C3C6  F101         	movff	MyApp_Task@F9008+1,MyApp_Task@cmpString+1
  5571  002F2A  C3C7  F102         	movff	MyApp_Task@F9008+2,MyApp_Task@cmpString+2
  5572                           
  5573                           ;app.c: 177: static uint8_t memoryFlag = 0;
  5574                           ;app.c: 178: I2cOpStsType memoryResult = OP_COMPLETE;
  5575  002F2E  0E01               	movlw	1
  5576  002F30  0101               	movlb	1	; () banked
  5577  002F32  6F03               	movwf	MyApp_Task@memoryResult& (0+255),b
  5578                           
  5579                           ;app.c: 180: switch (SystemState)
  5580  002F34  D07A               	goto	l2581
  5581  002F36                     
  5582                           ;app.c: 185: Led_SetLedBlinkTime(1u,100,900);
  5583                           
  5584                           ; BSR set to: 1
  5585  002F36  0E00               	movlw	0
  5586  002F38  0100               	movlb	0	; () banked
  5587  002F3A  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5588  002F3C  0E64               	movlw	100
  5589  002F3E  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5590  002F40  0E03               	movlw	3
  5591  002F42  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5592  002F44  0E84               	movlw	132
  5593  002F46  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5594  002F48  0E01               	movlw	1
  5595  002F4A  EC00  F02A         	call	_Led_SetLedBlinkTime
  5596                           
  5597                           ;app.c: 186: break;
  5598  002F4E  0012               	return	
  5599  002F50                     
  5600                           ;app.c: 190: if (initGprsModem())
  5601  002F50  EC63  F023         	call	_initGprsModem	;wreg free
  5602  002F54  0900               	iorlw	0
  5603  002F56  B4D8               	btfsc	status,2,c
  5604  002F58  0012               	return	
  5605                           
  5606                           ;app.c: 191: {
  5607                           ;app.c: 193: if (Mdm_IsRinging())
  5608  002F5A  EC75  F02F         	call	_Mdm_IsRinging	;wreg free
  5609  002F5E  0900               	iorlw	0
  5610  002F60  B4D8               	btfsc	status,2,c
  5611  002F62  D025               	goto	l2586
  5612                           
  5613                           ;app.c: 194: {
  5614                           ;app.c: 195: blinkTicks = 0;
  5615  002F64  0E00               	movlw	0
  5616  002F66  0103               	movlb	3	; () banked
  5617  002F68  6FF7               	movwf	(MyApp_Task@blinkTicks+1)& (0+255),b
  5618  002F6A  0E00               	movlw	0
  5619  002F6C  6FF6               	movwf	MyApp_Task@blinkTicks& (0+255),b
  5620                           
  5621                           ; BSR set to: 3
  5622                           ;app.c: 196: if (StringCompare(phone, GetCallerNumber(), 14))
  5623  002F6E  0EDA               	movlw	low MyApp_Task@phone
  5624  002F70  0100               	movlb	0	; () banked
  5625  002F72  6F85               	movwf	StringCompare@String1& (0+255),b
  5626  002F74  0E04               	movlw	high MyApp_Task@phone
  5627  002F76  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
  5628  002F78  ECDA  F02D         	call	_GetCallerNumber	;wreg free
  5629  002F7C  C083  F087         	movff	?_GetCallerNumber,StringCompare@String2
  5630  002F80  C084  F088         	movff	?_GetCallerNumber+1,StringCompare@String2+1
  5631  002F84  0E00               	movlw	0
  5632  002F86  0100               	movlb	0	; () banked
  5633  002F88  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
  5634  002F8A  0E0E               	movlw	14
  5635  002F8C  6F89               	movwf	StringCompare@Len& (0+255),b
  5636  002F8E  EC7E  F02A         	call	_StringCompare	;wreg free
  5637  002F92  0900               	iorlw	0
  5638  002F94  B4D8               	btfsc	status,2,c
  5639  002F96  D003               	goto	l2587
  5640                           
  5641                           ;app.c: 197: {
  5642                           ;app.c: 198: blinkSeconds = 5;
  5643  002F98  0E05               	movlw	5
  5644  002F9A  0101               	movlb	1	; () banked
  5645  002F9C  6FD5               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5646  002F9E                     l2587:
  5647                           
  5648                           ;app.c: 199: }
  5649                           ;app.c: 200: blinkSeconds = 3;
  5650  002F9E  0E03               	movlw	3
  5651  002FA0  0101               	movlb	1	; () banked
  5652  002FA2  6FD5               	movwf	MyApp_Task@blinkSeconds& (0+255),b
  5653                           
  5654                           ; BSR set to: 1
  5655                           ;app.c: 201: Mdm_HangPhoneCall();
  5656  002FA4  ECE2  F030         	call	_Mdm_HangPhoneCall	;wreg free
  5657                           
  5658                           ;app.c: 202: memoryFlag = 1;
  5659  002FA8  0E01               	movlw	1
  5660  002FAA  0100               	movlb	0	; () banked
  5661  002FAC  6FC4               	movwf	MyApp_Task@memoryFlag& (0+255),b
  5662  002FAE                     l2586:
  5663                           
  5664                           ;app.c: 203: }
  5665                           ;app.c: 204: if (Mdm_IsSmsReceived())
  5666                           
  5667                           ; BSR set to: 0
  5668  002FAE  EC63  F02F         	call	_Mdm_IsSmsReceived	;wreg free
  5669  002FB2  0900               	iorlw	0
  5670  002FB4  A4D8               	btfss	status,2,c
  5671                           
  5672                           ;app.c: 205: {
  5673                           ;app.c: 206: Mdm_RequestSmsData();
  5674  002FB6  EC04  F031         	call	_Mdm_RequestSmsData	;wreg free
  5675                           
  5676                           ;app.c: 207: }
  5677                           ;app.c: 224: blinkForSeconds(blinkSeconds, &blinkTicks);
  5678  002FBA  0EF6               	movlw	low MyApp_Task@blinkTicks
  5679  002FBC  0100               	movlb	0	; () banked
  5680  002FBE  6F93               	movwf	blinkForSeconds@blinkTicks& (0+255),b
  5681  002FC0  0E03               	movlw	high MyApp_Task@blinkTicks
  5682  002FC2  6F94               	movwf	(blinkForSeconds@blinkTicks+1)& (0+255),b
  5683  002FC4  0101               	movlb	1	; () banked
  5684  002FC6  51D5               	movf	MyApp_Task@blinkSeconds& (0+255),w,b
  5685  002FC8  ECA0  F02D         	call	_blinkForSeconds
  5686                           
  5687                           ;app.c: 226: if (memoryFlag == 1)
  5688  002FCC  0100               	movlb	0	; () banked
  5689  002FCE  05C4               	decf	MyApp_Task@memoryFlag& (0+255),w,b
  5690  002FD0  A4D8               	btfss	status,2,c
  5691  002FD2  D00D               	goto	l2589
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;app.c: 227: {
  5695                           ;app.c: 229: ClearBuffer(phone, 14);
  5696  002FD4  0EDA               	movlw	low MyApp_Task@phone
  5697  002FD6  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
  5698  002FD8  0E04               	movlw	high MyApp_Task@phone
  5699  002FDA  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
  5700  002FDC  0E00               	movlw	0
  5701  002FDE  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
  5702  002FE0  0E0E               	movlw	14
  5703  002FE2  6F7F               	movwf	ClearBuffer@Len& (0+255),b
  5704  002FE4  ECF5  F02D         	call	_ClearBuffer	;wreg free
  5705                           
  5706                           ;app.c: 230: memoryFlag++;
  5707  002FE8  0100               	movlb	0	; () banked
  5708  002FEA  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5709                           
  5710                           ;app.c: 231: }
  5711  002FEC  0012               	return	
  5712  002FEE                     l2589:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;app.c: 232: else if (memoryFlag >= 2 && memoryFlag <= 250)
  5716                           
  5717                           ; BSR set to: 0
  5718  002FEE  0E01               	movlw	1
  5719  002FF0  65C4               	cpfsgt	MyApp_Task@memoryFlag& (0+255),b
  5720  002FF2  0012               	return	
  5721                           
  5722                           ; BSR set to: 0
  5723  002FF4  0EFB               	movlw	251
  5724  002FF6  61C4               	cpfslt	MyApp_Task@memoryFlag& (0+255),b
  5725  002FF8  0012               	return	
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;app.c: 233: {
  5729                           ;app.c: 234: if (memoryFlag == 100)
  5730  002FFA  0E64               	movlw	100
  5731  002FFC  19C4               	xorwf	MyApp_Task@memoryFlag& (0+255),w,b
  5732  002FFE  A4D8               	btfss	status,2,c
  5733  003000  D012               	goto	l2592
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;app.c: 235: {
  5737                           ;app.c: 236: memoryResult = Eeprom_Read(0, phone, 13);
  5738  003002  0EDA               	movlw	low MyApp_Task@phone
  5739  003004  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
  5740  003006  0E04               	movlw	high MyApp_Task@phone
  5741  003008  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
  5742  00300A  0E0D               	movlw	13
  5743  00300C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
  5744  00300E  0E00               	movlw	0
  5745  003010  EC2A  F02A         	call	_Eeprom_Read
  5746  003014  0101               	movlb	1	; () banked
  5747  003016  6F03               	movwf	MyApp_Task@memoryResult& (0+255),b
  5748                           
  5749                           ; BSR set to: 1
  5750                           ;app.c: 237: if (memoryResult != OP_PENDING)
  5751  003018  0E02               	movlw	2
  5752  00301A  1903               	xorwf	MyApp_Task@memoryResult& (0+255),w,b
  5753  00301C  B4D8               	btfsc	status,2,c
  5754  00301E  0012               	return	
  5755                           
  5756                           ; BSR set to: 1
  5757                           ;app.c: 238: {
  5758                           ;app.c: 239: memoryFlag++;
  5759  003020  0100               	movlb	0	; () banked
  5760  003022  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;app.c: 240: }
  5764                           ;app.c: 241: }
  5765  003024  0012               	return	
  5766  003026                     l2592:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;app.c: 242: else
  5770                           ;app.c: 243: {
  5771                           ;app.c: 244: memoryFlag++;
  5772                           
  5773                           ; BSR set to: 0
  5774  003026  2BC4               	incf	MyApp_Task@memoryFlag& (0+255),f,b
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;app.c: 253: }
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;app.c: 252: break;
  5781                           
  5782                           ;app.c: 251: default:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;app.c: 245: }
  5786                           ;app.c: 246: }
  5787                           ;app.c: 247: }
  5788                           ;app.c: 248: break;
  5789                           
  5790                           ; BSR set to: 0
  5791                           
  5792                           ; BSR set to: 0
  5793                           
  5794                           ; BSR set to: 0
  5795  003028  0012               	return	
  5796  00302A                     l2581:
  5797                           
  5798                           ; BSR set to: 0
  5799  00302A  0100               	movlb	0	; () banked
  5800  00302C  51D5               	movf	_SystemState& (0+255),w,b
  5801                           
  5802                           ; Switch size 1, requested type "space"
  5803                           ; Number of cases is 2, Range of values is 0 to 1
  5804                           ; switch strategies available:
  5805                           ; Name         Instructions Cycles
  5806                           ; simple_byte            7     4 (average)
  5807                           ;	Chosen strategy is simple_byte
  5808  00302E  0A00               	xorlw	0	; case 0
  5809  003030  B4D8               	btfsc	status,2,c
  5810  003032  D781               	goto	l2582
  5811  003034  0A01               	xorlw	1	; case 1
  5812  003036  A4D8               	btfss	status,2,c
  5813  003038  0012               	return	
  5814  00303A  D78A               	goto	l2584
  5815  00303C                     __end_of_MyApp_Task:
  5816                           	opt stack 0
  5817                           tosu	equ	0xFFF
  5818                           tosh	equ	0xFFE
  5819                           tosl	equ	0xFFD
  5820                           pclath	equ	0xFFA
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           intcon	equ	0xFF2
  5828                           intcon2	equ	0xFF1
  5829                           intcon3	equ	0xFF0
  5830                           postinc0	equ	0xFEE
  5831                           wreg	equ	0xFE8
  5832                           postinc1	equ	0xFE6
  5833                           postdec1	equ	0xFE5
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           indf2	equ	0xFDF
  5837                           postinc2	equ	0xFDE
  5838                           postdec2	equ	0xFDD
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8
  5842                           
  5843 ;; *************** function _Term_MainTask *****************
  5844 ;; Defined at:
  5845 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  Options         1    wreg     unsigned char 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  Options         1    0[COMRAM] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:   17
  5866 ;; This function calls:
  5867 ;;		_Term_MainSm
  5868 ;; This function is called by:
  5869 ;;		_InitializeTasks
  5870 ;;		_ScheduleTasks
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text17
  5875  0060CC                     __ptext17:
  5876                           	opt stack 0
  5877  0060CC                     _Term_MainTask:
  5878                           	opt stack 11
  5879                           
  5880                           ;term.c: 847: switch (SystemState)
  5881                           
  5882                           ;incstack = 0
  5883  0060CC  D003               	goto	l2452
  5884  0060CE                     
  5885                           ;term.c: 858: Term_MainSm();
  5886  0060CE  EC5B  F008         	call	_Term_MainSm	;wreg free
  5887                           
  5888                           ;term.c: 865: }
  5889                           
  5890                           ;term.c: 864: break;
  5891                           
  5892                           ;term.c: 863: default:
  5893                           
  5894                           ;term.c: 860: break;
  5895  0060D2  0012               	return	
  5896  0060D4                     l2452:
  5897  0060D4  0100               	movlb	0	; () banked
  5898  0060D6  51D5               	movf	_SystemState& (0+255),w,b
  5899                           
  5900                           ; Switch size 1, requested type "space"
  5901                           ; Number of cases is 2, Range of values is 0 to 1
  5902                           ; switch strategies available:
  5903                           ; Name         Instructions Cycles
  5904                           ; simple_byte            7     4 (average)
  5905                           ;	Chosen strategy is simple_byte
  5906  0060D8  0A00               	xorlw	0	; case 0
  5907  0060DA  B4D8               	btfsc	status,2,c
  5908  0060DC  0012               	return	
  5909  0060DE  0A01               	xorlw	1	; case 1
  5910  0060E0  A4D8               	btfss	status,2,c
  5911  0060E2  0012               	return	
  5912  0060E4  D7F4               	goto	l2455
  5913  0060E6                     __end_of_Term_MainTask:
  5914                           	opt stack 0
  5915                           tosu	equ	0xFFF
  5916                           tosh	equ	0xFFE
  5917                           tosl	equ	0xFFD
  5918                           pclath	equ	0xFFA
  5919                           tblptru	equ	0xFF8
  5920                           tblptrh	equ	0xFF7
  5921                           tblptrl	equ	0xFF6
  5922                           tablat	equ	0xFF5
  5923                           prodh	equ	0xFF4
  5924                           prodl	equ	0xFF3
  5925                           intcon	equ	0xFF2
  5926                           intcon2	equ	0xFF1
  5927                           intcon3	equ	0xFF0
  5928                           postinc0	equ	0xFEE
  5929                           wreg	equ	0xFE8
  5930                           postinc1	equ	0xFE6
  5931                           postdec1	equ	0xFE5
  5932                           fsr1h	equ	0xFE2
  5933                           fsr1l	equ	0xFE1
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           postdec2	equ	0xFDD
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _Rtcm_MainTask *****************
  5942 ;; Defined at:
  5943 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  Options         1    wreg     unsigned char 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  Options         1    0[COMRAM] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:   14
  5964 ;; This function calls:
  5965 ;;		_Rtcc_AlarmConfig
  5966 ;;		_Rtcc_LockRtc
  5967 ;;		_Rtcc_RtcConfig
  5968 ;;		_Rtcc_SetRtcStatus
  5969 ;;		_Rtcc_UnlockRtc
  5970 ;;		_Rtcm_GetRtccDate
  5971 ;;		_Rtcm_SetRtccDate
  5972 ;; This function is called by:
  5973 ;;		_InitializeTasks
  5974 ;;		_ScheduleTasks
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text18
  5979  004AE0                     __ptext18:
  5980                           	opt stack 0
  5981  004AE0                     _Rtcm_MainTask:
  5982                           	opt stack 14
  5983                           
  5984                           ;rtcm.c: 101: switch (SystemState)
  5985                           
  5986                           ;incstack = 0
  5987  004AE0  D03D               	goto	l2182
  5988  004AE2                     l2183:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  5992  004AE2  86CD               	bsf	4045,3,c	;volatile
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  5996  004AE4  0E00               	movlw	0
  5997  004AE6  0103               	movlb	3	; () banked
  5998  004AE8  6FB1               	movwf	_RtcConfig& (0+255),b
  5999                           
  6000                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6001  004AEA  0E00               	movlw	0
  6002  004AEC  6FB2               	movwf	(_RtcConfig+1)& (0+255),b
  6003                           
  6004                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6005  004AEE  0E01               	movlw	1
  6006  004AF0  6FB3               	movwf	(_RtcConfig+2)& (0+255),b
  6007                           
  6008                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6009  004AF2  0E01               	movlw	1
  6010  004AF4  6FB4               	movwf	(_RtcConfig+3)& (0+255),b
  6011                           
  6012                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6013  004AF6  0E01               	movlw	1
  6014  004AF8  6FAD               	movwf	_AlCfg& (0+255),b
  6015                           
  6016                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6017  004AFA  0E01               	movlw	1
  6018  004AFC  6FAE               	movwf	(_AlCfg+1)& (0+255),b
  6019                           
  6020                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6021  004AFE  0E01               	movlw	1
  6022  004B00  6FAF               	movwf	(_AlCfg+2)& (0+255),b
  6023                           
  6024                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6025  004B02  0E00               	movlw	0
  6026  004B04  6FB0               	movwf	(_AlCfg+3)& (0+255),b
  6027                           
  6028                           ; BSR set to: 3
  6029                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6030  004B06  ECF4  F030         	call	_Rtcc_UnlockRtc	;wreg free
  6031                           
  6032                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6033  004B0A  0EB1               	movlw	low _RtcConfig
  6034  004B0C  0100               	movlb	0	; () banked
  6035  004B0E  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6036  004B10  0E03               	movlw	high _RtcConfig
  6037  004B12  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6038  004B14  ECC4  F022         	call	_Rtcc_RtcConfig	;wreg free
  6039                           
  6040                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6041  004B18  0EAD               	movlw	low _AlCfg
  6042  004B1A  0100               	movlb	0	; () banked
  6043  004B1C  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6044  004B1E  0E03               	movlw	high _AlCfg
  6045  004B20  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6046  004B22  ECA3  F027         	call	_Rtcc_AlarmConfig	;wreg free
  6047                           
  6048                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6049  004B26  0E01               	movlw	1
  6050  004B28  ECA3  F030         	call	_Rtcc_SetRtcStatus
  6051                           
  6052                           ;rtcm.c: 127: Rtcc_LockRtc();
  6053  004B2C  ECFC  F030         	call	_Rtcc_LockRtc	;wreg free
  6054                           
  6055                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6056  004B30  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6057  004B34  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6058  004B38  0E07               	movlw	7
  6059  004B3A                     u14631:
  6060  004B3A  CFDB FFEB          	movff	plusw2,plusw0
  6061  004B3E  06E8               	decf	wreg,f,c
  6062  004B40  E2FC               	bc	u14631
  6063  004B42  ECD6  F029         	call	_Rtcm_SetRtccDate	;wreg free
  6064                           
  6065                           ;rtcm.c: 154: break;
  6066  004B46  0012               	return	
  6067  004B48                     
  6068                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6069  004B48  EC0C  F028         	call	_Rtcm_GetRtccDate	;wreg free
  6070  004B4C  EE23  F000         	lfsr	2,_Rtcm_SystemDate
  6071  004B50  0E07               	movlw	7
  6072  004B52                     u14641:
  6073  004B52  CFEB FFDB          	movff	plusw0,plusw2
  6074  004B56  06E8               	decf	wreg,f,c
  6075  004B58  E2FC               	bc	u14641
  6076                           
  6077                           ;rtcm.c: 165: }
  6078                           
  6079                           ;rtcm.c: 164: break;
  6080                           
  6081                           ;rtcm.c: 163: default:
  6082                           
  6083                           ;rtcm.c: 160: break;
  6084  004B5A  0012               	return	
  6085  004B5C                     l2182:
  6086  004B5C  0100               	movlb	0	; () banked
  6087  004B5E  51D5               	movf	_SystemState& (0+255),w,b
  6088                           
  6089                           ; Switch size 1, requested type "space"
  6090                           ; Number of cases is 2, Range of values is 0 to 1
  6091                           ; switch strategies available:
  6092                           ; Name         Instructions Cycles
  6093                           ; simple_byte            7     4 (average)
  6094                           ;	Chosen strategy is simple_byte
  6095  004B60  0A00               	xorlw	0	; case 0
  6096  004B62  B4D8               	btfsc	status,2,c
  6097  004B64  D7BE               	goto	l2183
  6098  004B66  0A01               	xorlw	1	; case 1
  6099  004B68  A4D8               	btfss	status,2,c
  6100  004B6A  0012               	return	
  6101  004B6C  D7ED               	goto	l2185
  6102  004B6E                     __end_of_Rtcm_MainTask:
  6103                           	opt stack 0
  6104                           tosu	equ	0xFFF
  6105                           tosh	equ	0xFFE
  6106                           tosl	equ	0xFFD
  6107                           pclath	equ	0xFFA
  6108                           tblptru	equ	0xFF8
  6109                           tblptrh	equ	0xFF7
  6110                           tblptrl	equ	0xFF6
  6111                           tablat	equ	0xFF5
  6112                           prodh	equ	0xFF4
  6113                           prodl	equ	0xFF3
  6114                           intcon	equ	0xFF2
  6115                           intcon2	equ	0xFF1
  6116                           intcon3	equ	0xFF0
  6117                           postinc0	equ	0xFEE
  6118                           plusw0	equ	0xFEB
  6119                           wreg	equ	0xFE8
  6120                           postinc1	equ	0xFE6
  6121                           postdec1	equ	0xFE5
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           plusw2	equ	0xFDB
  6128                           fsr2h	equ	0xFDA
  6129                           fsr2l	equ	0xFD9
  6130                           status	equ	0xFD8
  6131                           
  6132 ;; *************** function _Led_MainTask *****************
  6133 ;; Defined at:
  6134 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  Options         1    wreg     unsigned char 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  Options         1    0[COMRAM] unsigned char 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6151 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6152 ;;Total ram usage:        1 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:   14
  6155 ;; This function calls:
  6156 ;;		_LedStateMachine
  6157 ;; This function is called by:
  6158 ;;		_InitializeTasks
  6159 ;;		_ScheduleTasks
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text19
  6164  0039E0                     __ptext19:
  6165                           	opt stack 0
  6166  0039E0                     _Led_MainTask:
  6167                           	opt stack 14
  6168                           
  6169                           ;led.c: 300: switch (SystemState)
  6170                           
  6171                           ;incstack = 0
  6172  0039E0  D05C               	goto	l2096
  6173  0039E2                     l2097:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6177  0039E2  9895               	bcf	3989,4,c	;volatile
  6178                           
  6179                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6180  0039E4  9A95               	bcf	3989,5,c	;volatile
  6181                           
  6182                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6183  0039E6  9C95               	bcf	3989,6,c	;volatile
  6184                           
  6185                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6186  0039E8  9883               	bcf	3971,4,c	;volatile
  6187                           
  6188                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6189  0039EA  9A83               	bcf	3971,5,c	;volatile
  6190                           
  6191                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6192  0039EC  9C83               	bcf	3971,6,c	;volatile
  6193                           
  6194                           ;led.c: 311: break;
  6195  0039EE  0012               	return	
  6196  0039F0                     
  6197                           ; BSR set to: 0
  6198                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6199                           
  6200                           ; BSR set to: 0
  6201  0039F0  0EFD               	movlw	low _Led1Sts
  6202  0039F2  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6203  0039F4  0E01               	movlw	high _Led1Sts
  6204  0039F6  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6205  0039F8  0EFC               	movlw	low _Led1OutSts
  6206  0039FA  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6207  0039FC  0E01               	movlw	high _Led1OutSts
  6208  0039FE  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6209  003A00  0E6B               	movlw	low _Led1Blink
  6210  003A02  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6211  003A04  0E03               	movlw	high _Led1Blink
  6212  003A06  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6213  003A08  0E8F               	movlw	low _Led1Pulse
  6214  003A0A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6215  003A0C  0E03               	movlw	high _Led1Pulse
  6216  003A0E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6217  003A10  0E01               	movlw	1
  6218  003A12  EC1F  F022         	call	_LedStateMachine
  6219  003A16  0100               	movlb	0	; () banked
  6220  003A18  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6221  003A1A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6222  003A1C  5083               	movf	3971,w,c	;volatile
  6223  003A1E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6224  003A20  0BEF               	andlw	-17
  6225  003A22  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6226  003A24  6E83               	movwf	3971,c	;volatile
  6227                           
  6228                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6229  003A26  0EFB               	movlw	low _Led2Sts
  6230  003A28  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6231  003A2A  0E01               	movlw	high _Led2Sts
  6232  003A2C  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6233  003A2E  0EFA               	movlw	low _Led2OutSts
  6234  003A30  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6235  003A32  0E01               	movlw	high _Led2OutSts
  6236  003A34  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6237  003A36  0E62               	movlw	low _Led2Blink
  6238  003A38  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6239  003A3A  0E03               	movlw	high _Led2Blink
  6240  003A3C  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6241  003A3E  0E89               	movlw	low _Led2Pulse
  6242  003A40  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6243  003A42  0E03               	movlw	high _Led2Pulse
  6244  003A44  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6245  003A46  0E02               	movlw	2
  6246  003A48  EC1F  F022         	call	_LedStateMachine
  6247  003A4C  0100               	movlb	0	; () banked
  6248  003A4E  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6249  003A50  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6250  003A52  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6251  003A54  5083               	movf	3971,w,c	;volatile
  6252  003A56  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6253  003A58  0BDF               	andlw	-33
  6254  003A5A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6255  003A5C  6E83               	movwf	3971,c	;volatile
  6256                           
  6257                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6258  003A5E  0EF9               	movlw	low _Led3Sts
  6259  003A60  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6260  003A62  0E01               	movlw	high _Led3Sts
  6261  003A64  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6262  003A66  0EF8               	movlw	low _Led3OutSts
  6263  003A68  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6264  003A6A  0E01               	movlw	high _Led3OutSts
  6265  003A6C  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6266  003A6E  0E59               	movlw	low _Led3Blink
  6267  003A70  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6268  003A72  0E03               	movlw	high _Led3Blink
  6269  003A74  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6270  003A76  0E83               	movlw	low _Led3Pulse
  6271  003A78  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6272  003A7A  0E03               	movlw	high _Led3Pulse
  6273  003A7C  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6274  003A7E  0E03               	movlw	3
  6275  003A80  EC1F  F022         	call	_LedStateMachine
  6276  003A84  0100               	movlb	0	; () banked
  6277  003A86  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6278  003A88  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6279  003A8A  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6280  003A8C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6281  003A8E  5083               	movf	3971,w,c	;volatile
  6282  003A90  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6283  003A92  0BBF               	andlw	-65
  6284  003A94  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6285  003A96  6E83               	movwf	3971,c	;volatile
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;led.c: 326: }
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;led.c: 325: break;
  6292                           
  6293                           ;led.c: 324: default:
  6294                           
  6295                           ;led.c: 321: break;
  6296  003A98  0012               	return	
  6297  003A9A                     l2096:
  6298                           
  6299                           ; BSR set to: 0
  6300  003A9A  0100               	movlb	0	; () banked
  6301  003A9C  51D5               	movf	_SystemState& (0+255),w,b
  6302                           
  6303                           ; Switch size 1, requested type "space"
  6304                           ; Number of cases is 2, Range of values is 0 to 1
  6305                           ; switch strategies available:
  6306                           ; Name         Instructions Cycles
  6307                           ; simple_byte            7     4 (average)
  6308                           ;	Chosen strategy is simple_byte
  6309  003A9E  0A00               	xorlw	0	; case 0
  6310  003AA0  B4D8               	btfsc	status,2,c
  6311  003AA2  D79F               	goto	l2097
  6312  003AA4  0A01               	xorlw	1	; case 1
  6313  003AA6  A4D8               	btfss	status,2,c
  6314  003AA8  0012               	return	
  6315  003AAA  D7A2               	goto	l2099
  6316  003AAC                     __end_of_Led_MainTask:
  6317                           	opt stack 0
  6318                           tosu	equ	0xFFF
  6319                           tosh	equ	0xFFE
  6320                           tosl	equ	0xFFD
  6321                           pclath	equ	0xFFA
  6322                           tblptru	equ	0xFF8
  6323                           tblptrh	equ	0xFF7
  6324                           tblptrl	equ	0xFF6
  6325                           tablat	equ	0xFF5
  6326                           prodh	equ	0xFF4
  6327                           prodl	equ	0xFF3
  6328                           intcon	equ	0xFF2
  6329                           intcon2	equ	0xFF1
  6330                           intcon3	equ	0xFF0
  6331                           postinc0	equ	0xFEE
  6332                           plusw0	equ	0xFEB
  6333                           wreg	equ	0xFE8
  6334                           postinc1	equ	0xFE6
  6335                           postdec1	equ	0xFE5
  6336                           fsr1h	equ	0xFE2
  6337                           fsr1l	equ	0xFE1
  6338                           indf2	equ	0xFDF
  6339                           postinc2	equ	0xFDE
  6340                           postdec2	equ	0xFDD
  6341                           plusw2	equ	0xFDB
  6342                           fsr2h	equ	0xFDA
  6343                           fsr2l	equ	0xFD9
  6344                           status	equ	0xFD8
  6345                           
  6346 ;; *************** function _UsbDevice_MainTask *****************
  6347 ;; Defined at:
  6348 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  Options         1    wreg     unsigned char 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  Options         1    0[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;Total ram usage:        0 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:   20
  6369 ;; This function calls:
  6370 ;;		_CDCTxService
  6371 ;;		_USBDeviceInit
  6372 ;;		_USBDeviceTasks
  6373 ;; This function is called by:
  6374 ;;		_InitializeTasks
  6375 ;;		_ScheduleTasks
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text20
  6380  005EA2                     __ptext20:
  6381                           	opt stack 0
  6382  005EA2                     _UsbDevice_MainTask:
  6383                           	opt stack 8
  6384                           
  6385                           ;usb_device_mgr.c: 74: switch (SystemState)
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;incstack = 0
  6389  005EA2  D008               	goto	l1989
  6390  005EA4                     
  6391                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6392  005EA4  ECC0  F010         	call	_USBDeviceInit	;wreg free
  6393                           
  6394                           ;usb_device_mgr.c: 80: ;
  6395                           ;usb_device_mgr.c: 81: break;
  6396  005EA8  0012               	return	
  6397  005EAA                     
  6398                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6399  005EAA  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6400                           
  6401                           ;usb_device_mgr.c: 90: CDCTxService();
  6402  005EAE  EC63  F013         	call	_CDCTxService	;wreg free
  6403                           
  6404                           ;usb_device_mgr.c: 101: }
  6405                           
  6406                           ;usb_device_mgr.c: 100: break;
  6407                           
  6408                           ;usb_device_mgr.c: 99: default:
  6409                           
  6410                           ;usb_device_mgr.c: 96: break;
  6411  005EB2  0012               	return	
  6412  005EB4                     l1989:
  6413  005EB4  0100               	movlb	0	; () banked
  6414  005EB6  51D5               	movf	_SystemState& (0+255),w,b
  6415                           
  6416                           ; Switch size 1, requested type "space"
  6417                           ; Number of cases is 2, Range of values is 0 to 1
  6418                           ; switch strategies available:
  6419                           ; Name         Instructions Cycles
  6420                           ; simple_byte            7     4 (average)
  6421                           ;	Chosen strategy is simple_byte
  6422  005EB8  0A00               	xorlw	0	; case 0
  6423  005EBA  B4D8               	btfsc	status,2,c
  6424  005EBC  D7F3               	goto	l1990
  6425  005EBE  0A01               	xorlw	1	; case 1
  6426  005EC0  A4D8               	btfss	status,2,c
  6427  005EC2  0012               	return	
  6428  005EC4  D7F2               	goto	l1992
  6429  005EC6                     __end_of_UsbDevice_MainTask:
  6430                           	opt stack 0
  6431                           tosu	equ	0xFFF
  6432                           tosh	equ	0xFFE
  6433                           tosl	equ	0xFFD
  6434                           pclath	equ	0xFFA
  6435                           tblptru	equ	0xFF8
  6436                           tblptrh	equ	0xFF7
  6437                           tblptrl	equ	0xFF6
  6438                           tablat	equ	0xFF5
  6439                           prodh	equ	0xFF4
  6440                           prodl	equ	0xFF3
  6441                           intcon	equ	0xFF2
  6442                           intcon2	equ	0xFF1
  6443                           intcon3	equ	0xFF0
  6444                           postinc0	equ	0xFEE
  6445                           plusw0	equ	0xFEB
  6446                           wreg	equ	0xFE8
  6447                           postinc1	equ	0xFE6
  6448                           postdec1	equ	0xFE5
  6449                           fsr1h	equ	0xFE2
  6450                           fsr1l	equ	0xFE1
  6451                           indf2	equ	0xFDF
  6452                           postinc2	equ	0xFDE
  6453                           postdec2	equ	0xFDD
  6454                           plusw2	equ	0xFDB
  6455                           fsr2h	equ	0xFDA
  6456                           fsr2l	equ	0xFD9
  6457                           status	equ	0xFD8
  6458                           
  6459 ;; *************** function _MdmHttp_MainTask *****************
  6460 ;; Defined at:
  6461 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  Options         1    wreg     unsigned char 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  Options         1    0[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:   15
  6482 ;; This function calls:
  6483 ;;		_HttpGetMethod
  6484 ;;		_InitGprsNetwork
  6485 ;; This function is called by:
  6486 ;;		_InitializeTasks
  6487 ;;		_ScheduleTasks
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text21
  6492  00576E                     __ptext21:
  6493                           	opt stack 0
  6494  00576E                     _MdmHttp_MainTask:
  6495                           	opt stack 13
  6496                           
  6497                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6498                           
  6499                           ;incstack = 0
  6500  00576E  D019               	goto	l1288
  6501  005770                     
  6502                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6503  005770  0E03               	movlw	3
  6504  005772  0100               	movlb	0	; () banked
  6505  005774  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6506  005776  A4D8               	btfss	status,2,c
  6507  005778  0012               	return	
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;mdm_gsm_gprs_http.c: 570: {
  6511                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6512  00577A  C2D6  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6513  00577E  C2D7  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6514  005782  C1F1  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6515  005786  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6516  00578A  0101               	movlb	1	; () banked
  6517  00578C  6FF0               	movwf	_GprsNetworkSts& (0+255),b
  6518                           
  6519                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6520  00578E  0EA0               	movlw	low _HttpGetDataLocal
  6521  005790  0100               	movlb	0	; () banked
  6522  005792  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6523  005794  0E03               	movlw	high _HttpGetDataLocal
  6524  005796  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6525  005798  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6526  00579C  0101               	movlb	1	; () banked
  6527  00579E  6FEF               	movwf	_HttpGetMethodSts& (0+255),b
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;mdm_gsm_gprs_http.c: 581: }
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;mdm_gsm_gprs_http.c: 580: break;
  6534                           
  6535                           ;mdm_gsm_gprs_http.c: 579: default:
  6536                           
  6537                           ; BSR set to: 1
  6538                           ;mdm_gsm_gprs_http.c: 575: }
  6539                           ;mdm_gsm_gprs_http.c: 576: break;
  6540  0057A0  0012               	return	
  6541  0057A2                     l1288:
  6542                           
  6543                           ; BSR set to: 1
  6544  0057A2  0100               	movlb	0	; () banked
  6545  0057A4  51D5               	movf	_SystemState& (0+255),w,b
  6546                           
  6547                           ; Switch size 1, requested type "space"
  6548                           ; Number of cases is 2, Range of values is 0 to 1
  6549                           ; switch strategies available:
  6550                           ; Name         Instructions Cycles
  6551                           ; simple_byte            7     4 (average)
  6552                           ;	Chosen strategy is simple_byte
  6553  0057A6  0A00               	xorlw	0	; case 0
  6554  0057A8  B4D8               	btfsc	status,2,c
  6555  0057AA  0012               	return	
  6556  0057AC  0A01               	xorlw	1	; case 1
  6557  0057AE  A4D8               	btfss	status,2,c
  6558  0057B0  0012               	return	
  6559  0057B2  D7DE               	goto	l1291
  6560  0057B4                     __end_of_MdmHttp_MainTask:
  6561                           	opt stack 0
  6562                           tosu	equ	0xFFF
  6563                           tosh	equ	0xFFE
  6564                           tosl	equ	0xFFD
  6565                           pclath	equ	0xFFA
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           intcon	equ	0xFF2
  6573                           intcon2	equ	0xFF1
  6574                           intcon3	equ	0xFF0
  6575                           postinc0	equ	0xFEE
  6576                           plusw0	equ	0xFEB
  6577                           wreg	equ	0xFE8
  6578                           postinc1	equ	0xFE6
  6579                           postdec1	equ	0xFE5
  6580                           fsr1h	equ	0xFE2
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           plusw2	equ	0xFDB
  6586                           fsr2h	equ	0xFDA
  6587                           fsr2l	equ	0xFD9
  6588                           status	equ	0xFD8
  6589                           
  6590 ;; *************** function _Mdm_MainTask *****************
  6591 ;; Defined at:
  6592 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  Options         1    wreg     unsigned char 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  Options         1    0[COMRAM] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;Total ram usage:        0 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:   15
  6613 ;; This function calls:
  6614 ;;		_CheckModem
  6615 ;;		_ConfigureModem
  6616 ;;		_GetSmsSm
  6617 ;;		_ModemEvtParser
  6618 ;;		_SendSmsSm
  6619 ;;		_TurnOnModem
  6620 ;;		_UartSetConfig
  6621 ;;		_Uart_InitUartModule
  6622 ;; This function is called by:
  6623 ;;		_InitializeTasks
  6624 ;;		_ScheduleTasks
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text22
  6629  00559E                     __ptext22:
  6630                           	opt stack 0
  6631  00559E                     _Mdm_MainTask:
  6632                           	opt stack 13
  6633                           
  6634                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6635                           
  6636                           ;incstack = 0
  6637  00559E  D01E               	goto	l1107
  6638  0055A0                     
  6639                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6640  0055A0  ECFC  F028         	call	_UartSetConfig	;wreg free
  6641                           
  6642                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6643  0055A4  0E24               	movlw	low _UartConfig
  6644  0055A6  0100               	movlb	0	; () banked
  6645  0055A8  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6646  0055AA  0E03               	movlw	high _UartConfig
  6647  0055AC  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6648  0055AE  0E01               	movlw	1
  6649  0055B0  EC5E  F005         	call	_Uart_InitUartModule
  6650                           
  6651                           ;mdm_gsm_gprs.c: 764: break;
  6652  0055B4  0012               	return	
  6653  0055B6                     
  6654                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6655  0055B6  EC16  F012         	call	_CheckModem	;wreg free
  6656                           
  6657                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6658  0055BA  042B               	decf	_ComChecCompleted,w,c
  6659  0055BC  A4D8               	btfss	status,2,c
  6660  0055BE  D005               	goto	l1111
  6661  0055C0  0100               	movlb	0	; () banked
  6662  0055C2  51D2               	movf	_MdmStatus& (0+255),w,b
  6663  0055C4  B4D8               	btfsc	status,2,c
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;mdm_gsm_gprs.c: 772: {
  6667                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6668  0055C6  ECDA  F02B         	call	_TurnOnModem	;wreg free
  6669  0055CA                     l1111:
  6670                           
  6671                           ;mdm_gsm_gprs.c: 775: }
  6672                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6673  0055CA  EC89  F01C         	call	_ConfigureModem	;wreg free
  6674                           
  6675                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6676  0055CE  EC99  F00E         	call	_ModemEvtParser	;wreg free
  6677                           
  6678                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6679  0055D2  EC3E  F015         	call	_GetSmsSm	;wreg free
  6680                           
  6681                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6682  0055D6  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6683                           
  6684                           ;mdm_gsm_gprs.c: 789: }
  6685                           
  6686                           ;mdm_gsm_gprs.c: 788: break;
  6687                           
  6688                           ;mdm_gsm_gprs.c: 787: default:
  6689                           
  6690                           ;mdm_gsm_gprs.c: 784: break;
  6691  0055DA  0012               	return	
  6692  0055DC                     l1107:
  6693  0055DC  0100               	movlb	0	; () banked
  6694  0055DE  51D5               	movf	_SystemState& (0+255),w,b
  6695                           
  6696                           ; Switch size 1, requested type "space"
  6697                           ; Number of cases is 2, Range of values is 0 to 1
  6698                           ; switch strategies available:
  6699                           ; Name         Instructions Cycles
  6700                           ; simple_byte            7     4 (average)
  6701                           ;	Chosen strategy is simple_byte
  6702  0055E0  0A00               	xorlw	0	; case 0
  6703  0055E2  B4D8               	btfsc	status,2,c
  6704  0055E4  D7DD               	goto	l1108
  6705  0055E6  0A01               	xorlw	1	; case 1
  6706  0055E8  A4D8               	btfss	status,2,c
  6707  0055EA  0012               	return	
  6708  0055EC  D7E4               	goto	l1110
  6709  0055EE                     __end_of_Mdm_MainTask:
  6710                           	opt stack 0
  6711                           tosu	equ	0xFFF
  6712                           tosh	equ	0xFFE
  6713                           tosl	equ	0xFFD
  6714                           pclath	equ	0xFFA
  6715                           tblptru	equ	0xFF8
  6716                           tblptrh	equ	0xFF7
  6717                           tblptrl	equ	0xFF6
  6718                           tablat	equ	0xFF5
  6719                           prodh	equ	0xFF4
  6720                           prodl	equ	0xFF3
  6721                           intcon	equ	0xFF2
  6722                           intcon2	equ	0xFF1
  6723                           intcon3	equ	0xFF0
  6724                           postinc0	equ	0xFEE
  6725                           plusw0	equ	0xFEB
  6726                           wreg	equ	0xFE8
  6727                           postinc1	equ	0xFE6
  6728                           postdec1	equ	0xFE5
  6729                           fsr1h	equ	0xFE2
  6730                           fsr1l	equ	0xFE1
  6731                           indf2	equ	0xFDF
  6732                           postinc2	equ	0xFDE
  6733                           postdec2	equ	0xFDD
  6734                           plusw2	equ	0xFDB
  6735                           fsr2h	equ	0xFDA
  6736                           fsr2l	equ	0xFD9
  6737                           status	equ	0xFD8
  6738                           
  6739 ;; *************** function _I2cSlv_MainTask *****************
  6740 ;; Defined at:
  6741 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  Options         1    wreg     unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  Options         1    0[COMRAM] unsigned char 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      void 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6759 ;;Total ram usage:        0 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:   14
  6762 ;; This function calls:
  6763 ;;		_I2cSendMsgSm
  6764 ;;		_I2cSetConfig
  6765 ;;		_I2c_InitI2cModule
  6766 ;;		_OsAlrm_SetOsAlarm
  6767 ;; This function is called by:
  6768 ;;		_InitializeTasks
  6769 ;;		_ScheduleTasks
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text23
  6774  005358                     __ptext23:
  6775                           	opt stack 0
  6776  005358                     _I2cSlv_MainTask:
  6777                           	opt stack 14
  6778                           
  6779                           ;i2c_slv.c: 217: switch (SystemState)
  6780                           
  6781                           ;incstack = 0
  6782  005358  D020               	goto	l1401
  6783  00535A                     
  6784                           ;i2c_slv.c: 222: I2cSetConfig();
  6785  00535A  ECEA  F02E         	call	_I2cSetConfig	;wreg free
  6786                           
  6787                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  6788  00535E  0E4F               	movlw	low _I2cConfig
  6789  005360  0100               	movlb	0	; () banked
  6790  005362  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  6791  005364  0E03               	movlw	high _I2cConfig
  6792  005366  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  6793  005368  ECFC  F026         	call	_I2c_InitI2cModule	;wreg free
  6794                           
  6795                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  6796  00536C  0E00               	movlw	0
  6797  00536E  0100               	movlb	0	; () banked
  6798  005370  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  6799  005372  0E00               	movlw	0
  6800  005374  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  6801  005376  0E32               	movlw	50
  6802  005378  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  6803  00537A  0E00               	movlw	0
  6804  00537C  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  6805  00537E  0E00               	movlw	0
  6806  005380  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  6807  005382  0E00               	movlw	0
  6808  005384  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  6809  005386  0E96               	movlw	low _I2cDummyTx
  6810  005388  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  6811  00538A  0E60               	movlw	high _I2cDummyTx
  6812  00538C  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  6813  00538E  ECE9  F01E         	call	_OsAlrm_SetOsAlarm	;wreg free
  6814                           
  6815                           ;i2c_slv.c: 227: break;
  6816  005392  0012               	return	
  6817  005394                     
  6818                           ;i2c_slv.c: 232: I2cSendMsgSm();
  6819  005394  EC4D  F01F         	call	_I2cSendMsgSm	;wreg free
  6820                           
  6821                           ;i2c_slv.c: 238: }
  6822                           
  6823                           ;i2c_slv.c: 237: break;
  6824                           
  6825                           ;i2c_slv.c: 236: default:
  6826                           
  6827                           ;i2c_slv.c: 233: break;
  6828  005398  0012               	return	
  6829  00539A                     l1401:
  6830  00539A  0100               	movlb	0	; () banked
  6831  00539C  51D5               	movf	_SystemState& (0+255),w,b
  6832                           
  6833                           ; Switch size 1, requested type "space"
  6834                           ; Number of cases is 2, Range of values is 0 to 1
  6835                           ; switch strategies available:
  6836                           ; Name         Instructions Cycles
  6837                           ; simple_byte            7     4 (average)
  6838                           ;	Chosen strategy is simple_byte
  6839  00539E  0A00               	xorlw	0	; case 0
  6840  0053A0  B4D8               	btfsc	status,2,c
  6841  0053A2  D7DB               	goto	l1402
  6842  0053A4  0A01               	xorlw	1	; case 1
  6843  0053A6  A4D8               	btfss	status,2,c
  6844  0053A8  0012               	return	
  6845  0053AA  D7F4               	goto	l1404
  6846  0053AC                     __end_of_I2cSlv_MainTask:
  6847                           	opt stack 0
  6848                           tosu	equ	0xFFF
  6849                           tosh	equ	0xFFE
  6850                           tosl	equ	0xFFD
  6851                           pclath	equ	0xFFA
  6852                           tblptru	equ	0xFF8
  6853                           tblptrh	equ	0xFF7
  6854                           tblptrl	equ	0xFF6
  6855                           tablat	equ	0xFF5
  6856                           prodh	equ	0xFF4
  6857                           prodl	equ	0xFF3
  6858                           intcon	equ	0xFF2
  6859                           intcon2	equ	0xFF1
  6860                           intcon3	equ	0xFF0
  6861                           postinc0	equ	0xFEE
  6862                           plusw0	equ	0xFEB
  6863                           wreg	equ	0xFE8
  6864                           postinc1	equ	0xFE6
  6865                           postdec1	equ	0xFE5
  6866                           fsr1h	equ	0xFE2
  6867                           fsr1l	equ	0xFE1
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           plusw2	equ	0xFDB
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _Mdm_DrvMainFn *****************
  6877 ;; Defined at:
  6878 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  Options         1    wreg     unsigned char 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  Options         1    0[COMRAM] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;Total ram usage:        0 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:   13
  6899 ;; This function calls:
  6900 ;;		_MdmCntSm
  6901 ;; This function is called by:
  6902 ;;		_InitializeTasks
  6903 ;;		_ScheduleTasks
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text24
  6908  0062A0                     __ptext24:
  6909                           	opt stack 0
  6910  0062A0                     _Mdm_DrvMainFn:
  6911                           	opt stack 15
  6912                           
  6913                           ;mdm_drv.c: 307: MdmCntSm();
  6914                           
  6915                           ;incstack = 0
  6916  0062A0  ECCB  F021         	call	_MdmCntSm	;wreg free
  6917  0062A4  0012               	return		;funcret
  6918  0062A6                     __end_of_Mdm_DrvMainFn:
  6919                           	opt stack 0
  6920                           tosu	equ	0xFFF
  6921                           tosh	equ	0xFFE
  6922                           tosl	equ	0xFFD
  6923                           pclath	equ	0xFFA
  6924                           tblptru	equ	0xFF8
  6925                           tblptrh	equ	0xFF7
  6926                           tblptrl	equ	0xFF6
  6927                           tablat	equ	0xFF5
  6928                           prodh	equ	0xFF4
  6929                           prodl	equ	0xFF3
  6930                           intcon	equ	0xFF2
  6931                           intcon2	equ	0xFF1
  6932                           intcon3	equ	0xFF0
  6933                           postinc0	equ	0xFEE
  6934                           plusw0	equ	0xFEB
  6935                           wreg	equ	0xFE8
  6936                           postinc1	equ	0xFE6
  6937                           postdec1	equ	0xFE5
  6938                           fsr1h	equ	0xFE2
  6939                           fsr1l	equ	0xFE1
  6940                           indf2	equ	0xFDF
  6941                           postinc2	equ	0xFDE
  6942                           postdec2	equ	0xFDD
  6943                           plusw2	equ	0xFDB
  6944                           fsr2h	equ	0xFDA
  6945                           fsr2l	equ	0xFD9
  6946                           status	equ	0xFD8
  6947                           
  6948 ;; *************** function _Wdg_MainTask *****************
  6949 ;; Defined at:
  6950 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  Options         1    wreg     unsigned char 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  Options         1    0[COMRAM] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      void 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0, cstack
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;Total ram usage:        0 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:   12
  6971 ;; This function calls:
  6972 ;;		_Mcu_ClearWdg
  6973 ;;		_Mcu_SetWdgSts
  6974 ;; This function is called by:
  6975 ;;		_InitializeTasks
  6976 ;;		_ScheduleTasks
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text25
  6981  005F32                     __ptext25:
  6982                           	opt stack 0
  6983  005F32                     _Wdg_MainTask:
  6984                           	opt stack 16
  6985                           
  6986                           ;wdg.c: 75: switch (SystemState)
  6987                           
  6988                           ;incstack = 0
  6989  005F32  D007               	goto	l2472
  6990  005F34                     
  6991                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  6992  005F34  0E01               	movlw	1
  6993  005F36  ECD9  F030         	call	_Mcu_SetWdgSts
  6994                           
  6995                           ;wdg.c: 81: break;
  6996  005F3A  0012               	return	
  6997  005F3C                     
  6998                           ;wdg.c: 86: Mcu_ClearWdg();
  6999  005F3C  EC53  F031         	call	_Mcu_ClearWdg	;wreg free
  7000                           
  7001                           ;wdg.c: 92: }
  7002                           
  7003                           ;wdg.c: 91: break;
  7004                           
  7005                           ;wdg.c: 90: default:
  7006                           
  7007                           ;wdg.c: 87: break;
  7008  005F40  0012               	return	
  7009  005F42                     l2472:
  7010  005F42  0100               	movlb	0	; () banked
  7011  005F44  51D5               	movf	_SystemState& (0+255),w,b
  7012                           
  7013                           ; Switch size 1, requested type "space"
  7014                           ; Number of cases is 2, Range of values is 0 to 1
  7015                           ; switch strategies available:
  7016                           ; Name         Instructions Cycles
  7017                           ; simple_byte            7     4 (average)
  7018                           ;	Chosen strategy is simple_byte
  7019  005F46  0A00               	xorlw	0	; case 0
  7020  005F48  B4D8               	btfsc	status,2,c
  7021  005F4A  D7F4               	goto	l2473
  7022  005F4C  0A01               	xorlw	1	; case 1
  7023  005F4E  A4D8               	btfss	status,2,c
  7024  005F50  0012               	return	
  7025  005F52  D7F4               	goto	l2475
  7026  005F54                     __end_of_Wdg_MainTask:
  7027                           	opt stack 0
  7028                           tosu	equ	0xFFF
  7029                           tosh	equ	0xFFE
  7030                           tosl	equ	0xFFD
  7031                           pclath	equ	0xFFA
  7032                           tblptru	equ	0xFF8
  7033                           tblptrh	equ	0xFF7
  7034                           tblptrl	equ	0xFF6
  7035                           tablat	equ	0xFF5
  7036                           prodh	equ	0xFF4
  7037                           prodl	equ	0xFF3
  7038                           intcon	equ	0xFF2
  7039                           intcon2	equ	0xFF1
  7040                           intcon3	equ	0xFF0
  7041                           postinc0	equ	0xFEE
  7042                           plusw0	equ	0xFEB
  7043                           wreg	equ	0xFE8
  7044                           postinc1	equ	0xFE6
  7045                           postdec1	equ	0xFE5
  7046                           fsr1h	equ	0xFE2
  7047                           fsr1l	equ	0xFE1
  7048                           indf2	equ	0xFDF
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           plusw2	equ	0xFDB
  7052                           fsr2h	equ	0xFDA
  7053                           fsr2l	equ	0xFD9
  7054                           status	equ	0xFD8
  7055                           
  7056 ;; *************** function _Mcu_SetWdgSts *****************
  7057 ;; Defined at:
  7058 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  WdgSts          1    wreg     unsigned char 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1    wreg      void 
  7065 ;; Registers used:
  7066 ;;		wreg
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7075 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7076 ;;Total ram usage:        1 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:   11
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_Wdg_MainTask
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text26
  7087  0061B2                     __ptext26:
  7088                           	opt stack 0
  7089  0061B2                     _Mcu_SetWdgSts:
  7090                           	opt stack 16
  7091                           
  7092                           ;incstack = 0
  7093                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7094  0061B2  0100               	movlb	0	; () banked
  7095  0061B4  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7096                           
  7097                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7098  0061B6  0100               	movlb	0	; () banked
  7099  0061B8  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7100  0061BA  D002               	bra	u13225
  7101  0061BC  90C0               	bcf	4032,0,c	;volatile
  7102  0061BE  D001               	bra	u13226
  7103  0061C0                     u13225:
  7104  0061C0  80C0               	bsf	4032,0,c	;volatile
  7105  0061C2                     u13226:
  7106  0061C2  0012               	return		;funcret
  7107  0061C4                     __end_of_Mcu_SetWdgSts:
  7108                           	opt stack 0
  7109                           tosu	equ	0xFFF
  7110                           tosh	equ	0xFFE
  7111                           tosl	equ	0xFFD
  7112                           pclath	equ	0xFFA
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           prodh	equ	0xFF4
  7118                           prodl	equ	0xFF3
  7119                           intcon	equ	0xFF2
  7120                           intcon2	equ	0xFF1
  7121                           intcon3	equ	0xFF0
  7122                           postinc0	equ	0xFEE
  7123                           plusw0	equ	0xFEB
  7124                           wreg	equ	0xFE8
  7125                           postinc1	equ	0xFE6
  7126                           postdec1	equ	0xFE5
  7127                           fsr1h	equ	0xFE2
  7128                           fsr1l	equ	0xFE1
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           plusw2	equ	0xFDB
  7133                           fsr2h	equ	0xFDA
  7134                           fsr2l	equ	0xFD9
  7135                           status	equ	0xFD8
  7136                           
  7137 ;; *************** function _Mcu_ClearWdg *****************
  7138 ;; Defined at:
  7139 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;		None
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;		None
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		None
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7157 ;;Total ram usage:        0 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:   11
  7160 ;; This function calls:
  7161 ;;		Nothing
  7162 ;; This function is called by:
  7163 ;;		_Wdg_MainTask
  7164 ;; This function uses a non-reentrant model
  7165 ;;
  7166                           
  7167                           	psect	text27
  7168  0062A6                     __ptext27:
  7169                           	opt stack 0
  7170  0062A6                     _Mcu_ClearWdg:
  7171                           	opt stack 16
  7172                           
  7173                           ;incstack = 0
  7174  0062A6  0004               	clrwdt		;# 
  7175  0062A8  0012               	return		;funcret
  7176  0062AA                     __end_of_Mcu_ClearWdg:
  7177                           	opt stack 0
  7178                           tosu	equ	0xFFF
  7179                           tosh	equ	0xFFE
  7180                           tosl	equ	0xFFD
  7181                           pclath	equ	0xFFA
  7182                           tblptru	equ	0xFF8
  7183                           tblptrh	equ	0xFF7
  7184                           tblptrl	equ	0xFF6
  7185                           tablat	equ	0xFF5
  7186                           prodh	equ	0xFF4
  7187                           prodl	equ	0xFF3
  7188                           intcon	equ	0xFF2
  7189                           intcon2	equ	0xFF1
  7190                           intcon3	equ	0xFF0
  7191                           postinc0	equ	0xFEE
  7192                           plusw0	equ	0xFEB
  7193                           wreg	equ	0xFE8
  7194                           postinc1	equ	0xFE6
  7195                           postdec1	equ	0xFE5
  7196                           fsr1h	equ	0xFE2
  7197                           fsr1l	equ	0xFE1
  7198                           indf2	equ	0xFDF
  7199                           postinc2	equ	0xFDE
  7200                           postdec2	equ	0xFDD
  7201                           plusw2	equ	0xFDB
  7202                           fsr2h	equ	0xFDA
  7203                           fsr2l	equ	0xFD9
  7204                           status	equ	0xFD8
  7205                           
  7206 ;; *************** function _USBDeviceTasks *****************
  7207 ;; Defined at:
  7208 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  i               1   56[BANK0 ] unsigned char 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;Total ram usage:        1 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:   19
  7229 ;; This function calls:
  7230 ;;		_USBCtrlEPAllowStatusStage
  7231 ;;		_USBCtrlEPService
  7232 ;;		_USBDeviceInit
  7233 ;;		_USBIncrement1msInternalTimers
  7234 ;;		_USBStallHandler
  7235 ;;		_USBSuspend
  7236 ;;		_USBWakeFromSuspend
  7237 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7238 ;; This function is called by:
  7239 ;;		_UsbDevice_MainTask
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text28
  7244  001BAA                     __ptext28:
  7245                           	opt stack 0
  7246  001BAA                     _USBDeviceTasks:
  7247                           	opt stack 8
  7248                           
  7249                           ;usb_device.c: 562: }
  7250                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7251                           
  7252                           ; BSR set to: 0
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;usb_device.c: 561: return;
  7256                           
  7257                           ; BSR set to: 0
  7258                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7259                           
  7260                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7261                           
  7262                           ;usb_device.c: 529: UIE = 0;
  7263                           
  7264                           ;usb_device.c: 524: {
  7265                           ;usb_device.c: 526: UCON = 0;
  7266                           
  7267                           ;usb_device.c: 497: uint8_t i;
  7268                           ;usb_device.c: 523: if (1 != 1)
  7269                           
  7270                           ;incstack = 0
  7271  001BAA  0100               	movlb	0	; () banked
  7272  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7273  001BAE  A4D8               	btfss	status,2,c
  7274  001BB0  D012               	goto	l1612
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;usb_device.c: 585: {
  7278                           ;usb_device.c: 587: UCON = 0;
  7279  001BB2  0E00               	movlw	0
  7280  001BB4  6E65               	movwf	3941,c	;volatile
  7281                           
  7282                           ;usb_device.c: 590: UIE = 0;
  7283  001BB6  0E00               	movlw	0
  7284  001BB8  010F               	movlb	15	; () banked
  7285  001BBA  6F36               	movwf	54,b	;volatile
  7286                           
  7287                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7288  001BBC  0E16               	movlw	22
  7289  001BBE  6F39               	movwf	57,b	;volatile
  7290  001BC0  0E9F               	movlw	159
  7291  001BC2  6F37               	movwf	55,b	;volatile
  7292  001BC4  0E7B               	movlw	123
  7293  001BC6  6F36               	movwf	54,b	;volatile
  7294                           
  7295                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7296  001BC8  D001               	goto	l1613
  7297  001BCA                     l1614:
  7298  001BCA  8665               	bsf	3941,3,c	;volatile
  7299  001BCC                     l1613:
  7300  001BCC  A665               	btfss	3941,3,c	;volatile
  7301  001BCE  D7FD               	goto	l1614
  7302                           
  7303                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7304  001BD0  0E01               	movlw	1
  7305  001BD2  0100               	movlb	0	; () banked
  7306  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7307  001BD6                     l1612:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;usb_device.c: 605: }
  7311                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7312                           
  7313                           ; BSR set to: 0
  7314  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7315  001BD8  B4D8               	btfsc	status,2,c
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;usb_device.c: 609: {
  7319                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7320  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7321  001BDC  D00A               	goto	l1617
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;usb_device.c: 620: {
  7325                           ;usb_device.c: 626: {UIR = 0;};
  7326  001BDE  0E00               	movlw	0
  7327  001BE0  6E62               	movwf	3938,c	;volatile
  7328                           
  7329                           ;usb_device.c: 630: UIE=0;
  7330  001BE2  0E00               	movlw	0
  7331  001BE4  010F               	movlb	15	; () banked
  7332  001BE6  6F36               	movwf	54,b	;volatile
  7333                           
  7334                           ; BSR set to: 15
  7335                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7336  001BE8  8136               	bsf	54,0,b	;volatile
  7337                           
  7338                           ; BSR set to: 15
  7339                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7340  001BEA  8936               	bsf	54,4,b	;volatile
  7341                           
  7342                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7343  001BEC  0E02               	movlw	2
  7344  001BEE  0100               	movlb	0	; () banked
  7345  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7346  001BF2                     l1617:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;usb_device.c: 635: }
  7350                           ;usb_device.c: 636: }
  7351                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7352                           
  7353                           ; BSR set to: 0
  7354                           
  7355                           ; BSR set to: 0
  7356  001BF2  A462               	btfss	3938,2,c	;volatile
  7357  001BF4  D006               	goto	l1618
  7358                           
  7359                           ; BSR set to: 0
  7360  001BF6  010F               	movlb	15	; () banked
  7361  001BF8  A536               	btfss	54,2,b	;volatile
  7362  001BFA  D003               	goto	l1618
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;usb_device.c: 653: {
  7366                           ;usb_device.c: 654: (UIR &= 0xFB);
  7367  001BFC  9462               	bcf	3938,2,c	;volatile
  7368                           
  7369                           ; BSR set to: 15
  7370                           ;usb_device.c: 658: USBWakeFromSuspend();
  7371  001BFE  EC83  F02D         	call	_USBWakeFromSuspend	;wreg free
  7372  001C02                     l1618:
  7373                           
  7374                           ;usb_device.c: 660: }
  7375                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7376  001C02  A265               	btfss	3941,1,c	;volatile
  7377  001C04  D002               	goto	l1619
  7378                           
  7379                           ;usb_device.c: 666: {
  7380                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7381  001C06  98A1               	bcf	4001,4,c	;volatile
  7382                           
  7383                           ;usb_device.c: 668: return;
  7384  001C08  0012               	return	
  7385  001C0A                     l1619:
  7386                           
  7387                           ;usb_device.c: 669: }
  7388                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7389  001C0A  A062               	btfss	3938,0,c	;volatile
  7390  001C0C  D009               	goto	l1620
  7391  001C0E  010F               	movlb	15	; () banked
  7392  001C10  A136               	btfss	54,0,b	;volatile
  7393  001C12  D006               	goto	l1620
  7394                           
  7395                           ; BSR set to: 15
  7396                           ;usb_device.c: 682: {
  7397                           ;usb_device.c: 683: USBDeviceInit();
  7398  001C14  ECC0  F010         	call	_USBDeviceInit	;wreg free
  7399                           
  7400                           ;usb_device.c: 687: ;
  7401                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7402  001C18  0E04               	movlw	4
  7403  001C1A  0100               	movlb	0	; () banked
  7404  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;usb_device.c: 699: (UIR &= 0xFE);
  7408  001C1E  9062               	bcf	3938,0,c	;volatile
  7409  001C20                     l1620:
  7410                           
  7411                           ;usb_device.c: 700: }
  7412                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7413                           
  7414                           ; BSR set to: 0
  7415  001C20  A862               	btfss	3938,4,c	;volatile
  7416  001C22  D004               	goto	l1621
  7417  001C24  010F               	movlb	15	; () banked
  7418  001C26  B936               	btfsc	54,4,b	;volatile
  7419                           
  7420                           ; BSR set to: 15
  7421                           ;usb_device.c: 706: {
  7422                           ;usb_device.c: 712: USBSuspend();
  7423  001C28  EC2A  F02E         	call	_USBSuspend	;wreg free
  7424  001C2C                     l1621:
  7425                           
  7426                           ;usb_device.c: 714: }
  7427                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7428  001C2C  AC62               	btfss	3938,6,c	;volatile
  7429  001C2E  D01D               	goto	l1625
  7430                           
  7431                           ;usb_device.c: 727: {
  7432                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7433  001C30  010F               	movlb	15	; () banked
  7434  001C32  AD36               	btfss	54,6,b	;volatile
  7435  001C34  D00F               	goto	l1623
  7436                           
  7437                           ; BSR set to: 15
  7438                           ;usb_device.c: 730: {
  7439                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7440  001C36  0E00               	movlw	0
  7441  001C38  0100               	movlb	0	; () banked
  7442  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7443  001C3C  0E73               	movlw	115
  7444  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7445  001C40  0E00               	movlw	0
  7446  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7447  001C44  0E00               	movlw	0
  7448  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7449  001C48  0E00               	movlw	0
  7450  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7451  001C4C  0E01               	movlw	1
  7452  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7453  001C50  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7454  001C54                     l1623:
  7455                           
  7456                           ;usb_device.c: 732: }
  7457                           ;usb_device.c: 733: (UIR &= 0xBF);
  7458  001C54  9C62               	bcf	3938,6,c	;volatile
  7459                           
  7460                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7461  001C56  ECAA  F02F         	call	_USBIncrement1msInternalTimers	;wreg free
  7462                           
  7463                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7464  001C5A  0100               	movlb	0	; () banked
  7465  001C5C  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7466  001C5E  A4D8               	btfss	status,2,c
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;usb_device.c: 754: {
  7470                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7471  001C60  07CA               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;usb_device.c: 756: }
  7475                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7476                           
  7477                           ; BSR set to: 0
  7478  001C62  51CA               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  7479  001C64  B4D8               	btfsc	status,2,c
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;usb_device.c: 763: {
  7483                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7484  001C66  EC56  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7485  001C6A                     l1625:
  7486                           
  7487                           ;usb_device.c: 765: }
  7488                           ;usb_device.c: 767: }
  7489                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7490  001C6A  AA62               	btfss	3938,5,c	;volatile
  7491  001C6C  D004               	goto	l1626
  7492  001C6E  010F               	movlb	15	; () banked
  7493  001C70  BB36               	btfsc	54,5,b	;volatile
  7494                           
  7495                           ; BSR set to: 15
  7496                           ;usb_device.c: 770: {
  7497                           ;usb_device.c: 771: USBStallHandler();
  7498  001C72  ECFD  F02B         	call	_USBStallHandler	;wreg free
  7499  001C76                     l1626:
  7500                           
  7501                           ;usb_device.c: 772: }
  7502                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7503  001C76  A262               	btfss	3938,1,c	;volatile
  7504  001C78  D013               	goto	l1627
  7505  001C7A  010F               	movlb	15	; () banked
  7506  001C7C  A336               	btfss	54,1,b	;volatile
  7507  001C7E  D010               	goto	l1627
  7508                           
  7509                           ; BSR set to: 15
  7510                           ;usb_device.c: 775: {
  7511                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7512  001C80  0E7F               	movlw	127
  7513  001C82  0100               	movlb	0	; () banked
  7514  001C84  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7515  001C86  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7516  001C88  0E00               	movlw	0
  7517  001C8A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7518  001C8C  0E00               	movlw	0
  7519  001C8E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7520  001C90  0E00               	movlw	0
  7521  001C92  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7522  001C94  0E01               	movlw	1
  7523  001C96  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7524  001C98  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7525                           
  7526                           ;usb_device.c: 777: {UEIR = 0;};
  7527  001C9C  0E00               	movlw	0
  7528  001C9E  6E63               	movwf	3939,c	;volatile
  7529  001CA0                     l1627:
  7530                           
  7531                           ;usb_device.c: 785: }
  7532                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7533  001CA0  0E04               	movlw	4
  7534  001CA2  0100               	movlb	0	; () banked
  7535  001CA4  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7536  001CA6  D002               	goto	l1628
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;usb_device.c: 793: {
  7540                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7541  001CA8  98A1               	bcf	4001,4,c	;volatile
  7542                           
  7543                           ;usb_device.c: 795: return;
  7544  001CAA  0012               	return	
  7545  001CAC                     l1628:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;usb_device.c: 796: }
  7549                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7550  001CAC  010F               	movlb	15	; () banked
  7551  001CAE  A736               	btfss	54,3,b	;volatile
  7552  001CB0  D03E               	goto	u14210
  7553                           
  7554                           ; BSR set to: 15
  7555                           ;usb_device.c: 802: {
  7556                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7557  001CB2  0E00               	movlw	0
  7558  001CB4  0100               	movlb	0	; () banked
  7559  001CB6  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7560  001CB8                     l14608:
  7561                           
  7562                           ; BSR set to: 0
  7563  001CB8  0E03               	movlw	3
  7564  001CBA  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7565  001CBC  D001               	goto	l1630
  7566  001CBE  D037               	goto	u14210
  7567  001CC0                     l1630:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;usb_device.c: 804: {
  7571                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7572  001CC0  A662               	btfss	3938,3,c	;volatile
  7573  001CC2  D035               	goto	u14210
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;usb_device.c: 806: {
  7577                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7578  001CC4  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7582  001CC8  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7583  001CCA  32E8               	rrcf	wreg,f,c
  7584  001CCC  32E8               	rrcf	wreg,f,c
  7585  001CCE  0B0F               	andlw	15
  7586  001CD0  6FCB               	movwf	_endpoint_number& (0+255),b
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;usb_device.c: 811: (UIR &= 0xF7);
  7590  001CD2  9662               	bcf	3938,3,c	;volatile
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7594  001CD4  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7595  001CD6  D007               	goto	l1633
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;usb_device.c: 817: {
  7599                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7600  001CD8  51CB               	movf	_endpoint_number& (0+255),w,b
  7601  001CDA  0D01               	mullw	1
  7602  001CDC  0ECE               	movlw	low _ep_data_out
  7603  001CDE  24F3               	addwf	prodl,w,c
  7604  001CE0  6ED9               	movwf	fsr2l,c
  7605  001CE2  0E02               	movlw	high _ep_data_out
  7606  001CE4  D007               	goto	L3
  7607  001CE6                     l1633:
  7608                           
  7609                           ;usb_device.c: 820: else
  7610                           ;usb_device.c: 821: {
  7611                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7612                           
  7613                           ; BSR set to: 2
  7614  001CE6  0100               	movlb	0	; () banked
  7615  001CE8  51CB               	movf	_endpoint_number& (0+255),w,b
  7616  001CEA  0D01               	mullw	1
  7617  001CEC  0ED1               	movlw	low _ep_data_in
  7618  001CEE  24F3               	addwf	prodl,w,c
  7619  001CF0  6ED9               	movwf	fsr2l,c
  7620  001CF2  0E02               	movlw	high _ep_data_in
  7621  001CF4                     L3:
  7622  001CF4  20F4               	addwfc	prodh,w,c
  7623  001CF6  6EDA               	movwf	fsr2h,c
  7624  001CF8  0102               	movlb	2	; () banked
  7625  001CFA  70DF               	btg	indf2,0,c
  7626                           
  7627                           ; BSR set to: 2
  7628                           ;usb_device.c: 823: }
  7629                           ;usb_device.c: 828: if(endpoint_number == 0)
  7630                           
  7631                           ; BSR set to: 2
  7632  001CFC  0100               	movlb	0	; () banked
  7633  001CFE  51CB               	movf	_endpoint_number& (0+255),w,b
  7634  001D00  A4D8               	btfss	status,2,c
  7635  001D02  D003               	goto	l1635
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;usb_device.c: 829: {
  7639                           ;usb_device.c: 830: USBCtrlEPService();
  7640  001D04  EC94  F024         	call	_USBCtrlEPService	;wreg free
  7641                           
  7642                           ;usb_device.c: 831: }
  7643  001D08  D00F               	goto	l1637
  7644  001D0A                     l1635:
  7645                           
  7646                           ;usb_device.c: 832: else
  7647                           ;usb_device.c: 833: {
  7648                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7649  001D0A  0E00               	movlw	0
  7650  001D0C  0100               	movlb	0	; () banked
  7651  001D0E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7652  001D10  0E72               	movlw	114
  7653  001D12  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7654  001D14  0ED6               	movlw	low _USTATcopy
  7655  001D16  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7656  001D18  0E00               	movlw	high _USTATcopy
  7657  001D1A  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7658  001D1C  0E00               	movlw	0
  7659  001D1E  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7660  001D20  0E00               	movlw	0
  7661  001D22  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7662  001D24  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7663  001D28                     l1637:
  7664  001D28  0100               	movlb	0	; () banked
  7665  001D2A  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7666  001D2C  D7C5               	goto	l14608
  7667  001D2E                     u14210:
  7668                           
  7669                           ;usb_device.c: 840: }
  7670                           ;usb_device.c: 841: }
  7671                           ;usb_device.c: 842: }
  7672                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7673                           
  7674                           ; BSR set to: 0
  7675  001D2E  98A1               	bcf	4001,4,c	;volatile
  7676  001D30  0012               	return		;funcret
  7677  001D32                     __end_of_USBDeviceTasks:
  7678                           	opt stack 0
  7679                           tosu	equ	0xFFF
  7680                           tosh	equ	0xFFE
  7681                           tosl	equ	0xFFD
  7682                           pclath	equ	0xFFA
  7683                           tblptru	equ	0xFF8
  7684                           tblptrh	equ	0xFF7
  7685                           tblptrl	equ	0xFF6
  7686                           tablat	equ	0xFF5
  7687                           prodh	equ	0xFF4
  7688                           prodl	equ	0xFF3
  7689                           intcon	equ	0xFF2
  7690                           intcon2	equ	0xFF1
  7691                           intcon3	equ	0xFF0
  7692                           postinc0	equ	0xFEE
  7693                           plusw0	equ	0xFEB
  7694                           wreg	equ	0xFE8
  7695                           postinc1	equ	0xFE6
  7696                           postdec1	equ	0xFE5
  7697                           fsr1h	equ	0xFE2
  7698                           fsr1l	equ	0xFE1
  7699                           indf2	equ	0xFDF
  7700                           postinc2	equ	0xFDE
  7701                           postdec2	equ	0xFDD
  7702                           plusw2	equ	0xFDB
  7703                           fsr2h	equ	0xFDA
  7704                           fsr2l	equ	0xFD9
  7705                           status	equ	0xFD8
  7706                           
  7707 ;; *************** function _USBWakeFromSuspend *****************
  7708 ;; Defined at:
  7709 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;Total ram usage:        0 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:   15
  7730 ;; This function calls:
  7731 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7732 ;; This function is called by:
  7733 ;;		_USBDeviceTasks
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text29
  7738  005B06                     __ptext29:
  7739                           	opt stack 0
  7740  005B06                     _USBWakeFromSuspend:
  7741                           	opt stack 11
  7742                           
  7743                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7744                           
  7745                           ;incstack = 0
  7746  005B06  0E00               	movlw	0
  7747  005B08  0101               	movlb	1	; () banked
  7748  005B0A  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7749                           
  7750                           ; BSR set to: 1
  7751                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7752  005B0C  0E00               	movlw	0
  7753  005B0E  0100               	movlb	0	; () banked
  7754  005B10  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7755  005B12  0E74               	movlw	116
  7756  005B14  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7757  005B16  0E00               	movlw	0
  7758  005B18  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7759  005B1A  0E00               	movlw	0
  7760  005B1C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7761  005B1E  0E00               	movlw	0
  7762  005B20  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7763  005B22  0E00               	movlw	0
  7764  005B24  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7765  005B26  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7766                           
  7767                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7768  005B2A  9265               	bcf	3941,1,c	;volatile
  7769                           
  7770                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7771  005B2C  010F               	movlb	15	; () banked
  7772  005B2E  9536               	bcf	54,2,b	;volatile
  7773                           
  7774                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7775  005B30  D001               	goto	l1765
  7776  005B32                     
  7777                           ;usb_device.c: 2361: {
  7778                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7779                           
  7780                           ; BSR set to: 15
  7781  005B32  9462               	bcf	3938,2,c	;volatile
  7782  005B34                     l1765:
  7783  005B34  B462               	btfsc	3938,2,c	;volatile
  7784  005B36  D7FD               	goto	l1766
  7785                           
  7786                           ;usb_device.c: 2363: }
  7787                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7788  005B38  0E00               	movlw	0
  7789  005B3A  0101               	movlb	1	; () banked
  7790  005B3C  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7791                           
  7792                           ; BSR set to: 1
  7793  005B3E  0012               	return		;funcret
  7794  005B40                     __end_of_USBWakeFromSuspend:
  7795                           	opt stack 0
  7796                           tosu	equ	0xFFF
  7797                           tosh	equ	0xFFE
  7798                           tosl	equ	0xFFD
  7799                           pclath	equ	0xFFA
  7800                           tblptru	equ	0xFF8
  7801                           tblptrh	equ	0xFF7
  7802                           tblptrl	equ	0xFF6
  7803                           tablat	equ	0xFF5
  7804                           prodh	equ	0xFF4
  7805                           prodl	equ	0xFF3
  7806                           intcon	equ	0xFF2
  7807                           intcon2	equ	0xFF1
  7808                           intcon3	equ	0xFF0
  7809                           postinc0	equ	0xFEE
  7810                           plusw0	equ	0xFEB
  7811                           wreg	equ	0xFE8
  7812                           postinc1	equ	0xFE6
  7813                           postdec1	equ	0xFE5
  7814                           fsr1h	equ	0xFE2
  7815                           fsr1l	equ	0xFE1
  7816                           indf2	equ	0xFDF
  7817                           postinc2	equ	0xFDE
  7818                           postdec2	equ	0xFDD
  7819                           plusw2	equ	0xFDB
  7820                           fsr2h	equ	0xFDA
  7821                           fsr2l	equ	0xFD9
  7822                           status	equ	0xFD8
  7823                           
  7824 ;; *************** function _USBSuspend *****************
  7825 ;; Defined at:
  7826 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7844 ;;Total ram usage:        0 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:   15
  7847 ;; This function calls:
  7848 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7849 ;; This function is called by:
  7850 ;;		_USBDeviceTasks
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text30
  7855  005C54                     __ptext30:
  7856                           	opt stack 0
  7857  005C54                     _USBSuspend:
  7858                           	opt stack 11
  7859                           
  7860                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  7861                           
  7862                           ; BSR set to: 1
  7863                           ;incstack = 0
  7864  005C54  010F               	movlb	15	; () banked
  7865  005C56  8536               	bsf	54,2,b	;volatile
  7866                           
  7867                           ; BSR set to: 15
  7868                           ;usb_device.c: 2289: (UIR &= 0xEF);
  7869  005C58  9862               	bcf	3938,4,c	;volatile
  7870                           
  7871                           ; BSR set to: 15
  7872                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  7873  005C5A  8265               	bsf	3941,1,c	;volatile
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  7877  005C5C  0E01               	movlw	1
  7878  005C5E  0101               	movlb	1	; () banked
  7879  005C60  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  7880                           
  7881                           ; BSR set to: 1
  7882                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  7883  005C62  0E00               	movlw	0
  7884  005C64  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7885                           
  7886                           ; BSR set to: 1
  7887                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  7888  005C66  0E00               	movlw	0
  7889  005C68  0100               	movlb	0	; () banked
  7890  005C6A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7891  005C6C  0E75               	movlw	117
  7892  005C6E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7893  005C70  0E00               	movlw	0
  7894  005C72  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7895  005C74  0E00               	movlw	0
  7896  005C76  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7897  005C78  0E00               	movlw	0
  7898  005C7A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7899  005C7C  0E00               	movlw	0
  7900  005C7E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7901  005C80  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7902  005C84  0012               	return		;funcret
  7903  005C86                     __end_of_USBSuspend:
  7904                           	opt stack 0
  7905                           tosu	equ	0xFFF
  7906                           tosh	equ	0xFFE
  7907                           tosl	equ	0xFFD
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           intcon2	equ	0xFF1
  7917                           intcon3	equ	0xFF0
  7918                           postinc0	equ	0xFEE
  7919                           plusw0	equ	0xFEB
  7920                           wreg	equ	0xFE8
  7921                           postinc1	equ	0xFE6
  7922                           postdec1	equ	0xFE5
  7923                           fsr1h	equ	0xFE2
  7924                           fsr1l	equ	0xFE1
  7925                           indf2	equ	0xFDF
  7926                           postinc2	equ	0xFDE
  7927                           postdec2	equ	0xFDD
  7928                           plusw2	equ	0xFDB
  7929                           fsr2h	equ	0xFDA
  7930                           fsr2l	equ	0xFD9
  7931                           status	equ	0xFD8
  7932                           
  7933 ;; *************** function _USBStallHandler *****************
  7934 ;; Defined at:
  7935 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;		None
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;Total ram usage:        1 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:   11
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_USBDeviceTasks
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text31
  7964  0057FA                     __ptext31:
  7965                           	opt stack 0
  7966  0057FA                     _USBStallHandler:
  7967                           	opt stack 15
  7968                           
  7969                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  7970                           
  7971                           ;incstack = 0
  7972  0057FA  010F               	movlb	15	; () banked
  7973  0057FC  A126               	btfss	38,0,b	;volatile
  7974  0057FE  D01D               	goto	l1757
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;usb_device.c: 2233: {
  7978                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  7979  005800  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7980  005804  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7981  005808  0E80               	movlw	128
  7982  00580A  18DE               	xorwf	postinc2,w,c
  7983  00580C  A4D8               	btfss	status,2,c
  7984  00580E  D014               	goto	l1758
  7985                           
  7986                           ; BSR set to: 15
  7987  005810  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  7988  005814  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7989  005818  0E84               	movlw	132
  7990  00581A  18DE               	xorwf	postinc2,w,c
  7991  00581C  A4D8               	btfss	status,2,c
  7992  00581E  D00C               	goto	l1758
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;usb_device.c: 2236: {
  7996                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7997  005820  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7998  005824  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7999  005828  0E0C               	movlw	12
  8000  00582A  6EDF               	movwf	indf2,c
  8001                           
  8002                           ; BSR set to: 15
  8003                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8004  00582C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8005  005830  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8006  005834  0E00               	movlw	0
  8007  005836  8EDB               	bsf	plusw2,7,c
  8008  005838                     l1758:
  8009                           
  8010                           ; BSR set to: 15
  8011                           ;usb_device.c: 2240: }
  8012                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8013                           
  8014                           ; BSR set to: 15
  8015  005838  9126               	bcf	38,0,b	;volatile
  8016  00583A                     l1757:
  8017                           
  8018                           ; BSR set to: 15
  8019                           ;usb_device.c: 2242: }
  8020                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8021  00583A  9A62               	bcf	3938,5,c	;volatile
  8022                           
  8023                           ; BSR set to: 15
  8024  00583C  0012               	return		;funcret
  8025  00583E                     __end_of_USBStallHandler:
  8026                           	opt stack 0
  8027                           tosu	equ	0xFFF
  8028                           tosh	equ	0xFFE
  8029                           tosl	equ	0xFFD
  8030                           pclath	equ	0xFFA
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           intcon	equ	0xFF2
  8038                           intcon2	equ	0xFF1
  8039                           intcon3	equ	0xFF0
  8040                           postinc0	equ	0xFEE
  8041                           plusw0	equ	0xFEB
  8042                           wreg	equ	0xFE8
  8043                           postinc1	equ	0xFE6
  8044                           postdec1	equ	0xFE5
  8045                           fsr1h	equ	0xFE2
  8046                           fsr1l	equ	0xFE1
  8047                           indf2	equ	0xFDF
  8048                           postinc2	equ	0xFDE
  8049                           postdec2	equ	0xFDD
  8050                           plusw2	equ	0xFDB
  8051                           fsr2h	equ	0xFDA
  8052                           fsr2l	equ	0xFD9
  8053                           status	equ	0xFD8
  8054                           
  8055 ;; *************** function _USBIncrement1msInternalTimers *****************
  8056 ;; Defined at:
  8057 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2, status,0
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:   11
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_USBDeviceTasks
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text32
  8086  005F54                     __ptext32:
  8087                           	opt stack 0
  8088  005F54                     _USBIncrement1msInternalTimers:
  8089                           	opt stack 15
  8090                           
  8091                           ;usb_device.c: 3050: USB1msTickCount++;
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;incstack = 0
  8095  005F54  0E01               	movlw	1
  8096  005F56  0103               	movlb	3	; () banked
  8097  005F58  2718               	addwf	_USB1msTickCount& (0+255),f,b
  8098  005F5A  0E00               	movlw	0
  8099  005F5C  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8100  005F5E  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8101  005F60  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8102                           
  8103                           ; BSR set to: 3
  8104                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8105  005F62  0101               	movlb	1	; () banked
  8106  005F64  51E5               	movf	_USBBusIsSuspended& (0+255),w,b
  8107  005F66  A4D8               	btfss	status,2,c
  8108  005F68  0012               	return	
  8109                           
  8110                           ; BSR set to: 1
  8111                           ;usb_device.c: 3052: {
  8112                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8113  005F6A  2BE3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8114                           
  8115                           ; BSR set to: 1
  8116                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8117  005F6C  51E3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8118  005F6E  A4D8               	btfss	status,2,c
  8119  005F70  0012               	return	
  8120                           
  8121                           ; BSR set to: 1
  8122                           ;usb_device.c: 3056: {
  8123                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8124  005F72  69E3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8125                           
  8126                           ; BSR set to: 1
  8127  005F74  0012               	return	
  8128  005F76                     __end_of_USBIncrement1msInternalTimers:
  8129                           	opt stack 0
  8130                           tosu	equ	0xFFF
  8131                           tosh	equ	0xFFE
  8132                           tosl	equ	0xFFD
  8133                           pclath	equ	0xFFA
  8134                           tblptru	equ	0xFF8
  8135                           tblptrh	equ	0xFF7
  8136                           tblptrl	equ	0xFF6
  8137                           tablat	equ	0xFF5
  8138                           prodh	equ	0xFF4
  8139                           prodl	equ	0xFF3
  8140                           intcon	equ	0xFF2
  8141                           intcon2	equ	0xFF1
  8142                           intcon3	equ	0xFF0
  8143                           postinc0	equ	0xFEE
  8144                           plusw0	equ	0xFEB
  8145                           wreg	equ	0xFE8
  8146                           postinc1	equ	0xFE6
  8147                           postdec1	equ	0xFE5
  8148                           fsr1h	equ	0xFE2
  8149                           fsr1l	equ	0xFE1
  8150                           indf2	equ	0xFDF
  8151                           postinc2	equ	0xFDE
  8152                           postdec2	equ	0xFDD
  8153                           plusw2	equ	0xFDB
  8154                           fsr2h	equ	0xFDA
  8155                           fsr2l	equ	0xFD9
  8156                           status	equ	0xFD8
  8157                           
  8158 ;; *************** function _USBDeviceInit *****************
  8159 ;; Defined at:
  8160 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;  i               1   37[BANK0 ] unsigned char 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8177 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8178 ;;Total ram usage:        1 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:   12
  8181 ;; This function calls:
  8182 ;;		_memset
  8183 ;; This function is called by:
  8184 ;;		_USBDeviceTasks
  8185 ;;		_UsbDevice_MainTask
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           	psect	text33
  8190  002180                     __ptext33:
  8191                           	opt stack 0
  8192  002180                     _USBDeviceInit:
  8193                           	opt stack 14
  8194                           
  8195                           ;usb_device.c: 297: uint8_t i;
  8196                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8197                           
  8198                           ; BSR set to: 1
  8199                           ;incstack = 0
  8200  002180  98A0               	bcf	4000,4,c	;volatile
  8201                           
  8202                           ;usb_device.c: 303: ;
  8203                           ;usb_device.c: 306: {UEIR = 0;};
  8204  002182  0E00               	movlw	0
  8205  002184  6E63               	movwf	3939,c	;volatile
  8206                           
  8207                           ;usb_device.c: 309: {UIR = 0;};
  8208  002186  0E00               	movlw	0
  8209  002188  6E62               	movwf	3938,c	;volatile
  8210                           
  8211                           ;usb_device.c: 312: UEP0 = 0;
  8212  00218A  0E00               	movlw	0
  8213  00218C  010F               	movlb	15	; () banked
  8214  00218E  6F26               	movwf	38,b	;volatile
  8215                           
  8216                           ; BSR set to: 15
  8217                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8218  002190  0E27               	movlw	39
  8219  002192  0100               	movlb	0	; () banked
  8220  002194  6F7D               	movwf	memset@p1& (0+255),b
  8221  002196  0E0F               	movlw	15
  8222  002198  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8223  00219A  0E00               	movlw	0
  8224  00219C  6F80               	movwf	(memset@c+1)& (0+255),b
  8225  00219E  0E00               	movlw	0
  8226  0021A0  6F7F               	movwf	memset@c& (0+255),b
  8227  0021A2  0E00               	movlw	0
  8228  0021A4  6F82               	movwf	(memset@n+1)& (0+255),b
  8229  0021A6  0E02               	movlw	2
  8230  0021A8  6F81               	movwf	memset@n& (0+255),b
  8231  0021AA  EC74  F02E         	call	_memset	;wreg free
  8232                           
  8233                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8234  0021AE  0E16               	movlw	22
  8235  0021B0  010F               	movlb	15	; () banked
  8236  0021B2  6F39               	movwf	57,b	;volatile
  8237                           
  8238                           ; BSR set to: 15
  8239  0021B4  0E9F               	movlw	159
  8240  0021B6  6F37               	movwf	55,b	;volatile
  8241                           
  8242                           ; BSR set to: 15
  8243  0021B8  0E7B               	movlw	123
  8244  0021BA  6F36               	movwf	54,b	;volatile
  8245                           
  8246                           ; BSR set to: 15
  8247                           ;usb_device.c: 319: ;
  8248                           ;usb_device.c: 322: ;
  8249                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8250  0021BC  0E00               	movlw	0
  8251  0021BE  0100               	movlb	0	; () banked
  8252  0021C0  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8253  0021C2                     l13428:
  8254                           
  8255                           ; BSR set to: 0
  8256  0021C2  0E0B               	movlw	11
  8257  0021C4  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8258  0021C6  D001               	goto	l1601
  8259  0021C8  D00E               	goto	u12530
  8260  0021CA                     l1601:
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;usb_device.c: 326: {
  8264                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8265                           
  8266                           ; BSR set to: 0
  8267  0021CA  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8268  0021CC  0D04               	mullw	4
  8269  0021CE  0E00               	movlw	0
  8270  0021D0  24F3               	addwf	prodl,w,c
  8271  0021D2  6ED9               	movwf	fsr2l,c
  8272  0021D4  0E04               	movlw	4
  8273  0021D6  20F4               	addwfc	prodh,w,c
  8274  0021D8  6EDA               	movwf	fsr2h,c
  8275  0021DA  6ADE               	clrf	postinc2,c
  8276  0021DC  6ADE               	clrf	postinc2,c
  8277  0021DE  6ADE               	clrf	postinc2,c
  8278  0021E0  6ADD               	clrf	postdec2,c
  8279                           
  8280                           ; BSR set to: 0
  8281  0021E2  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8282  0021E4  D7EE               	goto	l13428
  8283  0021E6                     u12530:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;usb_device.c: 328: }
  8287                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8288  0021E6  8C65               	bsf	3941,6,c	;volatile
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;usb_device.c: 334: UADDR = 0x00;
  8292  0021E8  0E00               	movlw	0
  8293  0021EA  010F               	movlb	15	; () banked
  8294  0021EC  6F38               	movwf	56,b	;volatile
  8295                           
  8296                           ; BSR set to: 15
  8297                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8298  0021EE  9865               	bcf	3941,4,c	;volatile
  8299                           
  8300                           ; BSR set to: 15
  8301                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8302  0021F0  9C65               	bcf	3941,6,c	;volatile
  8303  0021F2                     
  8304                           ;usb_device.c: 344: {
  8305                           ;usb_device.c: 345: (UIR &= 0xF7);
  8306                           
  8307                           ; BSR set to: 15
  8308  0021F2  9662               	bcf	3938,3,c	;volatile
  8309                           
  8310                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8311  0021F4  0E00               	movlw	0
  8312  0021F6  0100               	movlb	0	; () banked
  8313  0021F8  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8317  0021FA  0E00               	movlw	0
  8318  0021FC  0101               	movlb	1	; () banked
  8319  0021FE  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8320                           
  8321                           ; BSR set to: 1
  8322                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8323  002200  0E00               	movlw	0
  8324  002202  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8325  002204  0E00               	movlw	0
  8326  002206  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8327                           
  8328                           ; BSR set to: 1
  8329                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8330  002208  B662               	btfsc	3938,3,c	;volatile
  8331  00220A  D7F3               	goto	l1603
  8332                           
  8333                           ; BSR set to: 1
  8334                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8335                           
  8336                           ; BSR set to: 1
  8337  00220C  0E01               	movlw	1
  8338  00220E  0100               	movlb	0	; () banked
  8339  002210  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8340                           
  8341                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8342  002212  0E01               	movlw	1
  8343  002214  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8344                           
  8345                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8346  002216  0E00               	movlw	0
  8347  002218  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8348                           
  8349                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8350  00221A  0E00               	movlw	0
  8351  00221C  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8352                           
  8353                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8354  00221E  0E00               	movlw	0
  8355  002220  0101               	movlb	1	; () banked
  8356  002222  6FE5               	movwf	_USBBusIsSuspended& (0+255),b
  8357                           
  8358                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8359  002224  0E00               	movlw	0
  8360  002226  0100               	movlb	0	; () banked
  8361  002228  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8362  00222A                     l13456:
  8363                           
  8364                           ; BSR set to: 0
  8365  00222A  0E02               	movlw	2
  8366  00222C  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8367  00222E  D001               	goto	l1605
  8368  002230  D02E               	goto	u12560
  8369  002232                     l1605:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;usb_device.c: 364: {
  8373                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8374                           
  8375                           ; BSR set to: 0
  8376  002232  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8377  002234  0D02               	mullw	2
  8378  002236  0EB6               	movlw	low _pBDTEntryIn
  8379  002238  24F3               	addwf	prodl,w,c
  8380  00223A  6ED9               	movwf	fsr2l,c
  8381  00223C  0E00               	movlw	high _pBDTEntryIn
  8382  00223E  20F4               	addwfc	prodh,w,c
  8383  002240  6EDA               	movwf	fsr2h,c
  8384  002242  0E00               	movlw	0
  8385  002244  6EDE               	movwf	postinc2,c
  8386  002246  0E00               	movlw	0
  8387  002248  6EDD               	movwf	postdec2,c
  8388                           
  8389                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8390  00224A  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8391  00224C  0D02               	mullw	2
  8392  00224E  0E0E               	movlw	low _pBDTEntryOut
  8393  002250  24F3               	addwf	prodl,w,c
  8394  002252  6ED9               	movwf	fsr2l,c
  8395  002254  0E03               	movlw	high _pBDTEntryOut
  8396  002256  20F4               	addwfc	prodh,w,c
  8397  002258  6EDA               	movwf	fsr2h,c
  8398  00225A  0E00               	movlw	0
  8399  00225C  6EDE               	movwf	postinc2,c
  8400  00225E  0E00               	movlw	0
  8401  002260  6EDD               	movwf	postdec2,c
  8402                           
  8403                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8404  002262  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8405  002264  0D01               	mullw	1
  8406  002266  0ED1               	movlw	low _ep_data_in
  8407  002268  24F3               	addwf	prodl,w,c
  8408  00226A  6ED9               	movwf	fsr2l,c
  8409  00226C  0E02               	movlw	high _ep_data_in
  8410  00226E  20F4               	addwfc	prodh,w,c
  8411  002270  6EDA               	movwf	fsr2h,c
  8412  002272  0E00               	movlw	0
  8413  002274  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8416  002276  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8417  002278  0D01               	mullw	1
  8418  00227A  0ECE               	movlw	low _ep_data_out
  8419  00227C  24F3               	addwf	prodl,w,c
  8420  00227E  6ED9               	movwf	fsr2l,c
  8421  002280  0E02               	movlw	high _ep_data_out
  8422  002282  20F4               	addwfc	prodh,w,c
  8423  002284  6EDA               	movwf	fsr2h,c
  8424  002286  0E00               	movlw	0
  8425  002288  6EDF               	movwf	indf2,c
  8426                           
  8427                           ; BSR set to: 0
  8428  00228A  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8429  00228C  D7CE               	goto	l13456
  8430  00228E                     u12560:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;usb_device.c: 369: }
  8434                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8435                           
  8436                           ; BSR set to: 0
  8437  00228E  0E08               	movlw	8
  8438  002290  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8439  002292  0E04               	movlw	4
  8440  002294  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8444  002296  0E16               	movlw	22
  8445  002298  010F               	movlb	15	; () banked
  8446  00229A  6F26               	movwf	38,b	;volatile
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8450  00229C  0E04               	movlw	4
  8451  00229E  0104               	movlb	4	; () banked
  8452  0022A0  6F03               	movwf	3,b	;volatile
  8453  0022A2  0E30               	movlw	48
  8454  0022A4  6F02               	movwf	2,b	;volatile
  8455                           
  8456                           ; BSR set to: 4
  8457                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8458  0022A6  0E08               	movlw	8
  8459  0022A8  6F01               	movwf	1,b	;volatile
  8460                           
  8461                           ; BSR set to: 4
  8462                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8463  0022AA  0E04               	movlw	4
  8464  0022AC  6F00               	movwf	0,b	;volatile
  8465                           
  8466                           ; BSR set to: 4
  8467                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8468  0022AE  8F00               	bsf	0,7,b	;volatile
  8469                           
  8470                           ; BSR set to: 4
  8471                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8472  0022B0  0E00               	movlw	0
  8473  0022B2  0100               	movlb	0	; () banked
  8474  0022B4  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;usb_device.c: 384: USB1msTickCount = 0;
  8478  0022B6  0E00               	movlw	0
  8479  0022B8  0103               	movlb	3	; () banked
  8480  0022BA  6F18               	movwf	_USB1msTickCount& (0+255),b
  8481  0022BC  0E00               	movlw	0
  8482  0022BE  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  8483  0022C0  0E00               	movlw	0
  8484  0022C2  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  8485  0022C4  0E00               	movlw	0
  8486  0022C6  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  8487                           
  8488                           ; BSR set to: 3
  8489                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8490  0022C8  0E00               	movlw	0
  8491  0022CA  0101               	movlb	1	; () banked
  8492  0022CC  6FE3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8493                           
  8494                           ; BSR set to: 1
  8495                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8496  0022CE  0E00               	movlw	0
  8497  0022D0  0100               	movlb	0	; () banked
  8498  0022D2  6FCE               	movwf	_USBDeviceState& (0+255),b
  8499                           
  8500                           ; BSR set to: 0
  8501  0022D4  0012               	return		;funcret
  8502  0022D6                     __end_of_USBDeviceInit:
  8503                           	opt stack 0
  8504                           tosu	equ	0xFFF
  8505                           tosh	equ	0xFFE
  8506                           tosl	equ	0xFFD
  8507                           pclath	equ	0xFFA
  8508                           tblptru	equ	0xFF8
  8509                           tblptrh	equ	0xFF7
  8510                           tblptrl	equ	0xFF6
  8511                           tablat	equ	0xFF5
  8512                           prodh	equ	0xFF4
  8513                           prodl	equ	0xFF3
  8514                           intcon	equ	0xFF2
  8515                           intcon2	equ	0xFF1
  8516                           intcon3	equ	0xFF0
  8517                           postinc0	equ	0xFEE
  8518                           plusw0	equ	0xFEB
  8519                           wreg	equ	0xFE8
  8520                           postinc1	equ	0xFE6
  8521                           postdec1	equ	0xFE5
  8522                           fsr1h	equ	0xFE2
  8523                           fsr1l	equ	0xFE1
  8524                           indf2	equ	0xFDF
  8525                           postinc2	equ	0xFDE
  8526                           postdec2	equ	0xFDD
  8527                           plusw2	equ	0xFDB
  8528                           fsr2h	equ	0xFDA
  8529                           fsr2l	equ	0xFD9
  8530                           status	equ	0xFD8
  8531                           
  8532 ;; *************** function _USBCtrlEPService *****************
  8533 ;; Defined at:
  8534 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;Total ram usage:        1 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:   18
  8555 ;; This function calls:
  8556 ;;		_USBCtrlTrfInHandler
  8557 ;;		_USBCtrlTrfOutHandler
  8558 ;;		_USBCtrlTrfSetupHandler
  8559 ;;		_memcpy
  8560 ;; This function is called by:
  8561 ;;		_USBDeviceTasks
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text34
  8566  004928                     __ptext34:
  8567                           	opt stack 0
  8568  004928                     _USBCtrlEPService:
  8569                           	opt stack 8
  8570                           
  8571                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;incstack = 0
  8575  004928  0E2D               	movlw	45
  8576  00492A  0100               	movlb	0	; () banked
  8577  00492C  6FCA               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8581  00492E  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8582  004932  0EFD               	movlw	253
  8583  004934  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8584  004936  A4D8               	btfss	status,2,c
  8585  004938  D038               	goto	l1771
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;usb_device.c: 2401: {
  8589                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8590  00493A  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8591  00493E  90D8               	bcf	status,0,c
  8592  004940  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8593  004942  0E3F               	movlw	63
  8594  004944  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8595  004946  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8596  004948  0D04               	mullw	4
  8597  00494A  0E00               	movlw	0
  8598  00494C  24F3               	addwf	prodl,w,c
  8599  00494E  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8600  004950  0E04               	movlw	4
  8601  004952  20F4               	addwfc	prodh,w,c
  8602  004954  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8606  004956  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8607  00495A  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8611  00495E  0E04               	movlw	4
  8612  004960  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8616  004962  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8617  004966  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8618  00496A  30DF               	rrcf	223,w,c
  8619  00496C  32E8               	rrcf	wreg,f,c
  8620  00496E  0B0F               	andlw	15
  8621  004970  0A0D               	xorlw	13
  8622  004972  A4D8               	btfss	status,2,c
  8623  004974  D017               	goto	l1772
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;usb_device.c: 2418: {
  8627                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8628  004976  0E30               	movlw	48
  8629  004978  6F7D               	movwf	memcpy@d1& (0+255),b
  8630  00497A  0E04               	movlw	4
  8631  00497C  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8632  00497E  EE20 F002          	lfsr	2,2
  8633  004982  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8634  004984  26D9               	addwf	fsr2l,f,c
  8635  004986  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8636  004988  22DA               	addwfc	fsr2h,f,c
  8637  00498A  CFDE F07F          	movff	postinc2,memcpy@s1
  8638  00498E  CFDD F080          	movff	postdec2,memcpy@s1+1
  8639  004992  0E00               	movlw	0
  8640  004994  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8641  004996  0E08               	movlw	8
  8642  004998  6F81               	movwf	memcpy@n& (0+255),b
  8643  00499A  EC93  F02B         	call	_memcpy	;wreg free
  8644                           
  8645                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8646  00499E  ECB7  F025         	call	_USBCtrlTrfSetupHandler	;wreg free
  8647                           
  8648                           ;usb_device.c: 2427: }
  8649  0049A2  0012               	return	
  8650  0049A4                     l1772:
  8651                           
  8652                           ;usb_device.c: 2428: else
  8653                           ;usb_device.c: 2429: {
  8654                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8655  0049A4  ECD9  F027         	call	_USBCtrlTrfOutHandler	;wreg free
  8656                           
  8657                           ;usb_device.c: 2432: }
  8658                           ;usb_device.c: 2433: }
  8659  0049A8  0012               	return	
  8660  0049AA                     l1771:
  8661                           
  8662                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8663  0049AA  0100               	movlb	0	; () banked
  8664  0049AC  51D6               	movf	_USTATcopy& (0+255),w,b
  8665  0049AE  0BFD               	andlw	253
  8666  0049B0  0A04               	xorlw	4
  8667  0049B2  A4D8               	btfss	status,2,c
  8668  0049B4  0012               	return	
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;usb_device.c: 2435: {
  8672                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8673  0049B6  ECAF  F01F         	call	_USBCtrlTrfInHandler	;wreg free
  8674  0049BA  0012               	return	
  8675  0049BC                     __end_of_USBCtrlEPService:
  8676                           	opt stack 0
  8677                           tosu	equ	0xFFF
  8678                           tosh	equ	0xFFE
  8679                           tosl	equ	0xFFD
  8680                           pclath	equ	0xFFA
  8681                           tblptru	equ	0xFF8
  8682                           tblptrh	equ	0xFF7
  8683                           tblptrl	equ	0xFF6
  8684                           tablat	equ	0xFF5
  8685                           prodh	equ	0xFF4
  8686                           prodl	equ	0xFF3
  8687                           intcon	equ	0xFF2
  8688                           intcon2	equ	0xFF1
  8689                           intcon3	equ	0xFF0
  8690                           postinc0	equ	0xFEE
  8691                           plusw0	equ	0xFEB
  8692                           wreg	equ	0xFE8
  8693                           postinc1	equ	0xFE6
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           plusw2	equ	0xFDB
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _memcpy *****************
  8706 ;; Defined at:
  8707 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  d1              2   29[BANK0 ] PTR void 
  8710 ;;		 -> SetupPkt(8), 
  8711 ;;  s1              2   31[BANK0 ] PTR const void 
  8712 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8713 ;;  n               2   33[BANK0 ] unsigned int 
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8716 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8717 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8718 ;;		 -> SetupPkt(8), 
  8719 ;;  tmp             1   35[BANK0 ] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  2   29[BANK0 ] PTR void 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8729 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8732 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8733 ;;Total ram usage:       11 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:   11
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_USBCtrlEPService
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text35
  8744  005726                     __ptext35:
  8745                           	opt stack 0
  8746  005726                     _memcpy:
  8747                           	opt stack 14
  8748                           
  8749                           ;incstack = 0
  8750  005726  C07F  F086         	movff	memcpy@s1,memcpy@s
  8751  00572A  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8752  00572E  C07D  F084         	movff	memcpy@d1,memcpy@d
  8753  005732  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8754  005736  D011               	goto	l3105
  8755  005738                     l12676:
  8756  005738  C086  FFD9         	movff	memcpy@s,fsr2l
  8757  00573C  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8758  005740  50DF               	movf	indf2,w,c
  8759  005742  0100               	movlb	0	; () banked
  8760  005744  6F83               	movwf	memcpy@tmp& (0+255),b
  8761                           
  8762                           ; BSR set to: 0
  8763  005746  4B86               	infsnz	memcpy@s& (0+255),f,b
  8764  005748  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8765                           
  8766                           ; BSR set to: 0
  8767  00574A  C084  FFD9         	movff	memcpy@d,fsr2l
  8768  00574E  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8769  005752  C083  FFDF         	movff	memcpy@tmp,indf2
  8770                           
  8771                           ; BSR set to: 0
  8772  005756  4B84               	infsnz	memcpy@d& (0+255),f,b
  8773  005758  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8774  00575A                     l3105:
  8775                           
  8776                           ; BSR set to: 0
  8777  00575A  0100               	movlb	0	; () banked
  8778  00575C  0781               	decf	memcpy@n& (0+255),f,b
  8779  00575E  A0D8               	btfss	status,0,c
  8780  005760  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8781  005762  2981               	incf	memcpy@n& (0+255),w,b
  8782  005764  E1E9               	bnz	l12676
  8783  005766  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8784  005768  B4D8               	btfsc	status,2,c
  8785  00576A  0012               	return	
  8786  00576C  D7E5               	goto	l3106
  8787  00576E                     __end_of_memcpy:
  8788                           	opt stack 0
  8789                           tosu	equ	0xFFF
  8790                           tosh	equ	0xFFE
  8791                           tosl	equ	0xFFD
  8792                           pclath	equ	0xFFA
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           intcon2	equ	0xFF1
  8801                           intcon3	equ	0xFF0
  8802                           postinc0	equ	0xFEE
  8803                           plusw0	equ	0xFEB
  8804                           wreg	equ	0xFE8
  8805                           postinc1	equ	0xFE6
  8806                           postdec1	equ	0xFE5
  8807                           fsr1h	equ	0xFE2
  8808                           fsr1l	equ	0xFE1
  8809                           indf2	equ	0xFDF
  8810                           postinc2	equ	0xFDE
  8811                           postdec2	equ	0xFDD
  8812                           plusw2	equ	0xFDB
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function _USBCtrlTrfSetupHandler *****************
  8818 ;; Defined at:
  8819 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:   17
  8840 ;; This function calls:
  8841 ;;		_USBCheckStdRequest
  8842 ;;		_USBCtrlEPServiceComplete
  8843 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8844 ;; This function is called by:
  8845 ;;		_USBCtrlEPService
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           	psect	text36
  8850  004B6E                     __ptext36:
  8851                           	opt stack 0
  8852  004B6E                     _USBCtrlTrfSetupHandler:
  8853                           	opt stack 8
  8854                           
  8855                           ;usb_device.c: 2488: shortPacketStatus = 0;
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;incstack = 0
  8859  004B6E  0E00               	movlw	0
  8860  004B70  0100               	movlb	0	; () banked
  8861  004B72  6FCD               	movwf	_shortPacketStatus& (0+255),b
  8862                           
  8863                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  8864  004B74  0E00               	movlw	0
  8865  004B76  6FC9               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  8866                           
  8867                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  8868  004B78  0E00               	movlw	0
  8869  004B7A  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8870                           
  8871                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  8872  004B7C  0E00               	movlw	0
  8873  004B7E  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8874                           
  8875                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  8876  004B80  0E00               	movlw	0
  8877  004B82  0101               	movlb	1	; () banked
  8878  004B84  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8879                           
  8880                           ;usb_device.c: 2493: controlTransferState = 0;
  8881  004B86  0E00               	movlw	0
  8882  004B88  0100               	movlb	0	; () banked
  8883  004B8A  6FCC               	movwf	_controlTransferState& (0+255),b
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8887  004B8C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8888  004B90  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8889  004B94  0E7F               	movlw	127
  8890  004B96  16DF               	andwf	indf2,f,c
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8894  004B98  0E04               	movlw	4
  8895  004B9A  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  8899  004B9C  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8900  004BA0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8901  004BA4  0E7F               	movlw	127
  8902  004BA6  16DF               	andwf	indf2,f,c
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  8906  004BA8  0E04               	movlw	4
  8907  004BAA  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  8911  004BAC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8912  004BB0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8913  004BB4  0E7F               	movlw	127
  8914  004BB6  16DF               	andwf	indf2,f,c
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  8918  004BB8  0E00               	movlw	0
  8919  004BBA  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  8923  004BBC  0E00               	movlw	0
  8924  004BBE  6FB5               	movwf	(_inPipes+5)& (0+255),b
  8925  004BC0  0E00               	movlw	0
  8926  004BC2  6FB4               	movwf	(_inPipes+4)& (0+255),b
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  8930  004BC4  0E00               	movlw	0
  8931  004BC6  0101               	movlb	1	; () banked
  8932  004BC8  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8933                           
  8934                           ; BSR set to: 1
  8935                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  8936  004BCA  0E00               	movlw	0
  8937  004BCC  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8938  004BCE  0E00               	movlw	0
  8939  004BD0  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8940                           
  8941                           ; BSR set to: 1
  8942                           ;usb_device.c: 2517: USBCheckStdRequest();
  8943  004BD2  EC6F  F01A         	call	_USBCheckStdRequest	;wreg free
  8944                           
  8945                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  8946  004BD6  0E00               	movlw	0
  8947  004BD8  0100               	movlb	0	; () banked
  8948  004BDA  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8949  004BDC  0E03               	movlw	3
  8950  004BDE  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8951  004BE0  0E00               	movlw	0
  8952  004BE2  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8953  004BE4  0E00               	movlw	0
  8954  004BE6  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8955  004BE8  0E00               	movlw	0
  8956  004BEA  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8957  004BEC  0E00               	movlw	0
  8958  004BEE  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8959  004BF0  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8960                           
  8961                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  8962  004BF4  EC1E  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  8963  004BF8  0012               	return		;funcret
  8964  004BFA                     __end_of_USBCtrlTrfSetupHandler:
  8965                           	opt stack 0
  8966                           tosu	equ	0xFFF
  8967                           tosh	equ	0xFFE
  8968                           tosl	equ	0xFFD
  8969                           pclath	equ	0xFFA
  8970                           tblptru	equ	0xFF8
  8971                           tblptrh	equ	0xFF7
  8972                           tblptrl	equ	0xFF6
  8973                           tablat	equ	0xFF5
  8974                           prodh	equ	0xFF4
  8975                           prodl	equ	0xFF3
  8976                           intcon	equ	0xFF2
  8977                           intcon2	equ	0xFF1
  8978                           intcon3	equ	0xFF0
  8979                           postinc0	equ	0xFEE
  8980                           plusw0	equ	0xFEB
  8981                           wreg	equ	0xFE8
  8982                           postinc1	equ	0xFE6
  8983                           postdec1	equ	0xFE5
  8984                           fsr1h	equ	0xFE2
  8985                           fsr1l	equ	0xFE1
  8986                           indf2	equ	0xFDF
  8987                           postinc2	equ	0xFDE
  8988                           postdec2	equ	0xFDD
  8989                           plusw2	equ	0xFDB
  8990                           fsr2h	equ	0xFDA
  8991                           fsr2l	equ	0xFD9
  8992                           status	equ	0xFD8
  8993                           
  8994 ;; *************** function _USBCtrlEPServiceComplete *****************
  8995 ;; Defined at:
  8996 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;		None
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;Total ram usage:        0 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:   13
  9017 ;; This function calls:
  9018 ;;		_USBCtrlEPAllowDataStage
  9019 ;;		_USBCtrlEPAllowStatusStage
  9020 ;; This function is called by:
  9021 ;;		_USBCtrlTrfSetupHandler
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text37
  9026  00303C                     __ptext37:
  9027                           	opt stack 0
  9028  00303C                     _USBCtrlEPServiceComplete:
  9029                           	opt stack 11
  9030                           
  9031                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9032                           
  9033                           ;incstack = 0
  9034  00303C  9865               	bcf	3941,4,c	;volatile
  9035                           
  9036                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9037  00303E  0100               	movlb	0	; () banked
  9038  003040  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9039  003042  D03C               	goto	l1681
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;usb_device.c: 1647: {
  9043                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9044  003044  0101               	movlb	1	; () banked
  9045  003046  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9046  003048  D00D               	goto	l1682
  9047                           
  9048                           ; BSR set to: 1
  9049                           ;usb_device.c: 1649: {
  9050                           ;usb_device.c: 1650: controlTransferState = 2;
  9051  00304A  0E02               	movlw	2
  9052  00304C  0100               	movlb	0	; () banked
  9053  00304E  6FCC               	movwf	_controlTransferState& (0+255),b
  9054                           
  9055                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9056  003050  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9057  003052  B4D8               	btfsc	status,2,c
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;usb_device.c: 1662: {
  9061                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9062  003054  EC14  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9063                           
  9064                           ;usb_device.c: 1664: }
  9065                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9066  003058  0E00               	movlw	0
  9067  00305A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9068                           
  9069                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9070  00305C  0E00               	movlw	0
  9071  00305E  0100               	movlb	0	; () banked
  9072  003060  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9073                           
  9074                           ;usb_device.c: 1670: }
  9075  003062  0012               	return	
  9076  003064                     l1682:
  9077                           
  9078                           ;usb_device.c: 1671: else
  9079                           ;usb_device.c: 1672: {
  9080                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9081                           
  9082                           ; BSR set to: 0
  9083  003064  0100               	movlb	0	; () banked
  9084  003066  EE20 F001          	lfsr	2,1
  9085  00306A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9086  00306C  26D9               	addwf	fsr2l,f,c
  9087  00306E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9088  003070  22DA               	addwfc	fsr2h,f,c
  9089  003072  0E08               	movlw	8
  9090  003074  6EDF               	movwf	indf2,c
  9091                           
  9092                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9093  003076  EE20 F002          	lfsr	2,2
  9094  00307A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9095  00307C  26D9               	addwf	fsr2l,f,c
  9096  00307E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9097  003080  22DA               	addwfc	fsr2h,f,c
  9098  003082  0E30               	movlw	48
  9099  003084  6EDE               	movwf	postinc2,c
  9100  003086  0E04               	movlw	4
  9101  003088  6EDD               	movwf	postdec2,c
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9105  00308A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9106  00308E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9107  003092  0E0C               	movlw	12
  9108  003094  6EDF               	movwf	indf2,c
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9112  003096  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9113  00309A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9114  00309E  0E00               	movlw	0
  9115  0030A0  8EDB               	bsf	plusw2,7,c
  9116                           
  9117                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9118  0030A2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9119  0030A6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9120  0030AA  0E04               	movlw	4
  9121  0030AC  6EDF               	movwf	indf2,c
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9125  0030AE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9126  0030B2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9127  0030B6  0E00               	movlw	0
  9128  0030B8  8EDB               	bsf	plusw2,7,c
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;usb_device.c: 1683: }
  9132                           ;usb_device.c: 1684: }
  9133  0030BA  0012               	return	
  9134  0030BC                     l1681:
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;usb_device.c: 1685: else
  9138                           ;usb_device.c: 1686: {
  9139                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9140  0030BC  0104               	movlb	4	; () banked
  9141  0030BE  AF30               	btfss	48,7,b	;volatile
  9142  0030C0  D012               	goto	l1686
  9143                           
  9144                           ; BSR set to: 4
  9145                           ;usb_device.c: 1688: {
  9146                           ;usb_device.c: 1689: controlTransferState = 1;
  9147  0030C2  0E01               	movlw	1
  9148  0030C4  0100               	movlb	0	; () banked
  9149  0030C6  6FCC               	movwf	_controlTransferState& (0+255),b
  9150                           
  9151                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9152  0030C8  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9153  0030CA  B4D8               	btfsc	status,2,c
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;usb_device.c: 1704: {
  9157                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9158  0030CC  EC14  F023         	call	_USBCtrlEPAllowDataStage	;wreg free
  9159                           
  9160                           ;usb_device.c: 1706: }
  9161                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9162  0030D0  0E00               	movlw	0
  9163  0030D2  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9164                           
  9165                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9166  0030D4  0E00               	movlw	0
  9167  0030D6  0100               	movlb	0	; () banked
  9168  0030D8  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9172  0030DA  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9173  0030DC  A4D8               	btfss	status,2,c
  9174  0030DE  0012               	return	
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;usb_device.c: 1731: {
  9178                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9179  0030E0  EC56  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9180                           
  9181                           ;usb_device.c: 1733: }
  9182                           ;usb_device.c: 1734: }
  9183  0030E4  0012               	return	
  9184  0030E6                     l1686:
  9185                           
  9186                           ;usb_device.c: 1735: else
  9187                           ;usb_device.c: 1736: {
  9188                           ;usb_device.c: 1747: controlTransferState = 2;
  9189  0030E6  0E02               	movlw	2
  9190  0030E8  0100               	movlb	0	; () banked
  9191  0030EA  6FCC               	movwf	_controlTransferState& (0+255),b
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9195  0030EC  EE20 F001          	lfsr	2,1
  9196  0030F0  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9197  0030F2  26D9               	addwf	fsr2l,f,c
  9198  0030F4  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9199  0030F6  22DA               	addwfc	fsr2h,f,c
  9200  0030F8  0E08               	movlw	8
  9201  0030FA  6EDF               	movwf	indf2,c
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9205  0030FC  EE20 F002          	lfsr	2,2
  9206  003100  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9207  003102  26D9               	addwf	fsr2l,f,c
  9208  003104  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9209  003106  22DA               	addwfc	fsr2h,f,c
  9210  003108  0E30               	movlw	48
  9211  00310A  6EDE               	movwf	postinc2,c
  9212  00310C  0E04               	movlw	4
  9213  00310E  6EDD               	movwf	postdec2,c
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9217  003110  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9218  003114  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9219  003118  0E04               	movlw	4
  9220  00311A  6EDF               	movwf	indf2,c
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9224  00311C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9225  003120  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9226  003124  0E00               	movlw	0
  9227  003126  8EDB               	bsf	plusw2,7,c
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9231  003128  0E00               	movlw	0
  9232  00312A  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9236  00312C  0E00               	movlw	0
  9237  00312E  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9241  003130  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9242  003132  A4D8               	btfss	status,2,c
  9243  003134  0012               	return	
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;usb_device.c: 1759: {
  9247                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9248  003136  EC56  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9249  00313A  0012               	return	
  9250  00313C                     __end_of_USBCtrlEPServiceComplete:
  9251                           	opt stack 0
  9252                           tosu	equ	0xFFF
  9253                           tosh	equ	0xFFE
  9254                           tosl	equ	0xFFD
  9255                           pclath	equ	0xFFA
  9256                           tblptru	equ	0xFF8
  9257                           tblptrh	equ	0xFF7
  9258                           tblptrl	equ	0xFF6
  9259                           tablat	equ	0xFF5
  9260                           prodh	equ	0xFF4
  9261                           prodl	equ	0xFF3
  9262                           intcon	equ	0xFF2
  9263                           intcon2	equ	0xFF1
  9264                           intcon3	equ	0xFF0
  9265                           postinc0	equ	0xFEE
  9266                           plusw0	equ	0xFEB
  9267                           wreg	equ	0xFE8
  9268                           postinc1	equ	0xFE6
  9269                           postdec1	equ	0xFE5
  9270                           fsr1h	equ	0xFE2
  9271                           fsr1l	equ	0xFE1
  9272                           indf2	equ	0xFDF
  9273                           postinc2	equ	0xFDE
  9274                           postdec2	equ	0xFDD
  9275                           plusw2	equ	0xFDB
  9276                           fsr2h	equ	0xFDA
  9277                           fsr2l	equ	0xFD9
  9278                           status	equ	0xFD8
  9279                           
  9280 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9281 ;; Defined at:
  9282 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:   12
  9303 ;; This function calls:
  9304 ;;		_USBCtrlTrfTxService
  9305 ;; This function is called by:
  9306 ;;		_USBCtrlEPServiceComplete
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text38
  9311  004628                     __ptext38:
  9312                           	opt stack 0
  9313  004628                     _USBCtrlEPAllowDataStage:
  9314                           	opt stack 11
  9315                           
  9316                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9317                           
  9318                           ;incstack = 0
  9319  004628  0E00               	movlw	0
  9320  00462A  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9321                           
  9322                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9323  00462C  0E00               	movlw	0
  9324  00462E  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9325                           
  9326                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9327  004630  0E02               	movlw	2
  9328  004632  0100               	movlb	0	; () banked
  9329  004634  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9330  004636  A4D8               	btfss	status,2,c
  9331  004638  D01F               	goto	l1670
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;usb_device.c: 1512: {
  9335                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9336  00463A  EE20 F001          	lfsr	2,1
  9337  00463E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9338  004640  26D9               	addwf	fsr2l,f,c
  9339  004642  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9340  004644  22DA               	addwfc	fsr2h,f,c
  9341  004646  0E08               	movlw	8
  9342  004648  6EDF               	movwf	indf2,c
  9343                           
  9344                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9345  00464A  EE20 F002          	lfsr	2,2
  9346  00464E  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9347  004650  26D9               	addwf	fsr2l,f,c
  9348  004652  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9349  004654  22DA               	addwfc	fsr2h,f,c
  9350  004656  0E38               	movlw	56
  9351  004658  6EDE               	movwf	postinc2,c
  9352  00465A  0E04               	movlw	4
  9353  00465C  6EDD               	movwf	postdec2,c
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9357  00465E  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9358  004662  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9359  004666  0E48               	movlw	72
  9360  004668  6EDF               	movwf	indf2,c
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9364  00466A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9365  00466E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9366  004672  0E00               	movlw	0
  9367  004674  8EDB               	bsf	plusw2,7,c
  9368                           
  9369                           ;usb_device.c: 1518: }
  9370  004676  0012               	return	
  9371  004678                     l1670:
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;usb_device.c: 1519: else
  9375                           ;usb_device.c: 1520: {
  9376                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9377                           
  9378                           ; BSR set to: 0
  9379  004678  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9380  00467A  0104               	movlb	4	; () banked
  9381  00467C  5D36               	subwf	54,w,b	;volatile
  9382  00467E  0100               	movlb	0	; () banked
  9383  004680  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9384  004682  0104               	movlb	4	; () banked
  9385  004684  5937               	subwfb	55,w,b	;volatile
  9386  004686  B0D8               	btfsc	status,0,c
  9387  004688  D004               	goto	l1672
  9388                           
  9389                           ; BSR set to: 4
  9390                           ;usb_device.c: 1524: {
  9391                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9392  00468A  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9393  00468E  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9394  004692                     l1672:
  9395                           
  9396                           ; BSR set to: 4
  9397                           ;usb_device.c: 1526: }
  9398                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9399                           
  9400                           ; BSR set to: 4
  9401  004692  ECE1  F01A         	call	_USBCtrlTrfTxService	;wreg free
  9402                           
  9403                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9404  004696  0100               	movlb	0	; () banked
  9405  004698  EE20 F002          	lfsr	2,2
  9406  00469C  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9407  00469E  26D9               	addwf	fsr2l,f,c
  9408  0046A0  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9409  0046A2  22DA               	addwfc	fsr2h,f,c
  9410  0046A4  0E38               	movlw	56
  9411  0046A6  6EDE               	movwf	postinc2,c
  9412  0046A8  0E04               	movlw	4
  9413  0046AA  6EDD               	movwf	postdec2,c
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9417  0046AC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9418  0046B0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9419  0046B4  0E48               	movlw	72
  9420  0046B6  6EDF               	movwf	indf2,c
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9424  0046B8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9425  0046BC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9426  0046C0  0E00               	movlw	0
  9427  0046C2  8EDB               	bsf	plusw2,7,c
  9428  0046C4  0012               	return	
  9429  0046C6                     __end_of_USBCtrlEPAllowDataStage:
  9430                           	opt stack 0
  9431                           tosu	equ	0xFFF
  9432                           tosh	equ	0xFFE
  9433                           tosl	equ	0xFFD
  9434                           pclath	equ	0xFFA
  9435                           tblptru	equ	0xFF8
  9436                           tblptrh	equ	0xFF7
  9437                           tblptrl	equ	0xFF6
  9438                           tablat	equ	0xFF5
  9439                           prodh	equ	0xFF4
  9440                           prodl	equ	0xFF3
  9441                           intcon	equ	0xFF2
  9442                           intcon2	equ	0xFF1
  9443                           intcon3	equ	0xFF0
  9444                           postinc0	equ	0xFEE
  9445                           plusw0	equ	0xFEB
  9446                           wreg	equ	0xFE8
  9447                           postinc1	equ	0xFE6
  9448                           postdec1	equ	0xFE5
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           plusw2	equ	0xFDB
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459 ;; *************** function _USBCheckStdRequest *****************
  9460 ;; Defined at:
  9461 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;		None
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;		None
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;Total ram usage:        0 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:   16
  9482 ;; This function calls:
  9483 ;;		_USBStdFeatureReqHandler
  9484 ;;		_USBStdGetDscHandler
  9485 ;;		_USBStdGetStatusHandler
  9486 ;;		_USBStdSetCfgHandler
  9487 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9488 ;; This function is called by:
  9489 ;;		_USBCtrlTrfSetupHandler
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text39
  9494  0034DE                     __ptext39:
  9495                           	opt stack 0
  9496  0034DE                     _USBCheckStdRequest:
  9497                           	opt stack 8
  9498                           
  9499                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;incstack = 0
  9503  0034DE  0104               	movlb	4	; () banked
  9504  0034E0  3930               	swapf	48,w,b	;volatile
  9505  0034E2  32E8               	rrcf	wreg,f,c
  9506  0034E4  0B03               	andlw	3
  9507  0034E6  0900               	iorlw	0
  9508  0034E8  A4D8               	btfss	status,2,c
  9509  0034EA  0012               	return	
  9510  0034EC  D048               	goto	l1805
  9511  0034EE                     l1806:
  9512                           
  9513                           ; BSR set to: 4
  9514                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9515  0034EE  0100               	movlb	0	; () banked
  9516  0034F0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9520  0034F2  0E08               	movlw	8
  9521  0034F4  6FCE               	movwf	_USBDeviceState& (0+255),b
  9522                           
  9523                           ;usb_device.c: 2713: break;
  9524  0034F6  0012               	return	
  9525  0034F8                     
  9526                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9527                           
  9528                           ; BSR set to: 0
  9529  0034F8  ECD7  F015         	call	_USBStdGetDscHandler	;wreg free
  9530                           
  9531                           ;usb_device.c: 2716: break;
  9532  0034FC  0012               	return	
  9533  0034FE                     
  9534                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9535  0034FE  EC89  F019         	call	_USBStdSetCfgHandler	;wreg free
  9536                           
  9537                           ;usb_device.c: 2719: break;
  9538  003502  0012               	return	
  9539  003504                     
  9540                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9541  003504  0ED7               	movlw	low _USBActiveConfiguration
  9542  003506  0100               	movlb	0	; () banked
  9543  003508  6FB0               	movwf	_inPipes& (0+255),b
  9544  00350A  0E00               	movlw	high _USBActiveConfiguration
  9545  00350C  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9549  00350E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9553  003510  0E01               	movlw	1
  9554  003512  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9558  003514  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9559                           
  9560                           ;usb_device.c: 2725: break;
  9561  003516  0012               	return	
  9562  003518                     
  9563                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9564                           
  9565                           ; BSR set to: 0
  9566  003518  EC6F  F020         	call	_USBStdGetStatusHandler	;wreg free
  9567                           
  9568                           ;usb_device.c: 2728: break;
  9569  00351C  0012               	return	
  9570  00351E                     
  9571                           ;usb_device.c: 2730: case 3:
  9572                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9573  00351E  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9574                           
  9575                           ;usb_device.c: 2732: break;
  9576  003522  0012               	return	
  9577  003524                     
  9578                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9579  003524  0104               	movlb	4	; () banked
  9580  003526  5134               	movf	52,w,b	;volatile
  9581  003528  0D01               	mullw	1
  9582  00352A  0EF1               	movlw	low _USBAlternateInterface
  9583  00352C  24F3               	addwf	prodl,w,c
  9584  00352E  0100               	movlb	0	; () banked
  9585  003530  6FB0               	movwf	_inPipes& (0+255),b
  9586  003532  0E02               	movlw	high _USBAlternateInterface
  9587  003534  20F4               	addwfc	prodh,w,c
  9588  003536  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9592  003538  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9596  00353A  0E01               	movlw	1
  9597  00353C  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9601  00353E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9602                           
  9603                           ;usb_device.c: 2738: break;
  9604  003540  0012               	return	
  9605  003542                     l1815:
  9606                           
  9607                           ; BSR set to: 4
  9608                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9609  003542  0100               	movlb	0	; () banked
  9610  003544  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9614  003546  0104               	movlb	4	; () banked
  9615  003548  5134               	movf	52,w,b	;volatile
  9616  00354A  0D01               	mullw	1
  9617  00354C  0EF1               	movlw	low _USBAlternateInterface
  9618  00354E  24F3               	addwf	prodl,w,c
  9619  003550  6ED9               	movwf	fsr2l,c
  9620  003552  0E02               	movlw	high _USBAlternateInterface
  9621  003554  20F4               	addwfc	prodh,w,c
  9622  003556  6EDA               	movwf	fsr2h,c
  9623  003558  C432 FFDF          	movff	1074,indf2	;volatile
  9624                           
  9625                           ;usb_device.c: 2742: break;
  9626  00355C  0012               	return	
  9627  00355E                     
  9628                           ; BSR set to: 4
  9629                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9630                           
  9631                           ; BSR set to: 4
  9632  00355E  0E00               	movlw	0
  9633  003560  0100               	movlb	0	; () banked
  9634  003562  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9635  003564  0E02               	movlw	2
  9636  003566  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9637  003568  0E00               	movlw	0
  9638  00356A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9639  00356C  0E00               	movlw	0
  9640  00356E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9641  003570  0E00               	movlw	0
  9642  003572  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9643  003574  0E00               	movlw	0
  9644  003576  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9645  003578  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9646                           
  9647                           ;usb_device.c: 2749: }
  9648                           
  9649                           ;usb_device.c: 2748: break;
  9650                           
  9651                           ;usb_device.c: 2747: default:
  9652                           
  9653                           ;usb_device.c: 2746: case 12:
  9654                           
  9655                           ;usb_device.c: 2745: break;
  9656  00357C  0012               	return	
  9657  00357E                     l1805:
  9658  00357E  0104               	movlb	4	; () banked
  9659  003580  5131               	movf	49,w,b	;volatile
  9660                           
  9661                           ; Switch size 1, requested type "space"
  9662                           ; Number of cases is 11, Range of values is 0 to 12
  9663                           ; switch strategies available:
  9664                           ; Name         Instructions Cycles
  9665                           ; simple_byte           34    18 (average)
  9666                           ;	Chosen strategy is simple_byte
  9667  003582  0A00               	xorlw	0	; case 0
  9668  003584  B4D8               	btfsc	status,2,c
  9669  003586  D7C8               	goto	l1811
  9670  003588  0A01               	xorlw	1	; case 1
  9671  00358A  B4D8               	btfsc	status,2,c
  9672  00358C  D7C8               	goto	l1812
  9673  00358E  0A02               	xorlw	2	; case 3
  9674  003590  B4D8               	btfsc	status,2,c
  9675  003592  D7C5               	goto	l1812
  9676  003594  0A06               	xorlw	6	; case 5
  9677  003596  B4D8               	btfsc	status,2,c
  9678  003598  D7AA               	goto	l1806
  9679  00359A  0A03               	xorlw	3	; case 6
  9680  00359C  B4D8               	btfsc	status,2,c
  9681  00359E  D7AC               	goto	l1808
  9682  0035A0  0A01               	xorlw	1	; case 7
  9683  0035A2  B4D8               	btfsc	status,2,c
  9684  0035A4  D7DC               	goto	l1816
  9685  0035A6  0A0F               	xorlw	15	; case 8
  9686  0035A8  B4D8               	btfsc	status,2,c
  9687  0035AA  D7AC               	goto	l1810
  9688  0035AC  0A01               	xorlw	1	; case 9
  9689  0035AE  B4D8               	btfsc	status,2,c
  9690  0035B0  D7A6               	goto	l1809
  9691  0035B2  0A03               	xorlw	3	; case 10
  9692  0035B4  B4D8               	btfsc	status,2,c
  9693  0035B6  D7B6               	goto	l1814
  9694  0035B8  0A01               	xorlw	1	; case 11
  9695  0035BA  B4D8               	btfsc	status,2,c
  9696  0035BC  D7C2               	goto	l1815
  9697  0035BE  0A07               	xorlw	7	; case 12
  9698  0035C0  0012               	return	
  9699  0035C2                     __end_of_USBCheckStdRequest:
  9700                           	opt stack 0
  9701                           tosu	equ	0xFFF
  9702                           tosh	equ	0xFFE
  9703                           tosl	equ	0xFFD
  9704                           pclath	equ	0xFFA
  9705                           tblptru	equ	0xFF8
  9706                           tblptrh	equ	0xFF7
  9707                           tblptrl	equ	0xFF6
  9708                           tablat	equ	0xFF5
  9709                           prodh	equ	0xFF4
  9710                           prodl	equ	0xFF3
  9711                           intcon	equ	0xFF2
  9712                           intcon2	equ	0xFF1
  9713                           intcon3	equ	0xFF0
  9714                           postinc0	equ	0xFEE
  9715                           plusw0	equ	0xFEB
  9716                           wreg	equ	0xFE8
  9717                           postinc1	equ	0xFE6
  9718                           postdec1	equ	0xFE5
  9719                           fsr1h	equ	0xFE2
  9720                           fsr1l	equ	0xFE1
  9721                           indf2	equ	0xFDF
  9722                           postinc2	equ	0xFDE
  9723                           postdec2	equ	0xFDD
  9724                           plusw2	equ	0xFDB
  9725                           fsr2h	equ	0xFDA
  9726                           fsr2l	equ	0xFD9
  9727                           status	equ	0xFD8
  9728                           
  9729 ;; *************** function _USBStdSetCfgHandler *****************
  9730 ;; Defined at:
  9731 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;		None
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  i               1   49[BANK0 ] unsigned char 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9749 ;;Total ram usage:        1 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:   15
  9752 ;; This function calls:
  9753 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9754 ;;		_memset
  9755 ;; This function is called by:
  9756 ;;		_USBCheckStdRequest
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text40
  9761  003312                     __ptext40:
  9762                           	opt stack 0
  9763  003312                     _USBStdSetCfgHandler:
  9764                           	opt stack 8
  9765                           
  9766                           ;usb_device.c: 1988: uint8_t i;
  9767                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9768                           
  9769                           ;incstack = 0
  9770  003312  0100               	movlb	0	; () banked
  9771  003314  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9775  003316  0E27               	movlw	39
  9776  003318  6F7D               	movwf	memset@p1& (0+255),b
  9777  00331A  0E0F               	movlw	15
  9778  00331C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9779  00331E  0E00               	movlw	0
  9780  003320  6F80               	movwf	(memset@c+1)& (0+255),b
  9781  003322  0E00               	movlw	0
  9782  003324  6F7F               	movwf	memset@c& (0+255),b
  9783  003326  0E00               	movlw	0
  9784  003328  6F82               	movwf	(memset@n+1)& (0+255),b
  9785  00332A  0E02               	movlw	2
  9786  00332C  6F81               	movwf	memset@n& (0+255),b
  9787  00332E  EC74  F02E         	call	_memset	;wreg free
  9788                           
  9789                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9790  003332  0E00               	movlw	0
  9791  003334  0100               	movlb	0	; () banked
  9792  003336  6F7D               	movwf	memset@p1& (0+255),b
  9793  003338  0E04               	movlw	4
  9794  00333A  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9795  00333C  0E00               	movlw	0
  9796  00333E  6F80               	movwf	(memset@c+1)& (0+255),b
  9797  003340  0E00               	movlw	0
  9798  003342  6F7F               	movwf	memset@c& (0+255),b
  9799  003344  0E00               	movlw	0
  9800  003346  6F82               	movwf	(memset@n+1)& (0+255),b
  9801  003348  0E30               	movlw	48
  9802  00334A  6F81               	movwf	memset@n& (0+255),b
  9803  00334C  EC74  F02E         	call	_memset	;wreg free
  9804                           
  9805                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  9806  003350  8C65               	bsf	3941,6,c	;volatile
  9807                           
  9808                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  9809  003352  0E00               	movlw	0
  9810  003354  0100               	movlb	0	; () banked
  9811  003356  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
  9812  003358                     l11954:
  9813                           
  9814                           ; BSR set to: 0
  9815  003358  0E02               	movlw	2
  9816  00335A  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  9817  00335C  D001               	goto	l1722
  9818  00335E  D016               	goto	u10550
  9819  003360                     l1722:
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;usb_device.c: 2006: {
  9823                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  9824                           
  9825                           ; BSR set to: 0
  9826  003360  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9827  003362  0D01               	mullw	1
  9828  003364  0ED1               	movlw	low _ep_data_in
  9829  003366  24F3               	addwf	prodl,w,c
  9830  003368  6ED9               	movwf	fsr2l,c
  9831  00336A  0E02               	movlw	high _ep_data_in
  9832  00336C  20F4               	addwfc	prodh,w,c
  9833  00336E  6EDA               	movwf	fsr2h,c
  9834  003370  0E00               	movlw	0
  9835  003372  6EDF               	movwf	indf2,c
  9836                           
  9837                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  9838  003374  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  9839  003376  0D01               	mullw	1
  9840  003378  0ECE               	movlw	low _ep_data_out
  9841  00337A  24F3               	addwf	prodl,w,c
  9842  00337C  6ED9               	movwf	fsr2l,c
  9843  00337E  0E02               	movlw	high _ep_data_out
  9844  003380  20F4               	addwfc	prodh,w,c
  9845  003382  6EDA               	movwf	fsr2h,c
  9846  003384  0E00               	movlw	0
  9847  003386  6EDF               	movwf	indf2,c
  9848                           
  9849                           ; BSR set to: 0
  9850  003388  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  9851  00338A  D7E6               	goto	l11954
  9852  00338C                     u10550:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;usb_device.c: 2009: }
  9856                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  9857                           
  9858                           ; BSR set to: 0
  9859  00338C  0EF1               	movlw	low _USBAlternateInterface
  9860  00338E  6F7D               	movwf	memset@p1& (0+255),b
  9861  003390  0E02               	movlw	high _USBAlternateInterface
  9862  003392  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9863  003394  0E00               	movlw	0
  9864  003396  6F80               	movwf	(memset@c+1)& (0+255),b
  9865  003398  0E00               	movlw	0
  9866  00339A  6F7F               	movwf	memset@c& (0+255),b
  9867  00339C  0E00               	movlw	0
  9868  00339E  6F82               	movwf	(memset@n+1)& (0+255),b
  9869  0033A0  0E02               	movlw	2
  9870  0033A2  6F81               	movwf	memset@n& (0+255),b
  9871  0033A4  EC74  F02E         	call	_memset	;wreg free
  9872                           
  9873                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  9874  0033A8  9C65               	bcf	3941,6,c	;volatile
  9875                           
  9876                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9877  0033AA  0E08               	movlw	8
  9878  0033AC  0100               	movlb	0	; () banked
  9879  0033AE  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  9880  0033B0  0E04               	movlw	4
  9881  0033B2  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  9885  0033B4  0E00               	movlw	0
  9886  0033B6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  9887  0033B8  0E04               	movlw	4
  9888  0033BA  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9892  0033BC  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  9893  0033C0  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  9897  0033C4  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  9901  0033C8  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
  9902  0033CA  A4D8               	btfss	status,2,c
  9903  0033CC  D003               	goto	l1724
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;usb_device.c: 2028: {
  9907                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  9908  0033CE  0E10               	movlw	16
  9909  0033D0  6FCE               	movwf	_USBDeviceState& (0+255),b
  9910                           
  9911                           ;usb_device.c: 2031: }
  9912  0033D2  0012               	return	
  9913  0033D4                     l1724:
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;usb_device.c: 2032: else
  9917                           ;usb_device.c: 2033: {
  9918                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  9919                           
  9920                           ; BSR set to: 0
  9921  0033D4  0E00               	movlw	0
  9922  0033D6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9923  0033D8  0E01               	movlw	1
  9924  0033DA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9925  0033DC  0ED7               	movlw	low _USBActiveConfiguration
  9926  0033DE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9927  0033E0  0E00               	movlw	high _USBActiveConfiguration
  9928  0033E2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9929  0033E4  0E00               	movlw	0
  9930  0033E6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9931  0033E8  0E01               	movlw	1
  9932  0033EA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9933  0033EC  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9934                           
  9935                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  9936  0033F0  0E20               	movlw	32
  9937  0033F2  0100               	movlb	0	; () banked
  9938  0033F4  6FCE               	movwf	_USBDeviceState& (0+255),b
  9939  0033F6  0012               	return	
  9940  0033F8                     __end_of_USBStdSetCfgHandler:
  9941                           	opt stack 0
  9942                           tosu	equ	0xFFF
  9943                           tosh	equ	0xFFE
  9944                           tosl	equ	0xFFD
  9945                           pclath	equ	0xFFA
  9946                           tblptru	equ	0xFF8
  9947                           tblptrh	equ	0xFF7
  9948                           tblptrl	equ	0xFF6
  9949                           tablat	equ	0xFF5
  9950                           prodh	equ	0xFF4
  9951                           prodl	equ	0xFF3
  9952                           intcon	equ	0xFF2
  9953                           intcon2	equ	0xFF1
  9954                           intcon3	equ	0xFF0
  9955                           postinc0	equ	0xFEE
  9956                           plusw0	equ	0xFEB
  9957                           wreg	equ	0xFE8
  9958                           postinc1	equ	0xFE6
  9959                           postdec1	equ	0xFE5
  9960                           fsr1h	equ	0xFE2
  9961                           fsr1l	equ	0xFE1
  9962                           indf2	equ	0xFDF
  9963                           postinc2	equ	0xFDE
  9964                           postdec2	equ	0xFDD
  9965                           plusw2	equ	0xFDB
  9966                           fsr2h	equ	0xFDA
  9967                           fsr2l	equ	0xFD9
  9968                           status	equ	0xFD8
  9969                           
  9970 ;; *************** function _USBStdGetStatusHandler *****************
  9971 ;; Defined at:
  9972 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;  p               2   30[BANK0 ] PTR struct __BDT
  9977 ;;		 -> NULL(0), BDT(48), 
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;Total ram usage:        3 bytes
  9992 ;; Hardware stack levels used:    1
  9993 ;; Hardware stack levels required when called:   11
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_USBCheckStdRequest
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text41
 10002  0040DE                     __ptext41:
 10003                           	opt stack 0
 10004  0040DE                     _USBStdGetStatusHandler:
 10005                           	opt stack 12
 10006                           
 10007                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;incstack = 0
 10011  0040DE  0E00               	movlw	0
 10012  0040E0  0104               	movlb	4	; () banked
 10013  0040E2  6F38               	movwf	56,b	;volatile
 10014                           
 10015                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10016  0040E4  0E00               	movlw	0
 10017  0040E6  6F39               	movwf	57,b	;volatile
 10018                           
 10019                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10020  0040E8  D03D               	goto	l1743
 10021  0040EA                     l1744:
 10022                           
 10023                           ; BSR set to: 4
 10024                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10025  0040EA  0100               	movlb	0	; () banked
 10026  0040EC  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10027                           
 10028                           ;usb_device.c: 2163: }
 10029                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10030                           
 10031                           ; BSR set to: 4
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;usb_device.c: 2161: {
 10035                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10036                           
 10037                           ;usb_device.c: 2160: if(0 == 1)
 10038  0040EE  0101               	movlb	1	; () banked
 10039  0040F0  05E6               	decf	_RemoteWakeup& (0+255),w,b
 10040  0040F2  A4D8               	btfss	status,2,c
 10041  0040F4  D042               	goto	l1747
 10042                           
 10043                           ; BSR set to: 1
 10044                           ;usb_device.c: 2166: {
 10045                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10046  0040F6  0104               	movlb	4	; () banked
 10047  0040F8  8338               	bsf	56,1,b	;volatile
 10048                           
 10049                           ; BSR set to: 4
 10050                           ;usb_device.c: 2168: }
 10051                           ;usb_device.c: 2169: break;
 10052  0040FA  D03F               	goto	l1747
 10053  0040FC                     l1748:
 10054                           
 10055                           ; BSR set to: 4
 10056                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10057  0040FC  0100               	movlb	0	; () banked
 10058  0040FE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10059                           
 10060                           ;usb_device.c: 2172: break;
 10061  004100  D03C               	goto	l1747
 10062  004102                     l1749:
 10063                           
 10064                           ; BSR set to: 4
 10065                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10066  004102  0100               	movlb	0	; () banked
 10067  004104  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10068                           
 10069                           ;usb_device.c: 2178: {
 10070                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10071                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10072  004106  0104               	movlb	4	; () banked
 10073  004108  BF34               	btfsc	52,7,b	;volatile
 10074  00410A  D00B               	goto	l1750
 10075                           
 10076                           ; BSR set to: 4
 10077                           ;usb_device.c: 2182: {
 10078                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10079  00410C  5134               	movf	52,w,b	;volatile
 10080  00410E  0B0F               	andlw	15
 10081  004110  0100               	movlb	0	; () banked
 10082  004112  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10083  004114  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10084  004116  0D02               	mullw	2
 10085  004118  0E0E               	movlw	low _pBDTEntryOut
 10086  00411A  24F3               	addwf	prodl,w,c
 10087  00411C  6ED9               	movwf	fsr2l,c
 10088  00411E  0E03               	movlw	high _pBDTEntryOut
 10089  004120  D00B               	goto	L4
 10090  004122                     l1750:
 10091                           
 10092                           ;usb_device.c: 2185: else
 10093                           ;usb_device.c: 2186: {
 10094                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10095                           
 10096                           ; BSR set to: 0
 10097  004122  0104               	movlb	4	; () banked
 10098  004124  5134               	movf	52,w,b	;volatile
 10099  004126  0B0F               	andlw	15
 10100  004128  0100               	movlb	0	; () banked
 10101  00412A  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10102  00412C  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10103  00412E  0D02               	mullw	2
 10104  004130  0EB6               	movlw	low _pBDTEntryIn
 10105  004132  24F3               	addwf	prodl,w,c
 10106  004134  6ED9               	movwf	fsr2l,c
 10107  004136  0E00               	movlw	high _pBDTEntryIn
 10108  004138                     L4:
 10109  004138  20F4               	addwfc	prodh,w,c
 10110  00413A  6EDA               	movwf	fsr2h,c
 10111  00413C  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10112  004140  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;usb_device.c: 2188: }
 10116                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10117                           
 10118                           ; BSR set to: 0
 10119  004144  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10120  004148  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10121  00414C  AEDF               	btfss	indf2,7,c
 10122  00414E  D015               	goto	l1747
 10123                           
 10124                           ; BSR set to: 0
 10125  004150  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10126  004154  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10127  004158  A4DF               	btfss	indf2,2,c
 10128  00415A  D00F               	goto	l1747
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10132  00415C  0E01               	movlw	1
 10133  00415E  0104               	movlb	4	; () banked
 10134  004160  6F38               	movwf	56,b	;volatile
 10135                           
 10136                           ; BSR set to: 4
 10137                           ;usb_device.c: 2193: }
 10138                           ;usb_device.c: 2194: }
 10139                           
 10140                           ; BSR set to: 4
 10141                           ;usb_device.c: 2192: break;
 10142  004162  D00B               	goto	l1747
 10143  004164                     l1743:
 10144                           
 10145                           ; BSR set to: 4
 10146                           
 10147                           ; BSR set to: 4
 10148  004164  5130               	movf	48,w,b	;volatile
 10149  004166  0B1F               	andlw	31
 10150                           
 10151                           ; Switch size 1, requested type "space"
 10152                           ; Number of cases is 3, Range of values is 0 to 2
 10153                           ; switch strategies available:
 10154                           ; Name         Instructions Cycles
 10155                           ; simple_byte           10     6 (average)
 10156                           ;	Chosen strategy is simple_byte
 10157  004168  0A00               	xorlw	0	; case 0
 10158  00416A  B4D8               	btfsc	status,2,c
 10159  00416C  D7BE               	goto	l1744
 10160  00416E  0A01               	xorlw	1	; case 1
 10161  004170  B4D8               	btfsc	status,2,c
 10162  004172  D7C4               	goto	l1748
 10163  004174  0A03               	xorlw	3	; case 2
 10164  004176  B4D8               	btfsc	status,2,c
 10165  004178  D7C4               	goto	l1749
 10166  00417A                     l1747:
 10167                           
 10168                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10169  00417A  0100               	movlb	0	; () banked
 10170  00417C  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10171  00417E  0012               	return	
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;usb_device.c: 2197: {
 10175                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10176  004180  0E38               	movlw	56
 10177  004182  6FB0               	movwf	_inPipes& (0+255),b
 10178  004184  0E04               	movlw	4
 10179  004186  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10183  004188  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10187  00418A  0E02               	movlw	2
 10188  00418C  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10189  00418E  0012               	return	
 10190  004190                     __end_of_USBStdGetStatusHandler:
 10191                           	opt stack 0
 10192                           tosu	equ	0xFFF
 10193                           tosh	equ	0xFFE
 10194                           tosl	equ	0xFFD
 10195                           pclath	equ	0xFFA
 10196                           tblptru	equ	0xFF8
 10197                           tblptrh	equ	0xFF7
 10198                           tblptrl	equ	0xFF6
 10199                           tablat	equ	0xFF5
 10200                           prodh	equ	0xFF4
 10201                           prodl	equ	0xFF3
 10202                           intcon	equ	0xFF2
 10203                           intcon2	equ	0xFF1
 10204                           intcon3	equ	0xFF0
 10205                           postinc0	equ	0xFEE
 10206                           plusw0	equ	0xFEB
 10207                           wreg	equ	0xFE8
 10208                           postinc1	equ	0xFE6
 10209                           postdec1	equ	0xFE5
 10210                           fsr1h	equ	0xFE2
 10211                           fsr1l	equ	0xFE1
 10212                           indf2	equ	0xFDF
 10213                           postinc2	equ	0xFDE
 10214                           postdec2	equ	0xFDD
 10215                           plusw2	equ	0xFDB
 10216                           fsr2h	equ	0xFDA
 10217                           fsr2l	equ	0xFD9
 10218                           status	equ	0xFD8
 10219                           
 10220 ;; *************** function _USBStdGetDscHandler *****************
 10221 ;; Defined at:
 10222 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;Total ram usage:        2 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:   11
 10243 ;; This function calls:
 10244 ;;		Nothing
 10245 ;; This function is called by:
 10246 ;;		_USBCheckStdRequest
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text42
 10251  002BAE                     __ptext42:
 10252                           	opt stack 0
 10253  002BAE                     _USBStdGetDscHandler:
 10254                           	opt stack 12
 10255                           
 10256                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;incstack = 0
 10260  002BAE  0E80               	movlw	128
 10261  002BB0  0104               	movlb	4	; () banked
 10262  002BB2  1930               	xorwf	48,w,b	;volatile
 10263  002BB4  A4D8               	btfss	status,2,c
 10264  002BB6  0012               	return	
 10265                           
 10266                           ; BSR set to: 4
 10267                           ;usb_device.c: 2064: {
 10268                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10269  002BB8  0EC0               	movlw	192
 10270  002BBA  0100               	movlb	0	; () banked
 10271  002BBC  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10272                           
 10273                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10274  002BBE  D082               	goto	l1730
 10275  002BC0                     
 10276                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10277                           
 10278                           ; BSR set to: 0
 10279  002BC0  0E56               	movlw	low _device_dsc
 10280  002BC2  0100               	movlb	0	; () banked
 10281  002BC4  6FB0               	movwf	_inPipes& (0+255),b
 10282  002BC6  0EFE               	movlw	high _device_dsc
 10283  002BC8  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10287  002BCA  0E00               	movlw	0
 10288  002BCC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10289  002BCE  0E12               	movlw	18
 10290  002BD0  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10291                           
 10292                           ;usb_device.c: 2076: break;
 10293  002BD2  0012               	return	
 10294  002BD4                     
 10295                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10296                           
 10297                           ; BSR set to: 0
 10298  002BD4  0104               	movlb	4	; () banked
 10299  002BD6  5132               	movf	50,w,b	;volatile
 10300  002BD8  A4D8               	btfss	status,2,c
 10301  002BDA  D040               	goto	l1734
 10302                           
 10303                           ; BSR set to: 4
 10304                           ;usb_device.c: 2082: {
 10305                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10306  002BDC  5132               	movf	50,w,b	;volatile
 10307  002BDE  0D02               	mullw	2
 10308  002BE0  0E3B               	movlw	low _USB_CD_Ptr
 10309  002BE2  24F3               	addwf	prodl,w,c
 10310  002BE4  6EF6               	movwf	tblptrl,c
 10311  002BE6  0EFC               	movlw	high _USB_CD_Ptr
 10312  002BE8  20F4               	addwfc	prodh,w,c
 10313  002BEA  6EF7               	movwf	tblptrh,c
 10314  002BEC                     	if	0	;There are less than 3 active tblptr bytes
 10315  002BEC                     	endif
 10316  002BEC  0009               	tblrd		*+
 10317  002BEE  CFF5 F0B0          	movff	tablat,_inPipes
 10318  002BF2  000A               	tblrd		*-
 10319  002BF4  CFF5 F0B1          	movff	tablat,_inPipes+1
 10320                           
 10321                           ; BSR set to: 4
 10322                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10323  002BF8  0E02               	movlw	2
 10324  002BFA  0100               	movlb	0	; () banked
 10325  002BFC  25B0               	addwf	_inPipes& (0+255),w,b
 10326  002BFE  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10327  002C00  0E00               	movlw	0
 10328  002C02  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10329  002C04  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10330  002C06  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10331  002C0A  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10332  002C0E  6AF8               	clrf	tblptru,c
 10333  002C10  0E0E               	movlw	(high __ramtop+-1)
 10334  002C12  64F7               	cpfsgt	tblptrh,c
 10335  002C14  D003               	bra	u10597
 10336  002C16  0008               	tblrd		*
 10337  002C18  50F5               	movf	tablat,w,c
 10338  002C1A  D005               	bra	u10590
 10339  002C1C                     u10597:
 10340  002C1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10341  002C20  CFF7 FFEA          	movff	tblptrh,fsr0h
 10342  002C24  50EF               	movf	indf0,w,c
 10343  002C26                     u10590:
 10344  002C26  0100               	movlb	0	; () banked
 10345  002C28  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10349  002C2A  0E03               	movlw	3
 10350  002C2C  25B0               	addwf	_inPipes& (0+255),w,b
 10351  002C2E  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10352  002C30  0E00               	movlw	0
 10353  002C32  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10354  002C34  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10355  002C36  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10356  002C3A  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10357  002C3E  6AF8               	clrf	tblptru,c
 10358  002C40  0E0E               	movlw	(high __ramtop+-1)
 10359  002C42  64F7               	cpfsgt	tblptrh,c
 10360  002C44  D003               	bra	u10607
 10361  002C46  0008               	tblrd		*
 10362  002C48  50F5               	movf	tablat,w,c
 10363  002C4A  D005               	bra	u10600
 10364  002C4C                     u10607:
 10365  002C4C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10366  002C50  CFF7 FFEA          	movff	tblptrh,fsr0h
 10367  002C54  50EF               	movf	indf0,w,c
 10368  002C56                     u10600:
 10369  002C56  0100               	movlb	0	; () banked
 10370  002C58  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10371                           
 10372                           ;usb_device.c: 2094: }
 10373  002C5A  0012               	return	
 10374  002C5C                     l1734:
 10375                           
 10376                           ;usb_device.c: 2095: else
 10377                           ;usb_device.c: 2096: {
 10378                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10379                           
 10380                           ; BSR set to: 0
 10381  002C5C  0E00               	movlw	0
 10382  002C5E  0100               	movlb	0	; () banked
 10383  002C60  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;usb_device.c: 2098: }
 10387                           ;usb_device.c: 2099: break;
 10388  002C62  0012               	return	
 10389  002C64                     
 10390                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10391                           
 10392                           ; BSR set to: 0
 10393  002C64  0E03               	movlw	3
 10394  002C66  0104               	movlb	4	; () banked
 10395  002C68  6132               	cpfslt	50,b	;volatile
 10396  002C6A  D024               	goto	l1737
 10397                           
 10398                           ; BSR set to: 4
 10399                           ;usb_device.c: 2105: {
 10400                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10401  002C6C  5132               	movf	50,w,b	;volatile
 10402  002C6E  0D02               	mullw	2
 10403  002C70  0E35               	movlw	low _USB_SD_Ptr
 10404  002C72  24F3               	addwf	prodl,w,c
 10405  002C74  6EF6               	movwf	tblptrl,c
 10406  002C76  0EFC               	movlw	high _USB_SD_Ptr
 10407  002C78  20F4               	addwfc	prodh,w,c
 10408  002C7A  6EF7               	movwf	tblptrh,c
 10409  002C7C                     	if	0	;There are less than 3 active tblptr bytes
 10410  002C7C                     	endif
 10411  002C7C  0009               	tblrd		*+
 10412  002C7E  CFF5 F0B0          	movff	tablat,_inPipes
 10413  002C82  000A               	tblrd		*-
 10414  002C84  CFF5 F0B1          	movff	tablat,_inPipes+1
 10415                           
 10416                           ; BSR set to: 4
 10417                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10418  002C88  C0B0  FFF6         	movff	_inPipes,tblptrl
 10419  002C8C  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10420  002C90  6AF8               	clrf	tblptru,c
 10421  002C92  0E0E               	movlw	(high __ramtop+-1)
 10422  002C94  64F7               	cpfsgt	tblptrh,c
 10423  002C96  D003               	bra	u10627
 10424  002C98  0008               	tblrd		*
 10425  002C9A  50F5               	movf	tablat,w,c
 10426  002C9C  D005               	bra	u10620
 10427  002C9E                     u10627:
 10428  002C9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10429  002CA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10430  002CA6  50EF               	movf	indf0,w,c
 10431  002CA8                     u10620:
 10432  002CA8  0100               	movlb	0	; () banked
 10433  002CAA  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10434  002CAC  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10435  002CAE  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10436  002CB0  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10437                           
 10438                           ;usb_device.c: 2110: }
 10439  002CB2  0012               	return	
 10440  002CB4                     l1737:
 10441                           
 10442                           ;usb_device.c: 2120: else
 10443                           ;usb_device.c: 2121: {
 10444                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10445                           
 10446                           ; BSR set to: 0
 10447  002CB4  0E00               	movlw	0
 10448  002CB6  0100               	movlb	0	; () banked
 10449  002CB8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;usb_device.c: 2123: }
 10453                           ;usb_device.c: 2124: break;
 10454  002CBA  0012               	return	
 10455  002CBC                     
 10456                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10457                           
 10458                           ; BSR set to: 0
 10459  002CBC  0E00               	movlw	0
 10460  002CBE  0100               	movlb	0	; () banked
 10461  002CC0  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;usb_device.c: 2128: }
 10465                           
 10466                           ;usb_device.c: 2127: break;
 10467  002CC2  0012               	return	
 10468  002CC4                     l1730:
 10469                           
 10470                           ; BSR set to: 0
 10471                           
 10472                           ; BSR set to: 0
 10473  002CC4  0104               	movlb	4	; () banked
 10474  002CC6  5133               	movf	51,w,b	;volatile
 10475                           
 10476                           ; Switch size 1, requested type "space"
 10477                           ; Number of cases is 3, Range of values is 1 to 3
 10478                           ; switch strategies available:
 10479                           ; Name         Instructions Cycles
 10480                           ; simple_byte           10     6 (average)
 10481                           ;	Chosen strategy is simple_byte
 10482  002CC8  0A01               	xorlw	1	; case 1
 10483  002CCA  B4D8               	btfsc	status,2,c
 10484  002CCC  D779               	goto	l1731
 10485  002CCE  0A03               	xorlw	3	; case 2
 10486  002CD0  B4D8               	btfsc	status,2,c
 10487  002CD2  D780               	goto	l1733
 10488  002CD4  0A01               	xorlw	1	; case 3
 10489  002CD6  B4D8               	btfsc	status,2,c
 10490  002CD8  D7C5               	goto	l1736
 10491  002CDA  D7F0               	goto	l1739
 10492  002CDC                     __end_of_USBStdGetDscHandler:
 10493                           	opt stack 0
 10494                           tosu	equ	0xFFF
 10495                           tosh	equ	0xFFE
 10496                           tosl	equ	0xFFD
 10497                           pclath	equ	0xFFA
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           intcon	equ	0xFF2
 10505                           intcon2	equ	0xFF1
 10506                           intcon3	equ	0xFF0
 10507                           indf0	equ	0xFEF
 10508                           postinc0	equ	0xFEE
 10509                           plusw0	equ	0xFEB
 10510                           fsr0h	equ	0xFEA
 10511                           fsr0l	equ	0xFE9
 10512                           wreg	equ	0xFE8
 10513                           postinc1	equ	0xFE6
 10514                           postdec1	equ	0xFE5
 10515                           fsr1h	equ	0xFE2
 10516                           fsr1l	equ	0xFE1
 10517                           indf2	equ	0xFDF
 10518                           postinc2	equ	0xFDE
 10519                           postdec2	equ	0xFDD
 10520                           plusw2	equ	0xFDB
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525 ;; *************** function _USBStdFeatureReqHandler *****************
 10526 ;; Defined at:
 10527 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10532 ;;		 -> NULL(0), BDT(48), 
 10533 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10534 ;;		 -> UEP0(1), 
 10535 ;;  current_ep_d    1   52[BANK0 ] struct .
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10546 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10548 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10549 ;;Total ram usage:        6 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:   15
 10552 ;; This function calls:
 10553 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10554 ;; This function is called by:
 10555 ;;		_USBCheckStdRequest
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text43
 10560  00135A                     __ptext43:
 10561                           	opt stack 0
 10562  00135A                     _USBStdFeatureReqHandler:
 10563                           	opt stack 8
 10564                           
 10565                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10566                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10567                           ;usb_device.c: 2778: unsigned char* pUEP;
 10568                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10569                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10570                           
 10571                           ;incstack = 0
 10572  00135A  0104               	movlb	4	; () banked
 10573  00135C  0532               	decf	50,w,b	;volatile
 10574  00135E  A4D8               	btfss	status,2,c
 10575  001360  D011               	goto	l1823
 10576                           
 10577                           ; BSR set to: 4
 10578  001362  5130               	movf	48,w,b	;volatile
 10579  001364  0B1F               	andlw	31
 10580  001366  0900               	iorlw	0
 10581  001368  A4D8               	btfss	status,2,c
 10582  00136A  D00C               	goto	l1823
 10583                           
 10584                           ; BSR set to: 4
 10585                           ;usb_device.c: 2818: {
 10586                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10587  00136C  0100               	movlb	0	; () banked
 10588  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10592  001370  0E03               	movlw	3
 10593  001372  0104               	movlb	4	; () banked
 10594  001374  1931               	xorwf	49,w,b	;volatile
 10595  001376  A4D8               	btfss	status,2,c
 10596  001378  D002               	goto	l1822
 10597                           
 10598                           ; BSR set to: 4
 10599                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10600  00137A  0E01               	movlw	1
 10601  00137C  D001               	goto	L5
 10602  00137E                     l1822:
 10603                           
 10604                           ;usb_device.c: 2822: else
 10605                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10606                           
 10607                           ; BSR set to: 1
 10608  00137E  0E00               	movlw	0
 10609  001380                     L5:
 10610  001380  0101               	movlb	1	; () banked
 10611  001382  6FE6               	movwf	_RemoteWakeup& (0+255),b
 10612  001384                     l1823:
 10613                           
 10614                           ;usb_device.c: 2824: }
 10615                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10616                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10617                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10618                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10619                           
 10620                           ; BSR set to: 1
 10621  001384  0104               	movlb	4	; () banked
 10622  001386  5132               	movf	50,w,b	;volatile
 10623  001388  A4D8               	btfss	status,2,c
 10624  00138A  0012               	return	
 10625                           
 10626                           ; BSR set to: 4
 10627  00138C  5130               	movf	48,w,b	;volatile
 10628  00138E  0B1F               	andlw	31
 10629  001390  0A02               	xorlw	2
 10630  001392  A4D8               	btfss	status,2,c
 10631  001394  0012               	return	
 10632                           
 10633                           ; BSR set to: 4
 10634  001396  5134               	movf	52,w,b	;volatile
 10635  001398  0B0F               	andlw	15
 10636  00139A  0900               	iorlw	0
 10637  00139C  B4D8               	btfsc	status,2,c
 10638  00139E  0012               	return	
 10639                           
 10640                           ; BSR set to: 4
 10641  0013A0  5134               	movf	52,w,b	;volatile
 10642  0013A2  0B0F               	andlw	15
 10643  0013A4  0100               	movlb	0	; () banked
 10644  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10645  0013A8  0E03               	movlw	3
 10646  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10647  0013AC  0012               	return	
 10648                           
 10649                           ; BSR set to: 0
 10650  0013AE  0E20               	movlw	32
 10651  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10652  0013B2  A4D8               	btfss	status,2,c
 10653  0013B4  0012               	return	
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;usb_device.c: 2831: {
 10657                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10658  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10659                           
 10660                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10661  0013B8  0104               	movlb	4	; () banked
 10662  0013BA  BF34               	btfsc	52,7,b	;volatile
 10663  0013BC  D01C               	goto	l1825
 10664                           
 10665                           ; BSR set to: 4
 10666                           ;usb_device.c: 2838: {
 10667                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10668  0013BE  5134               	movf	52,w,b	;volatile
 10669  0013C0  0B0F               	andlw	15
 10670  0013C2  0100               	movlb	0	; () banked
 10671  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10672  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10673  0013C8  0D02               	mullw	2
 10674  0013CA  0E0E               	movlw	low _pBDTEntryOut
 10675  0013CC  24F3               	addwf	prodl,w,c
 10676  0013CE  6ED9               	movwf	fsr2l,c
 10677  0013D0  0E03               	movlw	high _pBDTEntryOut
 10678  0013D2  20F4               	addwfc	prodh,w,c
 10679  0013D4  6EDA               	movwf	fsr2h,c
 10680  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10681  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10682                           
 10683                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10684  0013DE  0104               	movlb	4	; () banked
 10685  0013E0  5134               	movf	52,w,b	;volatile
 10686  0013E2  0B0F               	andlw	15
 10687  0013E4  0100               	movlb	0	; () banked
 10688  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10689  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10690  0013EA  0D01               	mullw	1
 10691  0013EC  0ECE               	movlw	low _ep_data_out
 10692  0013EE  24F3               	addwf	prodl,w,c
 10693  0013F0  6ED9               	movwf	fsr2l,c
 10694  0013F2  0E02               	movlw	high _ep_data_out
 10695  0013F4  D01C               	goto	L6
 10696  0013F6                     l1825:
 10697                           
 10698                           ;usb_device.c: 2842: else
 10699                           ;usb_device.c: 2843: {
 10700                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10701                           
 10702                           ; BSR set to: 0
 10703  0013F6  0104               	movlb	4	; () banked
 10704  0013F8  5134               	movf	52,w,b	;volatile
 10705  0013FA  0B0F               	andlw	15
 10706  0013FC  0100               	movlb	0	; () banked
 10707  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10708  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10709  001402  0D02               	mullw	2
 10710  001404  0EB6               	movlw	low _pBDTEntryIn
 10711  001406  24F3               	addwf	prodl,w,c
 10712  001408  6ED9               	movwf	fsr2l,c
 10713  00140A  0E00               	movlw	high _pBDTEntryIn
 10714  00140C  20F4               	addwfc	prodh,w,c
 10715  00140E  6EDA               	movwf	fsr2h,c
 10716  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10717  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10718                           
 10719                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10720  001418  0104               	movlb	4	; () banked
 10721  00141A  5134               	movf	52,w,b	;volatile
 10722  00141C  0B0F               	andlw	15
 10723  00141E  0100               	movlb	0	; () banked
 10724  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10725  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10726  001424  0D01               	mullw	1
 10727  001426  0ED1               	movlw	low _ep_data_in
 10728  001428  24F3               	addwf	prodl,w,c
 10729  00142A  6ED9               	movwf	fsr2l,c
 10730  00142C  0E02               	movlw	high _ep_data_in
 10731  00142E                     L6:
 10732  00142E  20F4               	addwfc	prodh,w,c
 10733  001430  6EDA               	movwf	fsr2h,c
 10734  001432  50DF               	movf	indf2,w,c
 10735  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;usb_device.c: 2846: }
 10739                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10740                           
 10741                           ; BSR set to: 0
 10742  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10743  001438  D002               	goto	l1827
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;usb_device.c: 2853: {
 10747                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10748  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10749                           
 10750                           ;usb_device.c: 2855: }
 10751  00143C  D001               	goto	l1828
 10752  00143E                     l1827:
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;usb_device.c: 2856: else
 10756                           ;usb_device.c: 2857: {
 10757                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10758                           
 10759                           ; BSR set to: 0
 10760  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10761  001440                     l1828:
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;usb_device.c: 2859: }
 10765                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10766                           
 10767                           ; BSR set to: 0
 10768  001440  0104               	movlb	4	; () banked
 10769  001442  BF34               	btfsc	52,7,b	;volatile
 10770  001444  D00B               	goto	l1829
 10771                           
 10772                           ; BSR set to: 4
 10773                           ;usb_device.c: 2865: {
 10774                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10775  001446  5134               	movf	52,w,b	;volatile
 10776  001448  0B0F               	andlw	15
 10777  00144A  0100               	movlb	0	; () banked
 10778  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10779  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10780  001450  0D02               	mullw	2
 10781  001452  0E0E               	movlw	low _pBDTEntryOut
 10782  001454  24F3               	addwf	prodl,w,c
 10783  001456  6ED9               	movwf	fsr2l,c
 10784  001458  0E03               	movlw	high _pBDTEntryOut
 10785  00145A  D00B               	goto	L7
 10786  00145C                     l1829:
 10787                           
 10788                           ;usb_device.c: 2868: else
 10789                           ;usb_device.c: 2869: {
 10790                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10791                           
 10792                           ; BSR set to: 0
 10793  00145C  0104               	movlb	4	; () banked
 10794  00145E  5134               	movf	52,w,b	;volatile
 10795  001460  0B0F               	andlw	15
 10796  001462  0100               	movlb	0	; () banked
 10797  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10798  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10799  001468  0D02               	mullw	2
 10800  00146A  0EB6               	movlw	low _pBDTEntryIn
 10801  00146C  24F3               	addwf	prodl,w,c
 10802  00146E  6ED9               	movwf	fsr2l,c
 10803  001470  0E00               	movlw	high _pBDTEntryIn
 10804  001472                     L7:
 10805  001472  20F4               	addwfc	prodh,w,c
 10806  001474  6EDA               	movwf	fsr2h,c
 10807  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 10808  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;usb_device.c: 2871: }
 10812                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 10813                           
 10814                           ; BSR set to: 0
 10815  00147E  0E03               	movlw	3
 10816  001480  0104               	movlb	4	; () banked
 10817  001482  1931               	xorwf	49,w,b	;volatile
 10818  001484  A4D8               	btfss	status,2,c
 10819  001486  D031               	goto	l1831
 10820                           
 10821                           ; BSR set to: 4
 10822                           ;usb_device.c: 2875: {
 10823                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 10824  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10825  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10826  001490  0100               	movlb	0	; () banked
 10827  001492  AEDF               	btfss	indf2,7,c
 10828  001494  D01D               	goto	l1834
 10829                           
 10830                           ; BSR set to: 0
 10831                           ;usb_device.c: 2877: {
 10832                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 10833  001496  0104               	movlb	4	; () banked
 10834  001498  BF34               	btfsc	52,7,b	;volatile
 10835  00149A  D00B               	goto	l1833
 10836                           
 10837                           ; BSR set to: 4
 10838                           ;usb_device.c: 2881: {
 10839                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10840  00149C  5134               	movf	52,w,b	;volatile
 10841  00149E  0B0F               	andlw	15
 10842  0014A0  0100               	movlb	0	; () banked
 10843  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10844  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10845  0014A6  0D01               	mullw	1
 10846  0014A8  0ECE               	movlw	low _ep_data_out
 10847  0014AA  24F3               	addwf	prodl,w,c
 10848  0014AC  6ED9               	movwf	fsr2l,c
 10849  0014AE  0E02               	movlw	high _ep_data_out
 10850  0014B0  D00B               	goto	L8
 10851  0014B2                     l1833:
 10852                           
 10853                           ;usb_device.c: 2884: else
 10854                           ;usb_device.c: 2885: {
 10855                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 10856                           
 10857                           ; BSR set to: 2
 10858  0014B2  0104               	movlb	4	; () banked
 10859  0014B4  5134               	movf	52,w,b	;volatile
 10860  0014B6  0B0F               	andlw	15
 10861  0014B8  0100               	movlb	0	; () banked
 10862  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10863  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10864  0014BE  0D01               	mullw	1
 10865  0014C0  0ED1               	movlw	low _ep_data_in
 10866  0014C2  24F3               	addwf	prodl,w,c
 10867  0014C4  6ED9               	movwf	fsr2l,c
 10868  0014C6  0E02               	movlw	high _ep_data_in
 10869  0014C8                     L8:
 10870  0014C8  20F4               	addwfc	prodh,w,c
 10871  0014CA  6EDA               	movwf	fsr2h,c
 10872  0014CC  0102               	movlb	2	; () banked
 10873  0014CE  82DF               	bsf	indf2,1,c
 10874  0014D0                     l1834:
 10875                           
 10876                           ;usb_device.c: 2887: }
 10877                           ;usb_device.c: 2888: }
 10878                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 10879                           
 10880                           ; BSR set to: 2
 10881                           
 10882                           ; BSR set to: 2
 10883  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10884  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10885  0014D8  0E00               	movlw	0
 10886  0014DA  84DB               	bsf	plusw2,2,c
 10887                           
 10888                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 10889  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10890  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10891  0014E4  0E00               	movlw	0
 10892  0014E6  8EDB               	bsf	plusw2,7,c
 10893                           
 10894                           ;usb_device.c: 2893: }
 10895  0014E8  0012               	return	
 10896  0014EA                     l1831:
 10897                           
 10898                           ;usb_device.c: 2894: else
 10899                           ;usb_device.c: 2895: {
 10900                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10901  0014EA  0E04               	movlw	4
 10902  0014EC  0100               	movlb	0	; () banked
 10903  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 10907  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10908  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10909  0014F8  AEDF               	btfss	indf2,7,c
 10910  0014FA  D01B               	goto	l1836
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;usb_device.c: 2902: {
 10914                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 10915  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10916  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10917  001504  0E7F               	movlw	127
 10918  001506  16DF               	andwf	indf2,f,c
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 10922  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10923  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10924  001510  0E00               	movlw	0
 10925  001512  8CDB               	bsf	plusw2,6,c
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 10929  001514  0E00               	movlw	0
 10930  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10931  001518  0E05               	movlw	5
 10932  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10933  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10934  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10935  001524  0E00               	movlw	0
 10936  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10937  001528  0E02               	movlw	2
 10938  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10939  00152C  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10940                           
 10941                           ;usb_device.c: 2908: }
 10942  001530  D006               	goto	l1837
 10943  001532                     l1836:
 10944                           
 10945                           ;usb_device.c: 2909: else
 10946                           ;usb_device.c: 2910: {
 10947                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 10948  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10949  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10950  00153A  0E00               	movlw	0
 10951  00153C  8CDB               	bsf	plusw2,6,c
 10952  00153E                     l1837:
 10953                           
 10954                           ;usb_device.c: 2913: }
 10955                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 10956  00153E  0E04               	movlw	4
 10957  001540  0100               	movlb	0	; () banked
 10958  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 10962  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 10963  001546  D006               	goto	u10840
 10964                           
 10965                           ; BSR set to: 0
 10966  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 10967  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 10968  001550  AEDF               	btfss	indf2,7,c
 10969  001552  D033               	goto	l1838
 10970  001554                     u10840:
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;usb_device.c: 2924: {
 10974                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 10975  001554  0104               	movlb	4	; () banked
 10976  001556  BF34               	btfsc	52,7,b	;volatile
 10977  001558  D00B               	goto	l1841
 10978                           
 10979                           ; BSR set to: 4
 10980                           ;usb_device.c: 2926: {
 10981                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10982  00155A  5134               	movf	52,w,b	;volatile
 10983  00155C  0B0F               	andlw	15
 10984  00155E  0100               	movlb	0	; () banked
 10985  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10986  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10987  001564  0D01               	mullw	1
 10988  001566  0ECE               	movlw	low _ep_data_out
 10989  001568  24F3               	addwf	prodl,w,c
 10990  00156A  6ED9               	movwf	fsr2l,c
 10991  00156C  0E02               	movlw	high _ep_data_out
 10992  00156E  D00B               	goto	L9
 10993  001570                     l1841:
 10994                           
 10995                           ;usb_device.c: 2929: else
 10996                           ;usb_device.c: 2930: {
 10997                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 10998                           
 10999                           ; BSR set to: 2
 11000  001570  0104               	movlb	4	; () banked
 11001  001572  5134               	movf	52,w,b	;volatile
 11002  001574  0B0F               	andlw	15
 11003  001576  0100               	movlb	0	; () banked
 11004  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11005  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11006  00157C  0D01               	mullw	1
 11007  00157E  0ED1               	movlw	low _ep_data_in
 11008  001580  24F3               	addwf	prodl,w,c
 11009  001582  6ED9               	movwf	fsr2l,c
 11010  001584  0E02               	movlw	high _ep_data_in
 11011  001586                     L9:
 11012  001586  20F4               	addwfc	prodh,w,c
 11013  001588  6EDA               	movwf	fsr2h,c
 11014  00158A  0102               	movlb	2	; () banked
 11015  00158C  92DF               	bcf	indf2,1,c
 11016                           
 11017                           ; BSR set to: 2
 11018                           ;usb_device.c: 2932: }
 11019                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11020                           
 11021                           ; BSR set to: 2
 11022  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11023  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11024  001596  0E3B               	movlw	59
 11025  001598  16DF               	andwf	indf2,f,c
 11026                           
 11027                           ; BSR set to: 2
 11028                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11029  00159A  0E00               	movlw	0
 11030  00159C  0100               	movlb	0	; () banked
 11031  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11032  0015A0  0E05               	movlw	5
 11033  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11034  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11035  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11036  0015AC  0E00               	movlw	0
 11037  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11038  0015B0  0E02               	movlw	2
 11039  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11040  0015B4  EC70  F028         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11041                           
 11042                           ;usb_device.c: 2938: }
 11043  0015B8  D006               	goto	l1843
 11044  0015BA                     l1838:
 11045                           
 11046                           ;usb_device.c: 2939: else
 11047                           ;usb_device.c: 2940: {
 11048                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11049  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11050  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11051  0015C2  0E3B               	movlw	59
 11052  0015C4  16DF               	andwf	indf2,f,c
 11053  0015C6                     l1843:
 11054                           
 11055                           ;usb_device.c: 2943: }
 11056                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11057  0015C6  0104               	movlb	4	; () banked
 11058  0015C8  5134               	movf	52,w,b	;volatile
 11059  0015CA  0B0F               	andlw	15
 11060  0015CC  0100               	movlb	0	; () banked
 11061  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11062  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11063  0015D2  0D01               	mullw	1
 11064  0015D4  0E26               	movlw	38
 11065  0015D6  24F3               	addwf	prodl,w,c
 11066  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11067  0015DA  0E0F               	movlw	15
 11068  0015DC  20F4               	addwfc	prodh,w,c
 11069  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11073  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11074  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11075  0015E8  0EFE               	movlw	254
 11076  0015EA  16DF               	andwf	indf2,f,c
 11077                           
 11078                           ; BSR set to: 0
 11079  0015EC  0012               	return	
 11080  0015EE                     __end_of_USBStdFeatureReqHandler:
 11081                           	opt stack 0
 11082                           tosu	equ	0xFFF
 11083                           tosh	equ	0xFFE
 11084                           tosl	equ	0xFFD
 11085                           pclath	equ	0xFFA
 11086                           tblptru	equ	0xFF8
 11087                           tblptrh	equ	0xFF7
 11088                           tblptrl	equ	0xFF6
 11089                           tablat	equ	0xFF5
 11090                           prodh	equ	0xFF4
 11091                           prodl	equ	0xFF3
 11092                           intcon	equ	0xFF2
 11093                           intcon2	equ	0xFF1
 11094                           intcon3	equ	0xFF0
 11095                           indf0	equ	0xFEF
 11096                           postinc0	equ	0xFEE
 11097                           plusw0	equ	0xFEB
 11098                           fsr0h	equ	0xFEA
 11099                           fsr0l	equ	0xFE9
 11100                           wreg	equ	0xFE8
 11101                           postinc1	equ	0xFE6
 11102                           postdec1	equ	0xFE5
 11103                           fsr1h	equ	0xFE2
 11104                           fsr1l	equ	0xFE1
 11105                           indf2	equ	0xFDF
 11106                           postinc2	equ	0xFDE
 11107                           postdec2	equ	0xFDD
 11108                           plusw2	equ	0xFDB
 11109                           fsr2h	equ	0xFDA
 11110                           fsr2l	equ	0xFD9
 11111                           status	equ	0xFD8
 11112                           
 11113 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11114 ;; Defined at:
 11115 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  event           2   41[BANK0 ] enum E8363
 11118 ;;  pdata           2   43[BANK0 ] PTR void 
 11119 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11120 ;;  size            2   45[BANK0 ] unsigned int 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  1    wreg      unsigned char 
 11125 ;; Registers used:
 11126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11132 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11136 ;;Total ram usage:        8 bytes
 11137 ;; Hardware stack levels used:    1
 11138 ;; Hardware stack levels required when called:   14
 11139 ;; This function calls:
 11140 ;;		_CDCInitEP
 11141 ;;		_USBCheckCDCRequest
 11142 ;; This function is called by:
 11143 ;;		_USBDeviceTasks
 11144 ;;		_USBStdSetCfgHandler
 11145 ;;		_USBSuspend
 11146 ;;		_USBWakeFromSuspend
 11147 ;;		_USBCtrlTrfSetupHandler
 11148 ;;		_USBCheckStdRequest
 11149 ;;		_USBStdFeatureReqHandler
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text44
 11154  0050E0                     __ptext44:
 11155                           	opt stack 0
 11156  0050E0                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11157                           	opt stack 12
 11158                           
 11159                           ;usb_device_mgr.c: 106: switch( (int) event )
 11160                           
 11161                           ;incstack = 0
 11162  0050E0  D006               	goto	l1997
 11163  0050E2                     
 11164                           ;usb_device_mgr.c: 134: CDCInitEP();
 11165  0050E2  EC6D  F027         	call	_CDCInitEP	;wreg free
 11166                           
 11167                           ;usb_device_mgr.c: 142: break;
 11168                           
 11169                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11170                           
 11171                           ;usb_device_mgr.c: 139: break;
 11172  0050E6  0012               	return	
 11173  0050E8                     
 11174                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11175  0050E8  ECC8  F020         	call	_USBCheckCDCRequest	;wreg free
 11176                           
 11177                           ;usb_device_mgr.c: 163: }
 11178                           
 11179                           ;usb_device_mgr.c: 162: break;
 11180                           
 11181                           ;usb_device_mgr.c: 161: default:
 11182                           
 11183                           ;usb_device_mgr.c: 159: break;
 11184                           
 11185                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11186                           
 11187                           ;usb_device_mgr.c: 156: break;
 11188                           
 11189                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11190                           
 11191                           ;usb_device_mgr.c: 153: break;
 11192  0050EC  0012               	return	
 11193  0050EE                     l1997:
 11194  0050EE  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11195  0050F2  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11196                           
 11197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11198                           ; Switch size 1, requested type "space"
 11199                           ; Number of cases is 2, Range of values is 0 to 127
 11200                           ; switch strategies available:
 11201                           ; Name         Instructions Cycles
 11202                           ; simple_byte            7     4 (average)
 11203                           ;	Chosen strategy is simple_byte
 11204  0050F6  0100               	movlb	0	; () banked
 11205  0050F8  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11206  0050FA  0A00               	xorlw	0	; case 0
 11207  0050FC  B4D8               	btfsc	status,2,c
 11208  0050FE  D004               	goto	l15446
 11209  005100  0A7F               	xorlw	127	; case 127
 11210  005102  A4D8               	btfss	status,2,c
 11211  005104  0012               	return	
 11212  005106  D018               	goto	l15448
 11213  005108                     l15446:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ; Switch size 1, requested type "space"
 11217                           ; Number of cases is 8, Range of values is 1 to 117
 11218                           ; switch strategies available:
 11219                           ; Name         Instructions Cycles
 11220                           ; simple_byte           25    13 (average)
 11221                           ;	Chosen strategy is simple_byte
 11222  005108  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11223  00510A  0A01               	xorlw	1	; case 1
 11224  00510C  B4D8               	btfsc	status,2,c
 11225  00510E  D7E9               	goto	l2003
 11226  005110  0A03               	xorlw	3	; case 2
 11227  005112  B4D8               	btfsc	status,2,c
 11228  005114  0012               	return	
 11229  005116  0A01               	xorlw	1	; case 3
 11230  005118  B4D8               	btfsc	status,2,c
 11231  00511A  D7E6               	goto	l2005
 11232  00511C  0A06               	xorlw	6	; case 5
 11233  00511E  B4D8               	btfsc	status,2,c
 11234  005120  0012               	return	
 11235  005122  0A77               	xorlw	119	; case 114
 11236  005124  B4D8               	btfsc	status,2,c
 11237  005126  0012               	return	
 11238  005128  0A01               	xorlw	1	; case 115
 11239  00512A  B4D8               	btfsc	status,2,c
 11240  00512C  0012               	return	
 11241  00512E  0A07               	xorlw	7	; case 116
 11242  005130  B4D8               	btfsc	status,2,c
 11243  005132  0012               	return	
 11244  005134  0A01               	xorlw	1	; case 117
 11245  005136  0012               	return	
 11246  005138                     l15448:
 11247                           
 11248                           ; BSR set to: 0
 11249                           ; Switch size 1, requested type "space"
 11250                           ; Number of cases is 1, Range of values is 255 to 255
 11251                           ; switch strategies available:
 11252                           ; Name         Instructions Cycles
 11253                           ; simple_byte            4     3 (average)
 11254                           ;	Chosen strategy is simple_byte
 11255  005138  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11256  00513A  0AFF               	xorlw	255	; case 255
 11257  00513C  0012               	return	
 11258  00513E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11259                           	opt stack 0
 11260                           tosu	equ	0xFFF
 11261                           tosh	equ	0xFFE
 11262                           tosl	equ	0xFFD
 11263                           pclath	equ	0xFFA
 11264                           tblptru	equ	0xFF8
 11265                           tblptrh	equ	0xFF7
 11266                           tblptrl	equ	0xFF6
 11267                           tablat	equ	0xFF5
 11268                           prodh	equ	0xFF4
 11269                           prodl	equ	0xFF3
 11270                           intcon	equ	0xFF2
 11271                           intcon2	equ	0xFF1
 11272                           intcon3	equ	0xFF0
 11273                           indf0	equ	0xFEF
 11274                           postinc0	equ	0xFEE
 11275                           plusw0	equ	0xFEB
 11276                           fsr0h	equ	0xFEA
 11277                           fsr0l	equ	0xFE9
 11278                           wreg	equ	0xFE8
 11279                           postinc1	equ	0xFE6
 11280                           postdec1	equ	0xFE5
 11281                           fsr1h	equ	0xFE2
 11282                           fsr1l	equ	0xFE1
 11283                           indf2	equ	0xFDF
 11284                           postinc2	equ	0xFDE
 11285                           postdec2	equ	0xFDD
 11286                           plusw2	equ	0xFDB
 11287                           fsr2h	equ	0xFDA
 11288                           fsr2l	equ	0xFD9
 11289                           status	equ	0xFD8
 11290                           
 11291 ;; *************** function _USBCheckCDCRequest *****************
 11292 ;; Defined at:
 11293 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;		None
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		wreg, status,2, status,0
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;Total ram usage:        0 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:   11
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text45
 11322  004190                     __ptext45:
 11323                           	opt stack 0
 11324  004190                     _USBCheckCDCRequest:
 11325                           	opt stack 14
 11326                           
 11327                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11328                           
 11329                           ;incstack = 0
 11330  004190  0104               	movlb	4	; () banked
 11331  004192  5130               	movf	48,w,b	;volatile
 11332  004194  0B1F               	andlw	31
 11333  004196  06E8               	decf	wreg,f,c
 11334  004198  A4D8               	btfss	status,2,c
 11335  00419A  0012               	return	
 11336                           
 11337                           ; BSR set to: 4
 11338                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11339                           
 11340                           ; BSR set to: 4
 11341                           
 11342                           ; BSR set to: 4
 11343  00419C  3930               	swapf	48,w,b	;volatile
 11344  00419E  32E8               	rrcf	wreg,f,c
 11345  0041A0  0B03               	andlw	3
 11346  0041A2  06E8               	decf	wreg,f,c
 11347  0041A4  A4D8               	btfss	status,2,c
 11348  0041A6  0012               	return	
 11349                           
 11350                           ; BSR set to: 4
 11351                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11352                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11353                           
 11354                           ; BSR set to: 4
 11355                           
 11356                           ; BSR set to: 4
 11357  0041A8  5134               	movf	52,w,b	;volatile
 11358  0041AA  B4D8               	btfsc	status,2,c
 11359  0041AC  D037               	goto	l1899
 11360                           
 11361                           ; BSR set to: 4
 11362  0041AE  0534               	decf	52,w,b	;volatile
 11363  0041B0  A4D8               	btfss	status,2,c
 11364  0041B2  0012               	return	
 11365  0041B4  D033               	goto	l1899
 11366  0041B6                     
 11367                           ; BSR set to: 4
 11368                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11369                           
 11370                           ; BSR set to: 4
 11371  0041B6  0E74               	movlw	low _dummy_encapsulated_cmd_response
 11372  0041B8  0100               	movlb	0	; () banked
 11373  0041BA  6FB0               	movwf	_inPipes& (0+255),b
 11374  0041BC  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11375  0041BE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11379  0041C0  0E00               	movlw	0
 11380  0041C2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11381  0041C4  0E08               	movlw	8
 11382  0041C6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11386  0041C8  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11390  0041CA  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11391                           
 11392                           ;usb_device_cdc.c: 178: break;
 11393  0041CC  0012               	return	
 11394  0041CE                     
 11395                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11396                           
 11397                           ; BSR set to: 0
 11398  0041CE  0E74               	movlw	low _dummy_encapsulated_cmd_response
 11399  0041D0  0100               	movlb	0	; () banked
 11400  0041D2  6FB0               	movwf	_inPipes& (0+255),b
 11401  0041D4  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11402  0041D6  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11406  0041D8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11407                           
 11408                           ;usb_device_cdc.c: 183: break;
 11409  0041DA  0012               	return	
 11410  0041DC                     l1903:
 11411                           
 11412                           ; BSR set to: 4
 11413                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11414  0041DC  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11415  0041E0  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11416                           
 11417                           ; BSR set to: 4
 11418                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11419  0041E4  0E7C               	movlw	low _line_coding
 11420  0041E6  0101               	movlb	1	; () banked
 11421  0041E8  6FC9               	movwf	_outPipes& (0+255),b
 11422  0041EA  0E03               	movlw	high _line_coding
 11423  0041EC  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11424                           
 11425                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11426  0041EE  0E00               	movlw	0
 11427  0041F0  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11428  0041F2  0E00               	movlw	0
 11429  0041F4  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11430                           
 11431                           ; BSR set to: 1
 11432                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11433  0041F6  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11434                           
 11435                           ;usb_device_cdc.c: 192: break;
 11436  0041F8  0012               	return	
 11437  0041FA                     
 11438                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11439                           
 11440                           ; BSR set to: 1
 11441  0041FA  0E7C               	movlw	low _line_coding
 11442  0041FC  0100               	movlb	0	; () banked
 11443  0041FE  6FB0               	movwf	_inPipes& (0+255),b
 11444  004200  0E03               	movlw	high _line_coding
 11445  004202  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11446                           
 11447                           ; BSR set to: 0
 11448  004204  0E00               	movlw	0
 11449  004206  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11450  004208  0E07               	movlw	7
 11451  00420A  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11452                           
 11453                           ; BSR set to: 0
 11454  00420C  0EC1               	movlw	193
 11455  00420E  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11456                           
 11457                           ;usb_device_cdc.c: 199: break;
 11458  004210  0012               	return	
 11459  004212                     l1905:
 11460                           
 11461                           ; BSR set to: 4
 11462                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11463  004212  C432 F1E1          	movff	1074,_control_signal_bitmap	;volatile
 11464                           
 11465                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11466  004216  0100               	movlb	0	; () banked
 11467  004218  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;usb_device_cdc.c: 261: }
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;usb_device_cdc.c: 260: break;
 11474                           
 11475                           ;usb_device_cdc.c: 259: default:
 11476                           
 11477                           ;usb_device_cdc.c: 235: break;
 11478  00421A  0012               	return	
 11479  00421C                     l1899:
 11480                           
 11481                           ; BSR set to: 0
 11482  00421C  0104               	movlb	4	; () banked
 11483  00421E  5131               	movf	49,w,b	;volatile
 11484                           
 11485                           ; Switch size 1, requested type "space"
 11486                           ; Number of cases is 5, Range of values is 0 to 34
 11487                           ; switch strategies available:
 11488                           ; Name         Instructions Cycles
 11489                           ; simple_byte           16     9 (average)
 11490                           ;	Chosen strategy is simple_byte
 11491  004220  0A00               	xorlw	0	; case 0
 11492  004222  B4D8               	btfsc	status,2,c
 11493  004224  D7C8               	goto	l1900
 11494  004226  0A01               	xorlw	1	; case 1
 11495  004228  B4D8               	btfsc	status,2,c
 11496  00422A  D7D1               	goto	l1902
 11497  00422C  0A21               	xorlw	33	; case 32
 11498  00422E  B4D8               	btfsc	status,2,c
 11499  004230  D7D5               	goto	l1903
 11500  004232  0A01               	xorlw	1	; case 33
 11501  004234  B4D8               	btfsc	status,2,c
 11502  004236  D7E1               	goto	l1904
 11503  004238  0A03               	xorlw	3	; case 34
 11504  00423A  A4D8               	btfss	status,2,c
 11505  00423C  0012               	return	
 11506  00423E  D7E9               	goto	l1905
 11507  004240                     __end_of_USBCheckCDCRequest:
 11508                           	opt stack 0
 11509                           tosu	equ	0xFFF
 11510                           tosh	equ	0xFFE
 11511                           tosl	equ	0xFFD
 11512                           pclath	equ	0xFFA
 11513                           tblptru	equ	0xFF8
 11514                           tblptrh	equ	0xFF7
 11515                           tblptrl	equ	0xFF6
 11516                           tablat	equ	0xFF5
 11517                           prodh	equ	0xFF4
 11518                           prodl	equ	0xFF3
 11519                           intcon	equ	0xFF2
 11520                           intcon2	equ	0xFF1
 11521                           intcon3	equ	0xFF0
 11522                           indf0	equ	0xFEF
 11523                           postinc0	equ	0xFEE
 11524                           plusw0	equ	0xFEB
 11525                           fsr0h	equ	0xFEA
 11526                           fsr0l	equ	0xFE9
 11527                           wreg	equ	0xFE8
 11528                           postinc1	equ	0xFE6
 11529                           postdec1	equ	0xFE5
 11530                           fsr1h	equ	0xFE2
 11531                           fsr1l	equ	0xFE1
 11532                           indf2	equ	0xFDF
 11533                           postinc2	equ	0xFDE
 11534                           postdec2	equ	0xFDD
 11535                           plusw2	equ	0xFDB
 11536                           fsr2h	equ	0xFDA
 11537                           fsr2l	equ	0xFD9
 11538                           status	equ	0xFD8
 11539                           
 11540 ;; *************** function _CDCInitEP *****************
 11541 ;; Defined at:
 11542 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;		None
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;		None
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  1    wreg      void 
 11549 ;; Registers used:
 11550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;Total ram usage:        0 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; Hardware stack levels required when called:   13
 11563 ;; This function calls:
 11564 ;;		_USBEnableEndpoint
 11565 ;;		_USBTransferOnePacket
 11566 ;; This function is called by:
 11567 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text46
 11572  004EDA                     __ptext46:
 11573                           	opt stack 0
 11574  004EDA                     _CDCInitEP:
 11575                           	opt stack 12
 11576                           
 11577                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11578                           
 11579                           ;incstack = 0
 11580  004EDA  0E80               	movlw	128
 11581  004EDC  0103               	movlb	3	; () banked
 11582  004EDE  6F7C               	movwf	_line_coding& (0+255),b
 11583  004EE0  0E25               	movlw	37
 11584  004EE2  6F7D               	movwf	(_line_coding+1)& (0+255),b
 11585  004EE4  0E00               	movlw	0
 11586  004EE6  6F7E               	movwf	(_line_coding+2)& (0+255),b
 11587  004EE8  0E00               	movlw	0
 11588  004EEA  6F7F               	movwf	(_line_coding+3)& (0+255),b
 11589                           
 11590                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11591  004EEC  0E00               	movlw	0
 11592  004EEE  6F80               	movwf	(_line_coding+4)& (0+255),b
 11593                           
 11594                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11595  004EF0  0E00               	movlw	0
 11596  004EF2  6F81               	movwf	(_line_coding+5)& (0+255),b
 11597                           
 11598                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11599  004EF4  0E08               	movlw	8
 11600  004EF6  6F82               	movwf	(_line_coding+6)& (0+255),b
 11601                           
 11602                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11603  004EF8  0E00               	movlw	0
 11604  004EFA  0100               	movlb	0	; () banked
 11605  004EFC  6FC7               	movwf	_cdc_rx_len& (0+255),b
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11609  004EFE  0E1A               	movlw	26
 11610  004F00  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11611  004F02  0E01               	movlw	1
 11612  004F04  EC1F  F02C         	call	_USBEnableEndpoint
 11613                           
 11614                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11615  004F08  0E1E               	movlw	30
 11616  004F0A  0100               	movlb	0	; () banked
 11617  004F0C  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11618  004F0E  0E02               	movlw	2
 11619  004F10  EC1F  F02C         	call	_USBEnableEndpoint
 11620                           
 11621                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11622  004F14  0E00               	movlw	0
 11623  004F16  0100               	movlb	0	; () banked
 11624  004F18  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11625  004F1A  0E00               	movlw	low _cdc_data_rx
 11626  004F1C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11627  004F1E  0E05               	movlw	high _cdc_data_rx
 11628  004F20  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11629  004F22  0E40               	movlw	64
 11630  004F24  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11631  004F26  0E02               	movlw	2
 11632  004F28  EC10  F020         	call	_USBTransferOnePacket
 11633  004F2C  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11634  004F30  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11635                           
 11636                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11637  004F34  0E00               	movlw	0
 11638  004F36  0101               	movlb	1	; () banked
 11639  004F38  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11640  004F3A  0E00               	movlw	0
 11641  004F3C  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11642                           
 11643                           ; BSR set to: 1
 11644                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11645  004F3E  0E00               	movlw	0
 11646  004F40  0100               	movlb	0	; () banked
 11647  004F42  6FC6               	movwf	_cdc_trf_state& (0+255),b
 11648                           
 11649                           ; BSR set to: 0
 11650  004F44  0012               	return		;funcret
 11651  004F46                     __end_of_CDCInitEP:
 11652                           	opt stack 0
 11653                           tosu	equ	0xFFF
 11654                           tosh	equ	0xFFE
 11655                           tosl	equ	0xFFD
 11656                           pclath	equ	0xFFA
 11657                           tblptru	equ	0xFF8
 11658                           tblptrh	equ	0xFF7
 11659                           tblptrl	equ	0xFF6
 11660                           tablat	equ	0xFF5
 11661                           prodh	equ	0xFF4
 11662                           prodl	equ	0xFF3
 11663                           intcon	equ	0xFF2
 11664                           intcon2	equ	0xFF1
 11665                           intcon3	equ	0xFF0
 11666                           indf0	equ	0xFEF
 11667                           postinc0	equ	0xFEE
 11668                           plusw0	equ	0xFEB
 11669                           fsr0h	equ	0xFEA
 11670                           fsr0l	equ	0xFE9
 11671                           wreg	equ	0xFE8
 11672                           postinc1	equ	0xFE6
 11673                           postdec1	equ	0xFE5
 11674                           fsr1h	equ	0xFE2
 11675                           fsr1l	equ	0xFE1
 11676                           indf2	equ	0xFDF
 11677                           postinc2	equ	0xFDE
 11678                           postdec2	equ	0xFDD
 11679                           plusw2	equ	0xFDB
 11680                           fsr2h	equ	0xFDA
 11681                           fsr2l	equ	0xFD9
 11682                           status	equ	0xFD8
 11683                           
 11684 ;; *************** function _USBEnableEndpoint *****************
 11685 ;; Defined at:
 11686 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11687 ;; Parameters:    Size  Location     Type
 11688 ;;  ep              1    wreg     unsigned char 
 11689 ;;  options         1   37[BANK0 ] unsigned char 
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;  ep              1   40[BANK0 ] unsigned char 
 11692 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11693 ;;		 -> UEP0(1), 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11703 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11704 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;Total ram usage:        4 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:   12
 11710 ;; This function calls:
 11711 ;;		_USBConfigureEndpoint
 11712 ;; This function is called by:
 11713 ;;		_CDCInitEP
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text47
 11718  00583E                     __ptext47:
 11719                           	opt stack 0
 11720  00583E                     _USBEnableEndpoint:
 11721                           	opt stack 12
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;incstack = 0
 11725                           ;USBEnableEndpoint@ep stored from wreg
 11726  00583E  0100               	movlb	0	; () banked
 11727  005840  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11728                           
 11729                           ;usb_device.c: 898: unsigned char* p;
 11730                           ;usb_device.c: 902: if(options & 0x04)
 11731  005842  0100               	movlb	0	; () banked
 11732  005844  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11733  005846  D005               	goto	l1640
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;usb_device.c: 903: {
 11737                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11738  005848  0E00               	movlw	0
 11739  00584A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11740  00584C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11741  00584E  ECB2  F023         	call	_USBConfigureEndpoint
 11742  005852                     l1640:
 11743                           
 11744                           ;usb_device.c: 905: }
 11745                           ;usb_device.c: 906: if(options & 0x02)
 11746  005852  0100               	movlb	0	; () banked
 11747  005854  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11748  005856  D005               	goto	l1641
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;usb_device.c: 907: {
 11752                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11753  005858  0E01               	movlw	1
 11754  00585A  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11755  00585C  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11756  00585E  ECB2  F023         	call	_USBConfigureEndpoint
 11757  005862                     l1641:
 11758                           
 11759                           ;usb_device.c: 909: }
 11760                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11761  005862  0100               	movlb	0	; () banked
 11762  005864  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11763  005866  0D01               	mullw	1
 11764  005868  0E26               	movlw	38
 11765  00586A  24F3               	addwf	prodl,w,c
 11766  00586C  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11767  00586E  0E0F               	movlw	15
 11768  005870  20F4               	addwfc	prodh,w,c
 11769  005872  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;usb_device.c: 919: *p = options;
 11773  005874  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11774  005878  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11775  00587C  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11776                           
 11777                           ; BSR set to: 0
 11778  005880  0012               	return		;funcret
 11779  005882                     __end_of_USBEnableEndpoint:
 11780                           	opt stack 0
 11781                           tosu	equ	0xFFF
 11782                           tosh	equ	0xFFE
 11783                           tosl	equ	0xFFD
 11784                           pclath	equ	0xFFA
 11785                           tblptru	equ	0xFF8
 11786                           tblptrh	equ	0xFF7
 11787                           tblptrl	equ	0xFF6
 11788                           tablat	equ	0xFF5
 11789                           prodh	equ	0xFF4
 11790                           prodl	equ	0xFF3
 11791                           intcon	equ	0xFF2
 11792                           intcon2	equ	0xFF1
 11793                           intcon3	equ	0xFF0
 11794                           indf0	equ	0xFEF
 11795                           postinc0	equ	0xFEE
 11796                           plusw0	equ	0xFEB
 11797                           fsr0h	equ	0xFEA
 11798                           fsr0l	equ	0xFE9
 11799                           wreg	equ	0xFE8
 11800                           postinc1	equ	0xFE6
 11801                           postdec1	equ	0xFE5
 11802                           fsr1h	equ	0xFE2
 11803                           fsr1l	equ	0xFE1
 11804                           indf2	equ	0xFDF
 11805                           postinc2	equ	0xFDE
 11806                           postdec2	equ	0xFDD
 11807                           plusw2	equ	0xFDB
 11808                           fsr2h	equ	0xFDA
 11809                           fsr2l	equ	0xFD9
 11810                           status	equ	0xFD8
 11811                           
 11812 ;; *************** function _USBConfigureEndpoint *****************
 11813 ;; Defined at:
 11814 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  EPNum           1    wreg     unsigned char 
 11817 ;;  direction       1   29[BANK0 ] unsigned char 
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;  EPNum           1   34[BANK0 ] unsigned char 
 11820 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 11821 ;;		 -> BDT(48), 
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  1    wreg      void 
 11824 ;; Registers used:
 11825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11831 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11832 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11833 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11834 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11835 ;;Total ram usage:        8 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; Hardware stack levels required when called:   11
 11838 ;; This function calls:
 11839 ;;		Nothing
 11840 ;; This function is called by:
 11841 ;;		_USBEnableEndpoint
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text48
 11846  004764                     __ptext48:
 11847                           	opt stack 0
 11848  004764                     _USBConfigureEndpoint:
 11849                           	opt stack 12
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;incstack = 0
 11853                           ;USBConfigureEndpoint@EPNum stored from wreg
 11854  004764  0100               	movlb	0	; () banked
 11855  004766  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 11856                           
 11857                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 11858                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 11859  004768  0E00               	movlw	0
 11860  00476A  0100               	movlb	0	; () banked
 11861  00476C  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 11862  00476E  0E04               	movlw	4
 11863  004770  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 11867  004772  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11868  004774  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 11869  004776  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 11870  004778  90D8               	bcf	status,0,c
 11871  00477A  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 11872  00477C  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 11873  00477E  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11874  004780  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 11875  004782  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 11876  004784  90D8               	bcf	status,0,c
 11877  004786  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11878  004788  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11879  00478A  90D8               	bcf	status,0,c
 11880  00478C  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11881  00478E  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11882  004790  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 11883  004792  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11884  004794  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 11885  004796  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11886  004798  90D8               	bcf	status,0,c
 11887  00479A  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11888  00479C  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11889  00479E  90D8               	bcf	status,0,c
 11890  0047A0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 11891  0047A2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 11892  0047A4  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 11893  0047A6  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 11894  0047A8  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 11895  0047AA  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 11899  0047AC  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11900  0047B0  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11901  0047B4  9EDF               	bcf	indf2,7,c
 11902                           
 11903                           ; BSR set to: 0
 11904                           ;usb_device.c: 1575: if(direction == 0)
 11905  0047B6  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 11906  0047B8  A4D8               	btfss	status,2,c
 11907  0047BA  D007               	goto	l1676
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;usb_device.c: 1576: {
 11911                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 11912  0047BC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11913  0047BE  0D02               	mullw	2
 11914  0047C0  0E0E               	movlw	low _pBDTEntryOut
 11915  0047C2  24F3               	addwf	prodl,w,c
 11916  0047C4  6ED9               	movwf	fsr2l,c
 11917  0047C6  0E03               	movlw	high _pBDTEntryOut
 11918  0047C8  D006               	goto	L10
 11919  0047CA                     l1676:
 11920                           
 11921                           ; BSR set to: 0
 11922                           ;usb_device.c: 1579: else
 11923                           ;usb_device.c: 1580: {
 11924                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 11925                           
 11926                           ; BSR set to: 0
 11927  0047CA  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 11928  0047CC  0D02               	mullw	2
 11929  0047CE  0EB6               	movlw	low _pBDTEntryIn
 11930  0047D0  24F3               	addwf	prodl,w,c
 11931  0047D2  6ED9               	movwf	fsr2l,c
 11932  0047D4  0E00               	movlw	high _pBDTEntryIn
 11933  0047D6                     L10:
 11934  0047D6  20F4               	addwfc	prodh,w,c
 11935  0047D8  6EDA               	movwf	fsr2h,c
 11936  0047DA  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 11937  0047DE  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;usb_device.c: 1582: }
 11941                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 11942                           
 11943                           ; BSR set to: 0
 11944  0047E2  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 11945  0047E6  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 11946  0047EA  9CDF               	bcf	indf2,6,c
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 11950  0047EC  EE20 F004          	lfsr	2,4
 11951  0047F0  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 11952  0047F2  26D9               	addwf	fsr2l,f,c
 11953  0047F4  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 11954  0047F6  22DA               	addwfc	fsr2h,f,c
 11955  0047F8  8CDF               	bsf	indf2,6,c
 11956                           
 11957                           ; BSR set to: 0
 11958  0047FA  0012               	return		;funcret
 11959  0047FC                     __end_of_USBConfigureEndpoint:
 11960                           	opt stack 0
 11961                           tosu	equ	0xFFF
 11962                           tosh	equ	0xFFE
 11963                           tosl	equ	0xFFD
 11964                           pclath	equ	0xFFA
 11965                           tblptru	equ	0xFF8
 11966                           tblptrh	equ	0xFF7
 11967                           tblptrl	equ	0xFF6
 11968                           tablat	equ	0xFF5
 11969                           prodh	equ	0xFF4
 11970                           prodl	equ	0xFF3
 11971                           intcon	equ	0xFF2
 11972                           intcon2	equ	0xFF1
 11973                           intcon3	equ	0xFF0
 11974                           indf0	equ	0xFEF
 11975                           postinc0	equ	0xFEE
 11976                           plusw0	equ	0xFEB
 11977                           fsr0h	equ	0xFEA
 11978                           fsr0l	equ	0xFE9
 11979                           wreg	equ	0xFE8
 11980                           postinc1	equ	0xFE6
 11981                           postdec1	equ	0xFE5
 11982                           fsr1h	equ	0xFE2
 11983                           fsr1l	equ	0xFE1
 11984                           indf2	equ	0xFDF
 11985                           postinc2	equ	0xFDE
 11986                           postdec2	equ	0xFDD
 11987                           plusw2	equ	0xFDB
 11988                           fsr2h	equ	0xFDA
 11989                           fsr2l	equ	0xFD9
 11990                           status	equ	0xFD8
 11991                           
 11992 ;; *************** function _USBCtrlTrfOutHandler *****************
 11993 ;; Defined at:
 11994 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12012 ;;Total ram usage:        0 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:   13
 12015 ;; This function calls:
 12016 ;;		_USBCtrlTrfRxService
 12017 ;; This function is called by:
 12018 ;;		_USBCtrlEPService
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           	psect	text49
 12023  004FB2                     __ptext49:
 12024                           	opt stack 0
 12025  004FB2                     _USBCtrlTrfOutHandler:
 12026                           	opt stack 12
 12027                           
 12028                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;incstack = 0
 12032  004FB2  0E02               	movlw	2
 12033  004FB4  0100               	movlb	0	; () banked
 12034  004FB6  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12035  004FB8  A4D8               	btfss	status,2,c
 12036  004FBA  D003               	goto	l1782
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;usb_device.c: 2558: {
 12040                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12041  004FBC  EC6E  F016         	call	_USBCtrlTrfRxService	;wreg free
 12042                           
 12043                           ;usb_device.c: 2560: }
 12044  004FC0  0012               	return	
 12045  004FC2                     l1782:
 12046                           
 12047                           ;usb_device.c: 2561: else
 12048                           ;usb_device.c: 2562: {
 12049                           ;usb_device.c: 2565: controlTransferState = 0;
 12050  004FC2  0E00               	movlw	0
 12051  004FC4  0100               	movlb	0	; () banked
 12052  004FC6  6FCC               	movwf	_controlTransferState& (0+255),b
 12053                           
 12054                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12055  004FC8  0101               	movlb	1	; () banked
 12056  004FCA  51E4               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12057  004FCC  A4D8               	btfss	status,2,c
 12058  004FCE  D020               	goto	l1784
 12059                           
 12060                           ; BSR set to: 1
 12061                           ;usb_device.c: 2573: {
 12062                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12063  004FD0  0100               	movlb	0	; () banked
 12064  004FD2  EE20 F001          	lfsr	2,1
 12065  004FD6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12066  004FD8  26D9               	addwf	fsr2l,f,c
 12067  004FDA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12068  004FDC  22DA               	addwfc	fsr2h,f,c
 12069  004FDE  0E08               	movlw	8
 12070  004FE0  6EDF               	movwf	indf2,c
 12071                           
 12072                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12073  004FE2  EE20 F002          	lfsr	2,2
 12074  004FE6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12075  004FE8  26D9               	addwf	fsr2l,f,c
 12076  004FEA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12077  004FEC  22DA               	addwfc	fsr2h,f,c
 12078  004FEE  0E30               	movlw	48
 12079  004FF0  6EDE               	movwf	postinc2,c
 12080  004FF2  0E04               	movlw	4
 12081  004FF4  6EDD               	movwf	postdec2,c
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12085  004FF6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12086  004FFA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12087  004FFE  0E0C               	movlw	12
 12088  005000  6EDF               	movwf	indf2,c
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12092  005002  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12093  005006  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12094  00500A  0E00               	movlw	0
 12095  00500C  8EDB               	bsf	plusw2,7,c
 12096                           
 12097                           ;usb_device.c: 2578: }
 12098  00500E  0012               	return	
 12099  005010                     l1784:
 12100                           
 12101                           ;usb_device.c: 2579: else
 12102                           ;usb_device.c: 2580: {
 12103                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12104                           
 12105                           ; BSR set to: 0
 12106  005010  0E00               	movlw	0
 12107  005012  0101               	movlb	1	; () banked
 12108  005014  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12109                           
 12110                           ; BSR set to: 1
 12111  005016  0012               	return	
 12112  005018                     __end_of_USBCtrlTrfOutHandler:
 12113                           	opt stack 0
 12114                           tosu	equ	0xFFF
 12115                           tosh	equ	0xFFE
 12116                           tosl	equ	0xFFD
 12117                           pclath	equ	0xFFA
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           intcon2	equ	0xFF1
 12126                           intcon3	equ	0xFF0
 12127                           indf0	equ	0xFEF
 12128                           postinc0	equ	0xFEE
 12129                           plusw0	equ	0xFEB
 12130                           fsr0h	equ	0xFEA
 12131                           fsr0l	equ	0xFE9
 12132                           wreg	equ	0xFE8
 12133                           postinc1	equ	0xFE6
 12134                           postdec1	equ	0xFE5
 12135                           fsr1h	equ	0xFE2
 12136                           fsr1l	equ	0xFE1
 12137                           indf2	equ	0xFDF
 12138                           postinc2	equ	0xFDE
 12139                           postdec2	equ	0xFDD
 12140                           plusw2	equ	0xFDB
 12141                           fsr2h	equ	0xFDA
 12142                           fsr2l	equ	0xFD9
 12143                           status	equ	0xFD8
 12144                           
 12145 ;; *************** function _USBCtrlTrfRxService *****************
 12146 ;; Defined at:
 12147 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12148 ;; Parameters:    Size  Location     Type
 12149 ;;		None
 12150 ;; Auto vars:     Size  Location     Type
 12151 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12152 ;;  i               1   29[BANK0 ] unsigned char 
 12153 ;; Return value:  Size  Location     Type
 12154 ;;                  1    wreg      void 
 12155 ;; Registers used:
 12156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12157 ;; Tracked objects:
 12158 ;;		On entry : 0/0
 12159 ;;		On exit  : 0/0
 12160 ;;		Unchanged: 0/0
 12161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12165 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12166 ;;Total ram usage:        2 bytes
 12167 ;; Hardware stack levels used:    1
 12168 ;; Hardware stack levels required when called:   12
 12169 ;; This function calls:
 12170 ;;		_USBCtrlEPAllowStatusStage
 12171 ;; This function is called by:
 12172 ;;		_USBCtrlTrfOutHandler
 12173 ;; This function uses a non-reentrant model
 12174 ;;
 12175                           
 12176                           	psect	text50
 12177  002CDC                     __ptext50:
 12178                           	opt stack 0
 12179  002CDC                     _USBCtrlTrfRxService:
 12180                           	opt stack 12
 12181                           
 12182                           ;usb_device.c: 1872: uint8_t byteToRead;
 12183                           ;usb_device.c: 1873: uint8_t i;
 12184                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12185                           
 12186                           ;incstack = 0
 12187  002CDC  0100               	movlb	0	; () banked
 12188  002CDE  EE20 F001          	lfsr	2,1
 12189  002CE2  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12190  002CE4  26D9               	addwf	fsr2l,f,c
 12191  002CE6  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12192  002CE8  22DA               	addwfc	fsr2h,f,c
 12193  002CEA  50DF               	movf	indf2,w,c
 12194  002CEC  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12198  002CEE  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12199  002CF0  0101               	movlb	1	; () banked
 12200  002CF2  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12201  002CF4  0E00               	movlw	0
 12202  002CF6  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12203  002CF8  A0D8               	btfss	status,0,c
 12204                           
 12205                           ; BSR set to: 1
 12206                           ;usb_device.c: 1884: {
 12207                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12208  002CFA  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;usb_device.c: 1886: }
 12212                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12213                           
 12214                           ; BSR set to: 1
 12215  002CFE  0100               	movlb	0	; () banked
 12216  002D00  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12217  002D02  0101               	movlb	1	; () banked
 12218  002D04  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12219  002D06  0E00               	movlw	0
 12220  002D08  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12221                           
 12222                           ; BSR set to: 1
 12223                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12224  002D0A  0E00               	movlw	0
 12225  002D0C  0100               	movlb	0	; () banked
 12226  002D0E  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12227  002D10  D013               	goto	l1710
 12228  002D12                     
 12229                           ; BSR set to: 0
 12230                           ;usb_device.c: 1893: {
 12231                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12232                           
 12233                           ; BSR set to: 0
 12234  002D12  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12235  002D14  0D01               	mullw	1
 12236  002D16  0E38               	movlw	56
 12237  002D18  24F3               	addwf	prodl,w,c
 12238  002D1A  6ED9               	movwf	fsr2l,c
 12239  002D1C  0E04               	movlw	4
 12240  002D1E  20F4               	addwfc	prodh,w,c
 12241  002D20  6EDA               	movwf	fsr2h,c
 12242  002D22  C1C9  FFE1         	movff	_outPipes,fsr1l
 12243  002D26  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12244  002D2A  CFDF FFE7          	movff	indf2,indf1
 12245                           
 12246                           ; BSR set to: 0
 12247  002D2E  0101               	movlb	1	; () banked
 12248  002D30  4BC9               	infsnz	_outPipes& (0+255),f,b
 12249  002D32  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12250                           
 12251                           ; BSR set to: 1
 12252  002D34  0100               	movlb	0	; () banked
 12253  002D36  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12254  002D38                     l1710:
 12255                           
 12256                           ; BSR set to: 0
 12257                           
 12258                           ; BSR set to: 0
 12259  002D38  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12260  002D3A  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12261  002D3C  A0D8               	btfss	status,0,c
 12262  002D3E  D7E9               	goto	l1711
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;usb_device.c: 1895: }
 12266                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12267                           
 12268                           ; BSR set to: 0
 12269  002D40  0101               	movlb	1	; () banked
 12270  002D42  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12271  002D44  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12272  002D46  B4D8               	btfsc	status,2,c
 12273  002D48  D033               	goto	l1713
 12274                           
 12275                           ; BSR set to: 1
 12276                           ;usb_device.c: 1900: {
 12277                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12278  002D4A  0100               	movlb	0	; () banked
 12279  002D4C  EE20 F001          	lfsr	2,1
 12280  002D50  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12281  002D52  26D9               	addwf	fsr2l,f,c
 12282  002D54  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12283  002D56  22DA               	addwfc	fsr2h,f,c
 12284  002D58  0E08               	movlw	8
 12285  002D5A  6EDF               	movwf	indf2,c
 12286                           
 12287                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12288  002D5C  EE20 F002          	lfsr	2,2
 12289  002D60  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12290  002D62  26D9               	addwf	fsr2l,f,c
 12291  002D64  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12292  002D66  22DA               	addwfc	fsr2h,f,c
 12293  002D68  0E38               	movlw	56
 12294  002D6A  6EDE               	movwf	postinc2,c
 12295  002D6C  0E04               	movlw	4
 12296  002D6E  6EDD               	movwf	postdec2,c
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12300  002D70  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12301  002D74  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12302  002D78  BCDF               	btfsc	indf2,6,c
 12303  002D7A  D00D               	goto	l1714
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;usb_device.c: 1904: {
 12307                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12308  002D7C  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12309  002D80  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12310  002D84  0E48               	movlw	72
 12311  002D86  6EDF               	movwf	indf2,c
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12315  002D88  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12316  002D8C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12317  002D90  0E00               	movlw	0
 12318  002D92  8EDB               	bsf	plusw2,7,c
 12319                           
 12320                           ;usb_device.c: 1907: }
 12321  002D94  0012               	return	
 12322  002D96                     l1714:
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;usb_device.c: 1908: else
 12326                           ;usb_device.c: 1909: {
 12327                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12328                           
 12329                           ; BSR set to: 0
 12330  002D96  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12331  002D9A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12332  002D9E  0E08               	movlw	8
 12333  002DA0  6EDF               	movwf	indf2,c
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12337  002DA2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12338  002DA6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12339  002DAA  0E00               	movlw	0
 12340  002DAC  8EDB               	bsf	plusw2,7,c
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;usb_device.c: 1912: }
 12344                           ;usb_device.c: 1913: }
 12345  002DAE  0012               	return	
 12346  002DB0                     l1713:
 12347                           
 12348                           ;usb_device.c: 1914: else
 12349                           ;usb_device.c: 1915: {
 12350                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12351                           
 12352                           ; BSR set to: 0
 12353  002DB0  0100               	movlb	0	; () banked
 12354  002DB2  EE20 F001          	lfsr	2,1
 12355  002DB6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12356  002DB8  26D9               	addwf	fsr2l,f,c
 12357  002DBA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12358  002DBC  22DA               	addwfc	fsr2h,f,c
 12359  002DBE  0E08               	movlw	8
 12360  002DC0  6EDF               	movwf	indf2,c
 12361                           
 12362                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12363  002DC2  EE20 F002          	lfsr	2,2
 12364  002DC6  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12365  002DC8  26D9               	addwf	fsr2l,f,c
 12366  002DCA  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12367  002DCC  22DA               	addwfc	fsr2h,f,c
 12368  002DCE  0E30               	movlw	48
 12369  002DD0  6EDE               	movwf	postinc2,c
 12370  002DD2  0E04               	movlw	4
 12371  002DD4  6EDD               	movwf	postdec2,c
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12375  002DD6  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12376  002DDA  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12377  002DDE  0E04               	movlw	4
 12378  002DE0  6EDF               	movwf	indf2,c
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12382  002DE2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12383  002DE6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12384  002DEA  0E00               	movlw	0
 12385  002DEC  8EDB               	bsf	plusw2,7,c
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;usb_device.c: 1944: }
 12389                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12390                           
 12391                           ; BSR set to: 0
 12392  002DEE  0101               	movlb	1	; () banked
 12393  002DF0  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12394                           
 12395                           ; BSR set to: 1
 12396                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12397  002DF2  0100               	movlb	0	; () banked
 12398  002DF4  51C9               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12399  002DF6  A4D8               	btfss	status,2,c
 12400  002DF8  0012               	return	
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;usb_device.c: 1960: {
 12404                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12405  002DFA  EC56  F01D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12406  002DFE  0012               	return	
 12407  002E00                     __end_of_USBCtrlTrfRxService:
 12408                           	opt stack 0
 12409                           tosu	equ	0xFFF
 12410                           tosh	equ	0xFFE
 12411                           tosl	equ	0xFFD
 12412                           pclath	equ	0xFFA
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           intcon	equ	0xFF2
 12420                           intcon2	equ	0xFF1
 12421                           intcon3	equ	0xFF0
 12422                           indf0	equ	0xFEF
 12423                           postinc0	equ	0xFEE
 12424                           plusw0	equ	0xFEB
 12425                           fsr0h	equ	0xFEA
 12426                           fsr0l	equ	0xFE9
 12427                           wreg	equ	0xFE8
 12428                           indf1	equ	0xFE7
 12429                           postinc1	equ	0xFE6
 12430                           postdec1	equ	0xFE5
 12431                           fsr1h	equ	0xFE2
 12432                           fsr1l	equ	0xFE1
 12433                           indf2	equ	0xFDF
 12434                           postinc2	equ	0xFDE
 12435                           postdec2	equ	0xFDD
 12436                           plusw2	equ	0xFDB
 12437                           fsr2h	equ	0xFDA
 12438                           fsr2l	equ	0xFD9
 12439                           status	equ	0xFD8
 12440                           
 12441 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12442 ;; Defined at:
 12443 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;		None
 12446 ;; Auto vars:     Size  Location     Type
 12447 ;;		None
 12448 ;; Return value:  Size  Location     Type
 12449 ;;                  1    wreg      void 
 12450 ;; Registers used:
 12451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12452 ;; Tracked objects:
 12453 ;;		On entry : 0/0
 12454 ;;		On exit  : 0/0
 12455 ;;		Unchanged: 0/0
 12456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12461 ;;Total ram usage:        0 bytes
 12462 ;; Hardware stack levels used:    1
 12463 ;; Hardware stack levels required when called:   11
 12464 ;; This function calls:
 12465 ;;		Nothing
 12466 ;; This function is called by:
 12467 ;;		_USBDeviceTasks
 12468 ;;		_USBCtrlEPServiceComplete
 12469 ;;		_USBCtrlTrfRxService
 12470 ;; This function uses a non-reentrant model
 12471 ;;
 12472                           
 12473                           	psect	text51
 12474  003AAC                     __ptext51:
 12475                           	opt stack 0
 12476  003AAC                     _USBCtrlEPAllowStatusStage:
 12477                           	opt stack 12
 12478                           
 12479                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12480                           
 12481                           ;incstack = 0
 12482  003AAC  0100               	movlb	0	; () banked
 12483  003AAE  51C8               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 12484  003AB0  A4D8               	btfss	status,2,c
 12485  003AB2  0012               	return	
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;usb_device.c: 1442: {
 12489                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12490  003AB4  0E01               	movlw	1
 12491  003AB6  6FC8               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12492                           
 12493                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12494  003AB8  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12495  003ABA  A4D8               	btfss	status,2,c
 12496  003ABC  0012               	return	
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;usb_device.c: 1445: {
 12500                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12501  003ABE  0E01               	movlw	1
 12502  003AC0  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12506  003AC2  0E02               	movlw	2
 12507  003AC4  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12508  003AC6  A4D8               	btfss	status,2,c
 12509  003AC8  D015               	goto	l1664
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;usb_device.c: 1451: {
 12513                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12514  003ACA  EE20 F001          	lfsr	2,1
 12515  003ACE  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12516  003AD0  26D9               	addwf	fsr2l,f,c
 12517  003AD2  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12518  003AD4  22DA               	addwfc	fsr2h,f,c
 12519  003AD6  0E00               	movlw	0
 12520  003AD8  6EDF               	movwf	indf2,c
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12524  003ADA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12525  003ADE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12526  003AE2  0E48               	movlw	72
 12527  003AE4  6EDF               	movwf	indf2,c
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12531  003AE6  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12532  003AEA  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12533  003AEE  0E00               	movlw	0
 12534  003AF0  8EDB               	bsf	plusw2,7,c
 12535                           
 12536                           ;usb_device.c: 1455: }
 12537  003AF2  0012               	return	
 12538  003AF4                     l1664:
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12542                           
 12543                           ; BSR set to: 0
 12544  003AF4  05CC               	decf	_controlTransferState& (0+255),w,b
 12545  003AF6  A4D8               	btfss	status,2,c
 12546  003AF8  0012               	return	
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;usb_device.c: 1457: {
 12550                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12551  003AFA  0E00               	movlw	0
 12552  003AFC  0101               	movlb	1	; () banked
 12553  003AFE  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12554                           
 12555                           ; BSR set to: 1
 12556                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12557  003B00  0100               	movlb	0	; () banked
 12558  003B02  EE20 F001          	lfsr	2,1
 12559  003B06  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12560  003B08  26D9               	addwf	fsr2l,f,c
 12561  003B0A  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12562  003B0C  22DA               	addwfc	fsr2h,f,c
 12563  003B0E  0E08               	movlw	8
 12564  003B10  6EDF               	movwf	indf2,c
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12568  003B12  EE20 F002          	lfsr	2,2
 12569  003B16  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12570  003B18  26D9               	addwf	fsr2l,f,c
 12571  003B1A  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12572  003B1C  22DA               	addwfc	fsr2h,f,c
 12573  003B1E  0E30               	movlw	48
 12574  003B20  6EDE               	movwf	postinc2,c
 12575  003B22  0E04               	movlw	4
 12576  003B24  6EDD               	movwf	postdec2,c
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12580  003B26  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12581  003B2A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12582  003B2E  0E04               	movlw	4
 12583  003B30  6EDF               	movwf	indf2,c
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12587  003B32  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12588  003B36  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12589  003B3A  0E00               	movlw	0
 12590  003B3C  8EDB               	bsf	plusw2,7,c
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12594  003B3E  0E01               	movlw	1
 12595  003B40  0101               	movlb	1	; () banked
 12596  003B42  6FE4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12597                           
 12598                           ; BSR set to: 1
 12599                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12600  003B44  0100               	movlb	0	; () banked
 12601  003B46  EE20 F001          	lfsr	2,1
 12602  003B4A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12603  003B4C  26D9               	addwf	fsr2l,f,c
 12604  003B4E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12605  003B50  22DA               	addwfc	fsr2h,f,c
 12606  003B52  0E08               	movlw	8
 12607  003B54  6EDF               	movwf	indf2,c
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12611  003B56  EE20 F002          	lfsr	2,2
 12612  003B5A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12613  003B5C  26D9               	addwf	fsr2l,f,c
 12614  003B5E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12615  003B60  22DA               	addwfc	fsr2h,f,c
 12616  003B62  0E30               	movlw	48
 12617  003B64  6EDE               	movwf	postinc2,c
 12618  003B66  0E04               	movlw	4
 12619  003B68  6EDD               	movwf	postdec2,c
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12623  003B6A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12624  003B6E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12625  003B72  0E80               	movlw	128
 12626  003B74  6EDF               	movwf	indf2,c
 12627                           
 12628                           ; BSR set to: 0
 12629                           
 12630                           ; BSR set to: 0
 12631                           
 12632                           ; BSR set to: 0
 12633  003B76  0012               	return	
 12634  003B78                     __end_of_USBCtrlEPAllowStatusStage:
 12635                           	opt stack 0
 12636                           tosu	equ	0xFFF
 12637                           tosh	equ	0xFFE
 12638                           tosl	equ	0xFFD
 12639                           pclath	equ	0xFFA
 12640                           tblptru	equ	0xFF8
 12641                           tblptrh	equ	0xFF7
 12642                           tblptrl	equ	0xFF6
 12643                           tablat	equ	0xFF5
 12644                           prodh	equ	0xFF4
 12645                           prodl	equ	0xFF3
 12646                           intcon	equ	0xFF2
 12647                           intcon2	equ	0xFF1
 12648                           intcon3	equ	0xFF0
 12649                           indf0	equ	0xFEF
 12650                           postinc0	equ	0xFEE
 12651                           plusw0	equ	0xFEB
 12652                           fsr0h	equ	0xFEA
 12653                           fsr0l	equ	0xFE9
 12654                           wreg	equ	0xFE8
 12655                           indf1	equ	0xFE7
 12656                           postinc1	equ	0xFE6
 12657                           postdec1	equ	0xFE5
 12658                           fsr1h	equ	0xFE2
 12659                           fsr1l	equ	0xFE1
 12660                           indf2	equ	0xFDF
 12661                           postinc2	equ	0xFDE
 12662                           postdec2	equ	0xFDD
 12663                           plusw2	equ	0xFDB
 12664                           fsr2h	equ	0xFDA
 12665                           fsr2l	equ	0xFD9
 12666                           status	equ	0xFD8
 12667                           
 12668 ;; *************** function _USBCtrlTrfInHandler *****************
 12669 ;; Defined at:
 12670 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12687 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12688 ;;Total ram usage:        1 bytes
 12689 ;; Hardware stack levels used:    1
 12690 ;; Hardware stack levels required when called:   12
 12691 ;; This function calls:
 12692 ;;		_USBCtrlTrfTxService
 12693 ;; This function is called by:
 12694 ;;		_USBCtrlEPService
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           	psect	text52
 12699  003F5E                     __ptext52:
 12700                           	opt stack 0
 12701  003F5E                     _USBCtrlTrfInHandler:
 12702                           	opt stack 13
 12703                           
 12704                           ;usb_device.c: 2611: uint8_t lastDTS;
 12705                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;incstack = 0
 12709  003F5E  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12710  003F62  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12711  003F66  0100               	movlb	0	; () banked
 12712  003F68  0E00               	movlw	0
 12713  003F6A  BCDF               	btfsc	indf2,6,c
 12714  003F6C  0E01               	movlw	1
 12715  003F6E  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12719  003F70  0E04               	movlw	4
 12720  003F72  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12724  003F74  0E08               	movlw	8
 12725  003F76  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12726  003F78  A4D8               	btfss	status,2,c
 12727  003F7A  D00D               	goto	l1791
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;usb_device.c: 2622: {
 12731                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12732  003F7C  0104               	movlb	4	; () banked
 12733  003F7E  5132               	movf	50,w,b	;volatile
 12734  003F80  0B7F               	andlw	127
 12735  003F82  010F               	movlb	15	; () banked
 12736  003F84  6F38               	movwf	56,b	;volatile
 12737                           
 12738                           ; BSR set to: 15
 12739                           ;usb_device.c: 2624: if(UADDR != 0u)
 12740  003F86  5138               	movf	56,w,b	;volatile
 12741  003F88  B4D8               	btfsc	status,2,c
 12742  003F8A  D002               	goto	l1790
 12743                           
 12744                           ; BSR set to: 15
 12745                           ;usb_device.c: 2625: {
 12746                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12747  003F8C  0E10               	movlw	16
 12748  003F8E  D001               	goto	L11
 12749  003F90                     l1790:
 12750                           
 12751                           ;usb_device.c: 2628: else
 12752                           ;usb_device.c: 2629: {
 12753                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12754                           
 12755                           ; BSR set to: 0
 12756  003F90  0E04               	movlw	4
 12757  003F92                     L11:
 12758  003F92  0100               	movlb	0	; () banked
 12759  003F94  6FCE               	movwf	_USBDeviceState& (0+255),b
 12760  003F96                     l1791:
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;usb_device.c: 2631: }
 12764                           ;usb_device.c: 2632: }
 12765                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12766                           
 12767                           ; BSR set to: 0
 12768                           
 12769                           ; BSR set to: 0
 12770  003F96  05CC               	decf	_controlTransferState& (0+255),w,b
 12771  003F98  A4D8               	btfss	status,2,c
 12772  003F9A  D03B               	goto	l1792
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;usb_device.c: 2636: {
 12776                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12777  003F9C  EE20 F002          	lfsr	2,2
 12778  003FA0  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12779  003FA2  26D9               	addwf	fsr2l,f,c
 12780  003FA4  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12781  003FA6  22DA               	addwfc	fsr2h,f,c
 12782  003FA8  0E38               	movlw	56
 12783  003FAA  6EDE               	movwf	postinc2,c
 12784  003FAC  0E04               	movlw	4
 12785  003FAE  6EDD               	movwf	postdec2,c
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12789  003FB0  ECE1  F01A         	call	_USBCtrlTrfTxService	;wreg free
 12790                           
 12791                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12792  003FB4  0E02               	movlw	2
 12793  003FB6  0100               	movlb	0	; () banked
 12794  003FB8  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12795  003FBA  A4D8               	btfss	status,2,c
 12796  003FBC  D00D               	goto	l1793
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;usb_device.c: 2645: {
 12800                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12801  003FBE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12802  003FC2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12803  003FC6  0E04               	movlw	4
 12804  003FC8  6EDF               	movwf	indf2,c
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12808  003FCA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12809  003FCE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12810  003FD2  0E00               	movlw	0
 12811  003FD4  8EDB               	bsf	plusw2,7,c
 12812                           
 12813                           ;usb_device.c: 2650: }
 12814  003FD6  0012               	return	
 12815  003FD8                     l1793:
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;usb_device.c: 2651: else
 12819                           ;usb_device.c: 2652: {
 12820                           ;usb_device.c: 2653: if(lastDTS == 0)
 12821                           
 12822                           ; BSR set to: 0
 12823  003FD8  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 12824  003FDA  A4D8               	btfss	status,2,c
 12825  003FDC  D00D               	goto	l1795
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;usb_device.c: 2654: {
 12829                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12830  003FDE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12831  003FE2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12832  003FE6  0E48               	movlw	72
 12833  003FE8  6EDF               	movwf	indf2,c
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12837  003FEA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12838  003FEE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12839  003FF2  0E00               	movlw	0
 12840  003FF4  8EDB               	bsf	plusw2,7,c
 12841                           
 12842                           ;usb_device.c: 2657: }
 12843  003FF6  0012               	return	
 12844  003FF8                     l1795:
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;usb_device.c: 2658: else
 12848                           ;usb_device.c: 2659: {
 12849                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 12850                           
 12851                           ; BSR set to: 0
 12852  003FF8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12853  003FFC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12854  004000  0E08               	movlw	8
 12855  004002  6EDF               	movwf	indf2,c
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12859  004004  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12860  004008  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12861  00400C  0E00               	movlw	0
 12862  00400E  8EDB               	bsf	plusw2,7,c
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;usb_device.c: 2662: }
 12866                           ;usb_device.c: 2663: }
 12867                           ;usb_device.c: 2664: }
 12868                           
 12869                           ; BSR set to: 0
 12870  004010  0012               	return	
 12871  004012                     l1792:
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;usb_device.c: 2665: else
 12875                           ;usb_device.c: 2666: {
 12876                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 12877  004012  0101               	movlb	1	; () banked
 12878  004014  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 12879                           
 12880                           ; BSR set to: 1
 12881                           ;usb_device.c: 2675: }
 12882                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 12883                           
 12884                           ; BSR set to: 1
 12885  004016  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12886                           
 12887                           ; BSR set to: 1
 12888                           ;usb_device.c: 2677: }
 12889                           ;usb_device.c: 2679: controlTransferState = 0;
 12890                           
 12891                           ; BSR set to: 1
 12892  004018  0E00               	movlw	0
 12893  00401A  0100               	movlb	0	; () banked
 12894  00401C  6FCC               	movwf	_controlTransferState& (0+255),b
 12895  00401E  0012               	return	
 12896  004020                     __end_of_USBCtrlTrfInHandler:
 12897                           	opt stack 0
 12898                           tosu	equ	0xFFF
 12899                           tosh	equ	0xFFE
 12900                           tosl	equ	0xFFD
 12901                           pclath	equ	0xFFA
 12902                           tblptru	equ	0xFF8
 12903                           tblptrh	equ	0xFF7
 12904                           tblptrl	equ	0xFF6
 12905                           tablat	equ	0xFF5
 12906                           prodh	equ	0xFF4
 12907                           prodl	equ	0xFF3
 12908                           intcon	equ	0xFF2
 12909                           intcon2	equ	0xFF1
 12910                           intcon3	equ	0xFF0
 12911                           indf0	equ	0xFEF
 12912                           postinc0	equ	0xFEE
 12913                           plusw0	equ	0xFEB
 12914                           fsr0h	equ	0xFEA
 12915                           fsr0l	equ	0xFE9
 12916                           wreg	equ	0xFE8
 12917                           indf1	equ	0xFE7
 12918                           postinc1	equ	0xFE6
 12919                           postdec1	equ	0xFE5
 12920                           fsr1h	equ	0xFE2
 12921                           fsr1l	equ	0xFE1
 12922                           indf2	equ	0xFDF
 12923                           postinc2	equ	0xFDE
 12924                           postdec2	equ	0xFDD
 12925                           plusw2	equ	0xFDB
 12926                           fsr2h	equ	0xFDA
 12927                           fsr2l	equ	0xFD9
 12928                           status	equ	0xFD8
 12929                           
 12930 ;; *************** function _USBCtrlTrfTxService *****************
 12931 ;; Defined at:
 12932 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12933 ;; Parameters:    Size  Location     Type
 12934 ;;		None
 12935 ;; Auto vars:     Size  Location     Type
 12936 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  1    wreg      void 
 12939 ;; Registers used:
 12940 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12950 ;;Total ram usage:        1 bytes
 12951 ;; Hardware stack levels used:    1
 12952 ;; Hardware stack levels required when called:   11
 12953 ;; This function calls:
 12954 ;;		Nothing
 12955 ;; This function is called by:
 12956 ;;		_USBCtrlEPAllowDataStage
 12957 ;;		_USBCtrlTrfInHandler
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text53
 12962  0035C2                     __ptext53:
 12963                           	opt stack 0
 12964  0035C2                     _USBCtrlTrfTxService:
 12965                           	opt stack 11
 12966                           
 12967                           ;usb_device.c: 1791: uint8_t byteToSend;
 12968                           ;usb_device.c: 1795: byteToSend = 8;
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;incstack = 0
 12972  0035C2  0E08               	movlw	8
 12973  0035C4  0100               	movlb	0	; () banked
 12974  0035C6  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 12978  0035C8  51B5               	movf	(_inPipes+5)& (0+255),w,b
 12979  0035CA  E110               	bnz	l11848
 12980  0035CC  0E08               	movlw	8
 12981  0035CE  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 12982  0035D0  B0D8               	btfsc	status,0,c
 12983  0035D2  D00C               	goto	l1697
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;usb_device.c: 1797: {
 12987                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 12988  0035D4  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 12992  0035D8  51CD               	movf	_shortPacketStatus& (0+255),w,b
 12993  0035DA  A4D8               	btfss	status,2,c
 12994  0035DC  D002               	goto	l1695
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;usb_device.c: 1806: {
 12998                           ;usb_device.c: 1807: shortPacketStatus = 1;
 12999  0035DE  0E01               	movlw	1
 13000  0035E0  D004               	goto	L12
 13001  0035E2                     l1695:
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13005                           
 13006                           ; BSR set to: 0
 13007  0035E2  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13008  0035E4  A4D8               	btfss	status,2,c
 13009  0035E6  D002               	goto	l1697
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;usb_device.c: 1810: {
 13013                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13014  0035E8  0E02               	movlw	2
 13015  0035EA                     L12:
 13016  0035EA  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13017  0035EC                     l1697:
 13018  0035EC                     l11848:
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;usb_device.c: 1812: }
 13022                           ;usb_device.c: 1813: }
 13023                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13024  0035EC  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13025  0035EE  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13026  0035F0  0E00               	movlw	0
 13027  0035F2  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13031  0035F4  EE20 F001          	lfsr	2,1
 13032  0035F8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13033  0035FA  26D9               	addwf	fsr2l,f,c
 13034  0035FC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13035  0035FE  22DA               	addwfc	fsr2h,f,c
 13036  003600  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13040  003604  0E38               	movlw	56
 13041  003606  0102               	movlb	2	; () banked
 13042  003608  6FD4               	movwf	_pDst& (0+255),b
 13043  00360A  0E04               	movlw	4
 13044  00360C  6FD5               	movwf	(_pDst+1)& (0+255),b
 13045                           
 13046                           ; BSR set to: 2
 13047                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13048  00360E  0100               	movlb	0	; () banked
 13049  003610  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13050  003612  D01E               	goto	l1699
 13051  003614  D03E               	goto	l1703
 13052  003616                     
 13053                           ; BSR set to: 0
 13054                           ;usb_device.c: 1830: {
 13055                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13056                           
 13057                           ; BSR set to: 0
 13058  003616  C0B0  FFF6         	movff	_inPipes,tblptrl
 13059  00361A  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13060  00361E  6AF8               	clrf	tblptru,c
 13061  003620  C2D4  FFD9         	movff	_pDst,fsr2l
 13062  003624  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13063  003628  0E0E               	movlw	(high __ramtop+-1)
 13064  00362A  64F7               	cpfsgt	tblptrh,c
 13065  00362C  D003               	bra	u10437
 13066  00362E  0008               	tblrd		*
 13067  003630  50F5               	movf	tablat,w,c
 13068  003632  D005               	bra	u10430
 13069  003634                     u10437:
 13070  003634  CFF6 FFE9          	movff	tblptrl,fsr0l
 13071  003638  CFF7 FFEA          	movff	tblptrh,fsr0h
 13072  00363C  50EF               	movf	indf0,w,c
 13073  00363E                     u10430:
 13074  00363E  6EDF               	movwf	indf2,c
 13075  003640  0100               	movlb	0	; () banked
 13076  003642  4BB0               	infsnz	_inPipes& (0+255),f,b
 13077  003644  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13078                           
 13079                           ; BSR set to: 0
 13080  003646  0102               	movlb	2	; () banked
 13081  003648  4BD4               	infsnz	_pDst& (0+255),f,b
 13082  00364A  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13083                           
 13084                           ; BSR set to: 2
 13085                           ;usb_device.c: 1832: byteToSend--;
 13086  00364C  0100               	movlb	0	; () banked
 13087  00364E  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13088  003650                     l1699:
 13089                           
 13090                           ; BSR set to: 0
 13091                           
 13092                           ; BSR set to: 0
 13093  003650  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13094  003652  B4D8               	btfsc	status,2,c
 13095  003654  0012               	return	
 13096  003656  D7DF               	goto	l1700
 13097  003658                     
 13098                           ; BSR set to: 0
 13099                           ;usb_device.c: 1838: {
 13100                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13101                           
 13102                           ; BSR set to: 0
 13103  003658  C0B0  FFF6         	movff	_inPipes,tblptrl
 13104  00365C  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13105  003660  6AF8               	clrf	tblptru,c
 13106  003662  C2D4  FFD9         	movff	_pDst,fsr2l
 13107  003666  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13108  00366A  0E0E               	movlw	(high __ramtop+-1)
 13109  00366C  64F7               	cpfsgt	tblptrh,c
 13110  00366E  D003               	bra	u10457
 13111  003670  0008               	tblrd		*
 13112  003672  50F5               	movf	tablat,w,c
 13113  003674  D005               	bra	u10450
 13114  003676                     u10457:
 13115  003676  CFF6 FFE9          	movff	tblptrl,fsr0l
 13116  00367A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13117  00367E  50EF               	movf	indf0,w,c
 13118  003680                     u10450:
 13119  003680  6EDF               	movwf	indf2,c
 13120  003682  0100               	movlb	0	; () banked
 13121  003684  4BB0               	infsnz	_inPipes& (0+255),f,b
 13122  003686  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13123                           
 13124                           ; BSR set to: 0
 13125  003688  0102               	movlb	2	; () banked
 13126  00368A  4BD4               	infsnz	_pDst& (0+255),f,b
 13127  00368C  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13128                           
 13129                           ; BSR set to: 2
 13130                           ;usb_device.c: 1840: byteToSend--;
 13131  00368E  0100               	movlb	0	; () banked
 13132  003690  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13133  003692                     l1703:
 13134                           
 13135                           ; BSR set to: 0
 13136                           
 13137                           ; BSR set to: 0
 13138  003692  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13139  003694  B4D8               	btfsc	status,2,c
 13140  003696  0012               	return	
 13141  003698  D7DF               	goto	l1704
 13142  00369A                     __end_of_USBCtrlTrfTxService:
 13143                           	opt stack 0
 13144                           tosu	equ	0xFFF
 13145                           tosh	equ	0xFFE
 13146                           tosl	equ	0xFFD
 13147                           pclath	equ	0xFFA
 13148                           tblptru	equ	0xFF8
 13149                           tblptrh	equ	0xFF7
 13150                           tblptrl	equ	0xFF6
 13151                           tablat	equ	0xFF5
 13152                           prodh	equ	0xFF4
 13153                           prodl	equ	0xFF3
 13154                           intcon	equ	0xFF2
 13155                           intcon2	equ	0xFF1
 13156                           intcon3	equ	0xFF0
 13157                           indf0	equ	0xFEF
 13158                           postinc0	equ	0xFEE
 13159                           plusw0	equ	0xFEB
 13160                           fsr0h	equ	0xFEA
 13161                           fsr0l	equ	0xFE9
 13162                           wreg	equ	0xFE8
 13163                           indf1	equ	0xFE7
 13164                           postinc1	equ	0xFE6
 13165                           postdec1	equ	0xFE5
 13166                           fsr1h	equ	0xFE2
 13167                           fsr1l	equ	0xFE1
 13168                           indf2	equ	0xFDF
 13169                           postinc2	equ	0xFDE
 13170                           postdec2	equ	0xFDD
 13171                           plusw2	equ	0xFDB
 13172                           fsr2h	equ	0xFDA
 13173                           fsr2l	equ	0xFD9
 13174                           status	equ	0xFD8
 13175                           
 13176 ;; *************** function _CDCTxService *****************
 13177 ;; Defined at:
 13178 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;		None
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13183 ;;  i               1   36[BANK0 ] unsigned char 
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  1    wreg      void 
 13186 ;; Registers used:
 13187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/0
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13197 ;;Total ram usage:        2 bytes
 13198 ;; Hardware stack levels used:    1
 13199 ;; Hardware stack levels required when called:   12
 13200 ;; This function calls:
 13201 ;;		_USBTransferOnePacket
 13202 ;; This function is called by:
 13203 ;;		_UsbDevice_MainTask
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text54
 13208  0026C6                     __ptext54:
 13209                           	opt stack 0
 13210  0026C6                     _CDCTxService:
 13211                           	opt stack 15
 13212                           
 13213                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13214                           ;usb_device_cdc.c: 842: uint8_t i;
 13215                           ;usb_device_cdc.c: 844: ;
 13216                           ;usb_device_cdc.c: 846: {};
 13217                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;incstack = 0
 13221  0026C6  0101               	movlb	1	; () banked
 13222  0026C8  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13223  0026CA  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13224  0026CC  B4D8               	btfsc	status,2,c
 13225  0026CE  D006               	goto	l1949
 13226                           
 13227                           ; BSR set to: 1
 13228  0026D0  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13229  0026D4  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13230  0026D8  BEDF               	btfsc	indf2,7,c
 13231  0026DA  0012               	return	
 13232  0026DC                     l1949:
 13233                           
 13234                           ; BSR set to: 1
 13235                           ;usb_device_cdc.c: 852: }
 13236                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13237                           
 13238                           ; BSR set to: 1
 13239  0026DC  0E03               	movlw	3
 13240  0026DE  0100               	movlb	0	; () banked
 13241  0026E0  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13242  0026E2  A4D8               	btfss	status,2,c
 13243  0026E4  D002               	goto	l1951
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13247  0026E6  0E00               	movlw	0
 13248  0026E8  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13249  0026EA                     l1951:
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13253  0026EA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13254  0026EC  B4D8               	btfsc	status,2,c
 13255  0026EE  0012               	return	
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;usb_device_cdc.c: 869: }
 13259                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13260                           
 13261                           ; BSR set to: 0
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;usb_device_cdc.c: 866: {
 13265                           ;usb_device_cdc.c: 867: ;
 13266                           ;usb_device_cdc.c: 868: return;
 13267  0026F0  0E02               	movlw	2
 13268  0026F2  19C6               	xorwf	_cdc_trf_state& (0+255),w,b
 13269  0026F4  A4D8               	btfss	status,2,c
 13270  0026F6  D013               	goto	l1953
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;usb_device_cdc.c: 875: {
 13274                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13275  0026F8  0E01               	movlw	1
 13276  0026FA  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13277  0026FC  0E00               	movlw	0
 13278  0026FE  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13279  002700  0E00               	movlw	0
 13280  002702  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13281  002704  0E00               	movlw	0
 13282  002706  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13283  002708  0E02               	movlw	2
 13284  00270A  EC10  F020         	call	_USBTransferOnePacket
 13285  00270E  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13286  002712  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13287                           
 13288                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13289  002716  0E03               	movlw	3
 13290  002718  0100               	movlb	0	; () banked
 13291  00271A  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13292                           
 13293                           ;usb_device_cdc.c: 879: }
 13294  00271C  0012               	return	
 13295  00271E                     l1953:
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13299                           
 13300                           ; BSR set to: 0
 13301  00271E  05C6               	decf	_cdc_trf_state& (0+255),w,b
 13302  002720  A4D8               	btfss	status,2,c
 13303  002722  0012               	return	
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;usb_device_cdc.c: 881: {
 13307                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13308  002724  0E40               	movlw	64
 13309  002726  65C5               	cpfsgt	_cdc_tx_len& (0+255),b
 13310  002728  D003               	goto	l1956
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13314  00272A  0E40               	movlw	64
 13315  00272C  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13316  00272E  D002               	goto	l1957
 13317  002730                     l1956:
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;usb_device_cdc.c: 887: else
 13321                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13322  002730  C0C5  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13323  002734                     l1957:
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13327                           
 13328                           ; BSR set to: 0
 13329  002734  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13330  002736  0800               	sublw	0
 13331  002738  25C5               	addwf	_cdc_tx_len& (0+255),w,b
 13332  00273A  6FC5               	movwf	_cdc_tx_len& (0+255),b
 13333                           
 13334                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13335  00273C  0EB6               	movlw	low _cdc_data_tx
 13336  00273E  0102               	movlb	2	; () banked
 13337  002740  6FC8               	movwf	_pCDCDst& (0+255),b
 13338  002742  0E07               	movlw	high _cdc_data_tx
 13339  002744  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13340                           
 13341                           ; BSR set to: 2
 13342                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13343  002746  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13344                           
 13345                           ; BSR set to: 2
 13346                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13347  00274A  0101               	movlb	1	; () banked
 13348  00274C  51E2               	movf	_cdc_mem_type& (0+255),w,b
 13349  00274E  B4D8               	btfsc	status,2,c
 13350  002750  D01D               	goto	l1959
 13351  002752  D03D               	goto	l1963
 13352  002754                     
 13353                           ;usb_device_cdc.c: 901: {
 13354                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13355                           
 13356                           ; BSR set to: 1
 13357  002754  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13358  002758  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13359  00275C  6AF8               	clrf	tblptru,c
 13360  00275E  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13361  002762  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13362  002766  0E0E               	movlw	(high __ramtop+-1)
 13363  002768  64F7               	cpfsgt	tblptrh,c
 13364  00276A  D003               	bra	u14307
 13365  00276C  0008               	tblrd		*
 13366  00276E  50F5               	movf	tablat,w,c
 13367  002770  D005               	bra	u14300
 13368  002772                     u14307:
 13369  002772  CFF6 FFE9          	movff	tblptrl,fsr0l
 13370  002776  CFF7 FFEA          	movff	tblptrh,fsr0h
 13371  00277A  50EF               	movf	indf0,w,c
 13372  00277C                     u14300:
 13373  00277C  6EDF               	movwf	indf2,c
 13374                           
 13375                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13376  00277E  0102               	movlb	2	; () banked
 13377  002780  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13378  002782  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13379                           
 13380                           ; BSR set to: 2
 13381                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13382  002784  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13383  002786  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13384                           
 13385                           ; BSR set to: 2
 13386                           ;usb_device_cdc.c: 905: i--;
 13387  002788  0100               	movlb	0	; () banked
 13388  00278A  0784               	decf	CDCTxService@i& (0+255),f,b
 13389  00278C                     l1959:
 13390                           
 13391                           ; BSR set to: 0
 13392  00278C  0100               	movlb	0	; () banked
 13393  00278E  5184               	movf	CDCTxService@i& (0+255),w,b
 13394  002790  B4D8               	btfsc	status,2,c
 13395  002792  D021               	goto	u14330
 13396  002794  D7DF               	goto	l1960
 13397  002796                     
 13398                           ; BSR set to: 0
 13399                           ;usb_device_cdc.c: 911: {
 13400                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13401                           
 13402                           ; BSR set to: 0
 13403  002796  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13404  00279A  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13405  00279E  6AF8               	clrf	tblptru,c
 13406  0027A0  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13407  0027A4  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13408  0027A8  0E0E               	movlw	(high __ramtop+-1)
 13409  0027AA  64F7               	cpfsgt	tblptrh,c
 13410  0027AC  D003               	bra	u14327
 13411  0027AE  0008               	tblrd		*
 13412  0027B0  50F5               	movf	tablat,w,c
 13413  0027B2  D005               	bra	u14320
 13414  0027B4                     u14327:
 13415  0027B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13416  0027B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13417  0027BC  50EF               	movf	indf0,w,c
 13418  0027BE                     u14320:
 13419  0027BE  6EDF               	movwf	indf2,c
 13420                           
 13421                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13422  0027C0  0102               	movlb	2	; () banked
 13423  0027C2  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13424  0027C4  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13425                           
 13426                           ; BSR set to: 2
 13427                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13428  0027C6  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13429  0027C8  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13430                           
 13431                           ; BSR set to: 2
 13432                           ;usb_device_cdc.c: 915: i--;
 13433  0027CA  0100               	movlb	0	; () banked
 13434  0027CC  0784               	decf	CDCTxService@i& (0+255),f,b
 13435  0027CE                     l1963:
 13436                           
 13437                           ; BSR set to: 0
 13438  0027CE  0100               	movlb	0	; () banked
 13439  0027D0  5184               	movf	CDCTxService@i& (0+255),w,b
 13440  0027D2  A4D8               	btfss	status,2,c
 13441  0027D4  D7E0               	goto	l1964
 13442  0027D6                     u14330:
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device_cdc.c: 916: }
 13446                           ;usb_device_cdc.c: 917: }
 13447                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13448                           
 13449                           ; BSR set to: 0
 13450                           
 13451                           ; BSR set to: 0
 13452  0027D6  51C5               	movf	_cdc_tx_len& (0+255),w,b
 13453  0027D8  A4D8               	btfss	status,2,c
 13454  0027DA  D008               	goto	l1968
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;usb_device_cdc.c: 924: {
 13458                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13459  0027DC  0E40               	movlw	64
 13460  0027DE  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13461  0027E0  A4D8               	btfss	status,2,c
 13462  0027E2  D002               	goto	l1967
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13466  0027E4  0E02               	movlw	2
 13467  0027E6  D001               	goto	L13
 13468  0027E8                     l1967:
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;usb_device_cdc.c: 927: else
 13472                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13473                           
 13474                           ; BSR set to: 0
 13475  0027E8  0E03               	movlw	3
 13476  0027EA                     L13:
 13477  0027EA  6FC6               	movwf	_cdc_trf_state& (0+255),b
 13478  0027EC                     l1968:
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;usb_device_cdc.c: 929: }
 13482                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13483                           
 13484                           ; BSR set to: 0
 13485                           
 13486                           ; BSR set to: 0
 13487  0027EC  0E01               	movlw	1
 13488  0027EE  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13489  0027F0  0EB6               	movlw	low _cdc_data_tx
 13490  0027F2  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13491  0027F4  0E07               	movlw	high _cdc_data_tx
 13492  0027F6  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13493  0027F8  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13494  0027FC  0E02               	movlw	2
 13495  0027FE  EC10  F020         	call	_USBTransferOnePacket
 13496  002802  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13497  002806  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13498  00280A  0012               	return	
 13499  00280C                     __end_of_CDCTxService:
 13500                           	opt stack 0
 13501                           tosu	equ	0xFFF
 13502                           tosh	equ	0xFFE
 13503                           tosl	equ	0xFFD
 13504                           pclath	equ	0xFFA
 13505                           tblptru	equ	0xFF8
 13506                           tblptrh	equ	0xFF7
 13507                           tblptrl	equ	0xFF6
 13508                           tablat	equ	0xFF5
 13509                           prodh	equ	0xFF4
 13510                           prodl	equ	0xFF3
 13511                           intcon	equ	0xFF2
 13512                           intcon2	equ	0xFF1
 13513                           intcon3	equ	0xFF0
 13514                           indf0	equ	0xFEF
 13515                           postinc0	equ	0xFEE
 13516                           plusw0	equ	0xFEB
 13517                           fsr0h	equ	0xFEA
 13518                           fsr0l	equ	0xFE9
 13519                           wreg	equ	0xFE8
 13520                           indf1	equ	0xFE7
 13521                           postinc1	equ	0xFE6
 13522                           postdec1	equ	0xFE5
 13523                           fsr1h	equ	0xFE2
 13524                           fsr1l	equ	0xFE1
 13525                           indf2	equ	0xFDF
 13526                           postinc2	equ	0xFDE
 13527                           postdec2	equ	0xFDD
 13528                           plusw2	equ	0xFDB
 13529                           fsr2h	equ	0xFDA
 13530                           fsr2l	equ	0xFD9
 13531                           status	equ	0xFD8
 13532                           
 13533 ;; *************** function _Term_MainSm *****************
 13534 ;; Defined at:
 13535 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;		None
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13540 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13541 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13542 ;;  FwkBuildYear    4    0        unsigned char [4]
 13543 ;;  FwkBuildMont    4    0        unsigned char [4]
 13544 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      void 
 13547 ;; Registers used:
 13548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13555 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13557 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13558 ;;Total ram usage:       12 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:   16
 13561 ;; This function calls:
 13562 ;;		_OsTmr_GetTimerStatus
 13563 ;;		_OsTmr_StartTimer
 13564 ;;		_Terminal
 13565 ;;		_memset
 13566 ;;		_putUSBUSART
 13567 ;;		_sprintf
 13568 ;;		_strcat
 13569 ;;		_strcpy
 13570 ;;		_strlen
 13571 ;;		_utoa
 13572 ;; This function is called by:
 13573 ;;		_Term_MainTask
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           	psect	text55
 13578  0010B6                     __ptext55:
 13579                           	opt stack 0
 13580  0010B6                     _Term_MainSm:
 13581                           	opt stack 11
 13582                           
 13583                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13584                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13585                           ;term.c: 711: static UINT8 Data[50];
 13586                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13587                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13588                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13589                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13590                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13591                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13592                           ;term.c: 719: switch (TermMainSmState)
 13593                           
 13594                           ;incstack = 0
 13595  0010B6  D133               	goto	l2427
 13596  0010B8                     
 13597                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13598  0010B8  0ECA               	movlw	low Term_MainSm@TermDelay
 13599  0010BA  0100               	movlb	0	; () banked
 13600  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13601  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13602  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13603  0010C2  0ED0               	movlw	208
 13604  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13605  0010C6  0E07               	movlw	7
 13606  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13607  0010CA  0E00               	movlw	0
 13608  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13609  0010CE  0E00               	movlw	0
 13610  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13611  0010D2  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 13612                           
 13613                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13614  0010D6  0E01               	movlw	1
 13615  0010D8  0102               	movlb	2	; () banked
 13616  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13617                           
 13618                           ;term.c: 726: break;
 13619  0010DC  0012               	return	
 13620  0010DE                     
 13621                           ; BSR set to: 2
 13622                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13623                           
 13624                           ; BSR set to: 2
 13625  0010DE  0ECA               	movlw	low Term_MainSm@TermDelay
 13626  0010E0  0100               	movlb	0	; () banked
 13627  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13628  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13629  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13630  0010E8  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 13631  0010EC  06E8               	decf	wreg,f,c
 13632  0010EE  A4D8               	btfss	status,2,c
 13633  0010F0  0012               	return	
 13634                           
 13635                           ;term.c: 731: {
 13636                           ;term.c: 733: TermMainSmState = Term_InitState;
 13637  0010F2  0E02               	movlw	2
 13638  0010F4  0102               	movlb	2	; () banked
 13639  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13640                           
 13641                           ; BSR set to: 2
 13642                           ;term.c: 734: }
 13643                           ;term.c: 735: break;
 13644  0010F8  0012               	return	
 13645  0010FA                     
 13646                           ; BSR set to: 2
 13647                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13648                           
 13649                           ; BSR set to: 2
 13650  0010FA  0E1F               	movlw	31
 13651  0010FC  0100               	movlb	0	; () banked
 13652  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13653  001100  0012               	return	
 13654                           
 13655                           ; BSR set to: 0
 13656  001102  B265               	btfsc	3941,1,c	;volatile
 13657  001104  0012               	return	
 13658                           
 13659                           ; BSR set to: 0
 13660                           ;term.c: 743: else
 13661                           ;term.c: 744: {
 13662                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13663                           
 13664                           ; BSR set to: 0
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;term.c: 740: {
 13668                           ;term.c: 742: }
 13669  001106  0E03               	movlw	3
 13670  001108  0102               	movlb	2	; () banked
 13671  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13672                           
 13673                           ; BSR set to: 2
 13674                           ;term.c: 747: }
 13675                           ;term.c: 748: break;
 13676  00110C  0012               	return	
 13677  00110E                     
 13678                           ; BSR set to: 2
 13679                           ;term.c: 752: if((cdc_trf_state == 0))
 13680                           
 13681                           ; BSR set to: 2
 13682  00110E  0100               	movlb	0	; () banked
 13683  001110  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13684  001112  A4D8               	btfss	status,2,c
 13685  001114  0012               	return	
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;term.c: 753: {
 13689                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13690  001116  0E2F               	movlw	low _Welcome
 13691  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13692  00111A  0EFD               	movlw	high _Welcome
 13693  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13694  00111E  0E88               	movlw	136
 13695  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13696  001122  ECCC  F02F         	call	_putUSBUSART	;wreg free
 13697                           
 13698                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13699  001126  0E04               	movlw	4
 13700  001128  0102               	movlb	2	; () banked
 13701  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13702                           
 13703                           ; BSR set to: 2
 13704                           ;term.c: 758: }
 13705                           ;term.c: 759: break;
 13706  00112C  0012               	return	
 13707  00112E                     
 13708                           ; BSR set to: 2
 13709                           ;term.c: 763: if((cdc_trf_state == 0))
 13710                           
 13711                           ; BSR set to: 2
 13712  00112E  0100               	movlb	0	; () banked
 13713  001130  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13714  001132  A4D8               	btfss	status,2,c
 13715  001134  0012               	return	
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;term.c: 764: {
 13719                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13720  001136  0E3F               	movlw	low _MsgFormat
 13721  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13722  00113A  0EFC               	movlw	high _MsgFormat
 13723  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13724  00113E  0EEF               	movlw	239
 13725  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13726  001142  ECCC  F02F         	call	_putUSBUSART	;wreg free
 13727                           
 13728                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13729  001146  0E05               	movlw	5
 13730  001148  0102               	movlb	2	; () banked
 13731  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;term.c: 769: }
 13735                           ;term.c: 770: break;
 13736  00114C  0012               	return	
 13737  00114E                     
 13738                           ; BSR set to: 2
 13739                           ;term.c: 774: if((cdc_trf_state == 0))
 13740                           
 13741                           ; BSR set to: 2
 13742  00114E  0100               	movlb	0	; () banked
 13743  001150  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13744  001152  A4D8               	btfss	status,2,c
 13745  001154  0012               	return	
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;term.c: 775: {
 13749                           ;term.c: 777: memset(Data,0,50);
 13750  001156  0E63               	movlw	low Term_MainSm@Data
 13751  001158  6F7D               	movwf	memset@p1& (0+255),b
 13752  00115A  0E04               	movlw	high Term_MainSm@Data
 13753  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13754  00115E  0E00               	movlw	0
 13755  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13756  001162  0E00               	movlw	0
 13757  001164  6F7F               	movwf	memset@c& (0+255),b
 13758  001166  0E00               	movlw	0
 13759  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13760  00116A  0E32               	movlw	50
 13761  00116C  6F81               	movwf	memset@n& (0+255),b
 13762  00116E  EC74  F02E         	call	_memset	;wreg free
 13763                           
 13764                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13765  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13766  001174  0100               	movlb	0	; () banked
 13767  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13768  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13769  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13770  00117C  0E00               	movlw	0
 13771  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13772  001180  0E01               	movlw	1
 13773  001182  6F8C               	movwf	utoa@val& (0+255),b
 13774  001184  0E00               	movlw	0
 13775  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13776  001188  0E0A               	movlw	10
 13777  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13778  00118C  EC76  F021         	call	_utoa	;wreg free
 13779                           
 13780                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13781  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13782  001192  0100               	movlb	0	; () banked
 13783  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13784  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13785  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13786  00119A  0E00               	movlw	0
 13787  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13788  00119E  0E02               	movlw	2
 13789  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13790  0011A2  0E00               	movlw	0
 13791  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13792  0011A6  0E0A               	movlw	10
 13793  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13794  0011AA  EC76  F021         	call	_utoa	;wreg free
 13795                           
 13796                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13797  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13798  0011B0  0100               	movlb	0	; () banked
 13799  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13800  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13801  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13802  0011B8  0E00               	movlw	0
 13803  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13804  0011BC  0E00               	movlw	0
 13805  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 13806  0011C0  0E00               	movlw	0
 13807  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13808  0011C4  0E0A               	movlw	10
 13809  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 13810  0011C8  EC76  F021         	call	_utoa	;wreg free
 13811                           
 13812                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 13813  0011CC  0E63               	movlw	low Term_MainSm@Data
 13814  0011CE  0100               	movlb	0	; () banked
 13815  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 13816  0011D2  0E04               	movlw	high Term_MainSm@Data
 13817  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 13818  0011D6  0EDF               	movlw	low STR_23
 13819  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 13820  0011DA  0EFE               	movlw	high STR_23
 13821  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 13822  0011DE  EC43  F02E         	call	_strcpy	;wreg free
 13823                           
 13824                           ;term.c: 783: strcat(Data,FwkMajorStr);
 13825  0011E2  0E63               	movlw	low Term_MainSm@Data
 13826  0011E4  0100               	movlb	0	; () banked
 13827  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 13828  0011E8  0E04               	movlw	high Term_MainSm@Data
 13829  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13830  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13831  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 13832  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13833  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 13834  0011F4  ECCE  F028         	call	_strcat	;wreg free
 13835                           
 13836                           ;term.c: 784: strcat(Data,".");
 13837  0011F8  0E63               	movlw	low Term_MainSm@Data
 13838  0011FA  0100               	movlb	0	; () banked
 13839  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 13840  0011FE  0E04               	movlw	high Term_MainSm@Data
 13841  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13842  001202  0EF4               	movlw	low STR_24
 13843  001204  6F7F               	movwf	strcat@from& (0+255),b
 13844  001206  0EFF               	movlw	high STR_24
 13845  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 13846  00120A  ECCE  F028         	call	_strcat	;wreg free
 13847                           
 13848                           ;term.c: 785: strcat(Data,FwkMinorStr);
 13849  00120E  0E63               	movlw	low Term_MainSm@Data
 13850  001210  0100               	movlb	0	; () banked
 13851  001212  6F7D               	movwf	strcat@to& (0+255),b
 13852  001214  0E04               	movlw	high Term_MainSm@Data
 13853  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13854  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13855  00121A  6F7F               	movwf	strcat@from& (0+255),b
 13856  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13857  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 13858  001220  ECCE  F028         	call	_strcat	;wreg free
 13859                           
 13860                           ;term.c: 786: strcat(Data,".");
 13861  001224  0E63               	movlw	low Term_MainSm@Data
 13862  001226  0100               	movlb	0	; () banked
 13863  001228  6F7D               	movwf	strcat@to& (0+255),b
 13864  00122A  0E04               	movlw	high Term_MainSm@Data
 13865  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13866  00122E  0EF4               	movlw	low STR_24
 13867  001230  6F7F               	movwf	strcat@from& (0+255),b
 13868  001232  0EFF               	movlw	high STR_24
 13869  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 13870  001236  ECCE  F028         	call	_strcat	;wreg free
 13871                           
 13872                           ;term.c: 787: strcat(Data,FwkBuildStr);
 13873  00123A  0E63               	movlw	low Term_MainSm@Data
 13874  00123C  0100               	movlb	0	; () banked
 13875  00123E  6F7D               	movwf	strcat@to& (0+255),b
 13876  001240  0E04               	movlw	high Term_MainSm@Data
 13877  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13878  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13879  001246  6F7F               	movwf	strcat@from& (0+255),b
 13880  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13881  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 13882  00124C  ECCE  F028         	call	_strcat	;wreg free
 13883                           
 13884                           ;term.c: 788: strcat(Data,"\r\n");
 13885  001250  0E63               	movlw	low Term_MainSm@Data
 13886  001252  0100               	movlb	0	; () banked
 13887  001254  6F7D               	movwf	strcat@to& (0+255),b
 13888  001256  0E04               	movlw	high Term_MainSm@Data
 13889  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 13890  00125A  0E93               	movlw	low (STR_21+39)
 13891  00125C  6F7F               	movwf	strcat@from& (0+255),b
 13892  00125E  0EFE               	movlw	high (STR_21+39)
 13893  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 13894  001262  ECCE  F028         	call	_strcat	;wreg free
 13895                           
 13896                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 13897  001266  0E63               	movlw	low Term_MainSm@Data
 13898  001268  0100               	movlb	0	; () banked
 13899  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 13900  00126C  0E04               	movlw	high Term_MainSm@Data
 13901  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13902  001270  0E63               	movlw	low Term_MainSm@Data
 13903  001272  6F7D               	movwf	strlen@s& (0+255),b
 13904  001274  0E04               	movlw	high Term_MainSm@Data
 13905  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13906  001278  EC08  F02D         	call	_strlen	;wreg free
 13907  00127C  0100               	movlb	0	; () banked
 13908  00127E  517D               	movf	?_strlen& (0+255),w,b
 13909  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 13910  001282  ECCC  F02F         	call	_putUSBUSART	;wreg free
 13911                           
 13912                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 13913  001286  0E06               	movlw	6
 13914  001288  0102               	movlb	2	; () banked
 13915  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13916                           
 13917                           ; BSR set to: 2
 13918                           ;term.c: 793: }
 13919                           ;term.c: 794: break;
 13920  00128C  0012               	return	
 13921  00128E                     
 13922                           ; BSR set to: 2
 13923                           ;term.c: 798: if((cdc_trf_state == 0))
 13924                           
 13925                           ; BSR set to: 2
 13926  00128E  0100               	movlb	0	; () banked
 13927  001290  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13928  001292  A4D8               	btfss	status,2,c
 13929  001294  0012               	return	
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;term.c: 799: {
 13933                           ;term.c: 801: memset(Data,0,50);
 13934  001296  0E63               	movlw	low Term_MainSm@Data
 13935  001298  6F7D               	movwf	memset@p1& (0+255),b
 13936  00129A  0E04               	movlw	high Term_MainSm@Data
 13937  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13938  00129E  0E00               	movlw	0
 13939  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 13940  0012A2  0E00               	movlw	0
 13941  0012A4  6F7F               	movwf	memset@c& (0+255),b
 13942  0012A6  0E00               	movlw	0
 13943  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 13944  0012AA  0E32               	movlw	50
 13945  0012AC  6F81               	movwf	memset@n& (0+255),b
 13946  0012AE  EC74  F02E         	call	_memset	;wreg free
 13947                           
 13948                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 20 2022");
 13949  0012B2  0E63               	movlw	low Term_MainSm@Data
 13950  0012B4  0100               	movlb	0	; () banked
 13951  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 13952  0012B8  0E04               	movlw	high Term_MainSm@Data
 13953  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 13954  0012BC  0E1A               	movlw	low STR_27
 13955  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 13956  0012C0  0EFF               	movlw	high STR_27
 13957  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 13958  0012C4  0EB5               	movlw	low STR_28
 13959  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 13960  0012C8  0EFF               	movlw	high STR_28
 13961  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 13962  0012CC  EC22  F01C         	call	_sprintf	;wreg free
 13963                           
 13964                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 13965  0012D0  0E63               	movlw	low Term_MainSm@Data
 13966  0012D2  0100               	movlb	0	; () banked
 13967  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 13968  0012D6  0E04               	movlw	high Term_MainSm@Data
 13969  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13970  0012DA  0E63               	movlw	low Term_MainSm@Data
 13971  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 13972  0012DE  0E04               	movlw	high Term_MainSm@Data
 13973  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 13974  0012E2  EC08  F02D         	call	_strlen	;wreg free
 13975  0012E6  0100               	movlb	0	; () banked
 13976  0012E8  517D               	movf	?_strlen& (0+255),w,b
 13977  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 13978  0012EC  ECCC  F02F         	call	_putUSBUSART	;wreg free
 13979                           
 13980                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 13981  0012F0  0E07               	movlw	7
 13982  0012F2  0102               	movlb	2	; () banked
 13983  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13984                           
 13985                           ; BSR set to: 2
 13986                           ;term.c: 808: }
 13987                           ;term.c: 809: break;
 13988  0012F6  0012               	return	
 13989  0012F8                     
 13990                           ; BSR set to: 2
 13991                           ;term.c: 813: if((cdc_trf_state == 0))
 13992                           
 13993                           ; BSR set to: 2
 13994  0012F8  0100               	movlb	0	; () banked
 13995  0012FA  51C6               	movf	_cdc_trf_state& (0+255),w,b
 13996  0012FC  A4D8               	btfss	status,2,c
 13997  0012FE  0012               	return	
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;term.c: 814: {
 14001                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14002  001300  0E3F               	movlw	low _MsgReady
 14003  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14004  001304  0EFE               	movlw	high _MsgReady
 14005  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14006  001308  0E16               	movlw	22
 14007  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14008  00130C  ECCC  F02F         	call	_putUSBUSART	;wreg free
 14009                           
 14010                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14011  001310  0E08               	movlw	8
 14012  001312  0102               	movlb	2	; () banked
 14013  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14014                           
 14015                           ; BSR set to: 2
 14016                           ;term.c: 819: }
 14017                           ;term.c: 820: break;
 14018  001316  0012               	return	
 14019  001318                     
 14020                           ; BSR set to: 2
 14021                           ;term.c: 824: Terminal();
 14022                           
 14023                           ; BSR set to: 2
 14024  001318  EC68  F000         	call	_Terminal	;wreg free
 14025                           
 14026                           ;term.c: 829: }
 14027                           
 14028                           ;term.c: 828: break;
 14029                           
 14030                           ;term.c: 827: default:
 14031                           
 14032                           ;term.c: 825: break;
 14033  00131C  0012               	return	
 14034  00131E                     l2427:
 14035  00131E  0102               	movlb	2	; () banked
 14036  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14037                           
 14038                           ; Switch size 1, requested type "space"
 14039                           ; Number of cases is 9, Range of values is 0 to 8
 14040                           ; switch strategies available:
 14041                           ; Name         Instructions Cycles
 14042                           ; simple_byte           28    15 (average)
 14043                           ;	Chosen strategy is simple_byte
 14044  001322  0A00               	xorlw	0	; case 0
 14045  001324  B4D8               	btfsc	status,2,c
 14046  001326  D6C8               	goto	l2428
 14047  001328  0A01               	xorlw	1	; case 1
 14048  00132A  B4D8               	btfsc	status,2,c
 14049  00132C  D6D8               	goto	l2430
 14050  00132E  0A03               	xorlw	3	; case 2
 14051  001330  B4D8               	btfsc	status,2,c
 14052  001332  D6E3               	goto	l2432
 14053  001334  0A01               	xorlw	1	; case 3
 14054  001336  B4D8               	btfsc	status,2,c
 14055  001338  D6EA               	goto	l2437
 14056  00133A  0A07               	xorlw	7	; case 4
 14057  00133C  B4D8               	btfsc	status,2,c
 14058  00133E  D6F7               	goto	l2439
 14059  001340  0A01               	xorlw	1	; case 5
 14060  001342  B4D8               	btfsc	status,2,c
 14061  001344  D704               	goto	l2441
 14062  001346  0A03               	xorlw	3	; case 6
 14063  001348  B4D8               	btfsc	status,2,c
 14064  00134A  D7A1               	goto	l2443
 14065  00134C  0A01               	xorlw	1	; case 7
 14066  00134E  B4D8               	btfsc	status,2,c
 14067  001350  D7D3               	goto	l2445
 14068  001352  0A0F               	xorlw	15	; case 8
 14069  001354  A4D8               	btfss	status,2,c
 14070  001356  0012               	return	
 14071  001358  D7DF               	goto	l2447
 14072  00135A                     __end_of_Term_MainSm:
 14073                           	opt stack 0
 14074                           tosu	equ	0xFFF
 14075                           tosh	equ	0xFFE
 14076                           tosl	equ	0xFFD
 14077                           pclath	equ	0xFFA
 14078                           tblptru	equ	0xFF8
 14079                           tblptrh	equ	0xFF7
 14080                           tblptrl	equ	0xFF6
 14081                           tablat	equ	0xFF5
 14082                           prodh	equ	0xFF4
 14083                           prodl	equ	0xFF3
 14084                           intcon	equ	0xFF2
 14085                           intcon2	equ	0xFF1
 14086                           intcon3	equ	0xFF0
 14087                           indf0	equ	0xFEF
 14088                           postinc0	equ	0xFEE
 14089                           plusw0	equ	0xFEB
 14090                           fsr0h	equ	0xFEA
 14091                           fsr0l	equ	0xFE9
 14092                           wreg	equ	0xFE8
 14093                           indf1	equ	0xFE7
 14094                           postinc1	equ	0xFE6
 14095                           postdec1	equ	0xFE5
 14096                           fsr1h	equ	0xFE2
 14097                           fsr1l	equ	0xFE1
 14098                           indf2	equ	0xFDF
 14099                           postinc2	equ	0xFDE
 14100                           postdec2	equ	0xFDD
 14101                           plusw2	equ	0xFDB
 14102                           fsr2h	equ	0xFDA
 14103                           fsr2l	equ	0xFD9
 14104                           status	equ	0xFD8
 14105                           
 14106 ;; *************** function _strlen *****************
 14107 ;; Defined at:
 14108 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14111 ;;		 -> Term_MainSm@Data(50), 
 14112 ;; Auto vars:     Size  Location     Type
 14113 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14114 ;;		 -> Term_MainSm@Data(50), 
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  2   29[BANK0 ] unsigned int 
 14117 ;; Registers used:
 14118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14119 ;; Tracked objects:
 14120 ;;		On entry : 0/0
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14124 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14126 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14127 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14128 ;;Total ram usage:        6 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:   11
 14131 ;; This function calls:
 14132 ;;		Nothing
 14133 ;; This function is called by:
 14134 ;;		_Term_MainSm
 14135 ;; This function uses a non-reentrant model
 14136 ;;
 14137                           
 14138                           	psect	text56
 14139  005A10                     __ptext56:
 14140                           	opt stack 0
 14141  005A10                     _strlen:
 14142                           	opt stack 15
 14143                           
 14144                           ;incstack = 0
 14145  005A10  C07D  F081         	movff	strlen@s,strlen@cp
 14146  005A14  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14147  005A18  D003               	goto	l3252
 14148  005A1A  0100               	movlb	0	; () banked
 14149  005A1C  4B81               	infsnz	strlen@cp& (0+255),f,b
 14150  005A1E  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14151  005A20                     l3252:
 14152                           
 14153                           ; BSR set to: 0
 14154  005A20  C081  FFD9         	movff	strlen@cp,fsr2l
 14155  005A24  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14156  005A28  50DF               	movf	indf2,w,c
 14157  005A2A  A4D8               	btfss	status,2,c
 14158  005A2C  D7F6               	goto	l3253
 14159  005A2E  C07D  F07F         	movff	strlen@s,??_strlen
 14160  005A32  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14161  005A36  0100               	movlb	0	; () banked
 14162  005A38  1F7F               	comf	??_strlen& (0+255),f,b
 14163  005A3A  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14164  005A3C  4B7F               	infsnz	??_strlen& (0+255),f,b
 14165  005A3E  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14166  005A40  5181               	movf	strlen@cp& (0+255),w,b
 14167  005A42  257F               	addwf	??_strlen& (0+255),w,b
 14168  005A44  6F7D               	movwf	?_strlen& (0+255),b
 14169  005A46  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14170  005A48  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14171  005A4A  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14172  005A4C  0012               	return	
 14173  005A4E                     __end_of_strlen:
 14174                           	opt stack 0
 14175                           tosu	equ	0xFFF
 14176                           tosh	equ	0xFFE
 14177                           tosl	equ	0xFFD
 14178                           pclath	equ	0xFFA
 14179                           tblptru	equ	0xFF8
 14180                           tblptrh	equ	0xFF7
 14181                           tblptrl	equ	0xFF6
 14182                           tablat	equ	0xFF5
 14183                           prodh	equ	0xFF4
 14184                           prodl	equ	0xFF3
 14185                           intcon	equ	0xFF2
 14186                           intcon2	equ	0xFF1
 14187                           intcon3	equ	0xFF0
 14188                           indf0	equ	0xFEF
 14189                           postinc0	equ	0xFEE
 14190                           plusw0	equ	0xFEB
 14191                           fsr0h	equ	0xFEA
 14192                           fsr0l	equ	0xFE9
 14193                           wreg	equ	0xFE8
 14194                           indf1	equ	0xFE7
 14195                           postinc1	equ	0xFE6
 14196                           postdec1	equ	0xFE5
 14197                           fsr1h	equ	0xFE2
 14198                           fsr1l	equ	0xFE1
 14199                           indf2	equ	0xFDF
 14200                           postinc2	equ	0xFDE
 14201                           postdec2	equ	0xFDD
 14202                           plusw2	equ	0xFDB
 14203                           fsr2h	equ	0xFDA
 14204                           fsr2l	equ	0xFD9
 14205                           status	equ	0xFD8
 14206                           
 14207 ;; *************** function _strcat *****************
 14208 ;; Defined at:
 14209 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14212 ;;		 -> Term_MainSm@Data(50), 
 14213 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14214 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14215 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14218 ;;		 -> Term_MainSm@Data(50), 
 14219 ;; Return value:  Size  Location     Type
 14220 ;;                  2   29[BANK0 ] PTR unsigned char 
 14221 ;; Registers used:
 14222 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14223 ;; Tracked objects:
 14224 ;;		On entry : 0/0
 14225 ;;		On exit  : 0/0
 14226 ;;		Unchanged: 0/0
 14227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14232 ;;Total ram usage:        6 bytes
 14233 ;; Hardware stack levels used:    1
 14234 ;; Hardware stack levels required when called:   11
 14235 ;; This function calls:
 14236 ;;		Nothing
 14237 ;; This function is called by:
 14238 ;;		_Term_MainSm
 14239 ;; This function uses a non-reentrant model
 14240 ;;
 14241                           
 14242                           	psect	text57
 14243  00519C                     __ptext57:
 14244                           	opt stack 0
 14245  00519C                     _strcat:
 14246                           	opt stack 15
 14247                           
 14248                           ; BSR set to: 0
 14249                           ;incstack = 0
 14250  00519C  C07D  F081         	movff	strcat@to,strcat@cp
 14251  0051A0  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14252  0051A4  D003               	goto	l3237
 14253  0051A6  0100               	movlb	0	; () banked
 14254  0051A8  4B81               	infsnz	strcat@cp& (0+255),f,b
 14255  0051AA  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14256  0051AC                     l3237:
 14257                           
 14258                           ; BSR set to: 0
 14259  0051AC  C081  FFD9         	movff	strcat@cp,fsr2l
 14260  0051B0  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14261  0051B4  50DF               	movf	indf2,w,c
 14262  0051B6  B4D8               	btfsc	status,2,c
 14263  0051B8  D006               	goto	l3240
 14264  0051BA  D7F5               	goto	l3238
 14265  0051BC  0100               	movlb	0	; () banked
 14266  0051BE  4B81               	infsnz	strcat@cp& (0+255),f,b
 14267  0051C0  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14268  0051C2  4B7F               	infsnz	strcat@from& (0+255),f,b
 14269  0051C4  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14270  0051C6                     l3240:
 14271                           
 14272                           ; BSR set to: 0
 14273  0051C6  C07F  FFF6         	movff	strcat@from,tblptrl
 14274  0051CA  C080  FFF7         	movff	strcat@from+1,tblptrh
 14275  0051CE  6AF8               	clrf	tblptru,c
 14276  0051D0  C081  FFD9         	movff	strcat@cp,fsr2l
 14277  0051D4  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14278  0051D8  0E0E               	movlw	(high __ramtop+-1)
 14279  0051DA  64F7               	cpfsgt	tblptrh,c
 14280  0051DC  D003               	bra	u13117
 14281  0051DE  0008               	tblrd		*
 14282  0051E0  50F5               	movf	tablat,w,c
 14283  0051E2  D005               	bra	u13110
 14284  0051E4                     u13117:
 14285  0051E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 14286  0051E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 14287  0051EC  50EF               	movf	indf0,w,c
 14288  0051EE                     u13110:
 14289  0051EE  6EDF               	movwf	indf2,c
 14290  0051F0  50DF               	movf	indf2,w,c
 14291  0051F2  B4D8               	btfsc	status,2,c
 14292  0051F4  0012               	return	
 14293  0051F6  D7E2               	goto	l3241
 14294  0051F8                     __end_of_strcat:
 14295                           	opt stack 0
 14296                           tosu	equ	0xFFF
 14297                           tosh	equ	0xFFE
 14298                           tosl	equ	0xFFD
 14299                           pclath	equ	0xFFA
 14300                           tblptru	equ	0xFF8
 14301                           tblptrh	equ	0xFF7
 14302                           tblptrl	equ	0xFF6
 14303                           tablat	equ	0xFF5
 14304                           prodh	equ	0xFF4
 14305                           prodl	equ	0xFF3
 14306                           intcon	equ	0xFF2
 14307                           intcon2	equ	0xFF1
 14308                           intcon3	equ	0xFF0
 14309                           indf0	equ	0xFEF
 14310                           postinc0	equ	0xFEE
 14311                           plusw0	equ	0xFEB
 14312                           fsr0h	equ	0xFEA
 14313                           fsr0l	equ	0xFE9
 14314                           wreg	equ	0xFE8
 14315                           indf1	equ	0xFE7
 14316                           postinc1	equ	0xFE6
 14317                           postdec1	equ	0xFE5
 14318                           fsr1h	equ	0xFE2
 14319                           fsr1l	equ	0xFE1
 14320                           indf2	equ	0xFDF
 14321                           postinc2	equ	0xFDE
 14322                           postdec2	equ	0xFDD
 14323                           plusw2	equ	0xFDB
 14324                           fsr2h	equ	0xFDA
 14325                           fsr2l	equ	0xFD9
 14326                           status	equ	0xFD8
 14327                           
 14328 ;; *************** function _sprintf *****************
 14329 ;; Defined at:
 14330 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14333 ;;		 -> Term_MainSm@Data(50), 
 14334 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14335 ;;		 -> STR_27(17), 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  tmpval          4    0        struct .
 14338 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14339 ;;		 -> STR_31(7), STR_28(12), 
 14340 ;;  ap              2   36[BANK0 ] PTR void [1]
 14341 ;;		 -> ?_sprintf(2), 
 14342 ;;  len             2    0        unsigned int 
 14343 ;;  val             2    0        unsigned int 
 14344 ;;  c               1   38[BANK0 ] char 
 14345 ;;  flag            1   35[BANK0 ] unsigned char 
 14346 ;;  prec            1    0        char 
 14347 ;; Return value:  Size  Location     Type
 14348 ;;                  2   29[BANK0 ] int 
 14349 ;; Registers used:
 14350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14356 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14357 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14359 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14360 ;;Total ram usage:       12 bytes
 14361 ;; Hardware stack levels used:    1
 14362 ;; Hardware stack levels required when called:   11
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_Term_MainSm
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           	psect	text58
 14371  003844                     __ptext58:
 14372                           	opt stack 0
 14373  003844                     _sprintf:
 14374                           	opt stack 15
 14375                           
 14376                           ;doprnt.c: 494: va_list ap;
 14377                           ;doprnt.c: 499: signed char c;
 14378                           ;doprnt.c: 506: signed char prec;
 14379                           ;doprnt.c: 508: unsigned char flag;
 14380                           ;doprnt.c: 523: union {
 14381                           ;doprnt.c: 524: unsigned long vd;
 14382                           ;doprnt.c: 525: double integ;
 14383                           ;doprnt.c: 526: } tmpval;
 14384                           ;doprnt.c: 528: unsigned int val;
 14385                           ;doprnt.c: 529: unsigned len;
 14386                           ;doprnt.c: 530: const char * cp;
 14387                           ;doprnt.c: 533: *ap = __va_start();
 14388                           
 14389                           ;incstack = 0
 14390  003844  0E81               	movlw	low (?_sprintf+4)
 14391  003846  0100               	movlb	0	; () banked
 14392  003848  6F84               	movwf	sprintf@ap& (0+255),b
 14393  00384A  0E00               	movlw	high (?_sprintf+4)
 14394  00384C  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14395                           
 14396                           ;doprnt.c: 536: while(c = *f++) {
 14397  00384E  D04E               	goto	l2641
 14398  003850                     
 14399                           ; BSR set to: 0
 14400                           ;doprnt.c: 538: if(c != '%')
 14401                           
 14402                           ; BSR set to: 0
 14403  003850  0E25               	movlw	37
 14404  003852  1986               	xorwf	sprintf@c& (0+255),w,b
 14405  003854  B4D8               	btfsc	status,2,c
 14406  003856  D009               	goto	l2631
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;doprnt.c: 540: {
 14410                           ;doprnt.c: 541: ((*sp++ = (c)));
 14411  003858  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14412  00385C  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14413  003860  C086  FFDF         	movff	sprintf@c,indf2
 14414                           
 14415                           ; BSR set to: 0
 14416  003864  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14417  003866  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14418                           
 14419                           ;doprnt.c: 542: continue;
 14420  003868  D041               	goto	l2641
 14421  00386A                     l2631:
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;doprnt.c: 543: }
 14425                           ;doprnt.c: 548: flag = 0;
 14426                           
 14427                           ; BSR set to: 0
 14428  00386A  0E00               	movlw	0
 14429  00386C  6F83               	movwf	sprintf@flag& (0+255),b
 14430                           
 14431                           ;doprnt.c: 635: switch(c = *f++) {
 14432  00386E  D02E               	goto	l2632
 14433  003870                     
 14434                           ; BSR set to: 0
 14435                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14436                           
 14437                           ; BSR set to: 0
 14438  003870  C084  FFD9         	movff	sprintf@ap,fsr2l
 14439  003874  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14440  003878  CFDE F087          	movff	postinc2,sprintf@cp
 14441  00387C  CFDD F088          	movff	postdec2,sprintf@cp+1
 14442                           
 14443                           ; BSR set to: 0
 14444  003880  0E02               	movlw	2
 14445  003882  2784               	addwf	sprintf@ap& (0+255),f,b
 14446  003884  0E00               	movlw	0
 14447  003886  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14448                           
 14449                           ; BSR set to: 0
 14450                           ;doprnt.c: 740: if(!cp)
 14451  003888  5187               	movf	sprintf@cp& (0+255),w,b
 14452  00388A  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14453  00388C  A4D8               	btfss	status,2,c
 14454  00388E  D014               	goto	l2637
 14455                           
 14456                           ; BSR set to: 0
 14457                           ;doprnt.c: 741: cp = "(null)";
 14458  003890  0ED7               	movlw	low STR_31
 14459  003892  6F87               	movwf	sprintf@cp& (0+255),b
 14460  003894  0EFF               	movlw	high STR_31
 14461  003896  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14462                           
 14463                           ; BSR set to: 0
 14464                           ;doprnt.c: 777: while(*cp)
 14465  003898  D00F               	goto	l2637
 14466  00389A                     
 14467                           ; BSR set to: 0
 14468                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14469                           
 14470                           ; BSR set to: 0
 14471  00389A  C087  FFF6         	movff	sprintf@cp,tblptrl
 14472  00389E  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14473  0038A2                     	if	0	;tblptru may be non-zero
 14474  0038A2                     	endif
 14475  0038A2                     	if	0	;tblptru may be non-zero
 14476  0038A2                     	endif
 14477  0038A2  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14478  0038A6  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14479  0038AA  0008               	tblrd		*
 14480  0038AC  CFF5 FFDF          	movff	tablat,indf2
 14481                           
 14482                           ; BSR set to: 0
 14483  0038B0  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14484  0038B2  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14485                           
 14486                           ; BSR set to: 0
 14487  0038B4  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14488  0038B6  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14489  0038B8                     l2637:
 14490                           
 14491                           ; BSR set to: 0
 14492                           
 14493                           ; BSR set to: 0
 14494  0038B8  C087  FFF6         	movff	sprintf@cp,tblptrl
 14495  0038BC  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14496  0038C0                     	if	0	;tblptru may be non-zero
 14497  0038C0                     	endif
 14498  0038C0                     	if	0	;tblptru may be non-zero
 14499  0038C0                     	endif
 14500  0038C0  0008               	tblrd		*
 14501  0038C2  50F5               	movf	tablat,w,c
 14502  0038C4  0900               	iorlw	0
 14503  0038C6  B4D8               	btfsc	status,2,c
 14504  0038C8  D011               	goto	l2641
 14505  0038CA  D7E7               	goto	l2638
 14506  0038CC                     l2632:
 14507                           
 14508                           ; BSR set to: 0
 14509                           
 14510                           ; BSR set to: 0
 14511  0038CC  C07F  FFF6         	movff	sprintf@f,tblptrl
 14512  0038D0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14513  0038D4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14514  0038D6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14515  0038D8                     	if	0	;tblptru may be non-zero
 14516  0038D8                     	endif
 14517  0038D8                     	if	0	;tblptru may be non-zero
 14518  0038D8                     	endif
 14519  0038D8  0008               	tblrd		*
 14520  0038DA  CFF5 F086          	movff	tablat,sprintf@c
 14521  0038DE  5186               	movf	sprintf@c& (0+255),w,b
 14522                           
 14523                           ; Switch size 1, requested type "space"
 14524                           ; Number of cases is 2, Range of values is 0 to 115
 14525                           ; switch strategies available:
 14526                           ; Name         Instructions Cycles
 14527                           ; simple_byte            7     4 (average)
 14528                           ;	Chosen strategy is simple_byte
 14529  0038E0  0A00               	xorlw	0	; case 0
 14530  0038E2  B4D8               	btfsc	status,2,c
 14531  0038E4  D00F               	goto	u13170
 14532  0038E6  0A73               	xorlw	115	; case 115
 14533  0038E8  B4D8               	btfsc	status,2,c
 14534  0038EA  D7C2               	goto	l2635
 14535  0038EC                     l2641:
 14536                           
 14537                           ; BSR set to: 0
 14538                           
 14539                           ; BSR set to: 0
 14540                           
 14541                           ;doprnt.c: 1422: {
 14542                           
 14543                           ; BSR set to: 0
 14544  0038EC  C07F  FFF6         	movff	sprintf@f,tblptrl
 14545  0038F0  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14546  0038F4  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14547  0038F6  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14548  0038F8                     	if	0	;tblptru may be non-zero
 14549  0038F8                     	endif
 14550  0038F8                     	if	0	;tblptru may be non-zero
 14551  0038F8                     	endif
 14552  0038F8  0008               	tblrd		*
 14553  0038FA  CFF5 F086          	movff	tablat,sprintf@c
 14554  0038FE  5186               	movf	sprintf@c& (0+255),w,b
 14555  003900  A4D8               	btfss	status,2,c
 14556  003902  D7A6               	goto	l2630
 14557  003904                     u13170:
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;doprnt.c: 1538: *sp = 0;
 14561                           
 14562                           ; BSR set to: 0
 14563                           
 14564                           ;doprnt.c: 1469: }
 14565                           ;doprnt.c: 1533: }
 14566                           ;doprnt.c: 1535: alldone:
 14567                           
 14568                           ; BSR set to: 0
 14569  003904  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14570  003908  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14571  00390C  0E00               	movlw	0
 14572  00390E  6EDF               	movwf	indf2,c
 14573  003910  0012               	return	
 14574  003912                     __end_of_sprintf:
 14575                           	opt stack 0
 14576                           tosu	equ	0xFFF
 14577                           tosh	equ	0xFFE
 14578                           tosl	equ	0xFFD
 14579                           pclath	equ	0xFFA
 14580                           tblptru	equ	0xFF8
 14581                           tblptrh	equ	0xFF7
 14582                           tblptrl	equ	0xFF6
 14583                           tablat	equ	0xFF5
 14584                           prodh	equ	0xFF4
 14585                           prodl	equ	0xFF3
 14586                           intcon	equ	0xFF2
 14587                           intcon2	equ	0xFF1
 14588                           intcon3	equ	0xFF0
 14589                           indf0	equ	0xFEF
 14590                           postinc0	equ	0xFEE
 14591                           plusw0	equ	0xFEB
 14592                           fsr0h	equ	0xFEA
 14593                           fsr0l	equ	0xFE9
 14594                           wreg	equ	0xFE8
 14595                           indf1	equ	0xFE7
 14596                           postinc1	equ	0xFE6
 14597                           postdec1	equ	0xFE5
 14598                           fsr1h	equ	0xFE2
 14599                           fsr1l	equ	0xFE1
 14600                           indf2	equ	0xFDF
 14601                           postinc2	equ	0xFDE
 14602                           postdec2	equ	0xFDD
 14603                           plusw2	equ	0xFDB
 14604                           fsr2h	equ	0xFDA
 14605                           fsr2l	equ	0xFD9
 14606                           status	equ	0xFD8
 14607                           
 14608 ;; *************** function _memset *****************
 14609 ;; Defined at:
 14610 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;  p1              2   29[BANK0 ] PTR void 
 14613 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14614 ;;  c               2   31[BANK0 ] int 
 14615 ;;  n               2   33[BANK0 ] unsigned int 
 14616 ;; Auto vars:     Size  Location     Type
 14617 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14618 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  2   29[BANK0 ] PTR void 
 14621 ;; Registers used:
 14622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14623 ;; Tracked objects:
 14624 ;;		On entry : 0/0
 14625 ;;		On exit  : 0/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14631 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14632 ;;Total ram usage:        8 bytes
 14633 ;; Hardware stack levels used:    1
 14634 ;; Hardware stack levels required when called:   11
 14635 ;; This function calls:
 14636 ;;		Nothing
 14637 ;; This function is called by:
 14638 ;;		_USBDeviceInit
 14639 ;;		_USBStdSetCfgHandler
 14640 ;;		_Term_MainSm
 14641 ;; This function uses a non-reentrant model
 14642 ;;
 14643                           
 14644                           	psect	text59
 14645  005CE8                     __ptext59:
 14646                           	opt stack 0
 14647  005CE8                     _memset:
 14648                           	opt stack 14
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;incstack = 0
 14652  005CE8  C07D  F083         	movff	memset@p1,memset@p
 14653  005CEC  C07E  F084         	movff	memset@p1+1,memset@p+1
 14654  005CF0  D009               	goto	l3111
 14655  005CF2                     l11810:
 14656  005CF2  C083  FFD9         	movff	memset@p,fsr2l
 14657  005CF6  C084  FFDA         	movff	memset@p+1,fsr2h
 14658  005CFA  C07F  FFDF         	movff	memset@c,indf2
 14659  005CFE  0100               	movlb	0	; () banked
 14660  005D00  4B83               	infsnz	memset@p& (0+255),f,b
 14661  005D02  2B84               	incf	(memset@p+1)& (0+255),f,b
 14662  005D04                     l3111:
 14663                           
 14664                           ; BSR set to: 0
 14665  005D04  0100               	movlb	0	; () banked
 14666  005D06  0781               	decf	memset@n& (0+255),f,b
 14667  005D08  A0D8               	btfss	status,0,c
 14668  005D0A  0782               	decf	(memset@n+1)& (0+255),f,b
 14669  005D0C  2981               	incf	memset@n& (0+255),w,b
 14670  005D0E  E1F1               	bnz	l11810
 14671  005D10  2982               	incf	(memset@n+1)& (0+255),w,b
 14672  005D12  B4D8               	btfsc	status,2,c
 14673  005D14  0012               	return	
 14674  005D16  D7ED               	goto	l3112
 14675  005D18                     __end_of_memset:
 14676                           	opt stack 0
 14677                           tosu	equ	0xFFF
 14678                           tosh	equ	0xFFE
 14679                           tosl	equ	0xFFD
 14680                           pclath	equ	0xFFA
 14681                           tblptru	equ	0xFF8
 14682                           tblptrh	equ	0xFF7
 14683                           tblptrl	equ	0xFF6
 14684                           tablat	equ	0xFF5
 14685                           prodh	equ	0xFF4
 14686                           prodl	equ	0xFF3
 14687                           intcon	equ	0xFF2
 14688                           intcon2	equ	0xFF1
 14689                           intcon3	equ	0xFF0
 14690                           indf0	equ	0xFEF
 14691                           postinc0	equ	0xFEE
 14692                           plusw0	equ	0xFEB
 14693                           fsr0h	equ	0xFEA
 14694                           fsr0l	equ	0xFE9
 14695                           wreg	equ	0xFE8
 14696                           indf1	equ	0xFE7
 14697                           postinc1	equ	0xFE6
 14698                           postdec1	equ	0xFE5
 14699                           fsr1h	equ	0xFE2
 14700                           fsr1l	equ	0xFE1
 14701                           indf2	equ	0xFDF
 14702                           postinc2	equ	0xFDE
 14703                           postdec2	equ	0xFDD
 14704                           plusw2	equ	0xFDB
 14705                           fsr2h	equ	0xFDA
 14706                           fsr2l	equ	0xFD9
 14707                           status	equ	0xFD8
 14708                           
 14709 ;; *************** function _Terminal *****************
 14710 ;; Defined at:
 14711 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;		None
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;  i               1   68[BANK0 ] unsigned char 
 14716 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14717 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14718 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14719 ;;  Index           1   70[BANK0 ] unsigned char 
 14720 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14721 ;; Return value:  Size  Location     Type
 14722 ;;                  1    wreg      void 
 14723 ;; Registers used:
 14724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14725 ;; Tracked objects:
 14726 ;;		On entry : 0/0
 14727 ;;		On exit  : 0/0
 14728 ;;		Unchanged: 0/0
 14729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14731 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14732 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14733 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14734 ;;Total ram usage:      455 bytes
 14735 ;; Hardware stack levels used:    1
 14736 ;; Hardware stack levels required when called:   15
 14737 ;; This function calls:
 14738 ;;		_I2cSlv_I2cReadMsgSts
 14739 ;;		_I2cSlv_ReceiveI2cMsg
 14740 ;;		_I2cSlv_SendI2cMsg
 14741 ;;		_OsTmr_Wait
 14742 ;;		_atoi
 14743 ;;		_getsUSBUSART
 14744 ;;		_itoa
 14745 ;;		_putUSBUSART
 14746 ;;		_strcpy
 14747 ;;		_strtol
 14748 ;;		_xtoi
 14749 ;; This function is called by:
 14750 ;;		_Term_MainSm
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           
 14754                           	psect	text60
 14755  0000D0                     __ptext60:
 14756                           	opt stack 0
 14757  0000D0                     _Terminal:
 14758                           	opt stack 11
 14759                           
 14760                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14761                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14762                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14763                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14764                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14765                           ;term.c: 435: UINT8 Index;
 14766                           ;term.c: 436: static UINT8 Len[4];
 14767                           ;term.c: 437: static UINT8 PackageLen;
 14768                           ;term.c: 438: static UINT8 Addr[4];
 14769                           ;term.c: 439: static UINT8 SlaveAddr;
 14770                           ;term.c: 440: static PayloadType Payload[20u];
 14771                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14772                           
 14773                           ; BSR set to: 0
 14774                           ;incstack = 0
 14775  0000D0  0E00               	movlw	0
 14776  0000D2  0100               	movlb	0	; () banked
 14777  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14781                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14782                           ;term.c: 445: static SwTimerType SwTimer;
 14783                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14784  0000D6  0E1F               	movlw	31
 14785  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14786  0000DA  0012               	return	
 14787                           
 14788                           ; BSR set to: 0
 14789  0000DC  B265               	btfsc	3941,1,c	;volatile
 14790  0000DE  0012               	return	
 14791  0000E0  D278               	goto	l2367
 14792  0000E2                     
 14793                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14794                           
 14795                           ; BSR set to: 0
 14796  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14797  0000E4  0100               	movlb	0	; () banked
 14798  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14799  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14800  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14801  0000EC  0EC8               	movlw	200
 14802  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 14803  0000F0  EC49  F024         	call	_getsUSBUSART	;wreg free
 14804  0000F4  0100               	movlb	0	; () banked
 14805  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;term.c: 458: if (ReceivedBytes > 0)
 14809  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14810  0000FA  B4D8               	btfsc	status,2,c
 14811  0000FC  0012               	return	
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;term.c: 459: {
 14815                           ;term.c: 461: if (EchoOption == 1u)
 14816  0000FE  0102               	movlb	2	; () banked
 14817  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 14818  000102  A4D8               	btfss	status,2,c
 14819  000104  D026               	goto	l2371
 14820                           
 14821                           ; BSR set to: 2
 14822                           ;term.c: 462: {
 14823                           ;term.c: 464: if((cdc_trf_state == 0))
 14824  000106  0100               	movlb	0	; () banked
 14825  000108  51C6               	movf	_cdc_trf_state& (0+255),w,b
 14826  00010A  A4D8               	btfss	status,2,c
 14827  00010C  D022               	goto	l2371
 14828                           
 14829                           ; BSR set to: 0
 14830                           ;term.c: 465: {
 14831                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 14832  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14833  000110  0D01               	mullw	1
 14834  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 14835  000114  24F3               	addwf	prodl,w,c
 14836  000116  6ED9               	movwf	fsr2l,c
 14837  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 14838  00011A  20F4               	addwfc	prodh,w,c
 14839  00011C  6EDA               	movwf	fsr2h,c
 14840  00011E  0E0D               	movlw	13
 14841  000120  6EDF               	movwf	indf2,c
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 14845  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14846  000124  6FA2               	movwf	??_Terminal& (0+255),b
 14847  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 14848  000128  0E01               	movlw	1
 14849  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 14850  00012C  0E00               	movlw	0
 14851  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 14852  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 14853  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 14854  000134  6ED9               	movwf	fsr2l,c
 14855  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 14856  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 14857  00013A  6EDA               	movwf	fsr2h,c
 14858  00013C  0E0A               	movlw	10
 14859  00013E  6EDF               	movwf	indf2,c
 14860                           
 14861                           ; BSR set to: 0
 14862                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 14863  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 14864  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 14865  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 14866  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14867  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 14868  00014A  0F02               	addlw	2
 14869  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 14870  00014E  ECCC  F02F         	call	_putUSBUSART	;wreg free
 14871  000152                     l2371:
 14872                           
 14873                           ;term.c: 469: }
 14874                           ;term.c: 470: }
 14875                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 14876                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 14877                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 14878  000152  0E53               	movlw	83
 14879  000154  010A               	movlb	10	; () banked
 14880  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 14881  000158  A4D8               	btfss	status,2,c
 14882  00015A  D043               	goto	l2372
 14883                           
 14884                           ; BSR set to: 10
 14885  00015C  0E4F               	movlw	79
 14886  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 14887  000160  A4D8               	btfss	status,2,c
 14888  000162  D03F               	goto	l2372
 14889                           
 14890                           ; BSR set to: 10
 14891  000164  0E3A               	movlw	58
 14892  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 14893  000168  A4D8               	btfss	status,2,c
 14894  00016A  D03B               	goto	l2372
 14895                           
 14896                           ; BSR set to: 10
 14897                           ;term.c: 476: {
 14898                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 14899  00016C  0E47               	movlw	71
 14900  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 14901  000170  A4D8               	btfss	status,2,c
 14902  000172  0012               	return	
 14903                           
 14904                           ; BSR set to: 10
 14905  000174  0E3A               	movlw	58
 14906  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 14907  000178  A4D8               	btfss	status,2,c
 14908  00017A  0012               	return	
 14909                           
 14910                           ; BSR set to: 10
 14911                           ;term.c: 479: {
 14912                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 14913  00017C  0E44               	movlw	68
 14914  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14915  000180  A4D8               	btfss	status,2,c
 14916  000182  D015               	goto	l2374
 14917                           
 14918                           ; BSR set to: 10
 14919  000184  0E46               	movlw	70
 14920  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14921  000188  A4D8               	btfss	status,2,c
 14922  00018A  D011               	goto	l2374
 14923                           
 14924                           ; BSR set to: 10
 14925                           ;term.c: 482: {
 14926                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 14927  00018C  0E41               	movlw	65
 14928  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14929  000190  A4D8               	btfss	status,2,c
 14930  000192  D004               	goto	l2375
 14931                           
 14932                           ; BSR set to: 10
 14933                           ;term.c: 484: {
 14934                           ;term.c: 485: FormatOption = 1u;
 14935  000194  0E01               	movlw	1
 14936  000196  0102               	movlb	2	; () banked
 14937  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14938                           
 14939                           ;term.c: 486: }
 14940  00019A  0012               	return	
 14941  00019C                     l2375:
 14942                           
 14943                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 14944                           
 14945                           ; BSR set to: 2
 14946  00019C  0E42               	movlw	66
 14947  00019E  010A               	movlb	10	; () banked
 14948  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14949  0001A2  A4D8               	btfss	status,2,c
 14950  0001A4  0012               	return	
 14951                           
 14952                           ; BSR set to: 10
 14953                           ;term.c: 488: {
 14954                           ;term.c: 489: FormatOption = 0u;
 14955  0001A6  0E00               	movlw	0
 14956  0001A8  0102               	movlb	2	; () banked
 14957  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 14958                           
 14959                           ; BSR set to: 2
 14960                           ;term.c: 490: }
 14961                           ;term.c: 491: }
 14962                           
 14963                           ; BSR set to: 2
 14964  0001AC  0012               	return	
 14965  0001AE                     l2374:
 14966                           
 14967                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 14968                           
 14969                           ; BSR set to: 2
 14970  0001AE  0E45               	movlw	69
 14971  0001B0  010A               	movlb	10	; () banked
 14972  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 14973  0001B4  A4D8               	btfss	status,2,c
 14974  0001B6  0012               	return	
 14975                           
 14976                           ; BSR set to: 10
 14977  0001B8  0E4D               	movlw	77
 14978  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 14979  0001BC  A4D8               	btfss	status,2,c
 14980  0001BE  0012               	return	
 14981                           
 14982                           ; BSR set to: 10
 14983                           ;term.c: 494: {
 14984                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 14985  0001C0  0E31               	movlw	49
 14986  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 14987  0001C4  A4D8               	btfss	status,2,c
 14988  0001C6  D004               	goto	l2380
 14989                           
 14990                           ; BSR set to: 10
 14991                           ;term.c: 496: {
 14992                           ;term.c: 497: EchoOption = 1u;
 14993  0001C8  0E01               	movlw	1
 14994  0001CA  0102               	movlb	2	; () banked
 14995  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 14996                           
 14997                           ;term.c: 498: }
 14998  0001CE  0012               	return	
 14999  0001D0                     l2380:
 15000                           
 15001                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15002                           
 15003                           ; BSR set to: 2
 15004  0001D0  0E30               	movlw	48
 15005  0001D2  010A               	movlb	10	; () banked
 15006  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15007  0001D6  A4D8               	btfss	status,2,c
 15008  0001D8  0012               	return	
 15009                           
 15010                           ; BSR set to: 10
 15011                           ;term.c: 500: {
 15012                           ;term.c: 501: EchoOption = 0u;
 15013  0001DA  0E00               	movlw	0
 15014  0001DC  0102               	movlb	2	; () banked
 15015  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15016                           
 15017                           ; BSR set to: 2
 15018                           ;term.c: 507: }
 15019                           ;term.c: 508: }
 15020                           ;term.c: 509: }
 15021                           
 15022                           ; BSR set to: 2
 15023                           
 15024                           ; BSR set to: 2
 15025                           
 15026                           ;term.c: 504: else
 15027                           ;term.c: 505: {
 15028                           
 15029                           ; BSR set to: 2
 15030                           
 15031                           ; BSR set to: 2
 15032                           ;term.c: 502: }
 15033                           ;term.c: 503: }
 15034                           
 15035                           ; BSR set to: 2
 15036  0001E0  0012               	return	
 15037  0001E2                     l2372:
 15038                           
 15039                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15040                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15041                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15042                           
 15043                           ; BSR set to: 2
 15044  0001E2  0E53               	movlw	83
 15045  0001E4  010A               	movlb	10	; () banked
 15046  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15047  0001E8  A4D8               	btfss	status,2,c
 15048  0001EA  D0D3               	goto	l2385
 15049                           
 15050                           ; BSR set to: 10
 15051  0001EC  0E42               	movlw	66
 15052  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15053  0001F0  A4D8               	btfss	status,2,c
 15054  0001F2  D0CF               	goto	l2385
 15055                           
 15056                           ; BSR set to: 10
 15057  0001F4  0E3A               	movlw	58
 15058  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15059  0001F8  A4D8               	btfss	status,2,c
 15060  0001FA  D0CB               	goto	l2385
 15061                           
 15062                           ; BSR set to: 10
 15063                           ;term.c: 513: {
 15064                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15065  0001FC  0E57               	movlw	87
 15066  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15067  000200  A4D8               	btfss	status,2,c
 15068  000202  D091               	goto	l2386
 15069                           
 15070                           ; BSR set to: 10
 15071  000204  0E3A               	movlw	58
 15072  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15073  000208  A4D8               	btfss	status,2,c
 15074  00020A  D08D               	goto	l2386
 15075                           
 15076                           ; BSR set to: 10
 15077                           ;term.c: 515: {
 15078                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15079  00020C  CA05  F3A9         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15080                           
 15081                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15082  000210  CA06  F3AA         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15083                           
 15084                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15085  000214  CA08  F3A5         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15086                           
 15087                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15088  000218  CA09  F3A6         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15089                           
 15090                           ; BSR set to: 10
 15091                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15092  00021C  0EA9               	movlw	low Terminal@Len
 15093  00021E  0100               	movlb	0	; () banked
 15094  000220  6F83               	movwf	atoi@s& (0+255),b
 15095  000222  0E03               	movlw	high Terminal@Len
 15096  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15097  000226  EC4D  F01B         	call	_atoi	;wreg free
 15098  00022A  0100               	movlb	0	; () banked
 15099  00022C  5183               	movf	?_atoi& (0+255),w,b
 15100  00022E  0102               	movlb	2	; () banked
 15101  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15102                           
 15103                           ; BSR set to: 2
 15104                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15105  000232  0EA5               	movlw	low Terminal@Addr
 15106  000234  0100               	movlb	0	; () banked
 15107  000236  6F83               	movwf	xtoi@s& (0+255),b
 15108  000238  0E03               	movlw	high Terminal@Addr
 15109  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15110  00023C  ECFC  F019         	call	_xtoi	;wreg free
 15111  000240  0100               	movlb	0	; () banked
 15112  000242  5183               	movf	?_xtoi& (0+255),w,b
 15113  000244  0102               	movlb	2	; () banked
 15114  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15115                           
 15116                           ; BSR set to: 2
 15117                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15118  000248  0E00               	movlw	0
 15119  00024A  0100               	movlb	0	; () banked
 15120  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15121  00024E  D032               	goto	l2387
 15122  000250                     
 15123                           ;term.c: 527: {
 15124                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15125                           
 15126                           ; BSR set to: 0
 15127  000250  0100               	movlb	0	; () banked
 15128  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15129  000254  0D02               	mullw	2
 15130  000256  0E0B               	movlw	11
 15131  000258  26F3               	addwf	prodl,f,c
 15132  00025A  0E00               	movlw	0
 15133  00025C  22F4               	addwfc	prodh,f,c
 15134  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15135  000260  24F3               	addwf	prodl,w,c
 15136  000262  6ED9               	movwf	fsr2l,c
 15137  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15138  000266  20F4               	addwfc	prodh,w,c
 15139  000268  6EDA               	movwf	fsr2h,c
 15140  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15141  00026C  0D04               	mullw	4
 15142  00026E  0E66               	movlw	low Terminal@Payload
 15143  000270  24F3               	addwf	prodl,w,c
 15144  000272  6EE1               	movwf	fsr1l,c
 15145  000274  0E07               	movlw	high Terminal@Payload
 15146  000276  20F4               	addwfc	prodh,w,c
 15147  000278  6EE2               	movwf	fsr1h,c
 15148  00027A  CFDF FFE7          	movff	indf2,indf1
 15149                           
 15150                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15151  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15152  000280  0D02               	mullw	2
 15153  000282  0E0C               	movlw	12
 15154  000284  26F3               	addwf	prodl,f,c
 15155  000286  0E00               	movlw	0
 15156  000288  22F4               	addwfc	prodh,f,c
 15157  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15158  00028C  24F3               	addwf	prodl,w,c
 15159  00028E  6ED9               	movwf	fsr2l,c
 15160  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15161  000292  20F4               	addwfc	prodh,w,c
 15162  000294  6EDA               	movwf	fsr2h,c
 15163  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15164  000298  0D04               	mullw	4
 15165  00029A  0E01               	movlw	1
 15166  00029C  26F3               	addwf	prodl,f,c
 15167  00029E  0E00               	movlw	0
 15168  0002A0  22F4               	addwfc	prodh,f,c
 15169  0002A2  0E66               	movlw	low Terminal@Payload
 15170  0002A4  24F3               	addwf	prodl,w,c
 15171  0002A6  6EE1               	movwf	fsr1l,c
 15172  0002A8  0E07               	movlw	high Terminal@Payload
 15173  0002AA  20F4               	addwfc	prodh,w,c
 15174  0002AC  6EE2               	movwf	fsr1h,c
 15175  0002AE  CFDF FFE7          	movff	indf2,indf1
 15176                           
 15177                           ; BSR set to: 0
 15178  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15179  0002B4                     l2387:
 15180                           
 15181                           ; BSR set to: 0
 15182                           
 15183                           ; BSR set to: 0
 15184  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15185  0002B6  0102               	movlb	2	; () banked
 15186  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15187  0002BA  B0D8               	btfsc	status,0,c
 15188  0002BC  D7C9               	goto	l2388
 15189                           
 15190                           ; BSR set to: 2
 15191                           ;term.c: 530: }
 15192                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15193                           
 15194                           ; BSR set to: 2
 15195  0002BE  0E00               	movlw	0
 15196  0002C0  0100               	movlb	0	; () banked
 15197  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15198  0002C4  D01F               	goto	l2390
 15199  0002C6                     
 15200                           ;term.c: 533: {
 15201                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15202                           
 15203                           ; BSR set to: 0
 15204  0002C6  0100               	movlb	0	; () banked
 15205  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15206  0002CA  0D04               	mullw	4
 15207  0002CC  0E66               	movlw	low Terminal@Payload
 15208  0002CE  24F3               	addwf	prodl,w,c
 15209  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15210  0002D2  0E07               	movlw	high Terminal@Payload
 15211  0002D4  20F4               	addwfc	prodh,w,c
 15212  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15213  0002D8  0E00               	movlw	0
 15214  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15215  0002DC  0E00               	movlw	0
 15216  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15217  0002E0  0E00               	movlw	0
 15218  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15219  0002E4  0E10               	movlw	16
 15220  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15221  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15222  0002EC  0100               	movlb	0	; () banked
 15223  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15224  0002F0  0D01               	mullw	1
 15225  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15226  0002F4  24F3               	addwf	prodl,w,c
 15227  0002F6  6ED9               	movwf	fsr2l,c
 15228  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15229  0002FA  20F4               	addwfc	prodh,w,c
 15230  0002FC  6EDA               	movwf	fsr2h,c
 15231  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15232                           
 15233                           ; BSR set to: 0
 15234  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15235  000304                     l2390:
 15236                           
 15237                           ; BSR set to: 0
 15238                           
 15239                           ; BSR set to: 0
 15240  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15241  000306  0102               	movlb	2	; () banked
 15242  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15243  00030A  B0D8               	btfsc	status,0,c
 15244  00030C  D7DC               	goto	l2391
 15245                           
 15246                           ; BSR set to: 2
 15247                           ;term.c: 539: }
 15248                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15249                           
 15250                           ; BSR set to: 2
 15251  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15252  000310  0100               	movlb	0	; () banked
 15253  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15254  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15255  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15256  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15257  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15258  000320  EC27  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 15259                           
 15260                           ;term.c: 543: }
 15261  000324  0012               	return	
 15262  000326                     l2386:
 15263                           
 15264                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15265  000326  0E52               	movlw	82
 15266  000328  010A               	movlb	10	; () banked
 15267  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15268  00032C  A4D8               	btfss	status,2,c
 15269  00032E  0012               	return	
 15270                           
 15271                           ; BSR set to: 10
 15272  000330  0E3A               	movlw	58
 15273  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15274  000334  A4D8               	btfss	status,2,c
 15275  000336  0012               	return	
 15276                           
 15277                           ; BSR set to: 10
 15278                           ;term.c: 545: {
 15279                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15280  000338  CA05  F3A9         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15281                           
 15282                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15283  00033C  CA06  F3AA         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15284                           
 15285                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15286  000340  CA08  F3A5         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15287                           
 15288                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15289  000344  CA09  F3A6         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15290                           
 15291                           ; BSR set to: 10
 15292                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15293  000348  0EA9               	movlw	low Terminal@Len
 15294  00034A  0100               	movlb	0	; () banked
 15295  00034C  6F83               	movwf	atoi@s& (0+255),b
 15296  00034E  0E03               	movlw	high Terminal@Len
 15297  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15298  000352  EC4D  F01B         	call	_atoi	;wreg free
 15299  000356  0100               	movlb	0	; () banked
 15300  000358  5183               	movf	?_atoi& (0+255),w,b
 15301  00035A  0102               	movlb	2	; () banked
 15302  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15303                           
 15304                           ; BSR set to: 2
 15305                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15306  00035E  0EA5               	movlw	low Terminal@Addr
 15307  000360  0100               	movlb	0	; () banked
 15308  000362  6F83               	movwf	xtoi@s& (0+255),b
 15309  000364  0E03               	movlw	high Terminal@Addr
 15310  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15311  000368  ECFC  F019         	call	_xtoi	;wreg free
 15312  00036C  0100               	movlb	0	; () banked
 15313  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15314  000370  0102               	movlb	2	; () banked
 15315  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15316                           
 15317                           ; BSR set to: 2
 15318                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15319  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15320  000376  0100               	movlb	0	; () banked
 15321  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15322  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15323  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15324  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15325  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15326  000386  ECC8  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15327                           
 15328                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15329  00038A  0E01               	movlw	1
 15330  00038C  0102               	movlb	2	; () banked
 15331  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15332                           
 15333                           ; BSR set to: 2
 15334                           ;term.c: 561: }
 15335                           ;term.c: 562: }
 15336                           
 15337                           ; BSR set to: 2
 15338  000390  0012               	return	
 15339  000392                     l2385:
 15340                           
 15341                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15342                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15343                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15344                           
 15345                           ; BSR set to: 2
 15346  000392  0E54               	movlw	84
 15347  000394  010A               	movlb	10	; () banked
 15348  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15349  000398  A4D8               	btfss	status,2,c
 15350  00039A  0012               	return	
 15351                           
 15352                           ; BSR set to: 10
 15353  00039C  0E45               	movlw	69
 15354  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15355  0003A0  A4D8               	btfss	status,2,c
 15356  0003A2  0012               	return	
 15357                           
 15358                           ; BSR set to: 10
 15359  0003A4  0E4C               	movlw	76
 15360  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15361  0003A8  A4D8               	btfss	status,2,c
 15362  0003AA  0012               	return	
 15363                           
 15364                           ; BSR set to: 10
 15365                           ;term.c: 566: {
 15366                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15367  0003AC  CA03  F3A9         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15368                           
 15369                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15370  0003B0  CA04  F3AA         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15371                           
 15372                           ; BSR set to: 10
 15373                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15374  0003B4  0EA9               	movlw	low Terminal@Len
 15375  0003B6  0100               	movlb	0	; () banked
 15376  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15377  0003BA  0E03               	movlw	high Terminal@Len
 15378  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15379  0003BE  EC4D  F01B         	call	_atoi	;wreg free
 15380  0003C2  C083  F322         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15381  0003C6  C084  F323         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15382                           
 15383                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15384  0003CA  0E00               	movlw	0
 15385  0003CC  0100               	movlb	0	; () banked
 15386  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15387  0003D0  D018               	goto	l2397
 15388  0003D2                     
 15389                           ; BSR set to: 0
 15390                           ;term.c: 573: {
 15391                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15392                           
 15393                           ; BSR set to: 0
 15394  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15395  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15396  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15397  0003D8  0E05               	movlw	5
 15398  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15399  0003DC  0E00               	movlw	0
 15400  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15401  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15402  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15403  0003E4  6ED9               	movwf	fsr2l,c
 15404  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15405  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15406  0003EA  6EDA               	movwf	fsr2h,c
 15407  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15408  0003EE  0D01               	mullw	1
 15409  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15410  0003F2  24F3               	addwf	prodl,w,c
 15411  0003F4  6EE1               	movwf	fsr1l,c
 15412  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15413  0003F8  20F4               	addwfc	prodh,w,c
 15414  0003FA  6EE2               	movwf	fsr1h,c
 15415  0003FC  CFDF FFE7          	movff	indf2,indf1
 15416                           
 15417                           ; BSR set to: 0
 15418  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15419  000402                     l2397:
 15420                           
 15421                           ; BSR set to: 0
 15422                           
 15423                           ; BSR set to: 0
 15424  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15425  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15426  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15427  000408  0103               	movlb	3	; () banked
 15428  00040A  5122               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15429  00040C  0100               	movlb	0	; () banked
 15430  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15431  000410  0103               	movlb	3	; () banked
 15432  000412  5123               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15433  000414  0100               	movlb	0	; () banked
 15434  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15435  000418  B0D8               	btfsc	status,0,c
 15436  00041A  0012               	return	
 15437  00041C  D7DA               	goto	l2398
 15438  00041E                     
 15439                           ;term.c: 619: if((cdc_trf_state == 0))
 15440                           
 15441                           ; BSR set to: 0
 15442  00041E  0100               	movlb	0	; () banked
 15443  000420  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15444  000422  A4D8               	btfss	status,2,c
 15445  000424  0012               	return	
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;term.c: 620: {
 15449                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15450  000426  0E53               	movlw	83
 15451  000428  0102               	movlb	2	; () banked
 15452  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15453                           
 15454                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15455  00042C  0E42               	movlw	66
 15456  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15457                           
 15458                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15459  000430  0E5B               	movlw	91
 15460  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15461                           
 15462                           ; BSR set to: 2
 15463                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15464  000434  C3A5  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15465                           
 15466                           ; BSR set to: 2
 15467                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15468  000438  C3A6  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15469                           
 15470                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15471  00043C  0E5D               	movlw	93
 15472  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15473                           
 15474                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15475  000440  0E3A               	movlw	58
 15476  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15477                           
 15478                           ; BSR set to: 2
 15479                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15480  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15481  000446  0100               	movlb	0	; () banked
 15482  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15483  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15484  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15485  00044E  0E07               	movlw	7
 15486  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15487  000452  ECCC  F02F         	call	_putUSBUSART	;wreg free
 15488                           
 15489                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15490  000456  0E02               	movlw	2
 15491  000458  0102               	movlb	2	; () banked
 15492  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15493                           
 15494                           ; BSR set to: 2
 15495                           ;term.c: 632: }
 15496                           ;term.c: 633: break;
 15497  00045C  0012               	return	
 15498  00045E                     
 15499                           ; BSR set to: 2
 15500                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15501                           
 15502                           ; BSR set to: 2
 15503  00045E  ECEE  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15504  000462  06E8               	decf	wreg,f,c
 15505  000464  A4D8               	btfss	status,2,c
 15506  000466  D088               	goto	l2406
 15507                           
 15508                           ;term.c: 638: {
 15509                           ;term.c: 640: if (FormatOption == 1u)
 15510  000468  0102               	movlb	2	; () banked
 15511  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15512  00046C  A4D8               	btfss	status,2,c
 15513  00046E  D027               	goto	u13050
 15514                           
 15515                           ; BSR set to: 2
 15516                           ;term.c: 641: {
 15517                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15518  000470  0E00               	movlw	0
 15519  000472  0100               	movlb	0	; () banked
 15520  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15521  000476  D01E               	goto	l2408
 15522  000478                     
 15523                           ;term.c: 644: {
 15524                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15525                           
 15526                           ; BSR set to: 0
 15527  000478  0100               	movlb	0	; () banked
 15528  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15529  00047C  0D04               	mullw	4
 15530  00047E  0E66               	movlw	low Terminal@Payload
 15531  000480  24F3               	addwf	prodl,w,c
 15532  000482  6F93               	movwf	itoa@buf& (0+255),b
 15533  000484  0E07               	movlw	high Terminal@Payload
 15534  000486  20F4               	addwfc	prodh,w,c
 15535  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15536  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15537  00048C  0D01               	mullw	1
 15538  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15539  000490  24F3               	addwf	prodl,w,c
 15540  000492  6ED9               	movwf	fsr2l,c
 15541  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15542  000496  20F4               	addwfc	prodh,w,c
 15543  000498  6EDA               	movwf	fsr2h,c
 15544  00049A  50DF               	movf	indf2,w,c
 15545  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15546  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15547  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15548  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15549  0004A4  0E00               	movlw	0
 15550  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15551  0004A8  0E0A               	movlw	10
 15552  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15553  0004AC  EC41  F02C         	call	_itoa	;wreg free
 15554  0004B0  0100               	movlb	0	; () banked
 15555  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15556  0004B4                     l2408:
 15557                           
 15558                           ; BSR set to: 0
 15559                           
 15560                           ; BSR set to: 0
 15561  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15562  0004B6  0102               	movlb	2	; () banked
 15563  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15564  0004BA  B0D8               	btfsc	status,0,c
 15565  0004BC  D7DD               	goto	l2409
 15566  0004BE                     u13050:
 15567                           
 15568                           ; BSR set to: 2
 15569                           ;term.c: 646: }
 15570                           ;term.c: 647: }
 15571                           ;term.c: 650: if((cdc_trf_state == 0))
 15572                           
 15573                           ; BSR set to: 2
 15574                           
 15575                           ; BSR set to: 2
 15576  0004BE  0100               	movlb	0	; () banked
 15577  0004C0  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15578  0004C2  A4D8               	btfss	status,2,c
 15579  0004C4  0012               	return	
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;term.c: 651: {
 15583                           ;term.c: 653: if (FormatOption == 1u)
 15584  0004C6  0102               	movlb	2	; () banked
 15585  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15586  0004CA  A4D8               	btfss	status,2,c
 15587  0004CC  D02B               	goto	l2412
 15588                           
 15589                           ; BSR set to: 2
 15590                           ;term.c: 654: {
 15591                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15592  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15593  0004D0  0D08               	mullw	8
 15594  0004D2  0E03               	movlw	3
 15595  0004D4  26F3               	addwf	prodl,f,c
 15596  0004D6  0E00               	movlw	0
 15597  0004D8  22F4               	addwfc	prodh,f,c
 15598  0004DA  0E66               	movlw	low Terminal@Payload
 15599  0004DC  24F3               	addwf	prodl,w,c
 15600  0004DE  6ED9               	movwf	fsr2l,c
 15601  0004E0  0E07               	movlw	high Terminal@Payload
 15602  0004E2  20F4               	addwfc	prodh,w,c
 15603  0004E4  6EDA               	movwf	fsr2h,c
 15604  0004E6  0E0D               	movlw	13
 15605  0004E8  6EDF               	movwf	indf2,c
 15606                           
 15607                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15608  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15609  0004EC  0D08               	mullw	8
 15610  0004EE  0E02               	movlw	2
 15611  0004F0  26F3               	addwf	prodl,f,c
 15612  0004F2  0E00               	movlw	0
 15613  0004F4  22F4               	addwfc	prodh,f,c
 15614  0004F6  0E66               	movlw	low Terminal@Payload
 15615  0004F8  24F3               	addwf	prodl,w,c
 15616  0004FA  6ED9               	movwf	fsr2l,c
 15617  0004FC  0E07               	movlw	high Terminal@Payload
 15618  0004FE  20F4               	addwfc	prodh,w,c
 15619  000500  6EDA               	movwf	fsr2h,c
 15620  000502  0E0A               	movlw	10
 15621  000504  6EDF               	movwf	indf2,c
 15622                           
 15623                           ; BSR set to: 2
 15624                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15625  000506  0E66               	movlw	low Terminal@Payload
 15626  000508  0100               	movlb	0	; () banked
 15627  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15628  00050C  0E07               	movlw	high Terminal@Payload
 15629  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15630  000510  0102               	movlb	2	; () banked
 15631  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15632  000514  0D02               	mullw	2
 15633  000516  50F3               	movf	prodl,w,c
 15634  000518  0F04               	addlw	4
 15635  00051A  0100               	movlb	0	; () banked
 15636  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15637  00051E  ECCC  F02F         	call	_putUSBUSART	;wreg free
 15638                           
 15639                           ;term.c: 659: }
 15640  000522  D026               	goto	l2413
 15641  000524                     l2412:
 15642                           
 15643                           ;term.c: 660: else
 15644                           ;term.c: 661: {
 15645                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15646  000524  0102               	movlb	2	; () banked
 15647  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15648  000528  0D01               	mullw	1
 15649  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15650  00052C  24F3               	addwf	prodl,w,c
 15651  00052E  6ED9               	movwf	fsr2l,c
 15652  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15653  000532  20F4               	addwfc	prodh,w,c
 15654  000534  6EDA               	movwf	fsr2h,c
 15655  000536  0E0D               	movlw	13
 15656  000538  6EDF               	movwf	indf2,c
 15657                           
 15658                           ; BSR set to: 2
 15659                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15660  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15661  00053C  0100               	movlb	0	; () banked
 15662  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15663  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15664  000542  0E01               	movlw	1
 15665  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15666  000546  0E00               	movlw	0
 15667  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15668  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15669  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15670  00054E  6ED9               	movwf	fsr2l,c
 15671  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15672  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15673  000554  6EDA               	movwf	fsr2h,c
 15674  000556  0E0A               	movlw	10
 15675  000558  6EDF               	movwf	indf2,c
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15679  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15680  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15681  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15682  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15683  000562  0102               	movlb	2	; () banked
 15684  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15685  000566  0F02               	addlw	2
 15686  000568  0100               	movlb	0	; () banked
 15687  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15688  00056C  ECCC  F02F         	call	_putUSBUSART	;wreg free
 15689  000570                     l2413:
 15690                           
 15691                           ;term.c: 666: }
 15692                           ;term.c: 668: TermState = Term_GetData;
 15693  000570  0E00               	movlw	0
 15694  000572  0102               	movlb	2	; () banked
 15695  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15696                           
 15697                           ; BSR set to: 2
 15698                           ;term.c: 669: }
 15699                           ;term.c: 670: }
 15700  000576  0012               	return	
 15701  000578                     l2406:
 15702                           
 15703                           ;term.c: 671: else
 15704                           ;term.c: 672: {
 15705                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15706                           
 15707                           ; BSR set to: 2
 15708  000578  0EC5               	movlw	low Terminal@SwTimer
 15709  00057A  0100               	movlb	0	; () banked
 15710  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15711  00057E  0E04               	movlw	high Terminal@SwTimer
 15712  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15713  000582  0EB8               	movlw	184
 15714  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15715  000586  0E0B               	movlw	11
 15716  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15717  00058A  0E00               	movlw	0
 15718  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15719  00058E  0E00               	movlw	0
 15720  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15721  000592  EC82  F026         	call	_OsTmr_Wait	;wreg free
 15722  000596  06E8               	decf	wreg,f,c
 15723  000598  A4D8               	btfss	status,2,c
 15724  00059A  0012               	return	
 15725                           
 15726                           ;term.c: 675: {
 15727                           ;term.c: 677: if((cdc_trf_state == 0))
 15728  00059C  0100               	movlb	0	; () banked
 15729  00059E  51C6               	movf	_cdc_trf_state& (0+255),w,b
 15730  0005A0  A4D8               	btfss	status,2,c
 15731  0005A2  0012               	return	
 15732                           
 15733                           ; BSR set to: 0
 15734                           ;term.c: 678: {
 15735                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15736  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15737  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15738  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15739  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15740  0005AC  0E6C               	movlw	low STR_21
 15741  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15742  0005B0  0EFE               	movlw	high STR_21
 15743  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15744  0005B4  EC43  F02E         	call	_strcpy	;wreg free
 15745                           
 15746                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15747  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15748  0005BA  0100               	movlb	0	; () banked
 15749  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15750  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15751  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15752  0005C2  0E29               	movlw	41
 15753  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15754  0005C6  ECCC  F02F         	call	_putUSBUSART	;wreg free
 15755                           
 15756                           ;term.c: 682: TermState = Term_GetData;
 15757  0005CA  0E00               	movlw	0
 15758  0005CC  0102               	movlb	2	; () banked
 15759  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15760                           
 15761                           ; BSR set to: 2
 15762                           ;term.c: 693: }
 15763                           
 15764                           ; BSR set to: 2
 15765                           ;term.c: 692: break;
 15766                           
 15767                           ;term.c: 691: default:
 15768                           
 15769                           ; BSR set to: 2
 15770                           ;term.c: 689: break;
 15771                           
 15772                           ;term.c: 688: case Term_ReadSlvUartData:
 15773                           
 15774                           ; BSR set to: 2
 15775                           ;term.c: 683: }
 15776                           ;term.c: 684: }
 15777                           ;term.c: 685: }
 15778                           ;term.c: 686: break;
 15779                           
 15780                           ; BSR set to: 2
 15781                           
 15782                           ; BSR set to: 2
 15783  0005D0  0012               	return	
 15784  0005D2                     l2367:
 15785                           
 15786                           ; BSR set to: 2
 15787  0005D2  0102               	movlb	2	; () banked
 15788  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15789                           
 15790                           ; Switch size 1, requested type "space"
 15791                           ; Number of cases is 4, Range of values is 0 to 3
 15792                           ; switch strategies available:
 15793                           ; Name         Instructions Cycles
 15794                           ; simple_byte           13     7 (average)
 15795                           ;	Chosen strategy is simple_byte
 15796  0005D6  0A00               	xorlw	0	; case 0
 15797  0005D8  B4D8               	btfsc	status,2,c
 15798  0005DA  D583               	goto	l2368
 15799  0005DC  0A01               	xorlw	1	; case 1
 15800  0005DE  B4D8               	btfsc	status,2,c
 15801  0005E0  D71E               	goto	l2403
 15802  0005E2  0A03               	xorlw	3	; case 2
 15803  0005E4  B4D8               	btfsc	status,2,c
 15804  0005E6  D73B               	goto	l2405
 15805  0005E8  0A01               	xorlw	1	; case 3
 15806  0005EA  0012               	return	
 15807  0005EC                     __end_of_Terminal:
 15808                           	opt stack 0
 15809                           tosu	equ	0xFFF
 15810                           tosh	equ	0xFFE
 15811                           tosl	equ	0xFFD
 15812                           pclath	equ	0xFFA
 15813                           tblptru	equ	0xFF8
 15814                           tblptrh	equ	0xFF7
 15815                           tblptrl	equ	0xFF6
 15816                           tablat	equ	0xFF5
 15817                           prodh	equ	0xFF4
 15818                           prodl	equ	0xFF3
 15819                           intcon	equ	0xFF2
 15820                           intcon2	equ	0xFF1
 15821                           intcon3	equ	0xFF0
 15822                           indf0	equ	0xFEF
 15823                           postinc0	equ	0xFEE
 15824                           plusw0	equ	0xFEB
 15825                           fsr0h	equ	0xFEA
 15826                           fsr0l	equ	0xFE9
 15827                           wreg	equ	0xFE8
 15828                           indf1	equ	0xFE7
 15829                           postinc1	equ	0xFE6
 15830                           postdec1	equ	0xFE5
 15831                           fsr1h	equ	0xFE2
 15832                           fsr1l	equ	0xFE1
 15833                           indf2	equ	0xFDF
 15834                           postinc2	equ	0xFDE
 15835                           postdec2	equ	0xFDD
 15836                           plusw2	equ	0xFDB
 15837                           fsr2h	equ	0xFDA
 15838                           fsr2l	equ	0xFD9
 15839                           status	equ	0xFD8
 15840                           
 15841 ;; *************** function _xtoi *****************
 15842 ;; Defined at:
 15843 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 15844 ;; Parameters:    Size  Location     Type
 15845 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 15846 ;;		 -> Terminal@Addr(4), 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  val             2   40[BANK0 ] unsigned int 
 15849 ;;  c               1   42[BANK0 ] unsigned char 
 15850 ;;  sign            1   39[BANK0 ] unsigned char 
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  2   35[BANK0 ] unsigned int 
 15853 ;; Registers used:
 15854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15862 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15863 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15864 ;;Total ram usage:        8 bytes
 15865 ;; Hardware stack levels used:    1
 15866 ;; Hardware stack levels required when called:   13
 15867 ;; This function calls:
 15868 ;;		_isdigit
 15869 ;;		_isspace
 15870 ;;		_isupper
 15871 ;;		_isxdigit
 15872 ;;		_tolower
 15873 ;; This function is called by:
 15874 ;;		_Terminal
 15875 ;; This function uses a non-reentrant model
 15876 ;;
 15877                           
 15878                           	psect	text61
 15879  0033F8                     __ptext61:
 15880                           	opt stack 0
 15881  0033F8                     _xtoi:
 15882                           	opt stack 12
 15883                           
 15884                           ;incstack = 0
 15885  0033F8  0E00               	movlw	0
 15886  0033FA  0100               	movlb	0	; () banked
 15887  0033FC  6F87               	movwf	xtoi@sign& (0+255),b
 15888  0033FE  0E00               	movlw	0
 15889  003400  6F89               	movwf	(xtoi@val+1)& (0+255),b
 15890  003402  0E00               	movlw	0
 15891  003404  6F88               	movwf	xtoi@val& (0+255),b
 15892  003406  D003               	goto	l3306
 15893  003408                     
 15894                           ; BSR set to: 0
 15895  003408  0100               	movlb	0	; () banked
 15896  00340A  4B83               	infsnz	xtoi@s& (0+255),f,b
 15897  00340C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15898  00340E                     l3306:
 15899                           
 15900                           ; BSR set to: 0
 15901                           
 15902                           ; BSR set to: 0
 15903  00340E  C083  FFD9         	movff	xtoi@s,fsr2l
 15904  003412  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15905  003416  50DF               	movf	indf2,w,c
 15906  003418  EC15  F02F         	call	_isspace
 15907  00341C  B0D8               	btfsc	status,0,c
 15908  00341E  D7F4               	goto	l3307
 15909  003420  C083  FFD9         	movff	xtoi@s,fsr2l
 15910  003424  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15911  003428  0E2D               	movlw	45
 15912  00342A  18DE               	xorwf	postinc2,w,c
 15913  00342C  A4D8               	btfss	status,2,c
 15914  00342E  D003               	goto	l3309
 15915  003430  0100               	movlb	0	; () banked
 15916  003432  2B87               	incf	xtoi@sign& (0+255),f,b
 15917  003434  D009               	goto	L15
 15918  003436                     l3309:
 15919                           
 15920                           ; BSR set to: 0
 15921  003436  C083  FFD9         	movff	xtoi@s,fsr2l
 15922  00343A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15923  00343E  0E2B               	movlw	43
 15924  003440  18DE               	xorwf	postinc2,w,c
 15925  003442  A4D8               	btfss	status,2,c
 15926  003444  D028               	goto	l3312
 15927  003446  0100               	movlb	0	; () banked
 15928  003448                     L15:
 15929  003448  4B83               	infsnz	xtoi@s& (0+255),f,b
 15930  00344A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15931                           
 15932                           ; BSR set to: 0
 15933                           
 15934                           ; BSR set to: 0
 15935  00344C  D024               	goto	l3312
 15936  00344E                     
 15937                           ; BSR set to: 0
 15938  00344E  0100               	movlb	0	; () banked
 15939  003450  518A               	movf	xtoi@c& (0+255),w,b
 15940  003452  ECBB  F02F         	call	_isupper
 15941  003456  A0D8               	btfss	status,0,c
 15942  003458  D006               	goto	l3314
 15943  00345A  0100               	movlb	0	; () banked
 15944  00345C  518A               	movf	xtoi@c& (0+255),w,b
 15945  00345E  EC7F  F030         	call	_tolower
 15946  003462  0100               	movlb	0	; () banked
 15947  003464  6F8A               	movwf	xtoi@c& (0+255),b
 15948  003466                     l3314:
 15949  003466  0100               	movlb	0	; () banked
 15950  003468  518A               	movf	xtoi@c& (0+255),w,b
 15951  00346A  ECDD  F02F         	call	_isdigit
 15952  00346E  A0D8               	btfss	status,0,c
 15953  003470  D002               	goto	l3315
 15954  003472  0E30               	movlw	48
 15955  003474  D001               	goto	L14
 15956  003476                     l3315:
 15957                           
 15958                           ; BSR set to: 0
 15959  003476  0E57               	movlw	87
 15960  003478                     L14:
 15961  003478  0100               	movlb	0	; () banked
 15962  00347A  5F8A               	subwf	xtoi@c& (0+255),f,b
 15963                           
 15964                           ; BSR set to: 0
 15965  00347C  3B88               	swapf	xtoi@val& (0+255),f,b
 15966  00347E  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 15967  003480  0EF0               	movlw	240
 15968  003482  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 15969  003484  5188               	movf	xtoi@val& (0+255),w,b
 15970  003486  0B0F               	andlw	15
 15971  003488  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 15972  00348A  0EF0               	movlw	240
 15973  00348C  1788               	andwf	xtoi@val& (0+255),f,b
 15974  00348E  518A               	movf	xtoi@c& (0+255),w,b
 15975  003490  2788               	addwf	xtoi@val& (0+255),f,b
 15976  003492  0E00               	movlw	0
 15977  003494  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 15978  003496                     l3312:
 15979                           
 15980                           ; BSR set to: 0
 15981  003496  C083  FFD9         	movff	xtoi@s,fsr2l
 15982  00349A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 15983  00349E  0100               	movlb	0	; () banked
 15984  0034A0  4B83               	infsnz	xtoi@s& (0+255),f,b
 15985  0034A2  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 15986  0034A4  50DF               	movf	indf2,w,c
 15987  0034A6  6F8A               	movwf	xtoi@c& (0+255),b
 15988  0034A8  518A               	movf	xtoi@c& (0+255),w,b
 15989  0034AA  EC65  F02D         	call	_isxdigit
 15990  0034AE  B0D8               	btfsc	status,0,c
 15991  0034B0  D7CE               	goto	l3313
 15992  0034B2  0100               	movlb	0	; () banked
 15993  0034B4  5187               	movf	xtoi@sign& (0+255),w,b
 15994  0034B6  B4D8               	btfsc	status,2,c
 15995  0034B8  D00D               	goto	l3318
 15996                           
 15997                           ; BSR set to: 0
 15998  0034BA  C088  F085         	movff	xtoi@val,??_xtoi
 15999  0034BE  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16000  0034C2  1F85               	comf	??_xtoi& (0+255),f,b
 16001  0034C4  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16002  0034C6  4B85               	infsnz	??_xtoi& (0+255),f,b
 16003  0034C8  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16004  0034CA  C085  F083         	movff	??_xtoi,?_xtoi
 16005  0034CE  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16006  0034D2  0012               	return	
 16007  0034D4                     l3318:
 16008                           
 16009                           ; BSR set to: 0
 16010  0034D4  C088  F083         	movff	xtoi@val,?_xtoi
 16011  0034D8  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16012                           
 16013                           ; BSR set to: 0
 16014  0034DC  0012               	return		;funcret
 16015  0034DE                     __end_of_xtoi:
 16016                           	opt stack 0
 16017                           tosu	equ	0xFFF
 16018                           tosh	equ	0xFFE
 16019                           tosl	equ	0xFFD
 16020                           pclath	equ	0xFFA
 16021                           tblptru	equ	0xFF8
 16022                           tblptrh	equ	0xFF7
 16023                           tblptrl	equ	0xFF6
 16024                           tablat	equ	0xFF5
 16025                           prodh	equ	0xFF4
 16026                           prodl	equ	0xFF3
 16027                           intcon	equ	0xFF2
 16028                           intcon2	equ	0xFF1
 16029                           intcon3	equ	0xFF0
 16030                           indf0	equ	0xFEF
 16031                           postinc0	equ	0xFEE
 16032                           plusw0	equ	0xFEB
 16033                           fsr0h	equ	0xFEA
 16034                           fsr0l	equ	0xFE9
 16035                           wreg	equ	0xFE8
 16036                           indf1	equ	0xFE7
 16037                           postinc1	equ	0xFE6
 16038                           postdec1	equ	0xFE5
 16039                           fsr1h	equ	0xFE2
 16040                           fsr1l	equ	0xFE1
 16041                           indf2	equ	0xFDF
 16042                           postinc2	equ	0xFDE
 16043                           postdec2	equ	0xFDD
 16044                           plusw2	equ	0xFDB
 16045                           fsr2h	equ	0xFDA
 16046                           fsr2l	equ	0xFD9
 16047                           status	equ	0xFD8
 16048                           
 16049 ;; *************** function _tolower *****************
 16050 ;; Defined at:
 16051 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16052 ;; Parameters:    Size  Location     Type
 16053 ;;  c               1    wreg     unsigned char 
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;  c               1   29[BANK0 ] unsigned char 
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      unsigned char 
 16058 ;; Registers used:
 16059 ;;		wreg, status,2, status,0
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;Total ram usage:        1 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; Hardware stack levels required when called:   11
 16072 ;; This function calls:
 16073 ;;		Nothing
 16074 ;; This function is called by:
 16075 ;;		_xtoi
 16076 ;; This function uses a non-reentrant model
 16077 ;;
 16078                           
 16079                           	psect	text62
 16080  0060FE                     __ptext62:
 16081                           	opt stack 0
 16082  0060FE                     _tolower:
 16083                           	opt stack 13
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;incstack = 0
 16087                           ;tolower@c stored from wreg
 16088  0060FE  0100               	movlb	0	; () banked
 16089  006100  6F7D               	movwf	tolower@c& (0+255),b
 16090  006102  0E5B               	movlw	91
 16091  006104  0100               	movlb	0	; () banked
 16092  006106  617D               	cpfslt	tolower@c& (0+255),b
 16093  006108  D004               	goto	l3365
 16094                           
 16095                           ; BSR set to: 0
 16096  00610A  0E40               	movlw	64
 16097  00610C  657D               	cpfsgt	tolower@c& (0+255),b
 16098  00610E  D001               	goto	l3365
 16099                           
 16100                           ; BSR set to: 0
 16101  006110  8B7D               	bsf	tolower@c& (0+255),5,b
 16102  006112                     l3365:
 16103                           
 16104                           ; BSR set to: 0
 16105                           
 16106                           ; BSR set to: 0
 16107  006112  517D               	movf	tolower@c& (0+255),w,b
 16108  006114  0012               	return	
 16109  006116                     __end_of_tolower:
 16110                           	opt stack 0
 16111                           tosu	equ	0xFFF
 16112                           tosh	equ	0xFFE
 16113                           tosl	equ	0xFFD
 16114                           pclath	equ	0xFFA
 16115                           tblptru	equ	0xFF8
 16116                           tblptrh	equ	0xFF7
 16117                           tblptrl	equ	0xFF6
 16118                           tablat	equ	0xFF5
 16119                           prodh	equ	0xFF4
 16120                           prodl	equ	0xFF3
 16121                           intcon	equ	0xFF2
 16122                           intcon2	equ	0xFF1
 16123                           intcon3	equ	0xFF0
 16124                           indf0	equ	0xFEF
 16125                           postinc0	equ	0xFEE
 16126                           plusw0	equ	0xFEB
 16127                           fsr0h	equ	0xFEA
 16128                           fsr0l	equ	0xFE9
 16129                           wreg	equ	0xFE8
 16130                           indf1	equ	0xFE7
 16131                           postinc1	equ	0xFE6
 16132                           postdec1	equ	0xFE5
 16133                           fsr1h	equ	0xFE2
 16134                           fsr1l	equ	0xFE1
 16135                           indf2	equ	0xFDF
 16136                           postinc2	equ	0xFDE
 16137                           postdec2	equ	0xFDD
 16138                           plusw2	equ	0xFDB
 16139                           fsr2h	equ	0xFDA
 16140                           fsr2l	equ	0xFD9
 16141                           status	equ	0xFD8
 16142                           
 16143 ;; *************** function _isxdigit *****************
 16144 ;; Defined at:
 16145 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;  c               1    wreg     unsigned char 
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;  c               1   34[BANK0 ] unsigned char 
 16150 ;; Return value:  Size  Location     Type
 16151 ;;		None               void
 16152 ;; Registers used:
 16153 ;;		wreg, status,2, status,0, cstack
 16154 ;; Tracked objects:
 16155 ;;		On entry : 0/0
 16156 ;;		On exit  : 0/0
 16157 ;;		Unchanged: 0/0
 16158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16163 ;;Total ram usage:        3 bytes
 16164 ;; Hardware stack levels used:    1
 16165 ;; Hardware stack levels required when called:   12
 16166 ;; This function calls:
 16167 ;;		_isdigit
 16168 ;; This function is called by:
 16169 ;;		_xtoi
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text63
 16174  005ACA                     __ptext63:
 16175                           	opt stack 0
 16176  005ACA                     _isxdigit:
 16177                           	opt stack 12
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;incstack = 0
 16181                           ;isxdigit@c stored from wreg
 16182  005ACA  0100               	movlb	0	; () banked
 16183  005ACC  6F82               	movwf	isxdigit@c& (0+255),b
 16184  005ACE  0E01               	movlw	1
 16185  005AD0  0100               	movlb	0	; () banked
 16186  005AD2  6F81               	movwf	_isxdigit$6469& (0+255),b
 16187                           
 16188                           ; BSR set to: 0
 16189  005AD4  0E67               	movlw	103
 16190  005AD6  6182               	cpfslt	isxdigit@c& (0+255),b
 16191  005AD8  D003               	goto	u11390
 16192                           
 16193                           ; BSR set to: 0
 16194  005ADA  0E61               	movlw	97
 16195  005ADC  6182               	cpfslt	isxdigit@c& (0+255),b
 16196  005ADE  D00E               	goto	l3361
 16197  005AE0                     u11390:
 16198                           
 16199                           ; BSR set to: 0
 16200                           
 16201                           ; BSR set to: 0
 16202  005AE0  0E47               	movlw	71
 16203  005AE2  6182               	cpfslt	isxdigit@c& (0+255),b
 16204  005AE4  D003               	goto	u11410
 16205                           
 16206                           ; BSR set to: 0
 16207  005AE6  0E41               	movlw	65
 16208  005AE8  6182               	cpfslt	isxdigit@c& (0+255),b
 16209  005AEA  D008               	goto	l3361
 16210  005AEC                     u11410:
 16211                           
 16212                           ; BSR set to: 0
 16213                           
 16214                           ; BSR set to: 0
 16215  005AEC  5182               	movf	isxdigit@c& (0+255),w,b
 16216  005AEE  ECDD  F02F         	call	_isdigit
 16217  005AF2  B0D8               	btfsc	status,0,c
 16218  005AF4  D003               	goto	l3361
 16219  005AF6  0E00               	movlw	0
 16220  005AF8  0100               	movlb	0	; () banked
 16221  005AFA  6F81               	movwf	_isxdigit$6469& (0+255),b
 16222  005AFC                     l3361:
 16223                           
 16224                           ; BSR set to: 0
 16225  005AFC  C081  F080         	movff	_isxdigit$6469,??_isxdigit
 16226  005B00  0100               	movlb	0	; () banked
 16227  005B02  3180               	rrcf	??_isxdigit& (0+255),w,b
 16228  005B04  0012               	return	
 16229  005B06                     __end_of_isxdigit:
 16230                           	opt stack 0
 16231                           tosu	equ	0xFFF
 16232                           tosh	equ	0xFFE
 16233                           tosl	equ	0xFFD
 16234                           pclath	equ	0xFFA
 16235                           tblptru	equ	0xFF8
 16236                           tblptrh	equ	0xFF7
 16237                           tblptrl	equ	0xFF6
 16238                           tablat	equ	0xFF5
 16239                           prodh	equ	0xFF4
 16240                           prodl	equ	0xFF3
 16241                           intcon	equ	0xFF2
 16242                           intcon2	equ	0xFF1
 16243                           intcon3	equ	0xFF0
 16244                           indf0	equ	0xFEF
 16245                           postinc0	equ	0xFEE
 16246                           plusw0	equ	0xFEB
 16247                           fsr0h	equ	0xFEA
 16248                           fsr0l	equ	0xFE9
 16249                           wreg	equ	0xFE8
 16250                           indf1	equ	0xFE7
 16251                           postinc1	equ	0xFE6
 16252                           postdec1	equ	0xFE5
 16253                           fsr1h	equ	0xFE2
 16254                           fsr1l	equ	0xFE1
 16255                           indf2	equ	0xFDF
 16256                           postinc2	equ	0xFDE
 16257                           postdec2	equ	0xFDD
 16258                           plusw2	equ	0xFDB
 16259                           fsr2h	equ	0xFDA
 16260                           fsr2l	equ	0xFD9
 16261                           status	equ	0xFD8
 16262                           
 16263 ;; *************** function _strtol *****************
 16264 ;; Defined at:
 16265 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16266 ;; Parameters:    Size  Location     Type
 16267 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16268 ;;		 -> Terminal@Payload(80), 
 16269 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16270 ;;		 -> NULL(0), 
 16271 ;;  base            2   45[BANK0 ] int 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  a               4   52[BANK0 ] long 
 16274 ;;  c               1   56[BANK0 ] unsigned char 
 16275 ;;  sign            1   51[BANK0 ] unsigned char 
 16276 ;; Return value:  Size  Location     Type
 16277 ;;                  4   41[BANK0 ] long 
 16278 ;; Registers used:
 16279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16280 ;; Tracked objects:
 16281 ;;		On entry : 0/0
 16282 ;;		On exit  : 0/0
 16283 ;;		Unchanged: 0/0
 16284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16285 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16286 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16289 ;;Total ram usage:       16 bytes
 16290 ;; Hardware stack levels used:    1
 16291 ;; Hardware stack levels required when called:   13
 16292 ;; This function calls:
 16293 ;;		___lmul
 16294 ;;		_isalpha
 16295 ;;		_isdigit
 16296 ;;		_isspace
 16297 ;;		_toupper
 16298 ;; This function is called by:
 16299 ;;		_Terminal
 16300 ;; This function uses a non-reentrant model
 16301 ;;
 16302                           
 16303                           	psect	text64
 16304  00181C                     __ptext64:
 16305                           	opt stack 0
 16306  00181C                     _strtol:
 16307                           	opt stack 12
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;incstack = 0
 16311  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16312  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16313  001824  50DF               	movf	indf2,w,c
 16314  001826  0100               	movlb	0	; () banked
 16315  001828  6F98               	movwf	strtol@c& (0+255),b
 16316                           
 16317                           ; BSR set to: 0
 16318  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16319  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16320                           
 16321                           ; BSR set to: 0
 16322  00182E  5198               	movf	strtol@c& (0+255),w,b
 16323  001830  EC15  F02F         	call	_isspace
 16324  001834  B0D8               	btfsc	status,0,c
 16325  001836  D7F2               	goto	_strtol
 16326  001838  0E00               	movlw	0
 16327  00183A  0100               	movlb	0	; () banked
 16328  00183C  6F94               	movwf	strtol@a& (0+255),b
 16329  00183E  0E00               	movlw	0
 16330  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16331  001842  0E00               	movlw	0
 16332  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16333  001846  0E00               	movlw	0
 16334  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16335  00184A  0E00               	movlw	0
 16336  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16337                           
 16338                           ; BSR set to: 0
 16339  00184E  0E2D               	movlw	45
 16340  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16341  001852  A4D8               	btfss	status,2,c
 16342  001854  D003               	goto	l3268
 16343                           
 16344                           ; BSR set to: 0
 16345  001856  0E01               	movlw	1
 16346  001858  6F93               	movwf	strtol@sign& (0+255),b
 16347  00185A  D004               	goto	u11890
 16348  00185C                     l3268:
 16349                           
 16350                           ; BSR set to: 0
 16351                           
 16352                           ; BSR set to: 0
 16353  00185C  0E2B               	movlw	43
 16354  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16355  001860  A4D8               	btfss	status,2,c
 16356  001862  D008               	goto	l3270
 16357  001864                     u11890:
 16358                           
 16359                           ; BSR set to: 0
 16360  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16361  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16362  00186C  50DF               	movf	indf2,w,c
 16363  00186E  6F98               	movwf	strtol@c& (0+255),b
 16364                           
 16365                           ; BSR set to: 0
 16366  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16367  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16368  001874                     l3270:
 16369                           
 16370                           ; BSR set to: 0
 16371                           
 16372                           ; BSR set to: 0
 16373                           
 16374                           ; BSR set to: 0
 16375  001874  0E30               	movlw	48
 16376  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16377  001878  A4D8               	btfss	status,2,c
 16378  00187A  D02E               	goto	l3278
 16379                           
 16380                           ; BSR set to: 0
 16381  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16382  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16383  001884  50DF               	movf	indf2,w,c
 16384  001886  6F98               	movwf	strtol@c& (0+255),b
 16385                           
 16386                           ; BSR set to: 0
 16387  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16388  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16389                           
 16390                           ; BSR set to: 0
 16391  00188C  518D               	movf	strtol@base& (0+255),w,b
 16392  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16393  001890  B4D8               	btfsc	status,2,c
 16394  001892  D005               	goto	u11920
 16395                           
 16396                           ; BSR set to: 0
 16397  001894  0E10               	movlw	16
 16398  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16399  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16400  00189A  A4D8               	btfss	status,2,c
 16401  00189C  D015               	goto	l3272
 16402  00189E                     u11920:
 16403                           
 16404                           ; BSR set to: 0
 16405                           
 16406                           ; BSR set to: 0
 16407  00189E  0E78               	movlw	120
 16408  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16409  0018A2  B4D8               	btfsc	status,2,c
 16410  0018A4  D004               	goto	u11940
 16411                           
 16412                           ; BSR set to: 0
 16413  0018A6  0E58               	movlw	88
 16414  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16415  0018AA  A4D8               	btfss	status,2,c
 16416  0018AC  D00D               	goto	l3272
 16417  0018AE                     u11940:
 16418                           
 16419                           ; BSR set to: 0
 16420                           
 16421                           ; BSR set to: 0
 16422  0018AE  0E00               	movlw	0
 16423  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16424  0018B2  0E10               	movlw	16
 16425  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16426                           
 16427                           ; BSR set to: 0
 16428  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16429  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16430  0018BE  50DF               	movf	indf2,w,c
 16431  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16432                           
 16433                           ; BSR set to: 0
 16434  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16435  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16436  0018C6  D008               	goto	l3278
 16437  0018C8                     l3272:
 16438                           
 16439                           ; BSR set to: 0
 16440                           
 16441                           ; BSR set to: 0
 16442  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16443  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16444  0018CC  A4D8               	btfss	status,2,c
 16445  0018CE  D004               	goto	l3278
 16446                           
 16447                           ; BSR set to: 0
 16448  0018D0  0E00               	movlw	0
 16449  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16450  0018D4  0E08               	movlw	8
 16451  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16452  0018D8                     l3278:
 16453                           
 16454                           ; BSR set to: 0
 16455                           
 16456                           ; BSR set to: 0
 16457                           
 16458                           ; BSR set to: 0
 16459                           
 16460                           ; BSR set to: 0
 16461  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16462  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16463  0018DC  A4D8               	btfss	status,2,c
 16464  0018DE  D004               	goto	l3279
 16465                           
 16466                           ; BSR set to: 0
 16467  0018E0  0E00               	movlw	0
 16468  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16469  0018E4  0E0A               	movlw	10
 16470  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16471  0018E8                     l3279:
 16472                           
 16473                           ; BSR set to: 0
 16474                           
 16475                           ; BSR set to: 0
 16476                           
 16477                           ; BSR set to: 0
 16478  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16479  0018EA  EC8C  F02E         	call	_isalpha
 16480  0018EE  A0D8               	btfss	status,0,c
 16481  0018F0  D008               	goto	l3281
 16482  0018F2  0100               	movlb	0	; () banked
 16483  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16484  0018F6  EC8B  F030         	call	_toupper
 16485  0018FA  0FC9               	addlw	201
 16486  0018FC  0100               	movlb	0	; () banked
 16487  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16488  001900  D009               	goto	l3284
 16489  001902                     l3281:
 16490                           
 16491                           ; BSR set to: 0
 16492  001902  0100               	movlb	0	; () banked
 16493  001904  5198               	movf	strtol@c& (0+255),w,b
 16494  001906  ECDD  F02F         	call	_isdigit
 16495  00190A  A0D8               	btfss	status,0,c
 16496  00190C  D039               	goto	l3285
 16497  00190E  0E30               	movlw	48
 16498  001910  0100               	movlb	0	; () banked
 16499  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16500  001914                     l3284:
 16501                           
 16502                           ; BSR set to: 0
 16503                           
 16504                           ; BSR set to: 0
 16505                           
 16506                           ; BSR set to: 0
 16507  001914  5198               	movf	strtol@c& (0+255),w,b
 16508  001916  6F8F               	movwf	??_strtol& (0+255),b
 16509  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16510  00191A  518D               	movf	strtol@base& (0+255),w,b
 16511  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16512  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16513  001920  0A80               	xorlw	128
 16514  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16515  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16516  001926  0A80               	xorlw	128
 16517  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16518  00192A  B0D8               	btfsc	status,0,c
 16519  00192C  D029               	goto	l3285
 16520                           
 16521                           ; BSR set to: 0
 16522                           
 16523                           ; BSR set to: 0
 16524                           
 16525                           ; BSR set to: 0
 16526  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16527  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16528  001936  0E00               	movlw	0
 16529  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16530  00193A  0EFF               	movlw	-1
 16531  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16532  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16533  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16534  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16535  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16536  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16537  001950  EC28  F029         	call	___lmul	;wreg free
 16538  001954  0100               	movlb	0	; () banked
 16539  001956  5198               	movf	strtol@c& (0+255),w,b
 16540  001958  257D               	addwf	?___lmul& (0+255),w,b
 16541  00195A  6F94               	movwf	strtol@a& (0+255),b
 16542  00195C  0E00               	movlw	0
 16543  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16544  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16545  001962  0E00               	movlw	0
 16546  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16547  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16548  001968  0E00               	movlw	0
 16549  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16550  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16551                           
 16552                           ; BSR set to: 0
 16553  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16554  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16555  001976  50DF               	movf	indf2,w,c
 16556  001978  6F98               	movwf	strtol@c& (0+255),b
 16557                           
 16558                           ; BSR set to: 0
 16559  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16560  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16561  00197E  D7B4               	goto	l3279
 16562  001980                     l3285:
 16563                           
 16564                           ; BSR set to: 0
 16565  001980  0100               	movlb	0	; () banked
 16566  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16567  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16568  001986  B4D8               	btfsc	status,2,c
 16569  001988  D00E               	goto	l3287
 16570                           
 16571                           ; BSR set to: 0
 16572  00198A  0EFF               	movlw	255
 16573  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16574  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16575  001990  0EFF               	movlw	255
 16576  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16577  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16578  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16579  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16580  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16581  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16582  0019A6                     l3287:
 16583                           
 16584                           ; BSR set to: 0
 16585                           
 16586                           ; BSR set to: 0
 16587  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16588  0019A8  B4D8               	btfsc	status,2,c
 16589  0019AA  D01A               	goto	l3288
 16590                           
 16591                           ; BSR set to: 0
 16592  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16593  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16594  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16595  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16596  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16597  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16598  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16599  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16600  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16601  0019C6  0E00               	movlw	0
 16602  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16603  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16604  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16605  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16606  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16607  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16608  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16609                           
 16610                           ; BSR set to: 0
 16611  0019DE  0012               	return	
 16612  0019E0                     l3288:
 16613                           
 16614                           ; BSR set to: 0
 16615  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16616  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16617  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16618  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16619                           
 16620                           ; BSR set to: 0
 16621  0019F0  0012               	return		;funcret
 16622  0019F2                     __end_of_strtol:
 16623                           	opt stack 0
 16624                           tosu	equ	0xFFF
 16625                           tosh	equ	0xFFE
 16626                           tosl	equ	0xFFD
 16627                           pclath	equ	0xFFA
 16628                           tblptru	equ	0xFF8
 16629                           tblptrh	equ	0xFF7
 16630                           tblptrl	equ	0xFF6
 16631                           tablat	equ	0xFF5
 16632                           prodh	equ	0xFF4
 16633                           prodl	equ	0xFF3
 16634                           intcon	equ	0xFF2
 16635                           intcon2	equ	0xFF1
 16636                           intcon3	equ	0xFF0
 16637                           indf0	equ	0xFEF
 16638                           postinc0	equ	0xFEE
 16639                           plusw0	equ	0xFEB
 16640                           fsr0h	equ	0xFEA
 16641                           fsr0l	equ	0xFE9
 16642                           wreg	equ	0xFE8
 16643                           indf1	equ	0xFE7
 16644                           postinc1	equ	0xFE6
 16645                           postdec1	equ	0xFE5
 16646                           fsr1h	equ	0xFE2
 16647                           fsr1l	equ	0xFE1
 16648                           indf2	equ	0xFDF
 16649                           postinc2	equ	0xFDE
 16650                           postdec2	equ	0xFDD
 16651                           plusw2	equ	0xFDB
 16652                           fsr2h	equ	0xFDA
 16653                           fsr2l	equ	0xFD9
 16654                           status	equ	0xFD8
 16655                           
 16656 ;; *************** function _toupper *****************
 16657 ;; Defined at:
 16658 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16659 ;; Parameters:    Size  Location     Type
 16660 ;;  c               1    wreg     unsigned char 
 16661 ;; Auto vars:     Size  Location     Type
 16662 ;;  c               1   29[BANK0 ] unsigned char 
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  1    wreg      unsigned char 
 16665 ;; Registers used:
 16666 ;;		wreg, status,2, status,0
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16676 ;;Total ram usage:        1 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; Hardware stack levels required when called:   11
 16679 ;; This function calls:
 16680 ;;		Nothing
 16681 ;; This function is called by:
 16682 ;;		_strtol
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text65
 16687  006116                     __ptext65:
 16688                           	opt stack 0
 16689  006116                     _toupper:
 16690                           	opt stack 13
 16691                           
 16692                           ; BSR set to: 0
 16693                           ;incstack = 0
 16694                           ;toupper@c stored from wreg
 16695  006116  0100               	movlb	0	; () banked
 16696  006118  6F7D               	movwf	toupper@c& (0+255),b
 16697  00611A  0E7B               	movlw	123
 16698  00611C  0100               	movlb	0	; () banked
 16699  00611E  617D               	cpfslt	toupper@c& (0+255),b
 16700  006120  D004               	goto	l3292
 16701                           
 16702                           ; BSR set to: 0
 16703  006122  0E60               	movlw	96
 16704  006124  657D               	cpfsgt	toupper@c& (0+255),b
 16705  006126  D001               	goto	l3292
 16706                           
 16707                           ; BSR set to: 0
 16708  006128  9B7D               	bcf	toupper@c& (0+255),5,b
 16709  00612A                     l3292:
 16710                           
 16711                           ; BSR set to: 0
 16712                           
 16713                           ; BSR set to: 0
 16714  00612A  517D               	movf	toupper@c& (0+255),w,b
 16715  00612C  0012               	return	
 16716  00612E                     __end_of_toupper:
 16717                           	opt stack 0
 16718                           tosu	equ	0xFFF
 16719                           tosh	equ	0xFFE
 16720                           tosl	equ	0xFFD
 16721                           pclath	equ	0xFFA
 16722                           tblptru	equ	0xFF8
 16723                           tblptrh	equ	0xFF7
 16724                           tblptrl	equ	0xFF6
 16725                           tablat	equ	0xFF5
 16726                           prodh	equ	0xFF4
 16727                           prodl	equ	0xFF3
 16728                           intcon	equ	0xFF2
 16729                           intcon2	equ	0xFF1
 16730                           intcon3	equ	0xFF0
 16731                           indf0	equ	0xFEF
 16732                           postinc0	equ	0xFEE
 16733                           plusw0	equ	0xFEB
 16734                           fsr0h	equ	0xFEA
 16735                           fsr0l	equ	0xFE9
 16736                           wreg	equ	0xFE8
 16737                           indf1	equ	0xFE7
 16738                           postinc1	equ	0xFE6
 16739                           postdec1	equ	0xFE5
 16740                           fsr1h	equ	0xFE2
 16741                           fsr1l	equ	0xFE1
 16742                           indf2	equ	0xFDF
 16743                           postinc2	equ	0xFDE
 16744                           postdec2	equ	0xFDD
 16745                           plusw2	equ	0xFDB
 16746                           fsr2h	equ	0xFDA
 16747                           fsr2l	equ	0xFD9
 16748                           status	equ	0xFD8
 16749                           
 16750 ;; *************** function _isspace *****************
 16751 ;; Defined at:
 16752 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16753 ;; Parameters:    Size  Location     Type
 16754 ;;  c               1    wreg     unsigned char 
 16755 ;; Auto vars:     Size  Location     Type
 16756 ;;  c               1   31[BANK0 ] unsigned char 
 16757 ;; Return value:  Size  Location     Type
 16758 ;;		None               void
 16759 ;; Registers used:
 16760 ;;		wreg, status,2, status,0
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/0
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16769 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;Total ram usage:        3 bytes
 16771 ;; Hardware stack levels used:    1
 16772 ;; Hardware stack levels required when called:   11
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_strtol
 16777 ;;		_xtoi
 16778 ;; This function uses a non-reentrant model
 16779 ;;
 16780                           
 16781                           	psect	text66
 16782  005E2A                     __ptext66:
 16783                           	opt stack 0
 16784  005E2A                     _isspace:
 16785                           	opt stack 13
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;incstack = 0
 16789                           ;isspace@c stored from wreg
 16790  005E2A  0100               	movlb	0	; () banked
 16791  005E2C  6F7F               	movwf	isspace@c& (0+255),b
 16792  005E2E  0E01               	movlw	1
 16793  005E30  0100               	movlb	0	; () banked
 16794  005E32  6F7E               	movwf	_isspace$6462& (0+255),b
 16795                           
 16796                           ; BSR set to: 0
 16797  005E34  0E20               	movlw	32
 16798  005E36  197F               	xorwf	isspace@c& (0+255),w,b
 16799  005E38  B4D8               	btfsc	status,2,c
 16800  005E3A  D008               	goto	l3349
 16801                           
 16802                           ; BSR set to: 0
 16803  005E3C  0E0E               	movlw	14
 16804  005E3E  617F               	cpfslt	isspace@c& (0+255),b
 16805  005E40  D003               	goto	u11300
 16806                           
 16807                           ; BSR set to: 0
 16808  005E42  0E09               	movlw	9
 16809  005E44  617F               	cpfslt	isspace@c& (0+255),b
 16810  005E46  D002               	goto	l3349
 16811  005E48                     u11300:
 16812                           
 16813                           ; BSR set to: 0
 16814                           
 16815                           ; BSR set to: 0
 16816  005E48  0E00               	movlw	0
 16817  005E4A  6F7E               	movwf	_isspace$6462& (0+255),b
 16818  005E4C                     l3349:
 16819                           
 16820                           ; BSR set to: 0
 16821                           
 16822                           ; BSR set to: 0
 16823  005E4C  C07E  F07D         	movff	_isspace$6462,??_isspace
 16824  005E50  317D               	rrcf	??_isspace& (0+255),w,b
 16825  005E52  0012               	return	
 16826  005E54                     __end_of_isspace:
 16827                           	opt stack 0
 16828                           tosu	equ	0xFFF
 16829                           tosh	equ	0xFFE
 16830                           tosl	equ	0xFFD
 16831                           pclath	equ	0xFFA
 16832                           tblptru	equ	0xFF8
 16833                           tblptrh	equ	0xFF7
 16834                           tblptrl	equ	0xFF6
 16835                           tablat	equ	0xFF5
 16836                           prodh	equ	0xFF4
 16837                           prodl	equ	0xFF3
 16838                           intcon	equ	0xFF2
 16839                           intcon2	equ	0xFF1
 16840                           intcon3	equ	0xFF0
 16841                           indf0	equ	0xFEF
 16842                           postinc0	equ	0xFEE
 16843                           plusw0	equ	0xFEB
 16844                           fsr0h	equ	0xFEA
 16845                           fsr0l	equ	0xFE9
 16846                           wreg	equ	0xFE8
 16847                           indf1	equ	0xFE7
 16848                           postinc1	equ	0xFE6
 16849                           postdec1	equ	0xFE5
 16850                           fsr1h	equ	0xFE2
 16851                           fsr1l	equ	0xFE1
 16852                           indf2	equ	0xFDF
 16853                           postinc2	equ	0xFDE
 16854                           postdec2	equ	0xFDD
 16855                           plusw2	equ	0xFDB
 16856                           fsr2h	equ	0xFDA
 16857                           fsr2l	equ	0xFD9
 16858                           status	equ	0xFD8
 16859                           
 16860 ;; *************** function _isalpha *****************
 16861 ;; Defined at:
 16862 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  c               1    wreg     unsigned char 
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;  c               1   34[BANK0 ] unsigned char 
 16867 ;; Return value:  Size  Location     Type
 16868 ;;		None               void
 16869 ;; Registers used:
 16870 ;;		wreg, status,2, status,0, cstack
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16879 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16880 ;;Total ram usage:        3 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:   12
 16883 ;; This function calls:
 16884 ;;		_isupper
 16885 ;; This function is called by:
 16886 ;;		_strtol
 16887 ;; This function uses a non-reentrant model
 16888 ;;
 16889                           
 16890                           	psect	text67
 16891  005D18                     __ptext67:
 16892                           	opt stack 0
 16893  005D18                     _isalpha:
 16894                           	opt stack 12
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;incstack = 0
 16898                           ;isalpha@c stored from wreg
 16899  005D18  0100               	movlb	0	; () banked
 16900  005D1A  6F82               	movwf	isalpha@c& (0+255),b
 16901  005D1C  0E01               	movlw	1
 16902  005D1E  0100               	movlb	0	; () banked
 16903  005D20  6F81               	movwf	_isalpha$6459& (0+255),b
 16904                           
 16905                           ; BSR set to: 0
 16906  005D22  0E7B               	movlw	123
 16907  005D24  6182               	cpfslt	isalpha@c& (0+255),b
 16908  005D26  D003               	goto	u11320
 16909                           
 16910                           ; BSR set to: 0
 16911  005D28  0E61               	movlw	97
 16912  005D2A  6182               	cpfslt	isalpha@c& (0+255),b
 16913  005D2C  D008               	goto	l3344
 16914  005D2E                     u11320:
 16915                           
 16916                           ; BSR set to: 0
 16917                           
 16918                           ; BSR set to: 0
 16919  005D2E  5182               	movf	isalpha@c& (0+255),w,b
 16920  005D30  ECBB  F02F         	call	_isupper
 16921  005D34  B0D8               	btfsc	status,0,c
 16922  005D36  D003               	goto	l3344
 16923  005D38  0E00               	movlw	0
 16924  005D3A  0100               	movlb	0	; () banked
 16925  005D3C  6F81               	movwf	_isalpha$6459& (0+255),b
 16926  005D3E                     l3344:
 16927                           
 16928                           ; BSR set to: 0
 16929  005D3E  C081  F080         	movff	_isalpha$6459,??_isalpha
 16930  005D42  0100               	movlb	0	; () banked
 16931  005D44  3180               	rrcf	??_isalpha& (0+255),w,b
 16932  005D46  0012               	return	
 16933  005D48                     __end_of_isalpha:
 16934                           	opt stack 0
 16935                           tosu	equ	0xFFF
 16936                           tosh	equ	0xFFE
 16937                           tosl	equ	0xFFD
 16938                           pclath	equ	0xFFA
 16939                           tblptru	equ	0xFF8
 16940                           tblptrh	equ	0xFF7
 16941                           tblptrl	equ	0xFF6
 16942                           tablat	equ	0xFF5
 16943                           prodh	equ	0xFF4
 16944                           prodl	equ	0xFF3
 16945                           intcon	equ	0xFF2
 16946                           intcon2	equ	0xFF1
 16947                           intcon3	equ	0xFF0
 16948                           indf0	equ	0xFEF
 16949                           postinc0	equ	0xFEE
 16950                           plusw0	equ	0xFEB
 16951                           fsr0h	equ	0xFEA
 16952                           fsr0l	equ	0xFE9
 16953                           wreg	equ	0xFE8
 16954                           indf1	equ	0xFE7
 16955                           postinc1	equ	0xFE6
 16956                           postdec1	equ	0xFE5
 16957                           fsr1h	equ	0xFE2
 16958                           fsr1l	equ	0xFE1
 16959                           indf2	equ	0xFDF
 16960                           postinc2	equ	0xFDE
 16961                           postdec2	equ	0xFDD
 16962                           plusw2	equ	0xFDB
 16963                           fsr2h	equ	0xFDA
 16964                           fsr2l	equ	0xFD9
 16965                           status	equ	0xFD8
 16966                           
 16967 ;; *************** function _isupper *****************
 16968 ;; Defined at:
 16969 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  c               1    wreg     unsigned char 
 16972 ;; Auto vars:     Size  Location     Type
 16973 ;;  c               1   31[BANK0 ] unsigned char 
 16974 ;; Return value:  Size  Location     Type
 16975 ;;		None               void
 16976 ;; Registers used:
 16977 ;;		wreg, status,2, status,0
 16978 ;; Tracked objects:
 16979 ;;		On entry : 0/0
 16980 ;;		On exit  : 0/0
 16981 ;;		Unchanged: 0/0
 16982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16984 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16985 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16987 ;;Total ram usage:        3 bytes
 16988 ;; Hardware stack levels used:    1
 16989 ;; Hardware stack levels required when called:   11
 16990 ;; This function calls:
 16991 ;;		Nothing
 16992 ;; This function is called by:
 16993 ;;		_xtoi
 16994 ;;		_isalpha
 16995 ;; This function uses a non-reentrant model
 16996 ;;
 16997                           
 16998                           	psect	text68
 16999  005F76                     __ptext68:
 17000                           	opt stack 0
 17001  005F76                     _isupper:
 17002                           	opt stack 13
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;incstack = 0
 17006                           ;isupper@c stored from wreg
 17007  005F76  0100               	movlb	0	; () banked
 17008  005F78  6F7F               	movwf	isupper@c& (0+255),b
 17009  005F7A  0E00               	movlw	0
 17010  005F7C  0100               	movlb	0	; () banked
 17011  005F7E  6F7E               	movwf	_isupper$6465& (0+255),b
 17012                           
 17013                           ; BSR set to: 0
 17014  005F80  0E5B               	movlw	91
 17015  005F82  617F               	cpfslt	isupper@c& (0+255),b
 17016  005F84  D005               	goto	l3354
 17017                           
 17018                           ; BSR set to: 0
 17019  005F86  0E40               	movlw	64
 17020  005F88  657F               	cpfsgt	isupper@c& (0+255),b
 17021  005F8A  D002               	goto	l3354
 17022                           
 17023                           ; BSR set to: 0
 17024  005F8C  0E01               	movlw	1
 17025  005F8E  6F7E               	movwf	_isupper$6465& (0+255),b
 17026  005F90                     l3354:
 17027                           
 17028                           ; BSR set to: 0
 17029                           
 17030                           ; BSR set to: 0
 17031  005F90  C07E  F07D         	movff	_isupper$6465,??_isupper
 17032  005F94  317D               	rrcf	??_isupper& (0+255),w,b
 17033  005F96  0012               	return	
 17034  005F98                     __end_of_isupper:
 17035                           	opt stack 0
 17036                           tosu	equ	0xFFF
 17037                           tosh	equ	0xFFE
 17038                           tosl	equ	0xFFD
 17039                           pclath	equ	0xFFA
 17040                           tblptru	equ	0xFF8
 17041                           tblptrh	equ	0xFF7
 17042                           tblptrl	equ	0xFF6
 17043                           tablat	equ	0xFF5
 17044                           prodh	equ	0xFF4
 17045                           prodl	equ	0xFF3
 17046                           intcon	equ	0xFF2
 17047                           intcon2	equ	0xFF1
 17048                           intcon3	equ	0xFF0
 17049                           indf0	equ	0xFEF
 17050                           postinc0	equ	0xFEE
 17051                           plusw0	equ	0xFEB
 17052                           fsr0h	equ	0xFEA
 17053                           fsr0l	equ	0xFE9
 17054                           wreg	equ	0xFE8
 17055                           indf1	equ	0xFE7
 17056                           postinc1	equ	0xFE6
 17057                           postdec1	equ	0xFE5
 17058                           fsr1h	equ	0xFE2
 17059                           fsr1l	equ	0xFE1
 17060                           indf2	equ	0xFDF
 17061                           postinc2	equ	0xFDE
 17062                           postdec2	equ	0xFDD
 17063                           plusw2	equ	0xFDB
 17064                           fsr2h	equ	0xFDA
 17065                           fsr2l	equ	0xFD9
 17066                           status	equ	0xFD8
 17067                           
 17068 ;; *************** function _strcpy *****************
 17069 ;; Defined at:
 17070 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17071 ;; Parameters:    Size  Location     Type
 17072 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17073 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17074 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17075 ;;		 -> STR_23(20), STR_21(42), 
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17078 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  2   29[BANK0 ] PTR unsigned char 
 17081 ;; Registers used:
 17082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17089 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17091 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17092 ;;Total ram usage:        6 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; Hardware stack levels required when called:   11
 17095 ;; This function calls:
 17096 ;;		Nothing
 17097 ;; This function is called by:
 17098 ;;		_Terminal
 17099 ;;		_Term_MainSm
 17100 ;; This function uses a non-reentrant model
 17101 ;;
 17102                           
 17103                           	psect	text69
 17104  005C86                     __ptext69:
 17105                           	opt stack 0
 17106  005C86                     _strcpy:
 17107                           	opt stack 15
 17108                           
 17109                           ; BSR set to: 0
 17110                           ;incstack = 0
 17111  005C86  C07D  F081         	movff	strcpy@to,strcpy@cp
 17112  005C8A  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17113  005C8E  D005               	goto	l3246
 17114  005C90  0100               	movlb	0	; () banked
 17115  005C92  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17116  005C94  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17117  005C96  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17118  005C98  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17119  005C9A                     l3246:
 17120                           
 17121                           ; BSR set to: 0
 17122  005C9A  C07F  FFF6         	movff	strcpy@from,tblptrl
 17123  005C9E  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17124  005CA2                     	if	0	;tblptru may be non-zero
 17125  005CA2                     	endif
 17126  005CA2                     	if	0	;tblptru may be non-zero
 17127  005CA2                     	endif
 17128  005CA2  C081  FFD9         	movff	strcpy@cp,fsr2l
 17129  005CA6  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17130  005CAA  0008               	tblrd		*
 17131  005CAC  CFF5 FFDF          	movff	tablat,indf2
 17132  005CB0  50DF               	movf	indf2,w,c
 17133  005CB2  B4D8               	btfsc	status,2,c
 17134  005CB4  0012               	return	
 17135  005CB6  D7EC               	goto	l3247
 17136  005CB8                     __end_of_strcpy:
 17137                           	opt stack 0
 17138                           tosu	equ	0xFFF
 17139                           tosh	equ	0xFFE
 17140                           tosl	equ	0xFFD
 17141                           pclath	equ	0xFFA
 17142                           tblptru	equ	0xFF8
 17143                           tblptrh	equ	0xFF7
 17144                           tblptrl	equ	0xFF6
 17145                           tablat	equ	0xFF5
 17146                           prodh	equ	0xFF4
 17147                           prodl	equ	0xFF3
 17148                           intcon	equ	0xFF2
 17149                           intcon2	equ	0xFF1
 17150                           intcon3	equ	0xFF0
 17151                           indf0	equ	0xFEF
 17152                           postinc0	equ	0xFEE
 17153                           plusw0	equ	0xFEB
 17154                           fsr0h	equ	0xFEA
 17155                           fsr0l	equ	0xFE9
 17156                           wreg	equ	0xFE8
 17157                           indf1	equ	0xFE7
 17158                           postinc1	equ	0xFE6
 17159                           postdec1	equ	0xFE5
 17160                           fsr1h	equ	0xFE2
 17161                           fsr1l	equ	0xFE1
 17162                           indf2	equ	0xFDF
 17163                           postinc2	equ	0xFDE
 17164                           postdec2	equ	0xFDD
 17165                           plusw2	equ	0xFDB
 17166                           fsr2h	equ	0xFDA
 17167                           fsr2l	equ	0xFD9
 17168                           status	equ	0xFD8
 17169                           
 17170 ;; *************** function _putUSBUSART *****************
 17171 ;; Defined at:
 17172 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17173 ;; Parameters:    Size  Location     Type
 17174 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17175 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17176 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17177 ;;		 -> RxBuffer(400), 
 17178 ;;  length          1   37[BANK0 ] unsigned char 
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;		None
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      void 
 17183 ;; Registers used:
 17184 ;;		wreg, status,2, status,0
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17190 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;Total ram usage:        3 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; Hardware stack levels required when called:   11
 17197 ;; This function calls:
 17198 ;;		Nothing
 17199 ;; This function is called by:
 17200 ;;		_Terminal
 17201 ;;		_Term_MainSm
 17202 ;;		_GsmGprsTerminal
 17203 ;; This function uses a non-reentrant model
 17204 ;;
 17205                           
 17206                           	psect	text70
 17207  005F98                     __ptext70:
 17208                           	opt stack 0
 17209  005F98                     _putUSBUSART:
 17210                           	opt stack 15
 17211                           
 17212                           ;usb_device_cdc.c: 584: ;
 17213                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17214                           
 17215                           ;incstack = 0
 17216  005F98  0100               	movlb	0	; () banked
 17217  005F9A  51C6               	movf	_cdc_trf_state& (0+255),w,b
 17218  005F9C  A4D8               	btfss	status,2,c
 17219  005F9E  0012               	return	
 17220                           
 17221                           ; BSR set to: 0
 17222                           ;usb_device_cdc.c: 586: {
 17223                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17224  005FA0  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17225  005FA4  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17226                           
 17227                           ; BSR set to: 0
 17228  005FA8  C085  F0C5         	movff	putUSBUSART@length,_cdc_tx_len
 17229                           
 17230                           ; BSR set to: 0
 17231  005FAC  0E01               	movlw	1
 17232  005FAE  0101               	movlb	1	; () banked
 17233  005FB0  6FE2               	movwf	_cdc_mem_type& (0+255),b
 17234                           
 17235                           ; BSR set to: 1
 17236  005FB2  0E01               	movlw	1
 17237  005FB4  0100               	movlb	0	; () banked
 17238  005FB6  6FC6               	movwf	_cdc_trf_state& (0+255),b
 17239  005FB8  0012               	return	
 17240  005FBA                     __end_of_putUSBUSART:
 17241                           	opt stack 0
 17242                           tosu	equ	0xFFF
 17243                           tosh	equ	0xFFE
 17244                           tosl	equ	0xFFD
 17245                           pclath	equ	0xFFA
 17246                           tblptru	equ	0xFF8
 17247                           tblptrh	equ	0xFF7
 17248                           tblptrl	equ	0xFF6
 17249                           tablat	equ	0xFF5
 17250                           prodh	equ	0xFF4
 17251                           prodl	equ	0xFF3
 17252                           intcon	equ	0xFF2
 17253                           intcon2	equ	0xFF1
 17254                           intcon3	equ	0xFF0
 17255                           indf0	equ	0xFEF
 17256                           postinc0	equ	0xFEE
 17257                           plusw0	equ	0xFEB
 17258                           fsr0h	equ	0xFEA
 17259                           fsr0l	equ	0xFE9
 17260                           wreg	equ	0xFE8
 17261                           indf1	equ	0xFE7
 17262                           postinc1	equ	0xFE6
 17263                           postdec1	equ	0xFE5
 17264                           fsr1h	equ	0xFE2
 17265                           fsr1l	equ	0xFE1
 17266                           indf2	equ	0xFDF
 17267                           postinc2	equ	0xFDE
 17268                           postdec2	equ	0xFDD
 17269                           plusw2	equ	0xFDB
 17270                           fsr2h	equ	0xFDA
 17271                           fsr2l	equ	0xFD9
 17272                           status	equ	0xFD8
 17273                           
 17274 ;; *************** function _itoa *****************
 17275 ;; Defined at:
 17276 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17277 ;; Parameters:    Size  Location     Type
 17278 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17279 ;;		 -> Terminal@Payload(80), 
 17280 ;;  val             2   53[BANK0 ] int 
 17281 ;;  base            2   55[BANK0 ] int 
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17284 ;;		 -> Terminal@Payload(80), 
 17285 ;; Return value:  Size  Location     Type
 17286 ;;                  2   51[BANK0 ] PTR unsigned char 
 17287 ;; Registers used:
 17288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17289 ;; Tracked objects:
 17290 ;;		On entry : 0/0
 17291 ;;		On exit  : 0/0
 17292 ;;		Unchanged: 0/0
 17293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17294 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17297 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;Total ram usage:        8 bytes
 17299 ;; Hardware stack levels used:    1
 17300 ;; Hardware stack levels required when called:   13
 17301 ;; This function calls:
 17302 ;;		_utoa
 17303 ;; This function is called by:
 17304 ;;		_Terminal
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308                           	psect	text71
 17309  005882                     __ptext71:
 17310                           	opt stack 0
 17311  005882                     _itoa:
 17312                           	opt stack 12
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;incstack = 0
 17316  005882  C093  F099         	movff	itoa@buf,itoa@cp
 17317  005886  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17318  00588A  0100               	movlb	0	; () banked
 17319  00588C  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17320  00588E  D00C               	goto	l2994
 17321                           
 17322                           ; BSR set to: 0
 17323  005890  C093  FFD9         	movff	itoa@buf,fsr2l
 17324  005894  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17325  005898  0E2D               	movlw	45
 17326  00589A  6EDF               	movwf	indf2,c
 17327                           
 17328                           ; BSR set to: 0
 17329  00589C  4B93               	infsnz	itoa@buf& (0+255),f,b
 17330  00589E  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17331                           
 17332                           ; BSR set to: 0
 17333  0058A0  6D95               	negf	itoa@val& (0+255),b
 17334  0058A2  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17335  0058A4  B0D8               	btfsc	status,0,c
 17336  0058A6  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17337  0058A8                     l2994:
 17338                           
 17339                           ; BSR set to: 0
 17340                           
 17341                           ; BSR set to: 0
 17342  0058A8  C093  F08A         	movff	itoa@buf,utoa@buf
 17343  0058AC  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17344  0058B0  C095  F08C         	movff	itoa@val,utoa@val
 17345  0058B4  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17346  0058B8  C097  F08E         	movff	itoa@base,utoa@base
 17347  0058BC  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17348  0058C0  EC76  F021         	call	_utoa	;wreg free
 17349  0058C4  0012               	return	
 17350  0058C6                     __end_of_itoa:
 17351                           	opt stack 0
 17352                           tosu	equ	0xFFF
 17353                           tosh	equ	0xFFE
 17354                           tosl	equ	0xFFD
 17355                           pclath	equ	0xFFA
 17356                           tblptru	equ	0xFF8
 17357                           tblptrh	equ	0xFF7
 17358                           tblptrl	equ	0xFF6
 17359                           tablat	equ	0xFF5
 17360                           prodh	equ	0xFF4
 17361                           prodl	equ	0xFF3
 17362                           intcon	equ	0xFF2
 17363                           intcon2	equ	0xFF1
 17364                           intcon3	equ	0xFF0
 17365                           indf0	equ	0xFEF
 17366                           postinc0	equ	0xFEE
 17367                           plusw0	equ	0xFEB
 17368                           fsr0h	equ	0xFEA
 17369                           fsr0l	equ	0xFE9
 17370                           wreg	equ	0xFE8
 17371                           indf1	equ	0xFE7
 17372                           postinc1	equ	0xFE6
 17373                           postdec1	equ	0xFE5
 17374                           fsr1h	equ	0xFE2
 17375                           fsr1l	equ	0xFE1
 17376                           indf2	equ	0xFDF
 17377                           postinc2	equ	0xFDE
 17378                           postdec2	equ	0xFDD
 17379                           plusw2	equ	0xFDB
 17380                           fsr2h	equ	0xFDA
 17381                           fsr2l	equ	0xFD9
 17382                           status	equ	0xFD8
 17383                           
 17384 ;; *************** function _utoa *****************
 17385 ;; Defined at:
 17386 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17387 ;; Parameters:    Size  Location     Type
 17388 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17389 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17390 ;;  val             2   44[BANK0 ] unsigned int 
 17391 ;;  base            2   46[BANK0 ] int 
 17392 ;; Auto vars:     Size  Location     Type
 17393 ;;  v               2   48[BANK0 ] unsigned int 
 17394 ;;  c               1   50[BANK0 ] unsigned char 
 17395 ;; Return value:  Size  Location     Type
 17396 ;;                  2   42[BANK0 ] PTR unsigned char 
 17397 ;; Registers used:
 17398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17399 ;; Tracked objects:
 17400 ;;		On entry : 0/0
 17401 ;;		On exit  : 0/0
 17402 ;;		Unchanged: 0/0
 17403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17404 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17405 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17407 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17408 ;;Total ram usage:        9 bytes
 17409 ;; Hardware stack levels used:    1
 17410 ;; Hardware stack levels required when called:   12
 17411 ;; This function calls:
 17412 ;;		___lwdiv
 17413 ;;		___lwmod
 17414 ;; This function is called by:
 17415 ;;		_Term_MainSm
 17416 ;;		_itoa
 17417 ;; This function uses a non-reentrant model
 17418 ;;
 17419                           
 17420                           	psect	text72
 17421  0042EC                     __ptext72:
 17422                           	opt stack 0
 17423  0042EC                     _utoa:
 17424                           	opt stack 14
 17425                           
 17426                           ;incstack = 0
 17427  0042EC  C08C  F090         	movff	utoa@val,utoa@v
 17428  0042F0  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17429  0042F4  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17430  0042F8  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17431  0042FC  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17432  004300  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17433  004304  EC54  F02A         	call	___lwdiv	;wreg free
 17434  004308  C083  F090         	movff	?___lwdiv,utoa@v
 17435  00430C  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17436  004310  0100               	movlb	0	; () banked
 17437  004312  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17438  004314  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17439                           
 17440                           ; BSR set to: 0
 17441  004316  5190               	movf	utoa@v& (0+255),w,b
 17442  004318  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17443  00431A  A4D8               	btfss	status,2,c
 17444  00431C  D7EB               	goto	l2998
 17445                           
 17446                           ; BSR set to: 0
 17447                           
 17448                           ; BSR set to: 0
 17449  00431E  C08A  FFD9         	movff	utoa@buf,fsr2l
 17450  004322  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17451  004326  0E00               	movlw	0
 17452  004328  6EDF               	movwf	indf2,c
 17453                           
 17454                           ; BSR set to: 0
 17455  00432A  078A               	decf	utoa@buf& (0+255),f,b
 17456  00432C  A0D8               	btfss	status,0,c
 17457  00432E  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17458  004330                     
 17459                           ; BSR set to: 0
 17460                           
 17461                           ; BSR set to: 0
 17462  004330  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17463  004334  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17464  004338  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17465  00433C  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17466  004340  EC63  F02C         	call	___lwmod	;wreg free
 17467  004344  0100               	movlb	0	; () banked
 17468  004346  517D               	movf	?___lwmod& (0+255),w,b
 17469  004348  6F92               	movwf	utoa@c& (0+255),b
 17470                           
 17471                           ; BSR set to: 0
 17472  00434A  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17473  00434E  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17474  004352  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17475  004356  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17476  00435A  EC54  F02A         	call	___lwdiv	;wreg free
 17477  00435E  C083  F08C         	movff	?___lwdiv,utoa@val
 17478  004362  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17479  004366  0E09               	movlw	9
 17480  004368  0100               	movlb	0	; () banked
 17481  00436A  6592               	cpfsgt	utoa@c& (0+255),b
 17482  00436C  D002               	goto	l3001
 17483                           
 17484                           ; BSR set to: 0
 17485  00436E  0E07               	movlw	7
 17486  004370  2792               	addwf	utoa@c& (0+255),f,b
 17487  004372                     l3001:
 17488                           
 17489                           ; BSR set to: 0
 17490  004372  0E30               	movlw	48
 17491  004374  2792               	addwf	utoa@c& (0+255),f,b
 17492                           
 17493                           ; BSR set to: 0
 17494  004376  C08A  FFD9         	movff	utoa@buf,fsr2l
 17495  00437A  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17496  00437E  C092  FFDF         	movff	utoa@c,indf2
 17497                           
 17498                           ; BSR set to: 0
 17499  004382  078A               	decf	utoa@buf& (0+255),f,b
 17500  004384  A0D8               	btfss	status,0,c
 17501  004386  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17502                           
 17503                           ; BSR set to: 0
 17504  004388  518C               	movf	utoa@val& (0+255),w,b
 17505  00438A  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17506  00438C  A4D8               	btfss	status,2,c
 17507  00438E  D7D0               	goto	l3000
 17508                           
 17509                           ; BSR set to: 0
 17510                           ;	Return value of _utoa is never used
 17511                           
 17512                           ; BSR set to: 0
 17513  004390  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17514  004392  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17515  004394  0012               	return	
 17516  004396                     __end_of_utoa:
 17517                           	opt stack 0
 17518                           tosu	equ	0xFFF
 17519                           tosh	equ	0xFFE
 17520                           tosl	equ	0xFFD
 17521                           pclath	equ	0xFFA
 17522                           tblptru	equ	0xFF8
 17523                           tblptrh	equ	0xFF7
 17524                           tblptrl	equ	0xFF6
 17525                           tablat	equ	0xFF5
 17526                           prodh	equ	0xFF4
 17527                           prodl	equ	0xFF3
 17528                           intcon	equ	0xFF2
 17529                           intcon2	equ	0xFF1
 17530                           intcon3	equ	0xFF0
 17531                           indf0	equ	0xFEF
 17532                           postinc0	equ	0xFEE
 17533                           plusw0	equ	0xFEB
 17534                           fsr0h	equ	0xFEA
 17535                           fsr0l	equ	0xFE9
 17536                           wreg	equ	0xFE8
 17537                           indf1	equ	0xFE7
 17538                           postinc1	equ	0xFE6
 17539                           postdec1	equ	0xFE5
 17540                           fsr1h	equ	0xFE2
 17541                           fsr1l	equ	0xFE1
 17542                           indf2	equ	0xFDF
 17543                           postinc2	equ	0xFDE
 17544                           postdec2	equ	0xFDD
 17545                           plusw2	equ	0xFDB
 17546                           fsr2h	equ	0xFDA
 17547                           fsr2l	equ	0xFD9
 17548                           status	equ	0xFD8
 17549                           
 17550 ;; *************** function ___lwmod *****************
 17551 ;; Defined at:
 17552 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;  dividend        2   29[BANK0 ] unsigned int 
 17555 ;;  divisor         2   31[BANK0 ] unsigned int 
 17556 ;; Auto vars:     Size  Location     Type
 17557 ;;  counter         1   33[BANK0 ] unsigned char 
 17558 ;; Return value:  Size  Location     Type
 17559 ;;                  2   29[BANK0 ] unsigned int 
 17560 ;; Registers used:
 17561 ;;		wreg, status,2, status,0
 17562 ;; Tracked objects:
 17563 ;;		On entry : 0/0
 17564 ;;		On exit  : 0/0
 17565 ;;		Unchanged: 0/0
 17566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17570 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17571 ;;Total ram usage:        5 bytes
 17572 ;; Hardware stack levels used:    1
 17573 ;; Hardware stack levels required when called:   11
 17574 ;; This function calls:
 17575 ;;		Nothing
 17576 ;; This function is called by:
 17577 ;;		_utoa
 17578 ;; This function uses a non-reentrant model
 17579 ;;
 17580                           
 17581                           	psect	text73
 17582  0058C6                     __ptext73:
 17583                           	opt stack 0
 17584  0058C6                     ___lwmod:
 17585                           	opt stack 14
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;incstack = 0
 17589  0058C6  0100               	movlb	0	; () banked
 17590  0058C8  517F               	movf	___lwmod@divisor& (0+255),w,b
 17591  0058CA  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17592  0058CC  B4D8               	btfsc	status,2,c
 17593  0058CE  D018               	goto	l3096
 17594                           
 17595                           ; BSR set to: 0
 17596  0058D0  0E01               	movlw	1
 17597  0058D2  6F81               	movwf	___lwmod@counter& (0+255),b
 17598  0058D4  D004               	goto	l3091
 17599  0058D6                     
 17600                           ; BSR set to: 0
 17601                           
 17602                           ; BSR set to: 0
 17603  0058D6  90D8               	bcf	status,0,c
 17604  0058D8  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17605  0058DA  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17606  0058DC  2B81               	incf	___lwmod@counter& (0+255),f,b
 17607  0058DE                     l3091:
 17608                           
 17609                           ; BSR set to: 0
 17610                           
 17611                           ; BSR set to: 0
 17612  0058DE  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17613  0058E0  D7FA               	goto	l3092
 17614  0058E2                     u10920:
 17615                           
 17616                           ; BSR set to: 0
 17617                           
 17618                           ; BSR set to: 0
 17619                           
 17620                           ; BSR set to: 0
 17621  0058E2  517F               	movf	___lwmod@divisor& (0+255),w,b
 17622  0058E4  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17623  0058E6  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17624  0058E8  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17625  0058EA  A0D8               	btfss	status,0,c
 17626  0058EC  D004               	goto	l3095
 17627                           
 17628                           ; BSR set to: 0
 17629  0058EE  517F               	movf	___lwmod@divisor& (0+255),w,b
 17630  0058F0  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17631  0058F2  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17632  0058F4  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17633  0058F6                     l3095:
 17634                           
 17635                           ; BSR set to: 0
 17636                           
 17637                           ; BSR set to: 0
 17638  0058F6  90D8               	bcf	status,0,c
 17639  0058F8  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17640  0058FA  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17641                           
 17642                           ; BSR set to: 0
 17643  0058FC  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17644  0058FE  D7F1               	goto	u10920
 17645  005900                     l3096:
 17646                           
 17647                           ; BSR set to: 0
 17648                           
 17649                           ; BSR set to: 0
 17650  005900  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17651  005904  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17652                           
 17653                           ; BSR set to: 0
 17654  005908  0012               	return		;funcret
 17655  00590A                     __end_of___lwmod:
 17656                           	opt stack 0
 17657                           tosu	equ	0xFFF
 17658                           tosh	equ	0xFFE
 17659                           tosl	equ	0xFFD
 17660                           pclath	equ	0xFFA
 17661                           tblptru	equ	0xFF8
 17662                           tblptrh	equ	0xFF7
 17663                           tblptrl	equ	0xFF6
 17664                           tablat	equ	0xFF5
 17665                           prodh	equ	0xFF4
 17666                           prodl	equ	0xFF3
 17667                           intcon	equ	0xFF2
 17668                           intcon2	equ	0xFF1
 17669                           intcon3	equ	0xFF0
 17670                           indf0	equ	0xFEF
 17671                           postinc0	equ	0xFEE
 17672                           plusw0	equ	0xFEB
 17673                           fsr0h	equ	0xFEA
 17674                           fsr0l	equ	0xFE9
 17675                           wreg	equ	0xFE8
 17676                           indf1	equ	0xFE7
 17677                           postinc1	equ	0xFE6
 17678                           postdec1	equ	0xFE5
 17679                           fsr1h	equ	0xFE2
 17680                           fsr1l	equ	0xFE1
 17681                           indf2	equ	0xFDF
 17682                           postinc2	equ	0xFDE
 17683                           postdec2	equ	0xFDD
 17684                           plusw2	equ	0xFDB
 17685                           fsr2h	equ	0xFDA
 17686                           fsr2l	equ	0xFD9
 17687                           status	equ	0xFD8
 17688                           
 17689 ;; *************** function _getsUSBUSART *****************
 17690 ;; Defined at:
 17691 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17694 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17695 ;;  len             1   38[BANK0 ] unsigned char 
 17696 ;; Auto vars:     Size  Location     Type
 17697 ;;		None
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  1    wreg      unsigned char 
 17700 ;; Registers used:
 17701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17707 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17711 ;;Total ram usage:        4 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:   12
 17714 ;; This function calls:
 17715 ;;		_USBTransferOnePacket
 17716 ;; This function is called by:
 17717 ;;		_Terminal
 17718 ;;		_GsmGprsTerminal
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text74
 17723  004892                     __ptext74:
 17724                           	opt stack 0
 17725  004892                     _getsUSBUSART:
 17726                           	opt stack 13
 17727                           
 17728                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17729                           
 17730                           ; BSR set to: 0
 17731                           ;incstack = 0
 17732  004892  0E00               	movlw	0
 17733  004894  0100               	movlb	0	; () banked
 17734  004896  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17738  004898  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17739  00489A  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17740  00489C  B4D8               	btfsc	status,2,c
 17741  00489E  D006               	goto	u11700
 17742                           
 17743                           ; BSR set to: 0
 17744  0048A0  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17745  0048A4  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17746  0048A8  BEDF               	btfsc	indf2,7,c
 17747  0048AA  D03B               	goto	l1921
 17748  0048AC                     u11700:
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;usb_device_cdc.c: 493: {
 17752                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17753                           
 17754                           ; BSR set to: 0
 17755  0048AC  EE20 F001          	lfsr	2,1
 17756  0048B0  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17757  0048B2  26D9               	addwf	fsr2l,f,c
 17758  0048B4  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17759  0048B6  22DA               	addwfc	fsr2h,f,c
 17760  0048B8  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17761  0048BA  5CDE               	subwf	postinc2,w,c
 17762  0048BC  B0D8               	btfsc	status,0,c
 17763  0048BE  D008               	goto	l1924
 17764                           
 17765                           ; BSR set to: 0
 17766                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17767  0048C0  EE20 F001          	lfsr	2,1
 17768  0048C4  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17769  0048C6  26D9               	addwf	fsr2l,f,c
 17770  0048C8  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17771  0048CA  22DA               	addwfc	fsr2h,f,c
 17772  0048CC  50DF               	movf	indf2,w,c
 17773  0048CE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17774  0048D0                     l1924:
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17778                           
 17779                           ; BSR set to: 0
 17780  0048D0  0E00               	movlw	0
 17781  0048D2  6FC7               	movwf	_cdc_rx_len& (0+255),b
 17782  0048D4  D013               	goto	l1925
 17783  0048D6                     
 17784                           ; BSR set to: 0
 17785                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17786                           
 17787                           ; BSR set to: 0
 17788  0048D6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17789  0048D8  0D01               	mullw	1
 17790  0048DA  0E00               	movlw	low _cdc_data_rx
 17791  0048DC  24F3               	addwf	prodl,w,c
 17792  0048DE  6ED9               	movwf	fsr2l,c
 17793  0048E0  0E05               	movlw	high _cdc_data_rx
 17794  0048E2  20F4               	addwfc	prodh,w,c
 17795  0048E4  6EDA               	movwf	fsr2h,c
 17796  0048E6  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17797  0048E8  0D01               	mullw	1
 17798  0048EA  50F3               	movf	prodl,w,c
 17799  0048EC  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17800  0048EE  6EE1               	movwf	fsr1l,c
 17801  0048F0  50F4               	movf	prodh,w,c
 17802  0048F2  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 17803  0048F4  6EE2               	movwf	fsr1h,c
 17804  0048F6  CFDF FFE7          	movff	indf2,indf1
 17805                           
 17806                           ; BSR set to: 0
 17807  0048FA  2BC7               	incf	_cdc_rx_len& (0+255),f,b
 17808  0048FC                     l1925:
 17809                           
 17810                           ; BSR set to: 0
 17811                           
 17812                           ; BSR set to: 0
 17813  0048FC  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17814  0048FE  5DC7               	subwf	_cdc_rx_len& (0+255),w,b
 17815  004900  A0D8               	btfss	status,0,c
 17816  004902  D7E9               	goto	l1926
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17820                           
 17821                           ; BSR set to: 0
 17822  004904  0E00               	movlw	0
 17823  004906  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 17824  004908  0E00               	movlw	low _cdc_data_rx
 17825  00490A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 17826  00490C  0E05               	movlw	high _cdc_data_rx
 17827  00490E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 17828  004910  0E40               	movlw	64
 17829  004912  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 17830  004914  0E02               	movlw	2
 17831  004916  EC10  F020         	call	_USBTransferOnePacket
 17832  00491A  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 17833  00491E  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17834  004922                     l1921:
 17835                           
 17836                           ;usb_device_cdc.c: 513: }
 17837                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 17838  004922  0100               	movlb	0	; () banked
 17839  004924  51C7               	movf	_cdc_rx_len& (0+255),w,b
 17840  004926  0012               	return	
 17841  004928                     __end_of_getsUSBUSART:
 17842                           	opt stack 0
 17843                           tosu	equ	0xFFF
 17844                           tosh	equ	0xFFE
 17845                           tosl	equ	0xFFD
 17846                           pclath	equ	0xFFA
 17847                           tblptru	equ	0xFF8
 17848                           tblptrh	equ	0xFF7
 17849                           tblptrl	equ	0xFF6
 17850                           tablat	equ	0xFF5
 17851                           prodh	equ	0xFF4
 17852                           prodl	equ	0xFF3
 17853                           intcon	equ	0xFF2
 17854                           intcon2	equ	0xFF1
 17855                           intcon3	equ	0xFF0
 17856                           indf0	equ	0xFEF
 17857                           postinc0	equ	0xFEE
 17858                           plusw0	equ	0xFEB
 17859                           fsr0h	equ	0xFEA
 17860                           fsr0l	equ	0xFE9
 17861                           wreg	equ	0xFE8
 17862                           indf1	equ	0xFE7
 17863                           postinc1	equ	0xFE6
 17864                           postdec1	equ	0xFE5
 17865                           fsr1h	equ	0xFE2
 17866                           fsr1l	equ	0xFE1
 17867                           indf2	equ	0xFDF
 17868                           postinc2	equ	0xFDE
 17869                           postdec2	equ	0xFDD
 17870                           plusw2	equ	0xFDB
 17871                           fsr2h	equ	0xFDA
 17872                           fsr2l	equ	0xFD9
 17873                           status	equ	0xFD8
 17874                           
 17875 ;; *************** function _USBTransferOnePacket *****************
 17876 ;; Defined at:
 17877 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 17878 ;; Parameters:    Size  Location     Type
 17879 ;;  ep              1    wreg     unsigned char 
 17880 ;;  dir             1   29[BANK0 ] unsigned char 
 17881 ;;  data            2   30[BANK0 ] PTR unsigned char 
 17882 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 17883 ;;  len             1   32[BANK0 ] unsigned char 
 17884 ;; Auto vars:     Size  Location     Type
 17885 ;;  ep              1   33[BANK0 ] unsigned char 
 17886 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 17887 ;;		 -> NULL(0), BDT(48), 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  2   29[BANK0 ] PTR void 
 17890 ;; Registers used:
 17891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17892 ;; Tracked objects:
 17893 ;;		On entry : 0/0
 17894 ;;		On exit  : 0/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17898 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17900 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;Total ram usage:        7 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:   11
 17904 ;; This function calls:
 17905 ;;		Nothing
 17906 ;; This function is called by:
 17907 ;;		_CDCInitEP
 17908 ;;		_getsUSBUSART
 17909 ;;		_CDCTxService
 17910 ;;		_USBCDCEventHandler
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           	psect	text75
 17915  004020                     __ptext75:
 17916                           	opt stack 0
 17917  004020                     _USBTransferOnePacket:
 17918                           	opt stack 13
 17919                           
 17920                           ; BSR set to: 0
 17921                           ;incstack = 0
 17922                           ;USBTransferOnePacket@ep stored from wreg
 17923  004020  0100               	movlb	0	; () banked
 17924  004022  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 17925                           
 17926                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 17927                           ;usb_device.c: 1018: if(dir != 0)
 17928  004024  0100               	movlb	0	; () banked
 17929  004026  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 17930  004028  B4D8               	btfsc	status,2,c
 17931  00402A  D007               	goto	l1645
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;usb_device.c: 1019: {
 17935                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 17936  00402C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17937  00402E  0D02               	mullw	2
 17938  004030  0EB6               	movlw	low _pBDTEntryIn
 17939  004032  24F3               	addwf	prodl,w,c
 17940  004034  6ED9               	movwf	fsr2l,c
 17941  004036  0E00               	movlw	high _pBDTEntryIn
 17942  004038  D006               	goto	L16
 17943  00403A                     l1645:
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;usb_device.c: 1023: else
 17947                           ;usb_device.c: 1024: {
 17948                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 17949                           
 17950                           ; BSR set to: 0
 17951  00403A  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 17952  00403C  0D02               	mullw	2
 17953  00403E  0E0E               	movlw	low _pBDTEntryOut
 17954  004040  24F3               	addwf	prodl,w,c
 17955  004042  6ED9               	movwf	fsr2l,c
 17956  004044  0E03               	movlw	high _pBDTEntryOut
 17957  004046                     L16:
 17958  004046  20F4               	addwfc	prodh,w,c
 17959  004048  6EDA               	movwf	fsr2h,c
 17960  00404A  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 17961  00404E  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;usb_device.c: 1027: }
 17965                           ;usb_device.c: 1031: if(handle == 0)
 17966                           
 17967                           ; BSR set to: 0
 17968  004052  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17969  004054  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17970  004056  A4D8               	btfss	status,2,c
 17971  004058  D005               	goto	l1647
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;usb_device.c: 1032: {
 17975                           ;usb_device.c: 1033: return 0;
 17976  00405A  0E00               	movlw	0
 17977  00405C  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 17978  00405E  0E00               	movlw	0
 17979  004060  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 17980                           
 17981                           ; BSR set to: 0
 17982  004062  0012               	return	
 17983  004064                     l1647:
 17984                           
 17985                           ; BSR set to: 0
 17986                           ;usb_device.c: 1034: }
 17987                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 17988                           
 17989                           ; BSR set to: 0
 17990  004064  EE20 F002          	lfsr	2,2
 17991  004068  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 17992  00406A  26D9               	addwf	fsr2l,f,c
 17993  00406C  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 17994  00406E  22DA               	addwfc	fsr2h,f,c
 17995  004070  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 17996  004074  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 17997                           
 17998                           ;usb_device.c: 1048: handle->CNT = len;
 17999  004078  EE20 F001          	lfsr	2,1
 18000  00407C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18001  00407E  26D9               	addwf	fsr2l,f,c
 18002  004080  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18003  004082  22DA               	addwfc	fsr2h,f,c
 18004  004084  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18005                           
 18006                           ; BSR set to: 0
 18007                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18008  004088  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18009  00408C  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18010  004090  0E40               	movlw	64
 18011  004092  16DF               	andwf	indf2,f,c
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18015  004094  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18016  004098  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18017  00409C  0E00               	movlw	0
 18018  00409E  86DB               	bsf	plusw2,3,c
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18022  0040A0  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18023  0040A4  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18024  0040A8  0E00               	movlw	0
 18025  0040AA  8EDB               	bsf	plusw2,7,c
 18026                           
 18027                           ; BSR set to: 0
 18028                           ;usb_device.c: 1054: if(dir != 0)
 18029  0040AC  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18030  0040AE  B4D8               	btfsc	status,2,c
 18031  0040B0  D007               	goto	l1649
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;usb_device.c: 1055: {
 18035                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18036  0040B2  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18037  0040B4  0D02               	mullw	2
 18038  0040B6  0EB6               	movlw	low _pBDTEntryIn
 18039  0040B8  24F3               	addwf	prodl,w,c
 18040  0040BA  6ED9               	movwf	fsr2l,c
 18041  0040BC  0E00               	movlw	high _pBDTEntryIn
 18042  0040BE  D006               	goto	L17
 18043  0040C0                     l1649:
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;usb_device.c: 1059: else
 18047                           ;usb_device.c: 1060: {
 18048                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18049                           
 18050                           ; BSR set to: 0
 18051  0040C0  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18052  0040C2  0D02               	mullw	2
 18053  0040C4  0E0E               	movlw	low _pBDTEntryOut
 18054  0040C6  24F3               	addwf	prodl,w,c
 18055  0040C8  6ED9               	movwf	fsr2l,c
 18056  0040CA  0E03               	movlw	high _pBDTEntryOut
 18057  0040CC                     L17:
 18058  0040CC  20F4               	addwfc	prodh,w,c
 18059  0040CE  6EDA               	movwf	fsr2h,c
 18060  0040D0  0E04               	movlw	4
 18061  0040D2  1ADF               	xorwf	indf2,f,c
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;usb_device.c: 1063: }
 18065                           ;usb_device.c: 1064: return (void*)handle;
 18066                           
 18067                           ; BSR set to: 0
 18068  0040D4  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18069  0040D8  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18070  0040DC  0012               	return	
 18071  0040DE                     __end_of_USBTransferOnePacket:
 18072                           	opt stack 0
 18073                           tosu	equ	0xFFF
 18074                           tosh	equ	0xFFE
 18075                           tosl	equ	0xFFD
 18076                           pclath	equ	0xFFA
 18077                           tblptru	equ	0xFF8
 18078                           tblptrh	equ	0xFF7
 18079                           tblptrl	equ	0xFF6
 18080                           tablat	equ	0xFF5
 18081                           prodh	equ	0xFF4
 18082                           prodl	equ	0xFF3
 18083                           intcon	equ	0xFF2
 18084                           intcon2	equ	0xFF1
 18085                           intcon3	equ	0xFF0
 18086                           indf0	equ	0xFEF
 18087                           postinc0	equ	0xFEE
 18088                           plusw0	equ	0xFEB
 18089                           fsr0h	equ	0xFEA
 18090                           fsr0l	equ	0xFE9
 18091                           wreg	equ	0xFE8
 18092                           indf1	equ	0xFE7
 18093                           postinc1	equ	0xFE6
 18094                           postdec1	equ	0xFE5
 18095                           fsr1h	equ	0xFE2
 18096                           fsr1l	equ	0xFE1
 18097                           indf2	equ	0xFDF
 18098                           postinc2	equ	0xFDE
 18099                           postdec2	equ	0xFDD
 18100                           plusw2	equ	0xFDB
 18101                           fsr2h	equ	0xFDA
 18102                           fsr2l	equ	0xFD9
 18103                           status	equ	0xFD8
 18104                           
 18105 ;; *************** function _atoi *****************
 18106 ;; Defined at:
 18107 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18108 ;; Parameters:    Size  Location     Type
 18109 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18110 ;;		 -> Terminal@Len(4), 
 18111 ;; Auto vars:     Size  Location     Type
 18112 ;;  a               2   40[BANK0 ] int 
 18113 ;;  sign            1   39[BANK0 ] unsigned char 
 18114 ;; Return value:  Size  Location     Type
 18115 ;;                  2   35[BANK0 ] int 
 18116 ;; Registers used:
 18117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18118 ;; Tracked objects:
 18119 ;;		On entry : 0/0
 18120 ;;		On exit  : 0/0
 18121 ;;		Unchanged: 0/0
 18122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18124 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18126 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18127 ;;Total ram usage:        7 bytes
 18128 ;; Hardware stack levels used:    1
 18129 ;; Hardware stack levels required when called:   12
 18130 ;; This function calls:
 18131 ;;		___wmul
 18132 ;;		_isdigit
 18133 ;; This function is called by:
 18134 ;;		_Terminal
 18135 ;; This function uses a non-reentrant model
 18136 ;;
 18137                           
 18138                           	psect	text76
 18139  00369A                     __ptext76:
 18140                           	opt stack 0
 18141  00369A                     _atoi:
 18142                           	opt stack 13
 18143                           
 18144                           ; BSR set to: 0
 18145                           ;incstack = 0
 18146  00369A  D003               	goto	l2807
 18147  00369C  0100               	movlb	0	; () banked
 18148  00369E  4B83               	infsnz	atoi@s& (0+255),f,b
 18149  0036A0  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18150  0036A2                     l2807:
 18151                           
 18152                           ; BSR set to: 0
 18153  0036A2  C083  FFD9         	movff	atoi@s,fsr2l
 18154  0036A6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18155  0036AA  0E20               	movlw	32
 18156  0036AC  18DE               	xorwf	postinc2,w,c
 18157  0036AE  B4D8               	btfsc	status,2,c
 18158  0036B0  D7F5               	goto	l2808
 18159  0036B2  C083  FFD9         	movff	atoi@s,fsr2l
 18160  0036B6  C084  FFDA         	movff	atoi@s+1,fsr2h
 18161  0036BA  0E09               	movlw	9
 18162  0036BC  18DE               	xorwf	postinc2,w,c
 18163  0036BE  B4D8               	btfsc	status,2,c
 18164  0036C0  D7ED               	goto	l2808
 18165  0036C2  0E00               	movlw	0
 18166  0036C4  0100               	movlb	0	; () banked
 18167  0036C6  6F89               	movwf	(atoi@a+1)& (0+255),b
 18168  0036C8  0E00               	movlw	0
 18169  0036CA  6F88               	movwf	atoi@a& (0+255),b
 18170  0036CC  0E00               	movlw	0
 18171  0036CE  6F87               	movwf	atoi@sign& (0+255),b
 18172                           
 18173                           ; BSR set to: 0
 18174  0036D0  C083  FFD9         	movff	atoi@s,fsr2l
 18175  0036D4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18176  0036D8  0E2D               	movlw	45
 18177  0036DA  18DE               	xorwf	postinc2,w,c
 18178  0036DC  A4D8               	btfss	status,2,c
 18179  0036DE  D002               	goto	l2810
 18180                           
 18181                           ; BSR set to: 0
 18182  0036E0  2B87               	incf	atoi@sign& (0+255),f,b
 18183  0036E2  D026               	goto	l12826
 18184  0036E4                     l2810:
 18185                           
 18186                           ; BSR set to: 0
 18187                           
 18188                           ; BSR set to: 0
 18189  0036E4  C083  FFD9         	movff	atoi@s,fsr2l
 18190  0036E8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18191  0036EC  0E2B               	movlw	43
 18192  0036EE  18DE               	xorwf	postinc2,w,c
 18193  0036F0  A4D8               	btfss	status,2,c
 18194  0036F2  D020               	goto	l2813
 18195  0036F4  D01D               	goto	l12826
 18196  0036F6                     
 18197                           ; BSR set to: 0
 18198  0036F6  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18199  0036FA  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18200  0036FE  0E00               	movlw	0
 18201  003700  0100               	movlb	0	; () banked
 18202  003702  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18203  003704  0E0A               	movlw	10
 18204  003706  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18205  003708  EC2A  F02F         	call	___wmul	;wreg free
 18206  00370C  C083  FFD9         	movff	atoi@s,fsr2l
 18207  003710  C084  FFDA         	movff	atoi@s+1,fsr2h
 18208  003714  50DF               	movf	indf2,w,c
 18209  003716  0100               	movlb	0	; () banked
 18210  003718  6F85               	movwf	??_atoi& (0+255),b
 18211  00371A  6B86               	clrf	(??_atoi+1)& (0+255),b
 18212  00371C  517D               	movf	?___wmul& (0+255),w,b
 18213  00371E  2785               	addwf	??_atoi& (0+255),f,b
 18214  003720  517E               	movf	(?___wmul+1)& (0+255),w,b
 18215  003722  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18216  003724  0ED0               	movlw	208
 18217  003726  2585               	addwf	??_atoi& (0+255),w,b
 18218  003728  6F88               	movwf	atoi@a& (0+255),b
 18219  00372A  0EFF               	movlw	255
 18220  00372C  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18221  00372E  6F89               	movwf	(atoi@a+1)& (0+255),b
 18222  003730                     l12826:
 18223                           
 18224                           ; BSR set to: 0
 18225  003730  4B83               	infsnz	atoi@s& (0+255),f,b
 18226  003732  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18227  003734                     l2813:
 18228                           
 18229                           ; BSR set to: 0
 18230                           
 18231                           ; BSR set to: 0
 18232  003734  C083  FFD9         	movff	atoi@s,fsr2l
 18233  003738  C084  FFDA         	movff	atoi@s+1,fsr2h
 18234  00373C  50DF               	movf	indf2,w,c
 18235  00373E  ECDD  F02F         	call	_isdigit
 18236  003742  B0D8               	btfsc	status,0,c
 18237  003744  D7D8               	goto	l2814
 18238  003746  0100               	movlb	0	; () banked
 18239  003748  5187               	movf	atoi@sign& (0+255),w,b
 18240  00374A  B4D8               	btfsc	status,2,c
 18241  00374C  D00D               	goto	l2816
 18242                           
 18243                           ; BSR set to: 0
 18244  00374E  C088  F085         	movff	atoi@a,??_atoi
 18245  003752  C089  F086         	movff	atoi@a+1,??_atoi+1
 18246  003756  1F85               	comf	??_atoi& (0+255),f,b
 18247  003758  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18248  00375A  4B85               	infsnz	??_atoi& (0+255),f,b
 18249  00375C  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18250  00375E  C085  F083         	movff	??_atoi,?_atoi
 18251  003762  C086  F084         	movff	??_atoi+1,?_atoi+1
 18252  003766  0012               	return	
 18253  003768                     l2816:
 18254                           
 18255                           ; BSR set to: 0
 18256  003768  C088  F083         	movff	atoi@a,?_atoi
 18257  00376C  C089  F084         	movff	atoi@a+1,?_atoi+1
 18258                           
 18259                           ; BSR set to: 0
 18260  003770  0012               	return		;funcret
 18261  003772                     __end_of_atoi:
 18262                           	opt stack 0
 18263                           tosu	equ	0xFFF
 18264                           tosh	equ	0xFFE
 18265                           tosl	equ	0xFFD
 18266                           pclath	equ	0xFFA
 18267                           tblptru	equ	0xFF8
 18268                           tblptrh	equ	0xFF7
 18269                           tblptrl	equ	0xFF6
 18270                           tablat	equ	0xFF5
 18271                           prodh	equ	0xFF4
 18272                           prodl	equ	0xFF3
 18273                           intcon	equ	0xFF2
 18274                           intcon2	equ	0xFF1
 18275                           intcon3	equ	0xFF0
 18276                           indf0	equ	0xFEF
 18277                           postinc0	equ	0xFEE
 18278                           plusw0	equ	0xFEB
 18279                           fsr0h	equ	0xFEA
 18280                           fsr0l	equ	0xFE9
 18281                           wreg	equ	0xFE8
 18282                           indf1	equ	0xFE7
 18283                           postinc1	equ	0xFE6
 18284                           postdec1	equ	0xFE5
 18285                           fsr1h	equ	0xFE2
 18286                           fsr1l	equ	0xFE1
 18287                           indf2	equ	0xFDF
 18288                           postinc2	equ	0xFDE
 18289                           postdec2	equ	0xFDD
 18290                           plusw2	equ	0xFDB
 18291                           fsr2h	equ	0xFDA
 18292                           fsr2l	equ	0xFD9
 18293                           status	equ	0xFD8
 18294                           
 18295 ;; *************** function _isdigit *****************
 18296 ;; Defined at:
 18297 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18298 ;; Parameters:    Size  Location     Type
 18299 ;;  c               1    wreg     unsigned char 
 18300 ;; Auto vars:     Size  Location     Type
 18301 ;;  c               1   31[BANK0 ] unsigned char 
 18302 ;; Return value:  Size  Location     Type
 18303 ;;		None               void
 18304 ;; Registers used:
 18305 ;;		wreg, status,2, status,0
 18306 ;; Tracked objects:
 18307 ;;		On entry : 0/0
 18308 ;;		On exit  : 0/0
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18314 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18315 ;;Total ram usage:        3 bytes
 18316 ;; Hardware stack levels used:    1
 18317 ;; Hardware stack levels required when called:   11
 18318 ;; This function calls:
 18319 ;;		Nothing
 18320 ;; This function is called by:
 18321 ;;		_atoi
 18322 ;;		_strtol
 18323 ;;		_xtoi
 18324 ;;		_isxdigit
 18325 ;; This function uses a non-reentrant model
 18326 ;;
 18327                           
 18328                           	psect	text77
 18329  005FBA                     __ptext77:
 18330                           	opt stack 0
 18331  005FBA                     _isdigit:
 18332                           	opt stack 12
 18333                           
 18334                           ; BSR set to: 0
 18335                           ;incstack = 0
 18336                           ;isdigit@c stored from wreg
 18337  005FBA  0100               	movlb	0	; () banked
 18338  005FBC  6F7F               	movwf	isdigit@c& (0+255),b
 18339  005FBE  0E00               	movlw	0
 18340  005FC0  0100               	movlb	0	; () banked
 18341  005FC2  6F7E               	movwf	_isdigit$6193& (0+255),b
 18342                           
 18343                           ; BSR set to: 0
 18344  005FC4  0E3A               	movlw	58
 18345  005FC6  617F               	cpfslt	isdigit@c& (0+255),b
 18346  005FC8  D005               	goto	l2988
 18347                           
 18348                           ; BSR set to: 0
 18349  005FCA  0E2F               	movlw	47
 18350  005FCC  657F               	cpfsgt	isdigit@c& (0+255),b
 18351  005FCE  D002               	goto	l2988
 18352                           
 18353                           ; BSR set to: 0
 18354  005FD0  0E01               	movlw	1
 18355  005FD2  6F7E               	movwf	_isdigit$6193& (0+255),b
 18356  005FD4                     l2988:
 18357                           
 18358                           ; BSR set to: 0
 18359                           
 18360                           ; BSR set to: 0
 18361  005FD4  C07E  F07D         	movff	_isdigit$6193,??_isdigit
 18362  005FD8  317D               	rrcf	??_isdigit& (0+255),w,b
 18363  005FDA  0012               	return	
 18364  005FDC                     __end_of_isdigit:
 18365                           	opt stack 0
 18366                           tosu	equ	0xFFF
 18367                           tosh	equ	0xFFE
 18368                           tosl	equ	0xFFD
 18369                           pclath	equ	0xFFA
 18370                           tblptru	equ	0xFF8
 18371                           tblptrh	equ	0xFF7
 18372                           tblptrl	equ	0xFF6
 18373                           tablat	equ	0xFF5
 18374                           prodh	equ	0xFF4
 18375                           prodl	equ	0xFF3
 18376                           intcon	equ	0xFF2
 18377                           intcon2	equ	0xFF1
 18378                           intcon3	equ	0xFF0
 18379                           indf0	equ	0xFEF
 18380                           postinc0	equ	0xFEE
 18381                           plusw0	equ	0xFEB
 18382                           fsr0h	equ	0xFEA
 18383                           fsr0l	equ	0xFE9
 18384                           wreg	equ	0xFE8
 18385                           indf1	equ	0xFE7
 18386                           postinc1	equ	0xFE6
 18387                           postdec1	equ	0xFE5
 18388                           fsr1h	equ	0xFE2
 18389                           fsr1l	equ	0xFE1
 18390                           indf2	equ	0xFDF
 18391                           postinc2	equ	0xFDE
 18392                           postdec2	equ	0xFDD
 18393                           plusw2	equ	0xFDB
 18394                           fsr2h	equ	0xFDA
 18395                           fsr2l	equ	0xFD9
 18396                           status	equ	0xFD8
 18397                           
 18398 ;; *************** function _Rtcm_SetRtccDate *****************
 18399 ;; Defined at:
 18400 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18403 ;; Auto vars:     Size  Location     Type
 18404 ;;		None
 18405 ;; Return value:  Size  Location     Type
 18406 ;;                  1    wreg      void 
 18407 ;; Registers used:
 18408 ;;		wreg, status,2, status,0, cstack
 18409 ;; Tracked objects:
 18410 ;;		On entry : 0/0
 18411 ;;		On exit  : 0/0
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18414 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18417 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18418 ;;Total ram usage:        8 bytes
 18419 ;; Hardware stack levels used:    1
 18420 ;; Hardware stack levels required when called:   13
 18421 ;; This function calls:
 18422 ;;		_Rtcc_LockRtc
 18423 ;;		_Rtcc_SetRtccValue
 18424 ;;		_Rtcc_UnlockRtc
 18425 ;; This function is called by:
 18426 ;;		_Rtcm_MainTask
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           	psect	text78
 18431  0053AC                     __ptext78:
 18432                           	opt stack 0
 18433  0053AC                     _Rtcm_SetRtccDate:
 18434                           	opt stack 14
 18435                           
 18436                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18437                           
 18438                           ; BSR set to: 0
 18439                           ;incstack = 0
 18440  0053AC  ECF4  F030         	call	_Rtcc_UnlockRtc	;wreg free
 18441                           
 18442                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18443  0053B0  0100               	movlb	0	; () banked
 18444  0053B2  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18445  0053B4  0F30               	addlw	48
 18446  0053B6  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18447  0053B8  0E00               	movlw	0
 18448  0053BA  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18449                           
 18450                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18451  0053BE  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18452  0053C2  0E01               	movlw	1
 18453  0053C4  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18454                           
 18455                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18456  0053C8  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18457  0053CC  0E02               	movlw	2
 18458  0053CE  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18459                           
 18460                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18461  0053D2  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18462  0053D6  0E03               	movlw	3
 18463  0053D8  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18464                           
 18465                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18466  0053DC  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18467  0053E0  0E04               	movlw	4
 18468  0053E2  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18469                           
 18470                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18471  0053E6  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18472  0053EA  0E05               	movlw	5
 18473  0053EC  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18474                           
 18475                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18476  0053F0  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18477  0053F4  0E06               	movlw	6
 18478  0053F6  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18479                           
 18480                           ;rtcm.c: 191: Rtcc_LockRtc();
 18481  0053FA  ECFC  F030         	call	_Rtcc_LockRtc	;wreg free
 18482  0053FE  0012               	return		;funcret
 18483  005400                     __end_of_Rtcm_SetRtccDate:
 18484                           	opt stack 0
 18485                           tosu	equ	0xFFF
 18486                           tosh	equ	0xFFE
 18487                           tosl	equ	0xFFD
 18488                           pclath	equ	0xFFA
 18489                           tblptru	equ	0xFF8
 18490                           tblptrh	equ	0xFF7
 18491                           tblptrl	equ	0xFF6
 18492                           tablat	equ	0xFF5
 18493                           prodh	equ	0xFF4
 18494                           prodl	equ	0xFF3
 18495                           intcon	equ	0xFF2
 18496                           intcon2	equ	0xFF1
 18497                           intcon3	equ	0xFF0
 18498                           indf0	equ	0xFEF
 18499                           postinc0	equ	0xFEE
 18500                           plusw0	equ	0xFEB
 18501                           fsr0h	equ	0xFEA
 18502                           fsr0l	equ	0xFE9
 18503                           wreg	equ	0xFE8
 18504                           indf1	equ	0xFE7
 18505                           postinc1	equ	0xFE6
 18506                           postdec1	equ	0xFE5
 18507                           fsr1h	equ	0xFE2
 18508                           fsr1l	equ	0xFE1
 18509                           indf2	equ	0xFDF
 18510                           postinc2	equ	0xFDE
 18511                           postdec2	equ	0xFDD
 18512                           plusw2	equ	0xFDB
 18513                           fsr2h	equ	0xFDA
 18514                           fsr2l	equ	0xFD9
 18515                           status	equ	0xFD8
 18516                           
 18517 ;; *************** function _Rtcc_UnlockRtc *****************
 18518 ;; Defined at:
 18519 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;		None
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;		None
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  1    wreg      void 
 18526 ;; Registers used:
 18527 ;;		None
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18537 ;;Total ram usage:        0 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:   11
 18540 ;; This function calls:
 18541 ;;		Nothing
 18542 ;; This function is called by:
 18543 ;;		_Rtcm_MainTask
 18544 ;;		_Rtcm_SetRtccDate
 18545 ;;		_Rtcm_SetRtccAlarm
 18546 ;; This function uses a non-reentrant model
 18547 ;;
 18548                           
 18549                           	psect	text79
 18550  0061E8                     __ptext79:
 18551                           	opt stack 0
 18552  0061E8                     _Rtcc_UnlockRtc:
 18553                           	opt stack 15
 18554                           
 18555                           ;incstack = 0
 18556  0061E8  010F               	movlb	15	;# 
 18557  0061EA  0E55               	movlw	85	;# 
 18558  0061EC  6EA7               	movwf	4007,c	;# 
 18559  0061EE  0EAA               	movlw	170	;# 
 18560  0061F0  6EA7               	movwf	4007,c	;# 
 18561                           
 18562                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18563  0061F2  010F               	movlb	15	; () banked
 18564  0061F4  8B3F               	bsf	63,5,b	;volatile
 18565                           
 18566                           ; BSR set to: 15
 18567  0061F6  0012               	return		;funcret
 18568  0061F8                     __end_of_Rtcc_UnlockRtc:
 18569                           	opt stack 0
 18570                           tosu	equ	0xFFF
 18571                           tosh	equ	0xFFE
 18572                           tosl	equ	0xFFD
 18573                           pclath	equ	0xFFA
 18574                           tblptru	equ	0xFF8
 18575                           tblptrh	equ	0xFF7
 18576                           tblptrl	equ	0xFF6
 18577                           tablat	equ	0xFF5
 18578                           prodh	equ	0xFF4
 18579                           prodl	equ	0xFF3
 18580                           intcon	equ	0xFF2
 18581                           intcon2	equ	0xFF1
 18582                           intcon3	equ	0xFF0
 18583                           indf0	equ	0xFEF
 18584                           postinc0	equ	0xFEE
 18585                           plusw0	equ	0xFEB
 18586                           fsr0h	equ	0xFEA
 18587                           fsr0l	equ	0xFE9
 18588                           wreg	equ	0xFE8
 18589                           indf1	equ	0xFE7
 18590                           postinc1	equ	0xFE6
 18591                           postdec1	equ	0xFE5
 18592                           fsr1h	equ	0xFE2
 18593                           fsr1l	equ	0xFE1
 18594                           indf2	equ	0xFDF
 18595                           postinc2	equ	0xFDE
 18596                           postdec2	equ	0xFDD
 18597                           plusw2	equ	0xFDB
 18598                           fsr2h	equ	0xFDA
 18599                           fsr2l	equ	0xFD9
 18600                           status	equ	0xFD8
 18601                           
 18602 ;; *************** function _Rtcc_SetRtccValue *****************
 18603 ;; Defined at:
 18604 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18605 ;; Parameters:    Size  Location     Type
 18606 ;;  RtccPtrVal      1    wreg     enum E7757
 18607 ;;  Value           1   37[BANK0 ] unsigned char 
 18608 ;; Auto vars:     Size  Location     Type
 18609 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18610 ;; Return value:  Size  Location     Type
 18611 ;;                  1    wreg      void 
 18612 ;; Registers used:
 18613 ;;		wreg, status,2, status,0, cstack
 18614 ;; Tracked objects:
 18615 ;;		On entry : 0/0
 18616 ;;		On exit  : 0/0
 18617 ;;		Unchanged: 0/0
 18618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18619 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18622 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18623 ;;Total ram usage:        4 bytes
 18624 ;; Hardware stack levels used:    1
 18625 ;; Hardware stack levels required when called:   12
 18626 ;; This function calls:
 18627 ;;		___awdiv
 18628 ;;		___awmod
 18629 ;; This function is called by:
 18630 ;;		_Rtcm_SetRtccDate
 18631 ;; This function uses a non-reentrant model
 18632 ;;
 18633                           
 18634                           	psect	text80
 18635  0015EE                     __ptext80:
 18636                           	opt stack 0
 18637  0015EE                     _Rtcc_SetRtccValue:
 18638                           	opt stack 14
 18639                           
 18640                           ; BSR set to: 15
 18641                           ;incstack = 0
 18642                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18643  0015EE  0100               	movlb	0	; () banked
 18644  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18645                           
 18646                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18647  0015F2  D0FC               	goto	l441
 18648  0015F4                     l442:
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18652  0015F4  010F               	movlb	15	; () banked
 18653  0015F6  833F               	bsf	63,1,b	;volatile
 18654                           
 18655                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18656  0015F8  813F               	bsf	63,0,b	;volatile
 18657                           
 18658                           ; BSR set to: 15
 18659                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18660  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18661  0015FE  0100               	movlb	0	; () banked
 18662  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18663  001602  0E00               	movlw	0
 18664  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18665  001606  0E0A               	movlw	10
 18666  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18667  00160A  ECC3  F026         	call	___awmod	;wreg free
 18668  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18669  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18670  001616  0E0F               	movlw	15
 18671  001618  0100               	movlb	0	; () banked
 18672  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18673  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18674  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18675  001622  0E00               	movlw	0
 18676  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18677  001626  0E0A               	movlw	10
 18678  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18679  00162A  ECFD  F025         	call	___awdiv	;wreg free
 18680  00162E  0100               	movlb	0	; () banked
 18681  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18682  001632  0BF0               	andlw	240
 18683  001634  0BF0               	andlw	240
 18684  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18685  001638  6E98               	movwf	3992,c	;volatile
 18686                           
 18687                           ;rtcc_drv.c: 393: break;
 18688  00163A  0012               	return	
 18689  00163C                     l444:
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18693  00163C  010F               	movlb	15	; () banked
 18694  00163E  833F               	bsf	63,1,b	;volatile
 18695                           
 18696                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18697  001640  913F               	bcf	63,0,b	;volatile
 18698                           
 18699                           ; BSR set to: 15
 18700                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18701  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18702  001646  0100               	movlb	0	; () banked
 18703  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18704  00164A  0E00               	movlw	0
 18705  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18706  00164E  0E0A               	movlw	10
 18707  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18708  001652  ECC3  F026         	call	___awmod	;wreg free
 18709  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18710  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18711  00165E  0E0F               	movlw	15
 18712  001660  0100               	movlb	0	; () banked
 18713  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18714  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18715  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18716  00166A  0E00               	movlw	0
 18717  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18718  00166E  0E0A               	movlw	10
 18719  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18720  001672  ECFD  F025         	call	___awdiv	;wreg free
 18721  001676  0100               	movlb	0	; () banked
 18722  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18723  00167A  0BF0               	andlw	240
 18724  00167C  0BF0               	andlw	240
 18725  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18726  001680  6E99               	movwf	3993,c	;volatile
 18727                           
 18728                           ;rtcc_drv.c: 401: break;
 18729  001682  0012               	return	
 18730  001684                     l445:
 18731                           
 18732                           ; BSR set to: 0
 18733                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18734  001684  010F               	movlb	15	; () banked
 18735  001686  833F               	bsf	63,1,b	;volatile
 18736                           
 18737                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18738  001688  913F               	bcf	63,0,b	;volatile
 18739                           
 18740                           ; BSR set to: 15
 18741                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18742  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18743  00168E  0100               	movlb	0	; () banked
 18744  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18745  001692  0E00               	movlw	0
 18746  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18747  001696  0E0A               	movlw	10
 18748  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18749  00169A  ECC3  F026         	call	___awmod	;wreg free
 18750  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18751  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18752  0016A6  0E0F               	movlw	15
 18753  0016A8  0100               	movlb	0	; () banked
 18754  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18755  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18756  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18757  0016B2  0E00               	movlw	0
 18758  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18759  0016B6  0E0A               	movlw	10
 18760  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18761  0016BA  ECFD  F025         	call	___awdiv	;wreg free
 18762  0016BE  0100               	movlb	0	; () banked
 18763  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18764  0016C2  0BF0               	andlw	240
 18765  0016C4  0BF0               	andlw	240
 18766  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18767  0016C8  6E98               	movwf	3992,c	;volatile
 18768                           
 18769                           ;rtcc_drv.c: 409: break;
 18770  0016CA  0012               	return	
 18771  0016CC                     l446:
 18772                           
 18773                           ; BSR set to: 0
 18774                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18775  0016CC  010F               	movlb	15	; () banked
 18776  0016CE  933F               	bcf	63,1,b	;volatile
 18777                           
 18778                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18779  0016D0  813F               	bsf	63,0,b	;volatile
 18780                           
 18781                           ; BSR set to: 15
 18782                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18783  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18784  0016D6  0100               	movlb	0	; () banked
 18785  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18786  0016DA  0E00               	movlw	0
 18787  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18788  0016DE  0E0A               	movlw	10
 18789  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18790  0016E2  ECC3  F026         	call	___awmod	;wreg free
 18791  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18792  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18793  0016EE  0E0F               	movlw	15
 18794  0016F0  0100               	movlb	0	; () banked
 18795  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18796  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18797  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18798  0016FA  0E00               	movlw	0
 18799  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18800  0016FE  0E0A               	movlw	10
 18801  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18802  001702  ECFD  F025         	call	___awdiv	;wreg free
 18803  001706  0100               	movlb	0	; () banked
 18804  001708  397D               	swapf	?___awdiv& (0+255),w,b
 18805  00170A  0BF0               	andlw	240
 18806  00170C  0BF0               	andlw	240
 18807  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18808  001710  6E99               	movwf	3993,c	;volatile
 18809                           
 18810                           ;rtcc_drv.c: 417: break;
 18811  001712  0012               	return	
 18812  001714                     l447:
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 18816  001714  010F               	movlb	15	; () banked
 18817  001716  933F               	bcf	63,1,b	;volatile
 18818                           
 18819                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 18820  001718  813F               	bsf	63,0,b	;volatile
 18821                           
 18822                           ; BSR set to: 15
 18823                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18824  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18825  00171E  0100               	movlb	0	; () banked
 18826  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18827  001722  0E00               	movlw	0
 18828  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18829  001726  0E0A               	movlw	10
 18830  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 18831  00172A  ECC3  F026         	call	___awmod	;wreg free
 18832  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18833  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18834  001736  0E0F               	movlw	15
 18835  001738  0100               	movlb	0	; () banked
 18836  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18837  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18838  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18839  001742  0E00               	movlw	0
 18840  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18841  001746  0E0A               	movlw	10
 18842  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18843  00174A  ECFD  F025         	call	___awdiv	;wreg free
 18844  00174E  0100               	movlb	0	; () banked
 18845  001750  397D               	swapf	?___awdiv& (0+255),w,b
 18846  001752  0BF0               	andlw	240
 18847  001754  0BF0               	andlw	240
 18848  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18849  001758  6E98               	movwf	3992,c	;volatile
 18850                           
 18851                           ;rtcc_drv.c: 425: break;
 18852  00175A  0012               	return	
 18853  00175C                     l448:
 18854                           
 18855                           ; BSR set to: 0
 18856                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 18857  00175C  010F               	movlb	15	; () banked
 18858  00175E  933F               	bcf	63,1,b	;volatile
 18859                           
 18860                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 18861  001760  913F               	bcf	63,0,b	;volatile
 18862                           
 18863                           ; BSR set to: 15
 18864                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18865  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18866  001766  0100               	movlb	0	; () banked
 18867  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18868  00176A  0E00               	movlw	0
 18869  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18870  00176E  0E0A               	movlw	10
 18871  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 18872  001772  ECC3  F026         	call	___awmod	;wreg free
 18873  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18874  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18875  00177E  0E0F               	movlw	15
 18876  001780  0100               	movlb	0	; () banked
 18877  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18878  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18879  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18880  00178A  0E00               	movlw	0
 18881  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18882  00178E  0E0A               	movlw	10
 18883  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18884  001792  ECFD  F025         	call	___awdiv	;wreg free
 18885  001796  0100               	movlb	0	; () banked
 18886  001798  397D               	swapf	?___awdiv& (0+255),w,b
 18887  00179A  0BF0               	andlw	240
 18888  00179C  0BF0               	andlw	240
 18889  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18890  0017A0  6E99               	movwf	3993,c	;volatile
 18891                           
 18892                           ;rtcc_drv.c: 433: break;
 18893  0017A2  0012               	return	
 18894  0017A4                     l449:
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18898  0017A4  010F               	movlb	15	; () banked
 18899  0017A6  933F               	bcf	63,1,b	;volatile
 18900                           
 18901                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18902  0017A8  913F               	bcf	63,0,b	;volatile
 18903                           
 18904                           ; BSR set to: 15
 18905                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18906  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18907  0017AE  0100               	movlb	0	; () banked
 18908  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18909  0017B2  0E00               	movlw	0
 18910  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18911  0017B6  0E0A               	movlw	10
 18912  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 18913  0017BA  ECC3  F026         	call	___awmod	;wreg free
 18914  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18915  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18916  0017C6  0E0F               	movlw	15
 18917  0017C8  0100               	movlb	0	; () banked
 18918  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18919  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18920  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18921  0017D2  0E00               	movlw	0
 18922  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18923  0017D6  0E0A               	movlw	10
 18924  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18925  0017DA  ECFD  F025         	call	___awdiv	;wreg free
 18926  0017DE  0100               	movlb	0	; () banked
 18927  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 18928  0017E2  0BF0               	andlw	240
 18929  0017E4  0BF0               	andlw	240
 18930  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18931  0017E8  6E98               	movwf	3992,c	;volatile
 18932                           
 18933                           ; BSR set to: 0
 18934                           ;rtcc_drv.c: 445: }
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;rtcc_drv.c: 444: break;
 18938                           
 18939                           ;rtcc_drv.c: 443: default:
 18940                           
 18941                           ;rtcc_drv.c: 441: break;
 18942  0017EA  0012               	return	
 18943  0017EC                     l441:
 18944                           
 18945                           ; BSR set to: 0
 18946  0017EC  0100               	movlb	0	; () banked
 18947  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 18948                           
 18949                           ; Switch size 1, requested type "space"
 18950                           ; Number of cases is 7, Range of values is 0 to 6
 18951                           ; switch strategies available:
 18952                           ; Name         Instructions Cycles
 18953                           ; simple_byte           22    12 (average)
 18954                           ;	Chosen strategy is simple_byte
 18955  0017F0  0A00               	xorlw	0	; case 0
 18956  0017F2  B4D8               	btfsc	status,2,c
 18957  0017F4  D6FF               	goto	l442
 18958  0017F6  0A01               	xorlw	1	; case 1
 18959  0017F8  B4D8               	btfsc	status,2,c
 18960  0017FA  D720               	goto	l444
 18961  0017FC  0A03               	xorlw	3	; case 2
 18962  0017FE  B4D8               	btfsc	status,2,c
 18963  001800  D741               	goto	l445
 18964  001802  0A01               	xorlw	1	; case 3
 18965  001804  B4D8               	btfsc	status,2,c
 18966  001806  D762               	goto	l446
 18967  001808  0A07               	xorlw	7	; case 4
 18968  00180A  B4D8               	btfsc	status,2,c
 18969  00180C  D783               	goto	l447
 18970  00180E  0A01               	xorlw	1	; case 5
 18971  001810  B4D8               	btfsc	status,2,c
 18972  001812  D7A4               	goto	l448
 18973  001814  0A03               	xorlw	3	; case 6
 18974  001816  A4D8               	btfss	status,2,c
 18975  001818  0012               	return	
 18976  00181A  D7C4               	goto	l449
 18977  00181C                     __end_of_Rtcc_SetRtccValue:
 18978                           	opt stack 0
 18979                           tosu	equ	0xFFF
 18980                           tosh	equ	0xFFE
 18981                           tosl	equ	0xFFD
 18982                           pclath	equ	0xFFA
 18983                           tblptru	equ	0xFF8
 18984                           tblptrh	equ	0xFF7
 18985                           tblptrl	equ	0xFF6
 18986                           tablat	equ	0xFF5
 18987                           prodh	equ	0xFF4
 18988                           prodl	equ	0xFF3
 18989                           intcon	equ	0xFF2
 18990                           intcon2	equ	0xFF1
 18991                           intcon3	equ	0xFF0
 18992                           indf0	equ	0xFEF
 18993                           postinc0	equ	0xFEE
 18994                           plusw0	equ	0xFEB
 18995                           fsr0h	equ	0xFEA
 18996                           fsr0l	equ	0xFE9
 18997                           wreg	equ	0xFE8
 18998                           indf1	equ	0xFE7
 18999                           postinc1	equ	0xFE6
 19000                           postdec1	equ	0xFE5
 19001                           fsr1h	equ	0xFE2
 19002                           fsr1l	equ	0xFE1
 19003                           indf2	equ	0xFDF
 19004                           postinc2	equ	0xFDE
 19005                           postdec2	equ	0xFDD
 19006                           plusw2	equ	0xFDB
 19007                           fsr2h	equ	0xFDA
 19008                           fsr2l	equ	0xFD9
 19009                           status	equ	0xFD8
 19010                           
 19011 ;; *************** function ___awmod *****************
 19012 ;; Defined at:
 19013 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19014 ;; Parameters:    Size  Location     Type
 19015 ;;  dividend        2   29[BANK0 ] int 
 19016 ;;  divisor         2   31[BANK0 ] int 
 19017 ;; Auto vars:     Size  Location     Type
 19018 ;;  sign            1   34[BANK0 ] unsigned char 
 19019 ;;  counter         1   33[BANK0 ] unsigned char 
 19020 ;; Return value:  Size  Location     Type
 19021 ;;                  2   29[BANK0 ] int 
 19022 ;; Registers used:
 19023 ;;		wreg, status,2, status,0
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19032 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19033 ;;Total ram usage:        6 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; Hardware stack levels required when called:   11
 19036 ;; This function calls:
 19037 ;;		Nothing
 19038 ;; This function is called by:
 19039 ;;		_Rtcc_SetRtccValue
 19040 ;;		_Rtcc_SetRtccAlarm
 19041 ;; This function uses a non-reentrant model
 19042 ;;
 19043                           
 19044                           	psect	text81
 19045  004D86                     __ptext81:
 19046                           	opt stack 0
 19047  004D86                     ___awmod:
 19048                           	opt stack 14
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;incstack = 0
 19052  004D86  0E00               	movlw	0
 19053  004D88  0100               	movlb	0	; () banked
 19054  004D8A  6F82               	movwf	___awmod@sign& (0+255),b
 19055                           
 19056                           ; BSR set to: 0
 19057  004D8C  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19058  004D8E  D006               	goto	l2839
 19059                           
 19060                           ; BSR set to: 0
 19061  004D90  6D7D               	negf	___awmod@dividend& (0+255),b
 19062  004D92  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19063  004D94  B0D8               	btfsc	status,0,c
 19064  004D96  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19065                           
 19066                           ; BSR set to: 0
 19067  004D98  0E01               	movlw	1
 19068  004D9A  6F82               	movwf	___awmod@sign& (0+255),b
 19069  004D9C                     l2839:
 19070                           
 19071                           ; BSR set to: 0
 19072                           
 19073                           ; BSR set to: 0
 19074  004D9C  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19075  004D9E  D004               	goto	l2840
 19076                           
 19077                           ; BSR set to: 0
 19078  004DA0  6D7F               	negf	___awmod@divisor& (0+255),b
 19079  004DA2  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19080  004DA4  B0D8               	btfsc	status,0,c
 19081  004DA6  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19082  004DA8                     l2840:
 19083                           
 19084                           ; BSR set to: 0
 19085                           
 19086                           ; BSR set to: 0
 19087  004DA8  517F               	movf	___awmod@divisor& (0+255),w,b
 19088  004DAA  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19089  004DAC  B4D8               	btfsc	status,2,c
 19090  004DAE  D018               	goto	l2847
 19091                           
 19092                           ; BSR set to: 0
 19093  004DB0  0E01               	movlw	1
 19094  004DB2  6F81               	movwf	___awmod@counter& (0+255),b
 19095  004DB4  D004               	goto	l2842
 19096  004DB6                     
 19097                           ; BSR set to: 0
 19098                           
 19099                           ; BSR set to: 0
 19100  004DB6  90D8               	bcf	status,0,c
 19101  004DB8  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19102  004DBA  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19103  004DBC  2B81               	incf	___awmod@counter& (0+255),f,b
 19104  004DBE                     l2842:
 19105                           
 19106                           ; BSR set to: 0
 19107                           
 19108                           ; BSR set to: 0
 19109  004DBE  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19110  004DC0  D7FA               	goto	l2843
 19111  004DC2                     u12130:
 19112                           
 19113                           ; BSR set to: 0
 19114                           
 19115                           ; BSR set to: 0
 19116                           
 19117                           ; BSR set to: 0
 19118  004DC2  517F               	movf	___awmod@divisor& (0+255),w,b
 19119  004DC4  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19120  004DC6  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19121  004DC8  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19122  004DCA  A0D8               	btfss	status,0,c
 19123  004DCC  D004               	goto	l2846
 19124                           
 19125                           ; BSR set to: 0
 19126  004DCE  517F               	movf	___awmod@divisor& (0+255),w,b
 19127  004DD0  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19128  004DD2  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19129  004DD4  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19130  004DD6                     l2846:
 19131                           
 19132                           ; BSR set to: 0
 19133                           
 19134                           ; BSR set to: 0
 19135  004DD6  90D8               	bcf	status,0,c
 19136  004DD8  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19137  004DDA  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19138                           
 19139                           ; BSR set to: 0
 19140  004DDC  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19141  004DDE  D7F1               	goto	u12130
 19142  004DE0                     l2847:
 19143                           
 19144                           ; BSR set to: 0
 19145                           
 19146                           ; BSR set to: 0
 19147                           
 19148                           ; BSR set to: 0
 19149  004DE0  5182               	movf	___awmod@sign& (0+255),w,b
 19150  004DE2  B4D8               	btfsc	status,2,c
 19151  004DE4  D004               	goto	l2848
 19152                           
 19153                           ; BSR set to: 0
 19154  004DE6  6D7D               	negf	___awmod@dividend& (0+255),b
 19155  004DE8  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19156  004DEA  B0D8               	btfsc	status,0,c
 19157  004DEC  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19158  004DEE                     l2848:
 19159                           
 19160                           ; BSR set to: 0
 19161                           
 19162                           ; BSR set to: 0
 19163  004DEE  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19164  004DF2  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19165  004DF6  0012               	return	
 19166  004DF8                     __end_of___awmod:
 19167                           	opt stack 0
 19168                           tosu	equ	0xFFF
 19169                           tosh	equ	0xFFE
 19170                           tosl	equ	0xFFD
 19171                           pclath	equ	0xFFA
 19172                           tblptru	equ	0xFF8
 19173                           tblptrh	equ	0xFF7
 19174                           tblptrl	equ	0xFF6
 19175                           tablat	equ	0xFF5
 19176                           prodh	equ	0xFF4
 19177                           prodl	equ	0xFF3
 19178                           intcon	equ	0xFF2
 19179                           intcon2	equ	0xFF1
 19180                           intcon3	equ	0xFF0
 19181                           indf0	equ	0xFEF
 19182                           postinc0	equ	0xFEE
 19183                           plusw0	equ	0xFEB
 19184                           fsr0h	equ	0xFEA
 19185                           fsr0l	equ	0xFE9
 19186                           wreg	equ	0xFE8
 19187                           indf1	equ	0xFE7
 19188                           postinc1	equ	0xFE6
 19189                           postdec1	equ	0xFE5
 19190                           fsr1h	equ	0xFE2
 19191                           fsr1l	equ	0xFE1
 19192                           indf2	equ	0xFDF
 19193                           postinc2	equ	0xFDE
 19194                           postdec2	equ	0xFDD
 19195                           plusw2	equ	0xFDB
 19196                           fsr2h	equ	0xFDA
 19197                           fsr2l	equ	0xFD9
 19198                           status	equ	0xFD8
 19199                           
 19200 ;; *************** function ___awdiv *****************
 19201 ;; Defined at:
 19202 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;  dividend        2   29[BANK0 ] int 
 19205 ;;  divisor         2   31[BANK0 ] int 
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;  quotient        2   35[BANK0 ] int 
 19208 ;;  sign            1   34[BANK0 ] unsigned char 
 19209 ;;  counter         1   33[BANK0 ] unsigned char 
 19210 ;; Return value:  Size  Location     Type
 19211 ;;                  2   29[BANK0 ] int 
 19212 ;; Registers used:
 19213 ;;		wreg, status,2, status,0
 19214 ;; Tracked objects:
 19215 ;;		On entry : 0/0
 19216 ;;		On exit  : 0/0
 19217 ;;		Unchanged: 0/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;Total ram usage:        8 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; Hardware stack levels required when called:   11
 19226 ;; This function calls:
 19227 ;;		Nothing
 19228 ;; This function is called by:
 19229 ;;		_Rtcc_SetRtccValue
 19230 ;;		_Rtcc_SetRtccAlarm
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           	psect	text82
 19235  004BFA                     __ptext82:
 19236                           	opt stack 0
 19237  004BFA                     ___awdiv:
 19238                           	opt stack 14
 19239                           
 19240                           ; BSR set to: 0
 19241                           ;incstack = 0
 19242  004BFA  0E00               	movlw	0
 19243  004BFC  0100               	movlb	0	; () banked
 19244  004BFE  6F82               	movwf	___awdiv@sign& (0+255),b
 19245                           
 19246                           ; BSR set to: 0
 19247  004C00  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19248  004C02  D006               	goto	l2826
 19249                           
 19250                           ; BSR set to: 0
 19251  004C04  6D7F               	negf	___awdiv@divisor& (0+255),b
 19252  004C06  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19253  004C08  B0D8               	btfsc	status,0,c
 19254  004C0A  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19255                           
 19256                           ; BSR set to: 0
 19257  004C0C  0E01               	movlw	1
 19258  004C0E  6F82               	movwf	___awdiv@sign& (0+255),b
 19259  004C10                     l2826:
 19260                           
 19261                           ; BSR set to: 0
 19262                           
 19263                           ; BSR set to: 0
 19264  004C10  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19265  004C12  D006               	goto	l2827
 19266                           
 19267                           ; BSR set to: 0
 19268  004C14  6D7D               	negf	___awdiv@dividend& (0+255),b
 19269  004C16  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19270  004C18  B0D8               	btfsc	status,0,c
 19271  004C1A  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19272                           
 19273                           ; BSR set to: 0
 19274  004C1C  0E01               	movlw	1
 19275  004C1E  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19276  004C20                     l2827:
 19277                           
 19278                           ; BSR set to: 0
 19279                           
 19280                           ; BSR set to: 0
 19281  004C20  0E00               	movlw	0
 19282  004C22  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19283  004C24  0E00               	movlw	0
 19284  004C26  6F83               	movwf	___awdiv@quotient& (0+255),b
 19285                           
 19286                           ; BSR set to: 0
 19287  004C28  517F               	movf	___awdiv@divisor& (0+255),w,b
 19288  004C2A  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19289  004C2C  B4D8               	btfsc	status,2,c
 19290  004C2E  D01C               	goto	l2834
 19291                           
 19292                           ; BSR set to: 0
 19293  004C30  0E01               	movlw	1
 19294  004C32  6F81               	movwf	___awdiv@counter& (0+255),b
 19295  004C34  D004               	goto	l2829
 19296  004C36                     
 19297                           ; BSR set to: 0
 19298                           
 19299                           ; BSR set to: 0
 19300  004C36  90D8               	bcf	status,0,c
 19301  004C38  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19302  004C3A  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19303  004C3C  2B81               	incf	___awdiv@counter& (0+255),f,b
 19304  004C3E                     l2829:
 19305                           
 19306                           ; BSR set to: 0
 19307                           
 19308                           ; BSR set to: 0
 19309  004C3E  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19310  004C40  D7FA               	goto	l2830
 19311  004C42                     u12070:
 19312                           
 19313                           ; BSR set to: 0
 19314                           
 19315                           ; BSR set to: 0
 19316                           
 19317                           ; BSR set to: 0
 19318  004C42  90D8               	bcf	status,0,c
 19319  004C44  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19320  004C46  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19321                           
 19322                           ; BSR set to: 0
 19323  004C48  517F               	movf	___awdiv@divisor& (0+255),w,b
 19324  004C4A  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19325  004C4C  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19326  004C4E  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19327  004C50  A0D8               	btfss	status,0,c
 19328  004C52  D005               	goto	l2833
 19329                           
 19330                           ; BSR set to: 0
 19331  004C54  517F               	movf	___awdiv@divisor& (0+255),w,b
 19332  004C56  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19333  004C58  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19334  004C5A  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19335                           
 19336                           ; BSR set to: 0
 19337  004C5C  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19338  004C5E                     l2833:
 19339                           
 19340                           ; BSR set to: 0
 19341                           
 19342                           ; BSR set to: 0
 19343  004C5E  90D8               	bcf	status,0,c
 19344  004C60  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19345  004C62  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19346                           
 19347                           ; BSR set to: 0
 19348  004C64  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19349  004C66  D7ED               	goto	u12070
 19350  004C68                     l2834:
 19351                           
 19352                           ; BSR set to: 0
 19353                           
 19354                           ; BSR set to: 0
 19355                           
 19356                           ; BSR set to: 0
 19357  004C68  5182               	movf	___awdiv@sign& (0+255),w,b
 19358  004C6A  B4D8               	btfsc	status,2,c
 19359  004C6C  D004               	goto	l2835
 19360                           
 19361                           ; BSR set to: 0
 19362  004C6E  6D83               	negf	___awdiv@quotient& (0+255),b
 19363  004C70  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19364  004C72  B0D8               	btfsc	status,0,c
 19365  004C74  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19366  004C76                     l2835:
 19367                           
 19368                           ; BSR set to: 0
 19369                           
 19370                           ; BSR set to: 0
 19371  004C76  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19372  004C7A  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19373  004C7E  0012               	return	
 19374  004C80                     __end_of___awdiv:
 19375                           	opt stack 0
 19376                           tosu	equ	0xFFF
 19377                           tosh	equ	0xFFE
 19378                           tosl	equ	0xFFD
 19379                           pclath	equ	0xFFA
 19380                           tblptru	equ	0xFF8
 19381                           tblptrh	equ	0xFF7
 19382                           tblptrl	equ	0xFF6
 19383                           tablat	equ	0xFF5
 19384                           prodh	equ	0xFF4
 19385                           prodl	equ	0xFF3
 19386                           intcon	equ	0xFF2
 19387                           intcon2	equ	0xFF1
 19388                           intcon3	equ	0xFF0
 19389                           indf0	equ	0xFEF
 19390                           postinc0	equ	0xFEE
 19391                           plusw0	equ	0xFEB
 19392                           fsr0h	equ	0xFEA
 19393                           fsr0l	equ	0xFE9
 19394                           wreg	equ	0xFE8
 19395                           indf1	equ	0xFE7
 19396                           postinc1	equ	0xFE6
 19397                           postdec1	equ	0xFE5
 19398                           fsr1h	equ	0xFE2
 19399                           fsr1l	equ	0xFE1
 19400                           indf2	equ	0xFDF
 19401                           postinc2	equ	0xFDE
 19402                           postdec2	equ	0xFDD
 19403                           plusw2	equ	0xFDB
 19404                           fsr2h	equ	0xFDA
 19405                           fsr2l	equ	0xFD9
 19406                           status	equ	0xFD8
 19407                           
 19408 ;; *************** function _Rtcc_LockRtc *****************
 19409 ;; Defined at:
 19410 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19411 ;; Parameters:    Size  Location     Type
 19412 ;;		None
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;		None
 19415 ;; Return value:  Size  Location     Type
 19416 ;;                  1    wreg      void 
 19417 ;; Registers used:
 19418 ;;		None
 19419 ;; Tracked objects:
 19420 ;;		On entry : 0/0
 19421 ;;		On exit  : 0/0
 19422 ;;		Unchanged: 0/0
 19423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19428 ;;Total ram usage:        0 bytes
 19429 ;; Hardware stack levels used:    1
 19430 ;; Hardware stack levels required when called:   11
 19431 ;; This function calls:
 19432 ;;		Nothing
 19433 ;; This function is called by:
 19434 ;;		_Rtcm_MainTask
 19435 ;;		_Rtcm_SetRtccDate
 19436 ;;		_Rtcm_SetRtccAlarm
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           	psect	text83
 19441  0061F8                     __ptext83:
 19442                           	opt stack 0
 19443  0061F8                     _Rtcc_LockRtc:
 19444                           	opt stack 15
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;incstack = 0
 19448  0061F8  010F               	movlb	15	;# 
 19449  0061FA  0E55               	movlw	85	;# 
 19450  0061FC  6EA7               	movwf	4007,c	;# 
 19451  0061FE  0EAA               	movlw	170	;# 
 19452  006200  6EA7               	movwf	4007,c	;# 
 19453                           
 19454                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19455  006202  010F               	movlb	15	; () banked
 19456  006204  9B3F               	bcf	63,5,b	;volatile
 19457                           
 19458                           ; BSR set to: 15
 19459  006206  0012               	return		;funcret
 19460  006208                     __end_of_Rtcc_LockRtc:
 19461                           	opt stack 0
 19462                           tosu	equ	0xFFF
 19463                           tosh	equ	0xFFE
 19464                           tosl	equ	0xFFD
 19465                           pclath	equ	0xFFA
 19466                           tblptru	equ	0xFF8
 19467                           tblptrh	equ	0xFF7
 19468                           tblptrl	equ	0xFF6
 19469                           tablat	equ	0xFF5
 19470                           prodh	equ	0xFF4
 19471                           prodl	equ	0xFF3
 19472                           intcon	equ	0xFF2
 19473                           intcon2	equ	0xFF1
 19474                           intcon3	equ	0xFF0
 19475                           indf0	equ	0xFEF
 19476                           postinc0	equ	0xFEE
 19477                           plusw0	equ	0xFEB
 19478                           fsr0h	equ	0xFEA
 19479                           fsr0l	equ	0xFE9
 19480                           wreg	equ	0xFE8
 19481                           indf1	equ	0xFE7
 19482                           postinc1	equ	0xFE6
 19483                           postdec1	equ	0xFE5
 19484                           fsr1h	equ	0xFE2
 19485                           fsr1l	equ	0xFE1
 19486                           indf2	equ	0xFDF
 19487                           postinc2	equ	0xFDE
 19488                           postdec2	equ	0xFDD
 19489                           plusw2	equ	0xFDB
 19490                           fsr2h	equ	0xFDA
 19491                           fsr2l	equ	0xFD9
 19492                           status	equ	0xFD8
 19493                           
 19494 ;; *************** function _Rtcm_GetRtccDate *****************
 19495 ;; Defined at:
 19496 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19497 ;; Parameters:    Size  Location     Type
 19498 ;;		None
 19499 ;; Auto vars:     Size  Location     Type
 19500 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19501 ;; Return value:  Size  Location     Type
 19502 ;;                  8   33[BANK0 ] struct _RtccDateType
 19503 ;; Registers used:
 19504 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19505 ;; Tracked objects:
 19506 ;;		On entry : 0/0
 19507 ;;		On exit  : 0/0
 19508 ;;		Unchanged: 0/0
 19509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19510 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19511 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19512 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19513 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19514 ;;Total ram usage:       17 bytes
 19515 ;; Hardware stack levels used:    1
 19516 ;; Hardware stack levels required when called:   12
 19517 ;; This function calls:
 19518 ;;		_Rtcc_GetRtccValue
 19519 ;; This function is called by:
 19520 ;;		_Rtcm_MainTask
 19521 ;; This function uses a non-reentrant model
 19522 ;;
 19523                           
 19524                           	psect	text84
 19525  005018                     __ptext84:
 19526                           	opt stack 0
 19527  005018                     _Rtcm_GetRtccDate:
 19528                           	opt stack 15
 19529                           
 19530                           ;rtcm.c: 204: RtccDateType LocalDate;
 19531                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;incstack = 0
 19535  005018  0E00               	movlw	0
 19536  00501A  ECDE  F024         	call	_Rtcc_GetRtccValue
 19537  00501E  0100               	movlb	0	; () banked
 19538  005020  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19539  005022  0ED0               	movlw	208
 19540  005024  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19541  005026  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19542  005028  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19543  00502A  0E07               	movlw	7
 19544  00502C  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19545                           
 19546                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19547  00502E  0E01               	movlw	1
 19548  005030  ECDE  F024         	call	_Rtcc_GetRtccValue
 19549  005034  0100               	movlb	0	; () banked
 19550  005036  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19551                           
 19552                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19553  005038  0E02               	movlw	2
 19554  00503A  ECDE  F024         	call	_Rtcc_GetRtccValue
 19555  00503E  0100               	movlb	0	; () banked
 19556  005040  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19557                           
 19558                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19559  005042  0E03               	movlw	3
 19560  005044  ECDE  F024         	call	_Rtcc_GetRtccValue
 19561  005048  0100               	movlb	0	; () banked
 19562  00504A  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19563                           
 19564                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19565  00504C  0E04               	movlw	4
 19566  00504E  ECDE  F024         	call	_Rtcc_GetRtccValue
 19567  005052  0100               	movlb	0	; () banked
 19568  005054  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19569                           
 19570                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19571  005056  0E05               	movlw	5
 19572  005058  ECDE  F024         	call	_Rtcc_GetRtccValue
 19573  00505C  0100               	movlb	0	; () banked
 19574  00505E  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19575                           
 19576                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19577  005060  0E06               	movlw	6
 19578  005062  ECDE  F024         	call	_Rtcc_GetRtccValue
 19579  005066  0100               	movlb	0	; () banked
 19580  005068  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;rtcm.c: 216: return LocalDate;
 19584  00506A  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19585  00506E  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19586  005072  0E07               	movlw	7
 19587  005074                     u14371:
 19588  005074  CFDB FFEB          	movff	plusw2,plusw0
 19589  005078  06E8               	decf	wreg,f,c
 19590  00507A  E2FC               	bc	u14371
 19591  00507C  0012               	return	
 19592  00507E                     __end_of_Rtcm_GetRtccDate:
 19593                           	opt stack 0
 19594                           tosu	equ	0xFFF
 19595                           tosh	equ	0xFFE
 19596                           tosl	equ	0xFFD
 19597                           pclath	equ	0xFFA
 19598                           tblptru	equ	0xFF8
 19599                           tblptrh	equ	0xFF7
 19600                           tblptrl	equ	0xFF6
 19601                           tablat	equ	0xFF5
 19602                           prodh	equ	0xFF4
 19603                           prodl	equ	0xFF3
 19604                           intcon	equ	0xFF2
 19605                           intcon2	equ	0xFF1
 19606                           intcon3	equ	0xFF0
 19607                           indf0	equ	0xFEF
 19608                           postinc0	equ	0xFEE
 19609                           plusw0	equ	0xFEB
 19610                           fsr0h	equ	0xFEA
 19611                           fsr0l	equ	0xFE9
 19612                           wreg	equ	0xFE8
 19613                           indf1	equ	0xFE7
 19614                           postinc1	equ	0xFE6
 19615                           postdec1	equ	0xFE5
 19616                           fsr1h	equ	0xFE2
 19617                           fsr1l	equ	0xFE1
 19618                           indf2	equ	0xFDF
 19619                           postinc2	equ	0xFDE
 19620                           postdec2	equ	0xFDD
 19621                           plusw2	equ	0xFDB
 19622                           fsr2h	equ	0xFDA
 19623                           fsr2l	equ	0xFD9
 19624                           status	equ	0xFD8
 19625                           
 19626 ;; *************** function _Rtcc_GetRtccValue *****************
 19627 ;; Defined at:
 19628 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19629 ;; Parameters:    Size  Location     Type
 19630 ;;  RtccPtrVal      1    wreg     enum E7757
 19631 ;; Auto vars:     Size  Location     Type
 19632 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19633 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19634 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19635 ;; Return value:  Size  Location     Type
 19636 ;;                  1    wreg      unsigned char 
 19637 ;; Registers used:
 19638 ;;		wreg, status,2, status,0, prodl, prodh
 19639 ;; Tracked objects:
 19640 ;;		On entry : 0/0
 19641 ;;		On exit  : 0/0
 19642 ;;		Unchanged: 0/0
 19643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19648 ;;Total ram usage:        4 bytes
 19649 ;; Hardware stack levels used:    1
 19650 ;; Hardware stack levels required when called:   11
 19651 ;; This function calls:
 19652 ;;		Nothing
 19653 ;; This function is called by:
 19654 ;;		_Rtcm_GetRtccDate
 19655 ;; This function uses a non-reentrant model
 19656 ;;
 19657                           
 19658                           	psect	text85
 19659  0049BC                     __ptext85:
 19660                           	opt stack 0
 19661  0049BC                     _Rtcc_GetRtccValue:
 19662                           	opt stack 15
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;incstack = 0
 19666                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19667  0049BC  0100               	movlb	0	; () banked
 19668  0049BE  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19669                           
 19670                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19671                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19672                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19673  0049C0  D02D               	goto	l416
 19674  0049C2                     l417:
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19678  0049C2  010F               	movlb	15	; () banked
 19679  0049C4  833F               	bsf	63,1,b	;volatile
 19680  0049C6                     
 19681                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19682  0049C6  813F               	bsf	63,0,b	;volatile
 19683  0049C8  D01C               	goto	L18
 19684  0049CA                     l419:
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19688  0049CA  010F               	movlb	15	; () banked
 19689  0049CC  833F               	bsf	63,1,b	;volatile
 19690  0049CE  D01E               	goto	L19
 19691  0049D0                     l420:
 19692                           
 19693                           ; BSR set to: 0
 19694                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19695  0049D0  010F               	movlb	15	; () banked
 19696  0049D2  833F               	bsf	63,1,b	;volatile
 19697  0049D4  D021               	goto	L22
 19698  0049D6                     l13192:
 19699                           
 19700                           ; BSR set to: 15
 19701                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19702  0049D6  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19703  0049DA  0E0F               	movlw	15
 19704  0049DC  0100               	movlb	0	; () banked
 19705  0049DE  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19706  0049E0  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19707  0049E2  0B0F               	andlw	15
 19708  0049E4  0B0F               	andlw	15
 19709  0049E6  0D0A               	mullw	10
 19710  0049E8  50F3               	movf	prodl,w,c
 19711  0049EA  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19712  0049EC  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19713                           
 19714                           ;rtcc_drv.c: 241: break;
 19715  0049EE  D02D               	goto	l418
 19716  0049F0                     l421:
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19720  0049F0  010F               	movlb	15	; () banked
 19721  0049F2  933F               	bcf	63,1,b	;volatile
 19722                           
 19723                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19724  0049F4  813F               	bsf	63,0,b	;volatile
 19725                           
 19726                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19727  0049F6  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19728                           
 19729                           ;rtcc_drv.c: 249: break;
 19730  0049FA  D027               	goto	l418
 19731  0049FC                     l422:
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19735  0049FC  010F               	movlb	15	; () banked
 19736  0049FE  933F               	bcf	63,1,b	;volatile
 19737  004A00  D7E2               	goto	L20
 19738  004A02                     L18:
 19739                           
 19740                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19741  004A02  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19742  004A06  D7E7               	goto	l13192
 19743  004A08                     l423:
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19747  004A08  010F               	movlb	15	; () banked
 19748  004A0A  933F               	bcf	63,1,b	;volatile
 19749  004A0C                     L19:
 19750                           
 19751                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19752  004A0C  913F               	bcf	63,0,b	;volatile
 19753                           
 19754                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19755  004A0E  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19756  004A12  D7E1               	goto	l13192
 19757  004A14                     l424:
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19761  004A14  010F               	movlb	15	; () banked
 19762  004A16  933F               	bcf	63,1,b	;volatile
 19763  004A18                     L22:
 19764                           
 19765                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19766  004A18  913F               	bcf	63,0,b	;volatile
 19767  004A1A  D7F3               	goto	L18
 19768  004A1C                     l416:
 19769                           
 19770                           ; BSR set to: 0
 19771  004A1C  0100               	movlb	0	; () banked
 19772  004A1E  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19773                           
 19774                           ; Switch size 1, requested type "space"
 19775                           ; Number of cases is 7, Range of values is 0 to 6
 19776                           ; switch strategies available:
 19777                           ; Name         Instructions Cycles
 19778                           ; simple_byte           22    12 (average)
 19779                           ;	Chosen strategy is simple_byte
 19780  004A20  0A00               	xorlw	0	; case 0
 19781  004A22  B4D8               	btfsc	status,2,c
 19782  004A24  D7CE               	goto	l417
 19783  004A26  0A01               	xorlw	1	; case 1
 19784  004A28  B4D8               	btfsc	status,2,c
 19785  004A2A  D7CF               	goto	l419
 19786  004A2C  0A03               	xorlw	3	; case 2
 19787  004A2E  B4D8               	btfsc	status,2,c
 19788  004A30  D7CF               	goto	l420
 19789  004A32  0A01               	xorlw	1	; case 3
 19790  004A34  B4D8               	btfsc	status,2,c
 19791  004A36  D7DC               	goto	l421
 19792  004A38  0A07               	xorlw	7	; case 4
 19793  004A3A  B4D8               	btfsc	status,2,c
 19794  004A3C  D7DF               	goto	l422
 19795  004A3E  0A01               	xorlw	1	; case 5
 19796  004A40  B4D8               	btfsc	status,2,c
 19797  004A42  D7E2               	goto	l423
 19798  004A44  0A03               	xorlw	3	; case 6
 19799  004A46  B4D8               	btfsc	status,2,c
 19800  004A48  D7E5               	goto	l424
 19801  004A4A                     l418:
 19802                           
 19803                           ;rtcc_drv.c: 286: return RetValue;
 19804                           
 19805                           ; BSR set to: 0
 19806  004A4A  0100               	movlb	0	; () banked
 19807  004A4C  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 19808  004A4E  0012               	return	
 19809  004A50                     __end_of_Rtcc_GetRtccValue:
 19810                           	opt stack 0
 19811                           tosu	equ	0xFFF
 19812                           tosh	equ	0xFFE
 19813                           tosl	equ	0xFFD
 19814                           pclath	equ	0xFFA
 19815                           tblptru	equ	0xFF8
 19816                           tblptrh	equ	0xFF7
 19817                           tblptrl	equ	0xFF6
 19818                           tablat	equ	0xFF5
 19819                           prodh	equ	0xFF4
 19820                           prodl	equ	0xFF3
 19821                           intcon	equ	0xFF2
 19822                           intcon2	equ	0xFF1
 19823                           intcon3	equ	0xFF0
 19824                           indf0	equ	0xFEF
 19825                           postinc0	equ	0xFEE
 19826                           plusw0	equ	0xFEB
 19827                           fsr0h	equ	0xFEA
 19828                           fsr0l	equ	0xFE9
 19829                           wreg	equ	0xFE8
 19830                           indf1	equ	0xFE7
 19831                           postinc1	equ	0xFE6
 19832                           postdec1	equ	0xFE5
 19833                           fsr1h	equ	0xFE2
 19834                           fsr1l	equ	0xFE1
 19835                           indf2	equ	0xFDF
 19836                           postinc2	equ	0xFDE
 19837                           postdec2	equ	0xFDD
 19838                           plusw2	equ	0xFDB
 19839                           fsr2h	equ	0xFDA
 19840                           fsr2l	equ	0xFD9
 19841                           status	equ	0xFD8
 19842                           
 19843 ;; *************** function _Rtcc_SetRtcStatus *****************
 19844 ;; Defined at:
 19845 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19846 ;; Parameters:    Size  Location     Type
 19847 ;;  Status          1    wreg     unsigned char 
 19848 ;; Auto vars:     Size  Location     Type
 19849 ;;  Status          1   29[BANK0 ] unsigned char 
 19850 ;; Return value:  Size  Location     Type
 19851 ;;                  1    wreg      void 
 19852 ;; Registers used:
 19853 ;;		wreg
 19854 ;; Tracked objects:
 19855 ;;		On entry : 0/0
 19856 ;;		On exit  : 0/0
 19857 ;;		Unchanged: 0/0
 19858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19862 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19863 ;;Total ram usage:        1 bytes
 19864 ;; Hardware stack levels used:    1
 19865 ;; Hardware stack levels required when called:   11
 19866 ;; This function calls:
 19867 ;;		Nothing
 19868 ;; This function is called by:
 19869 ;;		_Rtcm_MainTask
 19870 ;; This function uses a non-reentrant model
 19871 ;;
 19872                           
 19873                           	psect	text86
 19874  006146                     __ptext86:
 19875                           	opt stack 0
 19876  006146                     _Rtcc_SetRtcStatus:
 19877                           	opt stack 16
 19878                           
 19879                           ; BSR set to: 0
 19880                           ;incstack = 0
 19881                           ;Rtcc_SetRtcStatus@Status stored from wreg
 19882  006146  0100               	movlb	0	; () banked
 19883  006148  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 19884                           
 19885                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 19886  00614A  0100               	movlb	0	; () banked
 19887  00614C  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 19888  00614E  D003               	bra	u13285
 19889  006150  010F               	movlb	15	; () banked
 19890  006152  9F3F               	bcf	63,7,b	;volatile
 19891  006154  D002               	bra	u13286
 19892  006156                     u13285:
 19893  006156  010F               	movlb	15	; () banked
 19894  006158  8F3F               	bsf	63,7,b	;volatile
 19895  00615A                     u13286:
 19896                           
 19897                           ; BSR set to: 15
 19898  00615A  0012               	return		;funcret
 19899  00615C                     __end_of_Rtcc_SetRtcStatus:
 19900                           	opt stack 0
 19901                           tosu	equ	0xFFF
 19902                           tosh	equ	0xFFE
 19903                           tosl	equ	0xFFD
 19904                           pclath	equ	0xFFA
 19905                           tblptru	equ	0xFF8
 19906                           tblptrh	equ	0xFF7
 19907                           tblptrl	equ	0xFF6
 19908                           tablat	equ	0xFF5
 19909                           prodh	equ	0xFF4
 19910                           prodl	equ	0xFF3
 19911                           intcon	equ	0xFF2
 19912                           intcon2	equ	0xFF1
 19913                           intcon3	equ	0xFF0
 19914                           indf0	equ	0xFEF
 19915                           postinc0	equ	0xFEE
 19916                           plusw0	equ	0xFEB
 19917                           fsr0h	equ	0xFEA
 19918                           fsr0l	equ	0xFE9
 19919                           wreg	equ	0xFE8
 19920                           indf1	equ	0xFE7
 19921                           postinc1	equ	0xFE6
 19922                           postdec1	equ	0xFE5
 19923                           fsr1h	equ	0xFE2
 19924                           fsr1l	equ	0xFE1
 19925                           indf2	equ	0xFDF
 19926                           postinc2	equ	0xFDE
 19927                           postdec2	equ	0xFDD
 19928                           plusw2	equ	0xFDB
 19929                           fsr2h	equ	0xFDA
 19930                           fsr2l	equ	0xFD9
 19931                           status	equ	0xFD8
 19932                           
 19933 ;; *************** function _Rtcc_RtcConfig *****************
 19934 ;; Defined at:
 19935 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19936 ;; Parameters:    Size  Location     Type
 19937 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 19938 ;;		 -> RtcConfig(4), 
 19939 ;; Auto vars:     Size  Location     Type
 19940 ;;		None
 19941 ;; Return value:  Size  Location     Type
 19942 ;;                  1    wreg      void 
 19943 ;; Registers used:
 19944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19945 ;; Tracked objects:
 19946 ;;		On entry : 0/0
 19947 ;;		On exit  : 0/0
 19948 ;;		Unchanged: 0/0
 19949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19953 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19954 ;;Total ram usage:        3 bytes
 19955 ;; Hardware stack levels used:    1
 19956 ;; Hardware stack levels required when called:   12
 19957 ;; This function calls:
 19958 ;;		_RtccIrqInit
 19959 ;; This function is called by:
 19960 ;;		_Rtcm_MainTask
 19961 ;; This function uses a non-reentrant model
 19962 ;;
 19963                           
 19964                           	psect	text87
 19965  004588                     __ptext87:
 19966                           	opt stack 0
 19967  004588                     _Rtcc_RtcConfig:
 19968                           	opt stack 15
 19969                           
 19970                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 19971                           
 19972                           ; BSR set to: 15
 19973                           ;incstack = 0
 19974  004588  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 19975  00458C  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 19976  004590  50DF               	movf	indf2,w,c
 19977  004592  0100               	movlb	0	; () banked
 19978  004594  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19979  004596  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19980  004598  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19981  00459A  010F               	movlb	15	; () banked
 19982  00459C  513F               	movf	63,w,b	;volatile
 19983  00459E  0100               	movlb	0	; () banked
 19984  0045A0  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19985  0045A2  0BFB               	andlw	-5
 19986  0045A4  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19987  0045A6  010F               	movlb	15	; () banked
 19988  0045A8  6F3F               	movwf	63,b	;volatile
 19989                           
 19990                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 19991  0045AA  0100               	movlb	0	; () banked
 19992  0045AC  EE20 F001          	lfsr	2,1
 19993  0045B0  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19994  0045B2  26D9               	addwf	fsr2l,f,c
 19995  0045B4  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19996  0045B6  22DA               	addwfc	fsr2h,f,c
 19997  0045B8  50DF               	movf	indf2,w,c
 19998  0045BA  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19999  0045BC  0E01               	movlw	1
 20000  0045BE  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20001  0045C0  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20002  0045C2  010F               	movlb	15	; () banked
 20003  0045C4  513C               	movf	60,w,b	;volatile
 20004  0045C6  0100               	movlb	0	; () banked
 20005  0045C8  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20006  0045CA  0BFD               	andlw	-3
 20007  0045CC  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20008  0045CE  010F               	movlb	15	; () banked
 20009  0045D0  6F3C               	movwf	60,b	;volatile
 20010                           
 20011                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20012  0045D2  0100               	movlb	0	; () banked
 20013  0045D4  EE20 F001          	lfsr	2,1
 20014  0045D8  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20015  0045DA  26D9               	addwf	fsr2l,f,c
 20016  0045DC  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20017  0045DE  22DA               	addwfc	fsr2h,f,c
 20018  0045E0  50DF               	movf	indf2,w,c
 20019  0045E2  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20020  0045E4  90D8               	bcf	status,0,c
 20021  0045E6  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20022  0045E8  0E01               	movlw	1
 20023  0045EA  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20024  0045EC  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20025  0045EE  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20026  0045F0  010F               	movlb	15	; () banked
 20027  0045F2  513C               	movf	60,w,b	;volatile
 20028  0045F4  0100               	movlb	0	; () banked
 20029  0045F6  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20030  0045F8  0BFB               	andlw	-5
 20031  0045FA  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20032  0045FC  010F               	movlb	15	; () banked
 20033  0045FE  6F3C               	movwf	60,b	;volatile
 20034                           
 20035                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20036  004600  0100               	movlb	0	; () banked
 20037  004602  EE20 F002          	lfsr	2,2
 20038  004606  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20039  004608  26D9               	addwf	fsr2l,f,c
 20040  00460A  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20041  00460C  22DA               	addwfc	fsr2h,f,c
 20042  00460E  04DE               	decf	postinc2,w,c
 20043  004610  A4D8               	btfss	status,2,c
 20044  004612  0012               	return	
 20045                           
 20046                           ; BSR set to: 0
 20047                           ;rtcc_drv.c: 115: {
 20048                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20049  004614  EE20 F003          	lfsr	2,3
 20050  004618  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20051  00461A  26D9               	addwf	fsr2l,f,c
 20052  00461C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20053  00461E  22DA               	addwfc	fsr2h,f,c
 20054  004620  50DF               	movf	indf2,w,c
 20055  004622  ECAE  F030         	call	_RtccIrqInit
 20056  004626  0012               	return	
 20057  004628                     __end_of_Rtcc_RtcConfig:
 20058                           	opt stack 0
 20059                           tosu	equ	0xFFF
 20060                           tosh	equ	0xFFE
 20061                           tosl	equ	0xFFD
 20062                           pclath	equ	0xFFA
 20063                           tblptru	equ	0xFF8
 20064                           tblptrh	equ	0xFF7
 20065                           tblptrl	equ	0xFF6
 20066                           tablat	equ	0xFF5
 20067                           prodh	equ	0xFF4
 20068                           prodl	equ	0xFF3
 20069                           intcon	equ	0xFF2
 20070                           intcon2	equ	0xFF1
 20071                           intcon3	equ	0xFF0
 20072                           indf0	equ	0xFEF
 20073                           postinc0	equ	0xFEE
 20074                           plusw0	equ	0xFEB
 20075                           fsr0h	equ	0xFEA
 20076                           fsr0l	equ	0xFE9
 20077                           wreg	equ	0xFE8
 20078                           indf1	equ	0xFE7
 20079                           postinc1	equ	0xFE6
 20080                           postdec1	equ	0xFE5
 20081                           fsr1h	equ	0xFE2
 20082                           fsr1l	equ	0xFE1
 20083                           indf2	equ	0xFDF
 20084                           postinc2	equ	0xFDE
 20085                           postdec2	equ	0xFDD
 20086                           plusw2	equ	0xFDB
 20087                           fsr2h	equ	0xFDA
 20088                           fsr2l	equ	0xFD9
 20089                           status	equ	0xFD8
 20090                           
 20091 ;; *************** function _RtccIrqInit *****************
 20092 ;; Defined at:
 20093 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20094 ;; Parameters:    Size  Location     Type
 20095 ;;  Priority        1    wreg     enum E7716
 20096 ;; Auto vars:     Size  Location     Type
 20097 ;;  Priority        1   29[BANK0 ] enum E7716
 20098 ;; Return value:  Size  Location     Type
 20099 ;;                  1    wreg      void 
 20100 ;; Registers used:
 20101 ;;		wreg
 20102 ;; Tracked objects:
 20103 ;;		On entry : 0/0
 20104 ;;		On exit  : 0/0
 20105 ;;		Unchanged: 0/0
 20106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20110 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20111 ;;Total ram usage:        1 bytes
 20112 ;; Hardware stack levels used:    1
 20113 ;; Hardware stack levels required when called:   11
 20114 ;; This function calls:
 20115 ;;		Nothing
 20116 ;; This function is called by:
 20117 ;;		_Rtcc_RtcConfig
 20118 ;; This function uses a non-reentrant model
 20119 ;;
 20120                           
 20121                           	psect	text88
 20122  00615C                     __ptext88:
 20123                           	opt stack 0
 20124  00615C                     _RtccIrqInit:
 20125                           	opt stack 15
 20126                           
 20127                           ;incstack = 0
 20128                           ;RtccIrqInit@Priority stored from wreg
 20129  00615C  0100               	movlb	0	; () banked
 20130  00615E  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20131                           
 20132                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20133  006160  90A4               	bcf	4004,0,c	;volatile
 20134                           
 20135                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20136  006162  0100               	movlb	0	; () banked
 20137  006164  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20138  006166  D002               	bra	u12285
 20139  006168  90A5               	bcf	4005,0,c	;volatile
 20140  00616A  D001               	bra	u12286
 20141  00616C                     u12285:
 20142  00616C  80A5               	bsf	4005,0,c	;volatile
 20143  00616E                     u12286:
 20144                           
 20145                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20146  00616E  80A3               	bsf	4003,0,c	;volatile
 20147  006170  0012               	return		;funcret
 20148  006172                     __end_of_RtccIrqInit:
 20149                           	opt stack 0
 20150                           tosu	equ	0xFFF
 20151                           tosh	equ	0xFFE
 20152                           tosl	equ	0xFFD
 20153                           pclath	equ	0xFFA
 20154                           tblptru	equ	0xFF8
 20155                           tblptrh	equ	0xFF7
 20156                           tblptrl	equ	0xFF6
 20157                           tablat	equ	0xFF5
 20158                           prodh	equ	0xFF4
 20159                           prodl	equ	0xFF3
 20160                           intcon	equ	0xFF2
 20161                           intcon2	equ	0xFF1
 20162                           intcon3	equ	0xFF0
 20163                           indf0	equ	0xFEF
 20164                           postinc0	equ	0xFEE
 20165                           plusw0	equ	0xFEB
 20166                           fsr0h	equ	0xFEA
 20167                           fsr0l	equ	0xFE9
 20168                           wreg	equ	0xFE8
 20169                           indf1	equ	0xFE7
 20170                           postinc1	equ	0xFE6
 20171                           postdec1	equ	0xFE5
 20172                           fsr1h	equ	0xFE2
 20173                           fsr1l	equ	0xFE1
 20174                           indf2	equ	0xFDF
 20175                           postinc2	equ	0xFDE
 20176                           postdec2	equ	0xFDD
 20177                           plusw2	equ	0xFDB
 20178                           fsr2h	equ	0xFDA
 20179                           fsr2l	equ	0xFD9
 20180                           status	equ	0xFD8
 20181                           
 20182 ;; *************** function _Rtcc_AlarmConfig *****************
 20183 ;; Defined at:
 20184 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20185 ;; Parameters:    Size  Location     Type
 20186 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20187 ;;		 -> AlCfg(4), 
 20188 ;; Auto vars:     Size  Location     Type
 20189 ;;		None
 20190 ;; Return value:  Size  Location     Type
 20191 ;;                  1    wreg      void 
 20192 ;; Registers used:
 20193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20194 ;; Tracked objects:
 20195 ;;		On entry : 0/0
 20196 ;;		On exit  : 0/0
 20197 ;;		Unchanged: 0/0
 20198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20202 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20203 ;;Total ram usage:        3 bytes
 20204 ;; Hardware stack levels used:    1
 20205 ;; Hardware stack levels required when called:   11
 20206 ;; This function calls:
 20207 ;;		Nothing
 20208 ;; This function is called by:
 20209 ;;		_Rtcm_MainTask
 20210 ;; This function uses a non-reentrant model
 20211 ;;
 20212                           
 20213                           	psect	text89
 20214  004F46                     __ptext89:
 20215                           	opt stack 0
 20216  004F46                     _Rtcc_AlarmConfig:
 20217                           	opt stack 16
 20218                           
 20219                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20220                           
 20221                           ;incstack = 0
 20222  004F46  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20223  004F4A  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20224  004F4E  50DF               	movf	indf2,w,c
 20225  004F50  0100               	movlb	0	; () banked
 20226  004F52  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20227  004F54  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20228  004F56  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20229  004F58  5091               	movf	3985,w,c	;volatile
 20230  004F5A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20231  004F5C  0B7F               	andlw	-129
 20232  004F5E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20233  004F60  6E91               	movwf	3985,c	;volatile
 20234                           
 20235                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20236  004F62  EE20 F001          	lfsr	2,1
 20237  004F66  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20238  004F68  26D9               	addwf	fsr2l,f,c
 20239  004F6A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20240  004F6C  22DA               	addwfc	fsr2h,f,c
 20241  004F6E  50DF               	movf	indf2,w,c
 20242  004F70  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20243  004F72  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20244  004F74  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20245  004F76  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20246  004F78  5091               	movf	3985,w,c	;volatile
 20247  004F7A  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20248  004F7C  0BBF               	andlw	-65
 20249  004F7E  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20250  004F80  6E91               	movwf	3985,c	;volatile
 20251                           
 20252                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20253  004F82  EE20 F002          	lfsr	2,2
 20254  004F86  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20255  004F88  26D9               	addwf	fsr2l,f,c
 20256  004F8A  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20257  004F8C  22DA               	addwfc	fsr2h,f,c
 20258  004F8E  50DF               	movf	indf2,w,c
 20259  004F90  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20260  004F92  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20261  004F94  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20262  004F96  5091               	movf	3985,w,c	;volatile
 20263  004F98  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20264  004F9A  0BC3               	andlw	-61
 20265  004F9C  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20266  004F9E  6E91               	movwf	3985,c	;volatile
 20267                           
 20268                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20269  004FA0  EE20 F003          	lfsr	2,3
 20270  004FA4  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20271  004FA6  26D9               	addwf	fsr2l,f,c
 20272  004FA8  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20273  004FAA  22DA               	addwfc	fsr2h,f,c
 20274  004FAC  50DF               	movf	indf2,w,c
 20275  004FAE  6E90               	movwf	3984,c	;volatile
 20276                           
 20277                           ; BSR set to: 0
 20278  004FB0  0012               	return		;funcret
 20279  004FB2                     __end_of_Rtcc_AlarmConfig:
 20280                           	opt stack 0
 20281                           tosu	equ	0xFFF
 20282                           tosh	equ	0xFFE
 20283                           tosl	equ	0xFFD
 20284                           pclath	equ	0xFFA
 20285                           tblptru	equ	0xFF8
 20286                           tblptrh	equ	0xFF7
 20287                           tblptrl	equ	0xFF6
 20288                           tablat	equ	0xFF5
 20289                           prodh	equ	0xFF4
 20290                           prodl	equ	0xFF3
 20291                           intcon	equ	0xFF2
 20292                           intcon2	equ	0xFF1
 20293                           intcon3	equ	0xFF0
 20294                           indf0	equ	0xFEF
 20295                           postinc0	equ	0xFEE
 20296                           plusw0	equ	0xFEB
 20297                           fsr0h	equ	0xFEA
 20298                           fsr0l	equ	0xFE9
 20299                           wreg	equ	0xFE8
 20300                           indf1	equ	0xFE7
 20301                           postinc1	equ	0xFE6
 20302                           postdec1	equ	0xFE5
 20303                           fsr1h	equ	0xFE2
 20304                           fsr1l	equ	0xFE1
 20305                           indf2	equ	0xFDF
 20306                           postinc2	equ	0xFDE
 20307                           postdec2	equ	0xFDD
 20308                           plusw2	equ	0xFDB
 20309                           fsr2h	equ	0xFDA
 20310                           fsr2l	equ	0xFD9
 20311                           status	equ	0xFD8
 20312                           
 20313 ;; *************** function _initGprsModem *****************
 20314 ;; Defined at:
 20315 ;;		line 109 in file "../Source/c/04_App/app.c"
 20316 ;; Parameters:    Size  Location     Type
 20317 ;;		None
 20318 ;; Auto vars:     Size  Location     Type
 20319 ;;		None
 20320 ;; Return value:  Size  Location     Type
 20321 ;;                  1    wreg      unsigned char 
 20322 ;; Registers used:
 20323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20324 ;; Tracked objects:
 20325 ;;		On entry : 0/0
 20326 ;;		On exit  : 0/0
 20327 ;;		Unchanged: 0/0
 20328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20333 ;;Total ram usage:        0 bytes
 20334 ;; Hardware stack levels used:    1
 20335 ;; Hardware stack levels required when called:   14
 20336 ;; This function calls:
 20337 ;;		_Led_SetLedStatus
 20338 ;;		_Mdm_SetSmsFormat
 20339 ;;		_Uart_WriteConstString
 20340 ;;		_secondsAppTimer
 20341 ;; This function is called by:
 20342 ;;		_MyApp_Task
 20343 ;; This function uses a non-reentrant model
 20344 ;;
 20345                           
 20346                           	psect	text90
 20347  0046C6                     __ptext90:
 20348                           	opt stack 0
 20349  0046C6                     _initGprsModem:
 20350                           	opt stack 13
 20351                           
 20352                           ;app.c: 111: static uint16_t modemCounter = 0;
 20353                           ;app.c: 112: static bool isInitialized = 0;
 20354                           ;app.c: 113: static uint8_t initMdm = 0;
 20355                           ;app.c: 115: switch(initMdm)
 20356                           
 20357                           ; BSR set to: 0
 20358                           ;incstack = 0
 20359  0046C6  D040               	goto	l2553
 20360  0046C8                     
 20361                           ;app.c: 118: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 20362  0046C8  0E03               	movlw	3
 20363  0046CA  0100               	movlb	0	; () banked
 20364  0046CC  19D2               	xorwf	_MdmStatus& (0+255),w,b
 20365  0046CE  B4D8               	btfsc	status,2,c
 20366  0046D0  D003               	goto	u14470
 20367                           
 20368                           ; BSR set to: 0
 20369  0046D2  05D2               	decf	_MdmStatus& (0+255),w,b
 20370  0046D4  A4D8               	btfss	status,2,c
 20371  0046D6  D043               	goto	l2559
 20372  0046D8                     u14470:
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;app.c: 119: {
 20376                           ;app.c: 120: if (secondsAppTimer(5, &modemCounter, 0))
 20377                           
 20378                           ; BSR set to: 0
 20379  0046D8  0EB5               	movlw	low initGprsModem@modemCounter
 20380  0046DA  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 20381  0046DC  0E03               	movlw	high initGprsModem@modemCounter
 20382  0046DE  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 20383  0046E0  0E00               	movlw	0
 20384  0046E2  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20385  0046E4  0E05               	movlw	5
 20386  0046E6  EC73  F022         	call	_secondsAppTimer
 20387  0046EA  0900               	iorlw	0
 20388  0046EC  B4D8               	btfsc	status,2,c
 20389  0046EE  D037               	goto	l2559
 20390                           
 20391                           ;app.c: 121: {
 20392                           ;app.c: 122: Mdm_SetSmsFormat(1);
 20393  0046F0  0E01               	movlw	1
 20394  0046F2  ECF7  F02A         	call	_Mdm_SetSmsFormat
 20395                           
 20396                           ;app.c: 123: Led_SetLedStatus(1u, LED_STS_ON);
 20397  0046F6  0E01               	movlw	1
 20398  0046F8  0100               	movlb	0	; () banked
 20399  0046FA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20400  0046FC  0E01               	movlw	1
 20401  0046FE  ECA4  F02E         	call	_Led_SetLedStatus
 20402                           
 20403                           ;app.c: 124: initMdm = 1;
 20404  004702  0E01               	movlw	1
 20405  004704  D009               	goto	L23
 20406  004706                     
 20407                           ; BSR set to: 1
 20408                           ;app.c: 129: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 20409                           
 20410                           ; BSR set to: 1
 20411  004706  0E07               	movlw	low STR_29
 20412  004708  0100               	movlb	0	; () banked
 20413  00470A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20414  00470C  0EFF               	movlw	high STR_29
 20415  00470E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20416  004710  0E01               	movlw	1
 20417  004712  EC85  F02C         	call	_Uart_WriteConstString
 20418                           
 20419                           ;app.c: 130: initMdm = 2;
 20420  004716  0E02               	movlw	2
 20421  004718                     L23:
 20422  004718  0101               	movlb	1	; () banked
 20423  00471A  6FD6               	movwf	initGprsModem@initMdm& (0+255),b
 20424                           
 20425                           ;app.c: 131: break;
 20426  00471C  D020               	goto	l2559
 20427  00471E                     
 20428                           ; BSR set to: 1
 20429                           ;app.c: 133: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 20430                           
 20431                           ; BSR set to: 1
 20432  00471E  0EA9               	movlw	low STR_30
 20433  004720  0100               	movlb	0	; () banked
 20434  004722  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 20435  004724  0EFF               	movlw	high STR_30
 20436  004726  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 20437  004728  0E01               	movlw	1
 20438  00472A  EC85  F02C         	call	_Uart_WriteConstString
 20439                           
 20440                           ;app.c: 134: initMdm = 3;
 20441  00472E  0E03               	movlw	3
 20442  004730  0101               	movlb	1	; () banked
 20443  004732  6FD6               	movwf	initGprsModem@initMdm& (0+255),b
 20444                           
 20445                           ; BSR set to: 1
 20446                           ;app.c: 135: Led_SetLedStatus(1u, LED_STS_ON);
 20447  004734  0E01               	movlw	1
 20448  004736  0100               	movlb	0	; () banked
 20449  004738  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20450  00473A  0E01               	movlw	1
 20451  00473C  ECA4  F02E         	call	_Led_SetLedStatus
 20452                           
 20453                           ;app.c: 136: isInitialized = 1;
 20454  004740  0E01               	movlw	1
 20455  004742  0101               	movlb	1	; () banked
 20456  004744  6FD7               	movwf	initGprsModem@isInitialized& (0+255),b
 20457                           
 20458                           ; BSR set to: 1
 20459                           ;app.c: 140: }
 20460                           
 20461                           ; BSR set to: 1
 20462                           ;app.c: 139: break;
 20463                           
 20464                           ;app.c: 138: default:
 20465                           
 20466                           ;app.c: 137: break;
 20467  004746  D00B               	goto	l2559
 20468  004748                     l2553:
 20469                           
 20470                           ; BSR set to: 1
 20471  004748  0101               	movlb	1	; () banked
 20472  00474A  51D6               	movf	initGprsModem@initMdm& (0+255),w,b
 20473                           
 20474                           ; Switch size 1, requested type "space"
 20475                           ; Number of cases is 3, Range of values is 0 to 2
 20476                           ; switch strategies available:
 20477                           ; Name         Instructions Cycles
 20478                           ; simple_byte           10     6 (average)
 20479                           ;	Chosen strategy is simple_byte
 20480  00474C  0A00               	xorlw	0	; case 0
 20481  00474E  B4D8               	btfsc	status,2,c
 20482  004750  D7BB               	goto	l2554
 20483  004752  0A01               	xorlw	1	; case 1
 20484  004754  B4D8               	btfsc	status,2,c
 20485  004756  D7D7               	goto	l2560
 20486  004758  0A03               	xorlw	3	; case 2
 20487  00475A  B4D8               	btfsc	status,2,c
 20488  00475C  D7E0               	goto	l2561
 20489  00475E                     l2559:
 20490                           
 20491                           ;app.c: 141: return isInitialized;
 20492                           
 20493                           ; BSR set to: 1
 20494  00475E  0101               	movlb	1	; () banked
 20495  004760  51D7               	movf	initGprsModem@isInitialized& (0+255),w,b
 20496  004762  0012               	return	
 20497  004764                     __end_of_initGprsModem:
 20498                           	opt stack 0
 20499                           tosu	equ	0xFFF
 20500                           tosh	equ	0xFFE
 20501                           tosl	equ	0xFFD
 20502                           pclath	equ	0xFFA
 20503                           tblptru	equ	0xFF8
 20504                           tblptrh	equ	0xFF7
 20505                           tblptrl	equ	0xFF6
 20506                           tablat	equ	0xFF5
 20507                           prodh	equ	0xFF4
 20508                           prodl	equ	0xFF3
 20509                           intcon	equ	0xFF2
 20510                           intcon2	equ	0xFF1
 20511                           intcon3	equ	0xFF0
 20512                           indf0	equ	0xFEF
 20513                           postinc0	equ	0xFEE
 20514                           plusw0	equ	0xFEB
 20515                           fsr0h	equ	0xFEA
 20516                           fsr0l	equ	0xFE9
 20517                           wreg	equ	0xFE8
 20518                           indf1	equ	0xFE7
 20519                           postinc1	equ	0xFE6
 20520                           postdec1	equ	0xFE5
 20521                           fsr1h	equ	0xFE2
 20522                           fsr1l	equ	0xFE1
 20523                           indf2	equ	0xFDF
 20524                           postinc2	equ	0xFDE
 20525                           postdec2	equ	0xFDD
 20526                           plusw2	equ	0xFDB
 20527                           fsr2h	equ	0xFDA
 20528                           fsr2l	equ	0xFD9
 20529                           status	equ	0xFD8
 20530                           
 20531 ;; *************** function _Mdm_SetSmsFormat *****************
 20532 ;; Defined at:
 20533 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20534 ;; Parameters:    Size  Location     Type
 20535 ;;  TextFormat      1    wreg     unsigned char 
 20536 ;; Auto vars:     Size  Location     Type
 20537 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 20538 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 20539 ;;  Index           1   35[BANK0 ] unsigned char 
 20540 ;; Return value:  Size  Location     Type
 20541 ;;                  1    wreg      void 
 20542 ;; Registers used:
 20543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20544 ;; Tracked objects:
 20545 ;;		On entry : 0/0
 20546 ;;		On exit  : 0/0
 20547 ;;		Unchanged: 0/0
 20548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20550 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;Total ram usage:       22 bytes
 20554 ;; Hardware stack levels used:    1
 20555 ;; Hardware stack levels required when called:   13
 20556 ;; This function calls:
 20557 ;;		_Uart_WriteString
 20558 ;; This function is called by:
 20559 ;;		_initGprsModem
 20560 ;; This function uses a non-reentrant model
 20561 ;;
 20562                           
 20563                           	psect	text91
 20564  0055EE                     __ptext91:
 20565                           	opt stack 0
 20566  0055EE                     _Mdm_SetSmsFormat:
 20567                           	opt stack 13
 20568                           
 20569                           ; BSR set to: 1
 20570                           ;incstack = 0
 20571                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 20572  0055EE  0100               	movlb	0	; () banked
 20573  0055F0  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 20574                           
 20575                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 20576                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 20577  0055F2  0E00               	movlw	0
 20578  0055F4  0100               	movlb	0	; () banked
 20579  0055F6  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 20580                           
 20581                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 20582  0055F8  0E41               	movlw	65
 20583  0055FA  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 20584                           
 20585                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 20586  0055FC  0E54               	movlw	84
 20587  0055FE  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 20588                           
 20589                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 20590  005600  0E2B               	movlw	43
 20591  005602  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 20592                           
 20593                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 20594  005604  0E43               	movlw	67
 20595  005606  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 20596                           
 20597                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 20598  005608  0E4D               	movlw	77
 20599  00560A  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 20600                           
 20601                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 20602  00560C  0E47               	movlw	71
 20603  00560E  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 20604                           
 20605                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 20606  005610  0E46               	movlw	70
 20607  005612  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 20608                           
 20609                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 20610  005614  0E3D               	movlw	61
 20611  005616  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 20612                           
 20613                           ; BSR set to: 0
 20614                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 20615  005618  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 20616  00561A  A4D8               	btfss	status,2,c
 20617  00561C  D002               	goto	l1121
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;mdm_gsm_gprs.c: 854: {
 20621                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 20622  00561E  0E31               	movlw	49
 20623  005620  D001               	goto	L24
 20624  005622                     l1121:
 20625                           
 20626                           ; BSR set to: 0
 20627                           ;mdm_gsm_gprs.c: 857: else
 20628                           ;mdm_gsm_gprs.c: 858: {
 20629                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 20630                           
 20631                           ; BSR set to: 0
 20632  005622  0E30               	movlw	48
 20633  005624                     L24:
 20634  005624  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;mdm_gsm_gprs.c: 860: }
 20638                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 20639  005626  0E0D               	movlw	13
 20640  005628  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 20641                           
 20642                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 20643  00562A  0E00               	movlw	0
 20644  00562C  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 20648  00562E  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 20649  005630  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 20650  005632  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 20651  005634  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 20652  005636  0E01               	movlw	1
 20653  005638  EC46  F02D         	call	_Uart_WriteString
 20654  00563C  0012               	return		;funcret
 20655  00563E                     __end_of_Mdm_SetSmsFormat:
 20656                           	opt stack 0
 20657                           tosu	equ	0xFFF
 20658                           tosh	equ	0xFFE
 20659                           tosl	equ	0xFFD
 20660                           pclath	equ	0xFFA
 20661                           tblptru	equ	0xFF8
 20662                           tblptrh	equ	0xFF7
 20663                           tblptrl	equ	0xFF6
 20664                           tablat	equ	0xFF5
 20665                           prodh	equ	0xFF4
 20666                           prodl	equ	0xFF3
 20667                           intcon	equ	0xFF2
 20668                           intcon2	equ	0xFF1
 20669                           intcon3	equ	0xFF0
 20670                           indf0	equ	0xFEF
 20671                           postinc0	equ	0xFEE
 20672                           plusw0	equ	0xFEB
 20673                           fsr0h	equ	0xFEA
 20674                           fsr0l	equ	0xFE9
 20675                           wreg	equ	0xFE8
 20676                           indf1	equ	0xFE7
 20677                           postinc1	equ	0xFE6
 20678                           postdec1	equ	0xFE5
 20679                           fsr1h	equ	0xFE2
 20680                           fsr1l	equ	0xFE1
 20681                           indf2	equ	0xFDF
 20682                           postinc2	equ	0xFDE
 20683                           postdec2	equ	0xFDD
 20684                           plusw2	equ	0xFDB
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _blinkForSeconds *****************
 20690 ;; Defined at:
 20691 ;;		line 144 in file "../Source/c/04_App/app.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;  seconds         1    wreg     unsigned char 
 20694 ;;  blinkTicks      2   51[BANK0 ] PTR unsigned int 
 20695 ;;		 -> MyApp_Task@blinkTicks(2), 
 20696 ;; Auto vars:     Size  Location     Type
 20697 ;;  seconds         1   53[BANK0 ] unsigned char 
 20698 ;; Return value:  Size  Location     Type
 20699 ;;                  1    wreg      void 
 20700 ;; Registers used:
 20701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20702 ;; Tracked objects:
 20703 ;;		On entry : 0/0
 20704 ;;		On exit  : 0/0
 20705 ;;		Unchanged: 0/0
 20706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20710 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20711 ;;Total ram usage:        3 bytes
 20712 ;; Hardware stack levels used:    1
 20713 ;; Hardware stack levels required when called:   13
 20714 ;; This function calls:
 20715 ;;		_Led_SetLedStatus
 20716 ;;		_secondsAppTimer
 20717 ;; This function is called by:
 20718 ;;		_MyApp_Task
 20719 ;; This function uses a non-reentrant model
 20720 ;;
 20721                           
 20722                           	psect	text92
 20723  005B40                     __ptext92:
 20724                           	opt stack 0
 20725  005B40                     _blinkForSeconds:
 20726                           	opt stack 14
 20727                           
 20728                           ;incstack = 0
 20729                           ;blinkForSeconds@seconds stored from wreg
 20730  005B40  0100               	movlb	0	; () banked
 20731  005B42  6F95               	movwf	blinkForSeconds@seconds& (0+255),b
 20732                           
 20733                           ;app.c: 146: if (secondsAppTimer(seconds, blinkTicks, 0))
 20734  005B44  C093  F08A         	movff	blinkForSeconds@blinkTicks,secondsAppTimer@counter
 20735  005B48  C094  F08B         	movff	blinkForSeconds@blinkTicks+1,secondsAppTimer@counter+1
 20736  005B4C  0E00               	movlw	0
 20737  005B4E  0100               	movlb	0	; () banked
 20738  005B50  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 20739  005B52  5195               	movf	blinkForSeconds@seconds& (0+255),w,b
 20740  005B54  EC73  F022         	call	_secondsAppTimer
 20741  005B58  0900               	iorlw	0
 20742  005B5A  B4D8               	btfsc	status,2,c
 20743  005B5C  D007               	goto	l2566
 20744                           
 20745                           ;app.c: 147: {
 20746                           ;app.c: 148: Led_SetLedStatus(1u, LED_STS_ON);
 20747  005B5E  0E01               	movlw	1
 20748  005B60  0100               	movlb	0	; () banked
 20749  005B62  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20750  005B64  0E01               	movlw	1
 20751  005B66  ECA4  F02E         	call	_Led_SetLedStatus
 20752                           
 20753                           ;app.c: 149: }
 20754  005B6A  0012               	return	
 20755  005B6C                     l2566:
 20756                           
 20757                           ;app.c: 150: else
 20758                           ;app.c: 151: {
 20759                           ;app.c: 152: Led_SetLedStatus(1u, LED_STS_BLINK);
 20760  005B6C  0E03               	movlw	3
 20761  005B6E  0100               	movlb	0	; () banked
 20762  005B70  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20763  005B72  0E01               	movlw	1
 20764  005B74  ECA4  F02E         	call	_Led_SetLedStatus
 20765  005B78  0012               	return	
 20766  005B7A                     __end_of_blinkForSeconds:
 20767                           	opt stack 0
 20768                           tosu	equ	0xFFF
 20769                           tosh	equ	0xFFE
 20770                           tosl	equ	0xFFD
 20771                           pclath	equ	0xFFA
 20772                           tblptru	equ	0xFF8
 20773                           tblptrh	equ	0xFF7
 20774                           tblptrl	equ	0xFF6
 20775                           tablat	equ	0xFF5
 20776                           prodh	equ	0xFF4
 20777                           prodl	equ	0xFF3
 20778                           intcon	equ	0xFF2
 20779                           intcon2	equ	0xFF1
 20780                           intcon3	equ	0xFF0
 20781                           indf0	equ	0xFEF
 20782                           postinc0	equ	0xFEE
 20783                           plusw0	equ	0xFEB
 20784                           fsr0h	equ	0xFEA
 20785                           fsr0l	equ	0xFE9
 20786                           wreg	equ	0xFE8
 20787                           indf1	equ	0xFE7
 20788                           postinc1	equ	0xFE6
 20789                           postdec1	equ	0xFE5
 20790                           fsr1h	equ	0xFE2
 20791                           fsr1l	equ	0xFE1
 20792                           indf2	equ	0xFDF
 20793                           postinc2	equ	0xFDE
 20794                           postdec2	equ	0xFDD
 20795                           plusw2	equ	0xFDB
 20796                           fsr2h	equ	0xFDA
 20797                           fsr2l	equ	0xFD9
 20798                           status	equ	0xFD8
 20799                           
 20800 ;; *************** function _secondsAppTimer *****************
 20801 ;; Defined at:
 20802 ;;		line 85 in file "../Source/c/04_App/app.c"
 20803 ;; Parameters:    Size  Location     Type
 20804 ;;  seconds         1    wreg     unsigned char 
 20805 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 20806 ;;		 -> MyApp_Task@blinkTicks(2), initGprsModem@modemCounter(2), 
 20807 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 20808 ;; Auto vars:     Size  Location     Type
 20809 ;;  seconds         1   47[BANK0 ] unsigned char 
 20810 ;;  destinationT    2   49[BANK0 ] unsigned int 
 20811 ;;  isExpired       1   48[BANK0 ] unsigned char 
 20812 ;; Return value:  Size  Location     Type
 20813 ;;                  1    wreg      unsigned char 
 20814 ;; Registers used:
 20815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20816 ;; Tracked objects:
 20817 ;;		On entry : 0/0
 20818 ;;		On exit  : 0/0
 20819 ;;		Unchanged: 0/0
 20820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20821 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20822 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20824 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20825 ;;Total ram usage:        9 bytes
 20826 ;; Hardware stack levels used:    1
 20827 ;; Hardware stack levels required when called:   12
 20828 ;; This function calls:
 20829 ;;		___lwdiv
 20830 ;;		___wmul
 20831 ;; This function is called by:
 20832 ;;		_initGprsModem
 20833 ;;		_blinkForSeconds
 20834 ;; This function uses a non-reentrant model
 20835 ;;
 20836                           
 20837                           	psect	text93
 20838  0044E6                     __ptext93:
 20839                           	opt stack 0
 20840  0044E6                     _secondsAppTimer:
 20841                           	opt stack 14
 20842                           
 20843                           ;incstack = 0
 20844                           ;secondsAppTimer@seconds stored from wreg
 20845  0044E6  0100               	movlb	0	; () banked
 20846  0044E8  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 20847                           
 20848                           ;app.c: 87: bool isExpired = 1;
 20849  0044EA  0E01               	movlw	1
 20850  0044EC  0100               	movlb	0	; () banked
 20851  0044EE  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;app.c: 88: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(100));
 20855  0044F0  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 20856  0044F4  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 20857  0044F6  0E03               	movlw	3
 20858  0044F8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20859  0044FA  0EE8               	movlw	232
 20860  0044FC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 20861  0044FE  EC2A  F02F         	call	___wmul	;wreg free
 20862  004502  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 20863  004506  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 20864  00450A  0E00               	movlw	0
 20865  00450C  0100               	movlb	0	; () banked
 20866  00450E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20867  004510  0E64               	movlw	100
 20868  004512  6F85               	movwf	___lwdiv@divisor& (0+255),b
 20869  004514  EC54  F02A         	call	___lwdiv	;wreg free
 20870  004518  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 20871  00451C  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 20872                           
 20873                           ;app.c: 90: if (*counter < destinationTicks)
 20874  004520  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20875  004524  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20876  004528  0100               	movlb	0	; () banked
 20877  00452A  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20878  00452C  5CDE               	subwf	postinc2,w,c
 20879  00452E  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20880  004530  58DE               	subwfb	postinc2,w,c
 20881  004532  B0D8               	btfsc	status,0,c
 20882  004534  D009               	goto	l2540
 20883                           
 20884                           ; BSR set to: 0
 20885                           ;app.c: 91: {
 20886                           ;app.c: 92: *counter += 1;
 20887  004536  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20888  00453A  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20889  00453E  2ADE               	incf	postinc2,f,c
 20890  004540  0E00               	movlw	0
 20891  004542  22DD               	addwfc	postdec2,f,c
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;app.c: 93: isExpired = 0;
 20895  004544  0E00               	movlw	0
 20896  004546  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 20897  004548                     l2540:
 20898                           
 20899                           ; BSR set to: 0
 20900                           ;app.c: 94: }
 20901                           ;app.c: 95: if (*counter == destinationTicks)
 20902                           
 20903                           ; BSR set to: 0
 20904  004548  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20905  00454C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20906  004550  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 20907  004552  18DE               	xorwf	postinc2,w,c
 20908  004554  E117               	bnz	l13864
 20909  004556  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 20910  004558  18DE               	xorwf	postinc2,w,c
 20911  00455A  A4D8               	btfss	status,2,c
 20912  00455C  D013               	goto	l2543
 20913                           
 20914                           ; BSR set to: 0
 20915                           ;app.c: 96: {
 20916                           ;app.c: 97: if (isCyclic)
 20917  00455E  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 20918  004560  B4D8               	btfsc	status,2,c
 20919  004562  D008               	goto	l2542
 20920                           
 20921                           ; BSR set to: 0
 20922                           ;app.c: 98: {
 20923                           ;app.c: 99: *counter = 0;
 20924  004564  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20925  004568  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20926  00456C  0E00               	movlw	0
 20927  00456E  6EDE               	movwf	postinc2,c
 20928  004570  0E00               	movlw	0
 20929  004572  D007               	goto	L25
 20930  004574                     l2542:
 20931                           
 20932                           ; BSR set to: 0
 20933                           ;app.c: 101: else
 20934                           ;app.c: 102: {
 20935                           ;app.c: 103: *counter = 0xFFFF;
 20936                           
 20937                           ; BSR set to: 0
 20938  004574  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 20939  004578  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 20940  00457C  0EFF               	movlw	255
 20941  00457E  6EDE               	movwf	postinc2,c
 20942  004580  0EFF               	movlw	255
 20943  004582                     L25:
 20944  004582  6EDD               	movwf	postdec2,c
 20945  004584                     l2543:
 20946  004584                     l13864:
 20947                           
 20948                           ; BSR set to: 0
 20949                           ;app.c: 104: }
 20950                           ;app.c: 105: }
 20951                           ;app.c: 106: return isExpired;
 20952  004584  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 20953  004586  0012               	return	
 20954  004588                     __end_of_secondsAppTimer:
 20955                           	opt stack 0
 20956                           tosu	equ	0xFFF
 20957                           tosh	equ	0xFFE
 20958                           tosl	equ	0xFFD
 20959                           pclath	equ	0xFFA
 20960                           tblptru	equ	0xFF8
 20961                           tblptrh	equ	0xFF7
 20962                           tblptrl	equ	0xFF6
 20963                           tablat	equ	0xFF5
 20964                           prodh	equ	0xFF4
 20965                           prodl	equ	0xFF3
 20966                           intcon	equ	0xFF2
 20967                           intcon2	equ	0xFF1
 20968                           intcon3	equ	0xFF0
 20969                           indf0	equ	0xFEF
 20970                           postinc0	equ	0xFEE
 20971                           plusw0	equ	0xFEB
 20972                           fsr0h	equ	0xFEA
 20973                           fsr0l	equ	0xFE9
 20974                           wreg	equ	0xFE8
 20975                           indf1	equ	0xFE7
 20976                           postinc1	equ	0xFE6
 20977                           postdec1	equ	0xFE5
 20978                           fsr1h	equ	0xFE2
 20979                           fsr1l	equ	0xFE1
 20980                           indf2	equ	0xFDF
 20981                           postinc2	equ	0xFDE
 20982                           postdec2	equ	0xFDD
 20983                           plusw2	equ	0xFDB
 20984                           fsr2h	equ	0xFDA
 20985                           fsr2l	equ	0xFD9
 20986                           status	equ	0xFD8
 20987                           
 20988 ;; *************** function _Mdm_RequestSmsData *****************
 20989 ;; Defined at:
 20990 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 20991 ;; Parameters:    Size  Location     Type
 20992 ;;		None
 20993 ;; Auto vars:     Size  Location     Type
 20994 ;;		None
 20995 ;; Return value:  Size  Location     Type
 20996 ;;                  1    wreg      void 
 20997 ;; Registers used:
 20998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20999 ;; Tracked objects:
 21000 ;;		On entry : 0/0
 21001 ;;		On exit  : 0/0
 21002 ;;		Unchanged: 0/0
 21003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21008 ;;Total ram usage:        0 bytes
 21009 ;; Hardware stack levels used:    1
 21010 ;; Hardware stack levels required when called:   12
 21011 ;; This function calls:
 21012 ;;		_GenerateEvt
 21013 ;; This function is called by:
 21014 ;;		_MyApp_Task
 21015 ;; This function uses a non-reentrant model
 21016 ;;
 21017                           
 21018                           	psect	text94
 21019  006208                     __ptext94:
 21020                           	opt stack 0
 21021  006208                     _Mdm_RequestSmsData:
 21022                           	opt stack 15
 21023                           
 21024                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 21025                           
 21026                           ; BSR set to: 0
 21027                           ;incstack = 0
 21028  006208  0EDD               	movlw	low _GetSmsText
 21029  00620A  0100               	movlb	0	; () banked
 21030  00620C  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 21031  00620E  0E00               	movlw	high _GetSmsText
 21032  006210  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 21033  006212  EC97  F030         	call	_GenerateEvt	;wreg free
 21034  006216  0012               	return		;funcret
 21035  006218                     __end_of_Mdm_RequestSmsData:
 21036                           	opt stack 0
 21037                           tosu	equ	0xFFF
 21038                           tosh	equ	0xFFE
 21039                           tosl	equ	0xFFD
 21040                           pclath	equ	0xFFA
 21041                           tblptru	equ	0xFF8
 21042                           tblptrh	equ	0xFF7
 21043                           tblptrl	equ	0xFF6
 21044                           tablat	equ	0xFF5
 21045                           prodh	equ	0xFF4
 21046                           prodl	equ	0xFF3
 21047                           intcon	equ	0xFF2
 21048                           intcon2	equ	0xFF1
 21049                           intcon3	equ	0xFF0
 21050                           indf0	equ	0xFEF
 21051                           postinc0	equ	0xFEE
 21052                           plusw0	equ	0xFEB
 21053                           fsr0h	equ	0xFEA
 21054                           fsr0l	equ	0xFE9
 21055                           wreg	equ	0xFE8
 21056                           indf1	equ	0xFE7
 21057                           postinc1	equ	0xFE6
 21058                           postdec1	equ	0xFE5
 21059                           fsr1h	equ	0xFE2
 21060                           fsr1l	equ	0xFE1
 21061                           indf2	equ	0xFDF
 21062                           postinc2	equ	0xFDE
 21063                           postdec2	equ	0xFDD
 21064                           plusw2	equ	0xFDB
 21065                           fsr2h	equ	0xFDA
 21066                           fsr2l	equ	0xFD9
 21067                           status	equ	0xFD8
 21068                           
 21069 ;; *************** function _Mdm_IsSmsReceived *****************
 21070 ;; Defined at:
 21071 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21072 ;; Parameters:    Size  Location     Type
 21073 ;;		None
 21074 ;; Auto vars:     Size  Location     Type
 21075 ;;  Ret             1   33[BANK0 ] enum E8928
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      enum E8928
 21078 ;; Registers used:
 21079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21089 ;;Total ram usage:        1 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:   12
 21092 ;; This function calls:
 21093 ;;		_ReceiveEvt
 21094 ;; This function is called by:
 21095 ;;		_MyApp_Task
 21096 ;; This function uses a non-reentrant model
 21097 ;;
 21098                           
 21099                           	psect	text95
 21100  005EC6                     __ptext95:
 21101                           	opt stack 0
 21102  005EC6                     _Mdm_IsSmsReceived:
 21103                           	opt stack 15
 21104                           
 21105                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 21106                           
 21107                           ;incstack = 0
 21108  005EC6  0E00               	movlw	0
 21109  005EC8  0100               	movlb	0	; () banked
 21110  005ECA  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21111                           
 21112                           ; BSR set to: 0
 21113                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 21114  005ECC  0EDE               	movlw	low _SmsEvent
 21115  005ECE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21116  005ED0  0E00               	movlw	high _SmsEvent
 21117  005ED2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21118  005ED4  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 21119  005ED8  0900               	iorlw	0
 21120  005EDA  B4D8               	btfsc	status,2,c
 21121  005EDC  D003               	goto	l1136
 21122                           
 21123                           ;mdm_gsm_gprs.c: 947: {
 21124                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 21125  005EDE  0E01               	movlw	1
 21126  005EE0  0100               	movlb	0	; () banked
 21127  005EE2  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 21128  005EE4                     l1136:
 21129                           
 21130                           ;mdm_gsm_gprs.c: 949: }
 21131                           ;mdm_gsm_gprs.c: 951: return Ret;
 21132  005EE4  0100               	movlb	0	; () banked
 21133  005EE6  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 21134  005EE8  0012               	return	
 21135  005EEA                     __end_of_Mdm_IsSmsReceived:
 21136                           	opt stack 0
 21137                           tosu	equ	0xFFF
 21138                           tosh	equ	0xFFE
 21139                           tosl	equ	0xFFD
 21140                           pclath	equ	0xFFA
 21141                           tblptru	equ	0xFF8
 21142                           tblptrh	equ	0xFF7
 21143                           tblptrl	equ	0xFF6
 21144                           tablat	equ	0xFF5
 21145                           prodh	equ	0xFF4
 21146                           prodl	equ	0xFF3
 21147                           intcon	equ	0xFF2
 21148                           intcon2	equ	0xFF1
 21149                           intcon3	equ	0xFF0
 21150                           indf0	equ	0xFEF
 21151                           postinc0	equ	0xFEE
 21152                           plusw0	equ	0xFEB
 21153                           fsr0h	equ	0xFEA
 21154                           fsr0l	equ	0xFE9
 21155                           wreg	equ	0xFE8
 21156                           indf1	equ	0xFE7
 21157                           postinc1	equ	0xFE6
 21158                           postdec1	equ	0xFE5
 21159                           fsr1h	equ	0xFE2
 21160                           fsr1l	equ	0xFE1
 21161                           indf2	equ	0xFDF
 21162                           postinc2	equ	0xFDE
 21163                           postdec2	equ	0xFDD
 21164                           plusw2	equ	0xFDB
 21165                           fsr2h	equ	0xFDA
 21166                           fsr2l	equ	0xFD9
 21167                           status	equ	0xFD8
 21168                           
 21169 ;; *************** function _Mdm_IsRinging *****************
 21170 ;; Defined at:
 21171 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21172 ;; Parameters:    Size  Location     Type
 21173 ;;		None
 21174 ;; Auto vars:     Size  Location     Type
 21175 ;;  Ret             1   33[BANK0 ] enum E8924
 21176 ;; Return value:  Size  Location     Type
 21177 ;;                  1    wreg      enum E8924
 21178 ;; Registers used:
 21179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21180 ;; Tracked objects:
 21181 ;;		On entry : 0/0
 21182 ;;		On exit  : 0/0
 21183 ;;		Unchanged: 0/0
 21184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21189 ;;Total ram usage:        1 bytes
 21190 ;; Hardware stack levels used:    1
 21191 ;; Hardware stack levels required when called:   12
 21192 ;; This function calls:
 21193 ;;		_ReceiveEvt
 21194 ;; This function is called by:
 21195 ;;		_MyApp_Task
 21196 ;; This function uses a non-reentrant model
 21197 ;;
 21198                           
 21199                           	psect	text96
 21200  005EEA                     __ptext96:
 21201                           	opt stack 0
 21202  005EEA                     _Mdm_IsRinging:
 21203                           	opt stack 15
 21204                           
 21205                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;incstack = 0
 21209  005EEA  0E00               	movlw	0
 21210  005EEC  0100               	movlb	0	; () banked
 21211  005EEE  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21212                           
 21213                           ; BSR set to: 0
 21214                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 21215  005EF0  0EE0               	movlw	low _RingEvent
 21216  005EF2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21217  005EF4  0E00               	movlw	high _RingEvent
 21218  005EF6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21219  005EF8  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 21220  005EFC  0900               	iorlw	0
 21221  005EFE  B4D8               	btfsc	status,2,c
 21222  005F00  D003               	goto	l1152
 21223                           
 21224                           ;mdm_gsm_gprs.c: 1030: {
 21225                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 21226  005F02  0E01               	movlw	1
 21227  005F04  0100               	movlb	0	; () banked
 21228  005F06  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 21229  005F08                     l1152:
 21230                           
 21231                           ;mdm_gsm_gprs.c: 1032: }
 21232                           ;mdm_gsm_gprs.c: 1034: return Ret;
 21233  005F08  0100               	movlb	0	; () banked
 21234  005F0A  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 21235  005F0C  0012               	return	
 21236  005F0E                     __end_of_Mdm_IsRinging:
 21237                           	opt stack 0
 21238                           tosu	equ	0xFFF
 21239                           tosh	equ	0xFFE
 21240                           tosl	equ	0xFFD
 21241                           pclath	equ	0xFFA
 21242                           tblptru	equ	0xFF8
 21243                           tblptrh	equ	0xFF7
 21244                           tblptrl	equ	0xFF6
 21245                           tablat	equ	0xFF5
 21246                           prodh	equ	0xFF4
 21247                           prodl	equ	0xFF3
 21248                           intcon	equ	0xFF2
 21249                           intcon2	equ	0xFF1
 21250                           intcon3	equ	0xFF0
 21251                           indf0	equ	0xFEF
 21252                           postinc0	equ	0xFEE
 21253                           plusw0	equ	0xFEB
 21254                           fsr0h	equ	0xFEA
 21255                           fsr0l	equ	0xFE9
 21256                           wreg	equ	0xFE8
 21257                           indf1	equ	0xFE7
 21258                           postinc1	equ	0xFE6
 21259                           postdec1	equ	0xFE5
 21260                           fsr1h	equ	0xFE2
 21261                           fsr1l	equ	0xFE1
 21262                           indf2	equ	0xFDF
 21263                           postinc2	equ	0xFDE
 21264                           postdec2	equ	0xFDD
 21265                           plusw2	equ	0xFDB
 21266                           fsr2h	equ	0xFDA
 21267                           fsr2l	equ	0xFD9
 21268                           status	equ	0xFD8
 21269                           
 21270 ;; *************** function _Mdm_HangPhoneCall *****************
 21271 ;; Defined at:
 21272 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21273 ;; Parameters:    Size  Location     Type
 21274 ;;		None
 21275 ;; Auto vars:     Size  Location     Type
 21276 ;;		None
 21277 ;; Return value:  Size  Location     Type
 21278 ;;                  1    wreg      void 
 21279 ;; Registers used:
 21280 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/0
 21283 ;;		On exit  : 0/0
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21290 ;;Total ram usage:        0 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; Hardware stack levels required when called:   13
 21293 ;; This function calls:
 21294 ;;		_Uart_WriteConstString
 21295 ;; This function is called by:
 21296 ;;		_MyApp_Task
 21297 ;; This function uses a non-reentrant model
 21298 ;;
 21299                           
 21300                           	psect	text97
 21301  0061C4                     __ptext97:
 21302                           	opt stack 0
 21303  0061C4                     _Mdm_HangPhoneCall:
 21304                           	opt stack 14
 21305                           
 21306                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;incstack = 0
 21310  0061C4  0EEF               	movlw	low STR_6
 21311  0061C6  0100               	movlb	0	; () banked
 21312  0061C8  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21313  0061CA  0EFF               	movlw	high STR_6
 21314  0061CC  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21315  0061CE  0E01               	movlw	1
 21316  0061D0  EC85  F02C         	call	_Uart_WriteConstString
 21317  0061D4  0012               	return		;funcret
 21318  0061D6                     __end_of_Mdm_HangPhoneCall:
 21319                           	opt stack 0
 21320                           tosu	equ	0xFFF
 21321                           tosh	equ	0xFFE
 21322                           tosl	equ	0xFFD
 21323                           pclath	equ	0xFFA
 21324                           tblptru	equ	0xFF8
 21325                           tblptrh	equ	0xFF7
 21326                           tblptrl	equ	0xFF6
 21327                           tablat	equ	0xFF5
 21328                           prodh	equ	0xFF4
 21329                           prodl	equ	0xFF3
 21330                           intcon	equ	0xFF2
 21331                           intcon2	equ	0xFF1
 21332                           intcon3	equ	0xFF0
 21333                           indf0	equ	0xFEF
 21334                           postinc0	equ	0xFEE
 21335                           plusw0	equ	0xFEB
 21336                           fsr0h	equ	0xFEA
 21337                           fsr0l	equ	0xFE9
 21338                           wreg	equ	0xFE8
 21339                           indf1	equ	0xFE7
 21340                           postinc1	equ	0xFE6
 21341                           postdec1	equ	0xFE5
 21342                           fsr1h	equ	0xFE2
 21343                           fsr1l	equ	0xFE1
 21344                           indf2	equ	0xFDF
 21345                           postinc2	equ	0xFDE
 21346                           postdec2	equ	0xFDD
 21347                           plusw2	equ	0xFDB
 21348                           fsr2h	equ	0xFDA
 21349                           fsr2l	equ	0xFD9
 21350                           status	equ	0xFD8
 21351                           
 21352 ;; *************** function _Led_SetLedBlinkTime *****************
 21353 ;; Defined at:
 21354 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 21355 ;; Parameters:    Size  Location     Type
 21356 ;;  Led             1    wreg     unsigned char 
 21357 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 21358 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 21359 ;; Auto vars:     Size  Location     Type
 21360 ;;  Led             1   33[BANK0 ] unsigned char 
 21361 ;; Return value:  Size  Location     Type
 21362 ;;                  1    wreg      void 
 21363 ;; Registers used:
 21364 ;;		wreg, status,2, status,0
 21365 ;; Tracked objects:
 21366 ;;		On entry : 0/0
 21367 ;;		On exit  : 0/0
 21368 ;;		Unchanged: 0/0
 21369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21374 ;;Total ram usage:        5 bytes
 21375 ;; Hardware stack levels used:    1
 21376 ;; Hardware stack levels required when called:   11
 21377 ;; This function calls:
 21378 ;;		Nothing
 21379 ;; This function is called by:
 21380 ;;		_MyApp_Task
 21381 ;; This function uses a non-reentrant model
 21382 ;;
 21383                           
 21384                           	psect	text98
 21385  005400                     __ptext98:
 21386                           	opt stack 0
 21387  005400                     _Led_SetLedBlinkTime:
 21388                           	opt stack 16
 21389                           
 21390                           ;incstack = 0
 21391                           ;Led_SetLedBlinkTime@Led stored from wreg
 21392  005400  0100               	movlb	0	; () banked
 21393  005402  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 21394                           
 21395                           ;led.c: 374: switch (Led)
 21396  005404  D01B               	goto	l2113
 21397  005406                     l2114:
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 21401  005406  C07D  F36F         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 21402  00540A  C07E  F370         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 21403                           
 21404                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 21405  00540E  C07F  F371         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 21406  005412  C080  F372         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 21407                           
 21408                           ;led.c: 379: break;
 21409  005416  0012               	return	
 21410  005418                     l2116:
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 21414  005418  C07D  F366         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21415  00541C  C07E  F367         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21416                           
 21417                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 21418  005420  C07F  F368         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21419  005424  C080  F369         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21420                           
 21421                           ;led.c: 384: break;
 21422  005428  0012               	return	
 21423  00542A                     l2117:
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 21427  00542A  C07D  F366         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 21428  00542E  C07E  F367         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 21429                           
 21430                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 21431  005432  C07F  F368         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 21432  005436  C080  F369         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 21433                           
 21434                           ; BSR set to: 0
 21435                           ;led.c: 393: }
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;led.c: 392: break;
 21439                           
 21440                           ;led.c: 391: default:
 21441                           
 21442                           ;led.c: 389: break;
 21443  00543A  0012               	return	
 21444  00543C                     l2113:
 21445                           
 21446                           ; BSR set to: 0
 21447  00543C  0100               	movlb	0	; () banked
 21448  00543E  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 21449                           
 21450                           ; Switch size 1, requested type "space"
 21451                           ; Number of cases is 3, Range of values is 1 to 3
 21452                           ; switch strategies available:
 21453                           ; Name         Instructions Cycles
 21454                           ; simple_byte           10     6 (average)
 21455                           ;	Chosen strategy is simple_byte
 21456  005440  0A01               	xorlw	1	; case 1
 21457  005442  B4D8               	btfsc	status,2,c
 21458  005444  D7E0               	goto	l2114
 21459  005446  0A03               	xorlw	3	; case 2
 21460  005448  B4D8               	btfsc	status,2,c
 21461  00544A  D7E6               	goto	l2116
 21462  00544C  0A01               	xorlw	1	; case 3
 21463  00544E  A4D8               	btfss	status,2,c
 21464  005450  0012               	return	
 21465  005452  D7EB               	goto	l2117
 21466  005454                     __end_of_Led_SetLedBlinkTime:
 21467                           	opt stack 0
 21468                           tosu	equ	0xFFF
 21469                           tosh	equ	0xFFE
 21470                           tosl	equ	0xFFD
 21471                           pclath	equ	0xFFA
 21472                           tblptru	equ	0xFF8
 21473                           tblptrh	equ	0xFF7
 21474                           tblptrl	equ	0xFF6
 21475                           tablat	equ	0xFF5
 21476                           prodh	equ	0xFF4
 21477                           prodl	equ	0xFF3
 21478                           intcon	equ	0xFF2
 21479                           intcon2	equ	0xFF1
 21480                           intcon3	equ	0xFF0
 21481                           indf0	equ	0xFEF
 21482                           postinc0	equ	0xFEE
 21483                           plusw0	equ	0xFEB
 21484                           fsr0h	equ	0xFEA
 21485                           fsr0l	equ	0xFE9
 21486                           wreg	equ	0xFE8
 21487                           indf1	equ	0xFE7
 21488                           postinc1	equ	0xFE6
 21489                           postdec1	equ	0xFE5
 21490                           fsr1h	equ	0xFE2
 21491                           fsr1l	equ	0xFE1
 21492                           indf2	equ	0xFDF
 21493                           postinc2	equ	0xFDE
 21494                           postdec2	equ	0xFDD
 21495                           plusw2	equ	0xFDB
 21496                           fsr2h	equ	0xFDA
 21497                           fsr2l	equ	0xFD9
 21498                           status	equ	0xFD8
 21499                           
 21500 ;; *************** function _GetCallerNumber *****************
 21501 ;; Defined at:
 21502 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21503 ;; Parameters:    Size  Location     Type
 21504 ;;		None
 21505 ;; Auto vars:     Size  Location     Type
 21506 ;;		None
 21507 ;; Return value:  Size  Location     Type
 21508 ;;                  2   35[BANK0 ] PTR unsigned char 
 21509 ;; Registers used:
 21510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21511 ;; Tracked objects:
 21512 ;;		On entry : 0/0
 21513 ;;		On exit  : 0/0
 21514 ;;		Unchanged: 0/0
 21515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21520 ;;Total ram usage:        2 bytes
 21521 ;; Hardware stack levels used:    1
 21522 ;; Hardware stack levels required when called:   12
 21523 ;; This function calls:
 21524 ;;		_ClearBuffer
 21525 ;;		_ReceiveEvt
 21526 ;; This function is called by:
 21527 ;;		_MyApp_Task
 21528 ;; This function uses a non-reentrant model
 21529 ;;
 21530                           
 21531                           	psect	text99
 21532  005BB4                     __ptext99:
 21533                           	opt stack 0
 21534  005BB4                     _GetCallerNumber:
 21535                           	opt stack 15
 21536                           
 21537                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 21538                           
 21539                           ; BSR set to: 0
 21540                           ;incstack = 0
 21541  005BB4  0EDF               	movlw	low _ClipEvent
 21542  005BB6  0100               	movlb	0	; () banked
 21543  005BB8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 21544  005BBA  0E00               	movlw	high _ClipEvent
 21545  005BBC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21546  005BBE  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 21547  005BC2  0900               	iorlw	0
 21548  005BC4  A4D8               	btfss	status,2,c
 21549  005BC6  D00B               	goto	l1156
 21550                           
 21551                           ;mdm_gsm_gprs.c: 1040: {
 21552                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 21553  005BC8  0EB8               	movlw	low _callerNumber
 21554  005BCA  0100               	movlb	0	; () banked
 21555  005BCC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 21556  005BCE  0E04               	movlw	high _callerNumber
 21557  005BD0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 21558  005BD2  0E00               	movlw	0
 21559  005BD4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 21560  005BD6  0E0D               	movlw	13
 21561  005BD8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 21562  005BDA  ECF5  F02D         	call	_ClearBuffer	;wreg free
 21563  005BDE                     l1156:
 21564                           
 21565                           ;mdm_gsm_gprs.c: 1042: }
 21566                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 21567  005BDE  0EB8               	movlw	low _callerNumber
 21568  005BE0  0100               	movlb	0	; () banked
 21569  005BE2  6F83               	movwf	?_GetCallerNumber& (0+255),b
 21570  005BE4  0E04               	movlw	high _callerNumber
 21571  005BE6  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 21572  005BE8  0012               	return	
 21573  005BEA                     __end_of_GetCallerNumber:
 21574                           	opt stack 0
 21575                           tosu	equ	0xFFF
 21576                           tosh	equ	0xFFE
 21577                           tosl	equ	0xFFD
 21578                           pclath	equ	0xFFA
 21579                           tblptru	equ	0xFF8
 21580                           tblptrh	equ	0xFF7
 21581                           tblptrl	equ	0xFF6
 21582                           tablat	equ	0xFF5
 21583                           prodh	equ	0xFF4
 21584                           prodl	equ	0xFF3
 21585                           intcon	equ	0xFF2
 21586                           intcon2	equ	0xFF1
 21587                           intcon3	equ	0xFF0
 21588                           indf0	equ	0xFEF
 21589                           postinc0	equ	0xFEE
 21590                           plusw0	equ	0xFEB
 21591                           fsr0h	equ	0xFEA
 21592                           fsr0l	equ	0xFE9
 21593                           wreg	equ	0xFE8
 21594                           indf1	equ	0xFE7
 21595                           postinc1	equ	0xFE6
 21596                           postdec1	equ	0xFE5
 21597                           fsr1h	equ	0xFE2
 21598                           fsr1l	equ	0xFE1
 21599                           indf2	equ	0xFDF
 21600                           postinc2	equ	0xFDE
 21601                           postdec2	equ	0xFDD
 21602                           plusw2	equ	0xFDB
 21603                           fsr2h	equ	0xFDA
 21604                           fsr2l	equ	0xFD9
 21605                           status	equ	0xFD8
 21606                           
 21607 ;; *************** function _Eeprom_Read *****************
 21608 ;; Defined at:
 21609 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 21610 ;; Parameters:    Size  Location     Type
 21611 ;;  MemoryAddres    1    wreg     unsigned char 
 21612 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 21613 ;;		 -> MyApp_Task@phone(14), 
 21614 ;;  DataLength      1   75[BANK0 ] unsigned char 
 21615 ;; Auto vars:     Size  Location     Type
 21616 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 21617 ;;  QuerySts        1   79[BANK0 ] enum E8931
 21618 ;;  ReadSts         1   78[BANK0 ] enum E8957
 21619 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 21620 ;; Return value:  Size  Location     Type
 21621 ;;                  1    wreg      enum E8245
 21622 ;; Registers used:
 21623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21624 ;; Tracked objects:
 21625 ;;		On entry : 0/0
 21626 ;;		On exit  : 0/0
 21627 ;;		Unchanged: 0/0
 21628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21629 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21630 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21632 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21633 ;;Total ram usage:        7 bytes
 21634 ;; Hardware stack levels used:    1
 21635 ;; Hardware stack levels required when called:   16
 21636 ;; This function calls:
 21637 ;;		_I2cSlv_QueryI2cData
 21638 ;; This function is called by:
 21639 ;;		_MyApp_Task
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643                           	psect	text100
 21644  005454                     __ptext100:
 21645                           	opt stack 0
 21646  005454                     _Eeprom_Read:
 21647                           	opt stack 11
 21648                           
 21649                           ; BSR set to: 0
 21650                           ;incstack = 0
 21651                           ;Eeprom_Read@MemoryAddress stored from wreg
 21652  005454  0100               	movlb	0	; () banked
 21653  005456  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 21654                           
 21655                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 21656  005458  0E50               	movlw	80
 21657  00545A  0100               	movlb	0	; () banked
 21658  00545C  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 21659                           
 21660                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 21661  00545E  0E00               	movlw	0
 21662  005460  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21663                           
 21664                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 21665  005462  0E02               	movlw	2
 21666  005464  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21667                           
 21668                           ; BSR set to: 0
 21669                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 21670  005466  C0AC  F1F6         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 21671                           
 21672                           ; BSR set to: 0
 21673                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 21674  00546A  0EF6               	movlw	low _ReadAddress
 21675  00546C  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 21676  00546E  0E01               	movlw	high _ReadAddress
 21677  005470  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 21678  005472  0E01               	movlw	1
 21679  005474  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 21680  005476  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 21681  00547A  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 21682  00547E  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 21683  005482  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 21684  005486  ECB9  F01B         	call	_I2cSlv_QueryI2cData	;wreg free
 21685  00548A  0100               	movlb	0	; () banked
 21686  00548C  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 21690  00548E  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 21691  005490  A4D8               	btfss	status,2,c
 21692  005492  D002               	goto	l2619
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;eeprom_if.c: 114: {
 21696                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 21697  005494  0E00               	movlw	0
 21698  005496  D005               	goto	L26
 21699  005498                     l2619:
 21700                           
 21701                           ; BSR set to: 0
 21702                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 21703                           
 21704                           ; BSR set to: 0
 21705  005498  0E02               	movlw	2
 21706  00549A  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 21707  00549C  A4D8               	btfss	status,2,c
 21708  00549E  D002               	goto	l2621
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;eeprom_if.c: 118: {
 21712                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 21713  0054A0  0E01               	movlw	1
 21714  0054A2                     L26:
 21715  0054A2  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 21716  0054A4                     l2621:
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;eeprom_if.c: 120: }
 21720                           ;eeprom_if.c: 121: return ReadSts;
 21721                           
 21722                           ; BSR set to: 0
 21723  0054A4  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 21724  0054A6  0012               	return	
 21725  0054A8                     __end_of_Eeprom_Read:
 21726                           	opt stack 0
 21727                           tosu	equ	0xFFF
 21728                           tosh	equ	0xFFE
 21729                           tosl	equ	0xFFD
 21730                           pclath	equ	0xFFA
 21731                           tblptru	equ	0xFF8
 21732                           tblptrh	equ	0xFF7
 21733                           tblptrl	equ	0xFF6
 21734                           tablat	equ	0xFF5
 21735                           prodh	equ	0xFF4
 21736                           prodl	equ	0xFF3
 21737                           intcon	equ	0xFF2
 21738                           intcon2	equ	0xFF1
 21739                           intcon3	equ	0xFF0
 21740                           indf0	equ	0xFEF
 21741                           postinc0	equ	0xFEE
 21742                           plusw0	equ	0xFEB
 21743                           fsr0h	equ	0xFEA
 21744                           fsr0l	equ	0xFE9
 21745                           wreg	equ	0xFE8
 21746                           indf1	equ	0xFE7
 21747                           postinc1	equ	0xFE6
 21748                           postdec1	equ	0xFE5
 21749                           fsr1h	equ	0xFE2
 21750                           fsr1l	equ	0xFE1
 21751                           indf2	equ	0xFDF
 21752                           postinc2	equ	0xFDE
 21753                           postdec2	equ	0xFDD
 21754                           plusw2	equ	0xFDB
 21755                           fsr2h	equ	0xFDA
 21756                           fsr2l	equ	0xFD9
 21757                           status	equ	0xFD8
 21758                           
 21759 ;; *************** function _I2cSlv_QueryI2cData *****************
 21760 ;; Defined at:
 21761 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21762 ;; Parameters:    Size  Location     Type
 21763 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 21764 ;;		 -> ReadAddress(1), 
 21765 ;;  TxLen           1   68[BANK0 ] unsigned char 
 21766 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 21767 ;;		 -> MyApp_Task@phone(14), 
 21768 ;;  RxLen           1   71[BANK0 ] unsigned char 
 21769 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 21770 ;; Auto vars:     Size  Location     Type
 21771 ;;		None
 21772 ;; Return value:  Size  Location     Type
 21773 ;;                  1    wreg      enum E8944
 21774 ;; Registers used:
 21775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21776 ;; Tracked objects:
 21777 ;;		On entry : 0/0
 21778 ;;		On exit  : 0/0
 21779 ;;		Unchanged: 0/0
 21780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21781 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21784 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21785 ;;Total ram usage:        7 bytes
 21786 ;; Hardware stack levels used:    1
 21787 ;; Hardware stack levels required when called:   15
 21788 ;; This function calls:
 21789 ;;		_I2cSlv_I2cReadMsgSts
 21790 ;;		_I2cSlv_ReceiveI2cMsg
 21791 ;;		_I2cSlv_SendI2cMsg
 21792 ;;		_OsTmr_GetTimerStatus
 21793 ;;		_OsTmr_StartTimer
 21794 ;;		_OsTmr_Wait
 21795 ;; This function is called by:
 21796 ;;		_Eeprom_Read
 21797 ;; This function uses a non-reentrant model
 21798 ;;
 21799                           
 21800                           	psect	text101
 21801  003772                     __ptext101:
 21802                           	opt stack 0
 21803  003772                     _I2cSlv_QueryI2cData:
 21804                           	opt stack 11
 21805                           
 21806                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 21807                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 21808                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 21809                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 21810                           ;i2c_slv.c: 388: switch(I2cOpState)
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;incstack = 0
 21814  003772  D05B               	goto	l1437
 21815  003774                     
 21816                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 21817  003774  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 21818  003778  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 21819  00377C  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 21820  003780  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 21821  003784  EC27  F02D         	call	_I2cSlv_SendI2cMsg	;wreg free
 21822                           
 21823                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 21824  003788  0E01               	movlw	1
 21825  00378A  0101               	movlb	1	; () banked
 21826  00378C  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21827                           
 21828                           ; BSR set to: 1
 21829                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 21830  00378E  0E00               	movlw	0
 21831  003790  D04A               	goto	L30
 21832  003792                     
 21833                           ; BSR set to: 1
 21834                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 21835                           
 21836                           ; BSR set to: 1
 21837  003792  0E44               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 21838  003794  0100               	movlb	0	; () banked
 21839  003796  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 21840  003798  0E03               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 21841  00379A  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 21842  00379C  0EF4               	movlw	244
 21843  00379E  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 21844  0037A0  0E01               	movlw	1
 21845  0037A2  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 21846  0037A4  0E00               	movlw	0
 21847  0037A6  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 21848  0037A8  0E00               	movlw	0
 21849  0037AA  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 21850  0037AC  EC82  F026         	call	_OsTmr_Wait	;wreg free
 21851  0037B0  06E8               	decf	wreg,f,c
 21852  0037B2  A4D8               	btfss	status,2,c
 21853  0037B4  D036               	goto	l1445
 21854                           
 21855                           ;i2c_slv.c: 402: {
 21856                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 21857  0037B6  0E39               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21858  0037B8  0100               	movlb	0	; () banked
 21859  0037BA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 21860  0037BC  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21861  0037BE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 21862  0037C0  0EC4               	movlw	196
 21863  0037C2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 21864  0037C4  0E09               	movlw	9
 21865  0037C6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 21866  0037C8  0E00               	movlw	0
 21867  0037CA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 21868  0037CC  0E00               	movlw	0
 21869  0037CE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 21870  0037D0  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 21871                           
 21872                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 21873  0037D4  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 21874  0037D8  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 21875  0037DC  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 21876  0037E0  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 21877  0037E4  ECC8  F02C         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 21878                           
 21879                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 21880  0037E8  0E02               	movlw	2
 21881  0037EA  0101               	movlb	1	; () banked
 21882  0037EC  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21883  0037EE  D019               	goto	l1445
 21884  0037F0                     
 21885                           ; BSR set to: 1
 21886                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 21887                           
 21888                           ; BSR set to: 1
 21889  0037F0  ECEE  F02F         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 21890  0037F4  06E8               	decf	wreg,f,c
 21891  0037F6  A4D8               	btfss	status,2,c
 21892  0037F8  D005               	goto	l1443
 21893                           
 21894                           ;i2c_slv.c: 414: {
 21895                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 21896  0037FA  0E00               	movlw	0
 21897  0037FC  0101               	movlb	1	; () banked
 21898  0037FE  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21899                           
 21900                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 21901  003800  0E01               	movlw	1
 21902  003802  D011               	goto	L30
 21903  003804                     l1443:
 21904                           
 21905                           ;i2c_slv.c: 420: else
 21906                           ;i2c_slv.c: 421: {
 21907                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 21908                           
 21909                           ; BSR set to: 1
 21910  003804  0E39               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 21911  003806  0100               	movlb	0	; () banked
 21912  003808  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 21913  00380A  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 21914  00380C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 21915  00380E  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 21916  003812  06E8               	decf	wreg,f,c
 21917  003814  A4D8               	btfss	status,2,c
 21918  003816  D005               	goto	l1445
 21919                           
 21920                           ;i2c_slv.c: 423: {
 21921                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 21922  003818  0E00               	movlw	0
 21923  00381A  0101               	movlb	1	; () banked
 21924  00381C  6FE8               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 21925                           
 21926                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 21927  00381E  0E02               	movlw	2
 21928  003820  D002               	goto	L30
 21929  003822                     l1445:
 21930                           
 21931                           ;i2c_slv.c: 429: else
 21932                           ;i2c_slv.c: 430: {
 21933                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 21934                           
 21935                           ; BSR set to: 1
 21936  003822  0E00               	movlw	0
 21937  003824  0101               	movlb	1	; () banked
 21938  003826                     L30:
 21939  003826  6FE7               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 21940                           
 21941                           ; BSR set to: 1
 21942                           ;i2c_slv.c: 439: }
 21943                           
 21944                           ; BSR set to: 1
 21945                           ;i2c_slv.c: 438: break;
 21946                           
 21947                           ;i2c_slv.c: 437: default:
 21948                           
 21949                           ; BSR set to: 1
 21950                           ;i2c_slv.c: 433: }
 21951                           ;i2c_slv.c: 434: }
 21952                           ;i2c_slv.c: 435: break;
 21953                           
 21954                           ; BSR set to: 1
 21955  003828  D00B               	goto	l1439
 21956  00382A                     l1437:
 21957                           
 21958                           ; BSR set to: 1
 21959  00382A  0101               	movlb	1	; () banked
 21960  00382C  51E8               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 21961                           
 21962                           ; Switch size 1, requested type "space"
 21963                           ; Number of cases is 3, Range of values is 0 to 2
 21964                           ; switch strategies available:
 21965                           ; Name         Instructions Cycles
 21966                           ; simple_byte           10     6 (average)
 21967                           ;	Chosen strategy is simple_byte
 21968  00382E  0A00               	xorlw	0	; case 0
 21969  003830  B4D8               	btfsc	status,2,c
 21970  003832  D7A0               	goto	l1438
 21971  003834  0A01               	xorlw	1	; case 1
 21972  003836  B4D8               	btfsc	status,2,c
 21973  003838  D7AC               	goto	l1440
 21974  00383A  0A03               	xorlw	3	; case 2
 21975  00383C  B4D8               	btfsc	status,2,c
 21976  00383E  D7D8               	goto	l1442
 21977  003840                     l1439:
 21978                           
 21979                           ; BSR set to: 1
 21980                           ;i2c_slv.c: 441: return Ret;
 21981                           
 21982                           ; BSR set to: 1
 21983  003840  51E7               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 21984  003842  0012               	return	
 21985  003844                     __end_of_I2cSlv_QueryI2cData:
 21986                           	opt stack 0
 21987                           tosu	equ	0xFFF
 21988                           tosh	equ	0xFFE
 21989                           tosl	equ	0xFFD
 21990                           pclath	equ	0xFFA
 21991                           tblptru	equ	0xFF8
 21992                           tblptrh	equ	0xFF7
 21993                           tblptrl	equ	0xFF6
 21994                           tablat	equ	0xFF5
 21995                           prodh	equ	0xFF4
 21996                           prodl	equ	0xFF3
 21997                           intcon	equ	0xFF2
 21998                           intcon2	equ	0xFF1
 21999                           intcon3	equ	0xFF0
 22000                           indf0	equ	0xFEF
 22001                           postinc0	equ	0xFEE
 22002                           plusw0	equ	0xFEB
 22003                           fsr0h	equ	0xFEA
 22004                           fsr0l	equ	0xFE9
 22005                           wreg	equ	0xFE8
 22006                           indf1	equ	0xFE7
 22007                           postinc1	equ	0xFE6
 22008                           postdec1	equ	0xFE5
 22009                           fsr1h	equ	0xFE2
 22010                           fsr1l	equ	0xFE1
 22011                           indf2	equ	0xFDF
 22012                           postinc2	equ	0xFDE
 22013                           postdec2	equ	0xFDD
 22014                           plusw2	equ	0xFDB
 22015                           fsr2h	equ	0xFDA
 22016                           fsr2l	equ	0xFD9
 22017                           status	equ	0xFD8
 22018                           
 22019 ;; *************** function _OsTmr_Wait *****************
 22020 ;; Defined at:
 22021 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 22022 ;; Parameters:    Size  Location     Type
 22023 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 22024 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 22025 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;  Ret             1   65[BANK0 ] enum E7749
 22028 ;; Return value:  Size  Location     Type
 22029 ;;                  1    wreg      enum E7749
 22030 ;; Registers used:
 22031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22032 ;; Tracked objects:
 22033 ;;		On entry : 0/0
 22034 ;;		On exit  : 0/0
 22035 ;;		Unchanged: 0/0
 22036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22040 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22041 ;;Total ram usage:        7 bytes
 22042 ;; Hardware stack levels used:    1
 22043 ;; Hardware stack levels required when called:   14
 22044 ;; This function calls:
 22045 ;;		_OsTmr_GetTimerStatus
 22046 ;;		_OsTmr_StartTimer
 22047 ;; This function is called by:
 22048 ;;		_I2cSlv_QueryI2cData
 22049 ;;		_Terminal
 22050 ;; This function uses a non-reentrant model
 22051 ;;
 22052                           
 22053                           	psect	text102
 22054  004D04                     __ptext102:
 22055                           	opt stack 0
 22056  004D04                     _OsTmr_Wait:
 22057                           	opt stack 11
 22058                           
 22059                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 22060                           
 22061                           ; BSR set to: 1
 22062                           ;incstack = 0
 22063  004D04  0E00               	movlw	0
 22064  004D06  0100               	movlb	0	; () banked
 22065  004D08  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22066                           
 22067                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 22068  004D0A  D02D               	goto	l855
 22069  004D0C                     
 22070                           ; BSR set to: 0
 22071                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 22072                           
 22073                           ; BSR set to: 0
 22074  004D0C  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 22075  004D10  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 22076  004D14  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 22077  004D18  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 22078  004D1C  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 22079  004D20  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 22080  004D24  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 22081                           
 22082                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 22083  004D28  0100               	movlb	0	; () banked
 22084  004D2A  EE20 F00A          	lfsr	2,10
 22085  004D2E  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22086  004D30  26D9               	addwf	fsr2l,f,c
 22087  004D32  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22088  004D34  22DA               	addwfc	fsr2h,f,c
 22089  004D36  0E01               	movlw	1
 22090  004D38  6EDF               	movwf	indf2,c
 22091                           
 22092                           ;os_timers.c: 165: break;
 22093  004D3A  D022               	goto	l857
 22094  004D3C                     
 22095                           ; BSR set to: 0
 22096                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 22097                           
 22098                           ; BSR set to: 0
 22099  004D3C  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 22100  004D40  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 22101  004D44  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 22102  004D48  06E8               	decf	wreg,f,c
 22103  004D4A  A4D8               	btfss	status,2,c
 22104  004D4C  D019               	goto	l857
 22105                           
 22106                           ;os_timers.c: 170: {
 22107                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 22108  004D4E  0100               	movlb	0	; () banked
 22109  004D50  EE20 F00A          	lfsr	2,10
 22110  004D54  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22111  004D56  26D9               	addwf	fsr2l,f,c
 22112  004D58  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22113  004D5A  22DA               	addwfc	fsr2h,f,c
 22114  004D5C  0E00               	movlw	0
 22115  004D5E  6EDF               	movwf	indf2,c
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;os_timers.c: 174: Ret = DelayExpired;
 22119  004D60  0E01               	movlw	1
 22120  004D62  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 22121                           
 22122                           ; BSR set to: 0
 22123                           ;os_timers.c: 180: }
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;os_timers.c: 179: break;
 22127                           
 22128                           ;os_timers.c: 178: default:
 22129                           
 22130                           ; BSR set to: 0
 22131                           ;os_timers.c: 175: }
 22132                           ;os_timers.c: 176: break;
 22133  004D64  D00D               	goto	l857
 22134  004D66                     l855:
 22135                           
 22136                           ; BSR set to: 0
 22137                           
 22138                           ; BSR set to: 0
 22139  004D66  EE20 F00A          	lfsr	2,10
 22140  004D6A  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 22141  004D6C  26D9               	addwf	fsr2l,f,c
 22142  004D6E  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 22143  004D70  22DA               	addwfc	fsr2h,f,c
 22144  004D72  50DF               	movf	indf2,w,c
 22145                           
 22146                           ; Switch size 1, requested type "space"
 22147                           ; Number of cases is 2, Range of values is 0 to 1
 22148                           ; switch strategies available:
 22149                           ; Name         Instructions Cycles
 22150                           ; simple_byte            7     4 (average)
 22151                           ;	Chosen strategy is simple_byte
 22152  004D74  0A00               	xorlw	0	; case 0
 22153  004D76  B4D8               	btfsc	status,2,c
 22154  004D78  D7C9               	goto	l856
 22155  004D7A  0A01               	xorlw	1	; case 1
 22156  004D7C  B4D8               	btfsc	status,2,c
 22157  004D7E  D7DE               	goto	l858
 22158  004D80                     l857:
 22159                           
 22160                           ;os_timers.c: 182: return Ret;
 22161                           
 22162                           ; BSR set to: 0
 22163  004D80  0100               	movlb	0	; () banked
 22164  004D82  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 22165  004D84  0012               	return	
 22166  004D86                     __end_of_OsTmr_Wait:
 22167                           	opt stack 0
 22168                           tosu	equ	0xFFF
 22169                           tosh	equ	0xFFE
 22170                           tosl	equ	0xFFD
 22171                           pclath	equ	0xFFA
 22172                           tblptru	equ	0xFF8
 22173                           tblptrh	equ	0xFF7
 22174                           tblptrl	equ	0xFF6
 22175                           tablat	equ	0xFF5
 22176                           prodh	equ	0xFF4
 22177                           prodl	equ	0xFF3
 22178                           intcon	equ	0xFF2
 22179                           intcon2	equ	0xFF1
 22180                           intcon3	equ	0xFF0
 22181                           indf0	equ	0xFEF
 22182                           postinc0	equ	0xFEE
 22183                           plusw0	equ	0xFEB
 22184                           fsr0h	equ	0xFEA
 22185                           fsr0l	equ	0xFE9
 22186                           wreg	equ	0xFE8
 22187                           indf1	equ	0xFE7
 22188                           postinc1	equ	0xFE6
 22189                           postdec1	equ	0xFE5
 22190                           fsr1h	equ	0xFE2
 22191                           fsr1l	equ	0xFE1
 22192                           indf2	equ	0xFDF
 22193                           postinc2	equ	0xFDE
 22194                           postdec2	equ	0xFDD
 22195                           plusw2	equ	0xFDB
 22196                           fsr2h	equ	0xFDA
 22197                           fsr2l	equ	0xFD9
 22198                           status	equ	0xFD8
 22199                           
 22200 ;; *************** function _I2cSlv_SendI2cMsg *****************
 22201 ;; Defined at:
 22202 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22203 ;; Parameters:    Size  Location     Type
 22204 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 22205 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 22206 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 22207 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22208 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22209 ;; Auto vars:     Size  Location     Type
 22210 ;;  TxSts           1   36[BANK0 ] unsigned char 
 22211 ;; Return value:  Size  Location     Type
 22212 ;;                  1    wreg      unsigned char 
 22213 ;; Registers used:
 22214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22215 ;; Tracked objects:
 22216 ;;		On entry : 0/0
 22217 ;;		On exit  : 0/0
 22218 ;;		Unchanged: 0/0
 22219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22223 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22224 ;;Total ram usage:        5 bytes
 22225 ;; Hardware stack levels used:    1
 22226 ;; Hardware stack levels required when called:   12
 22227 ;; This function calls:
 22228 ;;		_GenerateEvt
 22229 ;; This function is called by:
 22230 ;;		_I2cSlv_QueryI2cData
 22231 ;;		_Terminal
 22232 ;;		_triggerRelay
 22233 ;;		_Eeprom_Write
 22234 ;; This function uses a non-reentrant model
 22235 ;;
 22236                           
 22237                           	psect	text103
 22238  005A4E                     __ptext103:
 22239                           	opt stack 0
 22240  005A4E                     _I2cSlv_SendI2cMsg:
 22241                           	opt stack 13
 22242                           
 22243                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 22244                           
 22245                           ; BSR set to: 0
 22246                           ;incstack = 0
 22247  005A4E  0E00               	movlw	0
 22248  005A50  0100               	movlb	0	; () banked
 22249  005A52  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 22253  005A54  05CF               	decf	_I2cComSts& (0+255),w,b
 22254  005A56  B4D8               	btfsc	status,2,c
 22255  005A58  D015               	goto	l1409
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;i2c_slv.c: 257: {
 22259                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 22260  005A5A  C082  F39B         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 22264  005A5E  0E00               	movlw	0
 22265  005A60  0103               	movlb	3	; () banked
 22266  005A62  6F9C               	movwf	(_I2cTxPacket+1)& (0+255),b
 22267                           
 22268                           ; BSR set to: 3
 22269                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 22270  005A64  C083  F39F         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 22271                           
 22272                           ; BSR set to: 3
 22273                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 22274  005A68  C080  F39D         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 22275  005A6C  C081  F39E         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 22276                           
 22277                           ; BSR set to: 3
 22278                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 22279  005A70  0ED9               	movlw	low _I2cWriteDataEvt
 22280  005A72  0100               	movlb	0	; () banked
 22281  005A74  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22282  005A76  0E00               	movlw	high _I2cWriteDataEvt
 22283  005A78  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22284  005A7A  EC97  F030         	call	_GenerateEvt	;wreg free
 22285                           
 22286                           ;i2c_slv.c: 267: TxSts = 1u;
 22287  005A7E  0E01               	movlw	1
 22288  005A80  0100               	movlb	0	; () banked
 22289  005A82  D001               	goto	L31
 22290  005A84                     l1409:
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;i2c_slv.c: 269: else
 22294                           ;i2c_slv.c: 270: {
 22295                           ;i2c_slv.c: 272: TxSts = 0u;
 22296                           
 22297                           ; BSR set to: 0
 22298  005A84  0E00               	movlw	0
 22299  005A86                     L31:
 22300  005A86  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 22301                           
 22302                           ; BSR set to: 0
 22303                           ;i2c_slv.c: 273: }
 22304                           ;i2c_slv.c: 275: return TxSts;
 22305  005A88  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 22306  005A8A  0012               	return	
 22307  005A8C                     __end_of_I2cSlv_SendI2cMsg:
 22308                           	opt stack 0
 22309                           tosu	equ	0xFFF
 22310                           tosh	equ	0xFFE
 22311                           tosl	equ	0xFFD
 22312                           pclath	equ	0xFFA
 22313                           tblptru	equ	0xFF8
 22314                           tblptrh	equ	0xFF7
 22315                           tblptrl	equ	0xFF6
 22316                           tablat	equ	0xFF5
 22317                           prodh	equ	0xFF4
 22318                           prodl	equ	0xFF3
 22319                           intcon	equ	0xFF2
 22320                           intcon2	equ	0xFF1
 22321                           intcon3	equ	0xFF0
 22322                           indf0	equ	0xFEF
 22323                           postinc0	equ	0xFEE
 22324                           plusw0	equ	0xFEB
 22325                           fsr0h	equ	0xFEA
 22326                           fsr0l	equ	0xFE9
 22327                           wreg	equ	0xFE8
 22328                           indf1	equ	0xFE7
 22329                           postinc1	equ	0xFE6
 22330                           postdec1	equ	0xFE5
 22331                           fsr1h	equ	0xFE2
 22332                           fsr1l	equ	0xFE1
 22333                           indf2	equ	0xFDF
 22334                           postinc2	equ	0xFDE
 22335                           postdec2	equ	0xFDD
 22336                           plusw2	equ	0xFDB
 22337                           fsr2h	equ	0xFDA
 22338                           fsr2l	equ	0xFD9
 22339                           status	equ	0xFD8
 22340                           
 22341 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 22342 ;; Defined at:
 22343 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22344 ;; Parameters:    Size  Location     Type
 22345 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 22346 ;;		 -> MyApp_Task@phone(14), Terminal@TermRxBuffer(50), 
 22347 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 22348 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 22349 ;; Auto vars:     Size  Location     Type
 22350 ;;  RxSts           1   36[BANK0 ] unsigned char 
 22351 ;; Return value:  Size  Location     Type
 22352 ;;                  1    wreg      unsigned char 
 22353 ;; Registers used:
 22354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22355 ;; Tracked objects:
 22356 ;;		On entry : 0/0
 22357 ;;		On exit  : 0/0
 22358 ;;		Unchanged: 0/0
 22359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22363 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22364 ;;Total ram usage:        5 bytes
 22365 ;; Hardware stack levels used:    1
 22366 ;; Hardware stack levels required when called:   12
 22367 ;; This function calls:
 22368 ;;		_GenerateEvt
 22369 ;; This function is called by:
 22370 ;;		_I2cSlv_QueryI2cData
 22371 ;;		_Terminal
 22372 ;; This function uses a non-reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text104
 22376  005990                     __ptext104:
 22377                           	opt stack 0
 22378  005990                     _I2cSlv_ReceiveI2cMsg:
 22379                           	opt stack 13
 22380                           
 22381                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 22382                           
 22383                           ; BSR set to: 0
 22384                           ;incstack = 0
 22385  005990  0E00               	movlw	0
 22386  005992  0100               	movlb	0	; () banked
 22387  005994  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22388                           
 22389                           ; BSR set to: 0
 22390                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 22391  005996  0E02               	movlw	2
 22392  005998  19CF               	xorwf	_I2cComSts& (0+255),w,b
 22393  00599A  B4D8               	btfsc	status,2,c
 22394  00599C  D016               	goto	l1414
 22395                           
 22396                           ; BSR set to: 0
 22397                           ;i2c_slv.c: 294: {
 22398                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 22399  00599E  C082  F395         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 22400                           
 22401                           ; BSR set to: 0
 22402                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 22403  0059A2  0E01               	movlw	1
 22404  0059A4  0103               	movlb	3	; () banked
 22405  0059A6  6F96               	movwf	(_I2cRxPacket+1)& (0+255),b
 22406                           
 22407                           ; BSR set to: 3
 22408                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 22409  0059A8  C083  F399         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 22410                           
 22411                           ; BSR set to: 3
 22412                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 22413  0059AC  C080  F397         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 22414  0059B0  C081  F398         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 22415                           
 22416                           ; BSR set to: 3
 22417                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 22418  0059B4  0ED8               	movlw	low _I2cReadDataEvt
 22419  0059B6  0100               	movlb	0	; () banked
 22420  0059B8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22421  0059BA  0E00               	movlw	high _I2cReadDataEvt
 22422  0059BC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22423  0059BE  EC97  F030         	call	_GenerateEvt	;wreg free
 22424                           
 22425                           ;i2c_slv.c: 304: RxSts = 1u;
 22426  0059C2  0E01               	movlw	1
 22427  0059C4  0100               	movlb	0	; () banked
 22428  0059C6  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22429                           
 22430                           ;i2c_slv.c: 305: }
 22431  0059C8  0012               	return	
 22432  0059CA                     l1414:
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;i2c_slv.c: 306: else
 22436                           ;i2c_slv.c: 307: {
 22437                           ;i2c_slv.c: 309: RxSts = 0u;
 22438                           
 22439                           ; BSR set to: 0
 22440  0059CA  0E00               	movlw	0
 22441  0059CC  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 22442                           
 22443                           ; BSR set to: 0
 22444  0059CE  0012               	return	
 22445  0059D0                     __end_of_I2cSlv_ReceiveI2cMsg:
 22446                           	opt stack 0
 22447                           tosu	equ	0xFFF
 22448                           tosh	equ	0xFFE
 22449                           tosl	equ	0xFFD
 22450                           pclath	equ	0xFFA
 22451                           tblptru	equ	0xFF8
 22452                           tblptrh	equ	0xFF7
 22453                           tblptrl	equ	0xFF6
 22454                           tablat	equ	0xFF5
 22455                           prodh	equ	0xFF4
 22456                           prodl	equ	0xFF3
 22457                           intcon	equ	0xFF2
 22458                           intcon2	equ	0xFF1
 22459                           intcon3	equ	0xFF0
 22460                           indf0	equ	0xFEF
 22461                           postinc0	equ	0xFEE
 22462                           plusw0	equ	0xFEB
 22463                           fsr0h	equ	0xFEA
 22464                           fsr0l	equ	0xFE9
 22465                           wreg	equ	0xFE8
 22466                           indf1	equ	0xFE7
 22467                           postinc1	equ	0xFE6
 22468                           postdec1	equ	0xFE5
 22469                           fsr1h	equ	0xFE2
 22470                           fsr1l	equ	0xFE1
 22471                           indf2	equ	0xFDF
 22472                           postinc2	equ	0xFDE
 22473                           postdec2	equ	0xFDD
 22474                           plusw2	equ	0xFDB
 22475                           fsr2h	equ	0xFDA
 22476                           fsr2l	equ	0xFD9
 22477                           status	equ	0xFD8
 22478                           
 22479 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 22480 ;; Defined at:
 22481 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 22482 ;; Parameters:    Size  Location     Type
 22483 ;;		None
 22484 ;; Auto vars:     Size  Location     Type
 22485 ;;  Result          1   33[BANK0 ] enum E8932
 22486 ;; Return value:  Size  Location     Type
 22487 ;;                  1    wreg      enum E8932
 22488 ;; Registers used:
 22489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22490 ;; Tracked objects:
 22491 ;;		On entry : 0/0
 22492 ;;		On exit  : 0/0
 22493 ;;		Unchanged: 0/0
 22494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22499 ;;Total ram usage:        1 bytes
 22500 ;; Hardware stack levels used:    1
 22501 ;; Hardware stack levels required when called:   12
 22502 ;; This function calls:
 22503 ;;		_ReceiveEvt
 22504 ;; This function is called by:
 22505 ;;		_I2cSlv_QueryI2cData
 22506 ;;		_Terminal
 22507 ;; This function uses a non-reentrant model
 22508 ;;
 22509                           
 22510                           	psect	text105
 22511  005FDC                     __ptext105:
 22512                           	opt stack 0
 22513  005FDC                     _I2cSlv_I2cReadMsgSts:
 22514                           	opt stack 13
 22515                           
 22516                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 22517                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 22518                           
 22519                           ; BSR set to: 0
 22520                           ;incstack = 0
 22521  005FDC  0E9A               	movlw	low (_I2cRxPacket+5)
 22522  005FDE  0100               	movlb	0	; () banked
 22523  005FE0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22524  005FE2  0E03               	movlw	high (_I2cRxPacket+5)
 22525  005FE4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22526  005FE6  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 22527  005FEA  0900               	iorlw	0
 22528  005FEC  B4D8               	btfsc	status,2,c
 22529  005FEE  D002               	goto	l1419
 22530                           
 22531                           ;i2c_slv.c: 331: {
 22532                           ;i2c_slv.c: 332: Result = MessageReceived;
 22533  005FF0  0E01               	movlw	1
 22534  005FF2  D001               	goto	L32
 22535  005FF4                     l1419:
 22536                           
 22537                           ;i2c_slv.c: 334: else
 22538                           ;i2c_slv.c: 335: {
 22539                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 22540                           
 22541                           ; BSR set to: 0
 22542  005FF4  0E00               	movlw	0
 22543  005FF6                     L32:
 22544  005FF6  0100               	movlb	0	; () banked
 22545  005FF8  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;i2c_slv.c: 337: }
 22549                           ;i2c_slv.c: 339: return Result;
 22550  005FFA  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 22551  005FFC  0012               	return	
 22552  005FFE                     __end_of_I2cSlv_I2cReadMsgSts:
 22553                           	opt stack 0
 22554                           tosu	equ	0xFFF
 22555                           tosh	equ	0xFFE
 22556                           tosl	equ	0xFFD
 22557                           pclath	equ	0xFFA
 22558                           tblptru	equ	0xFF8
 22559                           tblptrh	equ	0xFF7
 22560                           tblptrl	equ	0xFF6
 22561                           tablat	equ	0xFF5
 22562                           prodh	equ	0xFF4
 22563                           prodl	equ	0xFF3
 22564                           intcon	equ	0xFF2
 22565                           intcon2	equ	0xFF1
 22566                           intcon3	equ	0xFF0
 22567                           indf0	equ	0xFEF
 22568                           postinc0	equ	0xFEE
 22569                           plusw0	equ	0xFEB
 22570                           fsr0h	equ	0xFEA
 22571                           fsr0l	equ	0xFE9
 22572                           wreg	equ	0xFE8
 22573                           indf1	equ	0xFE7
 22574                           postinc1	equ	0xFE6
 22575                           postdec1	equ	0xFE5
 22576                           fsr1h	equ	0xFE2
 22577                           fsr1l	equ	0xFE1
 22578                           indf2	equ	0xFDF
 22579                           postinc2	equ	0xFDE
 22580                           postdec2	equ	0xFDD
 22581                           plusw2	equ	0xFDB
 22582                           fsr2h	equ	0xFDA
 22583                           fsr2l	equ	0xFD9
 22584                           status	equ	0xFD8
 22585                           
 22586 ;; *************** function _UartSetConfig *****************
 22587 ;; Defined at:
 22588 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22589 ;; Parameters:    Size  Location     Type
 22590 ;;		None
 22591 ;; Auto vars:     Size  Location     Type
 22592 ;;		None
 22593 ;; Return value:  Size  Location     Type
 22594 ;;                  1    wreg      void 
 22595 ;; Registers used:
 22596 ;;		wreg, status,2
 22597 ;; Tracked objects:
 22598 ;;		On entry : 0/0
 22599 ;;		On exit  : 0/0
 22600 ;;		Unchanged: 0/0
 22601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22606 ;;Total ram usage:        0 bytes
 22607 ;; Hardware stack levels used:    1
 22608 ;; Hardware stack levels required when called:   11
 22609 ;; This function calls:
 22610 ;;		Nothing
 22611 ;; This function is called by:
 22612 ;;		_Mdm_MainTask
 22613 ;; This function uses a non-reentrant model
 22614 ;;
 22615                           
 22616                           	psect	text106
 22617  0051F8                     __ptext106:
 22618                           	opt stack 0
 22619  0051F8                     _UartSetConfig:
 22620                           	opt stack 16
 22621                           
 22622                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 22623                           
 22624                           ; BSR set to: 0
 22625                           ;incstack = 0
 22626  0051F8  0E01               	movlw	1
 22627  0051FA  0103               	movlb	3	; () banked
 22628  0051FC  6F24               	movwf	_UartConfig& (0+255),b
 22629                           
 22630                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 22631  0051FE  0E00               	movlw	0
 22632  005200  6F25               	movwf	(_UartConfig+1)& (0+255),b
 22633                           
 22634                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 22635  005202  0E00               	movlw	0
 22636  005204  6F26               	movwf	(_UartConfig+2)& (0+255),b
 22637                           
 22638                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 22639  005206  0E00               	movlw	0
 22640  005208  6F27               	movwf	(_UartConfig+3)& (0+255),b
 22641                           
 22642                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 22643  00520A  0E00               	movlw	0
 22644  00520C  6F28               	movwf	(_UartConfig+4)& (0+255),b
 22645                           
 22646                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 22647  00520E  0E00               	movlw	0
 22648  005210  6F29               	movwf	(_UartConfig+5)& (0+255),b
 22649                           
 22650                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 22651  005212  0E01               	movlw	1
 22652  005214  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 22653                           
 22654                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 22655  005216  0E01               	movlw	1
 22656  005218  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 22657                           
 22658                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 22659  00521A  0E00               	movlw	0
 22660  00521C  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 22661                           
 22662                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 22663  00521E  0E00               	movlw	0
 22664  005220  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 22665                           
 22666                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 22667  005222  0E00               	movlw	0
 22668  005224  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 22669                           
 22670                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 22671  005226  0E00               	movlw	0
 22672  005228  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 22673                           
 22674                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 22675  00522A  0E01               	movlw	1
 22676  00522C  6F30               	movwf	(_UartConfig+12)& (0+255),b
 22677                           
 22678                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 22679  00522E  0E00               	movlw	0
 22680  005230  6F31               	movwf	(_UartConfig+13)& (0+255),b
 22681  005232  0E6C               	movlw	108
 22682  005234  6F32               	movwf	(_UartConfig+14)& (0+255),b
 22683  005236  0EDC               	movlw	220
 22684  005238  6F33               	movwf	(_UartConfig+15)& (0+255),b
 22685  00523A  0E02               	movlw	2
 22686  00523C  6F34               	movwf	(_UartConfig+16)& (0+255),b
 22687                           
 22688                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 22689  00523E  0E80               	movlw	128
 22690  005240  6F35               	movwf	(_UartConfig+17)& (0+255),b
 22691  005242  0E25               	movlw	37
 22692  005244  6F36               	movwf	(_UartConfig+18)& (0+255),b
 22693  005246  0E00               	movlw	0
 22694  005248  6F37               	movwf	(_UartConfig+19)& (0+255),b
 22695  00524A  0E00               	movlw	0
 22696  00524C  6F38               	movwf	(_UartConfig+20)& (0+255),b
 22697                           
 22698                           ; BSR set to: 3
 22699  00524E  0012               	return		;funcret
 22700  005250                     __end_of_UartSetConfig:
 22701                           	opt stack 0
 22702                           tosu	equ	0xFFF
 22703                           tosh	equ	0xFFE
 22704                           tosl	equ	0xFFD
 22705                           pclath	equ	0xFFA
 22706                           tblptru	equ	0xFF8
 22707                           tblptrh	equ	0xFF7
 22708                           tblptrl	equ	0xFF6
 22709                           tablat	equ	0xFF5
 22710                           prodh	equ	0xFF4
 22711                           prodl	equ	0xFF3
 22712                           intcon	equ	0xFF2
 22713                           intcon2	equ	0xFF1
 22714                           intcon3	equ	0xFF0
 22715                           indf0	equ	0xFEF
 22716                           postinc0	equ	0xFEE
 22717                           plusw0	equ	0xFEB
 22718                           fsr0h	equ	0xFEA
 22719                           fsr0l	equ	0xFE9
 22720                           wreg	equ	0xFE8
 22721                           indf1	equ	0xFE7
 22722                           postinc1	equ	0xFE6
 22723                           postdec1	equ	0xFE5
 22724                           fsr1h	equ	0xFE2
 22725                           fsr1l	equ	0xFE1
 22726                           indf2	equ	0xFDF
 22727                           postinc2	equ	0xFDE
 22728                           postdec2	equ	0xFDD
 22729                           plusw2	equ	0xFDB
 22730                           fsr2h	equ	0xFDA
 22731                           fsr2l	equ	0xFD9
 22732                           status	equ	0xFD8
 22733                           
 22734 ;; *************** function _TurnOnModem *****************
 22735 ;; Defined at:
 22736 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22737 ;; Parameters:    Size  Location     Type
 22738 ;;		None
 22739 ;; Auto vars:     Size  Location     Type
 22740 ;;		None
 22741 ;; Return value:  Size  Location     Type
 22742 ;;                  1    wreg      void 
 22743 ;; Registers used:
 22744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22745 ;; Tracked objects:
 22746 ;;		On entry : 0/0
 22747 ;;		On exit  : 0/0
 22748 ;;		Unchanged: 0/0
 22749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22754 ;;Total ram usage:        0 bytes
 22755 ;; Hardware stack levels used:    1
 22756 ;; Hardware stack levels required when called:   12
 22757 ;; This function calls:
 22758 ;;		_GenerateEvt
 22759 ;; This function is called by:
 22760 ;;		_Mdm_MainTask
 22761 ;; This function uses a non-reentrant model
 22762 ;;
 22763                           
 22764                           	psect	text107
 22765  0057B4                     __ptext107:
 22766                           	opt stack 0
 22767  0057B4                     _TurnOnModem:
 22768                           	opt stack 15
 22769                           
 22770                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 22771                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 22772                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 22773                           
 22774                           ; BSR set to: 3
 22775                           ;incstack = 0
 22776  0057B4  D019               	goto	l1009
 22777  0057B6                     
 22778                           ;mdm_gsm_gprs.c: 385: Counter++;
 22779  0057B6  0102               	movlb	2	; () banked
 22780  0057B8  4BDC               	infsnz	TurnOnModem@Counter& (0+255),f,b
 22781  0057BA  2BDD               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 22782                           
 22783                           ; BSR set to: 2
 22784                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 22785  0057BC  0EB8               	movlw	184
 22786  0057BE  5DDC               	subwf	TurnOnModem@Counter& (0+255),w,b
 22787  0057C0  0E0B               	movlw	11
 22788  0057C2  59DD               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 22789  0057C4  A0D8               	btfss	status,0,c
 22790  0057C6  0012               	return	
 22791                           
 22792                           ; BSR set to: 2
 22793                           ;mdm_gsm_gprs.c: 388: {
 22794                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 22795  0057C8  0E01               	movlw	1
 22796  0057CA  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22797                           
 22798                           ; BSR set to: 2
 22799                           ;mdm_gsm_gprs.c: 391: }
 22800                           ;mdm_gsm_gprs.c: 392: break;
 22801  0057CC  0012               	return	
 22802  0057CE                     
 22803                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 22804                           
 22805                           ; BSR set to: 2
 22806  0057CE  0EE2               	movlw	low _MdmOnOffPulseRequest
 22807  0057D0  0100               	movlb	0	; () banked
 22808  0057D2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22809  0057D4  0E00               	movlw	high _MdmOnOffPulseRequest
 22810  0057D6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22811  0057D8  EC97  F030         	call	_GenerateEvt	;wreg free
 22812                           
 22813                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 22814  0057DC  0E01               	movlw	1
 22815  0057DE  0100               	movlb	0	; () banked
 22816  0057E0  6FD2               	movwf	_MdmStatus& (0+255),b
 22817                           
 22818                           ; BSR set to: 0
 22819                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 22820  0057E2  0E02               	movlw	2
 22821  0057E4  6E29               	movwf	TurnOnModem@TurnOnMdmState,c
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;mdm_gsm_gprs.c: 408: }
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;mdm_gsm_gprs.c: 407: break;
 22828                           
 22829                           ;mdm_gsm_gprs.c: 406: default:
 22830                           
 22831                           ; BSR set to: 0
 22832                           ;mdm_gsm_gprs.c: 404: break;
 22833                           
 22834                           ;mdm_gsm_gprs.c: 403: case Stop:
 22835                           
 22836                           ;mdm_gsm_gprs.c: 401: break;
 22837  0057E6  0012               	return	
 22838  0057E8                     l1009:
 22839                           
 22840                           ; BSR set to: 0
 22841  0057E8  5029               	movf	TurnOnModem@TurnOnMdmState,w,c
 22842                           
 22843                           ; Switch size 1, requested type "space"
 22844                           ; Number of cases is 3, Range of values is 0 to 2
 22845                           ; switch strategies available:
 22846                           ; Name         Instructions Cycles
 22847                           ; simple_byte           10     6 (average)
 22848                           ;	Chosen strategy is simple_byte
 22849  0057EA  0A00               	xorlw	0	; case 0
 22850  0057EC  B4D8               	btfsc	status,2,c
 22851  0057EE  D7E3               	goto	l1010
 22852  0057F0  0A01               	xorlw	1	; case 1
 22853  0057F2  B4D8               	btfsc	status,2,c
 22854  0057F4  D7EC               	goto	l1013
 22855  0057F6  0A03               	xorlw	3	; case 2
 22856  0057F8  0012               	return	
 22857  0057FA                     __end_of_TurnOnModem:
 22858                           	opt stack 0
 22859                           tosu	equ	0xFFF
 22860                           tosh	equ	0xFFE
 22861                           tosl	equ	0xFFD
 22862                           pclath	equ	0xFFA
 22863                           tblptru	equ	0xFF8
 22864                           tblptrh	equ	0xFF7
 22865                           tblptrl	equ	0xFF6
 22866                           tablat	equ	0xFF5
 22867                           prodh	equ	0xFF4
 22868                           prodl	equ	0xFF3
 22869                           intcon	equ	0xFF2
 22870                           intcon2	equ	0xFF1
 22871                           intcon3	equ	0xFF0
 22872                           indf0	equ	0xFEF
 22873                           postinc0	equ	0xFEE
 22874                           plusw0	equ	0xFEB
 22875                           fsr0h	equ	0xFEA
 22876                           fsr0l	equ	0xFE9
 22877                           wreg	equ	0xFE8
 22878                           indf1	equ	0xFE7
 22879                           postinc1	equ	0xFE6
 22880                           postdec1	equ	0xFE5
 22881                           fsr1h	equ	0xFE2
 22882                           fsr1l	equ	0xFE1
 22883                           indf2	equ	0xFDF
 22884                           postinc2	equ	0xFDE
 22885                           postdec2	equ	0xFDD
 22886                           plusw2	equ	0xFDB
 22887                           fsr2h	equ	0xFDA
 22888                           fsr2l	equ	0xFD9
 22889                           status	equ	0xFD8
 22890                           
 22891 ;; *************** function _SendSmsSm *****************
 22892 ;; Defined at:
 22893 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22894 ;; Parameters:    Size  Location     Type
 22895 ;;		None
 22896 ;; Auto vars:     Size  Location     Type
 22897 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 22898 ;; Return value:  Size  Location     Type
 22899 ;;                  1    wreg      void 
 22900 ;; Registers used:
 22901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22902 ;; Tracked objects:
 22903 ;;		On entry : 0/0
 22904 ;;		On exit  : 0/0
 22905 ;;		Unchanged: 0/0
 22906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22908 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22910 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22911 ;;Total ram usage:       52 bytes
 22912 ;; Hardware stack levels used:    1
 22913 ;; Hardware stack levels required when called:   14
 22914 ;; This function calls:
 22915 ;;		_OsTmr_GetTimerStatus
 22916 ;;		_OsTmr_StartTimer
 22917 ;;		_ReceiveEvt
 22918 ;;		_StringCopy
 22919 ;;		_Uart_WriteStringLen
 22920 ;; This function is called by:
 22921 ;;		_Mdm_MainTask
 22922 ;; This function uses a non-reentrant model
 22923 ;;
 22924                           
 22925                           	psect	text108
 22926  0019F2                     __ptext108:
 22927                           	opt stack 0
 22928  0019F2                     _SendSmsSm:
 22929                           	opt stack 13
 22930                           
 22931                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 22932                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 22933                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 22934                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 22935                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 22936                           
 22937                           ;incstack = 0
 22938  0019F2  0E03               	movlw	3
 22939  0019F4  0100               	movlb	0	; () banked
 22940  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 22941  0019F8  A4D8               	btfss	status,2,c
 22942  0019FA  0012               	return	
 22943  0019FC  D0C1               	goto	l1091
 22944  0019FE                     
 22945                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 22946                           
 22947                           ; BSR set to: 0
 22948  0019FE  0EE1               	movlw	low _SendSmsEvent
 22949  001A00  0100               	movlb	0	; () banked
 22950  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22951  001A04  0E00               	movlw	high _SendSmsEvent
 22952  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22953  001A08  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 22954  001A0C  0900               	iorlw	0
 22955  001A0E  B4D8               	btfsc	status,2,c
 22956  001A10  0012               	return	
 22957                           
 22958                           ;mdm_gsm_gprs.c: 671: {
 22959                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 22960  001A12  0E01               	movlw	1
 22961  001A14  0101               	movlb	1	; () banked
 22962  001A16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 22963                           
 22964                           ; BSR set to: 1
 22965                           ;mdm_gsm_gprs.c: 674: }
 22966                           ;mdm_gsm_gprs.c: 675: break;
 22967  001A18  0012               	return	
 22968  001A1A                     
 22969                           ; BSR set to: 1
 22970                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 22971                           
 22972                           ; BSR set to: 1
 22973  001A1A  0ECD               	movlw	low STR_5
 22974  001A1C  0100               	movlb	0	; () banked
 22975  001A1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22976  001A20  0EFF               	movlw	high STR_5
 22977  001A22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22978  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 22979  001A26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22980  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 22981  001A2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22982  001A2C  0E00               	movlw	0
 22983  001A2E  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 22984  001A30  0E09               	movlw	9
 22985  001A32  6F81               	movwf	StringCopy@Len& (0+255),b
 22986  001A34  EC3F  F028         	call	_StringCopy	;wreg free
 22987                           
 22988                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 22989  001A38  0E95               	movlw	low _PhoneNumber
 22990  001A3A  0100               	movlb	0	; () banked
 22991  001A3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 22992  001A3E  0E04               	movlw	high _PhoneNumber
 22993  001A40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22994  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 22995  001A44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 22996  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 22997  001A48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22998  001A4A  C0D3  F081         	movff	_PhoneNumbLen,StringCopy@Len
 22999  001A4E  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23000  001A50  EC3F  F028         	call	_StringCopy	;wreg free
 23001                           
 23002                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 23003  001A54  0100               	movlb	0	; () banked
 23004  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23005  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23006  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23007  001A5C  0E09               	movlw	9
 23008  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23009  001A60  0E00               	movlw	0
 23010  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23011  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 23012  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23013  001A68  6ED9               	movwf	fsr2l,c
 23014  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 23015  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23016  001A6E  6EDA               	movwf	fsr2h,c
 23017  001A70  0E22               	movlw	34
 23018  001A72  6EDF               	movwf	indf2,c
 23019                           
 23020                           ; BSR set to: 0
 23021                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 23022  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23023  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 23024  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 23025  001A7A  0E0A               	movlw	10
 23026  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 23027  001A7E  0E00               	movlw	0
 23028  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 23029  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 23030  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 23031  001A86  6ED9               	movwf	fsr2l,c
 23032  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 23033  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 23034  001A8C  6EDA               	movwf	fsr2h,c
 23035  001A8E  0E0D               	movlw	13
 23036  001A90  6EDF               	movwf	indf2,c
 23037                           
 23038                           ; BSR set to: 0
 23039                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 23040  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 23041  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23042  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 23043  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23044  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 23045  001A9C  0F0B               	addlw	11
 23046  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23047  001AA0  0E01               	movlw	1
 23048  001AA2  ECE8  F02C         	call	_Uart_WriteStringLen
 23049                           
 23050                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 23051  001AA6  0EE0               	movlw	low SendSmsSm@SwTimer
 23052  001AA8  0100               	movlb	0	; () banked
 23053  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 23054  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 23055  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 23056  001AB0  0EC4               	movlw	196
 23057  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 23058  001AB4  0E09               	movlw	9
 23059  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 23060  001AB8  0E00               	movlw	0
 23061  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 23062  001ABC  0E00               	movlw	0
 23063  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 23064  001AC0  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 23065                           
 23066                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 23067  001AC4  0E05               	movlw	5
 23068  001AC6  0101               	movlb	1	; () banked
 23069  001AC8  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23070                           
 23071                           ; BSR set to: 1
 23072                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 23073  001ACA  0E02               	movlw	2
 23074  001ACC  6FF2               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 23075                           
 23076                           ;mdm_gsm_gprs.c: 691: break;
 23077  001ACE  0012               	return	
 23078  001AD0                     
 23079                           ; BSR set to: 1
 23080                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 23081                           
 23082                           ; BSR set to: 1
 23083  001AD0  0E0A               	movlw	10
 23084  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 23085                           
 23086                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 23087  001AD4  0E0D               	movlw	13
 23088  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 23089                           
 23090                           ; BSR set to: 1
 23091                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 23092  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 23093  001ADA  0100               	movlb	0	; () banked
 23094  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23095  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 23096  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23097  001AE2  0E02               	movlw	2
 23098  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23099  001AE6  0E01               	movlw	1
 23100  001AE8  ECE8  F02C         	call	_Uart_WriteStringLen
 23101                           
 23102                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 23103  001AEC  0E03               	movlw	3
 23104  001AEE  0101               	movlb	1	; () banked
 23105  001AF0  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23106                           
 23107                           ;mdm_gsm_gprs.c: 701: break;
 23108  001AF2  0012               	return	
 23109  001AF4                     
 23110                           ; BSR set to: 1
 23111                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 23112                           
 23113                           ; BSR set to: 1
 23114  001AF4  0E3C               	movlw	low _NewStringReceived
 23115  001AF6  0100               	movlb	0	; () banked
 23116  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23117  001AFA  0E00               	movlw	high _NewStringReceived
 23118  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23119  001AFE  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 23120  001B02  0900               	iorlw	0
 23121  001B04  B4D8               	btfsc	status,2,c
 23122  001B06  0012               	return	
 23123                           
 23124                           ;mdm_gsm_gprs.c: 706: {
 23125                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 23126  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 23127  001B0C  0A3E               	xorlw	62
 23128  001B0E  A4D8               	btfss	status,2,c
 23129  001B10  0012               	return	
 23130                           
 23131                           ;mdm_gsm_gprs.c: 709: {
 23132                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 23133  001B12  0E04               	movlw	4
 23134  001B14  0101               	movlb	1	; () banked
 23135  001B16  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23136                           
 23137                           ; BSR set to: 1
 23138                           ;mdm_gsm_gprs.c: 712: }
 23139                           ;mdm_gsm_gprs.c: 713: }
 23140                           ;mdm_gsm_gprs.c: 714: break;
 23141                           
 23142                           ; BSR set to: 1
 23143  001B18  0012               	return	
 23144  001B1A                     
 23145                           ; BSR set to: 1
 23146                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 23147                           
 23148                           ; BSR set to: 1
 23149  001B1A  0E72               	movlw	low _MessageText
 23150  001B1C  0100               	movlb	0	; () banked
 23151  001B1E  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23152  001B20  0E05               	movlw	high _MessageText
 23153  001B22  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23154  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 23155  001B26  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23156  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 23157  001B2A  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23158  001B2C  C0D4  F081         	movff	_SmsLen,StringCopy@Len
 23159  001B30  6B82               	clrf	(StringCopy@Len+1)& (0+255),b
 23160  001B32  EC3F  F028         	call	_StringCopy	;wreg free
 23161                           
 23162                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 23163  001B36  0100               	movlb	0	; () banked
 23164  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 23165  001B3A  0D01               	mullw	1
 23166  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 23167  001B3E  24F3               	addwf	prodl,w,c
 23168  001B40  6ED9               	movwf	fsr2l,c
 23169  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 23170  001B44  20F4               	addwfc	prodh,w,c
 23171  001B46  6EDA               	movwf	fsr2h,c
 23172  001B48  0E1A               	movlw	26
 23173  001B4A  6EDF               	movwf	indf2,c
 23174                           
 23175                           ; BSR set to: 0
 23176                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 23177  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 23178  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 23179  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 23180  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 23181  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 23182  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 23183  001B58  0E01               	movlw	1
 23184  001B5A  ECE8  F02C         	call	_Uart_WriteStringLen
 23185                           
 23186                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 23187  001B5E  0E00               	movlw	0
 23188  001B60  0101               	movlb	1	; () banked
 23189  001B62  6FF3               	movwf	SendSmsSm@SendSms_State& (0+255),b
 23190                           
 23191                           ;mdm_gsm_gprs.c: 725: break;
 23192  001B64  0012               	return	
 23193  001B66                     
 23194                           ; BSR set to: 1
 23195                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 23196                           
 23197                           ; BSR set to: 1
 23198  001B66  0EE0               	movlw	low SendSmsSm@SwTimer
 23199  001B68  0100               	movlb	0	; () banked
 23200  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 23201  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 23202  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 23203  001B70  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 23204  001B74  06E8               	decf	wreg,f,c
 23205  001B76  A4D8               	btfss	status,2,c
 23206  001B78  0012               	return	
 23207                           
 23208                           ;mdm_gsm_gprs.c: 730: {
 23209                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 23210  001B7A  C1F2  F1F3         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 23211                           
 23212                           ;mdm_gsm_gprs.c: 738: }
 23213                           
 23214                           ;mdm_gsm_gprs.c: 737: break;
 23215                           
 23216                           ;mdm_gsm_gprs.c: 736: default:
 23217                           
 23218                           ;mdm_gsm_gprs.c: 733: }
 23219                           ;mdm_gsm_gprs.c: 734: break;
 23220  001B7E  0012               	return	
 23221  001B80                     l1091:
 23222  001B80  0101               	movlb	1	; () banked
 23223  001B82  51F3               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 23224                           
 23225                           ; Switch size 1, requested type "space"
 23226                           ; Number of cases is 6, Range of values is 0 to 5
 23227                           ; switch strategies available:
 23228                           ; Name         Instructions Cycles
 23229                           ; simple_byte           19    10 (average)
 23230                           ;	Chosen strategy is simple_byte
 23231  001B84  0A00               	xorlw	0	; case 0
 23232  001B86  B4D8               	btfsc	status,2,c
 23233  001B88  D73A               	goto	l1092
 23234  001B8A  0A01               	xorlw	1	; case 1
 23235  001B8C  B4D8               	btfsc	status,2,c
 23236  001B8E  D745               	goto	l1095
 23237  001B90  0A03               	xorlw	3	; case 2
 23238  001B92  B4D8               	btfsc	status,2,c
 23239  001B94  D79D               	goto	l1096
 23240  001B96  0A01               	xorlw	1	; case 3
 23241  001B98  B4D8               	btfsc	status,2,c
 23242  001B9A  D7AC               	goto	l1097
 23243  001B9C  0A07               	xorlw	7	; case 4
 23244  001B9E  B4D8               	btfsc	status,2,c
 23245  001BA0  D7BC               	goto	l1100
 23246  001BA2  0A01               	xorlw	1	; case 5
 23247  001BA4  A4D8               	btfss	status,2,c
 23248                           
 23249                           ; BSR set to: 1
 23250  001BA6  0012               	return	
 23251  001BA8  D7DE               	goto	l1101
 23252  001BAA                     __end_of_SendSmsSm:
 23253                           	opt stack 0
 23254                           tosu	equ	0xFFF
 23255                           tosh	equ	0xFFE
 23256                           tosl	equ	0xFFD
 23257                           pclath	equ	0xFFA
 23258                           tblptru	equ	0xFF8
 23259                           tblptrh	equ	0xFF7
 23260                           tblptrl	equ	0xFF6
 23261                           tablat	equ	0xFF5
 23262                           prodh	equ	0xFF4
 23263                           prodl	equ	0xFF3
 23264                           intcon	equ	0xFF2
 23265                           intcon2	equ	0xFF1
 23266                           intcon3	equ	0xFF0
 23267                           indf0	equ	0xFEF
 23268                           postinc0	equ	0xFEE
 23269                           plusw0	equ	0xFEB
 23270                           fsr0h	equ	0xFEA
 23271                           fsr0l	equ	0xFE9
 23272                           wreg	equ	0xFE8
 23273                           indf1	equ	0xFE7
 23274                           postinc1	equ	0xFE6
 23275                           postdec1	equ	0xFE5
 23276                           fsr1h	equ	0xFE2
 23277                           fsr1l	equ	0xFE1
 23278                           indf2	equ	0xFDF
 23279                           postinc2	equ	0xFDE
 23280                           postdec2	equ	0xFDD
 23281                           plusw2	equ	0xFDB
 23282                           fsr2h	equ	0xFDA
 23283                           fsr2l	equ	0xFD9
 23284                           status	equ	0xFD8
 23285                           
 23286 ;; *************** function _Uart_WriteStringLen *****************
 23287 ;; Defined at:
 23288 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23289 ;; Parameters:    Size  Location     Type
 23290 ;;  Module          1    wreg     unsigned char 
 23291 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 23292 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 23293 ;;  Len             1   34[BANK0 ] unsigned char 
 23294 ;; Auto vars:     Size  Location     Type
 23295 ;;  Module          1   36[BANK0 ] unsigned char 
 23296 ;;  Index           1   35[BANK0 ] unsigned char 
 23297 ;; Return value:  Size  Location     Type
 23298 ;;                  1    wreg      void 
 23299 ;; Registers used:
 23300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23301 ;; Tracked objects:
 23302 ;;		On entry : 0/0
 23303 ;;		On exit  : 0/0
 23304 ;;		Unchanged: 0/0
 23305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23306 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23309 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23310 ;;Total ram usage:        5 bytes
 23311 ;; Hardware stack levels used:    1
 23312 ;; Hardware stack levels required when called:   12
 23313 ;; This function calls:
 23314 ;;		_UartTxBufferStatus
 23315 ;;		_UartWriteByte
 23316 ;; This function is called by:
 23317 ;;		_SendSmsSm
 23318 ;;		_GsmGprsTerminal
 23319 ;; This function uses a non-reentrant model
 23320 ;;
 23321                           
 23322                           	psect	text109
 23323  0059D0                     __ptext109:
 23324                           	opt stack 0
 23325  0059D0                     _Uart_WriteStringLen:
 23326                           	opt stack 14
 23327                           
 23328                           ;incstack = 0
 23329                           ;Uart_WriteStringLen@Module stored from wreg
 23330  0059D0  0100               	movlb	0	; () banked
 23331  0059D2  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 23332                           
 23333                           ;uart_drv.c: 544: UINT8 Index;
 23334                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 23335  0059D4  0E00               	movlw	0
 23336  0059D6  0100               	movlb	0	; () banked
 23337  0059D8  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 23338  0059DA  D015               	goto	l715
 23339  0059DC                     
 23340                           ; BSR set to: 0
 23341                           ;uart_drv.c: 547: {
 23342                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 23343                           
 23344                           ; BSR set to: 0
 23345  0059DC  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 23346  0059E0  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 23347  0059E4  50DF               	movf	indf2,w,c
 23348  0059E6  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 23349  0059E8  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23350  0059EA  EC0F  F030         	call	_UartWriteByte
 23351                           
 23352                           ;uart_drv.c: 551: StringToWrite++;
 23353  0059EE  0100               	movlb	0	; () banked
 23354  0059F0  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 23355  0059F2  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 23356  0059F4                     
 23357                           ; BSR set to: 0
 23358                           
 23359                           ; BSR set to: 0
 23360  0059F4  0100               	movlb	0	; () banked
 23361  0059F6  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 23362  0059F8  EC1F  F02B         	call	_UartTxBufferStatus
 23363  0059FC  06E8               	decf	wreg,f,c
 23364  0059FE  B4D8               	btfsc	status,2,c
 23365  005A00  D7F9               	goto	l718
 23366  005A02  0100               	movlb	0	; () banked
 23367  005A04  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 23368  005A06                     l715:
 23369                           
 23370                           ; BSR set to: 0
 23371                           
 23372                           ; BSR set to: 0
 23373  005A06  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 23374  005A08  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 23375  005A0A  B0D8               	btfsc	status,0,c
 23376  005A0C  0012               	return	
 23377  005A0E  D7E6               	goto	l716
 23378  005A10                     __end_of_Uart_WriteStringLen:
 23379                           	opt stack 0
 23380                           tosu	equ	0xFFF
 23381                           tosh	equ	0xFFE
 23382                           tosl	equ	0xFFD
 23383                           pclath	equ	0xFFA
 23384                           tblptru	equ	0xFF8
 23385                           tblptrh	equ	0xFF7
 23386                           tblptrl	equ	0xFF6
 23387                           tablat	equ	0xFF5
 23388                           prodh	equ	0xFF4
 23389                           prodl	equ	0xFF3
 23390                           intcon	equ	0xFF2
 23391                           intcon2	equ	0xFF1
 23392                           intcon3	equ	0xFF0
 23393                           indf0	equ	0xFEF
 23394                           postinc0	equ	0xFEE
 23395                           plusw0	equ	0xFEB
 23396                           fsr0h	equ	0xFEA
 23397                           fsr0l	equ	0xFE9
 23398                           wreg	equ	0xFE8
 23399                           indf1	equ	0xFE7
 23400                           postinc1	equ	0xFE6
 23401                           postdec1	equ	0xFE5
 23402                           fsr1h	equ	0xFE2
 23403                           fsr1l	equ	0xFE1
 23404                           indf2	equ	0xFDF
 23405                           postinc2	equ	0xFDE
 23406                           postdec2	equ	0xFDD
 23407                           plusw2	equ	0xFDB
 23408                           fsr2h	equ	0xFDA
 23409                           fsr2l	equ	0xFD9
 23410                           status	equ	0xFD8
 23411                           
 23412 ;; *************** function _ModemEvtParser *****************
 23413 ;; Defined at:
 23414 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23415 ;; Parameters:    Size  Location     Type
 23416 ;;		None
 23417 ;; Auto vars:     Size  Location     Type
 23418 ;;  CallReadyStr   10   48[BANK0 ] unsigned char [10]
 23419 ;;  SmsString       5   63[BANK0 ] unsigned char [5]
 23420 ;;  ClipString      5   58[BANK0 ] unsigned char [5]
 23421 ;;  RingString      4   68[BANK0 ] unsigned char [4]
 23422 ;;  CompareIdx      1   73[BANK0 ] unsigned char 
 23423 ;;  Match           1   72[BANK0 ] unsigned char 
 23424 ;; Return value:  Size  Location     Type
 23425 ;;                  1    wreg      void 
 23426 ;; Registers used:
 23427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23428 ;; Tracked objects:
 23429 ;;		On entry : 0/0
 23430 ;;		On exit  : 0/0
 23431 ;;		Unchanged: 0/0
 23432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23434 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23436 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23437 ;;Total ram usage:       26 bytes
 23438 ;; Hardware stack levels used:    1
 23439 ;; Hardware stack levels required when called:   12
 23440 ;; This function calls:
 23441 ;;		_GenerateEvt
 23442 ;;		_ReceiveEvt
 23443 ;;		_StringCompare
 23444 ;;		_StringCopy
 23445 ;;		_Uart_ClearRxBuffer
 23446 ;; This function is called by:
 23447 ;;		_Mdm_MainTask
 23448 ;; This function uses a non-reentrant model
 23449 ;;
 23450                           
 23451                           	psect	text110
 23452  001D32                     __ptext110:
 23453                           	opt stack 0
 23454  001D32                     _ModemEvtParser:
 23455                           	opt stack 15
 23456                           
 23457                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 23458                           
 23459                           ; BSR set to: 0
 23460                           ;incstack = 0
 23461  001D32  C3C1  F0A4         	movff	ModemEvtParser@F9107,ModemEvtParser@RingString
 23462  001D36  C3C2  F0A5         	movff	ModemEvtParser@F9107+1,ModemEvtParser@RingString+1
 23463  001D3A  C3C3  F0A6         	movff	ModemEvtParser@F9107+2,ModemEvtParser@RingString+2
 23464  001D3E  C3C4  F0A7         	movff	ModemEvtParser@F9107+3,ModemEvtParser@RingString+3
 23465                           
 23466                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 23467  001D42  EE23  F0BC         	lfsr	2,ModemEvtParser@F9109
 23468  001D46  EE10  F09A         	lfsr	1,ModemEvtParser@ClipString
 23469  001D4A  0E04               	movlw	4
 23470  001D4C                     u13411:
 23471  001D4C  CFDB FFE3          	movff	plusw2,plusw1
 23472  001D50  06E8               	decf	wreg,f,c
 23473  001D52  E2FC               	bc	u13411
 23474                           
 23475                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 23476  001D54  EE23  F0B7         	lfsr	2,ModemEvtParser@F9111
 23477  001D58  EE10  F09F         	lfsr	1,ModemEvtParser@SmsString
 23478  001D5C  0E04               	movlw	4
 23479  001D5E                     u13421:
 23480  001D5E  CFDB FFE3          	movff	plusw2,plusw1
 23481  001D62  06E8               	decf	wreg,f,c
 23482  001D64  E2FC               	bc	u13421
 23483                           
 23484                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 23485  001D66  EE24  F0D0         	lfsr	2,ModemEvtParser@F9113
 23486  001D6A  EE10  F090         	lfsr	1,ModemEvtParser@CallReadyString
 23487  001D6E  0E09               	movlw	9
 23488  001D70                     u13431:
 23489  001D70  CFDB FFE3          	movff	plusw2,plusw1
 23490  001D74  06E8               	decf	wreg,f,c
 23491  001D76  E2FC               	bc	u13431
 23492                           
 23493                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 23494  001D78  0E00               	movlw	0
 23495  001D7A  0100               	movlb	0	; () banked
 23496  001D7C  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23497                           
 23498                           ; BSR set to: 0
 23499                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 23500  001D7E  0E00               	movlw	0
 23501  001D80  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23502                           
 23503                           ; BSR set to: 0
 23504                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 23505  001D82  0E3B               	movlw	low _NewMdmEvtParserRequest
 23506  001D84  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23507  001D86  0E00               	movlw	high _NewMdmEvtParserRequest
 23508  001D88  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23509  001D8A  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 23510  001D8E  0900               	iorlw	0
 23511  001D90  B4D8               	btfsc	status,2,c
 23512  001D92  0012               	return	
 23513                           
 23514                           ;mdm_gsm_gprs.c: 510: {
 23515                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 23516  001D94  0E00               	movlw	0
 23517  001D96  0100               	movlb	0	; () banked
 23518  001D98  6FA9               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 23519  001D9A                     l14070:
 23520                           
 23521                           ; BSR set to: 0
 23522  001D9A  0E03               	movlw	3
 23523  001D9C  65A9               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 23524  001D9E  D074               	goto	l1052
 23525  001DA0  D083               	goto	u13500
 23526  001DA2                     
 23527                           ; BSR set to: 0
 23528                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 23529                           
 23530                           ; BSR set to: 0
 23531  001DA2  0EA4               	movlw	low ModemEvtParser@RingString
 23532  001DA4  6F85               	movwf	StringCompare@String1& (0+255),b
 23533  001DA6  0E00               	movlw	high ModemEvtParser@RingString
 23534  001DA8  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23535  001DAA  0E58               	movlw	low _RxBuffer
 23536  001DAC  6F87               	movwf	StringCompare@String2& (0+255),b
 23537  001DAE  0E0C               	movlw	high _RxBuffer
 23538  001DB0  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23539  001DB2  0E00               	movlw	0
 23540  001DB4  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23541  001DB6  0E04               	movlw	4
 23542  001DB8  6F89               	movwf	StringCompare@Len& (0+255),b
 23543  001DBA  EC7E  F02A         	call	_StringCompare	;wreg free
 23544  001DBE  0900               	iorlw	0
 23545  001DC0  B4D8               	btfsc	status,2,c
 23546  001DC2  D06F               	goto	l1055
 23547                           
 23548                           ;mdm_gsm_gprs.c: 518: {
 23549                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 23550  001DC4  0EE0               	movlw	low _RingEvent
 23551  001DC6  0100               	movlb	0	; () banked
 23552  001DC8  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23553  001DCA  0E00               	movlw	high _RingEvent
 23554  001DCC  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23555  001DCE  EC97  F030         	call	_GenerateEvt	;wreg free
 23556  001DD2  D040               	goto	l14092
 23557  001DD4                     
 23558                           ; BSR set to: 0
 23559                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 23560                           
 23561                           ; BSR set to: 0
 23562  001DD4  0E9A               	movlw	low ModemEvtParser@ClipString
 23563  001DD6  6F85               	movwf	StringCompare@String1& (0+255),b
 23564  001DD8  0E00               	movlw	high ModemEvtParser@ClipString
 23565  001DDA  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23566  001DDC  0E58               	movlw	low _RxBuffer
 23567  001DDE  6F87               	movwf	StringCompare@String2& (0+255),b
 23568  001DE0  0E0C               	movlw	high _RxBuffer
 23569  001DE2  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23570  001DE4  0E00               	movlw	0
 23571  001DE6  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23572  001DE8  0E05               	movlw	5
 23573  001DEA  6F89               	movwf	StringCompare@Len& (0+255),b
 23574  001DEC  EC7E  F02A         	call	_StringCompare	;wreg free
 23575  001DF0  0900               	iorlw	0
 23576  001DF2  B4D8               	btfsc	status,2,c
 23577  001DF4  D056               	goto	l1055
 23578                           
 23579                           ;mdm_gsm_gprs.c: 529: {
 23580                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 23581  001DF6  0E60               	movlw	low (_RxBuffer+8)
 23582  001DF8  0100               	movlb	0	; () banked
 23583  001DFA  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 23584  001DFC  0E0C               	movlw	high (_RxBuffer+8)
 23585  001DFE  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23586  001E00  0EB8               	movlw	low _callerNumber
 23587  001E02  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 23588  001E04  0E04               	movlw	high _callerNumber
 23589  001E06  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23590  001E08  0E00               	movlw	0
 23591  001E0A  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 23592  001E0C  0E0D               	movlw	13
 23593  001E0E  6F81               	movwf	StringCopy@Len& (0+255),b
 23594  001E10  EC3F  F028         	call	_StringCopy	;wreg free
 23595                           
 23596                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 23597  001E14  0EDF               	movlw	low _ClipEvent
 23598  001E16  0100               	movlb	0	; () banked
 23599  001E18  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23600  001E1A  0E00               	movlw	high _ClipEvent
 23601  001E1C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23602  001E1E  EC97  F030         	call	_GenerateEvt	;wreg free
 23603  001E22  D018               	goto	l14092
 23604  001E24                     
 23605                           ; BSR set to: 0
 23606                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 23607                           
 23608                           ; BSR set to: 0
 23609  001E24  0E9F               	movlw	low ModemEvtParser@SmsString
 23610  001E26  6F85               	movwf	StringCompare@String1& (0+255),b
 23611  001E28  0E00               	movlw	high ModemEvtParser@SmsString
 23612  001E2A  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23613  001E2C  0E58               	movlw	low _RxBuffer
 23614  001E2E  6F87               	movwf	StringCompare@String2& (0+255),b
 23615  001E30  0E0C               	movlw	high _RxBuffer
 23616  001E32  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23617  001E34  0E00               	movlw	0
 23618  001E36  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23619  001E38  0E05               	movlw	5
 23620  001E3A  6F89               	movwf	StringCompare@Len& (0+255),b
 23621  001E3C  EC7E  F02A         	call	_StringCompare	;wreg free
 23622  001E40  0900               	iorlw	0
 23623  001E42  B4D8               	btfsc	status,2,c
 23624  001E44  D02E               	goto	l1055
 23625                           
 23626                           ;mdm_gsm_gprs.c: 541: {
 23627                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 23628  001E46  0EDE               	movlw	low _SmsEvent
 23629  001E48  0100               	movlb	0	; () banked
 23630  001E4A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 23631  001E4C  0E00               	movlw	high _SmsEvent
 23632  001E4E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23633  001E50  EC97  F030         	call	_GenerateEvt	;wreg free
 23634  001E54                     l14092:
 23635                           
 23636                           ;mdm_gsm_gprs.c: 545: Match = 1;
 23637  001E54  0E01               	movlw	1
 23638  001E56  0100               	movlb	0	; () banked
 23639  001E58  D015               	goto	L33
 23640  001E5A                     
 23641                           ; BSR set to: 0
 23642                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 23643                           
 23644                           ; BSR set to: 0
 23645  001E5A  0E90               	movlw	low ModemEvtParser@CallReadyString
 23646  001E5C  6F85               	movwf	StringCompare@String1& (0+255),b
 23647  001E5E  0E00               	movlw	high ModemEvtParser@CallReadyString
 23648  001E60  6F86               	movwf	(StringCompare@String1+1)& (0+255),b
 23649  001E62  0E58               	movlw	low _RxBuffer
 23650  001E64  6F87               	movwf	StringCompare@String2& (0+255),b
 23651  001E66  0E0C               	movlw	high _RxBuffer
 23652  001E68  6F88               	movwf	(StringCompare@String2+1)& (0+255),b
 23653  001E6A  0E00               	movlw	0
 23654  001E6C  6F8A               	movwf	(StringCompare@Len+1)& (0+255),b
 23655  001E6E  0E0A               	movlw	10
 23656  001E70  6F89               	movwf	StringCompare@Len& (0+255),b
 23657  001E72  EC7E  F02A         	call	_StringCompare	;wreg free
 23658  001E76  0900               	iorlw	0
 23659  001E78  B4D8               	btfsc	status,2,c
 23660  001E7A  D013               	goto	l1055
 23661                           
 23662                           ;mdm_gsm_gprs.c: 552: {
 23663                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 23664  001E7C  0E02               	movlw	2
 23665  001E7E  0100               	movlb	0	; () banked
 23666  001E80  6FD2               	movwf	_MdmStatus& (0+255),b
 23667                           
 23668                           ;mdm_gsm_gprs.c: 556: Match = 1;
 23669  001E82  0E01               	movlw	1
 23670  001E84                     L33:
 23671  001E84  6FA8               	movwf	ModemEvtParser@Match& (0+255),b
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;mdm_gsm_gprs.c: 562: }
 23675                           
 23676                           ; BSR set to: 0
 23677                           ;mdm_gsm_gprs.c: 561: break;
 23678                           
 23679                           ;mdm_gsm_gprs.c: 560: default:
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;mdm_gsm_gprs.c: 557: }
 23683                           ;mdm_gsm_gprs.c: 558: break;
 23684  001E86  D00D               	goto	l1055
 23685  001E88                     l1052:
 23686                           
 23687                           ; BSR set to: 0
 23688                           
 23689                           ; BSR set to: 0
 23690  001E88  51A9               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 23691                           
 23692                           ; Switch size 1, requested type "space"
 23693                           ; Number of cases is 4, Range of values is 0 to 3
 23694                           ; switch strategies available:
 23695                           ; Name         Instructions Cycles
 23696                           ; simple_byte           13     7 (average)
 23697                           ;	Chosen strategy is simple_byte
 23698  001E8A  0A00               	xorlw	0	; case 0
 23699  001E8C  B4D8               	btfsc	status,2,c
 23700  001E8E  D789               	goto	l1053
 23701  001E90  0A01               	xorlw	1	; case 1
 23702  001E92  B4D8               	btfsc	status,2,c
 23703  001E94  D7C7               	goto	l1058
 23704  001E96  0A03               	xorlw	3	; case 2
 23705  001E98  B4D8               	btfsc	status,2,c
 23706  001E9A  D7DF               	goto	l1060
 23707  001E9C  0A01               	xorlw	1	; case 3
 23708  001E9E  B4D8               	btfsc	status,2,c
 23709  001EA0  D799               	goto	l1056
 23710  001EA2                     l1055:
 23711                           
 23712                           ; BSR set to: 0
 23713  001EA2  0100               	movlb	0	; () banked
 23714  001EA4  2BA9               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 23715  001EA6  D779               	goto	l14070
 23716  001EA8                     u13500:
 23717                           
 23718                           ; BSR set to: 0
 23719                           ;mdm_gsm_gprs.c: 563: }
 23720                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 23721                           
 23722                           ; BSR set to: 0
 23723  001EA8  05A8               	decf	ModemEvtParser@Match& (0+255),w,b
 23724  001EAA  A4D8               	btfss	status,2,c
 23725  001EAC  0012               	return	
 23726                           
 23727                           ; BSR set to: 0
 23728                           ;mdm_gsm_gprs.c: 567: {
 23729                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 23730  001EAE  EC10  F02E         	call	_Uart_ClearRxBuffer	;wreg free
 23731  001EB2  0012               	return	
 23732  001EB4                     __end_of_ModemEvtParser:
 23733                           	opt stack 0
 23734                           tosu	equ	0xFFF
 23735                           tosh	equ	0xFFE
 23736                           tosl	equ	0xFFD
 23737                           pclath	equ	0xFFA
 23738                           tblptru	equ	0xFF8
 23739                           tblptrh	equ	0xFF7
 23740                           tblptrl	equ	0xFF6
 23741                           tablat	equ	0xFF5
 23742                           prodh	equ	0xFF4
 23743                           prodl	equ	0xFF3
 23744                           intcon	equ	0xFF2
 23745                           intcon2	equ	0xFF1
 23746                           intcon3	equ	0xFF0
 23747                           indf0	equ	0xFEF
 23748                           postinc0	equ	0xFEE
 23749                           plusw0	equ	0xFEB
 23750                           fsr0h	equ	0xFEA
 23751                           fsr0l	equ	0xFE9
 23752                           wreg	equ	0xFE8
 23753                           indf1	equ	0xFE7
 23754                           postinc1	equ	0xFE6
 23755                           postdec1	equ	0xFE5
 23756                           plusw1	equ	0xFE3
 23757                           fsr1h	equ	0xFE2
 23758                           fsr1l	equ	0xFE1
 23759                           indf2	equ	0xFDF
 23760                           postinc2	equ	0xFDE
 23761                           postdec2	equ	0xFDD
 23762                           plusw2	equ	0xFDB
 23763                           fsr2h	equ	0xFDA
 23764                           fsr2l	equ	0xFD9
 23765                           status	equ	0xFD8
 23766                           
 23767 ;; *************** function _Uart_ClearRxBuffer *****************
 23768 ;; Defined at:
 23769 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 23770 ;; Parameters:    Size  Location     Type
 23771 ;;		None
 23772 ;; Auto vars:     Size  Location     Type
 23773 ;;  Index           2   29[BANK0 ] unsigned short 
 23774 ;; Return value:  Size  Location     Type
 23775 ;;                  1    wreg      void 
 23776 ;; Registers used:
 23777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23778 ;; Tracked objects:
 23779 ;;		On entry : 0/0
 23780 ;;		On exit  : 0/0
 23781 ;;		Unchanged: 0/0
 23782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23787 ;;Total ram usage:        2 bytes
 23788 ;; Hardware stack levels used:    1
 23789 ;; Hardware stack levels required when called:   11
 23790 ;; This function calls:
 23791 ;;		Nothing
 23792 ;; This function is called by:
 23793 ;;		_ModemEvtParser
 23794 ;; This function uses a non-reentrant model
 23795 ;;
 23796                           
 23797                           	psect	text111
 23798  005C20                     __ptext111:
 23799                           	opt stack 0
 23800  005C20                     _Uart_ClearRxBuffer:
 23801                           	opt stack 15
 23802                           
 23803                           ;uart_drv.c: 567: UINT16 Index = 0;
 23804                           
 23805                           ;incstack = 0
 23806  005C20  0E00               	movlw	0
 23807  005C22  0100               	movlb	0	; () banked
 23808  005C24  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23809  005C26  0E00               	movlw	0
 23810  005C28  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23811                           
 23812                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 23813  005C2A  0E00               	movlw	0
 23814  005C2C  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 23815  005C2E  0E00               	movlw	0
 23816  005C30  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 23817  005C32                     l13328:
 23818                           
 23819                           ; BSR set to: 0
 23820  005C32  0E90               	movlw	144
 23821  005C34  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23822  005C36  0E01               	movlw	1
 23823  005C38  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23824  005C3A  B0D8               	btfsc	status,0,c
 23825  005C3C  0012               	return	
 23826                           
 23827                           ; BSR set to: 0
 23828                           ;uart_drv.c: 571: {
 23829                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 23830                           
 23831                           ; BSR set to: 0
 23832                           
 23833                           ; BSR set to: 0
 23834  005C3E  0E58               	movlw	low _RxBuffer
 23835  005C40  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 23836  005C42  6ED9               	movwf	fsr2l,c
 23837  005C44  0E0C               	movlw	high _RxBuffer
 23838  005C46  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 23839  005C48  6EDA               	movwf	fsr2h,c
 23840  005C4A  0E00               	movlw	0
 23841  005C4C  6EDF               	movwf	indf2,c
 23842                           
 23843                           ; BSR set to: 0
 23844  005C4E  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 23845  005C50  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 23846  005C52  D7EF               	goto	l13328
 23847  005C54                     __end_of_Uart_ClearRxBuffer:
 23848                           	opt stack 0
 23849                           tosu	equ	0xFFF
 23850                           tosh	equ	0xFFE
 23851                           tosl	equ	0xFFD
 23852                           pclath	equ	0xFFA
 23853                           tblptru	equ	0xFF8
 23854                           tblptrh	equ	0xFF7
 23855                           tblptrl	equ	0xFF6
 23856                           tablat	equ	0xFF5
 23857                           prodh	equ	0xFF4
 23858                           prodl	equ	0xFF3
 23859                           intcon	equ	0xFF2
 23860                           intcon2	equ	0xFF1
 23861                           intcon3	equ	0xFF0
 23862                           indf0	equ	0xFEF
 23863                           postinc0	equ	0xFEE
 23864                           plusw0	equ	0xFEB
 23865                           fsr0h	equ	0xFEA
 23866                           fsr0l	equ	0xFE9
 23867                           wreg	equ	0xFE8
 23868                           indf1	equ	0xFE7
 23869                           postinc1	equ	0xFE6
 23870                           postdec1	equ	0xFE5
 23871                           plusw1	equ	0xFE3
 23872                           fsr1h	equ	0xFE2
 23873                           fsr1l	equ	0xFE1
 23874                           indf2	equ	0xFDF
 23875                           postinc2	equ	0xFDE
 23876                           postdec2	equ	0xFDD
 23877                           plusw2	equ	0xFDB
 23878                           fsr2h	equ	0xFDA
 23879                           fsr2l	equ	0xFD9
 23880                           status	equ	0xFD8
 23881                           
 23882 ;; *************** function _StringCompare *****************
 23883 ;; Defined at:
 23884 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 23885 ;; Parameters:    Size  Location     Type
 23886 ;;  String1         2   37[BANK0 ] PTR unsigned char 
 23887 ;;		 -> MyApp_Task@phone(14), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), ModemEvtParser@ClipString
      +(5), 
 23888 ;;		 -> ModemEvtParser@RingString(4), 
 23889 ;;  String2         2   39[BANK0 ] PTR unsigned char 
 23890 ;;		 -> callerNumber(13), RxBuffer(400), 
 23891 ;;  Len             2   41[BANK0 ] unsigned short 
 23892 ;; Auto vars:     Size  Location     Type
 23893 ;;  Index           2   46[BANK0 ] unsigned short 
 23894 ;;  Result          1   45[BANK0 ] unsigned char 
 23895 ;; Return value:  Size  Location     Type
 23896 ;;                  1    wreg      unsigned char 
 23897 ;; Registers used:
 23898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23899 ;; Tracked objects:
 23900 ;;		On entry : 0/0
 23901 ;;		On exit  : 0/0
 23902 ;;		Unchanged: 0/0
 23903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23904 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23905 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23907 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23908 ;;Total ram usage:       11 bytes
 23909 ;; Hardware stack levels used:    1
 23910 ;; Hardware stack levels required when called:   11
 23911 ;; This function calls:
 23912 ;;		Nothing
 23913 ;; This function is called by:
 23914 ;;		_ModemEvtParser
 23915 ;;		_MyApp_Task
 23916 ;; This function uses a non-reentrant model
 23917 ;;
 23918                           
 23919                           	psect	text112
 23920  0054FC                     __ptext112:
 23921                           	opt stack 0
 23922  0054FC                     _StringCompare:
 23923                           	opt stack 16
 23924                           
 23925                           ;sf.c: 77: UINT16 Index = 0;
 23926                           
 23927                           ; BSR set to: 0
 23928                           ;incstack = 0
 23929  0054FC  0E00               	movlw	0
 23930  0054FE  0100               	movlb	0	; () banked
 23931  005500  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23932  005502  0E00               	movlw	0
 23933  005504  6F8E               	movwf	StringCompare@Index& (0+255),b
 23934                           
 23935                           ;sf.c: 78: UINT8 Result = 1;
 23936  005506  0E01               	movlw	1
 23937  005508  6F8D               	movwf	StringCompare@Result& (0+255),b
 23938                           
 23939                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 23940  00550A  0E00               	movlw	0
 23941  00550C  6F8F               	movwf	(StringCompare@Index+1)& (0+255),b
 23942  00550E  0E00               	movlw	0
 23943  005510  6F8E               	movwf	StringCompare@Index& (0+255),b
 23944  005512  D015               	goto	l2211
 23945  005514                     
 23946                           ; BSR set to: 0
 23947                           ;sf.c: 82: {
 23948                           ;sf.c: 83: if (String1[Index] != String2[Index])
 23949                           
 23950                           ; BSR set to: 0
 23951  005514  518E               	movf	StringCompare@Index& (0+255),w,b
 23952  005516  2587               	addwf	StringCompare@String2& (0+255),w,b
 23953  005518  6ED9               	movwf	fsr2l,c
 23954  00551A  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23955  00551C  2188               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 23956  00551E  6EDA               	movwf	fsr2h,c
 23957  005520  518E               	movf	StringCompare@Index& (0+255),w,b
 23958  005522  2585               	addwf	StringCompare@String1& (0+255),w,b
 23959  005524  6EE1               	movwf	fsr1l,c
 23960  005526  518F               	movf	(StringCompare@Index+1)& (0+255),w,b
 23961  005528  2186               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 23962  00552A  6EE2               	movwf	fsr1h,c
 23963  00552C  50DE               	movf	postinc2,w,c
 23964  00552E  18E6               	xorwf	postinc1,w,c
 23965  005530  B4D8               	btfsc	status,2,c
 23966  005532  D003               	goto	l2213
 23967                           
 23968                           ; BSR set to: 0
 23969                           ;sf.c: 84: {
 23970                           ;sf.c: 85: Result = 0;
 23971  005534  0E00               	movlw	0
 23972  005536  6F8D               	movwf	StringCompare@Result& (0+255),b
 23973                           
 23974                           ;sf.c: 86: break;
 23975  005538  D008               	goto	u12440
 23976  00553A                     l2213:
 23977                           
 23978                           ; BSR set to: 0
 23979                           
 23980                           ; BSR set to: 0
 23981  00553A  4B8E               	infsnz	StringCompare@Index& (0+255),f,b
 23982  00553C  2B8F               	incf	(StringCompare@Index+1)& (0+255),f,b
 23983  00553E                     l2211:
 23984                           
 23985                           ; BSR set to: 0
 23986                           
 23987                           ; BSR set to: 0
 23988  00553E  5189               	movf	StringCompare@Len& (0+255),w,b
 23989  005540  5D8E               	subwf	StringCompare@Index& (0+255),w,b
 23990  005542  518A               	movf	(StringCompare@Len+1)& (0+255),w,b
 23991  005544  598F               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 23992  005546  A0D8               	btfss	status,0,c
 23993  005548  D7E5               	goto	l2212
 23994  00554A                     u12440:
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;sf.c: 87: }
 23998                           ;sf.c: 88: }
 23999                           ;sf.c: 91: return Result;
 24000                           
 24001                           ; BSR set to: 0
 24002  00554A  518D               	movf	StringCompare@Result& (0+255),w,b
 24003  00554C  0012               	return	
 24004  00554E                     __end_of_StringCompare:
 24005                           	opt stack 0
 24006                           tosu	equ	0xFFF
 24007                           tosh	equ	0xFFE
 24008                           tosl	equ	0xFFD
 24009                           pclath	equ	0xFFA
 24010                           tblptru	equ	0xFF8
 24011                           tblptrh	equ	0xFF7
 24012                           tblptrl	equ	0xFF6
 24013                           tablat	equ	0xFF5
 24014                           prodh	equ	0xFF4
 24015                           prodl	equ	0xFF3
 24016                           intcon	equ	0xFF2
 24017                           intcon2	equ	0xFF1
 24018                           intcon3	equ	0xFF0
 24019                           indf0	equ	0xFEF
 24020                           postinc0	equ	0xFEE
 24021                           plusw0	equ	0xFEB
 24022                           fsr0h	equ	0xFEA
 24023                           fsr0l	equ	0xFE9
 24024                           wreg	equ	0xFE8
 24025                           indf1	equ	0xFE7
 24026                           postinc1	equ	0xFE6
 24027                           postdec1	equ	0xFE5
 24028                           plusw1	equ	0xFE3
 24029                           fsr1h	equ	0xFE2
 24030                           fsr1l	equ	0xFE1
 24031                           indf2	equ	0xFDF
 24032                           postinc2	equ	0xFDE
 24033                           postdec2	equ	0xFDD
 24034                           plusw2	equ	0xFDB
 24035                           fsr2h	equ	0xFDA
 24036                           fsr2l	equ	0xFD9
 24037                           status	equ	0xFD8
 24038                           
 24039 ;; *************** function _GetSmsSm *****************
 24040 ;; Defined at:
 24041 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24042 ;; Parameters:    Size  Location     Type
 24043 ;;		None
 24044 ;; Auto vars:     Size  Location     Type
 24045 ;;		None
 24046 ;; Return value:  Size  Location     Type
 24047 ;;                  1    wreg      void 
 24048 ;; Registers used:
 24049 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24050 ;; Tracked objects:
 24051 ;;		On entry : 0/0
 24052 ;;		On exit  : 0/0
 24053 ;;		Unchanged: 0/0
 24054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24059 ;;Total ram usage:        0 bytes
 24060 ;; Hardware stack levels used:    1
 24061 ;; Hardware stack levels required when called:   13
 24062 ;; This function calls:
 24063 ;;		_ClearBuffer
 24064 ;;		_GenerateEvt
 24065 ;;		_ReceiveEvt
 24066 ;;		_StringCopy
 24067 ;;		_Uart_WriteConstString
 24068 ;; This function is called by:
 24069 ;;		_Mdm_MainTask
 24070 ;; This function uses a non-reentrant model
 24071 ;;
 24072                           
 24073                           	psect	text113
 24074  002A7C                     __ptext113:
 24075                           	opt stack 0
 24076  002A7C                     _GetSmsSm:
 24077                           	opt stack 14
 24078                           
 24079                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 24080                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 24081                           
 24082                           ; BSR set to: 0
 24083                           ;incstack = 0
 24084  002A7C  0E03               	movlw	3
 24085  002A7E  0100               	movlb	0	; () banked
 24086  002A80  19D2               	xorwf	_MdmStatus& (0+255),w,b
 24087  002A82  A4D8               	btfss	status,2,c
 24088  002A84  0012               	return	
 24089  002A86  D084               	goto	l1070
 24090  002A88                     
 24091                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 24092                           
 24093                           ; BSR set to: 0
 24094  002A88  0EDD               	movlw	low _GetSmsText
 24095  002A8A  0100               	movlb	0	; () banked
 24096  002A8C  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24097  002A8E  0E00               	movlw	high _GetSmsText
 24098  002A90  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24099  002A92  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 24100  002A96  0900               	iorlw	0
 24101  002A98  B4D8               	btfsc	status,2,c
 24102  002A9A  0012               	return	
 24103                           
 24104                           ;mdm_gsm_gprs.c: 596: {
 24105                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 24106  002A9C  0E01               	movlw	1
 24107  002A9E  0101               	movlb	1	; () banked
 24108  002AA0  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24109                           
 24110                           ; BSR set to: 1
 24111                           ;mdm_gsm_gprs.c: 599: }
 24112                           ;mdm_gsm_gprs.c: 600: break;
 24113  002AA2  0012               	return	
 24114  002AA4                     
 24115                           ; BSR set to: 1
 24116                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 24117                           
 24118                           ; BSR set to: 1
 24119  002AA4  0EC1               	movlw	low STR_4
 24120  002AA6  0100               	movlb	0	; () banked
 24121  002AA8  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24122  002AAA  0EFF               	movlw	high STR_4
 24123  002AAC  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24124  002AAE  0E01               	movlw	1
 24125  002AB0  EC85  F02C         	call	_Uart_WriteConstString
 24126                           
 24127                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 24128  002AB4  0E02               	movlw	2
 24129  002AB6  0101               	movlb	1	; () banked
 24130  002AB8  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24131                           
 24132                           ;mdm_gsm_gprs.c: 607: break;
 24133  002ABA  0012               	return	
 24134  002ABC                     
 24135                           ; BSR set to: 1
 24136                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 24137                           
 24138                           ; BSR set to: 1
 24139  002ABC  0E3C               	movlw	low _NewStringReceived
 24140  002ABE  0100               	movlb	0	; () banked
 24141  002AC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24142  002AC2  0E00               	movlw	high _NewStringReceived
 24143  002AC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24144  002AC6  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 24145  002ACA  0900               	iorlw	0
 24146  002ACC  B4D8               	btfsc	status,2,c
 24147  002ACE  0012               	return	
 24148                           
 24149                           ;mdm_gsm_gprs.c: 612: {
 24150                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 24151  002AD0  CC58  FFE8         	movff	_RxBuffer,wreg
 24152  002AD4  0A2B               	xorlw	43
 24153  002AD6  A4D8               	btfss	status,2,c
 24154  002AD8  0012               	return	
 24155  002ADA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 24156  002ADE  0A43               	xorlw	67
 24157  002AE0  A4D8               	btfss	status,2,c
 24158  002AE2  0012               	return	
 24159  002AE4  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 24160  002AE8  0A4D               	xorlw	77
 24161  002AEA  A4D8               	btfss	status,2,c
 24162  002AEC  0012               	return	
 24163                           
 24164                           ;mdm_gsm_gprs.c: 614: {
 24165                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 24166  002AEE  0E00               	movlw	low _Mdm_SmsRx
 24167  002AF0  0100               	movlb	0	; () banked
 24168  002AF2  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24169  002AF4  0E07               	movlw	high _Mdm_SmsRx
 24170  002AF6  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24171  002AF8  0E00               	movlw	0
 24172  002AFA  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24173  002AFC  0E50               	movlw	80
 24174  002AFE  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24175  002B00  ECF5  F02D         	call	_ClearBuffer	;wreg free
 24176                           
 24177                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 24178  002B04  0E58               	movlw	low _RxBuffer
 24179  002B06  0100               	movlb	0	; () banked
 24180  002B08  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24181  002B0A  0E0C               	movlw	high _RxBuffer
 24182  002B0C  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24183  002B0E  0E00               	movlw	low _Mdm_SmsRx
 24184  002B10  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24185  002B12  0E07               	movlw	high _Mdm_SmsRx
 24186  002B14  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24187  002B16  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24188  002B1A  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24189  002B1E  EC3F  F028         	call	_StringCopy	;wreg free
 24190                           
 24191                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 24192  002B22  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 24193                           
 24194                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 24195  002B26  0E03               	movlw	3
 24196  002B28  0101               	movlb	1	; () banked
 24197  002B2A  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;mdm_gsm_gprs.c: 622: }
 24201                           ;mdm_gsm_gprs.c: 623: }
 24202                           ;mdm_gsm_gprs.c: 624: break;
 24203                           
 24204                           ; BSR set to: 1
 24205  002B2C  0012               	return	
 24206  002B2E                     
 24207                           ; BSR set to: 1
 24208                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 24209                           
 24210                           ; BSR set to: 1
 24211  002B2E  0E3C               	movlw	low _NewStringReceived
 24212  002B30  0100               	movlb	0	; () banked
 24213  002B32  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 24214  002B34  0E00               	movlw	high _NewStringReceived
 24215  002B36  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24216  002B38  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 24217  002B3C  0900               	iorlw	0
 24218  002B3E  B4D8               	btfsc	status,2,c
 24219  002B40  0012               	return	
 24220                           
 24221                           ;mdm_gsm_gprs.c: 629: {
 24222                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 24223  002B42  0E50               	movlw	low (_Mdm_SmsRx+80)
 24224  002B44  0100               	movlb	0	; () banked
 24225  002B46  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 24226  002B48  0E07               	movlw	high (_Mdm_SmsRx+80)
 24227  002B4A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 24228  002B4C  0E00               	movlw	0
 24229  002B4E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 24230  002B50  0E14               	movlw	20
 24231  002B52  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 24232  002B54  ECF5  F02D         	call	_ClearBuffer	;wreg free
 24233                           
 24234                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 24235  002B58  0E58               	movlw	low _RxBuffer
 24236  002B5A  0100               	movlb	0	; () banked
 24237  002B5C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 24238  002B5E  0E0C               	movlw	high _RxBuffer
 24239  002B60  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 24240  002B62  0E50               	movlw	low (_Mdm_SmsRx+80)
 24241  002B64  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 24242  002B66  0E07               	movlw	high (_Mdm_SmsRx+80)
 24243  002B68  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24244  002B6A  C0C2  F081         	movff	_RxLen,StringCopy@Len
 24245  002B6E  C0C3  F082         	movff	_RxLen+1,StringCopy@Len+1
 24246  002B72  EC3F  F028         	call	_StringCopy	;wreg free
 24247                           
 24248                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 24249  002B76  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 24250                           
 24251                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 24252  002B7A  0E00               	movlw	0
 24253  002B7C  0101               	movlb	1	; () banked
 24254  002B7E  6FF4               	movwf	GetSmsSm@GetSmsState& (0+255),b
 24255                           
 24256                           ; BSR set to: 1
 24257                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 24258  002B80  0EDC               	movlw	low _SmsTxtReady
 24259  002B82  0100               	movlb	0	; () banked
 24260  002B84  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24261  002B86  0E00               	movlw	high _SmsTxtReady
 24262  002B88  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24263  002B8A  EC97  F030         	call	_GenerateEvt	;wreg free
 24264                           
 24265                           ;mdm_gsm_gprs.c: 644: }
 24266                           
 24267                           ;mdm_gsm_gprs.c: 643: break;
 24268                           
 24269                           ;mdm_gsm_gprs.c: 642: default:
 24270                           
 24271                           ;mdm_gsm_gprs.c: 639: }
 24272                           ;mdm_gsm_gprs.c: 640: break;
 24273  002B8E  0012               	return	
 24274  002B90                     l1070:
 24275  002B90  0101               	movlb	1	; () banked
 24276  002B92  51F4               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 24277                           
 24278                           ; Switch size 1, requested type "space"
 24279                           ; Number of cases is 4, Range of values is 0 to 3
 24280                           ; switch strategies available:
 24281                           ; Name         Instructions Cycles
 24282                           ; simple_byte           13     7 (average)
 24283                           ;	Chosen strategy is simple_byte
 24284  002B94  0A00               	xorlw	0	; case 0
 24285  002B96  B4D8               	btfsc	status,2,c
 24286  002B98  D777               	goto	l1071
 24287  002B9A  0A01               	xorlw	1	; case 1
 24288  002B9C  B4D8               	btfsc	status,2,c
 24289  002B9E  D782               	goto	l1074
 24290  002BA0  0A03               	xorlw	3	; case 2
 24291  002BA2  B4D8               	btfsc	status,2,c
 24292  002BA4  D78B               	goto	l1075
 24293  002BA6  0A01               	xorlw	1	; case 3
 24294  002BA8  A4D8               	btfss	status,2,c
 24295                           
 24296                           ; BSR set to: 1
 24297  002BAA  0012               	return	
 24298  002BAC  D7C0               	goto	l1078
 24299  002BAE                     __end_of_GetSmsSm:
 24300                           	opt stack 0
 24301                           tosu	equ	0xFFF
 24302                           tosh	equ	0xFFE
 24303                           tosl	equ	0xFFD
 24304                           pclath	equ	0xFFA
 24305                           tblptru	equ	0xFF8
 24306                           tblptrh	equ	0xFF7
 24307                           tblptrl	equ	0xFF6
 24308                           tablat	equ	0xFF5
 24309                           prodh	equ	0xFF4
 24310                           prodl	equ	0xFF3
 24311                           intcon	equ	0xFF2
 24312                           intcon2	equ	0xFF1
 24313                           intcon3	equ	0xFF0
 24314                           indf0	equ	0xFEF
 24315                           postinc0	equ	0xFEE
 24316                           plusw0	equ	0xFEB
 24317                           fsr0h	equ	0xFEA
 24318                           fsr0l	equ	0xFE9
 24319                           wreg	equ	0xFE8
 24320                           indf1	equ	0xFE7
 24321                           postinc1	equ	0xFE6
 24322                           postdec1	equ	0xFE5
 24323                           plusw1	equ	0xFE3
 24324                           fsr1h	equ	0xFE2
 24325                           fsr1l	equ	0xFE1
 24326                           indf2	equ	0xFDF
 24327                           postinc2	equ	0xFDE
 24328                           postdec2	equ	0xFDD
 24329                           plusw2	equ	0xFDB
 24330                           fsr2h	equ	0xFDA
 24331                           fsr2l	equ	0xFD9
 24332                           status	equ	0xFD8
 24333                           
 24334 ;; *************** function _ConfigureModem *****************
 24335 ;; Defined at:
 24336 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;		None
 24339 ;; Auto vars:     Size  Location     Type
 24340 ;;		None
 24341 ;; Return value:  Size  Location     Type
 24342 ;;                  1    wreg      void 
 24343 ;; Registers used:
 24344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24345 ;; Tracked objects:
 24346 ;;		On entry : 0/0
 24347 ;;		On exit  : 0/0
 24348 ;;		Unchanged: 0/0
 24349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24354 ;;Total ram usage:        0 bytes
 24355 ;; Hardware stack levels used:    1
 24356 ;; Hardware stack levels required when called:   14
 24357 ;; This function calls:
 24358 ;;		_GenerateEvt
 24359 ;;		_UartSetConfigLow
 24360 ;;		_Uart_InitUartModule
 24361 ;;		_Uart_WriteConstString
 24362 ;; This function is called by:
 24363 ;;		_Mdm_MainTask
 24364 ;; This function uses a non-reentrant model
 24365 ;;
 24366                           
 24367                           	psect	text114
 24368  003912                     __ptext114:
 24369                           	opt stack 0
 24370  003912                     _ConfigureModem:
 24371                           	opt stack 13
 24372                           
 24373                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 24374                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 24375                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 24376                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 24377                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 24378                           
 24379                           ;incstack = 0
 24380  003912  D054               	goto	l1027
 24381  003914                     
 24382                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 24383  003914  0E02               	movlw	2
 24384  003916  0100               	movlb	0	; () banked
 24385  003918  19D2               	xorwf	_MdmStatus& (0+255),w,b
 24386  00391A  A4D8               	btfss	status,2,c
 24387  00391C  0012               	return	
 24388                           
 24389                           ; BSR set to: 0
 24390                           ;mdm_gsm_gprs.c: 431: {
 24391                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 24392  00391E  0E01               	movlw	1
 24393  003920  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24394                           
 24395                           ; BSR set to: 0
 24396                           ;mdm_gsm_gprs.c: 434: }
 24397                           ;mdm_gsm_gprs.c: 435: break;
 24398  003922  0012               	return	
 24399  003924                     
 24400                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 24401                           
 24402                           ; BSR set to: 0
 24403  003924  0E74               	movlw	low STR_2
 24404  003926  0100               	movlb	0	; () banked
 24405  003928  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24406  00392A  0EFF               	movlw	high STR_2
 24407  00392C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24408  00392E  0E01               	movlw	1
 24409  003930  EC85  F02C         	call	_Uart_WriteConstString
 24410                           
 24411                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 24412  003934  EC54  F029         	call	_UartSetConfigLow	;wreg free
 24413                           
 24414                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 24415  003938  0E24               	movlw	low _UartConfig
 24416  00393A  0100               	movlb	0	; () banked
 24417  00393C  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 24418  00393E  0E03               	movlw	high _UartConfig
 24419  003940  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 24420  003942  0E01               	movlw	1
 24421  003944  EC5E  F005         	call	_Uart_InitUartModule
 24422                           
 24423                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24424  003948  0E03               	movlw	3
 24425  00394A  0102               	movlb	2	; () banked
 24426  00394C  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24427  00394E  0EE8               	movlw	232
 24428  003950  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24429                           
 24430                           ; BSR set to: 2
 24431                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 24432  003952  0E02               	movlw	2
 24433  003954  0101               	movlb	1	; () banked
 24434  003956  6FF5               	movwf	ConfigureModem@NextState& (0+255),b
 24435                           
 24436                           ; BSR set to: 1
 24437                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 24438  003958  0E04               	movlw	4
 24439  00395A  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24440                           
 24441                           ;mdm_gsm_gprs.c: 449: break;
 24442  00395C  0012               	return	
 24443  00395E                     
 24444                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 24445                           
 24446                           ; BSR set to: 1
 24447  00395E  0EDE               	movlw	low STR_3
 24448  003960  0100               	movlb	0	; () banked
 24449  003962  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 24450  003964  0EFF               	movlw	high STR_3
 24451  003966  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 24452  003968  0E01               	movlw	1
 24453  00396A  EC85  F02C         	call	_Uart_WriteConstString
 24454                           
 24455                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 24456  00396E  0E03               	movlw	3
 24457  003970  0102               	movlb	2	; () banked
 24458  003972  6FDB               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 24459  003974  0EE8               	movlw	232
 24460  003976  6FDA               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 24461                           
 24462                           ; BSR set to: 2
 24463                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 24464  003978  0E05               	movlw	5
 24465  00397A  0101               	movlb	1	; () banked
 24466  00397C  6FF5               	movwf	ConfigureModem@NextState& (0+255),b
 24467                           
 24468                           ; BSR set to: 1
 24469                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 24470  00397E  0E04               	movlw	4
 24471  003980  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24472                           
 24473                           ;mdm_gsm_gprs.c: 459: break;
 24474  003982  0012               	return	
 24475  003984                     
 24476                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 24477                           
 24478                           ; BSR set to: 1
 24479  003984  0102               	movlb	2	; () banked
 24480  003986  4BD8               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 24481  003988  2BD9               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 24482                           
 24483                           ; BSR set to: 2
 24484                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 24485  00398A  51DA               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 24486  00398C  5DD8               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 24487  00398E  51DB               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 24488  003990  59D9               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 24489  003992  A0D8               	btfss	status,0,c
 24490  003994  0012               	return	
 24491                           
 24492                           ; BSR set to: 2
 24493                           ;mdm_gsm_gprs.c: 466: {
 24494                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 24495  003996  0E00               	movlw	0
 24496  003998  6FD9               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 24497  00399A  0E00               	movlw	0
 24498  00399C  6FD8               	movwf	ConfigureModem@DelayCounter& (0+255),b
 24499                           
 24500                           ; BSR set to: 2
 24501                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 24502  00399E  C1F5  F028         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 24503                           
 24504                           ; BSR set to: 2
 24505                           ;mdm_gsm_gprs.c: 471: }
 24506                           ;mdm_gsm_gprs.c: 472: break;
 24507  0039A2  0012               	return	
 24508  0039A4                     
 24509                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 24510                           
 24511                           ; BSR set to: 2
 24512  0039A4  0E03               	movlw	3
 24513  0039A6  0100               	movlb	0	; () banked
 24514  0039A8  6FD2               	movwf	_MdmStatus& (0+255),b
 24515                           
 24516                           ; BSR set to: 0
 24517                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 24518  0039AA  0E39               	movlw	low _MdmStsReady
 24519  0039AC  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 24520  0039AE  0E00               	movlw	high _MdmStsReady
 24521  0039B0  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 24522  0039B2  EC97  F030         	call	_GenerateEvt	;wreg free
 24523                           
 24524                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 24525  0039B6  0E06               	movlw	6
 24526  0039B8  6E28               	movwf	ConfigureModem@MdmConfigState,c
 24527                           
 24528                           ;mdm_gsm_gprs.c: 488: }
 24529                           
 24530                           ;mdm_gsm_gprs.c: 487: break;
 24531                           
 24532                           ;mdm_gsm_gprs.c: 486: default:
 24533                           
 24534                           ;mdm_gsm_gprs.c: 484: break;
 24535                           
 24536                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 24537                           
 24538                           ;mdm_gsm_gprs.c: 481: break;
 24539  0039BA  0012               	return	
 24540  0039BC                     l1027:
 24541  0039BC  5028               	movf	ConfigureModem@MdmConfigState,w,c
 24542                           
 24543                           ; Switch size 1, requested type "space"
 24544                           ; Number of cases is 6, Range of values is 0 to 6
 24545                           ; switch strategies available:
 24546                           ; Name         Instructions Cycles
 24547                           ; simple_byte           19    10 (average)
 24548                           ;	Chosen strategy is simple_byte
 24549  0039BE  0A00               	xorlw	0	; case 0
 24550  0039C0  B4D8               	btfsc	status,2,c
 24551  0039C2  D7A8               	goto	l1028
 24552  0039C4  0A01               	xorlw	1	; case 1
 24553  0039C6  B4D8               	btfsc	status,2,c
 24554  0039C8  D7AD               	goto	l1031
 24555  0039CA  0A03               	xorlw	3	; case 2
 24556  0039CC  B4D8               	btfsc	status,2,c
 24557  0039CE  D7C7               	goto	l1032
 24558  0039D0  0A06               	xorlw	6	; case 4
 24559  0039D2  B4D8               	btfsc	status,2,c
 24560  0039D4  D7D7               	goto	l1033
 24561  0039D6  0A01               	xorlw	1	; case 5
 24562  0039D8  B4D8               	btfsc	status,2,c
 24563  0039DA  D7E4               	goto	l1035
 24564  0039DC  0A03               	xorlw	3	; case 6
 24565  0039DE  0012               	return	
 24566  0039E0                     __end_of_ConfigureModem:
 24567                           	opt stack 0
 24568                           tosu	equ	0xFFF
 24569                           tosh	equ	0xFFE
 24570                           tosl	equ	0xFFD
 24571                           pclath	equ	0xFFA
 24572                           tblptru	equ	0xFF8
 24573                           tblptrh	equ	0xFF7
 24574                           tblptrl	equ	0xFF6
 24575                           tablat	equ	0xFF5
 24576                           prodh	equ	0xFF4
 24577                           prodl	equ	0xFF3
 24578                           intcon	equ	0xFF2
 24579                           intcon2	equ	0xFF1
 24580                           intcon3	equ	0xFF0
 24581                           indf0	equ	0xFEF
 24582                           postinc0	equ	0xFEE
 24583                           plusw0	equ	0xFEB
 24584                           fsr0h	equ	0xFEA
 24585                           fsr0l	equ	0xFE9
 24586                           wreg	equ	0xFE8
 24587                           indf1	equ	0xFE7
 24588                           postinc1	equ	0xFE6
 24589                           postdec1	equ	0xFE5
 24590                           plusw1	equ	0xFE3
 24591                           fsr1h	equ	0xFE2
 24592                           fsr1l	equ	0xFE1
 24593                           indf2	equ	0xFDF
 24594                           postinc2	equ	0xFDE
 24595                           postdec2	equ	0xFDD
 24596                           plusw2	equ	0xFDB
 24597                           fsr2h	equ	0xFDA
 24598                           fsr2l	equ	0xFD9
 24599                           status	equ	0xFD8
 24600                           
 24601 ;; *************** function _Uart_InitUartModule *****************
 24602 ;; Defined at:
 24603 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24604 ;; Parameters:    Size  Location     Type
 24605 ;;  Module          1    wreg     unsigned char 
 24606 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 24607 ;;		 -> UartConfig(21), 
 24608 ;; Auto vars:     Size  Location     Type
 24609 ;;  Module          1   65[BANK0 ] unsigned char 
 24610 ;; Return value:  Size  Location     Type
 24611 ;;                  1    wreg      void 
 24612 ;; Registers used:
 24613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24614 ;; Tracked objects:
 24615 ;;		On entry : 0/0
 24616 ;;		On exit  : 0/0
 24617 ;;		Unchanged: 0/0
 24618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24621 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24622 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24623 ;;Total ram usage:        5 bytes
 24624 ;; Hardware stack levels used:    1
 24625 ;; Hardware stack levels required when called:   13
 24626 ;; This function calls:
 24627 ;;		_SetUartBaudRate
 24628 ;; This function is called by:
 24629 ;;		_ConfigureModem
 24630 ;;		_Mdm_MainTask
 24631 ;; This function uses a non-reentrant model
 24632 ;;
 24633                           
 24634                           	psect	text115
 24635  000ABC                     __ptext115:
 24636                           	opt stack 0
 24637  000ABC                     _Uart_InitUartModule:
 24638                           	opt stack 14
 24639                           
 24640                           ;incstack = 0
 24641                           ;Uart_InitUartModule@Module stored from wreg
 24642  000ABC  0100               	movlb	0	; () banked
 24643  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 24644                           
 24645                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 24646  000AC0  0100               	movlb	0	; () banked
 24647  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 24648  000AC4  A4D8               	btfss	status,2,c
 24649  000AC6  D0BE               	goto	l668
 24650                           
 24651                           ; BSR set to: 0
 24652                           ;uart_drv.c: 291: {
 24653                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 24654  000AC8  9C94               	bcf	3988,6,c	;volatile
 24655                           
 24656                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 24657  000ACA  8E94               	bsf	3988,7,c	;volatile
 24658                           
 24659                           ; BSR set to: 0
 24660                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 24661  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24662  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24663  000AD4  0E01               	movlw	1
 24664  000AD6  ECA2  F014         	call	_SetUartBaudRate
 24665                           
 24666                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 24667  000ADA  0E00               	movlw	0
 24668  000ADC  6EAD               	movwf	4013,c	;volatile
 24669                           
 24670                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24671  000ADE  0100               	movlb	0	; () banked
 24672  000AE0  EE20 F004          	lfsr	2,4
 24673  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24674  000AE6  26D9               	addwf	fsr2l,f,c
 24675  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24676  000AEA  22DA               	addwfc	fsr2h,f,c
 24677  000AEC  50DF               	movf	indf2,w,c
 24678  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24679  000AF0  0E06               	movlw	6
 24680  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24681  000AF4                     u12305:
 24682  000AF4  90D8               	bcf	status,0,c
 24683  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24684  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24685  000AFA  D7FC               	goto	u12305
 24686  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24687  000AFE  12AD               	iorwf	4013,f,c	;volatile
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24691  000B00  EE20 F006          	lfsr	2,6
 24692  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24693  000B06  26D9               	addwf	fsr2l,f,c
 24694  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24695  000B0A  22DA               	addwfc	fsr2h,f,c
 24696  000B0C  50DF               	movf	indf2,w,c
 24697  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24698  000B10  0E05               	movlw	5
 24699  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24700  000B14                     u12315:
 24701  000B14  90D8               	bcf	status,0,c
 24702  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24703  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24704  000B1A  D7FC               	goto	u12315
 24705  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24706  000B1E  12AD               	iorwf	4013,f,c	;volatile
 24707                           
 24708                           ; BSR set to: 0
 24709                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 24710  000B20  EE20 F001          	lfsr	2,1
 24711  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24712  000B26  26D9               	addwf	fsr2l,f,c
 24713  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24714  000B2A  22DA               	addwfc	fsr2h,f,c
 24715  000B2C  50DF               	movf	indf2,w,c
 24716  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24717  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24718  000B32  0BF0               	andlw	240
 24719  000B34  12AD               	iorwf	4013,f,c	;volatile
 24720                           
 24721                           ; BSR set to: 0
 24722                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24723  000B36  EE20 F008          	lfsr	2,8
 24724  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24725  000B3C  26D9               	addwf	fsr2l,f,c
 24726  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24727  000B40  22DA               	addwfc	fsr2h,f,c
 24728  000B42  50DF               	movf	indf2,w,c
 24729  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24730  000B46  90D8               	bcf	status,0,c
 24731  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24732  000B4A  90D8               	bcf	status,0,c
 24733  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24734  000B4E  90D8               	bcf	status,0,c
 24735  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24736  000B52  12AD               	iorwf	4013,f,c	;volatile
 24737                           
 24738                           ; BSR set to: 0
 24739                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24740  000B54  EE20 F003          	lfsr	2,3
 24741  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24742  000B5A  26D9               	addwf	fsr2l,f,c
 24743  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24744  000B5E  22DA               	addwfc	fsr2h,f,c
 24745  000B60  50DF               	movf	indf2,w,c
 24746  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24747  000B64  90D8               	bcf	status,0,c
 24748  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24749  000B68  90D8               	bcf	status,0,c
 24750  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24751  000B6C  12AD               	iorwf	4013,f,c	;volatile
 24752                           
 24753                           ; BSR set to: 0
 24754                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 24755  000B6E  0E00               	movlw	0
 24756  000B70  6EAC               	movwf	4012,c	;volatile
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 24760  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 24761  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 24762  000B7A  50DF               	movf	indf2,w,c
 24763  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24764  000B7E  0E00               	movlw	0
 24765  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 24766  000B82  0E80               	movlw	128
 24767  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24768  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24769  000B88  12AC               	iorwf	4012,f,c	;volatile
 24770                           
 24771                           ; BSR set to: 0
 24772                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 24773  000B8A  EE20 F005          	lfsr	2,5
 24774  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24775  000B90  26D9               	addwf	fsr2l,f,c
 24776  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24777  000B94  22DA               	addwfc	fsr2h,f,c
 24778  000B96  50DF               	movf	indf2,w,c
 24779  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24780  000B9A  0E06               	movlw	6
 24781  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24782  000B9E                     u12325:
 24783  000B9E  90D8               	bcf	status,0,c
 24784  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24785  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24786  000BA4  D7FC               	goto	u12325
 24787  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24788  000BA8  12AC               	iorwf	4012,f,c	;volatile
 24789                           
 24790                           ; BSR set to: 0
 24791                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 24792  000BAA  EE20 F007          	lfsr	2,7
 24793  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24794  000BB0  26D9               	addwf	fsr2l,f,c
 24795  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24796  000BB4  22DA               	addwfc	fsr2h,f,c
 24797  000BB6  50DF               	movf	indf2,w,c
 24798  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24799  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24800  000BBC  0BF0               	andlw	240
 24801  000BBE  12AC               	iorwf	4012,f,c	;volatile
 24802                           
 24803                           ; BSR set to: 0
 24804                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 24805  000BC0  0E00               	movlw	0
 24806  000BC2  6E7E               	movwf	3966,c	;volatile
 24807                           
 24808                           ; BSR set to: 0
 24809                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 24810  000BC4  EE20 F002          	lfsr	2,2
 24811  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24812  000BCA  26D9               	addwf	fsr2l,f,c
 24813  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24814  000BCE  22DA               	addwfc	fsr2h,f,c
 24815  000BD0  50DF               	movf	indf2,w,c
 24816  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24817  000BD4  90D8               	bcf	status,0,c
 24818  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24819  000BD8  90D8               	bcf	status,0,c
 24820  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24821  000BDC  90D8               	bcf	status,0,c
 24822  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24823  000BE0  127E               	iorwf	3966,f,c	;volatile
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 24827  000BE2  EE20 F00A          	lfsr	2,10
 24828  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24829  000BE8  26D9               	addwf	fsr2l,f,c
 24830  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24831  000BEC  22DA               	addwfc	fsr2h,f,c
 24832  000BEE  50DF               	movf	indf2,w,c
 24833  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24834  000BF2  90D8               	bcf	status,0,c
 24835  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24836  000BF6  127E               	iorwf	3966,f,c	;volatile
 24837                           
 24838                           ; BSR set to: 0
 24839                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 24840  000BF8  EE20 F009          	lfsr	2,9
 24841  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24842  000BFE  26D9               	addwf	fsr2l,f,c
 24843  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24844  000C02  22DA               	addwfc	fsr2h,f,c
 24845  000C04  50DF               	movf	indf2,w,c
 24846  000C06  127E               	iorwf	3966,f,c	;volatile
 24847                           
 24848                           ; BSR set to: 0
 24849                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 24850  000C08  EE20 F00B          	lfsr	2,11
 24851  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24852  000C0E  26D9               	addwf	fsr2l,f,c
 24853  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24854  000C12  22DA               	addwfc	fsr2h,f,c
 24855  000C14  50DF               	movf	indf2,w,c
 24856  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24857  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24858  000C1A  509D               	movf	3997,w,c	;volatile
 24859  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24860  000C1E  0BEF               	andlw	-17
 24861  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24862  000C22  6E9D               	movwf	3997,c	;volatile
 24863                           
 24864                           ; BSR set to: 0
 24865                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 24866  000C24  EE20 F00C          	lfsr	2,12
 24867  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24868  000C2A  26D9               	addwf	fsr2l,f,c
 24869  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24870  000C2E  22DA               	addwfc	fsr2h,f,c
 24871  000C30  50DF               	movf	indf2,w,c
 24872  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24873  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 24874  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 24875  000C38  509D               	movf	3997,w,c	;volatile
 24876  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24877  000C3C  0BDF               	andlw	-33
 24878  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 24879  000C40  6E9D               	movwf	3997,c	;volatile
 24880                           
 24881                           ;uart_drv.c: 326: }
 24882  000C42  0012               	return	
 24883  000C44                     l668:
 24884                           
 24885                           ; BSR set to: 0
 24886                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 24887                           
 24888                           ; BSR set to: 0
 24889  000C44  0E02               	movlw	2
 24890  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 24891  000C48  A4D8               	btfss	status,2,c
 24892  000C4A  0012               	return	
 24893                           
 24894                           ; BSR set to: 0
 24895                           ;uart_drv.c: 328: {
 24896                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 24897  000C4C  9094               	bcf	3988,0,c	;volatile
 24898                           
 24899                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 24900  000C4E  8294               	bsf	3988,1,c	;volatile
 24901                           
 24902                           ; BSR set to: 0
 24903                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 24904  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 24905  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 24906  000C58  0E02               	movlw	2
 24907  000C5A  ECA2  F014         	call	_SetUartBaudRate
 24908                           
 24909                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 24910  000C5E  0E00               	movlw	0
 24911  000C60  6EA8               	movwf	4008,c	;volatile
 24912                           
 24913                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 24914  000C62  0100               	movlb	0	; () banked
 24915  000C64  EE20 F004          	lfsr	2,4
 24916  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24917  000C6A  26D9               	addwf	fsr2l,f,c
 24918  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24919  000C6E  22DA               	addwfc	fsr2h,f,c
 24920  000C70  50DF               	movf	indf2,w,c
 24921  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24922  000C74  0E06               	movlw	6
 24923  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24924  000C78                     u12345:
 24925  000C78  90D8               	bcf	status,0,c
 24926  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24927  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24928  000C7E  D7FC               	goto	u12345
 24929  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24930  000C82  12A8               	iorwf	4008,f,c	;volatile
 24931                           
 24932                           ; BSR set to: 0
 24933                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 24934  000C84  EE20 F006          	lfsr	2,6
 24935  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24936  000C8A  26D9               	addwf	fsr2l,f,c
 24937  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24938  000C8E  22DA               	addwfc	fsr2h,f,c
 24939  000C90  50DF               	movf	indf2,w,c
 24940  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24941  000C94  0E05               	movlw	5
 24942  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 24943  000C98                     u12355:
 24944  000C98  90D8               	bcf	status,0,c
 24945  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24946  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 24947  000C9E  D7FC               	goto	u12355
 24948  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 24949  000CA2  12A8               	iorwf	4008,f,c	;volatile
 24950                           
 24951                           ; BSR set to: 0
 24952                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 24953  000CA4  EE20 F001          	lfsr	2,1
 24954  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24955  000CAA  26D9               	addwf	fsr2l,f,c
 24956  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24957  000CAE  22DA               	addwfc	fsr2h,f,c
 24958  000CB0  50DF               	movf	indf2,w,c
 24959  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24960  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 24961  000CB6  0BF0               	andlw	240
 24962  000CB8  12A8               	iorwf	4008,f,c	;volatile
 24963                           
 24964                           ; BSR set to: 0
 24965                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 24966  000CBA  EE20 F008          	lfsr	2,8
 24967  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24968  000CC0  26D9               	addwf	fsr2l,f,c
 24969  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24970  000CC4  22DA               	addwfc	fsr2h,f,c
 24971  000CC6  50DF               	movf	indf2,w,c
 24972  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24973  000CCA  90D8               	bcf	status,0,c
 24974  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24975  000CCE  90D8               	bcf	status,0,c
 24976  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24977  000CD2  90D8               	bcf	status,0,c
 24978  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24979  000CD6  12A8               	iorwf	4008,f,c	;volatile
 24980                           
 24981                           ; BSR set to: 0
 24982                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 24983  000CD8  EE20 F003          	lfsr	2,3
 24984  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 24985  000CDE  26D9               	addwf	fsr2l,f,c
 24986  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 24987  000CE2  22DA               	addwfc	fsr2h,f,c
 24988  000CE4  50DF               	movf	indf2,w,c
 24989  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 24990  000CE8  90D8               	bcf	status,0,c
 24991  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 24992  000CEC  90D8               	bcf	status,0,c
 24993  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 24994  000CF0  12A8               	iorwf	4008,f,c	;volatile
 24995                           
 24996                           ; BSR set to: 0
 24997                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 24998  000CF2  0E00               	movlw	0
 24999  000CF4  6E9C               	movwf	3996,c	;volatile
 25000                           
 25001                           ; BSR set to: 0
 25002                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 25003  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 25004  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 25005  000CFE  50DF               	movf	indf2,w,c
 25006  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25007  000D02  0E00               	movlw	0
 25008  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 25009  000D06  0E80               	movlw	128
 25010  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25011  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25012  000D0C  129C               	iorwf	3996,f,c	;volatile
 25013                           
 25014                           ; BSR set to: 0
 25015                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 25016  000D0E  EE20 F005          	lfsr	2,5
 25017  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25018  000D14  26D9               	addwf	fsr2l,f,c
 25019  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25020  000D18  22DA               	addwfc	fsr2h,f,c
 25021  000D1A  50DF               	movf	indf2,w,c
 25022  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25023  000D1E  0E06               	movlw	6
 25024  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 25025  000D22                     u12365:
 25026  000D22  90D8               	bcf	status,0,c
 25027  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25028  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 25029  000D28  D7FC               	goto	u12365
 25030  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 25031  000D2C  129C               	iorwf	3996,f,c	;volatile
 25032                           
 25033                           ; BSR set to: 0
 25034                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 25035  000D2E  EE20 F007          	lfsr	2,7
 25036  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25037  000D34  26D9               	addwf	fsr2l,f,c
 25038  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25039  000D38  22DA               	addwfc	fsr2h,f,c
 25040  000D3A  50DF               	movf	indf2,w,c
 25041  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25042  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 25043  000D40  0BF0               	andlw	240
 25044  000D42  129C               	iorwf	3996,f,c	;volatile
 25045                           
 25046                           ; BSR set to: 0
 25047                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 25048  000D44  0E00               	movlw	0
 25049  000D46  6E7C               	movwf	3964,c	;volatile
 25050                           
 25051                           ; BSR set to: 0
 25052                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 25053  000D48  EE20 F002          	lfsr	2,2
 25054  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25055  000D4E  26D9               	addwf	fsr2l,f,c
 25056  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25057  000D52  22DA               	addwfc	fsr2h,f,c
 25058  000D54  50DF               	movf	indf2,w,c
 25059  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25060  000D58  90D8               	bcf	status,0,c
 25061  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25062  000D5C  90D8               	bcf	status,0,c
 25063  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 25064  000D60  90D8               	bcf	status,0,c
 25065  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25066  000D64  127C               	iorwf	3964,f,c	;volatile
 25067                           
 25068                           ; BSR set to: 0
 25069                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 25070  000D66  EE20 F00A          	lfsr	2,10
 25071  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25072  000D6C  26D9               	addwf	fsr2l,f,c
 25073  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25074  000D70  22DA               	addwfc	fsr2h,f,c
 25075  000D72  50DF               	movf	indf2,w,c
 25076  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25077  000D76  90D8               	bcf	status,0,c
 25078  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 25079  000D7A  127C               	iorwf	3964,f,c	;volatile
 25080                           
 25081                           ; BSR set to: 0
 25082                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 25083  000D7C  EE20 F009          	lfsr	2,9
 25084  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25085  000D82  26D9               	addwf	fsr2l,f,c
 25086  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25087  000D86  22DA               	addwfc	fsr2h,f,c
 25088  000D88  50DF               	movf	indf2,w,c
 25089  000D8A  127C               	iorwf	3964,f,c	;volatile
 25090                           
 25091                           ; BSR set to: 0
 25092                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 25093  000D8C  EE20 F00B          	lfsr	2,11
 25094  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25095  000D92  26D9               	addwf	fsr2l,f,c
 25096  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25097  000D96  22DA               	addwfc	fsr2h,f,c
 25098  000D98  50DF               	movf	indf2,w,c
 25099  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25100  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25101  000D9E  50A3               	movf	4003,w,c	;volatile
 25102  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25103  000DA2  0BEF               	andlw	-17
 25104  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25105  000DA6  6EA3               	movwf	4003,c	;volatile
 25106                           
 25107                           ; BSR set to: 0
 25108                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 25109  000DA8  EE20 F00C          	lfsr	2,12
 25110  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 25111  000DAE  26D9               	addwf	fsr2l,f,c
 25112  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 25113  000DB2  22DA               	addwfc	fsr2h,f,c
 25114  000DB4  50DF               	movf	indf2,w,c
 25115  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 25116  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 25117  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 25118  000DBC  50A3               	movf	4003,w,c	;volatile
 25119  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25120  000DC0  0BDF               	andlw	-33
 25121  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 25122  000DC4  6EA3               	movwf	4003,c	;volatile
 25123                           
 25124                           ; BSR set to: 0
 25125  000DC6  0012               	return	
 25126  000DC8                     __end_of_Uart_InitUartModule:
 25127                           	opt stack 0
 25128                           tosu	equ	0xFFF
 25129                           tosh	equ	0xFFE
 25130                           tosl	equ	0xFFD
 25131                           pclath	equ	0xFFA
 25132                           tblptru	equ	0xFF8
 25133                           tblptrh	equ	0xFF7
 25134                           tblptrl	equ	0xFF6
 25135                           tablat	equ	0xFF5
 25136                           prodh	equ	0xFF4
 25137                           prodl	equ	0xFF3
 25138                           intcon	equ	0xFF2
 25139                           intcon2	equ	0xFF1
 25140                           intcon3	equ	0xFF0
 25141                           indf0	equ	0xFEF
 25142                           postinc0	equ	0xFEE
 25143                           plusw0	equ	0xFEB
 25144                           fsr0h	equ	0xFEA
 25145                           fsr0l	equ	0xFE9
 25146                           wreg	equ	0xFE8
 25147                           indf1	equ	0xFE7
 25148                           postinc1	equ	0xFE6
 25149                           postdec1	equ	0xFE5
 25150                           plusw1	equ	0xFE3
 25151                           fsr1h	equ	0xFE2
 25152                           fsr1l	equ	0xFE1
 25153                           indf2	equ	0xFDF
 25154                           postinc2	equ	0xFDE
 25155                           postdec2	equ	0xFDD
 25156                           plusw2	equ	0xFDB
 25157                           fsr2h	equ	0xFDA
 25158                           fsr2l	equ	0xFD9
 25159                           status	equ	0xFD8
 25160                           
 25161 ;; *************** function _SetUartBaudRate *****************
 25162 ;; Defined at:
 25163 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 25164 ;; Parameters:    Size  Location     Type
 25165 ;;  Module          1    wreg     unsigned char 
 25166 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 25167 ;;		 -> UartConfig(21), 
 25168 ;; Auto vars:     Size  Location     Type
 25169 ;;  Module          1   57[BANK0 ] unsigned char 
 25170 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 25171 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 25172 ;; Return value:  Size  Location     Type
 25173 ;;                  1    wreg      void 
 25174 ;; Registers used:
 25175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25176 ;; Tracked objects:
 25177 ;;		On entry : 0/0
 25178 ;;		On exit  : 0/0
 25179 ;;		Unchanged: 0/0
 25180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25181 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25182 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25184 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25185 ;;Total ram usage:        7 bytes
 25186 ;; Hardware stack levels used:    1
 25187 ;; Hardware stack levels required when called:   12
 25188 ;; This function calls:
 25189 ;;		___lldiv
 25190 ;;		___lmul
 25191 ;; This function is called by:
 25192 ;;		_Uart_InitUartModule
 25193 ;; This function uses a non-reentrant model
 25194 ;;
 25195                           
 25196                           	psect	text116
 25197  002944                     __ptext116:
 25198                           	opt stack 0
 25199  002944                     _SetUartBaudRate:
 25200                           	opt stack 14
 25201                           
 25202                           ; BSR set to: 0
 25203                           ;incstack = 0
 25204                           ;SetUartBaudRate@Module stored from wreg
 25205  002944  0100               	movlb	0	; () banked
 25206  002946  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 25207                           
 25208                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 25209  002948  0E00               	movlw	0
 25210  00294A  0100               	movlb	0	; () banked
 25211  00294C  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25212  00294E  0E00               	movlw	0
 25213  002950  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25214                           
 25215                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 25216  002952  0E00               	movlw	0
 25217  002954  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25218                           
 25219                           ; BSR set to: 0
 25220                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 25221  002956  EE20 F002          	lfsr	2,2
 25222  00295A  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25223  00295C  26D9               	addwf	fsr2l,f,c
 25224  00295E  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25225  002960  22DA               	addwfc	fsr2h,f,c
 25226  002962  50DF               	movf	indf2,w,c
 25227  002964  A4D8               	btfss	status,2,c
 25228  002966  D00B               	goto	l625
 25229                           
 25230                           ; BSR set to: 0
 25231  002968  EE20 F002          	lfsr	2,2
 25232  00296C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25233  00296E  26D9               	addwf	fsr2l,f,c
 25234  002970  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25235  002972  22DA               	addwfc	fsr2h,f,c
 25236  002974  50DF               	movf	indf2,w,c
 25237  002976  A4D8               	btfss	status,2,c
 25238  002978  D002               	goto	l625
 25239                           
 25240                           ; BSR set to: 0
 25241                           ;uart_drv.c: 128: {
 25242                           ;uart_drv.c: 129: DivisionFactor = 64;
 25243  00297A  0E40               	movlw	64
 25244  00297C  D039               	goto	L35
 25245  00297E                     l625:
 25246                           
 25247                           ; BSR set to: 0
 25248                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 25249                           
 25250                           ; BSR set to: 0
 25251  00297E  EE20 F002          	lfsr	2,2
 25252  002982  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25253  002984  26D9               	addwf	fsr2l,f,c
 25254  002986  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25255  002988  22DA               	addwfc	fsr2h,f,c
 25256  00298A  04DE               	decf	postinc2,w,c
 25257  00298C  A4D8               	btfss	status,2,c
 25258  00298E  D009               	goto	l627
 25259                           
 25260                           ; BSR set to: 0
 25261  002990  EE20 F002          	lfsr	2,2
 25262  002994  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25263  002996  26D9               	addwf	fsr2l,f,c
 25264  002998  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25265  00299A  22DA               	addwfc	fsr2h,f,c
 25266  00299C  50DF               	movf	indf2,w,c
 25267  00299E  B4D8               	btfsc	status,2,c
 25268  0029A0  D012               	goto	u11490
 25269  0029A2                     l627:
 25270                           
 25271                           ; BSR set to: 0
 25272                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25273                           
 25274                           ; BSR set to: 0
 25275  0029A2  EE20 F002          	lfsr	2,2
 25276  0029A6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25277  0029A8  26D9               	addwf	fsr2l,f,c
 25278  0029AA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25279  0029AC  22DA               	addwfc	fsr2h,f,c
 25280  0029AE  50DF               	movf	indf2,w,c
 25281  0029B0  A4D8               	btfss	status,2,c
 25282  0029B2  D00B               	goto	l629
 25283                           
 25284                           ; BSR set to: 0
 25285  0029B4  EE20 F002          	lfsr	2,2
 25286  0029B8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25287  0029BA  26D9               	addwf	fsr2l,f,c
 25288  0029BC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25289  0029BE  22DA               	addwfc	fsr2h,f,c
 25290  0029C0  04DE               	decf	postinc2,w,c
 25291  0029C2  A4D8               	btfss	status,2,c
 25292  0029C4  D002               	goto	l629
 25293  0029C6                     u11490:
 25294                           
 25295                           ; BSR set to: 0
 25296                           ;uart_drv.c: 136: {
 25297                           ;uart_drv.c: 137: DivisionFactor = 16;
 25298  0029C6  0E10               	movlw	16
 25299  0029C8  D013               	goto	L35
 25300  0029CA                     l629:
 25301                           
 25302                           ; BSR set to: 0
 25303                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 25304                           
 25305                           ; BSR set to: 0
 25306  0029CA  EE20 F002          	lfsr	2,2
 25307  0029CE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25308  0029D0  26D9               	addwf	fsr2l,f,c
 25309  0029D2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25310  0029D4  22DA               	addwfc	fsr2h,f,c
 25311  0029D6  04DE               	decf	postinc2,w,c
 25312  0029D8  A4D8               	btfss	status,2,c
 25313  0029DA  D00B               	goto	l631
 25314                           
 25315                           ; BSR set to: 0
 25316  0029DC  EE20 F002          	lfsr	2,2
 25317  0029E0  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25318  0029E2  26D9               	addwf	fsr2l,f,c
 25319  0029E4  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25320  0029E6  22DA               	addwfc	fsr2h,f,c
 25321  0029E8  04DE               	decf	postinc2,w,c
 25322  0029EA  A4D8               	btfss	status,2,c
 25323  0029EC  D002               	goto	l631
 25324                           
 25325                           ; BSR set to: 0
 25326                           ;uart_drv.c: 140: {
 25327                           ;uart_drv.c: 141: DivisionFactor = 4;
 25328  0029EE  0E04               	movlw	4
 25329  0029F0                     L35:
 25330  0029F0  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 25331  0029F2                     l631:
 25332                           
 25333                           ; BSR set to: 0
 25334                           ;uart_drv.c: 146: }
 25335                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 25336                           
 25337                           ; BSR set to: 0
 25338                           
 25339                           ; BSR set to: 0
 25340                           
 25341                           ; BSR set to: 0
 25342                           
 25343                           ; BSR set to: 0
 25344                           
 25345                           ;uart_drv.c: 143: else
 25346                           ;uart_drv.c: 144: {
 25347                           
 25348                           ; BSR set to: 0
 25349  0029F2  EE20 F00D          	lfsr	2,13
 25350  0029F6  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25351  0029F8  26D9               	addwf	fsr2l,f,c
 25352  0029FA  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25353  0029FC  22DA               	addwfc	fsr2h,f,c
 25354  0029FE  CFDE F089          	movff	postinc2,___lldiv@dividend
 25355  002A02  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 25356  002A06  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 25357  002A0A  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 25358  002A0E  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 25359  002A10  6F7D               	movwf	___lmul@multiplier& (0+255),b
 25360  002A12  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 25361  002A14  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 25362  002A16  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 25363  002A18  EE20 F011          	lfsr	2,17
 25364  002A1C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 25365  002A1E  26D9               	addwf	fsr2l,f,c
 25366  002A20  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 25367  002A22  22DA               	addwfc	fsr2h,f,c
 25368  002A24  CFDE F081          	movff	postinc2,___lmul@multiplicand
 25369  002A28  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 25370  002A2C  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 25371  002A30  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 25372  002A34  EC28  F029         	call	___lmul	;wreg free
 25373  002A38  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 25374  002A3C  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 25375  002A40  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 25376  002A44  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 25377  002A48  EC40  F026         	call	___lldiv	;wreg free
 25378  002A4C  0EFF               	movlw	255
 25379  002A4E  0100               	movlb	0	; () banked
 25380  002A50  2589               	addwf	?___lldiv& (0+255),w,b
 25381  002A52  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 25382  002A54  0EFF               	movlw	255
 25383  002A56  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 25384  002A58  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 25385                           
 25386                           ; BSR set to: 0
 25387                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 25388  002A5A  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 25389  002A5C  A4D8               	btfss	status,2,c
 25390  002A5E  D005               	goto	l633
 25391                           
 25392                           ; BSR set to: 0
 25393                           ;uart_drv.c: 152: {
 25394                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25395  002A60  0E00               	movlw	0
 25396  002A62  6E7F               	movwf	3967,c	;volatile
 25397                           
 25398                           ; BSR set to: 0
 25399                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25400  002A64  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 25401                           
 25402                           ;uart_drv.c: 156: }
 25403  002A68  0012               	return	
 25404  002A6A                     l633:
 25405                           
 25406                           ; BSR set to: 0
 25407                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 25408                           
 25409                           ; BSR set to: 0
 25410  002A6A  0E02               	movlw	2
 25411  002A6C  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 25412  002A6E  A4D8               	btfss	status,2,c
 25413  002A70  0012               	return	
 25414                           
 25415                           ; BSR set to: 0
 25416                           ;uart_drv.c: 158: {
 25417                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 25418  002A72  0E00               	movlw	0
 25419  002A74  6E7D               	movwf	3965,c	;volatile
 25420                           
 25421                           ; BSR set to: 0
 25422                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 25423  002A76  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 25424                           
 25425                           ; BSR set to: 0
 25426  002A7A  0012               	return	
 25427  002A7C                     __end_of_SetUartBaudRate:
 25428                           	opt stack 0
 25429                           tosu	equ	0xFFF
 25430                           tosh	equ	0xFFE
 25431                           tosl	equ	0xFFD
 25432                           pclath	equ	0xFFA
 25433                           tblptru	equ	0xFF8
 25434                           tblptrh	equ	0xFF7
 25435                           tblptrl	equ	0xFF6
 25436                           tablat	equ	0xFF5
 25437                           prodh	equ	0xFF4
 25438                           prodl	equ	0xFF3
 25439                           intcon	equ	0xFF2
 25440                           intcon2	equ	0xFF1
 25441                           intcon3	equ	0xFF0
 25442                           indf0	equ	0xFEF
 25443                           postinc0	equ	0xFEE
 25444                           plusw0	equ	0xFEB
 25445                           fsr0h	equ	0xFEA
 25446                           fsr0l	equ	0xFE9
 25447                           wreg	equ	0xFE8
 25448                           indf1	equ	0xFE7
 25449                           postinc1	equ	0xFE6
 25450                           postdec1	equ	0xFE5
 25451                           plusw1	equ	0xFE3
 25452                           fsr1h	equ	0xFE2
 25453                           fsr1l	equ	0xFE1
 25454                           indf2	equ	0xFDF
 25455                           postinc2	equ	0xFDE
 25456                           postdec2	equ	0xFDD
 25457                           plusw2	equ	0xFDB
 25458                           fsr2h	equ	0xFDA
 25459                           fsr2l	equ	0xFD9
 25460                           status	equ	0xFD8
 25461                           
 25462 ;; *************** function ___lmul *****************
 25463 ;; Defined at:
 25464 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 25465 ;; Parameters:    Size  Location     Type
 25466 ;;  multiplier      4   29[BANK0 ] unsigned long 
 25467 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 25468 ;; Auto vars:     Size  Location     Type
 25469 ;;  product         4   37[BANK0 ] unsigned long 
 25470 ;; Return value:  Size  Location     Type
 25471 ;;                  4   29[BANK0 ] unsigned long 
 25472 ;; Registers used:
 25473 ;;		wreg, status,2, status,0
 25474 ;; Tracked objects:
 25475 ;;		On entry : 0/0
 25476 ;;		On exit  : 0/0
 25477 ;;		Unchanged: 0/0
 25478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25479 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25480 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25482 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25483 ;;Total ram usage:       12 bytes
 25484 ;; Hardware stack levels used:    1
 25485 ;; Hardware stack levels required when called:   11
 25486 ;; This function calls:
 25487 ;;		Nothing
 25488 ;; This function is called by:
 25489 ;;		_Tmr_TmrBPrSet
 25490 ;;		_SetUartBaudRate
 25491 ;;		_strtol
 25492 ;; This function uses a non-reentrant model
 25493 ;;
 25494                           
 25495                           	psect	text117
 25496  005250                     __ptext117:
 25497                           	opt stack 0
 25498  005250                     ___lmul:
 25499                           	opt stack 15
 25500                           
 25501                           ; BSR set to: 0
 25502                           ;incstack = 0
 25503  005250  0E00               	movlw	0
 25504  005252  0100               	movlb	0	; () banked
 25505  005254  6F85               	movwf	___lmul@product& (0+255),b
 25506  005256  0E00               	movlw	0
 25507  005258  6F86               	movwf	(___lmul@product+1)& (0+255),b
 25508  00525A  0E00               	movlw	0
 25509  00525C  6F87               	movwf	(___lmul@product+2)& (0+255),b
 25510  00525E  0E00               	movlw	0
 25511  005260  6F88               	movwf	(___lmul@product+3)& (0+255),b
 25512  005262                     
 25513                           ; BSR set to: 0
 25514                           
 25515                           ; BSR set to: 0
 25516  005262  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 25517  005264  D008               	goto	l2656
 25518                           
 25519                           ; BSR set to: 0
 25520  005266  5181               	movf	___lmul@multiplicand& (0+255),w,b
 25521  005268  2785               	addwf	___lmul@product& (0+255),f,b
 25522  00526A  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 25523  00526C  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 25524  00526E  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 25525  005270  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 25526  005272  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 25527  005274  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 25528  005276                     l2656:
 25529                           
 25530                           ; BSR set to: 0
 25531                           
 25532                           ; BSR set to: 0
 25533  005276  90D8               	bcf	status,0,c
 25534  005278  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 25535  00527A  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 25536  00527C  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 25537  00527E  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 25538                           
 25539                           ; BSR set to: 0
 25540  005280  90D8               	bcf	status,0,c
 25541  005282  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 25542  005284  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 25543  005286  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 25544  005288  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 25545  00528A  517D               	movf	___lmul@multiplier& (0+255),w,b
 25546  00528C  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 25547  00528E  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 25548  005290  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 25549  005292  A4D8               	btfss	status,2,c
 25550  005294  D7E6               	goto	l2655
 25551                           
 25552                           ; BSR set to: 0
 25553  005296  C085  F07D         	movff	___lmul@product,?___lmul
 25554  00529A  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 25555  00529E  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 25556  0052A2  C088  F080         	movff	___lmul@product+3,?___lmul+3
 25557                           
 25558                           ; BSR set to: 0
 25559  0052A6  0012               	return		;funcret
 25560  0052A8                     __end_of___lmul:
 25561                           	opt stack 0
 25562                           tosu	equ	0xFFF
 25563                           tosh	equ	0xFFE
 25564                           tosl	equ	0xFFD
 25565                           pclath	equ	0xFFA
 25566                           tblptru	equ	0xFF8
 25567                           tblptrh	equ	0xFF7
 25568                           tblptrl	equ	0xFF6
 25569                           tablat	equ	0xFF5
 25570                           prodh	equ	0xFF4
 25571                           prodl	equ	0xFF3
 25572                           intcon	equ	0xFF2
 25573                           intcon2	equ	0xFF1
 25574                           intcon3	equ	0xFF0
 25575                           indf0	equ	0xFEF
 25576                           postinc0	equ	0xFEE
 25577                           plusw0	equ	0xFEB
 25578                           fsr0h	equ	0xFEA
 25579                           fsr0l	equ	0xFE9
 25580                           wreg	equ	0xFE8
 25581                           indf1	equ	0xFE7
 25582                           postinc1	equ	0xFE6
 25583                           postdec1	equ	0xFE5
 25584                           plusw1	equ	0xFE3
 25585                           fsr1h	equ	0xFE2
 25586                           fsr1l	equ	0xFE1
 25587                           indf2	equ	0xFDF
 25588                           postinc2	equ	0xFDE
 25589                           postdec2	equ	0xFDD
 25590                           plusw2	equ	0xFDB
 25591                           fsr2h	equ	0xFDA
 25592                           fsr2l	equ	0xFD9
 25593                           status	equ	0xFD8
 25594                           
 25595 ;; *************** function _UartSetConfigLow *****************
 25596 ;; Defined at:
 25597 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25598 ;; Parameters:    Size  Location     Type
 25599 ;;		None
 25600 ;; Auto vars:     Size  Location     Type
 25601 ;;		None
 25602 ;; Return value:  Size  Location     Type
 25603 ;;                  1    wreg      void 
 25604 ;; Registers used:
 25605 ;;		wreg, status,2
 25606 ;; Tracked objects:
 25607 ;;		On entry : 0/0
 25608 ;;		On exit  : 0/0
 25609 ;;		Unchanged: 0/0
 25610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25615 ;;Total ram usage:        0 bytes
 25616 ;; Hardware stack levels used:    1
 25617 ;; Hardware stack levels required when called:   11
 25618 ;; This function calls:
 25619 ;;		Nothing
 25620 ;; This function is called by:
 25621 ;;		_ConfigureModem
 25622 ;; This function uses a non-reentrant model
 25623 ;;
 25624                           
 25625                           	psect	text118
 25626  0052A8                     __ptext118:
 25627                           	opt stack 0
 25628  0052A8                     _UartSetConfigLow:
 25629                           	opt stack 15
 25630                           
 25631                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 25632                           
 25633                           ; BSR set to: 0
 25634                           ;incstack = 0
 25635  0052A8  0E01               	movlw	1
 25636  0052AA  0103               	movlb	3	; () banked
 25637  0052AC  6F24               	movwf	_UartConfig& (0+255),b
 25638                           
 25639                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 25640  0052AE  0E00               	movlw	0
 25641  0052B0  6F25               	movwf	(_UartConfig+1)& (0+255),b
 25642                           
 25643                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 25644  0052B2  0E00               	movlw	0
 25645  0052B4  6F26               	movwf	(_UartConfig+2)& (0+255),b
 25646                           
 25647                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 25648  0052B6  0E00               	movlw	0
 25649  0052B8  6F27               	movwf	(_UartConfig+3)& (0+255),b
 25650                           
 25651                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 25652  0052BA  0E00               	movlw	0
 25653  0052BC  6F28               	movwf	(_UartConfig+4)& (0+255),b
 25654                           
 25655                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 25656  0052BE  0E00               	movlw	0
 25657  0052C0  6F29               	movwf	(_UartConfig+5)& (0+255),b
 25658                           
 25659                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 25660  0052C2  0E01               	movlw	1
 25661  0052C4  6F2A               	movwf	(_UartConfig+6)& (0+255),b
 25662                           
 25663                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 25664  0052C6  0E01               	movlw	1
 25665  0052C8  6F2B               	movwf	(_UartConfig+7)& (0+255),b
 25666                           
 25667                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 25668  0052CA  0E00               	movlw	0
 25669  0052CC  6F2C               	movwf	(_UartConfig+8)& (0+255),b
 25670                           
 25671                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 25672  0052CE  0E00               	movlw	0
 25673  0052D0  6F2D               	movwf	(_UartConfig+9)& (0+255),b
 25674                           
 25675                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 25676  0052D2  0E00               	movlw	0
 25677  0052D4  6F2E               	movwf	(_UartConfig+10)& (0+255),b
 25678                           
 25679                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 25680  0052D6  0E00               	movlw	0
 25681  0052D8  6F2F               	movwf	(_UartConfig+11)& (0+255),b
 25682                           
 25683                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 25684  0052DA  0E01               	movlw	1
 25685  0052DC  6F30               	movwf	(_UartConfig+12)& (0+255),b
 25686                           
 25687                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 25688  0052DE  0E00               	movlw	0
 25689  0052E0  6F31               	movwf	(_UartConfig+13)& (0+255),b
 25690  0052E2  0E6C               	movlw	108
 25691  0052E4  6F32               	movwf	(_UartConfig+14)& (0+255),b
 25692  0052E6  0EDC               	movlw	220
 25693  0052E8  6F33               	movwf	(_UartConfig+15)& (0+255),b
 25694  0052EA  0E02               	movlw	2
 25695  0052EC  6F34               	movwf	(_UartConfig+16)& (0+255),b
 25696                           
 25697                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 25698  0052EE  0E80               	movlw	128
 25699  0052F0  6F35               	movwf	(_UartConfig+17)& (0+255),b
 25700  0052F2  0E25               	movlw	37
 25701  0052F4  6F36               	movwf	(_UartConfig+18)& (0+255),b
 25702  0052F6  0E00               	movlw	0
 25703  0052F8  6F37               	movwf	(_UartConfig+19)& (0+255),b
 25704  0052FA  0E00               	movlw	0
 25705  0052FC  6F38               	movwf	(_UartConfig+20)& (0+255),b
 25706                           
 25707                           ; BSR set to: 3
 25708  0052FE  0012               	return		;funcret
 25709  005300                     __end_of_UartSetConfigLow:
 25710                           	opt stack 0
 25711                           tosu	equ	0xFFF
 25712                           tosh	equ	0xFFE
 25713                           tosl	equ	0xFFD
 25714                           pclath	equ	0xFFA
 25715                           tblptru	equ	0xFF8
 25716                           tblptrh	equ	0xFF7
 25717                           tblptrl	equ	0xFF6
 25718                           tablat	equ	0xFF5
 25719                           prodh	equ	0xFF4
 25720                           prodl	equ	0xFF3
 25721                           intcon	equ	0xFF2
 25722                           intcon2	equ	0xFF1
 25723                           intcon3	equ	0xFF0
 25724                           indf0	equ	0xFEF
 25725                           postinc0	equ	0xFEE
 25726                           plusw0	equ	0xFEB
 25727                           fsr0h	equ	0xFEA
 25728                           fsr0l	equ	0xFE9
 25729                           wreg	equ	0xFE8
 25730                           indf1	equ	0xFE7
 25731                           postinc1	equ	0xFE6
 25732                           postdec1	equ	0xFE5
 25733                           plusw1	equ	0xFE3
 25734                           fsr1h	equ	0xFE2
 25735                           fsr1l	equ	0xFE1
 25736                           indf2	equ	0xFDF
 25737                           postinc2	equ	0xFDE
 25738                           postdec2	equ	0xFDD
 25739                           plusw2	equ	0xFDB
 25740                           fsr2h	equ	0xFDA
 25741                           fsr2l	equ	0xFD9
 25742                           status	equ	0xFD8
 25743                           
 25744 ;; *************** function _CheckModem *****************
 25745 ;; Defined at:
 25746 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 25747 ;; Parameters:    Size  Location     Type
 25748 ;;		None
 25749 ;; Auto vars:     Size  Location     Type
 25750 ;;		None
 25751 ;; Return value:  Size  Location     Type
 25752 ;;                  1    wreg      void 
 25753 ;; Registers used:
 25754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25755 ;; Tracked objects:
 25756 ;;		On entry : 0/0
 25757 ;;		On exit  : 0/0
 25758 ;;		Unchanged: 0/0
 25759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;Total ram usage:        0 bytes
 25765 ;; Hardware stack levels used:    1
 25766 ;; Hardware stack levels required when called:   14
 25767 ;; This function calls:
 25768 ;;		_GenerateEvt
 25769 ;;		_OsTmr_GetTimerStatus
 25770 ;;		_OsTmr_StartTimer
 25771 ;;		_ReceiveEvt
 25772 ;;		_Uart_WriteConstString
 25773 ;; This function is called by:
 25774 ;;		_Mdm_MainTask
 25775 ;; This function uses a non-reentrant model
 25776 ;;
 25777                           
 25778                           	psect	text119
 25779  00242C                     __ptext119:
 25780                           	opt stack 0
 25781  00242C                     _CheckModem:
 25782                           	opt stack 13
 25783                           
 25784                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 25785                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 25786                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 25787                           
 25788                           ; BSR set to: 3
 25789                           ;incstack = 0
 25790  00242C  D096               	goto	l982
 25791  00242E                     
 25792                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 25793  00242E  0EEB               	movlw	low CheckModem@Timeout
 25794  002430  0100               	movlb	0	; () banked
 25795  002432  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25796  002434  0E03               	movlw	high CheckModem@Timeout
 25797  002436  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25798  002438  0ED0               	movlw	208
 25799  00243A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25800  00243C  0E07               	movlw	7
 25801  00243E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25802  002440  0E00               	movlw	0
 25803  002442  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25804  002444  0E00               	movlw	0
 25805  002446  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25806  002448  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 25807                           
 25808                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 25809  00244C  0E01               	movlw	1
 25810  00244E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25811                           
 25812                           ;mdm_gsm_gprs.c: 295: break;
 25813  002450  0012               	return	
 25814  002452                     
 25815                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25816  002452  0EEB               	movlw	low CheckModem@Timeout
 25817  002454  0100               	movlb	0	; () banked
 25818  002456  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25819  002458  0E03               	movlw	high CheckModem@Timeout
 25820  00245A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25821  00245C  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25822  002460  06E8               	decf	wreg,f,c
 25823  002462  A4D8               	btfss	status,2,c
 25824  002464  0012               	return	
 25825                           
 25826                           ;mdm_gsm_gprs.c: 300: {
 25827                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 25828  002466  0E02               	movlw	2
 25829  002468  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25830                           
 25831                           ;mdm_gsm_gprs.c: 303: }
 25832                           ;mdm_gsm_gprs.c: 304: break;
 25833  00246A  0012               	return	
 25834  00246C                     
 25835                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 25836  00246C  0EE5               	movlw	low STR_1
 25837  00246E  0100               	movlb	0	; () banked
 25838  002470  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 25839  002472  0EFF               	movlw	high STR_1
 25840  002474  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 25841  002476  0E01               	movlw	1
 25842  002478  EC85  F02C         	call	_Uart_WriteConstString
 25843                           
 25844                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 25845  00247C  0EEB               	movlw	low CheckModem@Timeout
 25846  00247E  0100               	movlb	0	; () banked
 25847  002480  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25848  002482  0E03               	movlw	high CheckModem@Timeout
 25849  002484  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25850  002486  0ED0               	movlw	208
 25851  002488  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25852  00248A  0E07               	movlw	7
 25853  00248C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25854  00248E  0E00               	movlw	0
 25855  002490  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25856  002492  0E00               	movlw	0
 25857  002494  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25858  002496  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 25859                           
 25860                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 25861  00249A  0E03               	movlw	3
 25862  00249C  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25863                           
 25864                           ;mdm_gsm_gprs.c: 313: break;
 25865  00249E  0012               	return	
 25866  0024A0                     
 25867                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 25868  0024A0  0E3C               	movlw	low _NewStringReceived
 25869  0024A2  0100               	movlb	0	; () banked
 25870  0024A4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25871  0024A6  0E00               	movlw	high _NewStringReceived
 25872  0024A8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25873  0024AA  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 25874  0024AE  0900               	iorlw	0
 25875  0024B0  B4D8               	btfsc	status,2,c
 25876  0024B2  D02F               	goto	l989
 25877                           
 25878                           ;mdm_gsm_gprs.c: 318: {
 25879                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 25880  0024B4  CC58  FFE8         	movff	_RxBuffer,wreg
 25881  0024B8  0A4F               	xorlw	79
 25882  0024BA  A4D8               	btfss	status,2,c
 25883  0024BC  D005               	goto	u13330
 25884  0024BE  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25885  0024C2  0A4B               	xorlw	75
 25886  0024C4  B4D8               	btfsc	status,2,c
 25887  0024C6  D00A               	goto	u13350
 25888  0024C8                     u13330:
 25889  0024C8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 25890  0024CC  0A4F               	xorlw	79
 25891  0024CE  A4D8               	btfss	status,2,c
 25892  0024D0  0012               	return	
 25893  0024D2  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 25894  0024D6  0A4B               	xorlw	75
 25895  0024D8  A4D8               	btfss	status,2,c
 25896  0024DA  0012               	return	
 25897  0024DC                     u13350:
 25898                           
 25899                           ;mdm_gsm_gprs.c: 321: {
 25900                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 25901  0024DC  0E02               	movlw	2
 25902  0024DE  0100               	movlb	0	; () banked
 25903  0024E0  6FD2               	movwf	_MdmStatus& (0+255),b
 25904                           
 25905                           ; BSR set to: 0
 25906                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 25907  0024E2  0EE2               	movlw	low _MdmOnOffPulseRequest
 25908  0024E4  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25909  0024E6  0E00               	movlw	high _MdmOnOffPulseRequest
 25910  0024E8  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25911  0024EA  EC97  F030         	call	_GenerateEvt	;wreg free
 25912                           
 25913                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 25914  0024EE  0EEB               	movlw	low CheckModem@Timeout
 25915  0024F0  0100               	movlb	0	; () banked
 25916  0024F2  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25917  0024F4  0E03               	movlw	high CheckModem@Timeout
 25918  0024F6  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25919  0024F8  0EE8               	movlw	232
 25920  0024FA  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25921  0024FC  0E03               	movlw	3
 25922  0024FE  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25923  002500  0E00               	movlw	0
 25924  002502  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25925  002504  0E00               	movlw	0
 25926  002506  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25927  002508  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 25928                           
 25929                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 25930  00250C  0E04               	movlw	4
 25931  00250E  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25932                           
 25933                           ;mdm_gsm_gprs.c: 329: }
 25934                           ;mdm_gsm_gprs.c: 330: }
 25935  002510  0012               	return	
 25936  002512                     l989:
 25937                           
 25938                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25939  002512  0EEB               	movlw	low CheckModem@Timeout
 25940  002514  0100               	movlb	0	; () banked
 25941  002516  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25942  002518  0E03               	movlw	high CheckModem@Timeout
 25943  00251A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25944  00251C  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25945  002520  06E8               	decf	wreg,f,c
 25946  002522  A4D8               	btfss	status,2,c
 25947  002524  0012               	return	
 25948                           
 25949                           ;mdm_gsm_gprs.c: 332: {
 25950                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 25951  002526  0E00               	movlw	0
 25952  002528  0100               	movlb	0	; () banked
 25953  00252A  6FD2               	movwf	_MdmStatus& (0+255),b
 25954                           
 25955                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 25956  00252C  0E01               	movlw	1
 25957  00252E  6E2B               	movwf	_ComChecCompleted,c
 25958                           
 25959                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 25960  002530  0E05               	movlw	5
 25961  002532  6E2A               	movwf	CheckModem@CheckMdmSts,c
 25962                           
 25963                           ; BSR set to: 0
 25964                           ;mdm_gsm_gprs.c: 343: }
 25965                           ;mdm_gsm_gprs.c: 344: break;
 25966                           
 25967                           ; BSR set to: 0
 25968                           
 25969                           ;mdm_gsm_gprs.c: 340: else
 25970                           ;mdm_gsm_gprs.c: 341: {
 25971                           
 25972                           ; BSR set to: 0
 25973                           
 25974                           ;mdm_gsm_gprs.c: 339: }
 25975  002534  0012               	return	
 25976  002536                     
 25977                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 25978                           
 25979                           ; BSR set to: 0
 25980  002536  0EEB               	movlw	low CheckModem@Timeout
 25981  002538  0100               	movlb	0	; () banked
 25982  00253A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25983  00253C  0E03               	movlw	high CheckModem@Timeout
 25984  00253E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25985  002540  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 25986  002544  06E8               	decf	wreg,f,c
 25987  002546  A4D8               	btfss	status,2,c
 25988  002548  0012               	return	
 25989                           
 25990                           ;mdm_gsm_gprs.c: 349: {
 25991                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 25992  00254A  0E00               	movlw	0
 25993  00254C  0100               	movlb	0	; () banked
 25994  00254E  6FD2               	movwf	_MdmStatus& (0+255),b
 25995                           
 25996                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 25997  002550  0E01               	movlw	1
 25998  002552  6E2B               	movwf	_ComChecCompleted,c
 25999                           
 26000                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 26001  002554  0E05               	movlw	5
 26002  002556  6E2A               	movwf	CheckModem@CheckMdmSts,c
 26003                           
 26004                           ; BSR set to: 0
 26005                           ;mdm_gsm_gprs.c: 365: }
 26006                           
 26007                           ; BSR set to: 0
 26008                           ;mdm_gsm_gprs.c: 364: break;
 26009                           
 26010                           ;mdm_gsm_gprs.c: 363: default:
 26011                           
 26012                           ; BSR set to: 0
 26013                           ;mdm_gsm_gprs.c: 361: break;
 26014                           
 26015                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 26016                           
 26017                           ; BSR set to: 0
 26018                           ;mdm_gsm_gprs.c: 356: }
 26019                           ;mdm_gsm_gprs.c: 357: break;
 26020  002558  0012               	return	
 26021  00255A                     l982:
 26022                           
 26023                           ; BSR set to: 0
 26024  00255A  502A               	movf	CheckModem@CheckMdmSts,w,c
 26025                           
 26026                           ; Switch size 1, requested type "space"
 26027                           ; Number of cases is 6, Range of values is 0 to 5
 26028                           ; switch strategies available:
 26029                           ; Name         Instructions Cycles
 26030                           ; simple_byte           19    10 (average)
 26031                           ;	Chosen strategy is simple_byte
 26032  00255C  0A00               	xorlw	0	; case 0
 26033  00255E  B4D8               	btfsc	status,2,c
 26034  002560  D766               	goto	l983
 26035  002562  0A01               	xorlw	1	; case 1
 26036  002564  B4D8               	btfsc	status,2,c
 26037  002566  D775               	goto	l985
 26038  002568  0A03               	xorlw	3	; case 2
 26039  00256A  B4D8               	btfsc	status,2,c
 26040  00256C  D77F               	goto	l987
 26041  00256E  0A01               	xorlw	1	; case 3
 26042  002570  B4D8               	btfsc	status,2,c
 26043  002572  D796               	goto	l988
 26044  002574  0A07               	xorlw	7	; case 4
 26045  002576  B4D8               	btfsc	status,2,c
 26046  002578  D7DE               	goto	l998
 26047  00257A  0A01               	xorlw	1	; case 5
 26048  00257C  0012               	return	
 26049  00257E                     __end_of_CheckModem:
 26050                           	opt stack 0
 26051                           tosu	equ	0xFFF
 26052                           tosh	equ	0xFFE
 26053                           tosl	equ	0xFFD
 26054                           pclath	equ	0xFFA
 26055                           tblptru	equ	0xFF8
 26056                           tblptrh	equ	0xFF7
 26057                           tblptrl	equ	0xFF6
 26058                           tablat	equ	0xFF5
 26059                           prodh	equ	0xFF4
 26060                           prodl	equ	0xFF3
 26061                           intcon	equ	0xFF2
 26062                           intcon2	equ	0xFF1
 26063                           intcon3	equ	0xFF0
 26064                           indf0	equ	0xFEF
 26065                           postinc0	equ	0xFEE
 26066                           plusw0	equ	0xFEB
 26067                           fsr0h	equ	0xFEA
 26068                           fsr0l	equ	0xFE9
 26069                           wreg	equ	0xFE8
 26070                           indf1	equ	0xFE7
 26071                           postinc1	equ	0xFE6
 26072                           postdec1	equ	0xFE5
 26073                           plusw1	equ	0xFE3
 26074                           fsr1h	equ	0xFE2
 26075                           fsr1l	equ	0xFE1
 26076                           indf2	equ	0xFDF
 26077                           postinc2	equ	0xFDE
 26078                           postdec2	equ	0xFDD
 26079                           plusw2	equ	0xFDB
 26080                           fsr2h	equ	0xFDA
 26081                           fsr2l	equ	0xFD9
 26082                           status	equ	0xFD8
 26083                           
 26084 ;; *************** function _MdmCntSm *****************
 26085 ;; Defined at:
 26086 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26087 ;; Parameters:    Size  Location     Type
 26088 ;;		None
 26089 ;; Auto vars:     Size  Location     Type
 26090 ;;		None
 26091 ;; Return value:  Size  Location     Type
 26092 ;;                  1    wreg      void 
 26093 ;; Registers used:
 26094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26095 ;; Tracked objects:
 26096 ;;		On entry : 0/0
 26097 ;;		On exit  : 0/0
 26098 ;;		Unchanged: 0/0
 26099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26104 ;;Total ram usage:        0 bytes
 26105 ;; Hardware stack levels used:    1
 26106 ;; Hardware stack levels required when called:   12
 26107 ;; This function calls:
 26108 ;;		_InitModemInterface
 26109 ;;		_ReceiveEvt
 26110 ;; This function is called by:
 26111 ;;		_Mdm_DrvMainFn
 26112 ;; This function uses a non-reentrant model
 26113 ;;
 26114                           
 26115                           	psect	text120
 26116  004396                     __ptext120:
 26117                           	opt stack 0
 26118  004396                     _MdmCntSm:
 26119                           	opt stack 15
 26120                           
 26121                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 26122                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 26123                           ;mdm_drv.c: 204: switch (MdmCntState)
 26124                           
 26125                           ;incstack = 0
 26126  004396  D045               	goto	l315
 26127  004398                     
 26128                           ;mdm_drv.c: 208: InitModemInterface();
 26129  004398  EC49  F031         	call	_InitModemInterface	;wreg free
 26130                           
 26131                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 26132  00439C  0E01               	movlw	1
 26133  00439E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26134                           
 26135                           ;mdm_drv.c: 211: break;
 26136  0043A0  0012               	return	
 26137  0043A2                     
 26138                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 26139  0043A2  0EE2               	movlw	low _MdmOnOffPulseRequest
 26140  0043A4  0100               	movlb	0	; () banked
 26141  0043A6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26142  0043A8  0E00               	movlw	high _MdmOnOffPulseRequest
 26143  0043AA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26144  0043AC  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 26145  0043B0  0900               	iorlw	0
 26146  0043B2  B4D8               	btfsc	status,2,c
 26147  0043B4  D009               	goto	l319
 26148                           
 26149                           ;mdm_drv.c: 216: {
 26150                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 26151  0043B6  0E02               	movlw	2
 26152  0043B8  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26153                           
 26154                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 26155  0043BA  8284               	bsf	3972,1,c	;volatile
 26156                           
 26157                           ;mdm_drv.c: 222: Counter = 0;
 26158  0043BC  0E00               	movlw	0
 26159  0043BE  0102               	movlb	2	; () banked
 26160  0043C0  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26161  0043C2  0E00               	movlw	0
 26162  0043C4  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 26163                           
 26164                           ;mdm_drv.c: 223: }
 26165  0043C6  0012               	return	
 26166  0043C8                     l319:
 26167                           
 26168                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 26169                           
 26170                           ; BSR set to: 2
 26171  0043C8  0E3D               	movlw	low _MdmResetRequest
 26172  0043CA  0100               	movlb	0	; () banked
 26173  0043CC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26174  0043CE  0E00               	movlw	high _MdmResetRequest
 26175  0043D0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26176  0043D2  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 26177  0043D6  0900               	iorlw	0
 26178  0043D8  B4D8               	btfsc	status,2,c
 26179  0043DA  0012               	return	
 26180                           
 26181                           ;mdm_drv.c: 225: {
 26182                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 26183  0043DC  0E03               	movlw	3
 26184  0043DE  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26185                           
 26186                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 26187  0043E0  8084               	bsf	3972,0,c	;volatile
 26188                           
 26189                           ;mdm_drv.c: 231: Counter = 0;
 26190  0043E2  0E00               	movlw	0
 26191  0043E4  0102               	movlb	2	; () banked
 26192  0043E6  6FE1               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 26193  0043E8  0E00               	movlw	0
 26194  0043EA  6FE0               	movwf	MdmCntSm@Counter& (0+255),b
 26195                           
 26196                           ; BSR set to: 2
 26197                           ;mdm_drv.c: 236: }
 26198                           ;mdm_drv.c: 237: break;
 26199                           
 26200                           ; BSR set to: 2
 26201                           
 26202                           ;mdm_drv.c: 233: else
 26203                           ;mdm_drv.c: 234: {
 26204                           
 26205                           ; BSR set to: 2
 26206                           
 26207                           ;mdm_drv.c: 232: }
 26208  0043EC  0012               	return	
 26209  0043EE                     
 26210                           ;mdm_drv.c: 241: Counter++;
 26211                           
 26212                           ; BSR set to: 2
 26213  0043EE  0102               	movlb	2	; () banked
 26214  0043F0  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26215  0043F2  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26216                           
 26217                           ; BSR set to: 2
 26218                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 26219  0043F4  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26220  0043F6  E104               	bnz	u13250
 26221  0043F8  0E96               	movlw	150
 26222  0043FA  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 26223  0043FC  A0D8               	btfss	status,0,c
 26224  0043FE  0012               	return	
 26225  004400                     u13250:
 26226                           
 26227                           ; BSR set to: 2
 26228                           ;mdm_drv.c: 244: {
 26229                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 26230  004400  9284               	bcf	3972,1,c	;volatile
 26231                           
 26232                           ; BSR set to: 2
 26233                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 26234  004402  0E01               	movlw	1
 26235  004404  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26236                           
 26237                           ; BSR set to: 2
 26238                           ;mdm_drv.c: 249: }
 26239                           ;mdm_drv.c: 250: break;
 26240  004406  0012               	return	
 26241  004408                     
 26242                           ;mdm_drv.c: 254: Counter++;
 26243                           
 26244                           ; BSR set to: 2
 26245  004408  0102               	movlb	2	; () banked
 26246  00440A  4BE0               	infsnz	MdmCntSm@Counter& (0+255),f,b
 26247  00440C  2BE1               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 26248                           
 26249                           ; BSR set to: 2
 26250                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 26251  00440E  51E1               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 26252  004410  E104               	bnz	u13260
 26253  004412  0E0A               	movlw	10
 26254  004414  5DE0               	subwf	MdmCntSm@Counter& (0+255),w,b
 26255  004416  A0D8               	btfss	status,0,c
 26256  004418  0012               	return	
 26257  00441A                     u13260:
 26258                           
 26259                           ; BSR set to: 2
 26260                           ;mdm_drv.c: 257: {
 26261                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 26262  00441A  9084               	bcf	3972,0,c	;volatile
 26263                           
 26264                           ; BSR set to: 2
 26265                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 26266  00441C  0E01               	movlw	1
 26267  00441E  6E2E               	movwf	MdmCntSm@MdmCntState,c
 26268                           
 26269                           ; BSR set to: 2
 26270                           ;mdm_drv.c: 267: }
 26271                           
 26272                           ; BSR set to: 2
 26273                           ;mdm_drv.c: 266: break;
 26274                           
 26275                           ;mdm_drv.c: 265: default:
 26276                           
 26277                           ; BSR set to: 2
 26278                           ;mdm_drv.c: 262: }
 26279                           ;mdm_drv.c: 263: break;
 26280  004420  0012               	return	
 26281  004422                     l315:
 26282                           
 26283                           ; BSR set to: 2
 26284  004422  502E               	movf	MdmCntSm@MdmCntState,w,c
 26285                           
 26286                           ; Switch size 1, requested type "space"
 26287                           ; Number of cases is 4, Range of values is 0 to 3
 26288                           ; switch strategies available:
 26289                           ; Name         Instructions Cycles
 26290                           ; simple_byte           13     7 (average)
 26291                           ;	Chosen strategy is simple_byte
 26292  004424  0A00               	xorlw	0	; case 0
 26293  004426  B4D8               	btfsc	status,2,c
 26294  004428  D7B7               	goto	l316
 26295  00442A  0A01               	xorlw	1	; case 1
 26296  00442C  B4D8               	btfsc	status,2,c
 26297  00442E  D7B9               	goto	l318
 26298  004430  0A03               	xorlw	3	; case 2
 26299  004432  B4D8               	btfsc	status,2,c
 26300  004434  D7DC               	goto	l323
 26301  004436  0A01               	xorlw	1	; case 3
 26302  004438  A4D8               	btfss	status,2,c
 26303  00443A  0012               	return	
 26304  00443C  D7E5               	goto	l325
 26305  00443E                     __end_of_MdmCntSm:
 26306                           	opt stack 0
 26307                           tosu	equ	0xFFF
 26308                           tosh	equ	0xFFE
 26309                           tosl	equ	0xFFD
 26310                           pclath	equ	0xFFA
 26311                           tblptru	equ	0xFF8
 26312                           tblptrh	equ	0xFF7
 26313                           tblptrl	equ	0xFF6
 26314                           tablat	equ	0xFF5
 26315                           prodh	equ	0xFF4
 26316                           prodl	equ	0xFF3
 26317                           intcon	equ	0xFF2
 26318                           intcon2	equ	0xFF1
 26319                           intcon3	equ	0xFF0
 26320                           indf0	equ	0xFEF
 26321                           postinc0	equ	0xFEE
 26322                           plusw0	equ	0xFEB
 26323                           fsr0h	equ	0xFEA
 26324                           fsr0l	equ	0xFE9
 26325                           wreg	equ	0xFE8
 26326                           indf1	equ	0xFE7
 26327                           postinc1	equ	0xFE6
 26328                           postdec1	equ	0xFE5
 26329                           plusw1	equ	0xFE3
 26330                           fsr1h	equ	0xFE2
 26331                           fsr1l	equ	0xFE1
 26332                           indf2	equ	0xFDF
 26333                           postinc2	equ	0xFDE
 26334                           postdec2	equ	0xFDD
 26335                           plusw2	equ	0xFDB
 26336                           fsr2h	equ	0xFDA
 26337                           fsr2l	equ	0xFD9
 26338                           status	equ	0xFD8
 26339                           
 26340 ;; *************** function _InitModemInterface *****************
 26341 ;; Defined at:
 26342 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 26343 ;; Parameters:    Size  Location     Type
 26344 ;;		None
 26345 ;; Auto vars:     Size  Location     Type
 26346 ;;		None
 26347 ;; Return value:  Size  Location     Type
 26348 ;;                  1    wreg      void 
 26349 ;; Registers used:
 26350 ;;		None
 26351 ;; Tracked objects:
 26352 ;;		On entry : 0/0
 26353 ;;		On exit  : 0/0
 26354 ;;		Unchanged: 0/0
 26355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26360 ;;Total ram usage:        0 bytes
 26361 ;; Hardware stack levels used:    1
 26362 ;; Hardware stack levels required when called:   11
 26363 ;; This function calls:
 26364 ;;		Nothing
 26365 ;; This function is called by:
 26366 ;;		_MdmCntSm
 26367 ;; This function uses a non-reentrant model
 26368 ;;
 26369                           
 26370                           	psect	text121
 26371  006292                     __ptext121:
 26372                           	opt stack 0
 26373  006292                     _InitModemInterface:
 26374                           	opt stack 15
 26375                           
 26376                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 26377                           
 26378                           ;incstack = 0
 26379  006292  9096               	bcf	3990,0,c	;volatile
 26380                           
 26381                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 26382  006294  9296               	bcf	3990,1,c	;volatile
 26383                           
 26384                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 26385  006296  8496               	bsf	3990,2,c	;volatile
 26386  006298  0012               	return		;funcret
 26387  00629A                     __end_of_InitModemInterface:
 26388                           	opt stack 0
 26389                           tosu	equ	0xFFF
 26390                           tosh	equ	0xFFE
 26391                           tosl	equ	0xFFD
 26392                           pclath	equ	0xFFA
 26393                           tblptru	equ	0xFF8
 26394                           tblptrh	equ	0xFF7
 26395                           tblptrl	equ	0xFF6
 26396                           tablat	equ	0xFF5
 26397                           prodh	equ	0xFF4
 26398                           prodl	equ	0xFF3
 26399                           intcon	equ	0xFF2
 26400                           intcon2	equ	0xFF1
 26401                           intcon3	equ	0xFF0
 26402                           indf0	equ	0xFEF
 26403                           postinc0	equ	0xFEE
 26404                           plusw0	equ	0xFEB
 26405                           fsr0h	equ	0xFEA
 26406                           fsr0l	equ	0xFE9
 26407                           wreg	equ	0xFE8
 26408                           indf1	equ	0xFE7
 26409                           postinc1	equ	0xFE6
 26410                           postdec1	equ	0xFE5
 26411                           plusw1	equ	0xFE3
 26412                           fsr1h	equ	0xFE2
 26413                           fsr1l	equ	0xFE1
 26414                           indf2	equ	0xFDF
 26415                           postinc2	equ	0xFDE
 26416                           postdec2	equ	0xFDD
 26417                           plusw2	equ	0xFDB
 26418                           fsr2h	equ	0xFDA
 26419                           fsr2l	equ	0xFD9
 26420                           status	equ	0xFD8
 26421                           
 26422 ;; *************** function _InitGprsNetwork *****************
 26423 ;; Defined at:
 26424 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 26425 ;; Parameters:    Size  Location     Type
 26426 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 26427 ;;		 -> NULL(0), 
 26428 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 26429 ;; Auto vars:     Size  Location     Type
 26430 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26431 ;;  Index           1   50[BANK1 ] unsigned char 
 26432 ;; Return value:  Size  Location     Type
 26433 ;;                  1    wreg      enum E8922
 26434 ;; Registers used:
 26435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26436 ;; Tracked objects:
 26437 ;;		On entry : 0/0
 26438 ;;		On exit  : 0/0
 26439 ;;		Unchanged: 0/0
 26440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26441 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26442 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26443 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26444 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26445 ;;Total ram usage:       56 bytes
 26446 ;; Hardware stack levels used:    1
 26447 ;; Hardware stack levels required when called:   14
 26448 ;; This function calls:
 26449 ;;		_ClearBuffer
 26450 ;;		_OsTmr_GetTimerStatus
 26451 ;;		_OsTmr_StartTimer
 26452 ;;		_ReceiveEvt
 26453 ;;		_StringCopy
 26454 ;;		_Uart_WriteConstString
 26455 ;;		_Uart_WriteString
 26456 ;; This function is called by:
 26457 ;;		_MdmHttp_MainTask
 26458 ;; This function uses a non-reentrant model
 26459 ;;
 26460                           
 26461                           	psect	text122
 26462  000DC8                     __ptext122:
 26463                           	opt stack 0
 26464  000DC8                     _InitGprsNetwork:
 26465                           	opt stack 13
 26466                           
 26467                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 26468                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 26469                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 26470                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 26471                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 26472                           
 26473                           ;incstack = 0
 26474  000DC8  0E00               	movlw	0
 26475  000DCA  0101               	movlb	1	; () banked
 26476  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26477                           
 26478                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 26479  000DCE  D154               	goto	l1216
 26480  000DD0                     
 26481                           ; BSR set to: 1
 26482                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 26483                           
 26484                           ; BSR set to: 1
 26485  000DD0  0EDB               	movlw	low _InitNetwork
 26486  000DD2  0100               	movlb	0	; () banked
 26487  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26488  000DD6  0E00               	movlw	high _InitNetwork
 26489  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26490  000DDA  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 26491  000DDE  0900               	iorlw	0
 26492  000DE0  B4D8               	btfsc	status,2,c
 26493  000DE2  D166               	goto	l1219
 26494                           
 26495                           ;mdm_gsm_gprs_http.c: 137: {
 26496                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 26497  000DE4  0E01               	movlw	1
 26498  000DE6  D141               	goto	L75
 26499  000DE8                     
 26500                           ; BSR set to: 1
 26501                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 26502                           
 26503                           ; BSR set to: 1
 26504  000DE8  0E96               	movlw	low STR_8
 26505  000DEA  0100               	movlb	0	; () banked
 26506  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26507  000DEE  0EFE               	movlw	high STR_8
 26508  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26509  000DF2  0E01               	movlw	1
 26510  000DF4  EC85  F02C         	call	_Uart_WriteConstString
 26511                           
 26512                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 26513  000DF8  0E07               	movlw	7
 26514  000DFA  0101               	movlb	1	; () banked
 26515  000DFC  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26516                           
 26517                           ; BSR set to: 1
 26518                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 26519  000DFE  0E02               	movlw	2
 26520  000E00  0100               	movlb	0	; () banked
 26521  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26522                           
 26523                           ; BSR set to: 0
 26524                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 26525  000E04  0EF5               	movlw	low _ConnTimeout
 26526  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26527  000E08  0E02               	movlw	high _ConnTimeout
 26528  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26529  000E0C  0E20               	movlw	32
 26530  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26531  000E10  0E4E               	movlw	78
 26532  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26533  000E14  0E00               	movlw	0
 26534  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26535  000E18  0E00               	movlw	0
 26536  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26537  000E1C  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 26538  000E20  D0C7               	goto	l14290
 26539  000E22                     
 26540                           ; BSR set to: 1
 26541                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 26542                           
 26543                           ; BSR set to: 1
 26544  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 26545  000E24  0100               	movlb	0	; () banked
 26546  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26547  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 26548  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26549  000E2C  0E00               	movlw	0
 26550  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26551  000E30  0E32               	movlw	50
 26552  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26553  000E34  ECF5  F02D         	call	_ClearBuffer	;wreg free
 26554                           
 26555                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 26556  000E38  0ECA               	movlw	low STR_9
 26557  000E3A  0100               	movlb	0	; () banked
 26558  000E3C  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 26559  000E3E  0EFE               	movlw	high STR_9
 26560  000E40  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26561  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 26562  000E44  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 26563  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 26564  000E48  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26565  000E4A  0E00               	movlw	0
 26566  000E4C  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 26567  000E4E  0E14               	movlw	20
 26568  000E50  6F81               	movwf	StringCopy@Len& (0+255),b
 26569  000E52  EC3F  F028         	call	_StringCopy	;wreg free
 26570                           
 26571                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 26572  000E56  0E00               	movlw	0
 26573  000E58  0101               	movlb	1	; () banked
 26574  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 26575  000E5C  D01C               	goto	l1222
 26576  000E5E                     
 26577                           ; BSR set to: 1
 26578                           ;mdm_gsm_gprs_http.c: 161: {
 26579                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 26580                           
 26581                           ; BSR set to: 1
 26582  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26583  000E60  0D01               	mullw	1
 26584  000E62  50F3               	movf	prodl,w,c
 26585  000E64  0100               	movlb	0	; () banked
 26586  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 26587  000E68  6ED9               	movwf	fsr2l,c
 26588  000E6A  50F4               	movf	prodh,w,c
 26589  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 26590  000E6E  6EDA               	movwf	fsr2h,c
 26591  000E70  0101               	movlb	1	; () banked
 26592  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26593  000E74  0100               	movlb	0	; () banked
 26594  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26595  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26596  000E7A  0E14               	movlw	20
 26597  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26598  000E7E  0E00               	movlw	0
 26599  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26600  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 26601  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26602  000E86  6EE1               	movwf	fsr1l,c
 26603  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 26604  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26605  000E8C  6EE2               	movwf	fsr1h,c
 26606  000E8E  CFDF FFE7          	movff	indf2,indf1
 26607                           
 26608                           ; BSR set to: 0
 26609  000E92  0101               	movlb	1	; () banked
 26610  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 26611  000E96                     l1222:
 26612                           
 26613                           ; BSR set to: 1
 26614                           
 26615                           ; BSR set to: 1
 26616  000E96  0100               	movlb	0	; () banked
 26617  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 26618  000E9A  0101               	movlb	1	; () banked
 26619  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 26620  000E9E  A0D8               	btfss	status,0,c
 26621  000EA0  D7DE               	goto	l1223
 26622                           
 26623                           ; BSR set to: 1
 26624                           ;mdm_gsm_gprs_http.c: 163: }
 26625                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 26626                           
 26627                           ; BSR set to: 1
 26628  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26629  000EA4  0100               	movlb	0	; () banked
 26630  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26631  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26632  000EAA  0E14               	movlw	20
 26633  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26634  000EAE  0E00               	movlw	0
 26635  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26636  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 26637  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26638  000EB6  6ED9               	movwf	fsr2l,c
 26639  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 26640  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26641  000EBC  6EDA               	movwf	fsr2h,c
 26642  000EBE  0E22               	movlw	34
 26643  000EC0  6EDF               	movwf	indf2,c
 26644                           
 26645                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 26646  000EC2  0101               	movlb	1	; () banked
 26647  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26648  000EC6  0100               	movlb	0	; () banked
 26649  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26650  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26651  000ECC  0E15               	movlw	21
 26652  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26653  000ED0  0E00               	movlw	0
 26654  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26655  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 26656  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26657  000ED8  6ED9               	movwf	fsr2l,c
 26658  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 26659  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26660  000EDE  6EDA               	movwf	fsr2h,c
 26661  000EE0  0E0D               	movlw	13
 26662  000EE2  6EDF               	movwf	indf2,c
 26663                           
 26664                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 26665  000EE4  0101               	movlb	1	; () banked
 26666  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 26667  000EE8  0100               	movlb	0	; () banked
 26668  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 26669  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 26670  000EEE  0E16               	movlw	22
 26671  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 26672  000EF2  0E00               	movlw	0
 26673  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 26674  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 26675  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 26676  000EFA  6ED9               	movwf	fsr2l,c
 26677  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 26678  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 26679  000F00  6EDA               	movwf	fsr2h,c
 26680  000F02  0E00               	movlw	0
 26681  000F04  6EDF               	movwf	indf2,c
 26682                           
 26683                           ; BSR set to: 0
 26684                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 26685  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 26686  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 26687  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 26688  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 26689  000F0E  0E01               	movlw	1
 26690  000F10  EC46  F02D         	call	_Uart_WriteString
 26691                           
 26692                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 26693  000F14  0E07               	movlw	7
 26694  000F16  0101               	movlb	1	; () banked
 26695  000F18  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26696                           
 26697                           ; BSR set to: 1
 26698                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 26699  000F1A  0E03               	movlw	3
 26700  000F1C  0100               	movlb	0	; () banked
 26701  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26702                           
 26703                           ; BSR set to: 0
 26704                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 26705  000F20  0EF5               	movlw	low _ConnTimeout
 26706  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26707  000F24  0E02               	movlw	high _ConnTimeout
 26708  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26709  000F28  0E20               	movlw	32
 26710  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26711  000F2C  0E4E               	movlw	78
 26712  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26713  000F30  0E00               	movlw	0
 26714  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26715  000F34  0E00               	movlw	0
 26716  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26717  000F38  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 26718  000F3C  D039               	goto	l14290
 26719  000F3E                     
 26720                           ; BSR set to: 1
 26721                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 26722                           
 26723                           ; BSR set to: 1
 26724  000F3E  0E4A               	movlw	low STR_10
 26725  000F40  0100               	movlb	0	; () banked
 26726  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26727  000F44  0EFF               	movlw	high STR_10
 26728  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26729  000F48  0E01               	movlw	1
 26730  000F4A  EC85  F02C         	call	_Uart_WriteConstString
 26731                           
 26732                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 26733  000F4E  0E07               	movlw	7
 26734  000F50  0101               	movlb	1	; () banked
 26735  000F52  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26736                           
 26737                           ; BSR set to: 1
 26738                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 26739  000F54  0E05               	movlw	5
 26740  000F56  0100               	movlb	0	; () banked
 26741  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26742                           
 26743                           ; BSR set to: 0
 26744                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 26745  000F5A  0EF5               	movlw	low _ConnTimeout
 26746  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26747  000F5E  0E02               	movlw	high _ConnTimeout
 26748  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26749  000F62  0E20               	movlw	32
 26750  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26751  000F66  0E4E               	movlw	78
 26752  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26753  000F6A  0E00               	movlw	0
 26754  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26755  000F6E  0E00               	movlw	0
 26756  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26757  000F72  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 26758  000F76  D01C               	goto	l14290
 26759  000F78                     
 26760                           ; BSR set to: 1
 26761                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 26762                           
 26763                           ; BSR set to: 1
 26764  000F78  0E58               	movlw	low STR_11
 26765  000F7A  0100               	movlb	0	; () banked
 26766  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 26767  000F7E  0EFF               	movlw	high STR_11
 26768  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 26769  000F82  0E01               	movlw	1
 26770  000F84  EC85  F02C         	call	_Uart_WriteConstString
 26771                           
 26772                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 26773  000F88  0E08               	movlw	8
 26774  000F8A  0101               	movlb	1	; () banked
 26775  000F8C  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26776                           
 26777                           ; BSR set to: 1
 26778                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 26779  000F8E  0E05               	movlw	5
 26780  000F90  0100               	movlb	0	; () banked
 26781  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 26782                           
 26783                           ; BSR set to: 0
 26784                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 26785  000F94  0EF5               	movlw	low _ConnTimeout
 26786  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26787  000F98  0E02               	movlw	high _ConnTimeout
 26788  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26789  000F9C  0E20               	movlw	32
 26790  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26791  000FA0  0E4E               	movlw	78
 26792  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26793  000FA4  0E00               	movlw	0
 26794  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26795  000FA8  0E00               	movlw	0
 26796  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26797  000FAC  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 26798  000FB0                     l14290:
 26799                           
 26800                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 26801  000FB0  0E01               	movlw	1
 26802  000FB2  0101               	movlb	1	; () banked
 26803  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26804                           
 26805                           ;mdm_gsm_gprs_http.c: 201: break;
 26806  000FB6  D07C               	goto	l1219
 26807  000FB8                     
 26808                           ; BSR set to: 1
 26809                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 26810                           
 26811                           ; BSR set to: 1
 26812  000FB8  0E02               	movlw	2
 26813  000FBA  D05A               	goto	L74
 26814  000FBC                     
 26815                           ; BSR set to: 1
 26816                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 26817                           
 26818                           ; BSR set to: 1
 26819  000FBC  0E3C               	movlw	low _NewStringReceived
 26820  000FBE  0100               	movlb	0	; () banked
 26821  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26822  000FC2  0E00               	movlw	high _NewStringReceived
 26823  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26824  000FC6  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 26825  000FCA  0900               	iorlw	0
 26826  000FCC  B4D8               	btfsc	status,2,c
 26827  000FCE  D018               	goto	l1229
 26828                           
 26829                           ;mdm_gsm_gprs_http.c: 212: {
 26830                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 26831  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 26832  000FD4  0A4F               	xorlw	79
 26833  000FD6  A4D8               	btfss	status,2,c
 26834  000FD8  D06B               	goto	l1219
 26835  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26836  000FDE  0A4B               	xorlw	75
 26837  000FE0  A4D8               	btfss	status,2,c
 26838  000FE2  D066               	goto	l1219
 26839                           
 26840                           ;mdm_gsm_gprs_http.c: 215: {
 26841                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 26842  000FE4  C0D1  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26843                           
 26844                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 26845  000FE8  0E58               	movlw	low _RxBuffer
 26846  000FEA  0100               	movlb	0	; () banked
 26847  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26848  000FEE  0E0C               	movlw	high _RxBuffer
 26849  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26850  000FF2  0E01               	movlw	1
 26851  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26852  000FF6  0E90               	movlw	144
 26853  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26854  000FFA  ECF5  F02D         	call	_ClearBuffer	;wreg free
 26855                           
 26856                           ;mdm_gsm_gprs_http.c: 220: }
 26857                           ;mdm_gsm_gprs_http.c: 221: }
 26858  000FFE  D058               	goto	l1219
 26859  001000                     l1229:
 26860                           
 26861                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26862  001000  0EF5               	movlw	low _ConnTimeout
 26863  001002  0100               	movlb	0	; () banked
 26864  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26865  001006  0E02               	movlw	high _ConnTimeout
 26866  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26867  00100A  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26868  00100E  D029               	goto	L39
 26869  001010                     
 26870                           ; BSR set to: 1
 26871                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 26872                           
 26873                           ; BSR set to: 1
 26874  001010  0E3C               	movlw	low _NewStringReceived
 26875  001012  0100               	movlb	0	; () banked
 26876  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26877  001016  0E00               	movlw	high _NewStringReceived
 26878  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26879  00101A  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 26880  00101E  0900               	iorlw	0
 26881  001020  B4D8               	btfsc	status,2,c
 26882  001022  D018               	goto	l1234
 26883                           
 26884                           ;mdm_gsm_gprs_http.c: 232: {
 26885                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 26886  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 26887  001028  0A2B               	xorlw	43
 26888  00102A  A4D8               	btfss	status,2,c
 26889  00102C  D041               	goto	l1219
 26890  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 26891  001032  0A53               	xorlw	83
 26892  001034  A4D8               	btfss	status,2,c
 26893  001036  D03C               	goto	l1219
 26894                           
 26895                           ;mdm_gsm_gprs_http.c: 235: {
 26896                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 26897  001038  C0D1  F1ED         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 26898                           
 26899                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 26900  00103C  0E58               	movlw	low _RxBuffer
 26901  00103E  0100               	movlb	0	; () banked
 26902  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26903  001042  0E0C               	movlw	high _RxBuffer
 26904  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26905  001046  0E01               	movlw	1
 26906  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26907  00104A  0E90               	movlw	144
 26908  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26909  00104E  ECF5  F02D         	call	_ClearBuffer	;wreg free
 26910                           
 26911                           ;mdm_gsm_gprs_http.c: 240: }
 26912                           ;mdm_gsm_gprs_http.c: 241: }
 26913  001052  D02E               	goto	l1219
 26914  001054                     l1234:
 26915                           
 26916                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 26917  001054  0EF5               	movlw	low _ConnTimeout
 26918  001056  0100               	movlb	0	; () banked
 26919  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26920  00105A  0E02               	movlw	high _ConnTimeout
 26921  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26922  00105E  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 26923  001062                     L39:
 26924  001062  06E8               	decf	wreg,f,c
 26925  001064  A4D8               	btfss	status,2,c
 26926  001066  D024               	goto	l1219
 26927                           
 26928                           ;mdm_gsm_gprs_http.c: 243: {
 26929                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 26930  001068  0E06               	movlw	6
 26931  00106A                     L75:
 26932  00106A  0101               	movlb	1	; () banked
 26933  00106C  D003               	goto	L38
 26934  00106E                     
 26935                           ; BSR set to: 1
 26936                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 26937                           
 26938                           ; BSR set to: 1
 26939  00106E  0E03               	movlw	3
 26940  001070                     L74:
 26941  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 26942                           
 26943                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 26944  001072  0E00               	movlw	0
 26945  001074                     L38:
 26946  001074  6FED               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 26947                           
 26948                           ; BSR set to: 1
 26949                           ;mdm_gsm_gprs_http.c: 257: }
 26950                           
 26951                           ; BSR set to: 1
 26952                           ;mdm_gsm_gprs_http.c: 256: break;
 26953                           
 26954                           ;mdm_gsm_gprs_http.c: 255: default:
 26955                           
 26956                           ;mdm_gsm_gprs_http.c: 253: break;
 26957  001076  D01C               	goto	l1219
 26958  001078                     l1216:
 26959                           
 26960                           ; BSR set to: 1
 26961                           
 26962                           ; BSR set to: 1
 26963  001078  51ED               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 26964                           
 26965                           ; Switch size 1, requested type "space"
 26966                           ; Number of cases is 9, Range of values is 0 to 8
 26967                           ; switch strategies available:
 26968                           ; Name         Instructions Cycles
 26969                           ; simple_byte           28    15 (average)
 26970                           ;	Chosen strategy is simple_byte
 26971  00107A  0A00               	xorlw	0	; case 0
 26972  00107C  B4D8               	btfsc	status,2,c
 26973  00107E  D6A8               	goto	l1217
 26974  001080  0A01               	xorlw	1	; case 1
 26975  001082  B4D8               	btfsc	status,2,c
 26976  001084  D6B1               	goto	l1220
 26977  001086  0A03               	xorlw	3	; case 2
 26978  001088  B4D8               	btfsc	status,2,c
 26979  00108A  D6CB               	goto	l1221
 26980  00108C  0A01               	xorlw	1	; case 3
 26981  00108E  B4D8               	btfsc	status,2,c
 26982  001090  D756               	goto	l1225
 26983  001092  0A07               	xorlw	7	; case 4
 26984  001094  B4D8               	btfsc	status,2,c
 26985  001096  D770               	goto	l1226
 26986  001098  0A01               	xorlw	1	; case 5
 26987  00109A  B4D8               	btfsc	status,2,c
 26988  00109C  D78D               	goto	l1227
 26989  00109E  0A03               	xorlw	3	; case 6
 26990  0010A0  B4D8               	btfsc	status,2,c
 26991  0010A2  D7E5               	goto	l1238
 26992  0010A4  0A01               	xorlw	1	; case 7
 26993  0010A6  B4D8               	btfsc	status,2,c
 26994  0010A8  D789               	goto	l1228
 26995  0010AA  0A0F               	xorlw	15	; case 8
 26996  0010AC  B4D8               	btfsc	status,2,c
 26997  0010AE  D7B0               	goto	l1233
 26998  0010B0                     l1219:
 26999                           
 27000                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 27001                           
 27002                           ; BSR set to: 1
 27003  0010B0  0101               	movlb	1	; () banked
 27004  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 27005  0010B4  0012               	return	
 27006  0010B6                     __end_of_InitGprsNetwork:
 27007                           	opt stack 0
 27008                           tosu	equ	0xFFF
 27009                           tosh	equ	0xFFE
 27010                           tosl	equ	0xFFD
 27011                           pclath	equ	0xFFA
 27012                           tblptru	equ	0xFF8
 27013                           tblptrh	equ	0xFF7
 27014                           tblptrl	equ	0xFF6
 27015                           tablat	equ	0xFF5
 27016                           prodh	equ	0xFF4
 27017                           prodl	equ	0xFF3
 27018                           intcon	equ	0xFF2
 27019                           intcon2	equ	0xFF1
 27020                           intcon3	equ	0xFF0
 27021                           indf0	equ	0xFEF
 27022                           postinc0	equ	0xFEE
 27023                           plusw0	equ	0xFEB
 27024                           fsr0h	equ	0xFEA
 27025                           fsr0l	equ	0xFE9
 27026                           wreg	equ	0xFE8
 27027                           indf1	equ	0xFE7
 27028                           postinc1	equ	0xFE6
 27029                           postdec1	equ	0xFE5
 27030                           plusw1	equ	0xFE3
 27031                           fsr1h	equ	0xFE2
 27032                           fsr1l	equ	0xFE1
 27033                           indf2	equ	0xFDF
 27034                           postinc2	equ	0xFDE
 27035                           postdec2	equ	0xFDD
 27036                           plusw2	equ	0xFDB
 27037                           fsr2h	equ	0xFDA
 27038                           fsr2l	equ	0xFD9
 27039                           status	equ	0xFD8
 27040                           
 27041 ;; *************** function _HttpGetMethod *****************
 27042 ;; Defined at:
 27043 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 27044 ;; Parameters:    Size  Location     Type
 27045 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 27046 ;;		 -> HttpGetDataLocal(5), 
 27047 ;; Auto vars:     Size  Location     Type
 27048 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 27049 ;;  Index           1  200[BANK1 ] unsigned char 
 27050 ;; Return value:  Size  Location     Type
 27051 ;;                  1    wreg      enum E8922
 27052 ;; Registers used:
 27053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27054 ;; Tracked objects:
 27055 ;;		On entry : 0/0
 27056 ;;		On exit  : 0/0
 27057 ;;		Unchanged: 0/0
 27058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27060 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27061 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27062 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27063 ;;Total ram usage:      207 bytes
 27064 ;; Hardware stack levels used:    1
 27065 ;; Hardware stack levels required when called:   14
 27066 ;; This function calls:
 27067 ;;		_ClearBuffer
 27068 ;;		_OsTmr_GetTimerStatus
 27069 ;;		_OsTmr_StartTimer
 27070 ;;		_ReceiveEvt
 27071 ;;		_StringCopy
 27072 ;;		_Uart_WriteConstString
 27073 ;;		_Uart_WriteString
 27074 ;; This function is called by:
 27075 ;;		_MdmHttp_MainTask
 27076 ;; This function uses a non-reentrant model
 27077 ;;
 27078                           
 27079                           	psect	text123
 27080  0005EC                     __ptext123:
 27081                           	opt stack 0
 27082  0005EC                     _HttpGetMethod:
 27083                           	opt stack 13
 27084                           
 27085                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 27086                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 27087                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 27088                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 27089                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 27090                           
 27091                           ; BSR set to: 1
 27092                           ;incstack = 0
 27093  0005EC  0E00               	movlw	0
 27094  0005EE  0101               	movlb	1	; () banked
 27095  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27096                           
 27097                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 27098  0005F2  D230               	goto	l1249
 27099  0005F4                     
 27100                           ; BSR set to: 1
 27101                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 27102                           
 27103                           ; BSR set to: 1
 27104  0005F4  0EDA               	movlw	low _GetMethod
 27105  0005F6  0100               	movlb	0	; () banked
 27106  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27107  0005FA  0E00               	movlw	high _GetMethod
 27108  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27109  0005FE  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 27110  000602  0900               	iorlw	0
 27111  000604  B4D8               	btfsc	status,2,c
 27112  000606  D257               	goto	l1252
 27113                           
 27114                           ;mdm_gsm_gprs_http.c: 284: {
 27115                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 27116  000608  0E01               	movlw	1
 27117  00060A  D18C               	goto	L41
 27118  00060C                     
 27119                           ; BSR set to: 1
 27120                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 27121                           
 27122                           ; BSR set to: 1
 27123  00060C  0E9C               	movlw	low STR_12
 27124  00060E  0100               	movlb	0	; () banked
 27125  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27126  000612  0EFF               	movlw	high STR_12
 27127  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27128  000616  0E01               	movlw	1
 27129  000618  EC85  F02C         	call	_Uart_WriteConstString
 27130                           
 27131                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 27132  00061C  0E0A               	movlw	10
 27133  00061E  0101               	movlb	1	; () banked
 27134  000620  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27135                           
 27136                           ; BSR set to: 1
 27137                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 27138  000622  0E02               	movlw	2
 27139  000624  0100               	movlb	0	; () banked
 27140  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27141                           
 27142                           ; BSR set to: 0
 27143                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 27144  000628  0EF5               	movlw	low _ConnTimeout
 27145  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27146  00062C  0E02               	movlw	high _ConnTimeout
 27147  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27148  000630  0E20               	movlw	32
 27149  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27150  000634  0E4E               	movlw	78
 27151  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27152  000638  0E00               	movlw	0
 27153  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27154  00063C  0E00               	movlw	0
 27155  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27156  000640  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27157  000644  D1AF               	goto	l14456
 27158  000646                     
 27159                           ; BSR set to: 1
 27160                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 27161                           
 27162                           ; BSR set to: 1
 27163  000646  0E66               	movlw	low STR_13
 27164  000648  0100               	movlb	0	; () banked
 27165  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27166  00064C  0EFF               	movlw	high STR_13
 27167  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27168  000650  0E01               	movlw	1
 27169  000652  EC85  F02C         	call	_Uart_WriteConstString
 27170                           
 27171                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 27172  000656  0E0A               	movlw	10
 27173  000658  0101               	movlb	1	; () banked
 27174  00065A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27175                           
 27176                           ; BSR set to: 1
 27177                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 27178  00065C  0E03               	movlw	3
 27179  00065E  0100               	movlb	0	; () banked
 27180  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27181                           
 27182                           ; BSR set to: 0
 27183                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 27184  000662  0EF5               	movlw	low _ConnTimeout
 27185  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27186  000666  0E02               	movlw	high _ConnTimeout
 27187  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27188  00066A  0E20               	movlw	32
 27189  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27190  00066E  0E4E               	movlw	78
 27191  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27192  000672  0E00               	movlw	0
 27193  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27194  000676  0E00               	movlw	0
 27195  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27196  00067A  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27197  00067E  D192               	goto	l14456
 27198  000680                     
 27199                           ; BSR set to: 1
 27200                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 27201                           
 27202                           ; BSR set to: 1
 27203  000680  0EB5               	movlw	low STR_14
 27204  000682  0100               	movlb	0	; () banked
 27205  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27206  000686  0EFE               	movlw	high STR_14
 27207  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27208  00068A  0E01               	movlw	1
 27209  00068C  EC85  F02C         	call	_Uart_WriteConstString
 27210                           
 27211                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 27212  000690  0E0A               	movlw	10
 27213  000692  0101               	movlb	1	; () banked
 27214  000694  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27215                           
 27216                           ; BSR set to: 1
 27217                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 27218  000696  0E04               	movlw	4
 27219  000698  0100               	movlb	0	; () banked
 27220  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27221                           
 27222                           ; BSR set to: 0
 27223                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 27224  00069C  0EF5               	movlw	low _ConnTimeout
 27225  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27226  0006A0  0E02               	movlw	high _ConnTimeout
 27227  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27228  0006A4  0E20               	movlw	32
 27229  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27230  0006A8  0E4E               	movlw	78
 27231  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27232  0006AC  0E00               	movlw	0
 27233  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27234  0006B0  0E00               	movlw	0
 27235  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27236  0006B4  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27237  0006B8  D175               	goto	l14456
 27238  0006BA                     
 27239                           ; BSR set to: 1
 27240                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 27241                           
 27242                           ; BSR set to: 1
 27243  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27244  0006BC  0100               	movlb	0	; () banked
 27245  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27246  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 27247  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27248  0006C4  0E00               	movlw	0
 27249  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27250  0006C8  0EC8               	movlw	200
 27251  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27252  0006CC  ECF5  F02D         	call	_ClearBuffer	;wreg free
 27253                           
 27254                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 27255  0006D0  0EF3               	movlw	low STR_15
 27256  0006D2  0100               	movlb	0	; () banked
 27257  0006D4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27258  0006D6  0EFE               	movlw	high STR_15
 27259  0006D8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27260  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 27261  0006DC  6F7F               	movwf	StringCopy@DestStr& (0+255),b
 27262  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 27263  0006E0  6F80               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27264  0006E2  0E00               	movlw	0
 27265  0006E4  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27266  0006E6  0E13               	movlw	19
 27267  0006E8  6F81               	movwf	StringCopy@Len& (0+255),b
 27268  0006EA  EC3F  F028         	call	_StringCopy	;wreg free
 27269                           
 27270                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 27271  0006EE  0E00               	movlw	0
 27272  0006F0  0101               	movlb	1	; () banked
 27273  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 27274  0006F4  D024               	goto	l1257
 27275  0006F6                     
 27276                           ; BSR set to: 1
 27277                           ;mdm_gsm_gprs_http.c: 332: {
 27278                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 27279                           
 27280                           ; BSR set to: 1
 27281  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27282  0006F8  0D01               	mullw	1
 27283  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 27284  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 27285  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 27286  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 27287  00070A  50F3               	movf	prodl,w,c
 27288  00070C  0100               	movlb	0	; () banked
 27289  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27290  000710  6ED9               	movwf	fsr2l,c
 27291  000712  50F4               	movf	prodh,w,c
 27292  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27293  000716  6EDA               	movwf	fsr2h,c
 27294  000718  0101               	movlb	1	; () banked
 27295  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27296  00071C  0100               	movlb	0	; () banked
 27297  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 27298  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 27299  000722  0E13               	movlw	19
 27300  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 27301  000726  0E00               	movlw	0
 27302  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 27303  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 27304  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 27305  00072E  6EE1               	movwf	fsr1l,c
 27306  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 27307  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 27308  000734  6EE2               	movwf	fsr1h,c
 27309  000736  CFDF FFE7          	movff	indf2,indf1
 27310                           
 27311                           ; BSR set to: 0
 27312  00073A  0101               	movlb	1	; () banked
 27313  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 27314  00073E                     l1257:
 27315                           
 27316                           ; BSR set to: 1
 27317                           
 27318                           ; BSR set to: 1
 27319  00073E  0100               	movlb	0	; () banked
 27320  000740  EE20 F002          	lfsr	2,2
 27321  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27322  000746  26D9               	addwf	fsr2l,f,c
 27323  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27324  00074A  22DA               	addwfc	fsr2h,f,c
 27325  00074C  50DE               	movf	postinc2,w,c
 27326  00074E  0101               	movlb	1	; () banked
 27327  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 27328  000752  A0D8               	btfss	status,0,c
 27329  000754  D7D0               	goto	l1258
 27330                           
 27331                           ; BSR set to: 1
 27332                           ;mdm_gsm_gprs_http.c: 334: }
 27333                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 27334                           
 27335                           ; BSR set to: 1
 27336  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27337  000758  0100               	movlb	0	; () banked
 27338  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27339  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27340  00075E  0E13               	movlw	19
 27341  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27342  000762  0E00               	movlw	0
 27343  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27344  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 27345  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27346  00076A  6ED9               	movwf	fsr2l,c
 27347  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 27348  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27349  000770  6EDA               	movwf	fsr2h,c
 27350  000772  0E22               	movlw	34
 27351  000774  6EDF               	movwf	indf2,c
 27352                           
 27353                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 27354  000776  0101               	movlb	1	; () banked
 27355  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27356  00077A  0100               	movlb	0	; () banked
 27357  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27358  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27359  000780  0E14               	movlw	20
 27360  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27361  000784  0E00               	movlw	0
 27362  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27363  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 27364  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27365  00078C  6ED9               	movwf	fsr2l,c
 27366  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 27367  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27368  000792  6EDA               	movwf	fsr2h,c
 27369  000794  0E0D               	movlw	13
 27370  000796  6EDF               	movwf	indf2,c
 27371                           
 27372                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 27373  000798  0101               	movlb	1	; () banked
 27374  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 27375  00079C  0100               	movlb	0	; () banked
 27376  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 27377  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 27378  0007A2  0E15               	movlw	21
 27379  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 27380  0007A6  0E00               	movlw	0
 27381  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 27382  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 27383  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 27384  0007AE  6ED9               	movwf	fsr2l,c
 27385  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 27386  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 27387  0007B4  6EDA               	movwf	fsr2h,c
 27388  0007B6  0E00               	movlw	0
 27389  0007B8  6EDF               	movwf	indf2,c
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 27393  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 27394  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 27395  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 27396  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 27397  0007C2  0E01               	movlw	1
 27398  0007C4  EC46  F02D         	call	_Uart_WriteString
 27399                           
 27400                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 27401  0007C8  0E0A               	movlw	10
 27402  0007CA  0101               	movlb	1	; () banked
 27403  0007CC  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27404                           
 27405                           ; BSR set to: 1
 27406                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 27407  0007CE  0E05               	movlw	5
 27408  0007D0  0100               	movlb	0	; () banked
 27409  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27410                           
 27411                           ; BSR set to: 0
 27412                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 27413  0007D4  0EF5               	movlw	low _ConnTimeout
 27414  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27415  0007D8  0E02               	movlw	high _ConnTimeout
 27416  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27417  0007DC  0E20               	movlw	32
 27418  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27419  0007E0  0E4E               	movlw	78
 27420  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27421  0007E4  0E00               	movlw	0
 27422  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27423  0007E8  0E00               	movlw	0
 27424  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27425  0007EC  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27426  0007F0  D0D9               	goto	l14456
 27427  0007F2                     
 27428                           ; BSR set to: 1
 27429                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 27430                           
 27431                           ; BSR set to: 1
 27432  0007F2  0E2B               	movlw	low STR_16
 27433  0007F4  0100               	movlb	0	; () banked
 27434  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27435  0007F8  0EFF               	movlw	high STR_16
 27436  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27437  0007FC  0E01               	movlw	1
 27438  0007FE  EC85  F02C         	call	_Uart_WriteConstString
 27439                           
 27440                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 27441  000802  0E0A               	movlw	10
 27442  000804  0101               	movlb	1	; () banked
 27443  000806  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27444                           
 27445                           ; BSR set to: 1
 27446                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 27447  000808  0E06               	movlw	6
 27448  00080A  0100               	movlb	0	; () banked
 27449  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27450                           
 27451                           ; BSR set to: 0
 27452                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 27453  00080E  0EF5               	movlw	low _ConnTimeout
 27454  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27455  000812  0E02               	movlw	high _ConnTimeout
 27456  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27457  000816  0E20               	movlw	32
 27458  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27459  00081A  0E4E               	movlw	78
 27460  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27461  00081E  0E00               	movlw	0
 27462  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27463  000822  0E00               	movlw	0
 27464  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27465  000826  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27466                           
 27467                           ;mdm_gsm_gprs_http.c: 358: break;
 27468  00082A  D145               	goto	l1252
 27469  00082C                     
 27470                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 27471  00082C  0E07               	movlw	7
 27472  00082E  0101               	movlb	1	; () banked
 27473  000830  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27474                           
 27475                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 27476  000832  0E09               	movlw	9
 27477  000834  0100               	movlb	0	; () banked
 27478  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27479                           
 27480                           ; BSR set to: 0
 27481                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 27482  000838  0EF5               	movlw	low _ConnTimeout
 27483  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27484  00083C  0E02               	movlw	high _ConnTimeout
 27485  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27486  000840  0E20               	movlw	32
 27487  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27488  000844  0E4E               	movlw	78
 27489  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27490  000848  0E00               	movlw	0
 27491  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27492  00084C  0E00               	movlw	0
 27493  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27494  000850  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27495                           
 27496                           ;mdm_gsm_gprs_http.c: 371: break;
 27497  000854  D130               	goto	l1252
 27498  000856                     
 27499                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 27500  000856  0E82               	movlw	low STR_17
 27501  000858  0100               	movlb	0	; () banked
 27502  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27503  00085C  0EFF               	movlw	high STR_17
 27504  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27505  000860  0E01               	movlw	1
 27506  000862  EC85  F02C         	call	_Uart_WriteConstString
 27507                           
 27508                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 27509  000866  0E0D               	movlw	13
 27510  000868  0101               	movlb	1	; () banked
 27511  00086A  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27512                           
 27513                           ; BSR set to: 1
 27514                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 27515  00086C  0E09               	movlw	9
 27516  00086E  0100               	movlb	0	; () banked
 27517  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27518                           
 27519                           ; BSR set to: 0
 27520                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 27521  000872  0EF5               	movlw	low _ConnTimeout
 27522  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27523  000876  0E02               	movlw	high _ConnTimeout
 27524  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27525  00087A  0E20               	movlw	32
 27526  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27527  00087E  0E4E               	movlw	78
 27528  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27529  000882  0E00               	movlw	0
 27530  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27531  000886  0E00               	movlw	0
 27532  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27533  00088A  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27534  00088E  D08A               	goto	l14456
 27535  000890                     
 27536                           ; BSR set to: 1
 27537                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 27538                           
 27539                           ; BSR set to: 1
 27540  000890  0E8F               	movlw	low STR_18
 27541  000892  0100               	movlb	0	; () banked
 27542  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27543  000896  0EFF               	movlw	high STR_18
 27544  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27545  00089A  0E01               	movlw	1
 27546  00089C  EC85  F02C         	call	_Uart_WriteConstString
 27547                           
 27548                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 27549  0008A0  0E0A               	movlw	10
 27550  0008A2  0101               	movlb	1	; () banked
 27551  0008A4  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27552                           
 27553                           ; BSR set to: 1
 27554                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 27555  0008A6  0E0E               	movlw	14
 27556  0008A8  0100               	movlb	0	; () banked
 27557  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27558                           
 27559                           ; BSR set to: 0
 27560                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 27561  0008AC  0EF5               	movlw	low _ConnTimeout
 27562  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27563  0008B0  0E02               	movlw	high _ConnTimeout
 27564  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27565  0008B4  0E20               	movlw	32
 27566  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27567  0008B8  0E4E               	movlw	78
 27568  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27569  0008BC  0E00               	movlw	0
 27570  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27571  0008C0  0E00               	movlw	0
 27572  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27573  0008C4  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27574  0008C8  D06D               	goto	l14456
 27575  0008CA                     
 27576                           ; BSR set to: 1
 27577                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 27578                           
 27579                           ; BSR set to: 1
 27580  0008CA  0E3C               	movlw	low _NewStringReceived
 27581  0008CC  0100               	movlb	0	; () banked
 27582  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27583  0008D0  0E00               	movlw	high _NewStringReceived
 27584  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27585  0008D4  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 27586  0008D8  0900               	iorlw	0
 27587  0008DA  B4D8               	btfsc	status,2,c
 27588  0008DC  D018               	goto	l1265
 27589                           
 27590                           ;mdm_gsm_gprs_http.c: 400: {
 27591                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 27592  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 27593  0008E2  0A4F               	xorlw	79
 27594  0008E4  A4D8               	btfss	status,2,c
 27595  0008E6  D0E7               	goto	l1252
 27596  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27597  0008EC  0A4B               	xorlw	75
 27598  0008EE  A4D8               	btfss	status,2,c
 27599  0008F0  D0E2               	goto	l1252
 27600                           
 27601                           ;mdm_gsm_gprs_http.c: 403: {
 27602                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 27603  0008F2  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27604                           
 27605                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 27606  0008F6  0E58               	movlw	low _RxBuffer
 27607  0008F8  0100               	movlb	0	; () banked
 27608  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27609  0008FC  0E0C               	movlw	high _RxBuffer
 27610  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27611  000900  0E01               	movlw	1
 27612  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27613  000904  0E90               	movlw	144
 27614  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27615  000908  ECF5  F02D         	call	_ClearBuffer	;wreg free
 27616                           
 27617                           ;mdm_gsm_gprs_http.c: 408: }
 27618                           ;mdm_gsm_gprs_http.c: 409: }
 27619  00090C  D0D4               	goto	l1252
 27620  00090E                     l1265:
 27621                           
 27622                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27623  00090E  0EF5               	movlw	low _ConnTimeout
 27624  000910  0100               	movlb	0	; () banked
 27625  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27626  000914  0E02               	movlw	high _ConnTimeout
 27627  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27628  000918  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27629  00091C                     L42:
 27630  00091C  06E8               	decf	wreg,f,c
 27631  00091E  A4D8               	btfss	status,2,c
 27632  000920  D0CA               	goto	l1252
 27633                           
 27634                           ;mdm_gsm_gprs_http.c: 411: {
 27635                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 27636  000922  0E0F               	movlw	15
 27637  000924                     L41:
 27638  000924  0101               	movlb	1	; () banked
 27639  000926  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27640                           
 27641                           ; BSR set to: 1
 27642                           ;mdm_gsm_gprs_http.c: 414: }
 27643                           ;mdm_gsm_gprs_http.c: 415: break;
 27644                           
 27645                           ; BSR set to: 1
 27646  000928  D0C6               	goto	l1252
 27647  00092A                     
 27648                           ; BSR set to: 1
 27649                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 27650                           
 27651                           ; BSR set to: 1
 27652  00092A  0E3C               	movlw	low _NewStringReceived
 27653  00092C  0100               	movlb	0	; () banked
 27654  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27655  000930  0E00               	movlw	high _NewStringReceived
 27656  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27657  000934  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 27658  000938  0900               	iorlw	0
 27659  00093A  B4D8               	btfsc	status,2,c
 27660  00093C  D018               	goto	l1270
 27661                           
 27662                           ;mdm_gsm_gprs_http.c: 420: {
 27663                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27664  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 27665  000942  0A2B               	xorlw	43
 27666  000944  A4D8               	btfss	status,2,c
 27667  000946  D0B7               	goto	l1252
 27668  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27669  00094C  0A48               	xorlw	72
 27670  00094E  A4D8               	btfss	status,2,c
 27671  000950  D0B2               	goto	l1252
 27672                           
 27673                           ;mdm_gsm_gprs_http.c: 423: {
 27674                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 27675  000952  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27676                           
 27677                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 27678  000956  0E58               	movlw	low _RxBuffer
 27679  000958  0100               	movlb	0	; () banked
 27680  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27681  00095C  0E0C               	movlw	high _RxBuffer
 27682  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27683  000960  0E01               	movlw	1
 27684  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27685  000964  0E90               	movlw	144
 27686  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27687  000968  ECF5  F02D         	call	_ClearBuffer	;wreg free
 27688                           
 27689                           ;mdm_gsm_gprs_http.c: 428: }
 27690                           ;mdm_gsm_gprs_http.c: 429: }
 27691  00096C  D0A4               	goto	l1252
 27692  00096E                     l1270:
 27693                           
 27694                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27695  00096E  0EF5               	movlw	low _ConnTimeout
 27696  000970  0100               	movlb	0	; () banked
 27697  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27698  000974  0E02               	movlw	high _ConnTimeout
 27699  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27700  000978  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27701  00097C  D7CF               	goto	L42
 27702  00097E                     
 27703                           ; BSR set to: 1
 27704                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 27705                           
 27706                           ; BSR set to: 1
 27707  00097E  0E0C               	movlw	12
 27708  000980  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27709                           
 27710                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 27711  000982  0E05               	movlw	5
 27712  000984  0100               	movlb	0	; () banked
 27713  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 27714                           
 27715                           ; BSR set to: 0
 27716                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 27717  000988  0ED5               	movlw	low _ConnWait
 27718  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 27719  00098C  0E03               	movlw	high _ConnWait
 27720  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 27721  000990  0EE8               	movlw	232
 27722  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 27723  000994  0E03               	movlw	3
 27724  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 27725  000998  0E00               	movlw	0
 27726  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 27727  00099C  0E00               	movlw	0
 27728  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 27729  0009A0  EC9F  F028         	call	_OsTmr_StartTimer	;wreg free
 27730  0009A4                     l14456:
 27731                           
 27732                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 27733  0009A4  0E01               	movlw	1
 27734  0009A6  0101               	movlb	1	; () banked
 27735  0009A8  D053               	goto	L44
 27736  0009AA                     
 27737                           ; BSR set to: 1
 27738                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 27739                           
 27740                           ; BSR set to: 1
 27741  0009AA  0ED5               	movlw	low _ConnWait
 27742  0009AC  0100               	movlb	0	; () banked
 27743  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27744  0009B0  0E03               	movlw	high _ConnWait
 27745  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27746  0009B4  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27747  0009B8  06E8               	decf	wreg,f,c
 27748  0009BA  A4D8               	btfss	status,2,c
 27749  0009BC  D07C               	goto	l1252
 27750                           
 27751                           ;mdm_gsm_gprs_http.c: 450: {
 27752                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 27753  0009BE  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27754                           
 27755                           ;mdm_gsm_gprs_http.c: 453: }
 27756                           ;mdm_gsm_gprs_http.c: 454: break;
 27757  0009C2  D079               	goto	l1252
 27758  0009C4                     
 27759                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 27760  0009C4  0E3C               	movlw	low _NewStringReceived
 27761  0009C6  0100               	movlb	0	; () banked
 27762  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27763  0009CA  0E00               	movlw	high _NewStringReceived
 27764  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27765  0009CE  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 27766  0009D2  0900               	iorlw	0
 27767  0009D4  B4D8               	btfsc	status,2,c
 27768  0009D6  D02D               	goto	l1278
 27769                           
 27770                           ;mdm_gsm_gprs_http.c: 459: {
 27771                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 27772  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 27773  0009DC  0A2B               	xorlw	43
 27774  0009DE  A4D8               	btfss	status,2,c
 27775  0009E0  D06A               	goto	l1252
 27776  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27777  0009E6  0A48               	xorlw	72
 27778  0009E8  A4D8               	btfss	status,2,c
 27779  0009EA  D065               	goto	l1252
 27780                           
 27781                           ;mdm_gsm_gprs_http.c: 462: {
 27782                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 27783  0009EC  C0D0  F1EC         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 27784                           
 27785                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 27786  0009F0  0E58               	movlw	low _RxBuffer
 27787  0009F2  0100               	movlb	0	; () banked
 27788  0009F4  6F7D               	movwf	StringCopy@SourceStr& (0+255),b
 27789  0009F6  0E0C               	movlw	high _RxBuffer
 27790  0009F8  6F7E               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27791  0009FA  EE20 F003          	lfsr	2,3
 27792  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 27793  000A00  26D9               	addwf	fsr2l,f,c
 27794  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 27795  000A04  22DA               	addwfc	fsr2h,f,c
 27796  000A06  CFDE F07F          	movff	postinc2,StringCopy@DestStr
 27797  000A0A  CFDD F080          	movff	postdec2,StringCopy@DestStr+1
 27798  000A0E  0E01               	movlw	1
 27799  000A10  6F82               	movwf	(StringCopy@Len+1)& (0+255),b
 27800  000A12  0E90               	movlw	144
 27801  000A14  6F81               	movwf	StringCopy@Len& (0+255),b
 27802  000A16  EC3F  F028         	call	_StringCopy	;wreg free
 27803                           
 27804                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 27805  000A1A  0E58               	movlw	low _RxBuffer
 27806  000A1C  0100               	movlb	0	; () banked
 27807  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27808  000A20  0E0C               	movlw	high _RxBuffer
 27809  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27810  000A24  0E01               	movlw	1
 27811  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27812  000A28  0E90               	movlw	144
 27813  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27814  000A2C  ECF5  F02D         	call	_ClearBuffer	;wreg free
 27815                           
 27816                           ;mdm_gsm_gprs_http.c: 469: }
 27817                           ;mdm_gsm_gprs_http.c: 470: }
 27818  000A30  D042               	goto	l1252
 27819  000A32                     l1278:
 27820                           
 27821                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 27822  000A32  0EF5               	movlw	low _ConnTimeout
 27823  000A34  0100               	movlb	0	; () banked
 27824  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 27825  000A38  0E02               	movlw	high _ConnTimeout
 27826  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 27827  000A3C  EC28  F025         	call	_OsTmr_GetTimerStatus	;wreg free
 27828  000A40  D76D               	goto	L42
 27829  000A42                     
 27830                           ; BSR set to: 1
 27831                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 27832                           
 27833                           ; BSR set to: 1
 27834  000A42  0E00               	movlw	0
 27835  000A44  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27836                           
 27837                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 27838  000A46  0E02               	movlw	2
 27839  000A48  D003               	goto	L44
 27840  000A4A                     
 27841                           ; BSR set to: 1
 27842                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 27843                           
 27844                           ; BSR set to: 1
 27845  000A4A  0E00               	movlw	0
 27846  000A4C  6FEC               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 27847                           
 27848                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 27849  000A4E  0E03               	movlw	3
 27850  000A50                     L44:
 27851  000A50  6FEB               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 27852                           
 27853                           ; BSR set to: 1
 27854                           ;mdm_gsm_gprs_http.c: 494: }
 27855                           
 27856                           ; BSR set to: 1
 27857                           ;mdm_gsm_gprs_http.c: 493: break;
 27858                           
 27859                           ;mdm_gsm_gprs_http.c: 492: default:
 27860                           
 27861                           ;mdm_gsm_gprs_http.c: 490: break;
 27862  000A52  D031               	goto	l1252
 27863  000A54                     l1249:
 27864                           
 27865                           ; BSR set to: 1
 27866                           
 27867                           ; BSR set to: 1
 27868  000A54  51EC               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 27869                           
 27870                           ; Switch size 1, requested type "space"
 27871                           ; Number of cases is 16, Range of values is 0 to 15
 27872                           ; switch strategies available:
 27873                           ; Name         Instructions Cycles
 27874                           ; simple_byte           49    25 (average)
 27875                           ;	Chosen strategy is simple_byte
 27876  000A56  0A00               	xorlw	0	; case 0
 27877  000A58  B4D8               	btfsc	status,2,c
 27878  000A5A  D5CC               	goto	l1250
 27879  000A5C  0A01               	xorlw	1	; case 1
 27880  000A5E  B4D8               	btfsc	status,2,c
 27881  000A60  D5D5               	goto	l1253
 27882  000A62  0A03               	xorlw	3	; case 2
 27883  000A64  B4D8               	btfsc	status,2,c
 27884  000A66  D5EF               	goto	l1254
 27885  000A68  0A01               	xorlw	1	; case 3
 27886  000A6A  B4D8               	btfsc	status,2,c
 27887  000A6C  D609               	goto	l1255
 27888  000A6E  0A07               	xorlw	7	; case 4
 27889  000A70  B4D8               	btfsc	status,2,c
 27890  000A72  D623               	goto	l1256
 27891  000A74  0A01               	xorlw	1	; case 5
 27892  000A76  B4D8               	btfsc	status,2,c
 27893  000A78  D6BC               	goto	l1260
 27894  000A7A  0A03               	xorlw	3	; case 6
 27895  000A7C  B4D8               	btfsc	status,2,c
 27896  000A7E  D6D6               	goto	l1261
 27897  000A80  0A01               	xorlw	1	; case 7
 27898  000A82  B4D8               	btfsc	status,2,c
 27899  000A84  D752               	goto	l1269
 27900  000A86  0A0F               	xorlw	15	; case 8
 27901  000A88  B4D8               	btfsc	status,2,c
 27902  000A8A  D6E5               	goto	l1262
 27903  000A8C  0A01               	xorlw	1	; case 9
 27904  000A8E  B4D8               	btfsc	status,2,c
 27905  000A90  D6FF               	goto	l1263
 27906  000A92  0A03               	xorlw	3	; case 10
 27907  000A94  B4D8               	btfsc	status,2,c
 27908  000A96  D719               	goto	l1264
 27909  000A98  0A01               	xorlw	1	; case 11
 27910  000A9A  B4D8               	btfsc	status,2,c
 27911  000A9C  D770               	goto	l1274
 27912  000A9E  0A07               	xorlw	7	; case 12
 27913  000AA0  B4D8               	btfsc	status,2,c
 27914  000AA2  D783               	goto	l1275
 27915  000AA4  0A01               	xorlw	1	; case 13
 27916  000AA6  B4D8               	btfsc	status,2,c
 27917  000AA8  D78D               	goto	l1277
 27918  000AAA  0A03               	xorlw	3	; case 14
 27919  000AAC  B4D8               	btfsc	status,2,c
 27920  000AAE  D7C9               	goto	l1282
 27921  000AB0  0A01               	xorlw	1	; case 15
 27922  000AB2  B4D8               	btfsc	status,2,c
 27923  000AB4  D7CA               	goto	l1283
 27924  000AB6                     l1252:
 27925                           
 27926                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 27927                           
 27928                           ; BSR set to: 1
 27929  000AB6  0101               	movlb	1	; () banked
 27930  000AB8  51EB               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 27931  000ABA  0012               	return	
 27932  000ABC                     __end_of_HttpGetMethod:
 27933                           	opt stack 0
 27934                           tosu	equ	0xFFF
 27935                           tosh	equ	0xFFE
 27936                           tosl	equ	0xFFD
 27937                           pclath	equ	0xFFA
 27938                           tblptru	equ	0xFF8
 27939                           tblptrh	equ	0xFF7
 27940                           tblptrl	equ	0xFF6
 27941                           tablat	equ	0xFF5
 27942                           prodh	equ	0xFF4
 27943                           prodl	equ	0xFF3
 27944                           intcon	equ	0xFF2
 27945                           intcon2	equ	0xFF1
 27946                           intcon3	equ	0xFF0
 27947                           indf0	equ	0xFEF
 27948                           postinc0	equ	0xFEE
 27949                           plusw0	equ	0xFEB
 27950                           fsr0h	equ	0xFEA
 27951                           fsr0l	equ	0xFE9
 27952                           wreg	equ	0xFE8
 27953                           indf1	equ	0xFE7
 27954                           postinc1	equ	0xFE6
 27955                           postdec1	equ	0xFE5
 27956                           plusw1	equ	0xFE3
 27957                           fsr1h	equ	0xFE2
 27958                           fsr1l	equ	0xFE1
 27959                           indf2	equ	0xFDF
 27960                           postinc2	equ	0xFDE
 27961                           postdec2	equ	0xFDD
 27962                           plusw2	equ	0xFDB
 27963                           fsr2h	equ	0xFDA
 27964                           fsr2l	equ	0xFD9
 27965                           status	equ	0xFD8
 27966                           
 27967 ;; *************** function _Uart_WriteString *****************
 27968 ;; Defined at:
 27969 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27970 ;; Parameters:    Size  Location     Type
 27971 ;;  Module          1    wreg     unsigned char 
 27972 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27973 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 27974 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 27975 ;; Auto vars:     Size  Location     Type
 27976 ;;  Module          1   34[BANK0 ] unsigned char 
 27977 ;; Return value:  Size  Location     Type
 27978 ;;                  1    wreg      void 
 27979 ;; Registers used:
 27980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27981 ;; Tracked objects:
 27982 ;;		On entry : 0/0
 27983 ;;		On exit  : 0/0
 27984 ;;		Unchanged: 0/0
 27985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27989 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27990 ;;Total ram usage:        3 bytes
 27991 ;; Hardware stack levels used:    1
 27992 ;; Hardware stack levels required when called:   12
 27993 ;; This function calls:
 27994 ;;		_UartTxBufferStatus
 27995 ;;		_UartWriteByte
 27996 ;; This function is called by:
 27997 ;;		_Mdm_SetSmsFormat
 27998 ;;		_InitGprsNetwork
 27999 ;;		_HttpGetMethod
 28000 ;;		_Mdm_PinUnlock
 28001 ;;		_Mdm_MakePhoneCall
 28002 ;; This function uses a non-reentrant model
 28003 ;;
 28004                           
 28005                           	psect	text124
 28006  005A8C                     __ptext124:
 28007                           	opt stack 0
 28008  005A8C                     _Uart_WriteString:
 28009                           	opt stack 13
 28010                           
 28011                           ; BSR set to: 1
 28012                           ;incstack = 0
 28013                           ;Uart_WriteString@Module stored from wreg
 28014  005A8C  0100               	movlb	0	; () banked
 28015  005A8E  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 28016                           
 28017                           ;uart_drv.c: 521: while (*StringToWrite)
 28018  005A90  D014               	goto	u11540
 28019  005A92                     
 28020                           ;uart_drv.c: 522: {
 28021                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 28022  005A92  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28023  005A96  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28024  005A9A  50DF               	movf	indf2,w,c
 28025  005A9C  0100               	movlb	0	; () banked
 28026  005A9E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 28027  005AA0  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28028  005AA2  EC0F  F030         	call	_UartWriteByte
 28029                           
 28030                           ;uart_drv.c: 526: StringToWrite++;
 28031  005AA6  0100               	movlb	0	; () banked
 28032  005AA8  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 28033  005AAA  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 28034  005AAC                     
 28035                           ; BSR set to: 0
 28036                           
 28037                           ; BSR set to: 0
 28038  005AAC  0100               	movlb	0	; () banked
 28039  005AAE  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 28040  005AB0  EC1F  F02B         	call	_UartTxBufferStatus
 28041  005AB4  06E8               	decf	wreg,f,c
 28042  005AB6  B4D8               	btfsc	status,2,c
 28043  005AB8  D7F9               	goto	l709
 28044  005ABA                     u11540:
 28045  005ABA  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 28046  005ABE  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 28047  005AC2  50DF               	movf	indf2,w,c
 28048  005AC4  B4D8               	btfsc	status,2,c
 28049  005AC6  0012               	return	
 28050  005AC8  D7E4               	goto	l707
 28051  005ACA                     __end_of_Uart_WriteString:
 28052                           	opt stack 0
 28053                           tosu	equ	0xFFF
 28054                           tosh	equ	0xFFE
 28055                           tosl	equ	0xFFD
 28056                           pclath	equ	0xFFA
 28057                           tblptru	equ	0xFF8
 28058                           tblptrh	equ	0xFF7
 28059                           tblptrl	equ	0xFF6
 28060                           tablat	equ	0xFF5
 28061                           prodh	equ	0xFF4
 28062                           prodl	equ	0xFF3
 28063                           intcon	equ	0xFF2
 28064                           intcon2	equ	0xFF1
 28065                           intcon3	equ	0xFF0
 28066                           indf0	equ	0xFEF
 28067                           postinc0	equ	0xFEE
 28068                           plusw0	equ	0xFEB
 28069                           fsr0h	equ	0xFEA
 28070                           fsr0l	equ	0xFE9
 28071                           wreg	equ	0xFE8
 28072                           indf1	equ	0xFE7
 28073                           postinc1	equ	0xFE6
 28074                           postdec1	equ	0xFE5
 28075                           plusw1	equ	0xFE3
 28076                           fsr1h	equ	0xFE2
 28077                           fsr1l	equ	0xFE1
 28078                           indf2	equ	0xFDF
 28079                           postinc2	equ	0xFDE
 28080                           postdec2	equ	0xFDD
 28081                           plusw2	equ	0xFDB
 28082                           fsr2h	equ	0xFDA
 28083                           fsr2l	equ	0xFD9
 28084                           status	equ	0xFD8
 28085                           
 28086 ;; *************** function _Uart_WriteConstString *****************
 28087 ;; Defined at:
 28088 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28089 ;; Parameters:    Size  Location     Type
 28090 ;;  Module          1    wreg     unsigned char 
 28091 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 28092 ;;		 -> STR_30(12), STR_29(19), STR_20(14), STR_19(14), 
 28093 ;;		 -> STR_18(13), STR_17(13), STR_16(17), STR_14(21), 
 28094 ;;		 -> STR_13(14), STR_12(13), STR_11(14), STR_10(14), 
 28095 ;;		 -> STR_8(31), STR_7(5), STR_6(5), STR_4(12), 
 28096 ;;		 -> STR_3(7), STR_2(14), STR_1(5), 
 28097 ;; Auto vars:     Size  Location     Type
 28098 ;;  Module          1   34[BANK0 ] unsigned char 
 28099 ;; Return value:  Size  Location     Type
 28100 ;;                  1    wreg      void 
 28101 ;; Registers used:
 28102 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28103 ;; Tracked objects:
 28104 ;;		On entry : 0/0
 28105 ;;		On exit  : 0/0
 28106 ;;		Unchanged: 0/0
 28107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28111 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28112 ;;Total ram usage:        3 bytes
 28113 ;; Hardware stack levels used:    1
 28114 ;; Hardware stack levels required when called:   12
 28115 ;; This function calls:
 28116 ;;		_UartTxBufferStatus
 28117 ;;		_UartWriteByte
 28118 ;; This function is called by:
 28119 ;;		_CheckModem
 28120 ;;		_ConfigureModem
 28121 ;;		_GetSmsSm
 28122 ;;		_Mdm_HangPhoneCall
 28123 ;;		_InitGprsNetwork
 28124 ;;		_HttpGetMethod
 28125 ;;		_initGprsModem
 28126 ;;		_Mdm_GetPhoneCall
 28127 ;;		_MdmHttp_SetSsl
 28128 ;; This function uses a non-reentrant model
 28129 ;;
 28130                           
 28131                           	psect	text125
 28132  00590A                     __ptext125:
 28133                           	opt stack 0
 28134  00590A                     _Uart_WriteConstString:
 28135                           	opt stack 14
 28136                           
 28137                           ;incstack = 0
 28138                           ;Uart_WriteConstString@Module stored from wreg
 28139  00590A  0100               	movlb	0	; () banked
 28140  00590C  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 28141                           
 28142                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 28143  00590E  D015               	goto	u12370
 28144  005910                     
 28145                           ;uart_drv.c: 500: {
 28146                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 28147  005910  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28148  005914  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28149  005918                     	if	0	;tblptru may be non-zero
 28150  005918                     	endif
 28151  005918                     	if	0	;tblptru may be non-zero
 28152  005918                     	endif
 28153  005918  0008               	tblrd		*
 28154  00591A  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 28155  00591E  0100               	movlb	0	; () banked
 28156  005920  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28157  005922  EC0F  F030         	call	_UartWriteByte
 28158                           
 28159                           ;uart_drv.c: 504: ConstStringToWrite++;
 28160  005926  0100               	movlb	0	; () banked
 28161  005928  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 28162  00592A  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 28163  00592C                     
 28164                           ; BSR set to: 0
 28165                           
 28166                           ; BSR set to: 0
 28167  00592C  0100               	movlb	0	; () banked
 28168  00592E  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 28169  005930  EC1F  F02B         	call	_UartTxBufferStatus
 28170  005934  06E8               	decf	wreg,f,c
 28171  005936  B4D8               	btfsc	status,2,c
 28172  005938  D7F9               	goto	l700
 28173  00593A                     u12370:
 28174  00593A  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 28175  00593E  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 28176  005942                     	if	0	;tblptru may be non-zero
 28177  005942                     	endif
 28178  005942                     	if	0	;tblptru may be non-zero
 28179  005942                     	endif
 28180  005942  0008               	tblrd		*
 28181  005944  50F5               	movf	tablat,w,c
 28182  005946  0900               	iorlw	0
 28183  005948  B4D8               	btfsc	status,2,c
 28184  00594A  0012               	return	
 28185  00594C  D7E1               	goto	l698
 28186  00594E                     __end_of_Uart_WriteConstString:
 28187                           	opt stack 0
 28188                           tosu	equ	0xFFF
 28189                           tosh	equ	0xFFE
 28190                           tosl	equ	0xFFD
 28191                           pclath	equ	0xFFA
 28192                           tblptru	equ	0xFF8
 28193                           tblptrh	equ	0xFF7
 28194                           tblptrl	equ	0xFF6
 28195                           tablat	equ	0xFF5
 28196                           prodh	equ	0xFF4
 28197                           prodl	equ	0xFF3
 28198                           intcon	equ	0xFF2
 28199                           intcon2	equ	0xFF1
 28200                           intcon3	equ	0xFF0
 28201                           indf0	equ	0xFEF
 28202                           postinc0	equ	0xFEE
 28203                           plusw0	equ	0xFEB
 28204                           fsr0h	equ	0xFEA
 28205                           fsr0l	equ	0xFE9
 28206                           wreg	equ	0xFE8
 28207                           indf1	equ	0xFE7
 28208                           postinc1	equ	0xFE6
 28209                           postdec1	equ	0xFE5
 28210                           plusw1	equ	0xFE3
 28211                           fsr1h	equ	0xFE2
 28212                           fsr1l	equ	0xFE1
 28213                           indf2	equ	0xFDF
 28214                           postinc2	equ	0xFDE
 28215                           postdec2	equ	0xFDD
 28216                           plusw2	equ	0xFDB
 28217                           fsr2h	equ	0xFDA
 28218                           fsr2l	equ	0xFD9
 28219                           status	equ	0xFD8
 28220                           
 28221 ;; *************** function _UartWriteByte *****************
 28222 ;; Defined at:
 28223 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28224 ;; Parameters:    Size  Location     Type
 28225 ;;  Module          1    wreg     unsigned char 
 28226 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 28227 ;; Auto vars:     Size  Location     Type
 28228 ;;  Module          1   30[BANK0 ] unsigned char 
 28229 ;; Return value:  Size  Location     Type
 28230 ;;                  1    wreg      void 
 28231 ;; Registers used:
 28232 ;;		wreg, status,2, status,0
 28233 ;; Tracked objects:
 28234 ;;		On entry : 0/0
 28235 ;;		On exit  : 0/0
 28236 ;;		Unchanged: 0/0
 28237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28238 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28242 ;;Total ram usage:        2 bytes
 28243 ;; Hardware stack levels used:    1
 28244 ;; Hardware stack levels required when called:   11
 28245 ;; This function calls:
 28246 ;;		Nothing
 28247 ;; This function is called by:
 28248 ;;		_Uart_WriteConstString
 28249 ;;		_Uart_WriteString
 28250 ;;		_Uart_WriteStringLen
 28251 ;; This function uses a non-reentrant model
 28252 ;;
 28253                           
 28254                           	psect	text126
 28255  00601E                     __ptext126:
 28256                           	opt stack 0
 28257  00601E                     _UartWriteByte:
 28258                           	opt stack 14
 28259                           
 28260                           ;incstack = 0
 28261                           ;UartWriteByte@Module stored from wreg
 28262  00601E  0100               	movlb	0	; () banked
 28263  006020  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 28264                           
 28265                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 28266  006022  0100               	movlb	0	; () banked
 28267  006024  057E               	decf	UartWriteByte@Module& (0+255),w,b
 28268  006026  A4D8               	btfss	status,2,c
 28269  006028  D003               	goto	l639
 28270                           
 28271                           ; BSR set to: 0
 28272                           ;uart_drv.c: 176: {
 28273                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 28274  00602A  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 28275                           
 28276                           ;uart_drv.c: 179: }
 28277  00602E  0012               	return	
 28278  006030                     l639:
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 28282                           
 28283                           ; BSR set to: 0
 28284  006030  0E02               	movlw	2
 28285  006032  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 28286  006034  A4D8               	btfss	status,2,c
 28287  006036  0012               	return	
 28288                           
 28289                           ; BSR set to: 0
 28290                           ;uart_drv.c: 181: {
 28291                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 28292  006038  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 28293                           
 28294                           ; BSR set to: 0
 28295  00603C  0012               	return	
 28296  00603E                     __end_of_UartWriteByte:
 28297                           	opt stack 0
 28298                           tosu	equ	0xFFF
 28299                           tosh	equ	0xFFE
 28300                           tosl	equ	0xFFD
 28301                           pclath	equ	0xFFA
 28302                           tblptru	equ	0xFF8
 28303                           tblptrh	equ	0xFF7
 28304                           tblptrl	equ	0xFF6
 28305                           tablat	equ	0xFF5
 28306                           prodh	equ	0xFF4
 28307                           prodl	equ	0xFF3
 28308                           intcon	equ	0xFF2
 28309                           intcon2	equ	0xFF1
 28310                           intcon3	equ	0xFF0
 28311                           indf0	equ	0xFEF
 28312                           postinc0	equ	0xFEE
 28313                           plusw0	equ	0xFEB
 28314                           fsr0h	equ	0xFEA
 28315                           fsr0l	equ	0xFE9
 28316                           wreg	equ	0xFE8
 28317                           indf1	equ	0xFE7
 28318                           postinc1	equ	0xFE6
 28319                           postdec1	equ	0xFE5
 28320                           plusw1	equ	0xFE3
 28321                           fsr1h	equ	0xFE2
 28322                           fsr1l	equ	0xFE1
 28323                           indf2	equ	0xFDF
 28324                           postinc2	equ	0xFDE
 28325                           postdec2	equ	0xFDD
 28326                           plusw2	equ	0xFDB
 28327                           fsr2h	equ	0xFDA
 28328                           fsr2l	equ	0xFD9
 28329                           status	equ	0xFD8
 28330                           
 28331 ;; *************** function _UartTxBufferStatus *****************
 28332 ;; Defined at:
 28333 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28334 ;; Parameters:    Size  Location     Type
 28335 ;;  Module          1    wreg     unsigned char 
 28336 ;; Auto vars:     Size  Location     Type
 28337 ;;  Module          1   30[BANK0 ] unsigned char 
 28338 ;;  TxBufferStat    1   31[BANK0 ] enum E9034
 28339 ;; Return value:  Size  Location     Type
 28340 ;;                  1    wreg      enum E9034
 28341 ;; Registers used:
 28342 ;;		wreg, status,2, status,0
 28343 ;; Tracked objects:
 28344 ;;		On entry : 0/0
 28345 ;;		On exit  : 0/0
 28346 ;;		Unchanged: 0/0
 28347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28351 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28352 ;;Total ram usage:        3 bytes
 28353 ;; Hardware stack levels used:    1
 28354 ;; Hardware stack levels required when called:   11
 28355 ;; This function calls:
 28356 ;;		Nothing
 28357 ;; This function is called by:
 28358 ;;		_Uart_WriteConstString
 28359 ;;		_Uart_WriteString
 28360 ;;		_Uart_WriteStringLen
 28361 ;; This function uses a non-reentrant model
 28362 ;;
 28363                           
 28364                           	psect	text127
 28365  00563E                     __ptext127:
 28366                           	opt stack 0
 28367  00563E                     _UartTxBufferStatus:
 28368                           	opt stack 14
 28369                           
 28370                           ; BSR set to: 0
 28371                           ;incstack = 0
 28372                           ;UartTxBufferStatus@Module stored from wreg
 28373  00563E  0100               	movlb	0	; () banked
 28374  005640  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 28375                           
 28376                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 28377  005642  0E00               	movlw	0
 28378  005644  0100               	movlb	0	; () banked
 28379  005646  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28380                           
 28381                           ; BSR set to: 0
 28382                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 28383  005648  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 28384  00564A  A4D8               	btfss	status,2,c
 28385  00564C  D00B               	goto	l651
 28386                           
 28387                           ; BSR set to: 0
 28388                           ;uart_drv.c: 228: {
 28389                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28390  00564E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28391  005652  90D8               	bcf	status,0,c
 28392  005654  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28393  005656  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 28394  005658  D002               	goto	l652
 28395  00565A                     u11000:
 28396                           
 28397                           ; BSR set to: 0
 28398                           ;uart_drv.c: 231: {
 28399                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 28400  00565A  0E01               	movlw	1
 28401  00565C  D014               	goto	L47
 28402  00565E                     l652:
 28403                           
 28404                           ; BSR set to: 0
 28405                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28406                           
 28407                           ; BSR set to: 0
 28408  00565E  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 28409  005662  D00C               	goto	L76
 28410  005664                     l651:
 28411                           
 28412                           ; BSR set to: 0
 28413                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 28414                           
 28415                           ; BSR set to: 0
 28416  005664  0E02               	movlw	2
 28417  005666  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 28418  005668  A4D8               	btfss	status,2,c
 28419  00566A  D00E               	goto	l660
 28420                           
 28421                           ; BSR set to: 0
 28422                           ;uart_drv.c: 244: {
 28423                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 28424  00566C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28425  005670  90D8               	bcf	status,0,c
 28426  005672  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28427  005674  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28428  005676  D7F1               	goto	u11000
 28429                           
 28430                           ; BSR set to: 0
 28431                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 28432                           
 28433                           ; BSR set to: 0
 28434                           
 28435                           ;uart_drv.c: 249: }
 28436                           
 28437                           ; BSR set to: 0
 28438                           ;uart_drv.c: 247: {
 28439                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 28440  005678  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 28441  00567C                     L76:
 28442  00567C  90D8               	bcf	status,0,c
 28443  00567E  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 28444  005680  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 28445  005682  D002               	goto	l660
 28446                           
 28447                           ; BSR set to: 0
 28448                           ;uart_drv.c: 251: {
 28449                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 28450  005684  0E02               	movlw	2
 28451  005686                     L47:
 28452  005686  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 28453  005688                     l660:
 28454                           
 28455                           ; BSR set to: 0
 28456                           ;uart_drv.c: 257: }
 28457                           ;uart_drv.c: 258: }
 28458                           ;uart_drv.c: 260: return TxBufferStatus;
 28459                           
 28460                           ; BSR set to: 0
 28461                           
 28462                           ; BSR set to: 0
 28463                           
 28464                           ; BSR set to: 0
 28465                           
 28466                           ; BSR set to: 0
 28467                           
 28468                           ;uart_drv.c: 254: else
 28469                           ;uart_drv.c: 255: {
 28470                           
 28471                           ; BSR set to: 0
 28472  005688  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 28473  00568A  0012               	return	
 28474  00568C                     __end_of_UartTxBufferStatus:
 28475                           	opt stack 0
 28476                           tosu	equ	0xFFF
 28477                           tosh	equ	0xFFE
 28478                           tosl	equ	0xFFD
 28479                           pclath	equ	0xFFA
 28480                           tblptru	equ	0xFF8
 28481                           tblptrh	equ	0xFF7
 28482                           tblptrl	equ	0xFF6
 28483                           tablat	equ	0xFF5
 28484                           prodh	equ	0xFF4
 28485                           prodl	equ	0xFF3
 28486                           intcon	equ	0xFF2
 28487                           intcon2	equ	0xFF1
 28488                           intcon3	equ	0xFF0
 28489                           indf0	equ	0xFEF
 28490                           postinc0	equ	0xFEE
 28491                           plusw0	equ	0xFEB
 28492                           fsr0h	equ	0xFEA
 28493                           fsr0l	equ	0xFE9
 28494                           wreg	equ	0xFE8
 28495                           indf1	equ	0xFE7
 28496                           postinc1	equ	0xFE6
 28497                           postdec1	equ	0xFE5
 28498                           plusw1	equ	0xFE3
 28499                           fsr1h	equ	0xFE2
 28500                           fsr1l	equ	0xFE1
 28501                           indf2	equ	0xFDF
 28502                           postinc2	equ	0xFDE
 28503                           postdec2	equ	0xFDD
 28504                           plusw2	equ	0xFDB
 28505                           fsr2h	equ	0xFDA
 28506                           fsr2l	equ	0xFD9
 28507                           status	equ	0xFD8
 28508                           
 28509 ;; *************** function _StringCopy *****************
 28510 ;; Defined at:
 28511 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 28512 ;; Parameters:    Size  Location     Type
 28513 ;;  SourceStr       2   29[BANK0 ] PTR unsigned char 
 28514 ;;		 -> STR_15(20), STR_9(21), MessageText(50), PhoneNumber(20), 
 28515 ;;		 -> STR_5(10), Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), RxBuffer(400), 
 28516 ;;  DestStr         2   31[BANK0 ] PTR unsigned char 
 28517 ;;		 -> EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), MessageText(50), 
 28518 ;;		 -> PhoneNumber(20), SendSmsSm@UartMessage(50), Mdm_SmsRx(102), callerNumber(13), 
 28519 ;;  Len             2   33[BANK0 ] unsigned short 
 28520 ;; Auto vars:     Size  Location     Type
 28521 ;;  Index           2   37[BANK0 ] unsigned short 
 28522 ;; Return value:  Size  Location     Type
 28523 ;;                  1    wreg      void 
 28524 ;; Registers used:
 28525 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28526 ;; Tracked objects:
 28527 ;;		On entry : 0/0
 28528 ;;		On exit  : 0/0
 28529 ;;		Unchanged: 0/0
 28530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28531 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28532 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28533 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28534 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28535 ;;Total ram usage:       10 bytes
 28536 ;; Hardware stack levels used:    1
 28537 ;; Hardware stack levels required when called:   11
 28538 ;; This function calls:
 28539 ;;		Nothing
 28540 ;; This function is called by:
 28541 ;;		_ModemEvtParser
 28542 ;;		_GetSmsSm
 28543 ;;		_SendSmsSm
 28544 ;;		_InitGprsNetwork
 28545 ;;		_HttpGetMethod
 28546 ;;		_Mdm_GetSmsData
 28547 ;;		_Mdm_SendSmsData
 28548 ;;		_Eeprom_Write
 28549 ;; This function uses a non-reentrant model
 28550 ;;
 28551                           
 28552                           	psect	text128
 28553  00507E                     __ptext128:
 28554                           	opt stack 0
 28555  00507E                     _StringCopy:
 28556                           	opt stack 15
 28557                           
 28558                           ;sf.c: 106: UINT16 Index = 0;
 28559                           
 28560                           ; BSR set to: 0
 28561                           ;incstack = 0
 28562  00507E  0E00               	movlw	0
 28563  005080  0100               	movlb	0	; () banked
 28564  005082  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28565  005084  0E00               	movlw	0
 28566  005086  6F85               	movwf	StringCopy@Index& (0+255),b
 28567                           
 28568                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 28569  005088  0E00               	movlw	0
 28570  00508A  6F86               	movwf	(StringCopy@Index+1)& (0+255),b
 28571  00508C  0E00               	movlw	0
 28572  00508E  6F85               	movwf	StringCopy@Index& (0+255),b
 28573  005090  D020               	goto	l2218
 28574  005092                     
 28575                           ; BSR set to: 0
 28576                           ;sf.c: 110: {
 28577                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 28578                           
 28579                           ; BSR set to: 0
 28580  005092  5185               	movf	StringCopy@Index& (0+255),w,b
 28581  005094  257D               	addwf	StringCopy@SourceStr& (0+255),w,b
 28582  005096  6F83               	movwf	??_StringCopy& (0+255),b
 28583  005098  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28584  00509A  217E               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 28585  00509C  6F84               	movwf	(??_StringCopy+1)& (0+255),b
 28586  00509E  C083  FFF6         	movff	??_StringCopy,tblptrl
 28587  0050A2  C084  FFF7         	movff	??_StringCopy+1,tblptrh
 28588  0050A6  6AF8               	clrf	tblptru,c
 28589  0050A8  5185               	movf	StringCopy@Index& (0+255),w,b
 28590  0050AA  257F               	addwf	StringCopy@DestStr& (0+255),w,b
 28591  0050AC  6ED9               	movwf	fsr2l,c
 28592  0050AE  5186               	movf	(StringCopy@Index+1)& (0+255),w,b
 28593  0050B0  2180               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 28594  0050B2  6EDA               	movwf	fsr2h,c
 28595  0050B4  0E0E               	movlw	(high __ramtop+-1)
 28596  0050B6  64F7               	cpfsgt	tblptrh,c
 28597  0050B8  D003               	bra	u12457
 28598  0050BA  0008               	tblrd		*
 28599  0050BC  50F5               	movf	tablat,w,c
 28600  0050BE  D005               	bra	u12450
 28601  0050C0                     u12457:
 28602  0050C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 28603  0050C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 28604  0050C8  50EF               	movf	indf0,w,c
 28605  0050CA                     u12450:
 28606  0050CA  6EDF               	movwf	indf2,c
 28607  0050CC  0100               	movlb	0	; () banked
 28608  0050CE  4B85               	infsnz	StringCopy@Index& (0+255),f,b
 28609  0050D0  2B86               	incf	(StringCopy@Index+1)& (0+255),f,b
 28610  0050D2                     l2218:
 28611                           
 28612                           ; BSR set to: 0
 28613                           
 28614                           ; BSR set to: 0
 28615  0050D2  5181               	movf	StringCopy@Len& (0+255),w,b
 28616  0050D4  5D85               	subwf	StringCopy@Index& (0+255),w,b
 28617  0050D6  5182               	movf	(StringCopy@Len+1)& (0+255),w,b
 28618  0050D8  5986               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 28619  0050DA  B0D8               	btfsc	status,0,c
 28620  0050DC  0012               	return	
 28621  0050DE  D7D9               	goto	l2219
 28622  0050E0                     __end_of_StringCopy:
 28623                           	opt stack 0
 28624                           tosu	equ	0xFFF
 28625                           tosh	equ	0xFFE
 28626                           tosl	equ	0xFFD
 28627                           pclath	equ	0xFFA
 28628                           tblptru	equ	0xFF8
 28629                           tblptrh	equ	0xFF7
 28630                           tblptrl	equ	0xFF6
 28631                           tablat	equ	0xFF5
 28632                           prodh	equ	0xFF4
 28633                           prodl	equ	0xFF3
 28634                           intcon	equ	0xFF2
 28635                           intcon2	equ	0xFF1
 28636                           intcon3	equ	0xFF0
 28637                           indf0	equ	0xFEF
 28638                           postinc0	equ	0xFEE
 28639                           plusw0	equ	0xFEB
 28640                           fsr0h	equ	0xFEA
 28641                           fsr0l	equ	0xFE9
 28642                           wreg	equ	0xFE8
 28643                           indf1	equ	0xFE7
 28644                           postinc1	equ	0xFE6
 28645                           postdec1	equ	0xFE5
 28646                           plusw1	equ	0xFE3
 28647                           fsr1h	equ	0xFE2
 28648                           fsr1l	equ	0xFE1
 28649                           indf2	equ	0xFDF
 28650                           postinc2	equ	0xFDE
 28651                           postdec2	equ	0xFDD
 28652                           plusw2	equ	0xFDB
 28653                           fsr2h	equ	0xFDA
 28654                           fsr2l	equ	0xFD9
 28655                           status	equ	0xFD8
 28656                           
 28657 ;; *************** function _OsTmr_StartTimer *****************
 28658 ;; Defined at:
 28659 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28660 ;; Parameters:    Size  Location     Type
 28661 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 28662 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28663 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28664 ;;  Timeout         4   35[BANK0 ] unsigned long 
 28665 ;; Auto vars:     Size  Location     Type
 28666 ;;		None
 28667 ;; Return value:  Size  Location     Type
 28668 ;;                  1    wreg      void 
 28669 ;; Registers used:
 28670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28671 ;; Tracked objects:
 28672 ;;		On entry : 0/0
 28673 ;;		On exit  : 0/0
 28674 ;;		Unchanged: 0/0
 28675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28676 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28679 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28680 ;;Total ram usage:        6 bytes
 28681 ;; Hardware stack levels used:    1
 28682 ;; Hardware stack levels required when called:   12
 28683 ;; This function calls:
 28684 ;;		_GetOsTickCounter
 28685 ;; This function is called by:
 28686 ;;		_OsTmr_Wait
 28687 ;;		_CheckModem
 28688 ;;		_SendSmsSm
 28689 ;;		_InitGprsNetwork
 28690 ;;		_HttpGetMethod
 28691 ;;		_I2cSlv_QueryI2cData
 28692 ;;		_Term_MainSm
 28693 ;; This function uses a non-reentrant model
 28694 ;;
 28695                           
 28696                           	psect	text129
 28697  00513E                     __ptext129:
 28698                           	opt stack 0
 28699  00513E                     _OsTmr_StartTimer:
 28700                           	opt stack 12
 28701                           
 28702                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 28703                           
 28704                           ; BSR set to: 0
 28705                           ;incstack = 0
 28706  00513E  0100               	movlb	0	; () banked
 28707  005140  EE20 F001          	lfsr	2,1
 28708  005144  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28709  005146  26D9               	addwf	fsr2l,f,c
 28710  005148  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28711  00514A  22DA               	addwfc	fsr2h,f,c
 28712  00514C  0E00               	movlw	0
 28713  00514E  6EDF               	movwf	indf2,c
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 28717  005150  ECEB  F030         	call	_GetOsTickCounter	;wreg free
 28718  005154  0100               	movlb	0	; () banked
 28719  005156  EE20 F002          	lfsr	2,2
 28720  00515A  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28721  00515C  26D9               	addwf	fsr2l,f,c
 28722  00515E  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28723  005160  22DA               	addwfc	fsr2h,f,c
 28724  005162  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 28725  005166  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 28726  00516A  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 28727  00516E  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 28728                           
 28729                           ; BSR set to: 0
 28730                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 28731  005172  EE20 F006          	lfsr	2,6
 28732  005176  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 28733  005178  26D9               	addwf	fsr2l,f,c
 28734  00517A  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 28735  00517C  22DA               	addwfc	fsr2h,f,c
 28736  00517E  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 28737  005182  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 28738  005186  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 28739  00518A  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 28740                           
 28741                           ; BSR set to: 0
 28742                           ;os_timers.c: 127: Timer->Enabled = 1u;
 28743  00518E  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 28744  005192  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 28745  005196  0E01               	movlw	1
 28746  005198  6EDF               	movwf	indf2,c
 28747                           
 28748                           ; BSR set to: 0
 28749  00519A  0012               	return		;funcret
 28750  00519C                     __end_of_OsTmr_StartTimer:
 28751                           	opt stack 0
 28752                           tosu	equ	0xFFF
 28753                           tosh	equ	0xFFE
 28754                           tosl	equ	0xFFD
 28755                           pclath	equ	0xFFA
 28756                           tblptru	equ	0xFF8
 28757                           tblptrh	equ	0xFF7
 28758                           tblptrl	equ	0xFF6
 28759                           tablat	equ	0xFF5
 28760                           prodh	equ	0xFF4
 28761                           prodl	equ	0xFF3
 28762                           intcon	equ	0xFF2
 28763                           intcon2	equ	0xFF1
 28764                           intcon3	equ	0xFF0
 28765                           indf0	equ	0xFEF
 28766                           postinc0	equ	0xFEE
 28767                           plusw0	equ	0xFEB
 28768                           fsr0h	equ	0xFEA
 28769                           fsr0l	equ	0xFE9
 28770                           wreg	equ	0xFE8
 28771                           indf1	equ	0xFE7
 28772                           postinc1	equ	0xFE6
 28773                           postdec1	equ	0xFE5
 28774                           plusw1	equ	0xFE3
 28775                           fsr1h	equ	0xFE2
 28776                           fsr1l	equ	0xFE1
 28777                           indf2	equ	0xFDF
 28778                           postinc2	equ	0xFDE
 28779                           postdec2	equ	0xFDD
 28780                           plusw2	equ	0xFDB
 28781                           fsr2h	equ	0xFDA
 28782                           fsr2l	equ	0xFD9
 28783                           status	equ	0xFD8
 28784                           
 28785 ;; *************** function _OsTmr_GetTimerStatus *****************
 28786 ;; Defined at:
 28787 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28788 ;; Parameters:    Size  Location     Type
 28789 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 28790 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 28791 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 28792 ;; Auto vars:     Size  Location     Type
 28793 ;;		None
 28794 ;; Return value:  Size  Location     Type
 28795 ;;                  1    wreg      enum E7740
 28796 ;; Registers used:
 28797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28798 ;; Tracked objects:
 28799 ;;		On entry : 0/0
 28800 ;;		On exit  : 0/0
 28801 ;;		Unchanged: 0/0
 28802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28805 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28806 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28807 ;;Total ram usage:        6 bytes
 28808 ;; Hardware stack levels used:    1
 28809 ;; Hardware stack levels required when called:   13
 28810 ;; This function calls:
 28811 ;;		_GetElapsedTime
 28812 ;; This function is called by:
 28813 ;;		_OsTmr_Wait
 28814 ;;		_CheckModem
 28815 ;;		_SendSmsSm
 28816 ;;		_InitGprsNetwork
 28817 ;;		_HttpGetMethod
 28818 ;;		_I2cSlv_QueryI2cData
 28819 ;;		_Term_MainSm
 28820 ;; This function uses a non-reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text130
 28824  004A50                     __ptext130:
 28825                           	opt stack 0
 28826  004A50                     _OsTmr_GetTimerStatus:
 28827                           	opt stack 11
 28828                           
 28829                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 28830                           
 28831                           ; BSR set to: 0
 28832                           ;incstack = 0
 28833  004A50  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28834  004A54  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28835  004A58  04DE               	decf	postinc2,w,c
 28836  004A5A  A4D8               	btfss	status,2,c
 28837  004A5C  D030               	goto	l864
 28838                           
 28839                           ;os_timers.c: 197: {
 28840                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 28841  004A5E  0100               	movlb	0	; () banked
 28842  004A60  EE20 F006          	lfsr	2,6
 28843  004A64  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28844  004A66  26D9               	addwf	fsr2l,f,c
 28845  004A68  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28846  004A6A  22DA               	addwfc	fsr2h,f,c
 28847  004A6C  EE10 F002          	lfsr	1,2
 28848  004A70  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28849  004A72  26E1               	addwf	fsr1l,f,c
 28850  004A74  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28851  004A76  22E2               	addwfc	fsr1h,f,c
 28852  004A78  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 28853  004A7C  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 28854  004A80  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 28855  004A84  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 28856  004A88  EC85  F01E         	call	_GetElapsedTime	;wreg free
 28857  004A8C  50DE               	movf	postinc2,w,c
 28858  004A8E  0100               	movlb	0	; () banked
 28859  004A90  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 28860  004A92  50DE               	movf	postinc2,w,c
 28861  004A94  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 28862  004A96  50DE               	movf	postinc2,w,c
 28863  004A98  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 28864  004A9A  50DE               	movf	postinc2,w,c
 28865  004A9C  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 28866  004A9E  A0D8               	btfss	status,0,c
 28867  004AA0  D017               	goto	l867
 28868                           
 28869                           ; BSR set to: 0
 28870                           ;os_timers.c: 200: {
 28871                           ;os_timers.c: 202: Timer->Enabled = 0u;
 28872  004AA2  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 28873  004AA6  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 28874  004AAA  0E00               	movlw	0
 28875  004AAC  6EDF               	movwf	indf2,c
 28876                           
 28877                           ; BSR set to: 0
 28878                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 28879  004AAE  EE20 F001          	lfsr	2,1
 28880  004AB2  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28881  004AB4  26D9               	addwf	fsr2l,f,c
 28882  004AB6  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28883  004AB8  22DA               	addwfc	fsr2h,f,c
 28884  004ABA  0E01               	movlw	1
 28885  004ABC  D008               	goto	L77
 28886  004ABE                     l864:
 28887                           
 28888                           ;os_timers.c: 211: else
 28889                           ;os_timers.c: 212: {
 28890                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 28891                           
 28892                           ; BSR set to: 0
 28893  004ABE  0100               	movlb	0	; () banked
 28894  004AC0  EE20 F001          	lfsr	2,1
 28895  004AC4  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28896  004AC6  26D9               	addwf	fsr2l,f,c
 28897  004AC8  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28898  004ACA  22DA               	addwfc	fsr2h,f,c
 28899  004ACC  0E02               	movlw	2
 28900  004ACE                     L77:
 28901  004ACE  6EDF               	movwf	indf2,c
 28902  004AD0                     l867:
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;os_timers.c: 215: }
 28906                           ;os_timers.c: 218: return Timer->Status;
 28907  004AD0  EE20 F001          	lfsr	2,1
 28908  004AD4  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 28909  004AD6  26D9               	addwf	fsr2l,f,c
 28910  004AD8  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 28911  004ADA  22DA               	addwfc	fsr2h,f,c
 28912  004ADC  50DF               	movf	indf2,w,c
 28913  004ADE  0012               	return	
 28914  004AE0                     __end_of_OsTmr_GetTimerStatus:
 28915                           	opt stack 0
 28916                           tosu	equ	0xFFF
 28917                           tosh	equ	0xFFE
 28918                           tosl	equ	0xFFD
 28919                           pclath	equ	0xFFA
 28920                           tblptru	equ	0xFF8
 28921                           tblptrh	equ	0xFF7
 28922                           tblptrl	equ	0xFF6
 28923                           tablat	equ	0xFF5
 28924                           prodh	equ	0xFF4
 28925                           prodl	equ	0xFF3
 28926                           intcon	equ	0xFF2
 28927                           intcon2	equ	0xFF1
 28928                           intcon3	equ	0xFF0
 28929                           indf0	equ	0xFEF
 28930                           postinc0	equ	0xFEE
 28931                           plusw0	equ	0xFEB
 28932                           fsr0h	equ	0xFEA
 28933                           fsr0l	equ	0xFE9
 28934                           wreg	equ	0xFE8
 28935                           indf1	equ	0xFE7
 28936                           postinc1	equ	0xFE6
 28937                           postdec1	equ	0xFE5
 28938                           plusw1	equ	0xFE3
 28939                           fsr1h	equ	0xFE2
 28940                           fsr1l	equ	0xFE1
 28941                           indf2	equ	0xFDF
 28942                           postinc2	equ	0xFDE
 28943                           postdec2	equ	0xFDD
 28944                           plusw2	equ	0xFDB
 28945                           fsr2h	equ	0xFDA
 28946                           fsr2l	equ	0xFD9
 28947                           status	equ	0xFD8
 28948                           
 28949 ;; *************** function _GetElapsedTime *****************
 28950 ;; Defined at:
 28951 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 28952 ;; Parameters:    Size  Location     Type
 28953 ;;  StartTime       4   33[BANK0 ] unsigned long 
 28954 ;; Auto vars:     Size  Location     Type
 28955 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 28956 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 28957 ;; Return value:  Size  Location     Type
 28958 ;;                  4   33[BANK0 ] unsigned long 
 28959 ;; Registers used:
 28960 ;;		wreg, status,2, status,0, cstack
 28961 ;; Tracked objects:
 28962 ;;		On entry : 0/0
 28963 ;;		On exit  : 0/0
 28964 ;;		Unchanged: 0/0
 28965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28966 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28967 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28968 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28969 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28970 ;;Total ram usage:       20 bytes
 28971 ;; Hardware stack levels used:    1
 28972 ;; Hardware stack levels required when called:   12
 28973 ;; This function calls:
 28974 ;;		_GetOsTickCounter
 28975 ;; This function is called by:
 28976 ;;		_OsTmr_GetTimerStatus
 28977 ;;		_OsTmr_GetRemainingTime
 28978 ;; This function uses a non-reentrant model
 28979 ;;
 28980                           
 28981                           	psect	text131
 28982  003D0A                     __ptext131:
 28983                           	opt stack 0
 28984  003D0A                     _GetElapsedTime:
 28985                           	opt stack 11
 28986                           
 28987                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 28988                           ;os_timers.c: 87: UINT32 TimeValue;
 28989                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;incstack = 0
 28993  003D0A  ECEB  F030         	call	_GetOsTickCounter	;wreg free
 28994  003D0E  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 28995  003D12  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 28996  003D16  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 28997  003D1A  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 28998                           
 28999                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 29000  003D1E  0100               	movlb	0	; () banked
 29001  003D20  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 29002  003D22  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29003  003D24  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 29004  003D26  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29005  003D28  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 29006  003D2A  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29007  003D2C  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 29008  003D2E  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29009  003D30  A0D8               	btfss	status,0,c
 29010  003D32  D01D               	goto	l844
 29011                           
 29012                           ; BSR set to: 0
 29013                           ;os_timers.c: 94: {
 29014                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 29015  003D34  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29016  003D38  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29017  003D3C  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29018  003D40  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29019  003D44  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29020  003D46  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29021  003D48  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29022  003D4A  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29023  003D4C  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29024  003D4E  0E00               	movlw	0
 29025  003D50  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29026  003D52  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29027  003D54  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29028  003D56  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29029  003D58  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29030  003D5A  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29031  003D5C  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29032  003D5E  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29033  003D60  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29034  003D62  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29035  003D64  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29036  003D66  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29037  003D68  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29038  003D6A  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29039  003D6C  D028               	goto	L48
 29040  003D6E                     l844:
 29041                           
 29042                           ; BSR set to: 0
 29043                           ;os_timers.c: 97: else
 29044                           ;os_timers.c: 98: {
 29045                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 29046                           
 29047                           ; BSR set to: 0
 29048  003D6E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 29049  003D72  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 29050  003D76  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 29051  003D7A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 29052  003D7E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 29053  003D80  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 29054  003D82  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 29055  003D84  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 29056  003D86  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 29057  003D88  0E00               	movlw	0
 29058  003D8A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 29059  003D8C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 29060  003D8E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 29061  003D90  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 29062  003D92  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 29063  003D94  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 29064  003D96  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 29065  003D98  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 29066  003D9A  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 29067  003D9C  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 29068  003D9E  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 29069  003DA0  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 29070  003DA2  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 29071  003DA4  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 29072  003DA6  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 29073  003DA8  0EFF               	movlw	255
 29074  003DAA  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 29075  003DAC  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 29076  003DAE  0EFF               	movlw	255
 29077  003DB0  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 29078  003DB2  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 29079  003DB4  0EFF               	movlw	255
 29080  003DB6  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 29081  003DB8  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 29082  003DBA  0EFF               	movlw	255
 29083  003DBC  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 29084  003DBE                     L48:
 29085  003DBE  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 29086                           
 29087                           ; BSR set to: 0
 29088                           ;os_timers.c: 100: }
 29089                           ;os_timers.c: 102: return TimeValue;
 29090                           
 29091                           ; BSR set to: 0
 29092  003DC0  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 29093  003DC4  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 29094  003DC8  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 29095  003DCC  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 29096  003DD0  0012               	return	
 29097  003DD2                     __end_of_GetElapsedTime:
 29098                           	opt stack 0
 29099                           tosu	equ	0xFFF
 29100                           tosh	equ	0xFFE
 29101                           tosl	equ	0xFFD
 29102                           pclath	equ	0xFFA
 29103                           tblptru	equ	0xFF8
 29104                           tblptrh	equ	0xFF7
 29105                           tblptrl	equ	0xFF6
 29106                           tablat	equ	0xFF5
 29107                           prodh	equ	0xFF4
 29108                           prodl	equ	0xFF3
 29109                           intcon	equ	0xFF2
 29110                           intcon2	equ	0xFF1
 29111                           intcon3	equ	0xFF0
 29112                           indf0	equ	0xFEF
 29113                           postinc0	equ	0xFEE
 29114                           plusw0	equ	0xFEB
 29115                           fsr0h	equ	0xFEA
 29116                           fsr0l	equ	0xFE9
 29117                           wreg	equ	0xFE8
 29118                           indf1	equ	0xFE7
 29119                           postinc1	equ	0xFE6
 29120                           postdec1	equ	0xFE5
 29121                           plusw1	equ	0xFE3
 29122                           fsr1h	equ	0xFE2
 29123                           fsr1l	equ	0xFE1
 29124                           indf2	equ	0xFDF
 29125                           postinc2	equ	0xFDE
 29126                           postdec2	equ	0xFDD
 29127                           plusw2	equ	0xFDB
 29128                           fsr2h	equ	0xFDA
 29129                           fsr2l	equ	0xFD9
 29130                           status	equ	0xFD8
 29131                           
 29132 ;; *************** function _GetOsTickCounter *****************
 29133 ;; Defined at:
 29134 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 29135 ;; Parameters:    Size  Location     Type
 29136 ;;		None
 29137 ;; Auto vars:     Size  Location     Type
 29138 ;;		None
 29139 ;; Return value:  Size  Location     Type
 29140 ;;                  4   29[BANK0 ] unsigned long 
 29141 ;; Registers used:
 29142 ;;		None
 29143 ;; Tracked objects:
 29144 ;;		On entry : 0/0
 29145 ;;		On exit  : 0/0
 29146 ;;		Unchanged: 0/0
 29147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29152 ;;Total ram usage:        4 bytes
 29153 ;; Hardware stack levels used:    1
 29154 ;; Hardware stack levels required when called:   11
 29155 ;; This function calls:
 29156 ;;		Nothing
 29157 ;; This function is called by:
 29158 ;;		_GetElapsedTime
 29159 ;;		_OsTmr_StartTimer
 29160 ;;		_OsTmr_GetElapsedTime
 29161 ;; This function uses a non-reentrant model
 29162 ;;
 29163                           
 29164                           	psect	text132
 29165  0061D6                     __ptext132:
 29166                           	opt stack 0
 29167  0061D6                     _GetOsTickCounter:
 29168                           	opt stack 12
 29169                           
 29170                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;incstack = 0
 29174  0061D6  C31C  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 29175  0061DA  C31D  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 29176  0061DE  C31E  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 29177  0061E2  C31F  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 29178  0061E6  0012               	return		;funcret
 29179  0061E8                     __end_of_GetOsTickCounter:
 29180                           	opt stack 0
 29181                           tosu	equ	0xFFF
 29182                           tosh	equ	0xFFE
 29183                           tosl	equ	0xFFD
 29184                           pclath	equ	0xFFA
 29185                           tblptru	equ	0xFF8
 29186                           tblptrh	equ	0xFF7
 29187                           tblptrl	equ	0xFF6
 29188                           tablat	equ	0xFF5
 29189                           prodh	equ	0xFF4
 29190                           prodl	equ	0xFF3
 29191                           intcon	equ	0xFF2
 29192                           intcon2	equ	0xFF1
 29193                           intcon3	equ	0xFF0
 29194                           indf0	equ	0xFEF
 29195                           postinc0	equ	0xFEE
 29196                           plusw0	equ	0xFEB
 29197                           fsr0h	equ	0xFEA
 29198                           fsr0l	equ	0xFE9
 29199                           wreg	equ	0xFE8
 29200                           indf1	equ	0xFE7
 29201                           postinc1	equ	0xFE6
 29202                           postdec1	equ	0xFE5
 29203                           plusw1	equ	0xFE3
 29204                           fsr1h	equ	0xFE2
 29205                           fsr1l	equ	0xFE1
 29206                           indf2	equ	0xFDF
 29207                           postinc2	equ	0xFDE
 29208                           postdec2	equ	0xFDD
 29209                           plusw2	equ	0xFDB
 29210                           fsr2h	equ	0xFDA
 29211                           fsr2l	equ	0xFD9
 29212                           status	equ	0xFD8
 29213                           
 29214 ;; *************** function _ClearBuffer *****************
 29215 ;; Defined at:
 29216 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 29217 ;; Parameters:    Size  Location     Type
 29218 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 29219 ;;		 -> MyApp_Task@phone(14), GsmGprsTerminal@UartBuffer(200), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessa
      +ge(50), 
 29220 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 29221 ;;  Len             2   31[BANK0 ] unsigned short 
 29222 ;; Auto vars:     Size  Location     Type
 29223 ;;  Index           2   33[BANK0 ] unsigned short 
 29224 ;; Return value:  Size  Location     Type
 29225 ;;                  1    wreg      void 
 29226 ;; Registers used:
 29227 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29228 ;; Tracked objects:
 29229 ;;		On entry : 0/0
 29230 ;;		On exit  : 0/0
 29231 ;;		Unchanged: 0/0
 29232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29233 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29236 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29237 ;;Total ram usage:        6 bytes
 29238 ;; Hardware stack levels used:    1
 29239 ;; Hardware stack levels required when called:   11
 29240 ;; This function calls:
 29241 ;;		Nothing
 29242 ;; This function is called by:
 29243 ;;		_GetSmsSm
 29244 ;;		_GetCallerNumber
 29245 ;;		_InitGprsNetwork
 29246 ;;		_HttpGetMethod
 29247 ;;		_MyApp_Task
 29248 ;;		_GsmGprsTerminal
 29249 ;; This function uses a non-reentrant model
 29250 ;;
 29251                           
 29252                           	psect	text133
 29253  005BEA                     __ptext133:
 29254                           	opt stack 0
 29255  005BEA                     _ClearBuffer:
 29256                           	opt stack 15
 29257                           
 29258                           ;sf.c: 126: UINT16 Index = 0;
 29259                           
 29260                           ;incstack = 0
 29261  005BEA  0E00               	movlw	0
 29262  005BEC  0100               	movlb	0	; () banked
 29263  005BEE  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29264  005BF0  0E00               	movlw	0
 29265  005BF2  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29266                           
 29267                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 29268  005BF4  0E00               	movlw	0
 29269  005BF6  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 29270  005BF8  0E00               	movlw	0
 29271  005BFA  6F81               	movwf	ClearBuffer@Index& (0+255),b
 29272  005BFC  D00A               	goto	l2224
 29273  005BFE                     
 29274                           ; BSR set to: 0
 29275                           ;sf.c: 130: {
 29276                           ;sf.c: 131: *(Buffer + Index) = 0;
 29277                           
 29278                           ; BSR set to: 0
 29279  005BFE  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29280  005C00  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 29281  005C02  6ED9               	movwf	fsr2l,c
 29282  005C04  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29283  005C06  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 29284  005C08  6EDA               	movwf	fsr2h,c
 29285  005C0A  0E00               	movlw	0
 29286  005C0C  6EDF               	movwf	indf2,c
 29287                           
 29288                           ; BSR set to: 0
 29289  005C0E  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 29290  005C10  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 29291  005C12                     l2224:
 29292                           
 29293                           ; BSR set to: 0
 29294                           
 29295                           ; BSR set to: 0
 29296  005C12  5181               	movf	ClearBuffer@Index& (0+255),w,b
 29297  005C14  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 29298  005C16  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 29299  005C18  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 29300  005C1A  A0D8               	btfss	status,0,c
 29301  005C1C  0012               	return	
 29302  005C1E  D7EF               	goto	l2225
 29303  005C20                     __end_of_ClearBuffer:
 29304                           	opt stack 0
 29305                           tosu	equ	0xFFF
 29306                           tosh	equ	0xFFE
 29307                           tosl	equ	0xFFD
 29308                           pclath	equ	0xFFA
 29309                           tblptru	equ	0xFF8
 29310                           tblptrh	equ	0xFF7
 29311                           tblptrl	equ	0xFF6
 29312                           tablat	equ	0xFF5
 29313                           prodh	equ	0xFF4
 29314                           prodl	equ	0xFF3
 29315                           intcon	equ	0xFF2
 29316                           intcon2	equ	0xFF1
 29317                           intcon3	equ	0xFF0
 29318                           indf0	equ	0xFEF
 29319                           postinc0	equ	0xFEE
 29320                           plusw0	equ	0xFEB
 29321                           fsr0h	equ	0xFEA
 29322                           fsr0l	equ	0xFE9
 29323                           wreg	equ	0xFE8
 29324                           indf1	equ	0xFE7
 29325                           postinc1	equ	0xFE6
 29326                           postdec1	equ	0xFE5
 29327                           plusw1	equ	0xFE3
 29328                           fsr1h	equ	0xFE2
 29329                           fsr1l	equ	0xFE1
 29330                           indf2	equ	0xFDF
 29331                           postinc2	equ	0xFDE
 29332                           postdec2	equ	0xFDD
 29333                           plusw2	equ	0xFDB
 29334                           fsr2h	equ	0xFDA
 29335                           fsr2l	equ	0xFD9
 29336                           status	equ	0xFD8
 29337                           
 29338 ;; *************** function _LedStateMachine *****************
 29339 ;; Defined at:
 29340 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29341 ;; Parameters:    Size  Location     Type
 29342 ;;  Led             1    wreg     unsigned char 
 29343 ;;  LedSts          2   47[BANK0 ] PTR enum E8951
 29344 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 29345 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 29346 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 29347 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 29348 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29349 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 29350 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29351 ;; Auto vars:     Size  Location     Type
 29352 ;;  Led             1   57[BANK0 ] unsigned char 
 29353 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 29354 ;; Return value:  Size  Location     Type
 29355 ;;                  1    wreg      unsigned char 
 29356 ;; Registers used:
 29357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29358 ;; Tracked objects:
 29359 ;;		On entry : 0/0
 29360 ;;		On exit  : 0/0
 29361 ;;		Unchanged: 0/0
 29362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29363 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29364 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29366 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29367 ;;Total ram usage:       11 bytes
 29368 ;; Hardware stack levels used:    1
 29369 ;; Hardware stack levels required when called:   13
 29370 ;; This function calls:
 29371 ;;		_LedBlinkStateMachine
 29372 ;;		_LedPulseStateMachine
 29373 ;;		_Led_SetLedStatus
 29374 ;; This function is called by:
 29375 ;;		_Led_MainTask
 29376 ;; This function uses a non-reentrant model
 29377 ;;
 29378                           
 29379                           	psect	text134
 29380  00443E                     __ptext134:
 29381                           	opt stack 0
 29382  00443E                     _LedStateMachine:
 29383                           	opt stack 14
 29384                           
 29385                           ; BSR set to: 0
 29386                           ;incstack = 0
 29387                           ;LedStateMachine@Led stored from wreg
 29388  00443E  0100               	movlb	0	; () banked
 29389  004440  6F99               	movwf	LedStateMachine@Led& (0+255),b
 29390                           
 29391                           ;led.c: 238: UINT8 LedOutSts = 0u;
 29392  004442  0E00               	movlw	0
 29393  004444  0100               	movlb	0	; () banked
 29394  004446  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29395                           
 29396                           ;led.c: 241: switch (*LedSts)
 29397  004448  D037               	goto	l2083
 29398  00444A                     
 29399                           ; BSR set to: 0
 29400                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 29401                           
 29402                           ; BSR set to: 0
 29403  00444A  0E00               	movlw	0
 29404  00444C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29405                           
 29406                           ; BSR set to: 0
 29407                           ;led.c: 246: *LedOut = ((UINT8)(0));
 29408  00444E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29409  004452  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29410  004456  0E00               	movlw	0
 29411  004458  D007               	goto	L49
 29412  00445A                     
 29413                           ; BSR set to: 0
 29414                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 29415                           
 29416                           ; BSR set to: 0
 29417  00445A  0E01               	movlw	1
 29418  00445C  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29419                           
 29420                           ; BSR set to: 0
 29421                           ;led.c: 252: *LedOut = ((UINT8)(1));
 29422  00445E  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29423  004462  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29424  004466  0E01               	movlw	1
 29425  004468                     L49:
 29426  004468  6EDF               	movwf	indf2,c
 29427                           
 29428                           ;led.c: 253: break;
 29429  00446A  D03A               	goto	l2085
 29430  00446C                     
 29431                           ; BSR set to: 0
 29432                           ;led.c: 257: if (*LedOut == 1)
 29433                           
 29434                           ; BSR set to: 0
 29435  00446C  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 29436  004470  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 29437  004474  04DE               	decf	postinc2,w,c
 29438  004476  A4D8               	btfss	status,2,c
 29439  004478  D006               	goto	l2088
 29440                           
 29441                           ; BSR set to: 0
 29442                           ;led.c: 258: {
 29443                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 29444  00447A  0E00               	movlw	0
 29445  00447C  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29446  00447E  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29447  004480  ECA4  F02E         	call	_Led_SetLedStatus
 29448                           
 29449                           ;led.c: 261: }
 29450  004484  D02D               	goto	l2085
 29451  004486                     l2088:
 29452                           
 29453                           ;led.c: 262: else
 29454                           ;led.c: 263: {
 29455                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 29456  004486  0E01               	movlw	1
 29457  004488  0100               	movlb	0	; () banked
 29458  00448A  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29459  00448C  5199               	movf	LedStateMachine@Led& (0+255),w,b
 29460  00448E  ECA4  F02E         	call	_Led_SetLedStatus
 29461                           
 29462                           ;led.c: 266: }
 29463                           ;led.c: 267: break;
 29464  004492  D026               	goto	l2085
 29465  004494                     
 29466                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 29467  004494  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 29468  004498  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 29469  00449C  ECBF  F012         	call	_LedBlinkStateMachine	;wreg free
 29470  0044A0  D008               	goto	L50
 29471  0044A2                     
 29472                           ; BSR set to: 0
 29473                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 29474                           
 29475                           ; BSR set to: 0
 29476  0044A2  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 29477  0044A6  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 29478  0044AA  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 29479  0044AE  EC15  F019         	call	_LedPulseStateMachine	;wreg free
 29480  0044B2                     L50:
 29481  0044B2  0100               	movlb	0	; () banked
 29482  0044B4  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 29483                           
 29484                           ; BSR set to: 0
 29485                           ;led.c: 281: }
 29486                           
 29487                           ; BSR set to: 0
 29488                           ;led.c: 280: break;
 29489                           
 29490                           ;led.c: 279: default:
 29491                           
 29492                           ;led.c: 277: break;
 29493  0044B6  D014               	goto	l2085
 29494  0044B8                     l2083:
 29495                           
 29496                           ; BSR set to: 0
 29497                           
 29498                           ; BSR set to: 0
 29499  0044B8  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 29500  0044BC  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 29501  0044C0  50DF               	movf	indf2,w,c
 29502                           
 29503                           ; Switch size 1, requested type "space"
 29504                           ; Number of cases is 5, Range of values is 0 to 4
 29505                           ; switch strategies available:
 29506                           ; Name         Instructions Cycles
 29507                           ; simple_byte           16     9 (average)
 29508                           ;	Chosen strategy is simple_byte
 29509  0044C2  0A00               	xorlw	0	; case 0
 29510  0044C4  B4D8               	btfsc	status,2,c
 29511  0044C6  D7C1               	goto	l2084
 29512  0044C8  0A01               	xorlw	1	; case 1
 29513  0044CA  B4D8               	btfsc	status,2,c
 29514  0044CC  D7C6               	goto	l2086
 29515  0044CE  0A03               	xorlw	3	; case 2
 29516  0044D0  B4D8               	btfsc	status,2,c
 29517  0044D2  D7CC               	goto	l2087
 29518  0044D4  0A01               	xorlw	1	; case 3
 29519  0044D6  B4D8               	btfsc	status,2,c
 29520  0044D8  D7DD               	goto	l2090
 29521  0044DA  0A07               	xorlw	7	; case 4
 29522  0044DC  B4D8               	btfsc	status,2,c
 29523  0044DE  D7E1               	goto	l2091
 29524  0044E0                     l2085:
 29525                           
 29526                           ;led.c: 283: return LedOutSts;
 29527                           
 29528                           ; BSR set to: 0
 29529  0044E0  0100               	movlb	0	; () banked
 29530  0044E2  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 29531  0044E4  0012               	return	
 29532  0044E6                     __end_of_LedStateMachine:
 29533                           	opt stack 0
 29534                           tosu	equ	0xFFF
 29535                           tosh	equ	0xFFE
 29536                           tosl	equ	0xFFD
 29537                           pclath	equ	0xFFA
 29538                           tblptru	equ	0xFF8
 29539                           tblptrh	equ	0xFF7
 29540                           tblptrl	equ	0xFF6
 29541                           tablat	equ	0xFF5
 29542                           prodh	equ	0xFF4
 29543                           prodl	equ	0xFF3
 29544                           intcon	equ	0xFF2
 29545                           intcon2	equ	0xFF1
 29546                           intcon3	equ	0xFF0
 29547                           indf0	equ	0xFEF
 29548                           postinc0	equ	0xFEE
 29549                           plusw0	equ	0xFEB
 29550                           fsr0h	equ	0xFEA
 29551                           fsr0l	equ	0xFE9
 29552                           wreg	equ	0xFE8
 29553                           indf1	equ	0xFE7
 29554                           postinc1	equ	0xFE6
 29555                           postdec1	equ	0xFE5
 29556                           plusw1	equ	0xFE3
 29557                           fsr1h	equ	0xFE2
 29558                           fsr1l	equ	0xFE1
 29559                           indf2	equ	0xFDF
 29560                           postinc2	equ	0xFDE
 29561                           postdec2	equ	0xFDD
 29562                           plusw2	equ	0xFDB
 29563                           fsr2h	equ	0xFDA
 29564                           fsr2l	equ	0xFD9
 29565                           status	equ	0xFD8
 29566                           
 29567 ;; *************** function _LedPulseStateMachine *****************
 29568 ;; Defined at:
 29569 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29570 ;; Parameters:    Size  Location     Type
 29571 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 29572 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 29573 ;;  Led             1   44[BANK0 ] unsigned char 
 29574 ;; Auto vars:     Size  Location     Type
 29575 ;;		None
 29576 ;; Return value:  Size  Location     Type
 29577 ;;                  1    wreg      unsigned char 
 29578 ;; Registers used:
 29579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29580 ;; Tracked objects:
 29581 ;;		On entry : 0/0
 29582 ;;		On exit  : 0/0
 29583 ;;		Unchanged: 0/0
 29584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29585 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29587 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29588 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29589 ;;Total ram usage:        5 bytes
 29590 ;; Hardware stack levels used:    1
 29591 ;; Hardware stack levels required when called:   12
 29592 ;; This function calls:
 29593 ;;		_Led_SetLedStatus
 29594 ;;		___lwdiv
 29595 ;; This function is called by:
 29596 ;;		_LedStateMachine
 29597 ;; This function uses a non-reentrant model
 29598 ;;
 29599                           
 29600                           	psect	text135
 29601  00322A                     __ptext135:
 29602                           	opt stack 0
 29603  00322A                     _LedPulseStateMachine:
 29604                           	opt stack 14
 29605                           
 29606                           ;led.c: 185: switch (LedPulse->LedPulseState)
 29607                           
 29608                           ; BSR set to: 0
 29609                           ;incstack = 0
 29610  00322A  D05C               	goto	l2073
 29611  00322C                     
 29612                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 29613  00322C  0100               	movlb	0	; () banked
 29614  00322E  EE20 F001          	lfsr	2,1
 29615  003232  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29616  003234  26D9               	addwf	fsr2l,f,c
 29617  003236  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29618  003238  22DA               	addwfc	fsr2h,f,c
 29619  00323A  0E01               	movlw	1
 29620  00323C  6EDF               	movwf	indf2,c
 29621                           
 29622                           ; BSR set to: 0
 29623                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 29624  00323E  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29625  003242  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29626  003246  0E01               	movlw	1
 29627  003248  D036               	goto	L51
 29628  00324A                     
 29629                           ;led.c: 196: LedPulse->LedPulseCounter++;
 29630                           
 29631                           ; BSR set to: 0
 29632  00324A  0100               	movlb	0	; () banked
 29633  00324C  EE20 F002          	lfsr	2,2
 29634  003250  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29635  003252  26D9               	addwf	fsr2l,f,c
 29636  003254  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29637  003256  22DA               	addwfc	fsr2h,f,c
 29638  003258  2ADE               	incf	postinc2,f,c
 29639  00325A  0E00               	movlw	0
 29640  00325C  22DD               	addwfc	postdec2,f,c
 29641                           
 29642                           ; BSR set to: 0
 29643                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 29644  00325E  EE20 F004          	lfsr	2,4
 29645  003262  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29646  003264  26D9               	addwf	fsr2l,f,c
 29647  003266  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29648  003268  22DA               	addwfc	fsr2h,f,c
 29649  00326A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 29650  00326E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 29651  003272  0E00               	movlw	0
 29652  003274  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 29653  003276  0E32               	movlw	50
 29654  003278  6F85               	movwf	___lwdiv@divisor& (0+255),b
 29655  00327A  EC54  F02A         	call	___lwdiv	;wreg free
 29656  00327E  0100               	movlb	0	; () banked
 29657  003280  EE20 F002          	lfsr	2,2
 29658  003284  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29659  003286  26D9               	addwf	fsr2l,f,c
 29660  003288  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29661  00328A  22DA               	addwfc	fsr2h,f,c
 29662  00328C  5183               	movf	?___lwdiv& (0+255),w,b
 29663  00328E  5CDE               	subwf	postinc2,w,c
 29664  003290  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 29665  003292  58DE               	subwfb	postinc2,w,c
 29666  003294  A0D8               	btfss	status,0,c
 29667  003296  D034               	goto	l2075
 29668                           
 29669                           ; BSR set to: 0
 29670                           ;led.c: 199: {
 29671                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 29672  003298  EE20 F002          	lfsr	2,2
 29673  00329C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29674  00329E  26D9               	addwf	fsr2l,f,c
 29675  0032A0  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29676  0032A2  22DA               	addwfc	fsr2h,f,c
 29677  0032A4  0E00               	movlw	0
 29678  0032A6  6EDE               	movwf	postinc2,c
 29679  0032A8  0E00               	movlw	0
 29680  0032AA  6EDD               	movwf	postdec2,c
 29681                           
 29682                           ; BSR set to: 0
 29683                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 29684  0032AC  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29685  0032B0  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29686  0032B4  0E02               	movlw	2
 29687  0032B6                     L51:
 29688  0032B6  6EDF               	movwf	indf2,c
 29689                           
 29690                           ; BSR set to: 0
 29691                           ;led.c: 204: }
 29692                           ;led.c: 205: break;
 29693  0032B8  D023               	goto	l2075
 29694  0032BA                     
 29695                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 29696                           
 29697                           ; BSR set to: 0
 29698  0032BA  0100               	movlb	0	; () banked
 29699  0032BC  EE20 F001          	lfsr	2,1
 29700  0032C0  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29701  0032C2  26D9               	addwf	fsr2l,f,c
 29702  0032C4  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29703  0032C6  22DA               	addwfc	fsr2h,f,c
 29704  0032C8  0E00               	movlw	0
 29705  0032CA  6EDF               	movwf	indf2,c
 29706                           
 29707                           ; BSR set to: 0
 29708                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 29709  0032CC  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29710  0032D0  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29711  0032D4  0E00               	movlw	0
 29712  0032D6  6EDF               	movwf	indf2,c
 29713                           
 29714                           ; BSR set to: 0
 29715                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 29716  0032D8  0E00               	movlw	0
 29717  0032DA  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 29718  0032DC  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 29719  0032DE  ECA4  F02E         	call	_Led_SetLedStatus
 29720                           
 29721                           ;led.c: 218: }
 29722                           
 29723                           ;led.c: 217: break;
 29724                           
 29725                           ;led.c: 216: default:
 29726                           
 29727                           ;led.c: 214: break;
 29728  0032E2  D00E               	goto	l2075
 29729  0032E4                     l2073:
 29730  0032E4  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 29731  0032E8  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 29732  0032EC  50DF               	movf	indf2,w,c
 29733                           
 29734                           ; Switch size 1, requested type "space"
 29735                           ; Number of cases is 3, Range of values is 0 to 2
 29736                           ; switch strategies available:
 29737                           ; Name         Instructions Cycles
 29738                           ; simple_byte           10     6 (average)
 29739                           ;	Chosen strategy is simple_byte
 29740  0032EE  0A00               	xorlw	0	; case 0
 29741  0032F0  B4D8               	btfsc	status,2,c
 29742  0032F2  D79C               	goto	l2074
 29743  0032F4  0A01               	xorlw	1	; case 1
 29744  0032F6  B4D8               	btfsc	status,2,c
 29745  0032F8  D7A8               	goto	l2076
 29746  0032FA  0A03               	xorlw	3	; case 2
 29747  0032FC  B4D8               	btfsc	status,2,c
 29748  0032FE  D7DD               	goto	l2078
 29749  003300                     l2075:
 29750                           
 29751                           ;led.c: 221: return (LedPulse->LedOutState);
 29752  003300  0100               	movlb	0	; () banked
 29753  003302  EE20 F001          	lfsr	2,1
 29754  003306  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 29755  003308  26D9               	addwf	fsr2l,f,c
 29756  00330A  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 29757  00330C  22DA               	addwfc	fsr2h,f,c
 29758  00330E  50DF               	movf	indf2,w,c
 29759  003310  0012               	return	
 29760  003312                     __end_of_LedPulseStateMachine:
 29761                           	opt stack 0
 29762                           tosu	equ	0xFFF
 29763                           tosh	equ	0xFFE
 29764                           tosl	equ	0xFFD
 29765                           pclath	equ	0xFFA
 29766                           tblptru	equ	0xFF8
 29767                           tblptrh	equ	0xFF7
 29768                           tblptrl	equ	0xFF6
 29769                           tablat	equ	0xFF5
 29770                           prodh	equ	0xFF4
 29771                           prodl	equ	0xFF3
 29772                           intcon	equ	0xFF2
 29773                           intcon2	equ	0xFF1
 29774                           intcon3	equ	0xFF0
 29775                           indf0	equ	0xFEF
 29776                           postinc0	equ	0xFEE
 29777                           plusw0	equ	0xFEB
 29778                           fsr0h	equ	0xFEA
 29779                           fsr0l	equ	0xFE9
 29780                           wreg	equ	0xFE8
 29781                           indf1	equ	0xFE7
 29782                           postinc1	equ	0xFE6
 29783                           postdec1	equ	0xFE5
 29784                           plusw1	equ	0xFE3
 29785                           fsr1h	equ	0xFE2
 29786                           fsr1l	equ	0xFE1
 29787                           indf2	equ	0xFDF
 29788                           postinc2	equ	0xFDE
 29789                           postdec2	equ	0xFDD
 29790                           plusw2	equ	0xFDB
 29791                           fsr2h	equ	0xFDA
 29792                           fsr2l	equ	0xFD9
 29793                           status	equ	0xFD8
 29794                           
 29795 ;; *************** function _Led_SetLedStatus *****************
 29796 ;; Defined at:
 29797 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29798 ;; Parameters:    Size  Location     Type
 29799 ;;  Led             1    wreg     unsigned char 
 29800 ;;  LedSts          1   29[BANK0 ] enum E8951
 29801 ;; Auto vars:     Size  Location     Type
 29802 ;;  Led             1   30[BANK0 ] unsigned char 
 29803 ;; Return value:  Size  Location     Type
 29804 ;;                  1    wreg      void 
 29805 ;; Registers used:
 29806 ;;		wreg, status,2, status,0
 29807 ;; Tracked objects:
 29808 ;;		On entry : 0/0
 29809 ;;		On exit  : 0/0
 29810 ;;		Unchanged: 0/0
 29811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29812 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29813 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29816 ;;Total ram usage:        2 bytes
 29817 ;; Hardware stack levels used:    1
 29818 ;; Hardware stack levels required when called:   11
 29819 ;; This function calls:
 29820 ;;		Nothing
 29821 ;; This function is called by:
 29822 ;;		_LedPulseStateMachine
 29823 ;;		_LedStateMachine
 29824 ;;		_initGprsModem
 29825 ;;		_blinkForSeconds
 29826 ;; This function uses a non-reentrant model
 29827 ;;
 29828                           
 29829                           	psect	text136
 29830  005D48                     __ptext136:
 29831                           	opt stack 0
 29832  005D48                     _Led_SetLedStatus:
 29833                           	opt stack 15
 29834                           
 29835                           ; BSR set to: 0
 29836                           ;incstack = 0
 29837                           ;Led_SetLedStatus@Led stored from wreg
 29838  005D48  0100               	movlb	0	; () banked
 29839  005D4A  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 29840                           
 29841                           ;led.c: 341: switch (Led)
 29842  005D4C  D009               	goto	l2104
 29843  005D4E                     l2105:
 29844                           
 29845                           ; BSR set to: 0
 29846                           ;led.c: 344: Led1Sts = LedSts;
 29847  005D4E  C07D  F1FD         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 29848                           
 29849                           ;led.c: 345: break;
 29850  005D52  0012               	return	
 29851  005D54                     l2107:
 29852                           
 29853                           ; BSR set to: 0
 29854                           ;led.c: 348: Led2Sts = LedSts;
 29855  005D54  C07D  F1FB         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 29856                           
 29857                           ;led.c: 349: break;
 29858  005D58  0012               	return	
 29859  005D5A                     l2108:
 29860                           
 29861                           ; BSR set to: 0
 29862                           ;led.c: 352: Led3Sts = LedSts;
 29863  005D5A  C07D  F1F9         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;led.c: 357: }
 29867                           
 29868                           ; BSR set to: 0
 29869                           ;led.c: 356: break;
 29870                           
 29871                           ;led.c: 355: default:
 29872                           
 29873                           ;led.c: 353: break;
 29874  005D5E  0012               	return	
 29875  005D60                     l2104:
 29876                           
 29877                           ; BSR set to: 0
 29878  005D60  0100               	movlb	0	; () banked
 29879  005D62  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 29880                           
 29881                           ; Switch size 1, requested type "space"
 29882                           ; Number of cases is 3, Range of values is 1 to 3
 29883                           ; switch strategies available:
 29884                           ; Name         Instructions Cycles
 29885                           ; simple_byte           10     6 (average)
 29886                           ;	Chosen strategy is simple_byte
 29887  005D64  0A01               	xorlw	1	; case 1
 29888  005D66  B4D8               	btfsc	status,2,c
 29889  005D68  D7F2               	goto	l2105
 29890  005D6A  0A03               	xorlw	3	; case 2
 29891  005D6C  B4D8               	btfsc	status,2,c
 29892  005D6E  D7F2               	goto	l2107
 29893  005D70  0A01               	xorlw	1	; case 3
 29894  005D72  A4D8               	btfss	status,2,c
 29895  005D74  0012               	return	
 29896  005D76  D7F1               	goto	l2108
 29897  005D78                     __end_of_Led_SetLedStatus:
 29898                           	opt stack 0
 29899                           tosu	equ	0xFFF
 29900                           tosh	equ	0xFFE
 29901                           tosl	equ	0xFFD
 29902                           pclath	equ	0xFFA
 29903                           tblptru	equ	0xFF8
 29904                           tblptrh	equ	0xFF7
 29905                           tblptrl	equ	0xFF6
 29906                           tablat	equ	0xFF5
 29907                           prodh	equ	0xFF4
 29908                           prodl	equ	0xFF3
 29909                           intcon	equ	0xFF2
 29910                           intcon2	equ	0xFF1
 29911                           intcon3	equ	0xFF0
 29912                           indf0	equ	0xFEF
 29913                           postinc0	equ	0xFEE
 29914                           plusw0	equ	0xFEB
 29915                           fsr0h	equ	0xFEA
 29916                           fsr0l	equ	0xFE9
 29917                           wreg	equ	0xFE8
 29918                           indf1	equ	0xFE7
 29919                           postinc1	equ	0xFE6
 29920                           postdec1	equ	0xFE5
 29921                           plusw1	equ	0xFE3
 29922                           fsr1h	equ	0xFE2
 29923                           fsr1l	equ	0xFE1
 29924                           indf2	equ	0xFDF
 29925                           postinc2	equ	0xFDE
 29926                           postdec2	equ	0xFDD
 29927                           plusw2	equ	0xFDB
 29928                           fsr2h	equ	0xFDA
 29929                           fsr2l	equ	0xFD9
 29930                           status	equ	0xFD8
 29931                           
 29932 ;; *************** function _LedBlinkStateMachine *****************
 29933 ;; Defined at:
 29934 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 29935 ;; Parameters:    Size  Location     Type
 29936 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 29937 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 29938 ;; Auto vars:     Size  Location     Type
 29939 ;;		None
 29940 ;; Return value:  Size  Location     Type
 29941 ;;                  1    wreg      unsigned char 
 29942 ;; Registers used:
 29943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29944 ;; Tracked objects:
 29945 ;;		On entry : 0/0
 29946 ;;		On exit  : 0/0
 29947 ;;		Unchanged: 0/0
 29948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29953 ;;Total ram usage:        4 bytes
 29954 ;; Hardware stack levels used:    1
 29955 ;; Hardware stack levels required when called:   12
 29956 ;; This function calls:
 29957 ;;		___lwdiv
 29958 ;; This function is called by:
 29959 ;;		_LedStateMachine
 29960 ;; This function uses a non-reentrant model
 29961 ;;
 29962                           
 29963                           	psect	text137
 29964  00257E                     __ptext137:
 29965                           	opt stack 0
 29966  00257E                     _LedBlinkStateMachine:
 29967                           	opt stack 14
 29968                           
 29969                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 29970                           
 29971                           ; BSR set to: 0
 29972                           ;incstack = 0
 29973  00257E  D08F               	goto	l2060
 29974  002580                     
 29975                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 29976  002580  0100               	movlb	0	; () banked
 29977  002582  EE20 F008          	lfsr	2,8
 29978  002586  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29979  002588  26D9               	addwf	fsr2l,f,c
 29980  00258A  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29981  00258C  22DA               	addwfc	fsr2h,f,c
 29982  00258E  EE10 F001          	lfsr	1,1
 29983  002592  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 29984  002594  26E1               	addwf	fsr1l,f,c
 29985  002596  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 29986  002598  22E2               	addwfc	fsr1h,f,c
 29987  00259A  CFDF FFE7          	movff	indf2,indf1
 29988                           
 29989                           ; BSR set to: 0
 29990                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 29991  00259E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 29992  0025A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 29993  0025A6  D040               	goto	L52
 29994  0025A8                     
 29995                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 29996                           
 29997                           ; BSR set to: 0
 29998  0025A8  0100               	movlb	0	; () banked
 29999  0025AA  EE20 F002          	lfsr	2,2
 30000  0025AE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30001  0025B0  26D9               	addwf	fsr2l,f,c
 30002  0025B2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30003  0025B4  22DA               	addwfc	fsr2h,f,c
 30004  0025B6  2ADE               	incf	postinc2,f,c
 30005  0025B8  0E00               	movlw	0
 30006  0025BA  22DD               	addwfc	postdec2,f,c
 30007                           
 30008                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 30009  0025BC  EE20 F001          	lfsr	2,1
 30010  0025C0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30011  0025C2  26D9               	addwf	fsr2l,f,c
 30012  0025C4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30013  0025C6  22DA               	addwfc	fsr2h,f,c
 30014  0025C8  50DF               	movf	indf2,w,c
 30015  0025CA  A4D8               	btfss	status,2,c
 30016  0025CC  D02F               	goto	l2064
 30017                           
 30018                           ; BSR set to: 0
 30019                           ;led.c: 142: {
 30020                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 30021  0025CE  EE20 F006          	lfsr	2,6
 30022  0025D2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30023  0025D4  26D9               	addwf	fsr2l,f,c
 30024  0025D6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30025  0025D8  22DA               	addwfc	fsr2h,f,c
 30026  0025DA  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30027  0025DE  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30028  0025E2  0E00               	movlw	0
 30029  0025E4  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30030  0025E6  0E32               	movlw	50
 30031  0025E8  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30032  0025EA  EC54  F02A         	call	___lwdiv	;wreg free
 30033  0025EE  0100               	movlb	0	; () banked
 30034  0025F0  EE20 F002          	lfsr	2,2
 30035  0025F4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30036  0025F6  26D9               	addwf	fsr2l,f,c
 30037  0025F8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30038  0025FA  22DA               	addwfc	fsr2h,f,c
 30039  0025FC  5183               	movf	?___lwdiv& (0+255),w,b
 30040  0025FE  5CDE               	subwf	postinc2,w,c
 30041  002600  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30042  002602  58DE               	subwfb	postinc2,w,c
 30043  002604  A0D8               	btfss	status,0,c
 30044  002606  D056               	goto	l2062
 30045                           
 30046                           ; BSR set to: 0
 30047                           ;led.c: 145: {
 30048                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 30049  002608  EE20 F002          	lfsr	2,2
 30050  00260C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30051  00260E  26D9               	addwf	fsr2l,f,c
 30052  002610  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30053  002612  22DA               	addwfc	fsr2h,f,c
 30054  002614  0E00               	movlw	0
 30055  002616  6EDE               	movwf	postinc2,c
 30056  002618  0E00               	movlw	0
 30057  00261A  6EDD               	movwf	postdec2,c
 30058                           
 30059                           ;led.c: 149: LedBlink->LedOutState = OnState;
 30060  00261C  EE20 F001          	lfsr	2,1
 30061  002620  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30062  002622  26D9               	addwf	fsr2l,f,c
 30063  002624  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30064  002626  22DA               	addwfc	fsr2h,f,c
 30065  002628                     L52:
 30066  002628  0E01               	movlw	1
 30067  00262A  D037               	goto	L53
 30068  00262C                     l2064:
 30069                           
 30070                           ; BSR set to: 0
 30071                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 30072                           
 30073                           ; BSR set to: 0
 30074  00262C  EE20 F001          	lfsr	2,1
 30075  002630  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30076  002632  26D9               	addwf	fsr2l,f,c
 30077  002634  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30078  002636  22DA               	addwfc	fsr2h,f,c
 30079  002638  04DE               	decf	postinc2,w,c
 30080  00263A  A4D8               	btfss	status,2,c
 30081  00263C  D03B               	goto	l2062
 30082                           
 30083                           ; BSR set to: 0
 30084                           ;led.c: 153: {
 30085                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 30086  00263E  EE20 F004          	lfsr	2,4
 30087  002642  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30088  002644  26D9               	addwf	fsr2l,f,c
 30089  002646  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30090  002648  22DA               	addwfc	fsr2h,f,c
 30091  00264A  CFDE F083          	movff	postinc2,___lwdiv@dividend
 30092  00264E  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 30093  002652  0E00               	movlw	0
 30094  002654  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 30095  002656  0E32               	movlw	50
 30096  002658  6F85               	movwf	___lwdiv@divisor& (0+255),b
 30097  00265A  EC54  F02A         	call	___lwdiv	;wreg free
 30098  00265E  0100               	movlb	0	; () banked
 30099  002660  EE20 F002          	lfsr	2,2
 30100  002664  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30101  002666  26D9               	addwf	fsr2l,f,c
 30102  002668  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30103  00266A  22DA               	addwfc	fsr2h,f,c
 30104  00266C  5183               	movf	?___lwdiv& (0+255),w,b
 30105  00266E  5CDE               	subwf	postinc2,w,c
 30106  002670  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 30107  002672  58DE               	subwfb	postinc2,w,c
 30108  002674  A0D8               	btfss	status,0,c
 30109  002676  D01E               	goto	l2062
 30110                           
 30111                           ; BSR set to: 0
 30112                           ;led.c: 156: {
 30113                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 30114  002678  EE20 F002          	lfsr	2,2
 30115  00267C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30116  00267E  26D9               	addwf	fsr2l,f,c
 30117  002680  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30118  002682  22DA               	addwfc	fsr2h,f,c
 30119  002684  0E00               	movlw	0
 30120  002686  6EDE               	movwf	postinc2,c
 30121  002688  0E00               	movlw	0
 30122  00268A  6EDD               	movwf	postdec2,c
 30123                           
 30124                           ;led.c: 160: LedBlink->LedOutState = OffState;
 30125  00268C  EE20 F001          	lfsr	2,1
 30126  002690  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30127  002692  26D9               	addwf	fsr2l,f,c
 30128  002694  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30129  002696  22DA               	addwfc	fsr2h,f,c
 30130  002698  0E00               	movlw	0
 30131  00269A                     L53:
 30132  00269A  6EDF               	movwf	indf2,c
 30133                           
 30134                           ; BSR set to: 0
 30135                           ;led.c: 167: }
 30136                           
 30137                           ; BSR set to: 0
 30138                           ;led.c: 166: break;
 30139                           
 30140                           ;led.c: 165: default:
 30141                           
 30142                           ; BSR set to: 0
 30143                           ;led.c: 161: }
 30144                           ;led.c: 162: }
 30145                           ;led.c: 163: break;
 30146                           
 30147                           ; BSR set to: 0
 30148                           
 30149                           ; BSR set to: 0
 30150  00269C  D00B               	goto	l2062
 30151  00269E                     l2060:
 30152                           
 30153                           ; BSR set to: 0
 30154  00269E  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 30155  0026A2  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 30156  0026A6  50DF               	movf	indf2,w,c
 30157                           
 30158                           ; Switch size 1, requested type "space"
 30159                           ; Number of cases is 2, Range of values is 0 to 1
 30160                           ; switch strategies available:
 30161                           ; Name         Instructions Cycles
 30162                           ; simple_byte            7     4 (average)
 30163                           ;	Chosen strategy is simple_byte
 30164  0026A8  0A00               	xorlw	0	; case 0
 30165  0026AA  B4D8               	btfsc	status,2,c
 30166  0026AC  D769               	goto	l2061
 30167  0026AE  0A01               	xorlw	1	; case 1
 30168  0026B0  B4D8               	btfsc	status,2,c
 30169  0026B2  D77A               	goto	l2063
 30170  0026B4                     l2062:
 30171                           
 30172                           ;led.c: 170: return (LedBlink->LedOutState);
 30173  0026B4  0100               	movlb	0	; () banked
 30174  0026B6  EE20 F001          	lfsr	2,1
 30175  0026BA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 30176  0026BC  26D9               	addwf	fsr2l,f,c
 30177  0026BE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 30178  0026C0  22DA               	addwfc	fsr2h,f,c
 30179  0026C2  50DF               	movf	indf2,w,c
 30180  0026C4  0012               	return	
 30181  0026C6                     __end_of_LedBlinkStateMachine:
 30182                           	opt stack 0
 30183                           tosu	equ	0xFFF
 30184                           tosh	equ	0xFFE
 30185                           tosl	equ	0xFFD
 30186                           pclath	equ	0xFFA
 30187                           tblptru	equ	0xFF8
 30188                           tblptrh	equ	0xFF7
 30189                           tblptrl	equ	0xFF6
 30190                           tablat	equ	0xFF5
 30191                           prodh	equ	0xFF4
 30192                           prodl	equ	0xFF3
 30193                           intcon	equ	0xFF2
 30194                           intcon2	equ	0xFF1
 30195                           intcon3	equ	0xFF0
 30196                           indf0	equ	0xFEF
 30197                           postinc0	equ	0xFEE
 30198                           plusw0	equ	0xFEB
 30199                           fsr0h	equ	0xFEA
 30200                           fsr0l	equ	0xFE9
 30201                           wreg	equ	0xFE8
 30202                           indf1	equ	0xFE7
 30203                           postinc1	equ	0xFE6
 30204                           postdec1	equ	0xFE5
 30205                           plusw1	equ	0xFE3
 30206                           fsr1h	equ	0xFE2
 30207                           fsr1l	equ	0xFE1
 30208                           indf2	equ	0xFDF
 30209                           postinc2	equ	0xFDE
 30210                           postdec2	equ	0xFDD
 30211                           plusw2	equ	0xFDB
 30212                           fsr2h	equ	0xFDA
 30213                           fsr2l	equ	0xFD9
 30214                           status	equ	0xFD8
 30215                           
 30216 ;; *************** function ___lwdiv *****************
 30217 ;; Defined at:
 30218 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 30219 ;; Parameters:    Size  Location     Type
 30220 ;;  dividend        2   35[BANK0 ] unsigned int 
 30221 ;;  divisor         2   37[BANK0 ] unsigned int 
 30222 ;; Auto vars:     Size  Location     Type
 30223 ;;  quotient        2   40[BANK0 ] unsigned int 
 30224 ;;  counter         1   39[BANK0 ] unsigned char 
 30225 ;; Return value:  Size  Location     Type
 30226 ;;                  2   35[BANK0 ] unsigned int 
 30227 ;; Registers used:
 30228 ;;		wreg, status,2, status,0
 30229 ;; Tracked objects:
 30230 ;;		On entry : 0/0
 30231 ;;		On exit  : 0/0
 30232 ;;		Unchanged: 0/0
 30233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30234 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30235 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30237 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30238 ;;Total ram usage:        7 bytes
 30239 ;; Hardware stack levels used:    1
 30240 ;; Hardware stack levels required when called:   11
 30241 ;; This function calls:
 30242 ;;		Nothing
 30243 ;; This function is called by:
 30244 ;;		_LedBlinkStateMachine
 30245 ;;		_LedPulseStateMachine
 30246 ;;		_secondsAppTimer
 30247 ;;		_utoa
 30248 ;; This function uses a non-reentrant model
 30249 ;;
 30250                           
 30251                           	psect	text138
 30252  0054A8                     __ptext138:
 30253                           	opt stack 0
 30254  0054A8                     ___lwdiv:
 30255                           	opt stack 14
 30256                           
 30257                           ; BSR set to: 0
 30258                           ;incstack = 0
 30259  0054A8  0E00               	movlw	0
 30260  0054AA  0100               	movlb	0	; () banked
 30261  0054AC  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30262  0054AE  0E00               	movlw	0
 30263  0054B0  6F88               	movwf	___lwdiv@quotient& (0+255),b
 30264                           
 30265                           ; BSR set to: 0
 30266  0054B2  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30267  0054B4  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30268  0054B6  B4D8               	btfsc	status,2,c
 30269  0054B8  D01C               	goto	l3086
 30270                           
 30271                           ; BSR set to: 0
 30272  0054BA  0E01               	movlw	1
 30273  0054BC  6F87               	movwf	___lwdiv@counter& (0+255),b
 30274  0054BE  D004               	goto	l3081
 30275  0054C0                     
 30276                           ; BSR set to: 0
 30277                           
 30278                           ; BSR set to: 0
 30279  0054C0  90D8               	bcf	status,0,c
 30280  0054C2  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 30281  0054C4  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30282  0054C6  2B87               	incf	___lwdiv@counter& (0+255),f,b
 30283  0054C8                     l3081:
 30284                           
 30285                           ; BSR set to: 0
 30286                           
 30287                           ; BSR set to: 0
 30288  0054C8  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30289  0054CA  D7FA               	goto	l3082
 30290  0054CC                     u10890:
 30291                           
 30292                           ; BSR set to: 0
 30293                           
 30294                           ; BSR set to: 0
 30295                           
 30296                           ; BSR set to: 0
 30297  0054CC  90D8               	bcf	status,0,c
 30298  0054CE  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 30299  0054D0  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30300                           
 30301                           ; BSR set to: 0
 30302  0054D2  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30303  0054D4  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 30304  0054D6  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30305  0054D8  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30306  0054DA  A0D8               	btfss	status,0,c
 30307  0054DC  D005               	goto	l3085
 30308                           
 30309                           ; BSR set to: 0
 30310  0054DE  5185               	movf	___lwdiv@divisor& (0+255),w,b
 30311  0054E0  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 30312  0054E2  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30313  0054E4  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30314                           
 30315                           ; BSR set to: 0
 30316  0054E6  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 30317  0054E8                     l3085:
 30318                           
 30319                           ; BSR set to: 0
 30320                           
 30321                           ; BSR set to: 0
 30322  0054E8  90D8               	bcf	status,0,c
 30323  0054EA  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30324  0054EC  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 30325                           
 30326                           ; BSR set to: 0
 30327  0054EE  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 30328  0054F0  D7ED               	goto	u10890
 30329  0054F2                     l3086:
 30330                           
 30331                           ; BSR set to: 0
 30332                           
 30333                           ; BSR set to: 0
 30334  0054F2  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 30335  0054F6  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30336                           
 30337                           ; BSR set to: 0
 30338  0054FA  0012               	return		;funcret
 30339  0054FC                     __end_of___lwdiv:
 30340                           	opt stack 0
 30341                           tosu	equ	0xFFF
 30342                           tosh	equ	0xFFE
 30343                           tosl	equ	0xFFD
 30344                           pclath	equ	0xFFA
 30345                           tblptru	equ	0xFF8
 30346                           tblptrh	equ	0xFF7
 30347                           tblptrl	equ	0xFF6
 30348                           tablat	equ	0xFF5
 30349                           prodh	equ	0xFF4
 30350                           prodl	equ	0xFF3
 30351                           intcon	equ	0xFF2
 30352                           intcon2	equ	0xFF1
 30353                           intcon3	equ	0xFF0
 30354                           indf0	equ	0xFEF
 30355                           postinc0	equ	0xFEE
 30356                           plusw0	equ	0xFEB
 30357                           fsr0h	equ	0xFEA
 30358                           fsr0l	equ	0xFE9
 30359                           wreg	equ	0xFE8
 30360                           indf1	equ	0xFE7
 30361                           postinc1	equ	0xFE6
 30362                           postdec1	equ	0xFE5
 30363                           plusw1	equ	0xFE3
 30364                           fsr1h	equ	0xFE2
 30365                           fsr1l	equ	0xFE1
 30366                           indf2	equ	0xFDF
 30367                           postinc2	equ	0xFDE
 30368                           postdec2	equ	0xFDD
 30369                           plusw2	equ	0xFDB
 30370                           fsr2h	equ	0xFDA
 30371                           fsr2l	equ	0xFD9
 30372                           status	equ	0xFD8
 30373                           
 30374 ;; *************** function _OsAlrm_SetOsAlarm *****************
 30375 ;; Defined at:
 30376 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 30377 ;; Parameters:    Size  Location     Type
 30378 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 30379 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 30380 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 30381 ;;		 -> I2cDummyTx(1), 
 30382 ;; Auto vars:     Size  Location     Type
 30383 ;;		None
 30384 ;; Return value:  Size  Location     Type
 30385 ;;                  1    wreg      void 
 30386 ;; Registers used:
 30387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30388 ;; Tracked objects:
 30389 ;;		On entry : 0/0
 30390 ;;		On exit  : 0/0
 30391 ;;		Unchanged: 0/0
 30392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30393 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30396 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30397 ;;Total ram usage:        8 bytes
 30398 ;; Hardware stack levels used:    1
 30399 ;; Hardware stack levels required when called:   12
 30400 ;; This function calls:
 30401 ;;		___wmul
 30402 ;; This function is called by:
 30403 ;;		_I2cSlv_MainTask
 30404 ;; This function uses a non-reentrant model
 30405 ;;
 30406                           
 30407                           	psect	text139
 30408  003DD2                     __ptext139:
 30409                           	opt stack 0
 30410  003DD2                     _OsAlrm_SetOsAlarm:
 30411                           	opt stack 15
 30412                           
 30413                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 30414                           
 30415                           ; BSR set to: 0
 30416                           ;incstack = 0
 30417  003DD2  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30418  003DD6  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30419  003DDA  0E00               	movlw	0
 30420  003DDC  0100               	movlb	0	; () banked
 30421  003DDE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30422  003DE0  0E0B               	movlw	11
 30423  003DE2  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30424  003DE4  EC2A  F02F         	call	___wmul	;wreg free
 30425  003DE8  0E00               	movlw	low _OsAlarms
 30426  003DEA  0100               	movlb	0	; () banked
 30427  003DEC  257D               	addwf	?___wmul& (0+255),w,b
 30428  003DEE  6ED9               	movwf	fsr2l,c
 30429  003DF0  0E06               	movlw	high _OsAlarms
 30430  003DF2  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30431  003DF4  6EDA               	movwf	fsr2h,c
 30432  003DF6  0E01               	movlw	1
 30433  003DF8  6EDF               	movwf	indf2,c
 30434                           
 30435                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 30436  003DFA  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30437  003DFE  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30438  003E02  0E00               	movlw	0
 30439  003E04  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30440  003E06  0E0B               	movlw	11
 30441  003E08  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30442  003E0A  EC2A  F02F         	call	___wmul	;wreg free
 30443  003E0E  0E01               	movlw	1
 30444  003E10  0100               	movlb	0	; () banked
 30445  003E12  277D               	addwf	?___wmul& (0+255),f,b
 30446  003E14  0E00               	movlw	0
 30447  003E16  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30448  003E18  0E00               	movlw	low _OsAlarms
 30449  003E1A  257D               	addwf	?___wmul& (0+255),w,b
 30450  003E1C  6ED9               	movwf	fsr2l,c
 30451  003E1E  0E06               	movlw	high _OsAlarms
 30452  003E20  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30453  003E22  6EDA               	movwf	fsr2h,c
 30454  003E24  6ADE               	clrf	postinc2,c
 30455  003E26  6ADE               	clrf	postinc2,c
 30456  003E28  6ADE               	clrf	postinc2,c
 30457  003E2A  6ADD               	clrf	postdec2,c
 30458                           
 30459                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 30460  003E2C  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30461  003E30  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30462  003E34  0E00               	movlw	0
 30463  003E36  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30464  003E38  0E0B               	movlw	11
 30465  003E3A  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30466  003E3C  EC2A  F02F         	call	___wmul	;wreg free
 30467  003E40  0E05               	movlw	5
 30468  003E42  0100               	movlb	0	; () banked
 30469  003E44  277D               	addwf	?___wmul& (0+255),f,b
 30470  003E46  0E00               	movlw	0
 30471  003E48  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30472  003E4A  0E00               	movlw	low _OsAlarms
 30473  003E4C  257D               	addwf	?___wmul& (0+255),w,b
 30474  003E4E  6ED9               	movwf	fsr2l,c
 30475  003E50  0E06               	movlw	high _OsAlarms
 30476  003E52  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30477  003E54  6EDA               	movwf	fsr2h,c
 30478  003E56  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 30479  003E5A  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 30480  003E5E  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 30481  003E62  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 30482                           
 30483                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 30484  003E66  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 30485  003E6A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 30486  003E6E  0E00               	movlw	0
 30487  003E70  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30488  003E72  0E0B               	movlw	11
 30489  003E74  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 30490  003E76  EC2A  F02F         	call	___wmul	;wreg free
 30491  003E7A  0E09               	movlw	9
 30492  003E7C  0100               	movlb	0	; () banked
 30493  003E7E  277D               	addwf	?___wmul& (0+255),f,b
 30494  003E80  0E00               	movlw	0
 30495  003E82  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 30496  003E84  0E00               	movlw	low _OsAlarms
 30497  003E86  257D               	addwf	?___wmul& (0+255),w,b
 30498  003E88  6ED9               	movwf	fsr2l,c
 30499  003E8A  0E06               	movlw	high _OsAlarms
 30500  003E8C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 30501  003E8E  6EDA               	movwf	fsr2h,c
 30502  003E90  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 30503  003E94  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 30504                           
 30505                           ; BSR set to: 0
 30506  003E98  0012               	return		;funcret
 30507  003E9A                     __end_of_OsAlrm_SetOsAlarm:
 30508                           	opt stack 0
 30509                           tosu	equ	0xFFF
 30510                           tosh	equ	0xFFE
 30511                           tosl	equ	0xFFD
 30512                           pclath	equ	0xFFA
 30513                           tblptru	equ	0xFF8
 30514                           tblptrh	equ	0xFF7
 30515                           tblptrl	equ	0xFF6
 30516                           tablat	equ	0xFF5
 30517                           prodh	equ	0xFF4
 30518                           prodl	equ	0xFF3
 30519                           intcon	equ	0xFF2
 30520                           intcon2	equ	0xFF1
 30521                           intcon3	equ	0xFF0
 30522                           indf0	equ	0xFEF
 30523                           postinc0	equ	0xFEE
 30524                           plusw0	equ	0xFEB
 30525                           fsr0h	equ	0xFEA
 30526                           fsr0l	equ	0xFE9
 30527                           wreg	equ	0xFE8
 30528                           indf1	equ	0xFE7
 30529                           postinc1	equ	0xFE6
 30530                           postdec1	equ	0xFE5
 30531                           plusw1	equ	0xFE3
 30532                           fsr1h	equ	0xFE2
 30533                           fsr1l	equ	0xFE1
 30534                           indf2	equ	0xFDF
 30535                           postinc2	equ	0xFDE
 30536                           postdec2	equ	0xFDD
 30537                           plusw2	equ	0xFDB
 30538                           fsr2h	equ	0xFDA
 30539                           fsr2l	equ	0xFD9
 30540                           status	equ	0xFD8
 30541                           
 30542 ;; *************** function ___wmul *****************
 30543 ;; Defined at:
 30544 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 30545 ;; Parameters:    Size  Location     Type
 30546 ;;  multiplier      2   29[BANK0 ] unsigned int 
 30547 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 30548 ;; Auto vars:     Size  Location     Type
 30549 ;;  product         2   33[BANK0 ] unsigned int 
 30550 ;; Return value:  Size  Location     Type
 30551 ;;                  2   29[BANK0 ] unsigned int 
 30552 ;; Registers used:
 30553 ;;		wreg, status,2, status,0, prodl, prodh
 30554 ;; Tracked objects:
 30555 ;;		On entry : 0/0
 30556 ;;		On exit  : 0/0
 30557 ;;		Unchanged: 0/0
 30558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30560 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30562 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30563 ;;Total ram usage:        6 bytes
 30564 ;; Hardware stack levels used:    1
 30565 ;; Hardware stack levels required when called:   11
 30566 ;; This function calls:
 30567 ;;		Nothing
 30568 ;; This function is called by:
 30569 ;;		_OsAlrm_SetOsAlarm
 30570 ;;		_secondsAppTimer
 30571 ;;		_atoi
 30572 ;; This function uses a non-reentrant model
 30573 ;;
 30574                           
 30575                           	psect	text140
 30576  005E54                     __ptext140:
 30577                           	opt stack 0
 30578  005E54                     ___wmul:
 30579                           	opt stack 13
 30580                           
 30581                           ; BSR set to: 0
 30582                           ;incstack = 0
 30583  005E54  0100               	movlb	0	; () banked
 30584  005E56  517D               	movf	___wmul@multiplier& (0+255),w,b
 30585  005E58  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30586  005E5A  CFF3 F081          	movff	prodl,___wmul@product
 30587  005E5E  CFF4 F082          	movff	prodh,___wmul@product+1
 30588  005E62  517D               	movf	___wmul@multiplier& (0+255),w,b
 30589  005E64  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 30590  005E66  50F3               	movf	prodl,w,c
 30591  005E68  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30592  005E6A  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 30593  005E6C  037F               	mulwf	___wmul@multiplicand& (0+255),b
 30594  005E6E  50F3               	movf	prodl,w,c
 30595  005E70  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 30596                           
 30597                           ; BSR set to: 0
 30598  005E72  C081  F07D         	movff	___wmul@product,?___wmul
 30599  005E76  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 30600  005E7A  0012               	return	
 30601  005E7C                     __end_of___wmul:
 30602                           	opt stack 0
 30603                           tosu	equ	0xFFF
 30604                           tosh	equ	0xFFE
 30605                           tosl	equ	0xFFD
 30606                           pclath	equ	0xFFA
 30607                           tblptru	equ	0xFF8
 30608                           tblptrh	equ	0xFF7
 30609                           tblptrl	equ	0xFF6
 30610                           tablat	equ	0xFF5
 30611                           prodh	equ	0xFF4
 30612                           prodl	equ	0xFF3
 30613                           intcon	equ	0xFF2
 30614                           intcon2	equ	0xFF1
 30615                           intcon3	equ	0xFF0
 30616                           indf0	equ	0xFEF
 30617                           postinc0	equ	0xFEE
 30618                           plusw0	equ	0xFEB
 30619                           fsr0h	equ	0xFEA
 30620                           fsr0l	equ	0xFE9
 30621                           wreg	equ	0xFE8
 30622                           indf1	equ	0xFE7
 30623                           postinc1	equ	0xFE6
 30624                           postdec1	equ	0xFE5
 30625                           plusw1	equ	0xFE3
 30626                           fsr1h	equ	0xFE2
 30627                           fsr1l	equ	0xFE1
 30628                           indf2	equ	0xFDF
 30629                           postinc2	equ	0xFDE
 30630                           postdec2	equ	0xFDD
 30631                           plusw2	equ	0xFDB
 30632                           fsr2h	equ	0xFDA
 30633                           fsr2l	equ	0xFD9
 30634                           status	equ	0xFD8
 30635                           
 30636 ;; *************** function _I2c_InitI2cModule *****************
 30637 ;; Defined at:
 30638 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30639 ;; Parameters:    Size  Location     Type
 30640 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 30641 ;;		 -> I2cConfig(10), 
 30642 ;; Auto vars:     Size  Location     Type
 30643 ;;		None
 30644 ;; Return value:  Size  Location     Type
 30645 ;;                  1    wreg      void 
 30646 ;; Registers used:
 30647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30648 ;; Tracked objects:
 30649 ;;		On entry : 0/0
 30650 ;;		On exit  : 0/0
 30651 ;;		Unchanged: 0/0
 30652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30656 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30657 ;;Total ram usage:        4 bytes
 30658 ;; Hardware stack levels used:    1
 30659 ;; Hardware stack levels required when called:   13
 30660 ;; This function calls:
 30661 ;;		_SetBaudRate
 30662 ;; This function is called by:
 30663 ;;		_I2cSlv_MainTask
 30664 ;; This function uses a non-reentrant model
 30665 ;;
 30666                           
 30667                           	psect	text141
 30668  004DF8                     __ptext141:
 30669                           	opt stack 0
 30670  004DF8                     _I2c_InitI2cModule:
 30671                           	opt stack 14
 30672                           
 30673                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 30674                           
 30675                           ; BSR set to: 0
 30676                           ;incstack = 0
 30677  004DF8  8295               	bsf	3989,1,c	;volatile
 30678                           
 30679                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 30680  004DFA  8095               	bsf	3989,0,c	;volatile
 30681                           
 30682                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 30683  004DFC  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 30684  004E00  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 30685  004E04  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 30686  004E08  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 30687  004E0C  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 30688  004E10  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 30689  004E14  0100               	movlb	0	; () banked
 30690  004E16  EE20 F004          	lfsr	2,4
 30691  004E1A  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30692  004E1C  26D9               	addwf	fsr2l,f,c
 30693  004E1E  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30694  004E20  22DA               	addwfc	fsr2h,f,c
 30695  004E22  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 30696  004E26  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 30697  004E2A  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 30698  004E2E  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 30699  004E32  EC46  F02B         	call	_SetBaudRate	;wreg free
 30700                           
 30701                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 30702  004E36  0100               	movlb	0	; () banked
 30703  004E38  EE20 F008          	lfsr	2,8
 30704  004E3C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30705  004E3E  26D9               	addwf	fsr2l,f,c
 30706  004E40  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30707  004E42  22DA               	addwfc	fsr2h,f,c
 30708  004E44  50DF               	movf	indf2,w,c
 30709  004E46  1272               	iorwf	3954,f,c	;volatile
 30710                           
 30711                           ; BSR set to: 0
 30712                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 30713  004E48  EE20 F009          	lfsr	2,9
 30714  004E4C  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 30715  004E4E  26D9               	addwf	fsr2l,f,c
 30716  004E50  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 30717  004E52  22DA               	addwfc	fsr2h,f,c
 30718  004E54  50DF               	movf	indf2,w,c
 30719  004E56  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 30720  004E58  0E05               	movlw	5
 30721  004E5A  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 30722  004E5C                     u13215:
 30723  004E5C  90D8               	bcf	status,0,c
 30724  004E5E  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 30725  004E60  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 30726  004E62  D7FC               	goto	u13215
 30727  004E64  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 30728  004E66  1272               	iorwf	3954,f,c	;volatile
 30729                           
 30730                           ; BSR set to: 0
 30731  004E68  0012               	return		;funcret
 30732  004E6A                     __end_of_I2c_InitI2cModule:
 30733                           	opt stack 0
 30734                           tosu	equ	0xFFF
 30735                           tosh	equ	0xFFE
 30736                           tosl	equ	0xFFD
 30737                           pclath	equ	0xFFA
 30738                           tblptru	equ	0xFF8
 30739                           tblptrh	equ	0xFF7
 30740                           tblptrl	equ	0xFF6
 30741                           tablat	equ	0xFF5
 30742                           prodh	equ	0xFF4
 30743                           prodl	equ	0xFF3
 30744                           intcon	equ	0xFF2
 30745                           intcon2	equ	0xFF1
 30746                           intcon3	equ	0xFF0
 30747                           indf0	equ	0xFEF
 30748                           postinc0	equ	0xFEE
 30749                           plusw0	equ	0xFEB
 30750                           fsr0h	equ	0xFEA
 30751                           fsr0l	equ	0xFE9
 30752                           wreg	equ	0xFE8
 30753                           indf1	equ	0xFE7
 30754                           postinc1	equ	0xFE6
 30755                           postdec1	equ	0xFE5
 30756                           plusw1	equ	0xFE3
 30757                           fsr1h	equ	0xFE2
 30758                           fsr1l	equ	0xFE1
 30759                           indf2	equ	0xFDF
 30760                           postinc2	equ	0xFDE
 30761                           postdec2	equ	0xFDD
 30762                           plusw2	equ	0xFDB
 30763                           fsr2h	equ	0xFDA
 30764                           fsr2l	equ	0xFD9
 30765                           status	equ	0xFD8
 30766                           
 30767 ;; *************** function _SetBaudRate *****************
 30768 ;; Defined at:
 30769 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 30770 ;; Parameters:    Size  Location     Type
 30771 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 30772 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 30773 ;; Auto vars:     Size  Location     Type
 30774 ;;		None
 30775 ;; Return value:  Size  Location     Type
 30776 ;;                  1    wreg      void 
 30777 ;; Registers used:
 30778 ;;		wreg, status,2, status,0, cstack
 30779 ;; Tracked objects:
 30780 ;;		On entry : 0/0
 30781 ;;		On exit  : 0/0
 30782 ;;		Unchanged: 0/0
 30783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30784 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30787 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30788 ;;Total ram usage:       12 bytes
 30789 ;; Hardware stack levels used:    1
 30790 ;; Hardware stack levels required when called:   12
 30791 ;; This function calls:
 30792 ;;		___lldiv
 30793 ;; This function is called by:
 30794 ;;		_I2c_InitI2cModule
 30795 ;; This function uses a non-reentrant model
 30796 ;;
 30797                           
 30798                           	psect	text142
 30799  00568C                     __ptext142:
 30800                           	opt stack 0
 30801  00568C                     _SetBaudRate:
 30802                           	opt stack 14
 30803                           
 30804                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 30805                           
 30806                           ; BSR set to: 0
 30807                           ;incstack = 0
 30808  00568C  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 30809  005690  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 30810  005694  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 30811  005698  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 30812  00569C  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 30813  0056A0  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 30814  0056A4  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 30815  0056A8  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 30816  0056AC  0E02               	movlw	2
 30817  0056AE                     u12165:
 30818  0056AE  90D8               	bcf	status,0,c
 30819  0056B0  0100               	movlb	0	; () banked
 30820  0056B2  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 30821  0056B4  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 30822  0056B6  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 30823  0056B8  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 30824  0056BA  2EE8               	decfsz	wreg,f,c
 30825  0056BC  D7F8               	goto	u12165
 30826  0056BE  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 30827  0056C2  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 30828  0056C6  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 30829  0056CA  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 30830  0056CE  EC40  F026         	call	___lldiv	;wreg free
 30831  0056D2  0100               	movlb	0	; () banked
 30832  0056D4  0589               	decf	?___lldiv& (0+255),w,b
 30833  0056D6  6E74               	movwf	3956,c	;volatile
 30834                           
 30835                           ; BSR set to: 0
 30836  0056D8  0012               	return		;funcret
 30837  0056DA                     __end_of_SetBaudRate:
 30838                           	opt stack 0
 30839                           tosu	equ	0xFFF
 30840                           tosh	equ	0xFFE
 30841                           tosl	equ	0xFFD
 30842                           pclath	equ	0xFFA
 30843                           tblptru	equ	0xFF8
 30844                           tblptrh	equ	0xFF7
 30845                           tblptrl	equ	0xFF6
 30846                           tablat	equ	0xFF5
 30847                           prodh	equ	0xFF4
 30848                           prodl	equ	0xFF3
 30849                           intcon	equ	0xFF2
 30850                           intcon2	equ	0xFF1
 30851                           intcon3	equ	0xFF0
 30852                           indf0	equ	0xFEF
 30853                           postinc0	equ	0xFEE
 30854                           plusw0	equ	0xFEB
 30855                           fsr0h	equ	0xFEA
 30856                           fsr0l	equ	0xFE9
 30857                           wreg	equ	0xFE8
 30858                           indf1	equ	0xFE7
 30859                           postinc1	equ	0xFE6
 30860                           postdec1	equ	0xFE5
 30861                           plusw1	equ	0xFE3
 30862                           fsr1h	equ	0xFE2
 30863                           fsr1l	equ	0xFE1
 30864                           indf2	equ	0xFDF
 30865                           postinc2	equ	0xFDE
 30866                           postdec2	equ	0xFDD
 30867                           plusw2	equ	0xFDB
 30868                           fsr2h	equ	0xFDA
 30869                           fsr2l	equ	0xFD9
 30870                           status	equ	0xFD8
 30871                           
 30872 ;; *************** function ___lldiv *****************
 30873 ;; Defined at:
 30874 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 30875 ;; Parameters:    Size  Location     Type
 30876 ;;  dividend        4   41[BANK0 ] unsigned long 
 30877 ;;  divisor         4   45[BANK0 ] unsigned long 
 30878 ;; Auto vars:     Size  Location     Type
 30879 ;;  quotient        4   49[BANK0 ] unsigned long 
 30880 ;;  counter         1   53[BANK0 ] unsigned char 
 30881 ;; Return value:  Size  Location     Type
 30882 ;;                  4   41[BANK0 ] unsigned long 
 30883 ;; Registers used:
 30884 ;;		wreg, status,2, status,0
 30885 ;; Tracked objects:
 30886 ;;		On entry : 0/0
 30887 ;;		On exit  : 0/0
 30888 ;;		Unchanged: 0/0
 30889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30890 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30891 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30893 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30894 ;;Total ram usage:       13 bytes
 30895 ;; Hardware stack levels used:    1
 30896 ;; Hardware stack levels required when called:   11
 30897 ;; This function calls:
 30898 ;;		Nothing
 30899 ;; This function is called by:
 30900 ;;		_SetBaudRate
 30901 ;;		_Tmr_TmrBPrSet
 30902 ;;		_SetUartBaudRate
 30903 ;; This function uses a non-reentrant model
 30904 ;;
 30905                           
 30906                           	psect	text143
 30907  004C80                     __ptext143:
 30908                           	opt stack 0
 30909  004C80                     ___lldiv:
 30910                           	opt stack 15
 30911                           
 30912                           ; BSR set to: 0
 30913                           ;incstack = 0
 30914  004C80  0E00               	movlw	0
 30915  004C82  0100               	movlb	0	; () banked
 30916  004C84  6F91               	movwf	___lldiv@quotient& (0+255),b
 30917  004C86  0E00               	movlw	0
 30918  004C88  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 30919  004C8A  0E00               	movlw	0
 30920  004C8C  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 30921  004C8E  0E00               	movlw	0
 30922  004C90  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 30923                           
 30924                           ; BSR set to: 0
 30925  004C92  518D               	movf	___lldiv@divisor& (0+255),w,b
 30926  004C94  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30927  004C96  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30928  004C98  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30929  004C9A  B4D8               	btfsc	status,2,c
 30930  004C9C  D02A               	goto	l3033
 30931                           
 30932                           ; BSR set to: 0
 30933  004C9E  0E01               	movlw	1
 30934  004CA0  6F95               	movwf	___lldiv@counter& (0+255),b
 30935  004CA2  D006               	goto	l3028
 30936  004CA4                     
 30937                           ; BSR set to: 0
 30938                           
 30939                           ; BSR set to: 0
 30940  004CA4  90D8               	bcf	status,0,c
 30941  004CA6  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 30942  004CA8  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30943  004CAA  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30944  004CAC  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30945  004CAE  2B95               	incf	___lldiv@counter& (0+255),f,b
 30946  004CB0                     l3028:
 30947                           
 30948                           ; BSR set to: 0
 30949                           
 30950                           ; BSR set to: 0
 30951  004CB0  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 30952  004CB2  D7F8               	goto	l3029
 30953  004CB4                     u11260:
 30954                           
 30955                           ; BSR set to: 0
 30956                           
 30957                           ; BSR set to: 0
 30958                           
 30959                           ; BSR set to: 0
 30960  004CB4  90D8               	bcf	status,0,c
 30961  004CB6  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 30962  004CB8  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30963  004CBA  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30964  004CBC  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30965                           
 30966                           ; BSR set to: 0
 30967  004CBE  518D               	movf	___lldiv@divisor& (0+255),w,b
 30968  004CC0  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 30969  004CC2  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30970  004CC4  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30971  004CC6  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30972  004CC8  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30973  004CCA  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30974  004CCC  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30975  004CCE  A0D8               	btfss	status,0,c
 30976  004CD0  D009               	goto	l3032
 30977                           
 30978                           ; BSR set to: 0
 30979  004CD2  518D               	movf	___lldiv@divisor& (0+255),w,b
 30980  004CD4  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 30981  004CD6  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30982  004CD8  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30983  004CDA  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30984  004CDC  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30985  004CDE  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30986  004CE0  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30987                           
 30988                           ; BSR set to: 0
 30989  004CE2  8191               	bsf	___lldiv@quotient& (0+255),0,b
 30990  004CE4                     l3032:
 30991                           
 30992                           ; BSR set to: 0
 30993                           
 30994                           ; BSR set to: 0
 30995  004CE4  90D8               	bcf	status,0,c
 30996  004CE6  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30997  004CE8  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30998  004CEA  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30999  004CEC  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 31000                           
 31001                           ; BSR set to: 0
 31002  004CEE  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 31003  004CF0  D7E1               	goto	u11260
 31004  004CF2                     l3033:
 31005                           
 31006                           ; BSR set to: 0
 31007                           
 31008                           ; BSR set to: 0
 31009  004CF2  C091  F089         	movff	___lldiv@quotient,?___lldiv
 31010  004CF6  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 31011  004CFA  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 31012  004CFE  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 31013                           
 31014                           ; BSR set to: 0
 31015  004D02  0012               	return		;funcret
 31016  004D04                     __end_of___lldiv:
 31017                           	opt stack 0
 31018                           tosu	equ	0xFFF
 31019                           tosh	equ	0xFFE
 31020                           tosl	equ	0xFFD
 31021                           pclath	equ	0xFFA
 31022                           tblptru	equ	0xFF8
 31023                           tblptrh	equ	0xFF7
 31024                           tblptrl	equ	0xFF6
 31025                           tablat	equ	0xFF5
 31026                           prodh	equ	0xFF4
 31027                           prodl	equ	0xFF3
 31028                           intcon	equ	0xFF2
 31029                           intcon2	equ	0xFF1
 31030                           intcon3	equ	0xFF0
 31031                           indf0	equ	0xFEF
 31032                           postinc0	equ	0xFEE
 31033                           plusw0	equ	0xFEB
 31034                           fsr0h	equ	0xFEA
 31035                           fsr0l	equ	0xFE9
 31036                           wreg	equ	0xFE8
 31037                           indf1	equ	0xFE7
 31038                           postinc1	equ	0xFE6
 31039                           postdec1	equ	0xFE5
 31040                           plusw1	equ	0xFE3
 31041                           fsr1h	equ	0xFE2
 31042                           fsr1l	equ	0xFE1
 31043                           indf2	equ	0xFDF
 31044                           postinc2	equ	0xFDE
 31045                           postdec2	equ	0xFDD
 31046                           plusw2	equ	0xFDB
 31047                           fsr2h	equ	0xFDA
 31048                           fsr2l	equ	0xFD9
 31049                           status	equ	0xFD8
 31050                           
 31051 ;; *************** function _I2cSetConfig *****************
 31052 ;; Defined at:
 31053 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31054 ;; Parameters:    Size  Location     Type
 31055 ;;		None
 31056 ;; Auto vars:     Size  Location     Type
 31057 ;;		None
 31058 ;; Return value:  Size  Location     Type
 31059 ;;                  1    wreg      void 
 31060 ;; Registers used:
 31061 ;;		wreg, status,2
 31062 ;; Tracked objects:
 31063 ;;		On entry : 0/0
 31064 ;;		On exit  : 0/0
 31065 ;;		Unchanged: 0/0
 31066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31071 ;;Total ram usage:        0 bytes
 31072 ;; Hardware stack levels used:    1
 31073 ;; Hardware stack levels required when called:   11
 31074 ;; This function calls:
 31075 ;;		Nothing
 31076 ;; This function is called by:
 31077 ;;		_I2cSlv_MainTask
 31078 ;; This function uses a non-reentrant model
 31079 ;;
 31080                           
 31081                           	psect	text144
 31082  005DD4                     __ptext144:
 31083                           	opt stack 0
 31084  005DD4                     _I2cSetConfig:
 31085                           	opt stack 16
 31086                           
 31087                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 31088                           
 31089                           ; BSR set to: 0
 31090                           ;incstack = 0
 31091  005DD4  0E80               	movlw	128
 31092  005DD6  0103               	movlb	3	; () banked
 31093  005DD8  6F4F               	movwf	_I2cConfig& (0+255),b
 31094  005DDA  0E1A               	movlw	26
 31095  005DDC  6F50               	movwf	(_I2cConfig+1)& (0+255),b
 31096  005DDE  0E06               	movlw	6
 31097  005DE0  6F51               	movwf	(_I2cConfig+2)& (0+255),b
 31098  005DE2  0E00               	movlw	0
 31099  005DE4  6F52               	movwf	(_I2cConfig+3)& (0+255),b
 31100                           
 31101                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 31102  005DE6  0E00               	movlw	0
 31103  005DE8  6F53               	movwf	(_I2cConfig+4)& (0+255),b
 31104  005DEA  0E6C               	movlw	108
 31105  005DEC  6F54               	movwf	(_I2cConfig+5)& (0+255),b
 31106  005DEE  0EDC               	movlw	220
 31107  005DF0  6F55               	movwf	(_I2cConfig+6)& (0+255),b
 31108  005DF2  0E02               	movlw	2
 31109  005DF4  6F56               	movwf	(_I2cConfig+7)& (0+255),b
 31110                           
 31111                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 31112  005DF6  0E08               	movlw	8
 31113  005DF8  6F57               	movwf	(_I2cConfig+8)& (0+255),b
 31114                           
 31115                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 31116  005DFA  0E01               	movlw	1
 31117  005DFC  6F58               	movwf	(_I2cConfig+9)& (0+255),b
 31118                           
 31119                           ; BSR set to: 3
 31120  005DFE  0012               	return		;funcret
 31121  005E00                     __end_of_I2cSetConfig:
 31122                           	opt stack 0
 31123                           tosu	equ	0xFFF
 31124                           tosh	equ	0xFFE
 31125                           tosl	equ	0xFFD
 31126                           pclath	equ	0xFFA
 31127                           tblptru	equ	0xFF8
 31128                           tblptrh	equ	0xFF7
 31129                           tblptrl	equ	0xFF6
 31130                           tablat	equ	0xFF5
 31131                           prodh	equ	0xFF4
 31132                           prodl	equ	0xFF3
 31133                           intcon	equ	0xFF2
 31134                           intcon2	equ	0xFF1
 31135                           intcon3	equ	0xFF0
 31136                           indf0	equ	0xFEF
 31137                           postinc0	equ	0xFEE
 31138                           plusw0	equ	0xFEB
 31139                           fsr0h	equ	0xFEA
 31140                           fsr0l	equ	0xFE9
 31141                           wreg	equ	0xFE8
 31142                           indf1	equ	0xFE7
 31143                           postinc1	equ	0xFE6
 31144                           postdec1	equ	0xFE5
 31145                           plusw1	equ	0xFE3
 31146                           fsr1h	equ	0xFE2
 31147                           fsr1l	equ	0xFE1
 31148                           indf2	equ	0xFDF
 31149                           postinc2	equ	0xFDE
 31150                           postdec2	equ	0xFDD
 31151                           plusw2	equ	0xFDB
 31152                           fsr2h	equ	0xFDA
 31153                           fsr2l	equ	0xFD9
 31154                           status	equ	0xFD8
 31155                           
 31156 ;; *************** function _I2cSendMsgSm *****************
 31157 ;; Defined at:
 31158 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 31159 ;; Parameters:    Size  Location     Type
 31160 ;;		None
 31161 ;; Auto vars:     Size  Location     Type
 31162 ;;		None
 31163 ;; Return value:  Size  Location     Type
 31164 ;;                  1    wreg      void 
 31165 ;; Registers used:
 31166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31167 ;; Tracked objects:
 31168 ;;		On entry : 0/0
 31169 ;;		On exit  : 0/0
 31170 ;;		Unchanged: 0/0
 31171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31176 ;;Total ram usage:        0 bytes
 31177 ;; Hardware stack levels used:    1
 31178 ;; Hardware stack levels required when called:   13
 31179 ;; This function calls:
 31180 ;;		_I2c_ReadData
 31181 ;;		_I2c_WriteData
 31182 ;;		_ReceiveEvt
 31183 ;; This function is called by:
 31184 ;;		_I2cSlv_MainTask
 31185 ;; This function uses a non-reentrant model
 31186 ;;
 31187                           
 31188                           	psect	text145
 31189  003E9A                     __ptext145:
 31190                           	opt stack 0
 31191  003E9A                     _I2cSendMsgSm:
 31192                           	opt stack 14
 31193                           
 31194                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 31195                           ;i2c_slv.c: 122: switch(I2cComState)
 31196                           
 31197                           ; BSR set to: 3
 31198                           ;incstack = 0
 31199  003E9A  D04F               	goto	l1379
 31200  003E9C                     
 31201                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 31202  003E9C  0ED9               	movlw	low _I2cWriteDataEvt
 31203  003E9E  0100               	movlb	0	; () banked
 31204  003EA0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31205  003EA2  0E00               	movlw	high _I2cWriteDataEvt
 31206  003EA4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31207  003EA6  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 31208  003EAA  0900               	iorlw	0
 31209  003EAC  B4D8               	btfsc	status,2,c
 31210  003EAE  D007               	goto	l1381
 31211                           
 31212                           ;i2c_slv.c: 127: {
 31213                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 31214  003EB0  0E01               	movlw	1
 31215  003EB2  0101               	movlb	1	; () banked
 31216  003EB4  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31217                           
 31218                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 31219  003EB6  0E01               	movlw	1
 31220  003EB8  0100               	movlb	0	; () banked
 31221  003EBA  6FCF               	movwf	_I2cComSts& (0+255),b
 31222                           
 31223                           ;i2c_slv.c: 132: }
 31224  003EBC  0012               	return	
 31225  003EBE                     l1381:
 31226                           
 31227                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 31228                           
 31229                           ; BSR set to: 0
 31230  003EBE  0ED8               	movlw	low _I2cReadDataEvt
 31231  003EC0  0100               	movlb	0	; () banked
 31232  003EC2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31233  003EC4  0E00               	movlw	high _I2cReadDataEvt
 31234  003EC6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31235  003EC8  ECD3  F02E         	call	_ReceiveEvt	;wreg free
 31236  003ECC  0900               	iorlw	0
 31237  003ECE  B4D8               	btfsc	status,2,c
 31238  003ED0  D007               	goto	l1383
 31239                           
 31240                           ;i2c_slv.c: 134: {
 31241                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 31242  003ED2  0E02               	movlw	2
 31243  003ED4  0101               	movlb	1	; () banked
 31244  003ED6  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31245                           
 31246                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 31247  003ED8  0E02               	movlw	2
 31248  003EDA  0100               	movlb	0	; () banked
 31249  003EDC  6FCF               	movwf	_I2cComSts& (0+255),b
 31250                           
 31251                           ;i2c_slv.c: 139: }
 31252  003EDE  0012               	return	
 31253  003EE0                     l1383:
 31254                           
 31255                           ;i2c_slv.c: 140: else
 31256                           ;i2c_slv.c: 141: {
 31257                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 31258                           
 31259                           ; BSR set to: 0
 31260  003EE0  0E00               	movlw	0
 31261  003EE2  0100               	movlb	0	; () banked
 31262  003EE4  6FCF               	movwf	_I2cComSts& (0+255),b
 31263                           
 31264                           ; BSR set to: 0
 31265                           ;i2c_slv.c: 144: }
 31266                           ;i2c_slv.c: 145: break;
 31267                           
 31268                           ; BSR set to: 0
 31269  003EE6  0012               	return	
 31270  003EE8                     
 31271                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 31272                           
 31273                           ; BSR set to: 0
 31274  003EE8  0E9B               	movlw	low _I2cTxPacket
 31275  003EEA  0100               	movlb	0	; () banked
 31276  003EEC  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 31277  003EEE  0E03               	movlw	high _I2cTxPacket
 31278  003EF0  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 31279  003EF2  EC5A  F00F         	call	_I2c_WriteData	;wreg free
 31280  003EF6  0900               	iorlw	0
 31281  003EF8  B4D8               	btfsc	status,2,c
 31282  003EFA  0012               	return	
 31283                           
 31284                           ;i2c_slv.c: 150: {
 31285                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 31286  003EFC  0E03               	movlw	3
 31287  003EFE  0101               	movlb	1	; () banked
 31288  003F00  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31289                           
 31290                           ; BSR set to: 1
 31291                           ;i2c_slv.c: 153: }
 31292                           ;i2c_slv.c: 154: break;
 31293  003F02  0012               	return	
 31294  003F04                     
 31295                           ; BSR set to: 1
 31296                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 31297                           
 31298                           ; BSR set to: 1
 31299  003F04  0E95               	movlw	low _I2cRxPacket
 31300  003F06  0100               	movlb	0	; () banked
 31301  003F08  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 31302  003F0A  0E03               	movlw	high _I2cRxPacket
 31303  003F0C  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 31304  003F0E  EC11  F010         	call	_I2c_ReadData	;wreg free
 31305  003F12  0900               	iorlw	0
 31306  003F14  B4D8               	btfsc	status,2,c
 31307  003F16  0012               	return	
 31308                           
 31309                           ;i2c_slv.c: 159: {
 31310                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 31311  003F18  0E04               	movlw	4
 31312  003F1A  0101               	movlb	1	; () banked
 31313  003F1C  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31314                           
 31315                           ; BSR set to: 1
 31316                           ;i2c_slv.c: 162: }
 31317                           ;i2c_slv.c: 164: break;
 31318  003F1E  0012               	return	
 31319  003F20                     
 31320                           ; BSR set to: 1
 31321                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 31322                           
 31323                           ; BSR set to: 1
 31324  003F20  0E00               	movlw	0
 31325  003F22  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31326                           
 31327                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 31328  003F24  0E00               	movlw	0
 31329  003F26  0100               	movlb	0	; () banked
 31330  003F28  6FCF               	movwf	_I2cComSts& (0+255),b
 31331                           
 31332                           ;i2c_slv.c: 171: break;
 31333  003F2A  0012               	return	
 31334  003F2C                     
 31335                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 31336                           
 31337                           ; BSR set to: 0
 31338  003F2C  0E00               	movlw	0
 31339  003F2E  0101               	movlb	1	; () banked
 31340  003F30  6FE9               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 31341                           
 31342                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 31343  003F32  0E00               	movlw	0
 31344  003F34  0100               	movlb	0	; () banked
 31345  003F36  6FCF               	movwf	_I2cComSts& (0+255),b
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;i2c_slv.c: 182: }
 31349                           
 31350                           ; BSR set to: 0
 31351                           ;i2c_slv.c: 181: break;
 31352                           
 31353                           ;i2c_slv.c: 180: default:
 31354                           
 31355                           ;i2c_slv.c: 178: break;
 31356  003F38  0012               	return	
 31357  003F3A                     l1379:
 31358                           
 31359                           ; BSR set to: 0
 31360  003F3A  0101               	movlb	1	; () banked
 31361  003F3C  51E9               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 31362                           
 31363                           ; Switch size 1, requested type "space"
 31364                           ; Number of cases is 5, Range of values is 0 to 4
 31365                           ; switch strategies available:
 31366                           ; Name         Instructions Cycles
 31367                           ; simple_byte           16     9 (average)
 31368                           ;	Chosen strategy is simple_byte
 31369  003F3E  0A00               	xorlw	0	; case 0
 31370  003F40  B4D8               	btfsc	status,2,c
 31371  003F42  D7AC               	goto	l1380
 31372  003F44  0A01               	xorlw	1	; case 1
 31373  003F46  B4D8               	btfsc	status,2,c
 31374  003F48  D7CF               	goto	l1386
 31375  003F4A  0A03               	xorlw	3	; case 2
 31376  003F4C  B4D8               	btfsc	status,2,c
 31377  003F4E  D7DA               	goto	l1388
 31378  003F50  0A01               	xorlw	1	; case 3
 31379  003F52  B4D8               	btfsc	status,2,c
 31380  003F54  D7E5               	goto	l1390
 31381  003F56  0A07               	xorlw	7	; case 4
 31382  003F58  A4D8               	btfss	status,2,c
 31383  003F5A  0012               	return	
 31384  003F5C  D7E7               	goto	l1391
 31385  003F5E                     __end_of_I2cSendMsgSm:
 31386                           	opt stack 0
 31387                           tosu	equ	0xFFF
 31388                           tosh	equ	0xFFE
 31389                           tosl	equ	0xFFD
 31390                           pclath	equ	0xFFA
 31391                           tblptru	equ	0xFF8
 31392                           tblptrh	equ	0xFF7
 31393                           tblptrl	equ	0xFF6
 31394                           tablat	equ	0xFF5
 31395                           prodh	equ	0xFF4
 31396                           prodl	equ	0xFF3
 31397                           intcon	equ	0xFF2
 31398                           intcon2	equ	0xFF1
 31399                           intcon3	equ	0xFF0
 31400                           indf0	equ	0xFEF
 31401                           postinc0	equ	0xFEE
 31402                           plusw0	equ	0xFEB
 31403                           fsr0h	equ	0xFEA
 31404                           fsr0l	equ	0xFE9
 31405                           wreg	equ	0xFE8
 31406                           indf1	equ	0xFE7
 31407                           postinc1	equ	0xFE6
 31408                           postdec1	equ	0xFE5
 31409                           plusw1	equ	0xFE3
 31410                           fsr1h	equ	0xFE2
 31411                           fsr1l	equ	0xFE1
 31412                           indf2	equ	0xFDF
 31413                           postinc2	equ	0xFDE
 31414                           postdec2	equ	0xFDD
 31415                           plusw2	equ	0xFDB
 31416                           fsr2h	equ	0xFDA
 31417                           fsr2l	equ	0xFD9
 31418                           status	equ	0xFD8
 31419                           
 31420 ;; *************** function _ReceiveEvt *****************
 31421 ;; Defined at:
 31422 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 31423 ;; Parameters:    Size  Location     Type
 31424 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 31425 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 31426 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 31427 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 31428 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 31429 ;;		 -> ActivateRiDetection(1), 
 31430 ;; Auto vars:     Size  Location     Type
 31431 ;;  EventStatus     1   32[BANK0 ] enum E7727
 31432 ;; Return value:  Size  Location     Type
 31433 ;;                  1    wreg      enum E7699
 31434 ;; Registers used:
 31435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31436 ;; Tracked objects:
 31437 ;;		On entry : 0/0
 31438 ;;		On exit  : 0/0
 31439 ;;		Unchanged: 0/0
 31440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31444 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31445 ;;Total ram usage:        4 bytes
 31446 ;; Hardware stack levels used:    1
 31447 ;; Hardware stack levels required when called:   11
 31448 ;; This function calls:
 31449 ;;		Nothing
 31450 ;; This function is called by:
 31451 ;;		_MdmCntSm
 31452 ;;		_CheckModem
 31453 ;;		_ModemEvtParser
 31454 ;;		_GetSmsSm
 31455 ;;		_SendSmsSm
 31456 ;;		_Mdm_IsSmsReceived
 31457 ;;		_Mdm_IsRinging
 31458 ;;		_GetCallerNumber
 31459 ;;		_InitGprsNetwork
 31460 ;;		_HttpGetMethod
 31461 ;;		_I2cSendMsgSm
 31462 ;;		_I2cSlv_I2cReadMsgSts
 31463 ;;		_RiSm
 31464 ;;		_Mdm_GetSmsData
 31465 ;;		_GsmGprsTerminal
 31466 ;; This function uses a non-reentrant model
 31467 ;;
 31468                           
 31469                           	psect	text146
 31470  005DA6                     __ptext146:
 31471                           	opt stack 0
 31472  005DA6                     _ReceiveEvt:
 31473                           	opt stack 13
 31474                           
 31475                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 31476                           
 31477                           ;incstack = 0
 31478  005DA6  0E00               	movlw	0
 31479  005DA8  0100               	movlb	0	; () banked
 31480  005DAA  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31481                           
 31482                           ; BSR set to: 0
 31483                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 31484  005DAC  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31485  005DB0  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31486  005DB4  0E02               	movlw	2
 31487  005DB6  18DE               	xorwf	postinc2,w,c
 31488  005DB8  A4D8               	btfss	status,2,c
 31489  005DBA  D008               	goto	l832
 31490                           
 31491                           ; BSR set to: 0
 31492                           ;os_ser.c: 106: {
 31493                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 31494  005DBC  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 31495  005DC0  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 31496  005DC4  0E01               	movlw	1
 31497  005DC6  6EDF               	movwf	indf2,c
 31498                           
 31499                           ; BSR set to: 0
 31500                           ;os_ser.c: 110: EventStatus = EventReceived;
 31501  005DC8  0E01               	movlw	1
 31502  005DCA  D001               	goto	L54
 31503  005DCC                     l832:
 31504                           
 31505                           ; BSR set to: 0
 31506                           ;os_ser.c: 112: else
 31507                           ;os_ser.c: 113: {
 31508                           ;os_ser.c: 115: EventStatus = EventIdle;
 31509                           
 31510                           ; BSR set to: 0
 31511  005DCC  0E00               	movlw	0
 31512  005DCE                     L54:
 31513  005DCE  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 31514                           
 31515                           ; BSR set to: 0
 31516                           ;os_ser.c: 116: }
 31517                           ;os_ser.c: 119: return(EventStatus);
 31518  005DD0  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 31519  005DD2  0012               	return	
 31520  005DD4                     __end_of_ReceiveEvt:
 31521                           	opt stack 0
 31522                           tosu	equ	0xFFF
 31523                           tosh	equ	0xFFE
 31524                           tosl	equ	0xFFD
 31525                           pclath	equ	0xFFA
 31526                           tblptru	equ	0xFF8
 31527                           tblptrh	equ	0xFF7
 31528                           tblptrl	equ	0xFF6
 31529                           tablat	equ	0xFF5
 31530                           prodh	equ	0xFF4
 31531                           prodl	equ	0xFF3
 31532                           intcon	equ	0xFF2
 31533                           intcon2	equ	0xFF1
 31534                           intcon3	equ	0xFF0
 31535                           indf0	equ	0xFEF
 31536                           postinc0	equ	0xFEE
 31537                           plusw0	equ	0xFEB
 31538                           fsr0h	equ	0xFEA
 31539                           fsr0l	equ	0xFE9
 31540                           wreg	equ	0xFE8
 31541                           indf1	equ	0xFE7
 31542                           postinc1	equ	0xFE6
 31543                           postdec1	equ	0xFE5
 31544                           plusw1	equ	0xFE3
 31545                           fsr1h	equ	0xFE2
 31546                           fsr1l	equ	0xFE1
 31547                           indf2	equ	0xFDF
 31548                           postinc2	equ	0xFDE
 31549                           postdec2	equ	0xFDD
 31550                           plusw2	equ	0xFDB
 31551                           fsr2h	equ	0xFDA
 31552                           fsr2l	equ	0xFD9
 31553                           status	equ	0xFD8
 31554                           
 31555 ;; *************** function _I2c_WriteData *****************
 31556 ;; Defined at:
 31557 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31558 ;; Parameters:    Size  Location     Type
 31559 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 31560 ;;		 -> I2cTxPacket(5), 
 31561 ;; Auto vars:     Size  Location     Type
 31562 ;;		None
 31563 ;; Return value:  Size  Location     Type
 31564 ;;                  1    wreg      enum E7740
 31565 ;; Registers used:
 31566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31567 ;; Tracked objects:
 31568 ;;		On entry : 0/0
 31569 ;;		On exit  : 0/0
 31570 ;;		Unchanged: 0/0
 31571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31575 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31576 ;;Total ram usage:        4 bytes
 31577 ;; Hardware stack levels used:    1
 31578 ;; Hardware stack levels required when called:   12
 31579 ;; This function calls:
 31580 ;;		_CheckAckStatus
 31581 ;;		_CheckTxStatus
 31582 ;;		_StartCondition
 31583 ;;		_StopCondition
 31584 ;;		_WriteByte
 31585 ;; This function is called by:
 31586 ;;		_I2cSendMsgSm
 31587 ;; This function uses a non-reentrant model
 31588 ;;
 31589                           
 31590                           	psect	text147
 31591  001EB4                     __ptext147:
 31592                           	opt stack 0
 31593  001EB4                     _I2c_WriteData:
 31594                           	opt stack 14
 31595                           
 31596                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 31597                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 31598                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 31599                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 31600                           ;i2c_drv.c: 260: switch (I2cWriteState)
 31601                           
 31602                           ; BSR set to: 0
 31603                           ;incstack = 0
 31604  001EB4  D095               	goto	l160
 31605  001EB6                     
 31606                           ;i2c_drv.c: 264: StartCondition();
 31607  001EB6  EC57  F031         	call	_StartCondition	;wreg free
 31608                           
 31609                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 31610  001EBA  0E00               	movlw	0
 31611  001EBC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31612                           
 31613                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 31614  001EBE  0E01               	movlw	1
 31615  001EC0  D084               	goto	L61
 31616  001EC2                     
 31617                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 31618  001EC2  0100               	movlb	0	; () banked
 31619  001EC4  EE20 F001          	lfsr	2,1
 31620  001EC8  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31621  001ECA  26D9               	addwf	fsr2l,f,c
 31622  001ECC  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31623  001ECE  22DA               	addwfc	fsr2h,f,c
 31624  001ED0  50DF               	movf	indf2,w,c
 31625  001ED2  6F80               	movwf	??_I2c_WriteData& (0+255),b
 31626  001ED4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31627  001ED8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31628  001EDC  50DF               	movf	indf2,w,c
 31629  001EDE  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 31630  001EE0  90D8               	bcf	status,0,c
 31631  001EE2  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 31632  001EE4  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 31633  001EE6  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31634  001EEA  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31635  001EEE  6EDF               	movwf	indf2,c
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 31639  001EF0  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 31640  001EF4  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 31641  001EF8  50DF               	movf	indf2,w,c
 31642  001EFA  EC35  F031         	call	_WriteByte
 31643                           
 31644                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 31645  001EFE  0E02               	movlw	2
 31646  001F00  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31647  001F02                     
 31648                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 31649  001F02  EC3F  F031         	call	_CheckTxStatus	;wreg free
 31650  001F06  0900               	iorlw	0
 31651  001F08  A4D8               	btfss	status,2,c
 31652  001F0A  D089               	goto	l162
 31653                           
 31654                           ;i2c_drv.c: 282: {
 31655                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 31656  001F0C  0E03               	movlw	3
 31657  001F0E  D01A               	goto	L63
 31658  001F10                     
 31659                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 31660  001F10  0100               	movlb	0	; () banked
 31661  001F12  EE20 F002          	lfsr	2,2
 31662  001F16  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31663  001F18  26D9               	addwf	fsr2l,f,c
 31664  001F1A  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31665  001F1C  22DA               	addwfc	fsr2h,f,c
 31666  001F1E  CFDE F080          	movff	postinc2,??_I2c_WriteData
 31667  001F22  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 31668  001F26  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 31669  001F2A  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 31670  001F2E  50DF               	movf	indf2,w,c
 31671  001F30  EC35  F031         	call	_WriteByte
 31672                           
 31673                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 31674  001F34  0E04               	movlw	4
 31675  001F36  D049               	goto	L61
 31676  001F38                     
 31677                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 31678  001F38  EC3F  F031         	call	_CheckTxStatus	;wreg free
 31679  001F3C  0900               	iorlw	0
 31680  001F3E  A4D8               	btfss	status,2,c
 31681  001F40  D06E               	goto	l162
 31682                           
 31683                           ;i2c_drv.c: 300: {
 31684                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 31685  001F42  0E05               	movlw	5
 31686  001F44                     L63:
 31687  001F44  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31688                           
 31689                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 31690  001F46  0E08               	movlw	8
 31691  001F48  D040               	goto	L61
 31692  001F4A                     
 31693                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 31694  001F4A  0100               	movlb	0	; () banked
 31695  001F4C  EE20 F004          	lfsr	2,4
 31696  001F50  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31697  001F52  26D9               	addwf	fsr2l,f,c
 31698  001F54  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31699  001F56  22DA               	addwfc	fsr2h,f,c
 31700  001F58  50DF               	movf	indf2,w,c
 31701  001F5A  B4D8               	btfsc	status,2,c
 31702  001F5C  D010               	goto	l170
 31703                           
 31704                           ; BSR set to: 0
 31705                           ;i2c_drv.c: 310: {
 31706                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 31707  001F5E  EE20 F004          	lfsr	2,4
 31708  001F62  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31709  001F64  26D9               	addwf	fsr2l,f,c
 31710  001F66  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31711  001F68  22DA               	addwfc	fsr2h,f,c
 31712  001F6A  06DF               	decf	indf2,f,c
 31713                           
 31714                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 31715  001F6C  EE20 F002          	lfsr	2,2
 31716  001F70  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31717  001F72  26D9               	addwf	fsr2l,f,c
 31718  001F74  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31719  001F76  22DA               	addwfc	fsr2h,f,c
 31720  001F78  2ADE               	incf	postinc2,f,c
 31721  001F7A  0E00               	movlw	0
 31722  001F7C  22DD               	addwfc	postdec2,f,c
 31723  001F7E                     l170:
 31724                           
 31725                           ; BSR set to: 0
 31726                           ;i2c_drv.c: 315: }
 31727                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 31728  001F7E  EE20 F004          	lfsr	2,4
 31729  001F82  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 31730  001F84  26D9               	addwf	fsr2l,f,c
 31731  001F86  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 31732  001F88  22DA               	addwfc	fsr2h,f,c
 31733  001F8A  50DF               	movf	indf2,w,c
 31734  001F8C  A4D8               	btfss	status,2,c
 31735  001F8E  D002               	goto	l171
 31736                           
 31737                           ; BSR set to: 0
 31738                           ;i2c_drv.c: 319: {
 31739                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 31740  001F90  0E06               	movlw	6
 31741  001F92  D01B               	goto	L61
 31742  001F94                     l171:
 31743                           
 31744                           ; BSR set to: 0
 31745                           ;i2c_drv.c: 323: else
 31746                           ;i2c_drv.c: 324: {
 31747                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 31748                           
 31749                           ; BSR set to: 0
 31750  001F94  0E03               	movlw	3
 31751  001F96  D019               	goto	L61
 31752  001F98                     
 31753                           ;i2c_drv.c: 332: StopCondition();
 31754                           
 31755                           ; BSR set to: 0
 31756  001F98  EC55  F031         	call	_StopCondition	;wreg free
 31757                           
 31758                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 31759  001F9C  0E07               	movlw	7
 31760  001F9E  D015               	goto	L61
 31761  001FA0                     
 31762                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 31763  001FA0  0E00               	movlw	0
 31764  001FA2  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31765                           
 31766                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 31767  001FA4  0E00               	movlw	0
 31768  001FA6  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31769                           
 31770                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 31771  001FA8  0E02               	movlw	2
 31772  001FAA  D018               	goto	L62
 31773  001FAC                     
 31774                           ;i2c_drv.c: 347: TentativeCounter++;
 31775  001FAC  2A36               	incf	I2c_WriteData@TentativeCounter,f,c
 31776                           
 31777                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 31778  001FAE  EC44  F031         	call	_CheckAckStatus	;wreg free
 31779  001FB2  0900               	iorlw	0
 31780  001FB4  A4D8               	btfss	status,2,c
 31781  001FB6  D005               	goto	l176
 31782                           
 31783                           ;i2c_drv.c: 350: {
 31784                           ;i2c_drv.c: 352: TentativeCounter = 0;
 31785  001FB8  0E00               	movlw	0
 31786  001FBA  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31787                           
 31788                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 31789  001FBC  C037  F038         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 31790                           
 31791                           ;i2c_drv.c: 355: }
 31792  001FC0  D02E               	goto	l162
 31793  001FC2                     l176:
 31794                           
 31795                           ;i2c_drv.c: 356: else
 31796                           ;i2c_drv.c: 357: {
 31797                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 31798  001FC2  0E02               	movlw	2
 31799  001FC4  6436               	cpfsgt	I2c_WriteData@TentativeCounter,c
 31800  001FC6  D02B               	goto	l162
 31801                           
 31802                           ;i2c_drv.c: 360: {
 31803                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 31804  001FC8  0E09               	movlw	9
 31805  001FCA                     L61:
 31806  001FCA  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31807                           
 31808                           ;i2c_drv.c: 363: }
 31809                           ;i2c_drv.c: 364: }
 31810                           ;i2c_drv.c: 365: break;
 31811  001FCC  D028               	goto	l162
 31812  001FCE                     
 31813                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 31814  001FCE  0E00               	movlw	0
 31815  001FD0  6E38               	movwf	I2c_WriteData@I2cWriteState,c
 31816                           
 31817                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 31818  001FD2  0E00               	movlw	0
 31819  001FD4  6E37               	movwf	I2c_WriteData@I2cNextState,c
 31820                           
 31821                           ;i2c_drv.c: 372: TentativeCounter = 0;
 31822  001FD6  0E00               	movlw	0
 31823  001FD8  6E36               	movwf	I2c_WriteData@TentativeCounter,c
 31824                           
 31825                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 31826  001FDA  0E01               	movlw	1
 31827  001FDC                     L62:
 31828  001FDC  6E35               	movwf	I2c_WriteData@WriteStatus,c
 31829                           
 31830                           ;i2c_drv.c: 379: }
 31831                           
 31832                           ;i2c_drv.c: 378: break;
 31833                           
 31834                           ;i2c_drv.c: 377: default:
 31835                           
 31836                           ;i2c_drv.c: 375: break;
 31837  001FDE  D01F               	goto	l162
 31838  001FE0                     l160:
 31839  001FE0  5038               	movf	I2c_WriteData@I2cWriteState,w,c
 31840                           
 31841                           ; Switch size 1, requested type "space"
 31842                           ; Number of cases is 10, Range of values is 0 to 9
 31843                           ; switch strategies available:
 31844                           ; Name         Instructions Cycles
 31845                           ; simple_byte           31    16 (average)
 31846                           ;	Chosen strategy is simple_byte
 31847  001FE2  0A00               	xorlw	0	; case 0
 31848  001FE4  B4D8               	btfsc	status,2,c
 31849  001FE6  D767               	goto	l161
 31850  001FE8  0A01               	xorlw	1	; case 1
 31851  001FEA  B4D8               	btfsc	status,2,c
 31852  001FEC  D76A               	goto	l163
 31853  001FEE  0A03               	xorlw	3	; case 2
 31854  001FF0  B4D8               	btfsc	status,2,c
 31855  001FF2  D787               	goto	l164
 31856  001FF4  0A01               	xorlw	1	; case 3
 31857  001FF6  B4D8               	btfsc	status,2,c
 31858  001FF8  D78B               	goto	l166
 31859  001FFA  0A07               	xorlw	7	; case 4
 31860  001FFC  B4D8               	btfsc	status,2,c
 31861  001FFE  D79C               	goto	l167
 31862  002000  0A01               	xorlw	1	; case 5
 31863  002002  B4D8               	btfsc	status,2,c
 31864  002004  D7A2               	goto	l169
 31865  002006  0A03               	xorlw	3	; case 6
 31866  002008  B4D8               	btfsc	status,2,c
 31867  00200A  D7C6               	goto	l173
 31868  00200C  0A01               	xorlw	1	; case 7
 31869  00200E  B4D8               	btfsc	status,2,c
 31870  002010  D7C7               	goto	l174
 31871  002012  0A0F               	xorlw	15	; case 8
 31872  002014  B4D8               	btfsc	status,2,c
 31873  002016  D7CA               	goto	l175
 31874  002018  0A01               	xorlw	1	; case 9
 31875  00201A  B4D8               	btfsc	status,2,c
 31876  00201C  D7D8               	goto	l179
 31877  00201E                     l162:
 31878                           
 31879                           ;i2c_drv.c: 382: return WriteStatus;
 31880  00201E  5035               	movf	I2c_WriteData@WriteStatus,w,c
 31881  002020  0012               	return	
 31882  002022                     __end_of_I2c_WriteData:
 31883                           	opt stack 0
 31884                           tosu	equ	0xFFF
 31885                           tosh	equ	0xFFE
 31886                           tosl	equ	0xFFD
 31887                           pclath	equ	0xFFA
 31888                           tblptru	equ	0xFF8
 31889                           tblptrh	equ	0xFF7
 31890                           tblptrl	equ	0xFF6
 31891                           tablat	equ	0xFF5
 31892                           prodh	equ	0xFF4
 31893                           prodl	equ	0xFF3
 31894                           intcon	equ	0xFF2
 31895                           intcon2	equ	0xFF1
 31896                           intcon3	equ	0xFF0
 31897                           indf0	equ	0xFEF
 31898                           postinc0	equ	0xFEE
 31899                           plusw0	equ	0xFEB
 31900                           fsr0h	equ	0xFEA
 31901                           fsr0l	equ	0xFE9
 31902                           wreg	equ	0xFE8
 31903                           indf1	equ	0xFE7
 31904                           postinc1	equ	0xFE6
 31905                           postdec1	equ	0xFE5
 31906                           plusw1	equ	0xFE3
 31907                           fsr1h	equ	0xFE2
 31908                           fsr1l	equ	0xFE1
 31909                           indf2	equ	0xFDF
 31910                           postinc2	equ	0xFDE
 31911                           postdec2	equ	0xFDD
 31912                           plusw2	equ	0xFDB
 31913                           fsr2h	equ	0xFDA
 31914                           fsr2l	equ	0xFD9
 31915                           status	equ	0xFD8
 31916                           
 31917 ;; *************** function _I2c_ReadData *****************
 31918 ;; Defined at:
 31919 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 31920 ;; Parameters:    Size  Location     Type
 31921 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 31922 ;;		 -> I2cRxPacket(6), 
 31923 ;; Auto vars:     Size  Location     Type
 31924 ;;		None
 31925 ;; Return value:  Size  Location     Type
 31926 ;;                  1    wreg      enum E7787
 31927 ;; Registers used:
 31928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31929 ;; Tracked objects:
 31930 ;;		On entry : 0/0
 31931 ;;		On exit  : 0/0
 31932 ;;		Unchanged: 0/0
 31933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31938 ;;Total ram usage:        4 bytes
 31939 ;; Hardware stack levels used:    1
 31940 ;; Hardware stack levels required when called:   12
 31941 ;; This function calls:
 31942 ;;		_CheckAckStatus
 31943 ;;		_CheckTxStatus
 31944 ;;		_EnableReceiver
 31945 ;;		_GenerateEvt
 31946 ;;		_ReadByte
 31947 ;;		_SetAckStatus
 31948 ;;		_StartCondition
 31949 ;;		_StopCondition
 31950 ;;		_WriteByte
 31951 ;; This function is called by:
 31952 ;;		_I2cSendMsgSm
 31953 ;; This function uses a non-reentrant model
 31954 ;;
 31955                           
 31956                           	psect	text148
 31957  002022                     __ptext148:
 31958                           	opt stack 0
 31959  002022                     _I2c_ReadData:
 31960                           	opt stack 14
 31961                           
 31962                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 31963                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 31964                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 31965                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 31966                           ;i2c_drv.c: 402: switch (I2cReadState)
 31967                           
 31968                           ;incstack = 0
 31969  002022  D090               	goto	l192
 31970  002024                     
 31971                           ;i2c_drv.c: 406: StartCondition();
 31972  002024  EC57  F031         	call	_StartCondition	;wreg free
 31973                           
 31974                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 31975  002028  0E00               	movlw	0
 31976  00202A  6E31               	movwf	I2c_ReadData@ReadStatus,c
 31977                           
 31978                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 31979  00202C  0E01               	movlw	1
 31980  00202E  D083               	goto	L71
 31981  002030                     
 31982                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 31983  002030  0100               	movlb	0	; () banked
 31984  002032  EE20 F001          	lfsr	2,1
 31985  002036  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 31986  002038  26D9               	addwf	fsr2l,f,c
 31987  00203A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 31988  00203C  22DA               	addwfc	fsr2h,f,c
 31989  00203E  50DF               	movf	indf2,w,c
 31990  002040  6F82               	movwf	??_I2c_ReadData& (0+255),b
 31991  002042  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31992  002046  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 31993  00204A  50DF               	movf	indf2,w,c
 31994  00204C  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 31995  00204E  90D8               	bcf	status,0,c
 31996  002050  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 31997  002052  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 31998  002054  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 31999  002058  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32000  00205C  6EDF               	movwf	indf2,c
 32001                           
 32002                           ; BSR set to: 0
 32003                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 32004  00205E  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 32005  002062  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 32006  002066  50DF               	movf	indf2,w,c
 32007  002068  EC35  F031         	call	_WriteByte
 32008                           
 32009                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 32010  00206C  0E02               	movlw	2
 32011  00206E  D063               	goto	L71
 32012  002070                     
 32013                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 32014  002070  EC3F  F031         	call	_CheckTxStatus	;wreg free
 32015  002074  0900               	iorlw	0
 32016  002076  A4D8               	btfss	status,2,c
 32017  002078  D081               	goto	l194
 32018                           
 32019                           ;i2c_drv.c: 425: {
 32020                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 32021  00207A  0E03               	movlw	3
 32022  00207C  D05C               	goto	L71
 32023  00207E                     
 32024                           ;i2c_drv.c: 433: TentativeCounter++;
 32025  00207E  2A32               	incf	I2c_ReadData@TentativeCounter,f,c
 32026                           
 32027                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 32028  002080  EC44  F031         	call	_CheckAckStatus	;wreg free
 32029  002084  0900               	iorlw	0
 32030  002086  A4D8               	btfss	status,2,c
 32031  002088  D004               	goto	l199
 32032                           
 32033                           ;i2c_drv.c: 436: {
 32034                           ;i2c_drv.c: 438: TentativeCounter = 0;
 32035  00208A  0E00               	movlw	0
 32036  00208C  6E32               	movwf	I2c_ReadData@TentativeCounter,c
 32037  00208E                     
 32038                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 32039  00208E  0E04               	movlw	4
 32040  002090  D052               	goto	L71
 32041  002092                     l199:
 32042                           
 32043                           ;i2c_drv.c: 442: else
 32044                           ;i2c_drv.c: 443: {
 32045                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 32046  002092  0E02               	movlw	2
 32047  002094  6432               	cpfsgt	I2c_ReadData@TentativeCounter,c
 32048  002096  D072               	goto	l194
 32049                           
 32050                           ;i2c_drv.c: 446: {
 32051                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 32052  002098  0E08               	movlw	8
 32053  00209A  D04D               	goto	L71
 32054  00209C                     
 32055                           ;i2c_drv.c: 455: EnableReceiver();
 32056  00209C  EC59  F031         	call	_EnableReceiver	;wreg free
 32057                           
 32058                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 32059  0020A0  0E05               	movlw	5
 32060  0020A2  D049               	goto	L71
 32061  0020A4                     
 32062                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 32063  0020A4  EC3F  F031         	call	_CheckTxStatus	;wreg free
 32064  0020A8  0900               	iorlw	0
 32065  0020AA  A4D8               	btfss	status,2,c
 32066  0020AC  D067               	goto	l194
 32067                           
 32068                           ;i2c_drv.c: 463: {
 32069                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 32070  0020AE  0100               	movlb	0	; () banked
 32071  0020B0  EE20 F002          	lfsr	2,2
 32072  0020B4  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32073  0020B6  26D9               	addwf	fsr2l,f,c
 32074  0020B8  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32075  0020BA  22DA               	addwfc	fsr2h,f,c
 32076  0020BC  CFDE F082          	movff	postinc2,??_I2c_ReadData
 32077  0020C0  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 32078  0020C4  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 32079  0020C8  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 32080  0020CC  EC3A  F031         	call	_ReadByte	;wreg free
 32081  0020D0  6EDF               	movwf	indf2,c
 32082                           
 32083                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 32084  0020D2  0100               	movlb	0	; () banked
 32085  0020D4  EE20 F002          	lfsr	2,2
 32086  0020D8  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32087  0020DA  26D9               	addwf	fsr2l,f,c
 32088  0020DC  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32089  0020DE  22DA               	addwfc	fsr2h,f,c
 32090  0020E0  2ADE               	incf	postinc2,f,c
 32091  0020E2  0E00               	movlw	0
 32092  0020E4  22DD               	addwfc	postdec2,f,c
 32093                           
 32094                           ; BSR set to: 0
 32095                           ;i2c_drv.c: 469: DataCounter++;
 32096  0020E6  2A33               	incf	I2c_ReadData@DataCounter,f,c
 32097                           
 32098                           ; BSR set to: 0
 32099                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 32100  0020E8  0E06               	movlw	6
 32101  0020EA  D025               	goto	L71
 32102  0020EC                     
 32103                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 32104                           
 32105                           ; BSR set to: 0
 32106  0020EC  0100               	movlb	0	; () banked
 32107  0020EE  EE20 F004          	lfsr	2,4
 32108  0020F2  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 32109  0020F4  26D9               	addwf	fsr2l,f,c
 32110  0020F6  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32111  0020F8  22DA               	addwfc	fsr2h,f,c
 32112  0020FA  50DE               	movf	postinc2,w,c
 32113  0020FC  5C33               	subwf	I2c_ReadData@DataCounter,w,c
 32114  0020FE  A0D8               	btfss	status,0,c
 32115  002100  D008               	goto	l206
 32116                           
 32117                           ; BSR set to: 0
 32118                           ;i2c_drv.c: 478: {
 32119                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 32120  002102  0E01               	movlw	1
 32121  002104  ECCF  F030         	call	_SetAckStatus
 32122                           
 32123                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 32124  002108  0E07               	movlw	7
 32125  00210A  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32126                           
 32127                           ;i2c_drv.c: 484: DataCounter = 0;
 32128  00210C  0E00               	movlw	0
 32129  00210E  6E33               	movwf	I2c_ReadData@DataCounter,c
 32130                           
 32131                           ;i2c_drv.c: 485: }
 32132  002110  D035               	goto	l194
 32133  002112                     l206:
 32134                           
 32135                           ;i2c_drv.c: 486: else
 32136                           ;i2c_drv.c: 487: {
 32137                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 32138  002112  0E00               	movlw	0
 32139  002114  ECCF  F030         	call	_SetAckStatus
 32140  002118  D7BA               	goto	L72
 32141  00211A                     
 32142                           ;i2c_drv.c: 497: StopCondition();
 32143  00211A  EC55  F031         	call	_StopCondition	;wreg free
 32144                           
 32145                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 32146  00211E  0E02               	movlw	2
 32147  002120  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32148                           
 32149                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 32150  002122  0E05               	movlw	5
 32151  002124  0100               	movlb	0	; () banked
 32152  002126  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 32153  002128  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 32154  00212A  0E00               	movlw	0
 32155  00212C  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 32156  00212E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 32157  002130  EC97  F030         	call	_GenerateEvt	;wreg free
 32158                           
 32159                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 32160  002134  0E00               	movlw	0
 32161  002136                     L71:
 32162  002136  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32163                           
 32164                           ;i2c_drv.c: 504: break;
 32165  002138  D021               	goto	l194
 32166  00213A                     
 32167                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 32168  00213A  0E00               	movlw	0
 32169  00213C  6E34               	movwf	I2c_ReadData@I2cReadState,c
 32170                           
 32171                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 32172  00213E  0E01               	movlw	1
 32173  002140  6E31               	movwf	I2c_ReadData@ReadStatus,c
 32174                           
 32175                           ;i2c_drv.c: 515: }
 32176                           
 32177                           ;i2c_drv.c: 514: break;
 32178                           
 32179                           ;i2c_drv.c: 513: default:
 32180                           
 32181                           ;i2c_drv.c: 511: break;
 32182  002142  D01C               	goto	l194
 32183  002144                     l192:
 32184  002144  5034               	movf	I2c_ReadData@I2cReadState,w,c
 32185                           
 32186                           ; Switch size 1, requested type "space"
 32187                           ; Number of cases is 9, Range of values is 0 to 8
 32188                           ; switch strategies available:
 32189                           ; Name         Instructions Cycles
 32190                           ; simple_byte           28    15 (average)
 32191                           ;	Chosen strategy is simple_byte
 32192  002146  0A00               	xorlw	0	; case 0
 32193  002148  B4D8               	btfsc	status,2,c
 32194  00214A  D76C               	goto	l193
 32195  00214C  0A01               	xorlw	1	; case 1
 32196  00214E  B4D8               	btfsc	status,2,c
 32197  002150  D76F               	goto	l195
 32198  002152  0A03               	xorlw	3	; case 2
 32199  002154  B4D8               	btfsc	status,2,c
 32200  002156  D78C               	goto	l196
 32201  002158  0A01               	xorlw	1	; case 3
 32202  00215A  B4D8               	btfsc	status,2,c
 32203  00215C  D790               	goto	l198
 32204  00215E  0A07               	xorlw	7	; case 4
 32205  002160  B4D8               	btfsc	status,2,c
 32206  002162  D79C               	goto	l202
 32207  002164  0A01               	xorlw	1	; case 5
 32208  002166  B4D8               	btfsc	status,2,c
 32209  002168  D79D               	goto	l203
 32210  00216A  0A03               	xorlw	3	; case 6
 32211  00216C  B4D8               	btfsc	status,2,c
 32212  00216E  D7BE               	goto	l205
 32213  002170  0A01               	xorlw	1	; case 7
 32214  002172  B4D8               	btfsc	status,2,c
 32215  002174  D7D2               	goto	l208
 32216  002176  0A0F               	xorlw	15	; case 8
 32217  002178  B4D8               	btfsc	status,2,c
 32218  00217A  D7DF               	goto	l209
 32219  00217C                     l194:
 32220                           
 32221                           ;i2c_drv.c: 518: return ReadStatus;
 32222  00217C  5031               	movf	I2c_ReadData@ReadStatus,w,c
 32223  00217E  0012               	return	
 32224  002180                     __end_of_I2c_ReadData:
 32225                           	opt stack 0
 32226                           tosu	equ	0xFFF
 32227                           tosh	equ	0xFFE
 32228                           tosl	equ	0xFFD
 32229                           pclath	equ	0xFFA
 32230                           tblptru	equ	0xFF8
 32231                           tblptrh	equ	0xFF7
 32232                           tblptrl	equ	0xFF6
 32233                           tablat	equ	0xFF5
 32234                           prodh	equ	0xFF4
 32235                           prodl	equ	0xFF3
 32236                           intcon	equ	0xFF2
 32237                           intcon2	equ	0xFF1
 32238                           intcon3	equ	0xFF0
 32239                           indf0	equ	0xFEF
 32240                           postinc0	equ	0xFEE
 32241                           plusw0	equ	0xFEB
 32242                           fsr0h	equ	0xFEA
 32243                           fsr0l	equ	0xFE9
 32244                           wreg	equ	0xFE8
 32245                           indf1	equ	0xFE7
 32246                           postinc1	equ	0xFE6
 32247                           postdec1	equ	0xFE5
 32248                           plusw1	equ	0xFE3
 32249                           fsr1h	equ	0xFE2
 32250                           fsr1l	equ	0xFE1
 32251                           indf2	equ	0xFDF
 32252                           postinc2	equ	0xFDE
 32253                           postdec2	equ	0xFDD
 32254                           plusw2	equ	0xFDB
 32255                           fsr2h	equ	0xFDA
 32256                           fsr2l	equ	0xFD9
 32257                           status	equ	0xFD8
 32258                           
 32259 ;; *************** function _WriteByte *****************
 32260 ;; Defined at:
 32261 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32262 ;; Parameters:    Size  Location     Type
 32263 ;;  Byte            1    wreg     unsigned char 
 32264 ;; Auto vars:     Size  Location     Type
 32265 ;;  Byte            1   29[BANK0 ] unsigned char 
 32266 ;; Return value:  Size  Location     Type
 32267 ;;                  1    wreg      void 
 32268 ;; Registers used:
 32269 ;;		wreg
 32270 ;; Tracked objects:
 32271 ;;		On entry : 0/0
 32272 ;;		On exit  : 0/0
 32273 ;;		Unchanged: 0/0
 32274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32278 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32279 ;;Total ram usage:        1 bytes
 32280 ;; Hardware stack levels used:    1
 32281 ;; Hardware stack levels required when called:   11
 32282 ;; This function calls:
 32283 ;;		Nothing
 32284 ;; This function is called by:
 32285 ;;		_I2c_WriteData
 32286 ;;		_I2c_ReadData
 32287 ;; This function uses a non-reentrant model
 32288 ;;
 32289                           
 32290                           	psect	text149
 32291  00626A                     __ptext149:
 32292                           	opt stack 0
 32293  00626A                     _WriteByte:
 32294                           	opt stack 14
 32295                           
 32296                           ;incstack = 0
 32297                           ;WriteByte@Byte stored from wreg
 32298  00626A  0100               	movlb	0	; () banked
 32299  00626C  6F7D               	movwf	WriteByte@Byte& (0+255),b
 32300                           
 32301                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 32302  00626E  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 32303  006272  0012               	return		;funcret
 32304  006274                     __end_of_WriteByte:
 32305                           	opt stack 0
 32306                           tosu	equ	0xFFF
 32307                           tosh	equ	0xFFE
 32308                           tosl	equ	0xFFD
 32309                           pclath	equ	0xFFA
 32310                           tblptru	equ	0xFF8
 32311                           tblptrh	equ	0xFF7
 32312                           tblptrl	equ	0xFF6
 32313                           tablat	equ	0xFF5
 32314                           prodh	equ	0xFF4
 32315                           prodl	equ	0xFF3
 32316                           intcon	equ	0xFF2
 32317                           intcon2	equ	0xFF1
 32318                           intcon3	equ	0xFF0
 32319                           indf0	equ	0xFEF
 32320                           postinc0	equ	0xFEE
 32321                           plusw0	equ	0xFEB
 32322                           fsr0h	equ	0xFEA
 32323                           fsr0l	equ	0xFE9
 32324                           wreg	equ	0xFE8
 32325                           indf1	equ	0xFE7
 32326                           postinc1	equ	0xFE6
 32327                           postdec1	equ	0xFE5
 32328                           plusw1	equ	0xFE3
 32329                           fsr1h	equ	0xFE2
 32330                           fsr1l	equ	0xFE1
 32331                           indf2	equ	0xFDF
 32332                           postinc2	equ	0xFDE
 32333                           postdec2	equ	0xFDD
 32334                           plusw2	equ	0xFDB
 32335                           fsr2h	equ	0xFDA
 32336                           fsr2l	equ	0xFD9
 32337                           status	equ	0xFD8
 32338                           
 32339 ;; *************** function _StopCondition *****************
 32340 ;; Defined at:
 32341 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32342 ;; Parameters:    Size  Location     Type
 32343 ;;		None
 32344 ;; Auto vars:     Size  Location     Type
 32345 ;;		None
 32346 ;; Return value:  Size  Location     Type
 32347 ;;                  1    wreg      void 
 32348 ;; Registers used:
 32349 ;;		status,2, status,0
 32350 ;; Tracked objects:
 32351 ;;		On entry : 0/0
 32352 ;;		On exit  : 0/0
 32353 ;;		Unchanged: 0/0
 32354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32359 ;;Total ram usage:        0 bytes
 32360 ;; Hardware stack levels used:    1
 32361 ;; Hardware stack levels required when called:   11
 32362 ;; This function calls:
 32363 ;;		Nothing
 32364 ;; This function is called by:
 32365 ;;		_I2c_WriteData
 32366 ;;		_I2c_ReadData
 32367 ;; This function uses a non-reentrant model
 32368 ;;
 32369                           
 32370                           	psect	text150
 32371  0062AA                     __ptext150:
 32372                           	opt stack 0
 32373  0062AA                     _StopCondition:
 32374                           	opt stack 14
 32375                           
 32376                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 32377                           
 32378                           ;incstack = 0
 32379  0062AA  8471               	bsf	3953,2,c	;volatile
 32380  0062AC  0012               	return		;funcret
 32381  0062AE                     __end_of_StopCondition:
 32382                           	opt stack 0
 32383                           tosu	equ	0xFFF
 32384                           tosh	equ	0xFFE
 32385                           tosl	equ	0xFFD
 32386                           pclath	equ	0xFFA
 32387                           tblptru	equ	0xFF8
 32388                           tblptrh	equ	0xFF7
 32389                           tblptrl	equ	0xFF6
 32390                           tablat	equ	0xFF5
 32391                           prodh	equ	0xFF4
 32392                           prodl	equ	0xFF3
 32393                           intcon	equ	0xFF2
 32394                           intcon2	equ	0xFF1
 32395                           intcon3	equ	0xFF0
 32396                           indf0	equ	0xFEF
 32397                           postinc0	equ	0xFEE
 32398                           plusw0	equ	0xFEB
 32399                           fsr0h	equ	0xFEA
 32400                           fsr0l	equ	0xFE9
 32401                           wreg	equ	0xFE8
 32402                           indf1	equ	0xFE7
 32403                           postinc1	equ	0xFE6
 32404                           postdec1	equ	0xFE5
 32405                           plusw1	equ	0xFE3
 32406                           fsr1h	equ	0xFE2
 32407                           fsr1l	equ	0xFE1
 32408                           indf2	equ	0xFDF
 32409                           postinc2	equ	0xFDE
 32410                           postdec2	equ	0xFDD
 32411                           plusw2	equ	0xFDB
 32412                           fsr2h	equ	0xFDA
 32413                           fsr2l	equ	0xFD9
 32414                           status	equ	0xFD8
 32415                           
 32416 ;; *************** function _StartCondition *****************
 32417 ;; Defined at:
 32418 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32419 ;; Parameters:    Size  Location     Type
 32420 ;;		None
 32421 ;; Auto vars:     Size  Location     Type
 32422 ;;		None
 32423 ;; Return value:  Size  Location     Type
 32424 ;;                  1    wreg      void 
 32425 ;; Registers used:
 32426 ;;		status,2, status,0
 32427 ;; Tracked objects:
 32428 ;;		On entry : 0/0
 32429 ;;		On exit  : 0/0
 32430 ;;		Unchanged: 0/0
 32431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32436 ;;Total ram usage:        0 bytes
 32437 ;; Hardware stack levels used:    1
 32438 ;; Hardware stack levels required when called:   11
 32439 ;; This function calls:
 32440 ;;		Nothing
 32441 ;; This function is called by:
 32442 ;;		_I2c_WriteData
 32443 ;;		_I2c_ReadData
 32444 ;; This function uses a non-reentrant model
 32445 ;;
 32446                           
 32447                           	psect	text151
 32448  0062AE                     __ptext151:
 32449                           	opt stack 0
 32450  0062AE                     _StartCondition:
 32451                           	opt stack 14
 32452                           
 32453                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 32454                           
 32455                           ;incstack = 0
 32456  0062AE  8071               	bsf	3953,0,c	;volatile
 32457  0062B0  0012               	return		;funcret
 32458  0062B2                     __end_of_StartCondition:
 32459                           	opt stack 0
 32460                           tosu	equ	0xFFF
 32461                           tosh	equ	0xFFE
 32462                           tosl	equ	0xFFD
 32463                           pclath	equ	0xFFA
 32464                           tblptru	equ	0xFF8
 32465                           tblptrh	equ	0xFF7
 32466                           tblptrl	equ	0xFF6
 32467                           tablat	equ	0xFF5
 32468                           prodh	equ	0xFF4
 32469                           prodl	equ	0xFF3
 32470                           intcon	equ	0xFF2
 32471                           intcon2	equ	0xFF1
 32472                           intcon3	equ	0xFF0
 32473                           indf0	equ	0xFEF
 32474                           postinc0	equ	0xFEE
 32475                           plusw0	equ	0xFEB
 32476                           fsr0h	equ	0xFEA
 32477                           fsr0l	equ	0xFE9
 32478                           wreg	equ	0xFE8
 32479                           indf1	equ	0xFE7
 32480                           postinc1	equ	0xFE6
 32481                           postdec1	equ	0xFE5
 32482                           plusw1	equ	0xFE3
 32483                           fsr1h	equ	0xFE2
 32484                           fsr1l	equ	0xFE1
 32485                           indf2	equ	0xFDF
 32486                           postinc2	equ	0xFDE
 32487                           postdec2	equ	0xFDD
 32488                           plusw2	equ	0xFDB
 32489                           fsr2h	equ	0xFDA
 32490                           fsr2l	equ	0xFD9
 32491                           status	equ	0xFD8
 32492                           
 32493 ;; *************** function _SetAckStatus *****************
 32494 ;; Defined at:
 32495 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32496 ;; Parameters:    Size  Location     Type
 32497 ;;  AckSts          1    wreg     unsigned char 
 32498 ;; Auto vars:     Size  Location     Type
 32499 ;;  AckSts          1   29[BANK0 ] unsigned char 
 32500 ;; Return value:  Size  Location     Type
 32501 ;;                  1    wreg      void 
 32502 ;; Registers used:
 32503 ;;		wreg
 32504 ;; Tracked objects:
 32505 ;;		On entry : 0/0
 32506 ;;		On exit  : 0/0
 32507 ;;		Unchanged: 0/0
 32508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32512 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32513 ;;Total ram usage:        1 bytes
 32514 ;; Hardware stack levels used:    1
 32515 ;; Hardware stack levels required when called:   11
 32516 ;; This function calls:
 32517 ;;		Nothing
 32518 ;; This function is called by:
 32519 ;;		_I2c_ReadData
 32520 ;; This function uses a non-reentrant model
 32521 ;;
 32522                           
 32523                           	psect	text152
 32524  00619E                     __ptext152:
 32525                           	opt stack 0
 32526  00619E                     _SetAckStatus:
 32527                           	opt stack 14
 32528                           
 32529                           ;incstack = 0
 32530                           ;SetAckStatus@AckSts stored from wreg
 32531  00619E  0100               	movlb	0	; () banked
 32532  0061A0  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 32533                           
 32534                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 32535  0061A2  0100               	movlb	0	; () banked
 32536  0061A4  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 32537  0061A6  D002               	bra	u11435
 32538  0061A8  9A71               	bcf	3953,5,c	;volatile
 32539  0061AA  D001               	bra	u11436
 32540  0061AC                     u11435:
 32541  0061AC  8A71               	bsf	3953,5,c	;volatile
 32542  0061AE                     u11436:
 32543                           
 32544                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 32545  0061AE  8871               	bsf	3953,4,c	;volatile
 32546  0061B0  0012               	return		;funcret
 32547  0061B2                     __end_of_SetAckStatus:
 32548                           	opt stack 0
 32549                           tosu	equ	0xFFF
 32550                           tosh	equ	0xFFE
 32551                           tosl	equ	0xFFD
 32552                           pclath	equ	0xFFA
 32553                           tblptru	equ	0xFF8
 32554                           tblptrh	equ	0xFF7
 32555                           tblptrl	equ	0xFF6
 32556                           tablat	equ	0xFF5
 32557                           prodh	equ	0xFF4
 32558                           prodl	equ	0xFF3
 32559                           intcon	equ	0xFF2
 32560                           intcon2	equ	0xFF1
 32561                           intcon3	equ	0xFF0
 32562                           indf0	equ	0xFEF
 32563                           postinc0	equ	0xFEE
 32564                           plusw0	equ	0xFEB
 32565                           fsr0h	equ	0xFEA
 32566                           fsr0l	equ	0xFE9
 32567                           wreg	equ	0xFE8
 32568                           indf1	equ	0xFE7
 32569                           postinc1	equ	0xFE6
 32570                           postdec1	equ	0xFE5
 32571                           plusw1	equ	0xFE3
 32572                           fsr1h	equ	0xFE2
 32573                           fsr1l	equ	0xFE1
 32574                           indf2	equ	0xFDF
 32575                           postinc2	equ	0xFDE
 32576                           postdec2	equ	0xFDD
 32577                           plusw2	equ	0xFDB
 32578                           fsr2h	equ	0xFDA
 32579                           fsr2l	equ	0xFD9
 32580                           status	equ	0xFD8
 32581                           
 32582 ;; *************** function _ReadByte *****************
 32583 ;; Defined at:
 32584 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32585 ;; Parameters:    Size  Location     Type
 32586 ;;		None
 32587 ;; Auto vars:     Size  Location     Type
 32588 ;;  Byte            1   29[BANK0 ] unsigned char 
 32589 ;; Return value:  Size  Location     Type
 32590 ;;                  1    wreg      unsigned char 
 32591 ;; Registers used:
 32592 ;;		wreg, status,2
 32593 ;; Tracked objects:
 32594 ;;		On entry : 0/0
 32595 ;;		On exit  : 0/0
 32596 ;;		Unchanged: 0/0
 32597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32602 ;;Total ram usage:        1 bytes
 32603 ;; Hardware stack levels used:    1
 32604 ;; Hardware stack levels required when called:   11
 32605 ;; This function calls:
 32606 ;;		Nothing
 32607 ;; This function is called by:
 32608 ;;		_I2c_ReadData
 32609 ;; This function uses a non-reentrant model
 32610 ;;
 32611                           
 32612                           	psect	text153
 32613  006274                     __ptext153:
 32614                           	opt stack 0
 32615  006274                     _ReadByte:
 32616                           	opt stack 14
 32617                           
 32618                           ;i2c_drv.c: 207: UINT8 Byte;
 32619                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 32620                           
 32621                           ;incstack = 0
 32622  006274  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 32623                           
 32624                           ;i2c_drv.c: 213: return Byte;
 32625  006278  0100               	movlb	0	; () banked
 32626  00627A  517D               	movf	ReadByte@Byte& (0+255),w,b
 32627  00627C  0012               	return	
 32628  00627E                     __end_of_ReadByte:
 32629                           	opt stack 0
 32630                           tosu	equ	0xFFF
 32631                           tosh	equ	0xFFE
 32632                           tosl	equ	0xFFD
 32633                           pclath	equ	0xFFA
 32634                           tblptru	equ	0xFF8
 32635                           tblptrh	equ	0xFF7
 32636                           tblptrl	equ	0xFF6
 32637                           tablat	equ	0xFF5
 32638                           prodh	equ	0xFF4
 32639                           prodl	equ	0xFF3
 32640                           intcon	equ	0xFF2
 32641                           intcon2	equ	0xFF1
 32642                           intcon3	equ	0xFF0
 32643                           indf0	equ	0xFEF
 32644                           postinc0	equ	0xFEE
 32645                           plusw0	equ	0xFEB
 32646                           fsr0h	equ	0xFEA
 32647                           fsr0l	equ	0xFE9
 32648                           wreg	equ	0xFE8
 32649                           indf1	equ	0xFE7
 32650                           postinc1	equ	0xFE6
 32651                           postdec1	equ	0xFE5
 32652                           plusw1	equ	0xFE3
 32653                           fsr1h	equ	0xFE2
 32654                           fsr1l	equ	0xFE1
 32655                           indf2	equ	0xFDF
 32656                           postinc2	equ	0xFDE
 32657                           postdec2	equ	0xFDD
 32658                           plusw2	equ	0xFDB
 32659                           fsr2h	equ	0xFDA
 32660                           fsr2l	equ	0xFD9
 32661                           status	equ	0xFD8
 32662                           
 32663 ;; *************** function _GenerateEvt *****************
 32664 ;; Defined at:
 32665 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 32666 ;; Parameters:    Size  Location     Type
 32667 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 32668 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 32669 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 32670 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 32671 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 32672 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 32673 ;; Auto vars:     Size  Location     Type
 32674 ;;  EventStatus     1   31[BANK0 ] enum E7727
 32675 ;; Return value:  Size  Location     Type
 32676 ;;                  1    wreg      enum E7699
 32677 ;; Registers used:
 32678 ;;		wreg, fsr2l, fsr2h, status,2
 32679 ;; Tracked objects:
 32680 ;;		On entry : 0/0
 32681 ;;		On exit  : 0/0
 32682 ;;		Unchanged: 0/0
 32683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32687 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;Total ram usage:        3 bytes
 32689 ;; Hardware stack levels used:    1
 32690 ;; Hardware stack levels required when called:   11
 32691 ;; This function calls:
 32692 ;;		Nothing
 32693 ;; This function is called by:
 32694 ;;		_I2c_ReadData
 32695 ;;		_CheckModem
 32696 ;;		_TurnOnModem
 32697 ;;		_ConfigureModem
 32698 ;;		_ModemEvtParser
 32699 ;;		_GetSmsSm
 32700 ;;		_Mdm_RequestSmsData
 32701 ;;		_I2cSlv_SendI2cMsg
 32702 ;;		_I2cSlv_ReceiveI2cMsg
 32703 ;;		_RiSm
 32704 ;;		_Mdm_SendSmsData
 32705 ;;		_MdmHttp_InitGprsNetwork
 32706 ;;		_MdmHttp_GetMethod
 32707 ;;		_Alarm
 32708 ;; This function uses a non-reentrant model
 32709 ;;
 32710                           
 32711                           	psect	text154
 32712  00612E                     __ptext154:
 32713                           	opt stack 0
 32714  00612E                     _GenerateEvt:
 32715                           	opt stack 13
 32716                           
 32717                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 32718                           
 32719                           ; BSR set to: 0
 32720                           ;incstack = 0
 32721  00612E  0E00               	movlw	0
 32722  006130  0100               	movlb	0	; () banked
 32723  006132  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32724                           
 32725                           ; BSR set to: 0
 32726                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 32727  006134  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 32728  006138  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 32729  00613C  0E02               	movlw	2
 32730  00613E  6EDF               	movwf	indf2,c
 32731                           
 32732                           ; BSR set to: 0
 32733                           ;os_ser.c: 83: EventStatus = EventSent;
 32734  006140  0E02               	movlw	2
 32735  006142  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 32736  006144  0012               	return	
 32737  006146                     __end_of_GenerateEvt:
 32738                           	opt stack 0
 32739                           tosu	equ	0xFFF
 32740                           tosh	equ	0xFFE
 32741                           tosl	equ	0xFFD
 32742                           pclath	equ	0xFFA
 32743                           tblptru	equ	0xFF8
 32744                           tblptrh	equ	0xFF7
 32745                           tblptrl	equ	0xFF6
 32746                           tablat	equ	0xFF5
 32747                           prodh	equ	0xFF4
 32748                           prodl	equ	0xFF3
 32749                           intcon	equ	0xFF2
 32750                           intcon2	equ	0xFF1
 32751                           intcon3	equ	0xFF0
 32752                           indf0	equ	0xFEF
 32753                           postinc0	equ	0xFEE
 32754                           plusw0	equ	0xFEB
 32755                           fsr0h	equ	0xFEA
 32756                           fsr0l	equ	0xFE9
 32757                           wreg	equ	0xFE8
 32758                           indf1	equ	0xFE7
 32759                           postinc1	equ	0xFE6
 32760                           postdec1	equ	0xFE5
 32761                           plusw1	equ	0xFE3
 32762                           fsr1h	equ	0xFE2
 32763                           fsr1l	equ	0xFE1
 32764                           indf2	equ	0xFDF
 32765                           postinc2	equ	0xFDE
 32766                           postdec2	equ	0xFDD
 32767                           plusw2	equ	0xFDB
 32768                           fsr2h	equ	0xFDA
 32769                           fsr2l	equ	0xFD9
 32770                           status	equ	0xFD8
 32771                           
 32772 ;; *************** function _EnableReceiver *****************
 32773 ;; Defined at:
 32774 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32775 ;; Parameters:    Size  Location     Type
 32776 ;;		None
 32777 ;; Auto vars:     Size  Location     Type
 32778 ;;		None
 32779 ;; Return value:  Size  Location     Type
 32780 ;;                  1    wreg      void 
 32781 ;; Registers used:
 32782 ;;		status,2, status,0
 32783 ;; Tracked objects:
 32784 ;;		On entry : 0/0
 32785 ;;		On exit  : 0/0
 32786 ;;		Unchanged: 0/0
 32787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32792 ;;Total ram usage:        0 bytes
 32793 ;; Hardware stack levels used:    1
 32794 ;; Hardware stack levels required when called:   11
 32795 ;; This function calls:
 32796 ;;		Nothing
 32797 ;; This function is called by:
 32798 ;;		_I2c_ReadData
 32799 ;; This function uses a non-reentrant model
 32800 ;;
 32801                           
 32802                           	psect	text155
 32803  0062B2                     __ptext155:
 32804                           	opt stack 0
 32805  0062B2                     _EnableReceiver:
 32806                           	opt stack 14
 32807                           
 32808                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 32809                           
 32810                           ; BSR set to: 0
 32811                           ;incstack = 0
 32812  0062B2  8671               	bsf	3953,3,c	;volatile
 32813  0062B4  0012               	return		;funcret
 32814  0062B6                     __end_of_EnableReceiver:
 32815                           	opt stack 0
 32816                           tosu	equ	0xFFF
 32817                           tosh	equ	0xFFE
 32818                           tosl	equ	0xFFD
 32819                           pclath	equ	0xFFA
 32820                           tblptru	equ	0xFF8
 32821                           tblptrh	equ	0xFF7
 32822                           tblptrl	equ	0xFF6
 32823                           tablat	equ	0xFF5
 32824                           prodh	equ	0xFF4
 32825                           prodl	equ	0xFF3
 32826                           intcon	equ	0xFF2
 32827                           intcon2	equ	0xFF1
 32828                           intcon3	equ	0xFF0
 32829                           indf0	equ	0xFEF
 32830                           postinc0	equ	0xFEE
 32831                           plusw0	equ	0xFEB
 32832                           fsr0h	equ	0xFEA
 32833                           fsr0l	equ	0xFE9
 32834                           wreg	equ	0xFE8
 32835                           indf1	equ	0xFE7
 32836                           postinc1	equ	0xFE6
 32837                           postdec1	equ	0xFE5
 32838                           plusw1	equ	0xFE3
 32839                           fsr1h	equ	0xFE2
 32840                           fsr1l	equ	0xFE1
 32841                           indf2	equ	0xFDF
 32842                           postinc2	equ	0xFDE
 32843                           postdec2	equ	0xFDD
 32844                           plusw2	equ	0xFDB
 32845                           fsr2h	equ	0xFDA
 32846                           fsr2l	equ	0xFD9
 32847                           status	equ	0xFD8
 32848                           
 32849 ;; *************** function _CheckTxStatus *****************
 32850 ;; Defined at:
 32851 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32852 ;; Parameters:    Size  Location     Type
 32853 ;;		None
 32854 ;; Auto vars:     Size  Location     Type
 32855 ;;		None
 32856 ;; Return value:  Size  Location     Type
 32857 ;;                  1    wreg      unsigned char 
 32858 ;; Registers used:
 32859 ;;		wreg, status,2, status,0
 32860 ;; Tracked objects:
 32861 ;;		On entry : 0/0
 32862 ;;		On exit  : 0/0
 32863 ;;		Unchanged: 0/0
 32864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32869 ;;Total ram usage:        0 bytes
 32870 ;; Hardware stack levels used:    1
 32871 ;; Hardware stack levels required when called:   11
 32872 ;; This function calls:
 32873 ;;		Nothing
 32874 ;; This function is called by:
 32875 ;;		_I2c_WriteData
 32876 ;;		_I2c_ReadData
 32877 ;; This function uses a non-reentrant model
 32878 ;;
 32879                           
 32880                           	psect	text156
 32881  00627E                     __ptext156:
 32882                           	opt stack 0
 32883  00627E                     _CheckTxStatus:
 32884                           	opt stack 14
 32885                           
 32886                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 32887                           
 32888                           ;incstack = 0
 32889  00627E  4073               	rrncf	3955,w,c	;volatile
 32890  006280  42E8               	rrncf	wreg,f,c
 32891  006282  0B3F               	andlw	63
 32892  006284  0B01               	andlw	1
 32893  006286  0012               	return	
 32894  006288                     __end_of_CheckTxStatus:
 32895                           	opt stack 0
 32896                           tosu	equ	0xFFF
 32897                           tosh	equ	0xFFE
 32898                           tosl	equ	0xFFD
 32899                           pclath	equ	0xFFA
 32900                           tblptru	equ	0xFF8
 32901                           tblptrh	equ	0xFF7
 32902                           tblptrl	equ	0xFF6
 32903                           tablat	equ	0xFF5
 32904                           prodh	equ	0xFF4
 32905                           prodl	equ	0xFF3
 32906                           intcon	equ	0xFF2
 32907                           intcon2	equ	0xFF1
 32908                           intcon3	equ	0xFF0
 32909                           indf0	equ	0xFEF
 32910                           postinc0	equ	0xFEE
 32911                           plusw0	equ	0xFEB
 32912                           fsr0h	equ	0xFEA
 32913                           fsr0l	equ	0xFE9
 32914                           wreg	equ	0xFE8
 32915                           indf1	equ	0xFE7
 32916                           postinc1	equ	0xFE6
 32917                           postdec1	equ	0xFE5
 32918                           plusw1	equ	0xFE3
 32919                           fsr1h	equ	0xFE2
 32920                           fsr1l	equ	0xFE1
 32921                           indf2	equ	0xFDF
 32922                           postinc2	equ	0xFDE
 32923                           postdec2	equ	0xFDD
 32924                           plusw2	equ	0xFDB
 32925                           fsr2h	equ	0xFDA
 32926                           fsr2l	equ	0xFD9
 32927                           status	equ	0xFD8
 32928                           
 32929 ;; *************** function _CheckAckStatus *****************
 32930 ;; Defined at:
 32931 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 32932 ;; Parameters:    Size  Location     Type
 32933 ;;		None
 32934 ;; Auto vars:     Size  Location     Type
 32935 ;;		None
 32936 ;; Return value:  Size  Location     Type
 32937 ;;                  1    wreg      unsigned char 
 32938 ;; Registers used:
 32939 ;;		wreg, status,2, status,0
 32940 ;; Tracked objects:
 32941 ;;		On entry : 0/0
 32942 ;;		On exit  : 0/0
 32943 ;;		Unchanged: 0/0
 32944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32949 ;;Total ram usage:        0 bytes
 32950 ;; Hardware stack levels used:    1
 32951 ;; Hardware stack levels required when called:   11
 32952 ;; This function calls:
 32953 ;;		Nothing
 32954 ;; This function is called by:
 32955 ;;		_I2c_WriteData
 32956 ;;		_I2c_ReadData
 32957 ;; This function uses a non-reentrant model
 32958 ;;
 32959                           
 32960                           	psect	text157
 32961  006288                     __ptext157:
 32962                           	opt stack 0
 32963  006288                     _CheckAckStatus:
 32964                           	opt stack 14
 32965                           
 32966                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 32967                           
 32968                           ;incstack = 0
 32969  006288  4471               	rlncf	3953,w,c	;volatile
 32970  00628A  46E8               	rlncf	wreg,f,c
 32971  00628C  0B03               	andlw	3
 32972  00628E  0B01               	andlw	1
 32973  006290  0012               	return	
 32974  006292                     __end_of_CheckAckStatus:
 32975                           	opt stack 0
 32976                           tosu	equ	0xFFF
 32977                           tosh	equ	0xFFE
 32978                           tosl	equ	0xFFD
 32979                           pclath	equ	0xFFA
 32980                           tblptru	equ	0xFF8
 32981                           tblptrh	equ	0xFF7
 32982                           tblptrl	equ	0xFF6
 32983                           tablat	equ	0xFF5
 32984                           prodh	equ	0xFF4
 32985                           prodl	equ	0xFF3
 32986                           intcon	equ	0xFF2
 32987                           intcon2	equ	0xFF1
 32988                           intcon3	equ	0xFF0
 32989                           indf0	equ	0xFEF
 32990                           postinc0	equ	0xFEE
 32991                           plusw0	equ	0xFEB
 32992                           fsr0h	equ	0xFEA
 32993                           fsr0l	equ	0xFE9
 32994                           wreg	equ	0xFE8
 32995                           indf1	equ	0xFE7
 32996                           postinc1	equ	0xFE6
 32997                           postdec1	equ	0xFE5
 32998                           plusw1	equ	0xFE3
 32999                           fsr1h	equ	0xFE2
 33000                           fsr1l	equ	0xFE1
 33001                           indf2	equ	0xFDF
 33002                           postinc2	equ	0xFDE
 33003                           postdec2	equ	0xFDD
 33004                           plusw2	equ	0xFDB
 33005                           fsr2h	equ	0xFDA
 33006                           fsr2l	equ	0xFD9
 33007                           status	equ	0xFD8
 33008                           
 33009 ;; *************** function _LowPriorityIsr *****************
 33010 ;; Defined at:
 33011 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 33012 ;; Parameters:    Size  Location     Type
 33013 ;;		None
 33014 ;; Auto vars:     Size  Location     Type
 33015 ;;		None
 33016 ;; Return value:  Size  Location     Type
 33017 ;;                  1    wreg      void 
 33018 ;; Registers used:
 33019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33020 ;; Tracked objects:
 33021 ;;		On entry : 0/0
 33022 ;;		On exit  : 0/0
 33023 ;;		Unchanged: 0/0
 33024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33027 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33028 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33029 ;;Total ram usage:       21 bytes
 33030 ;; Hardware stack levels used:    1
 33031 ;; Hardware stack levels required when called:   10
 33032 ;; This function calls:
 33033 ;;		_Tmr_Tmr2Isr
 33034 ;; This function is called by:
 33035 ;;		Interrupt level 1
 33036 ;; This function uses a non-reentrant model
 33037 ;;
 33038                           
 33039                           	psect	intcodelo
 33040  000018                     __pintcodelo:
 33041                           	opt stack 0
 33042  000018                     _LowPriorityIsr:
 33043                           	opt stack 8
 33044                           
 33045                           ;incstack = 0
 33046  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 33047  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 33048  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 33049  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 33050  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 33051  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 33052  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 33053  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 33054  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 33055  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 33056  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 33057  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 33058  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 33059  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 33060  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 33061  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 33062  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 33063  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 33064  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 33065  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 33066  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 33067  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 33068                           
 33069                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 33070  00006E  B29E               	btfsc	3998,1,c	;volatile
 33071                           
 33072                           ;irq.c: 259: {
 33073                           ;irq.c: 261: Tmr_Tmr2Isr();
 33074  000070  EC87  F02F         	call	_Tmr_Tmr2Isr	;wreg free
 33075  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 33076  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 33077  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 33078  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 33079  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 33080  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 33081  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 33082  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 33083  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 33084  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 33085  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 33086  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 33087  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 33088  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 33089  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 33090  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 33091  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 33092  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 33093  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 33094  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 33095  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 33096  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 33097  0000CA  0010               	retfie	
 33098  0000CC                     __end_of_LowPriorityIsr:
 33099                           	opt stack 0
 33100                           tosu	equ	0xFFF
 33101                           tosh	equ	0xFFE
 33102                           tosl	equ	0xFFD
 33103                           pclatu	equ	0xFFB
 33104                           pclath	equ	0xFFA
 33105                           tblptru	equ	0xFF8
 33106                           tblptrh	equ	0xFF7
 33107                           tblptrl	equ	0xFF6
 33108                           tablat	equ	0xFF5
 33109                           prodh	equ	0xFF4
 33110                           prodl	equ	0xFF3
 33111                           intcon	equ	0xFF2
 33112                           intcon2	equ	0xFF1
 33113                           intcon3	equ	0xFF0
 33114                           indf0	equ	0xFEF
 33115                           postinc0	equ	0xFEE
 33116                           plusw0	equ	0xFEB
 33117                           fsr0h	equ	0xFEA
 33118                           fsr0l	equ	0xFE9
 33119                           wreg	equ	0xFE8
 33120                           indf1	equ	0xFE7
 33121                           postinc1	equ	0xFE6
 33122                           postdec1	equ	0xFE5
 33123                           plusw1	equ	0xFE3
 33124                           fsr1h	equ	0xFE2
 33125                           fsr1l	equ	0xFE1
 33126                           bsr	equ	0xFE0
 33127                           indf2	equ	0xFDF
 33128                           postinc2	equ	0xFDE
 33129                           postdec2	equ	0xFDD
 33130                           plusw2	equ	0xFDB
 33131                           fsr2h	equ	0xFDA
 33132                           fsr2l	equ	0xFD9
 33133                           status	equ	0xFD8
 33134                           
 33135 ;; *************** function _Tmr_Tmr2Isr *****************
 33136 ;; Defined at:
 33137 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 33138 ;; Parameters:    Size  Location     Type
 33139 ;;		None
 33140 ;; Auto vars:     Size  Location     Type
 33141 ;;		None
 33142 ;; Return value:  Size  Location     Type
 33143 ;;                  1    wreg      void 
 33144 ;; Registers used:
 33145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33146 ;; Tracked objects:
 33147 ;;		On entry : 0/0
 33148 ;;		On exit  : 0/0
 33149 ;;		Unchanged: 0/0
 33150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33155 ;;Total ram usage:        0 bytes
 33156 ;; Hardware stack levels used:    1
 33157 ;; Hardware stack levels required when called:    9
 33158 ;; This function calls:
 33159 ;;		Absolute function
 33160 ;;		_Sch_SchmIntService
 33161 ;; This function is called by:
 33162 ;;		_LowPriorityIsr
 33163 ;; This function uses a non-reentrant model
 33164 ;;
 33165                           
 33166                           	psect	text159
 33167  005F0E                     __ptext159:
 33168                           	opt stack 0
 33169  005F0E                     _Tmr_Tmr2Isr:
 33170                           	opt stack 8
 33171                           
 33172                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 33173                           
 33174                           ;incstack = 0
 33175  005F0E  929E               	bcf	3998,1,c	;volatile
 33176                           
 33177                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 33178  005F10  0101               	movlb	1	; () banked
 33179  005F12  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 33180  005F14  11D4               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33181  005F16  B4D8               	btfsc	status,2,c
 33182  005F18  0012               	return	
 33183                           
 33184                           ; BSR set to: 1
 33185                           ;tmr_drv.c: 315: {
 33186                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 33187  005F1A  D801               	call	i1u1483_28
 33188  005F1C  0012               	return	
 33189  005F1E                     i1u1483_28:
 33190  005F1E  0005               	push	
 33191  005F20  6EFA               	movwf	pclath,c
 33192  005F22  51D3               	movf	_Tmr2IsrCallback& (0+255),w,b
 33193  005F24  6EFD               	movwf	tosl,c
 33194  005F26  51D4               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 33195  005F28  6EFE               	movwf	tosh,c
 33196  005F2A  50F8               	movf	tblptru,w,c
 33197  005F2C  6EFF               	movwf	tosu,c
 33198  005F2E  50FA               	movf	pclath,w,c
 33199  005F30  0012               	return		;indir
 33200  005F32                     __end_of_Tmr_Tmr2Isr:
 33201                           	opt stack 0
 33202                           tosu	equ	0xFFF
 33203                           tosh	equ	0xFFE
 33204                           tosl	equ	0xFFD
 33205                           pclatu	equ	0xFFB
 33206                           pclath	equ	0xFFA
 33207                           tblptru	equ	0xFF8
 33208                           tblptrh	equ	0xFF7
 33209                           tblptrl	equ	0xFF6
 33210                           tablat	equ	0xFF5
 33211                           prodh	equ	0xFF4
 33212                           prodl	equ	0xFF3
 33213                           intcon	equ	0xFF2
 33214                           intcon2	equ	0xFF1
 33215                           intcon3	equ	0xFF0
 33216                           indf0	equ	0xFEF
 33217                           postinc0	equ	0xFEE
 33218                           plusw0	equ	0xFEB
 33219                           fsr0h	equ	0xFEA
 33220                           fsr0l	equ	0xFE9
 33221                           wreg	equ	0xFE8
 33222                           indf1	equ	0xFE7
 33223                           postinc1	equ	0xFE6
 33224                           postdec1	equ	0xFE5
 33225                           plusw1	equ	0xFE3
 33226                           fsr1h	equ	0xFE2
 33227                           fsr1l	equ	0xFE1
 33228                           bsr	equ	0xFE0
 33229                           indf2	equ	0xFDF
 33230                           postinc2	equ	0xFDE
 33231                           postdec2	equ	0xFDD
 33232                           plusw2	equ	0xFDB
 33233                           fsr2h	equ	0xFDA
 33234                           fsr2l	equ	0xFD9
 33235                           status	equ	0xFD8
 33236                           
 33237 ;; *************** function _Sch_SchmIntService *****************
 33238 ;; Defined at:
 33239 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33240 ;; Parameters:    Size  Location     Type
 33241 ;;		None
 33242 ;; Auto vars:     Size  Location     Type
 33243 ;;		None
 33244 ;; Return value:  Size  Location     Type
 33245 ;;                  1    wreg      void 
 33246 ;; Registers used:
 33247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33248 ;; Tracked objects:
 33249 ;;		On entry : 0/0
 33250 ;;		On exit  : 0/0
 33251 ;;		Unchanged: 0/0
 33252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33257 ;;Total ram usage:        0 bytes
 33258 ;; Hardware stack levels used:    1
 33259 ;; Hardware stack levels required when called:    8
 33260 ;; This function calls:
 33261 ;;		_OsAlrm_ProcessOsAlarms
 33262 ;;		_UpdateOsCounters
 33263 ;;		_UpdateSchFlag
 33264 ;; This function is called by:
 33265 ;;		_SystemInit
 33266 ;;		_Tmr_Tmr2Isr
 33267 ;; This function uses a non-reentrant model
 33268 ;;
 33269                           
 33270                           	psect	text160
 33271  006238                     __ptext160:
 33272                           	opt stack 0
 33273  006238                     _Sch_SchmIntService:
 33274                           	opt stack 8
 33275                           
 33276                           ;os_sched.c: 217: UpdateSchFlag();
 33277                           
 33278                           ;incstack = 0
 33279  006238  EC3D  F030         	call	_UpdateSchFlag	;wreg free
 33280                           
 33281                           ;os_sched.c: 219: UpdateOsCounters();
 33282  00623C  EC0C  F031         	call	_UpdateOsCounters	;wreg free
 33283                           
 33284                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 33285  006240  EC6B  F011         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 33286  006244  0012               	return		;funcret
 33287  006246                     __end_of_Sch_SchmIntService:
 33288                           	opt stack 0
 33289                           tosu	equ	0xFFF
 33290                           tosh	equ	0xFFE
 33291                           tosl	equ	0xFFD
 33292                           pclatu	equ	0xFFB
 33293                           pclath	equ	0xFFA
 33294                           tblptru	equ	0xFF8
 33295                           tblptrh	equ	0xFF7
 33296                           tblptrl	equ	0xFF6
 33297                           tablat	equ	0xFF5
 33298                           prodh	equ	0xFF4
 33299                           prodl	equ	0xFF3
 33300                           intcon	equ	0xFF2
 33301                           intcon2	equ	0xFF1
 33302                           intcon3	equ	0xFF0
 33303                           indf0	equ	0xFEF
 33304                           postinc0	equ	0xFEE
 33305                           plusw0	equ	0xFEB
 33306                           fsr0h	equ	0xFEA
 33307                           fsr0l	equ	0xFE9
 33308                           wreg	equ	0xFE8
 33309                           indf1	equ	0xFE7
 33310                           postinc1	equ	0xFE6
 33311                           postdec1	equ	0xFE5
 33312                           plusw1	equ	0xFE3
 33313                           fsr1h	equ	0xFE2
 33314                           fsr1l	equ	0xFE1
 33315                           bsr	equ	0xFE0
 33316                           indf2	equ	0xFDF
 33317                           postinc2	equ	0xFDE
 33318                           postdec2	equ	0xFDD
 33319                           plusw2	equ	0xFDB
 33320                           fsr2h	equ	0xFDA
 33321                           fsr2l	equ	0xFD9
 33322                           status	equ	0xFD8
 33323                           
 33324 ;; *************** function _UpdateSchFlag *****************
 33325 ;; Defined at:
 33326 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33327 ;; Parameters:    Size  Location     Type
 33328 ;;		None
 33329 ;; Auto vars:     Size  Location     Type
 33330 ;;		None
 33331 ;; Return value:  Size  Location     Type
 33332 ;;                  1    wreg      void 
 33333 ;; Registers used:
 33334 ;;		wreg, status,2, status,0
 33335 ;; Tracked objects:
 33336 ;;		On entry : 0/0
 33337 ;;		On exit  : 0/0
 33338 ;;		Unchanged: 0/0
 33339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33344 ;;Total ram usage:        0 bytes
 33345 ;; Hardware stack levels used:    1
 33346 ;; Hardware stack levels required when called:    4
 33347 ;; This function calls:
 33348 ;;		Nothing
 33349 ;; This function is called by:
 33350 ;;		_Sch_SchmIntService
 33351 ;; This function uses a non-reentrant model
 33352 ;;
 33353                           
 33354                           	psect	text161
 33355  00607A                     __ptext161:
 33356                           	opt stack 0
 33357  00607A                     _UpdateSchFlag:
 33358                           	opt stack 11
 33359                           
 33360                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 33361                           ;os_sched.c: 138: InterruptCounter++;
 33362                           
 33363                           ;incstack = 0
 33364  00607A  0102               	movlb	2	; () banked
 33365  00607C  4BDE               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 33366  00607E  2BDF               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 33367                           
 33368                           ; BSR set to: 2
 33369                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 33370  006080  51DE               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 33371  006082  11DF               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 33372  006084  B4D8               	btfsc	status,2,c
 33373  006086  0012               	return	
 33374                           
 33375                           ; BSR set to: 2
 33376                           ;os_sched.c: 141: {
 33377                           ;os_sched.c: 143: InterruptCounter = 0;
 33378  006088  0E00               	movlw	0
 33379  00608A  6FDF               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 33380  00608C  0E00               	movlw	0
 33381  00608E  6FDE               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 33382                           
 33383                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 33384  006090  0E00               	movlw	0
 33385  006092  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 33386  006094  0012               	return	
 33387  006096                     __end_of_UpdateSchFlag:
 33388                           	opt stack 0
 33389                           tosu	equ	0xFFF
 33390                           tosh	equ	0xFFE
 33391                           tosl	equ	0xFFD
 33392                           pclatu	equ	0xFFB
 33393                           pclath	equ	0xFFA
 33394                           tblptru	equ	0xFF8
 33395                           tblptrh	equ	0xFF7
 33396                           tblptrl	equ	0xFF6
 33397                           tablat	equ	0xFF5
 33398                           prodh	equ	0xFF4
 33399                           prodl	equ	0xFF3
 33400                           intcon	equ	0xFF2
 33401                           intcon2	equ	0xFF1
 33402                           intcon3	equ	0xFF0
 33403                           indf0	equ	0xFEF
 33404                           postinc0	equ	0xFEE
 33405                           plusw0	equ	0xFEB
 33406                           fsr0h	equ	0xFEA
 33407                           fsr0l	equ	0xFE9
 33408                           wreg	equ	0xFE8
 33409                           indf1	equ	0xFE7
 33410                           postinc1	equ	0xFE6
 33411                           postdec1	equ	0xFE5
 33412                           plusw1	equ	0xFE3
 33413                           fsr1h	equ	0xFE2
 33414                           fsr1l	equ	0xFE1
 33415                           bsr	equ	0xFE0
 33416                           indf2	equ	0xFDF
 33417                           postinc2	equ	0xFDE
 33418                           postdec2	equ	0xFDD
 33419                           plusw2	equ	0xFDB
 33420                           fsr2h	equ	0xFDA
 33421                           fsr2l	equ	0xFD9
 33422                           status	equ	0xFD8
 33423                           
 33424 ;; *************** function _UpdateOsCounters *****************
 33425 ;; Defined at:
 33426 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 33427 ;; Parameters:    Size  Location     Type
 33428 ;;		None
 33429 ;; Auto vars:     Size  Location     Type
 33430 ;;		None
 33431 ;; Return value:  Size  Location     Type
 33432 ;;                  1    wreg      void 
 33433 ;; Registers used:
 33434 ;;		wreg, status,2, status,0
 33435 ;; Tracked objects:
 33436 ;;		On entry : 0/0
 33437 ;;		On exit  : 0/0
 33438 ;;		Unchanged: 0/0
 33439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33444 ;;Total ram usage:        0 bytes
 33445 ;; Hardware stack levels used:    1
 33446 ;; Hardware stack levels required when called:    4
 33447 ;; This function calls:
 33448 ;;		Nothing
 33449 ;; This function is called by:
 33450 ;;		_Sch_SchmIntService
 33451 ;; This function uses a non-reentrant model
 33452 ;;
 33453                           
 33454                           	psect	text162
 33455  006218                     __ptext162:
 33456                           	opt stack 0
 33457  006218                     _UpdateOsCounters:
 33458                           	opt stack 11
 33459                           
 33460                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 33461                           
 33462                           ; BSR set to: 2
 33463                           ;incstack = 0
 33464  006218  0E01               	movlw	1
 33465  00621A  0103               	movlb	3	; () banked
 33466  00621C  271C               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 33467  00621E  0E00               	movlw	0
 33468  006220  231D               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 33469  006222  231E               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 33470  006224  231F               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 33471                           
 33472                           ; BSR set to: 3
 33473  006226  0012               	return		;funcret
 33474  006228                     __end_of_UpdateOsCounters:
 33475                           	opt stack 0
 33476                           tosu	equ	0xFFF
 33477                           tosh	equ	0xFFE
 33478                           tosl	equ	0xFFD
 33479                           pclatu	equ	0xFFB
 33480                           pclath	equ	0xFFA
 33481                           tblptru	equ	0xFF8
 33482                           tblptrh	equ	0xFF7
 33483                           tblptrl	equ	0xFF6
 33484                           tablat	equ	0xFF5
 33485                           prodh	equ	0xFF4
 33486                           prodl	equ	0xFF3
 33487                           intcon	equ	0xFF2
 33488                           intcon2	equ	0xFF1
 33489                           intcon3	equ	0xFF0
 33490                           indf0	equ	0xFEF
 33491                           postinc0	equ	0xFEE
 33492                           plusw0	equ	0xFEB
 33493                           fsr0h	equ	0xFEA
 33494                           fsr0l	equ	0xFE9
 33495                           wreg	equ	0xFE8
 33496                           indf1	equ	0xFE7
 33497                           postinc1	equ	0xFE6
 33498                           postdec1	equ	0xFE5
 33499                           plusw1	equ	0xFE3
 33500                           fsr1h	equ	0xFE2
 33501                           fsr1l	equ	0xFE1
 33502                           bsr	equ	0xFE0
 33503                           indf2	equ	0xFDF
 33504                           postinc2	equ	0xFDE
 33505                           postdec2	equ	0xFDD
 33506                           plusw2	equ	0xFDB
 33507                           fsr2h	equ	0xFDA
 33508                           fsr2l	equ	0xFD9
 33509                           status	equ	0xFD8
 33510                           
 33511 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 33512 ;; Defined at:
 33513 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33514 ;; Parameters:    Size  Location     Type
 33515 ;;		None
 33516 ;; Auto vars:     Size  Location     Type
 33517 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 33518 ;; Return value:  Size  Location     Type
 33519 ;;                  1    wreg      void 
 33520 ;; Registers used:
 33521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33522 ;; Tracked objects:
 33523 ;;		On entry : 0/0
 33524 ;;		On exit  : 0/0
 33525 ;;		Unchanged: 0/0
 33526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33529 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33530 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33531 ;;Total ram usage:       10 bytes
 33532 ;; Hardware stack levels used:    1
 33533 ;; Hardware stack levels required when called:    7
 33534 ;; This function calls:
 33535 ;;		_I2cDummyTx
 33536 ;;		_OsAlrm_ClearOsAlarm
 33537 ;;		i1___wmul
 33538 ;; This function is called by:
 33539 ;;		_Sch_SchmIntService
 33540 ;; This function uses a non-reentrant model
 33541 ;;
 33542                           
 33543                           	psect	text163
 33544  0022D6                     __ptext163:
 33545                           	opt stack 0
 33546  0022D6                     _OsAlrm_ProcessOsAlarms:
 33547                           	opt stack 8
 33548                           
 33549                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 33550                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 33551                           
 33552                           ; BSR set to: 3
 33553                           ;incstack = 0
 33554  0022D6  0E00               	movlw	0
 33555  0022D8  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 33556  0022DA  0E00               	movlw	0
 33557  0022DC  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 33558  0022DE  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33559  0022E0  E105               	bnz	i1u1454_20
 33560  0022E2  0E14               	movlw	20
 33561  0022E4  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33562  0022E6  B0D8               	btfsc	status,0,c
 33563  0022E8  0012               	return	
 33564  0022EA  D001               	goto	i1l742
 33565  0022EC                     i1u1454_20:
 33566  0022EC  0012               	return	
 33567  0022EE                     i1l742:
 33568                           
 33569                           ;os_alarms.c: 121: {
 33570                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 33571  0022EE  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33572  0022F2  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33573  0022F6  0E00               	movlw	0
 33574  0022F8  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33575  0022FA  0E0B               	movlw	11
 33576  0022FC  6E1B               	movwf	i1___wmul@multiplicand,c
 33577  0022FE  EC3E  F02F         	call	i1___wmul	;wreg free
 33578  002302  0E00               	movlw	low _OsAlarms
 33579  002304  2419               	addwf	?i1___wmul,w,c
 33580  002306  6ED9               	movwf	fsr2l,c
 33581  002308  0E06               	movlw	high _OsAlarms
 33582  00230A  201A               	addwfc	?i1___wmul+1,w,c
 33583  00230C  6EDA               	movwf	fsr2h,c
 33584  00230E  04DE               	decf	postinc2,w,c
 33585  002310  A4D8               	btfss	status,2,c
 33586  002312  D086               	goto	i1u1458_29
 33587                           
 33588                           ;os_alarms.c: 124: {
 33589                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 33590  002314  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33591  002318  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33592  00231C  0E00               	movlw	0
 33593  00231E  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33594  002320  0E0B               	movlw	11
 33595  002322  6E1B               	movwf	i1___wmul@multiplicand,c
 33596  002324  EC3E  F02F         	call	i1___wmul	;wreg free
 33597  002328  0E01               	movlw	1
 33598  00232A  2619               	addwf	?i1___wmul,f,c
 33599  00232C  0E00               	movlw	0
 33600  00232E  221A               	addwfc	?i1___wmul+1,f,c
 33601  002330  0E00               	movlw	low _OsAlarms
 33602  002332  2419               	addwf	?i1___wmul,w,c
 33603  002334  6ED9               	movwf	fsr2l,c
 33604  002336  0E06               	movlw	high _OsAlarms
 33605  002338  201A               	addwfc	?i1___wmul+1,w,c
 33606  00233A  6EDA               	movwf	fsr2h,c
 33607  00233C  2ADE               	incf	postinc2,f,c
 33608  00233E  0E00               	movlw	0
 33609  002340  22DE               	addwfc	postinc2,f,c
 33610  002342  22DE               	addwfc	postinc2,f,c
 33611  002344  22DE               	addwfc	postinc2,f,c
 33612                           
 33613                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 33614  002346  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33615  00234A  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33616  00234E  0E00               	movlw	0
 33617  002350  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33618  002352  0E0B               	movlw	11
 33619  002354  6E1B               	movwf	i1___wmul@multiplicand,c
 33620  002356  EC3E  F02F         	call	i1___wmul	;wreg free
 33621  00235A  0E05               	movlw	5
 33622  00235C  2619               	addwf	?i1___wmul,f,c
 33623  00235E  0E00               	movlw	0
 33624  002360  221A               	addwfc	?i1___wmul+1,f,c
 33625  002362  0E00               	movlw	low _OsAlarms
 33626  002364  2419               	addwf	?i1___wmul,w,c
 33627  002366  6ED9               	movwf	fsr2l,c
 33628  002368  0E06               	movlw	high _OsAlarms
 33629  00236A  201A               	addwfc	?i1___wmul+1,w,c
 33630  00236C  6EDA               	movwf	fsr2h,c
 33631  00236E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33632  002372  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33633  002376  0E00               	movlw	0
 33634  002378  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33635  00237A  0E0B               	movlw	11
 33636  00237C  6E1B               	movwf	i1___wmul@multiplicand,c
 33637  00237E  EC3E  F02F         	call	i1___wmul	;wreg free
 33638  002382  0E01               	movlw	1
 33639  002384  2619               	addwf	?i1___wmul,f,c
 33640  002386  0E00               	movlw	0
 33641  002388  221A               	addwfc	?i1___wmul+1,f,c
 33642  00238A  0E00               	movlw	low _OsAlarms
 33643  00238C  2419               	addwf	?i1___wmul,w,c
 33644  00238E  6EE1               	movwf	fsr1l,c
 33645  002390  0E06               	movlw	high _OsAlarms
 33646  002392  201A               	addwfc	?i1___wmul+1,w,c
 33647  002394  6EE2               	movwf	fsr1h,c
 33648  002396  50DE               	movf	postinc2,w,c
 33649  002398  5CE6               	subwf	postinc1,w,c
 33650  00239A  50DE               	movf	postinc2,w,c
 33651  00239C  58E6               	subwfb	postinc1,w,c
 33652  00239E  50DE               	movf	postinc2,w,c
 33653  0023A0  58E6               	subwfb	postinc1,w,c
 33654  0023A2  50DE               	movf	postinc2,w,c
 33655  0023A4  58E6               	subwfb	postinc1,w,c
 33656  0023A6  A0D8               	btfss	status,0,c
 33657  0023A8  D03B               	goto	i1u1458_29
 33658                           
 33659                           ;os_alarms.c: 129: {
 33660                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 33661  0023AA  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 33662  0023AC  EC80  F029         	call	_OsAlrm_ClearOsAlarm
 33663                           
 33664                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 33665  0023B0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33666  0023B4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33667  0023B8  0E00               	movlw	0
 33668  0023BA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33669  0023BC  0E0B               	movlw	11
 33670  0023BE  6E1B               	movwf	i1___wmul@multiplicand,c
 33671  0023C0  EC3E  F02F         	call	i1___wmul	;wreg free
 33672  0023C4  0E09               	movlw	9
 33673  0023C6  2619               	addwf	?i1___wmul,f,c
 33674  0023C8  0E00               	movlw	0
 33675  0023CA  221A               	addwfc	?i1___wmul+1,f,c
 33676  0023CC  0E00               	movlw	low _OsAlarms
 33677  0023CE  2419               	addwf	?i1___wmul,w,c
 33678  0023D0  6ED9               	movwf	fsr2l,c
 33679  0023D2  0E06               	movlw	high _OsAlarms
 33680  0023D4  201A               	addwfc	?i1___wmul+1,w,c
 33681  0023D6  6EDA               	movwf	fsr2h,c
 33682  0023D8  50DE               	movf	postinc2,w,c
 33683  0023DA  10DE               	iorwf	postinc2,w,c
 33684  0023DC  B4D8               	btfsc	status,2,c
 33685  0023DE  D020               	goto	i1u1458_29
 33686                           
 33687                           ;os_alarms.c: 134: {
 33688                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 33689  0023E0  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 33690  0023E4  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 33691  0023E8  0E00               	movlw	0
 33692  0023EA  6E1C               	movwf	i1___wmul@multiplicand+1,c
 33693  0023EC  0E0B               	movlw	11
 33694  0023EE  6E1B               	movwf	i1___wmul@multiplicand,c
 33695  0023F0  EC3E  F02F         	call	i1___wmul	;wreg free
 33696  0023F4  0E09               	movlw	9
 33697  0023F6  2619               	addwf	?i1___wmul,f,c
 33698  0023F8  0E00               	movlw	0
 33699  0023FA  221A               	addwfc	?i1___wmul+1,f,c
 33700  0023FC  0E00               	movlw	low _OsAlarms
 33701  0023FE  2419               	addwf	?i1___wmul,w,c
 33702  002400  6ED9               	movwf	fsr2l,c
 33703  002402  0E06               	movlw	high _OsAlarms
 33704  002404  201A               	addwfc	?i1___wmul+1,w,c
 33705  002406  6EDA               	movwf	fsr2h,c
 33706  002408  D801               	call	i1u1458_28
 33707  00240A  D00A               	goto	i1u1458_29
 33708  00240C                     i1u1458_28:
 33709  00240C  0005               	push	
 33710  00240E  6EFA               	movwf	pclath,c
 33711  002410  50DE               	movf	postinc2,w,c
 33712  002412  6EFD               	movwf	tosl,c
 33713  002414  50DE               	movf	postinc2,w,c
 33714  002416  6EFE               	movwf	tosh,c
 33715  002418  50F8               	movf	tblptru,w,c
 33716  00241A  6EFF               	movwf	tosu,c
 33717  00241C  50FA               	movf	pclath,w,c
 33718  00241E  0012               	return		;indir
 33719  002420                     i1u1458_29:
 33720  002420  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 33721  002422  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 33722  002424  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 33723  002426  E101               	bnz	i1l747
 33724  002428  D75C               	goto	L73
 33725  00242A                     i1l747:
 33726  00242A  0012               	return		;funcret
 33727  00242C                     __end_of_OsAlrm_ProcessOsAlarms:
 33728                           	opt stack 0
 33729                           tosu	equ	0xFFF
 33730                           tosh	equ	0xFFE
 33731                           tosl	equ	0xFFD
 33732                           pclatu	equ	0xFFB
 33733                           pclath	equ	0xFFA
 33734                           tblptru	equ	0xFF8
 33735                           tblptrh	equ	0xFF7
 33736                           tblptrl	equ	0xFF6
 33737                           tablat	equ	0xFF5
 33738                           prodh	equ	0xFF4
 33739                           prodl	equ	0xFF3
 33740                           intcon	equ	0xFF2
 33741                           intcon2	equ	0xFF1
 33742                           intcon3	equ	0xFF0
 33743                           indf0	equ	0xFEF
 33744                           postinc0	equ	0xFEE
 33745                           plusw0	equ	0xFEB
 33746                           fsr0h	equ	0xFEA
 33747                           fsr0l	equ	0xFE9
 33748                           wreg	equ	0xFE8
 33749                           indf1	equ	0xFE7
 33750                           postinc1	equ	0xFE6
 33751                           postdec1	equ	0xFE5
 33752                           plusw1	equ	0xFE3
 33753                           fsr1h	equ	0xFE2
 33754                           fsr1l	equ	0xFE1
 33755                           bsr	equ	0xFE0
 33756                           indf2	equ	0xFDF
 33757                           postinc2	equ	0xFDE
 33758                           postdec2	equ	0xFDD
 33759                           plusw2	equ	0xFDB
 33760                           fsr2h	equ	0xFDA
 33761                           fsr2l	equ	0xFD9
 33762                           status	equ	0xFD8
 33763                           
 33764 ;; *************** function i1___wmul *****************
 33765 ;; Defined at:
 33766 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 33767 ;; Parameters:    Size  Location     Type
 33768 ;;  multiplier      2   24[COMRAM] unsigned int 
 33769 ;;  multiplicand    2   26[COMRAM] unsigned int 
 33770 ;; Auto vars:     Size  Location     Type
 33771 ;;  __wmul          2   28[COMRAM] unsigned int 
 33772 ;; Return value:  Size  Location     Type
 33773 ;;                  2   24[COMRAM] unsigned int 
 33774 ;; Registers used:
 33775 ;;		wreg, status,2, status,0, prodl, prodh
 33776 ;; Tracked objects:
 33777 ;;		On entry : 0/0
 33778 ;;		On exit  : 0/0
 33779 ;;		Unchanged: 0/0
 33780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33784 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33785 ;;Total ram usage:        6 bytes
 33786 ;; Hardware stack levels used:    1
 33787 ;; Hardware stack levels required when called:    4
 33788 ;; This function calls:
 33789 ;;		Nothing
 33790 ;; This function is called by:
 33791 ;;		_OsAlrm_ProcessOsAlarms
 33792 ;; This function uses a non-reentrant model
 33793 ;;
 33794                           
 33795                           	psect	text164
 33796  005E7C                     __ptext164:
 33797                           	opt stack 0
 33798  005E7C                     i1___wmul:
 33799                           	opt stack 10
 33800                           
 33801                           ;incstack = 0
 33802  005E7C  5019               	movf	i1___wmul@multiplier,w,c
 33803  005E7E  021B               	mulwf	i1___wmul@multiplicand,c
 33804  005E80  CFF3 F01D          	movff	prodl,i1___wmul@product
 33805  005E84  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 33806  005E88  5019               	movf	i1___wmul@multiplier,w,c
 33807  005E8A  021C               	mulwf	i1___wmul@multiplicand+1,c
 33808  005E8C  50F3               	movf	prodl,w,c
 33809  005E8E  261E               	addwf	i1___wmul@product+1,f,c
 33810  005E90  501A               	movf	i1___wmul@multiplier+1,w,c
 33811  005E92  021B               	mulwf	i1___wmul@multiplicand,c
 33812  005E94  50F3               	movf	prodl,w,c
 33813  005E96  261E               	addwf	i1___wmul@product+1,f,c
 33814  005E98  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 33815  005E9C  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 33816  005EA0  0012               	return	
 33817  005EA2                     __end_ofi1___wmul:
 33818                           	opt stack 0
 33819                           tosu	equ	0xFFF
 33820                           tosh	equ	0xFFE
 33821                           tosl	equ	0xFFD
 33822                           pclatu	equ	0xFFB
 33823                           pclath	equ	0xFFA
 33824                           tblptru	equ	0xFF8
 33825                           tblptrh	equ	0xFF7
 33826                           tblptrl	equ	0xFF6
 33827                           tablat	equ	0xFF5
 33828                           prodh	equ	0xFF4
 33829                           prodl	equ	0xFF3
 33830                           intcon	equ	0xFF2
 33831                           intcon2	equ	0xFF1
 33832                           intcon3	equ	0xFF0
 33833                           indf0	equ	0xFEF
 33834                           postinc0	equ	0xFEE
 33835                           plusw0	equ	0xFEB
 33836                           fsr0h	equ	0xFEA
 33837                           fsr0l	equ	0xFE9
 33838                           wreg	equ	0xFE8
 33839                           indf1	equ	0xFE7
 33840                           postinc1	equ	0xFE6
 33841                           postdec1	equ	0xFE5
 33842                           plusw1	equ	0xFE3
 33843                           fsr1h	equ	0xFE2
 33844                           fsr1l	equ	0xFE1
 33845                           bsr	equ	0xFE0
 33846                           indf2	equ	0xFDF
 33847                           postinc2	equ	0xFDE
 33848                           postdec2	equ	0xFDD
 33849                           plusw2	equ	0xFDB
 33850                           fsr2h	equ	0xFDA
 33851                           fsr2l	equ	0xFD9
 33852                           status	equ	0xFD8
 33853                           
 33854 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 33855 ;; Defined at:
 33856 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 33857 ;; Parameters:    Size  Location     Type
 33858 ;;  OsAlarmId       1    wreg     unsigned char 
 33859 ;; Auto vars:     Size  Location     Type
 33860 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 33861 ;; Return value:  Size  Location     Type
 33862 ;;                  1    wreg      void 
 33863 ;; Registers used:
 33864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33865 ;; Tracked objects:
 33866 ;;		On entry : 0/0
 33867 ;;		On exit  : 0/0
 33868 ;;		Unchanged: 0/0
 33869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33874 ;;Total ram usage:        1 bytes
 33875 ;; Hardware stack levels used:    1
 33876 ;; Hardware stack levels required when called:    4
 33877 ;; This function calls:
 33878 ;;		Nothing
 33879 ;; This function is called by:
 33880 ;;		_OsAlrm_ProcessOsAlarms
 33881 ;; This function uses a non-reentrant model
 33882 ;;
 33883                           
 33884                           	psect	text165
 33885  005300                     __ptext165:
 33886                           	opt stack 0
 33887  005300                     _OsAlrm_ClearOsAlarm:
 33888                           	opt stack 10
 33889                           
 33890                           ;incstack = 0
 33891                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 33892  005300  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 33893                           
 33894                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 33895  005302  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33896  005304  0D0B               	mullw	11
 33897  005306  0E00               	movlw	low _OsAlarms
 33898  005308  24F3               	addwf	prodl,w,c
 33899  00530A  6ED9               	movwf	fsr2l,c
 33900  00530C  0E06               	movlw	high _OsAlarms
 33901  00530E  20F4               	addwfc	prodh,w,c
 33902  005310  6EDA               	movwf	fsr2h,c
 33903  005312  0E00               	movlw	0
 33904  005314  6EDF               	movwf	indf2,c
 33905                           
 33906                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 33907  005316  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33908  005318  0D0B               	mullw	11
 33909  00531A  0E01               	movlw	1
 33910  00531C  26F3               	addwf	prodl,f,c
 33911  00531E  0E00               	movlw	0
 33912  005320  22F4               	addwfc	prodh,f,c
 33913  005322  0E00               	movlw	low _OsAlarms
 33914  005324  24F3               	addwf	prodl,w,c
 33915  005326  6ED9               	movwf	fsr2l,c
 33916  005328  0E06               	movlw	high _OsAlarms
 33917  00532A  20F4               	addwfc	prodh,w,c
 33918  00532C  6EDA               	movwf	fsr2h,c
 33919  00532E  6ADE               	clrf	postinc2,c
 33920  005330  6ADE               	clrf	postinc2,c
 33921  005332  6ADE               	clrf	postinc2,c
 33922  005334  6ADD               	clrf	postdec2,c
 33923                           
 33924                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 33925  005336  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 33926  005338  0D0B               	mullw	11
 33927  00533A  0E05               	movlw	5
 33928  00533C  26F3               	addwf	prodl,f,c
 33929  00533E  0E00               	movlw	0
 33930  005340  22F4               	addwfc	prodh,f,c
 33931  005342  0E00               	movlw	low _OsAlarms
 33932  005344  24F3               	addwf	prodl,w,c
 33933  005346  6ED9               	movwf	fsr2l,c
 33934  005348  0E06               	movlw	high _OsAlarms
 33935  00534A  20F4               	addwfc	prodh,w,c
 33936  00534C  6EDA               	movwf	fsr2h,c
 33937  00534E  6ADE               	clrf	postinc2,c
 33938  005350  6ADE               	clrf	postinc2,c
 33939  005352  6ADE               	clrf	postinc2,c
 33940  005354  6ADD               	clrf	postdec2,c
 33941  005356  0012               	return		;funcret
 33942  005358                     __end_of_OsAlrm_ClearOsAlarm:
 33943                           	opt stack 0
 33944                           tosu	equ	0xFFF
 33945                           tosh	equ	0xFFE
 33946                           tosl	equ	0xFFD
 33947                           pclatu	equ	0xFFB
 33948                           pclath	equ	0xFFA
 33949                           tblptru	equ	0xFF8
 33950                           tblptrh	equ	0xFF7
 33951                           tblptrl	equ	0xFF6
 33952                           tablat	equ	0xFF5
 33953                           prodh	equ	0xFF4
 33954                           prodl	equ	0xFF3
 33955                           intcon	equ	0xFF2
 33956                           intcon2	equ	0xFF1
 33957                           intcon3	equ	0xFF0
 33958                           indf0	equ	0xFEF
 33959                           postinc0	equ	0xFEE
 33960                           plusw0	equ	0xFEB
 33961                           fsr0h	equ	0xFEA
 33962                           fsr0l	equ	0xFE9
 33963                           wreg	equ	0xFE8
 33964                           indf1	equ	0xFE7
 33965                           postinc1	equ	0xFE6
 33966                           postdec1	equ	0xFE5
 33967                           plusw1	equ	0xFE3
 33968                           fsr1h	equ	0xFE2
 33969                           fsr1l	equ	0xFE1
 33970                           bsr	equ	0xFE0
 33971                           indf2	equ	0xFDF
 33972                           postinc2	equ	0xFDE
 33973                           postdec2	equ	0xFDD
 33974                           plusw2	equ	0xFDB
 33975                           fsr2h	equ	0xFDA
 33976                           fsr2l	equ	0xFD9
 33977                           status	equ	0xFD8
 33978                           
 33979 ;; *************** function _I2cDummyTx *****************
 33980 ;; Defined at:
 33981 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 33982 ;; Parameters:    Size  Location     Type
 33983 ;;		None
 33984 ;; Auto vars:     Size  Location     Type
 33985 ;;		None
 33986 ;; Return value:  Size  Location     Type
 33987 ;;                  1    wreg      void 
 33988 ;; Registers used:
 33989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33990 ;; Tracked objects:
 33991 ;;		On entry : 0/0
 33992 ;;		On exit  : 0/0
 33993 ;;		Unchanged: 0/0
 33994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33999 ;;Total ram usage:        0 bytes
 34000 ;; Hardware stack levels used:    1
 34001 ;; Hardware stack levels required when called:    6
 34002 ;; This function calls:
 34003 ;;		i1_I2cSlv_SendI2cMsg
 34004 ;; This function is called by:
 34005 ;;		_I2cSlv_MainTask
 34006 ;;		_OsAlrm_ProcessOsAlarms
 34007 ;; This function uses a non-reentrant model
 34008 ;;
 34009                           
 34010                           	psect	text166
 34011  006096                     __ptext166:
 34012                           	opt stack 0
 34013  006096                     _I2cDummyTx:
 34014                           	opt stack 8
 34015                           
 34016                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 34017                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 34018                           
 34019                           ;incstack = 0
 34020  006096  0EFE               	movlw	low I2cDummyTx@DummyBuffer
 34021  006098  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 34022  00609A  0E01               	movlw	high I2cDummyTx@DummyBuffer
 34023  00609C  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 34024  00609E  0E00               	movlw	0
 34025  0060A0  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 34026  0060A2  0E01               	movlw	1
 34027  0060A4  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 34028  0060A6  ECBD  F02D         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 34029                           
 34030                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 34031  0060AA  0E01               	movlw	1
 34032  0060AC  0101               	movlb	1	; () banked
 34033  0060AE  6FEA               	movwf	_I2cBusStatus& (0+255),b
 34034                           
 34035                           ; BSR set to: 1
 34036  0060B0  0012               	return		;funcret
 34037  0060B2                     __end_of_I2cDummyTx:
 34038                           	opt stack 0
 34039                           tosu	equ	0xFFF
 34040                           tosh	equ	0xFFE
 34041                           tosl	equ	0xFFD
 34042                           pclatu	equ	0xFFB
 34043                           pclath	equ	0xFFA
 34044                           tblptru	equ	0xFF8
 34045                           tblptrh	equ	0xFF7
 34046                           tblptrl	equ	0xFF6
 34047                           tablat	equ	0xFF5
 34048                           prodh	equ	0xFF4
 34049                           prodl	equ	0xFF3
 34050                           intcon	equ	0xFF2
 34051                           intcon2	equ	0xFF1
 34052                           intcon3	equ	0xFF0
 34053                           indf0	equ	0xFEF
 34054                           postinc0	equ	0xFEE
 34055                           plusw0	equ	0xFEB
 34056                           fsr0h	equ	0xFEA
 34057                           fsr0l	equ	0xFE9
 34058                           wreg	equ	0xFE8
 34059                           indf1	equ	0xFE7
 34060                           postinc1	equ	0xFE6
 34061                           postdec1	equ	0xFE5
 34062                           plusw1	equ	0xFE3
 34063                           fsr1h	equ	0xFE2
 34064                           fsr1l	equ	0xFE1
 34065                           bsr	equ	0xFE0
 34066                           indf2	equ	0xFDF
 34067                           postinc2	equ	0xFDE
 34068                           postdec2	equ	0xFDD
 34069                           plusw2	equ	0xFDB
 34070                           fsr2h	equ	0xFDA
 34071                           fsr2l	equ	0xFD9
 34072                           status	equ	0xFD8
 34073                           
 34074 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 34075 ;; Defined at:
 34076 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34077 ;; Parameters:    Size  Location     Type
 34078 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 34079 ;;		 -> ReadAddress(1), EepromBuffer(15), triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), 
 34080 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 34081 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 34082 ;;  DataLenght      1   30[COMRAM] unsigned char 
 34083 ;; Auto vars:     Size  Location     Type
 34084 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 34085 ;; Return value:  Size  Location     Type
 34086 ;;                  1    wreg      unsigned char 
 34087 ;; Registers used:
 34088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34089 ;; Tracked objects:
 34090 ;;		On entry : 0/0
 34091 ;;		On exit  : 0/0
 34092 ;;		Unchanged: 0/0
 34093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34097 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34098 ;;Total ram usage:        5 bytes
 34099 ;; Hardware stack levels used:    1
 34100 ;; Hardware stack levels required when called:    5
 34101 ;; This function calls:
 34102 ;;		i1_GenerateEvt
 34103 ;; This function is called by:
 34104 ;;		_I2cDummyTx
 34105 ;; This function uses a non-reentrant model
 34106 ;;
 34107                           
 34108                           	psect	text167
 34109  005B7A                     __ptext167:
 34110                           	opt stack 0
 34111  005B7A                     i1_I2cSlv_SendI2cMsg:
 34112                           	opt stack 8
 34113                           
 34114                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 34115                           
 34116                           ; BSR set to: 1
 34117                           ;incstack = 0
 34118  005B7A  0E00               	movlw	0
 34119  005B7C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34120                           
 34121                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 34122  005B7E  0100               	movlb	0	; () banked
 34123  005B80  05CF               	decf	_I2cComSts& (0+255),w,b
 34124  005B82  B4D8               	btfsc	status,2,c
 34125  005B84  D014               	goto	i1l1409
 34126                           
 34127                           ; BSR set to: 0
 34128                           ;i2c_slv.c: 257: {
 34129                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 34130  005B86  C01E  F39B         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 34131                           
 34132                           ; BSR set to: 0
 34133                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 34134  005B8A  0E00               	movlw	0
 34135  005B8C  0103               	movlb	3	; () banked
 34136  005B8E  6F9C               	movwf	(_I2cTxPacket+1)& (0+255),b
 34137                           
 34138                           ; BSR set to: 3
 34139                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 34140  005B90  C01F  F39F         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 34141                           
 34142                           ; BSR set to: 3
 34143                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 34144  005B94  C01C  F39D         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 34145  005B98  C01D  F39E         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 34146                           
 34147                           ; BSR set to: 3
 34148                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 34149  005B9C  0ED9               	movlw	low _I2cWriteDataEvt
 34150  005B9E  6E19               	movwf	i1GenerateEvt@Event,c
 34151  005BA0  0E00               	movlw	high _I2cWriteDataEvt
 34152  005BA2  6E1A               	movwf	i1GenerateEvt@Event+1,c
 34153  005BA4  ECB9  F030         	call	i1_GenerateEvt	;wreg free
 34154                           
 34155                           ;i2c_slv.c: 267: TxSts = 1u;
 34156  005BA8  0E01               	movlw	1
 34157  005BAA  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34158                           
 34159                           ;i2c_slv.c: 268: }
 34160  005BAC  0012               	return	
 34161  005BAE                     i1l1409:
 34162                           
 34163                           ;i2c_slv.c: 269: else
 34164                           ;i2c_slv.c: 270: {
 34165                           ;i2c_slv.c: 272: TxSts = 0u;
 34166  005BAE  0E00               	movlw	0
 34167  005BB0  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 34168  005BB2  0012               	return	
 34169  005BB4                     __end_ofi1_I2cSlv_SendI2cMsg:
 34170                           	opt stack 0
 34171                           tosu	equ	0xFFF
 34172                           tosh	equ	0xFFE
 34173                           tosl	equ	0xFFD
 34174                           pclatu	equ	0xFFB
 34175                           pclath	equ	0xFFA
 34176                           tblptru	equ	0xFF8
 34177                           tblptrh	equ	0xFF7
 34178                           tblptrl	equ	0xFF6
 34179                           tablat	equ	0xFF5
 34180                           prodh	equ	0xFF4
 34181                           prodl	equ	0xFF3
 34182                           intcon	equ	0xFF2
 34183                           intcon2	equ	0xFF1
 34184                           intcon3	equ	0xFF0
 34185                           indf0	equ	0xFEF
 34186                           postinc0	equ	0xFEE
 34187                           plusw0	equ	0xFEB
 34188                           fsr0h	equ	0xFEA
 34189                           fsr0l	equ	0xFE9
 34190                           wreg	equ	0xFE8
 34191                           indf1	equ	0xFE7
 34192                           postinc1	equ	0xFE6
 34193                           postdec1	equ	0xFE5
 34194                           plusw1	equ	0xFE3
 34195                           fsr1h	equ	0xFE2
 34196                           fsr1l	equ	0xFE1
 34197                           bsr	equ	0xFE0
 34198                           indf2	equ	0xFDF
 34199                           postinc2	equ	0xFDE
 34200                           postdec2	equ	0xFDD
 34201                           plusw2	equ	0xFDB
 34202                           fsr2h	equ	0xFDA
 34203                           fsr2l	equ	0xFD9
 34204                           status	equ	0xFD8
 34205                           
 34206 ;; *************** function i1_GenerateEvt *****************
 34207 ;; Defined at:
 34208 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34209 ;; Parameters:    Size  Location     Type
 34210 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 34211 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34212 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34213 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34214 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34215 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34216 ;; Auto vars:     Size  Location     Type
 34217 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 34218 ;; Return value:  Size  Location     Type
 34219 ;;                  1    wreg      enum E7699
 34220 ;; Registers used:
 34221 ;;		wreg, fsr2l, fsr2h, status,2
 34222 ;; Tracked objects:
 34223 ;;		On entry : 0/0
 34224 ;;		On exit  : 0/0
 34225 ;;		Unchanged: 0/0
 34226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34230 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34231 ;;Total ram usage:        3 bytes
 34232 ;; Hardware stack levels used:    1
 34233 ;; Hardware stack levels required when called:    4
 34234 ;; This function calls:
 34235 ;;		Nothing
 34236 ;; This function is called by:
 34237 ;;		i1_I2cSlv_SendI2cMsg
 34238 ;; This function uses a non-reentrant model
 34239 ;;
 34240                           
 34241                           	psect	text168
 34242  006172                     __ptext168:
 34243                           	opt stack 0
 34244  006172                     i1_GenerateEvt:
 34245                           	opt stack 8
 34246                           
 34247                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34248                           
 34249                           ;incstack = 0
 34250  006172  0E00               	movlw	0
 34251  006174  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34252                           
 34253                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34254  006176  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 34255  00617A  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 34256  00617E  0E02               	movlw	2
 34257  006180  6EDF               	movwf	indf2,c
 34258                           
 34259                           ;os_ser.c: 83: EventStatus = EventSent;
 34260  006182  0E02               	movlw	2
 34261  006184  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 34262  006186  0012               	return	
 34263  006188                     __end_ofi1_GenerateEvt:
 34264                           	opt stack 0
 34265                           tosu	equ	0xFFF
 34266                           tosh	equ	0xFFE
 34267                           tosl	equ	0xFFD
 34268                           pclatu	equ	0xFFB
 34269                           pclath	equ	0xFFA
 34270                           tblptru	equ	0xFF8
 34271                           tblptrh	equ	0xFF7
 34272                           tblptrl	equ	0xFF6
 34273                           tablat	equ	0xFF5
 34274                           prodh	equ	0xFF4
 34275                           prodl	equ	0xFF3
 34276                           intcon	equ	0xFF2
 34277                           intcon2	equ	0xFF1
 34278                           intcon3	equ	0xFF0
 34279                           indf0	equ	0xFEF
 34280                           postinc0	equ	0xFEE
 34281                           plusw0	equ	0xFEB
 34282                           fsr0h	equ	0xFEA
 34283                           fsr0l	equ	0xFE9
 34284                           wreg	equ	0xFE8
 34285                           indf1	equ	0xFE7
 34286                           postinc1	equ	0xFE6
 34287                           postdec1	equ	0xFE5
 34288                           plusw1	equ	0xFE3
 34289                           fsr1h	equ	0xFE2
 34290                           fsr1l	equ	0xFE1
 34291                           bsr	equ	0xFE0
 34292                           indf2	equ	0xFDF
 34293                           postinc2	equ	0xFDE
 34294                           postdec2	equ	0xFDD
 34295                           plusw2	equ	0xFDB
 34296                           fsr2h	equ	0xFDA
 34297                           fsr2l	equ	0xFD9
 34298                           status	equ	0xFD8
 34299                           
 34300 ;; *************** function _HighPriorityIsr *****************
 34301 ;; Defined at:
 34302 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 34303 ;; Parameters:    Size  Location     Type
 34304 ;;		None
 34305 ;; Auto vars:     Size  Location     Type
 34306 ;;		None
 34307 ;; Return value:  Size  Location     Type
 34308 ;;                  1    wreg      void 
 34309 ;; Registers used:
 34310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34311 ;; Tracked objects:
 34312 ;;		On entry : 0/0
 34313 ;;		On exit  : 0/0
 34314 ;;		Unchanged: 0/0
 34315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34318 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34319 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34320 ;;Total ram usage:       18 bytes
 34321 ;; Hardware stack levels used:    1
 34322 ;; Hardware stack levels required when called:    3
 34323 ;; This function calls:
 34324 ;;		_Mcu_Int0Isr
 34325 ;;		_Mcu_Int1Isr
 34326 ;;		_Rtcc_RtcIsr
 34327 ;;		_Uart_Uart1RxIsr
 34328 ;; This function is called by:
 34329 ;;		Interrupt level 2
 34330 ;; This function uses a non-reentrant model
 34331 ;;
 34332                           
 34333                           	psect	intcode
 34334  000008                     __pintcode:
 34335                           	opt stack 0
 34336  000008                     _HighPriorityIsr:
 34337                           	opt stack 8
 34338                           
 34339                           ;incstack = 0
 34340  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 34341  00000A  EF20  F021         	goto	int_func
 34342                           tosu	equ	0xFFF
 34343                           tosh	equ	0xFFE
 34344                           tosl	equ	0xFFD
 34345                           pclatu	equ	0xFFB
 34346                           pclath	equ	0xFFA
 34347                           tblptru	equ	0xFF8
 34348                           tblptrh	equ	0xFF7
 34349                           tblptrl	equ	0xFF6
 34350                           tablat	equ	0xFF5
 34351                           prodh	equ	0xFF4
 34352                           prodl	equ	0xFF3
 34353                           intcon	equ	0xFF2
 34354                           intcon2	equ	0xFF1
 34355                           intcon3	equ	0xFF0
 34356                           indf0	equ	0xFEF
 34357                           postinc0	equ	0xFEE
 34358                           plusw0	equ	0xFEB
 34359                           fsr0h	equ	0xFEA
 34360                           fsr0l	equ	0xFE9
 34361                           wreg	equ	0xFE8
 34362                           indf1	equ	0xFE7
 34363                           postinc1	equ	0xFE6
 34364                           postdec1	equ	0xFE5
 34365                           plusw1	equ	0xFE3
 34366                           fsr1h	equ	0xFE2
 34367                           fsr1l	equ	0xFE1
 34368                           bsr	equ	0xFE0
 34369                           indf2	equ	0xFDF
 34370                           postinc2	equ	0xFDE
 34371                           postdec2	equ	0xFDD
 34372                           plusw2	equ	0xFDB
 34373                           fsr2h	equ	0xFDA
 34374                           fsr2l	equ	0xFD9
 34375                           status	equ	0xFD8
 34376                           
 34377                           	psect	intcode_body
 34378  004240                     __pintcode_body:
 34379                           	opt stack 8
 34380  004240                     int_func:
 34381                           	opt stack 8
 34382  004240  CFFA F007          	movff	pclath,??_HighPriorityIsr
 34383  004244  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 34384  004248  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 34385  00424C  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 34386  004250  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 34387  004254  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 34388  004258  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 34389  00425C  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 34390  004260  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 34391  004264  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 34392  004268  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 34393  00426C  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 34394  004270  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 34395  004274  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 34396  004278  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 34397  00427C  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 34398  004280  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 34399  004284  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 34400                           
 34401                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 34402  004288  B2F2               	btfsc	intcon,1,c	;volatile
 34403                           
 34404                           ;irq.c: 158: {
 34405                           ;irq.c: 160: Mcu_Int0Isr();
 34406  00428A  EC5F  F031         	call	_Mcu_Int0Isr	;wreg free
 34407                           
 34408                           ;irq.c: 161: }
 34409                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 34410  00428E  B0F0               	btfsc	intcon3,0,c	;volatile
 34411                           
 34412                           ;irq.c: 167: {
 34413                           ;irq.c: 169: Mcu_Int1Isr();
 34414  004290  EC5D  F031         	call	_Mcu_Int1Isr	;wreg free
 34415                           
 34416                           ;irq.c: 170: }
 34417                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 34418  004294  B0A4               	btfsc	4004,0,c	;volatile
 34419                           
 34420                           ;irq.c: 203: {
 34421                           ;irq.c: 205: Rtcc_RtcIsr();
 34422  004296  EC5B  F031         	call	_Rtcc_RtcIsr	;wreg free
 34423                           
 34424                           ;irq.c: 206: }
 34425                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 34426  00429A  BA9E               	btfsc	3998,5,c	;volatile
 34427                           
 34428                           ;irq.c: 212: {
 34429                           ;irq.c: 214: Uart_Uart1RxIsr();
 34430  00429C  EC14  F031         	call	_Uart_Uart1RxIsr	;wreg free
 34431  0042A0  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 34432  0042A4  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 34433  0042A8  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 34434  0042AC  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 34435  0042B0  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 34436  0042B4  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 34437  0042B8  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 34438  0042BC  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 34439  0042C0  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 34440  0042C4  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 34441  0042C8  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 34442  0042CC  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 34443  0042D0  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 34444  0042D4  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 34445  0042D8  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 34446  0042DC  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 34447  0042E0  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 34448  0042E4  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 34449  0042E8  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 34450  0042EA  0011               	retfie		f
 34451  0042EC                     __end_of_HighPriorityIsr:
 34452                           	opt stack 0
 34453                           tosu	equ	0xFFF
 34454                           tosh	equ	0xFFE
 34455                           tosl	equ	0xFFD
 34456                           pclatu	equ	0xFFB
 34457                           pclath	equ	0xFFA
 34458                           tblptru	equ	0xFF8
 34459                           tblptrh	equ	0xFF7
 34460                           tblptrl	equ	0xFF6
 34461                           tablat	equ	0xFF5
 34462                           prodh	equ	0xFF4
 34463                           prodl	equ	0xFF3
 34464                           intcon	equ	0xFF2
 34465                           intcon2	equ	0xFF1
 34466                           intcon3	equ	0xFF0
 34467                           indf0	equ	0xFEF
 34468                           postinc0	equ	0xFEE
 34469                           plusw0	equ	0xFEB
 34470                           fsr0h	equ	0xFEA
 34471                           fsr0l	equ	0xFE9
 34472                           wreg	equ	0xFE8
 34473                           indf1	equ	0xFE7
 34474                           postinc1	equ	0xFE6
 34475                           postdec1	equ	0xFE5
 34476                           plusw1	equ	0xFE3
 34477                           fsr1h	equ	0xFE2
 34478                           fsr1l	equ	0xFE1
 34479                           bsr	equ	0xFE0
 34480                           indf2	equ	0xFDF
 34481                           postinc2	equ	0xFDE
 34482                           postdec2	equ	0xFDD
 34483                           plusw2	equ	0xFDB
 34484                           fsr2h	equ	0xFDA
 34485                           fsr2l	equ	0xFD9
 34486                           status	equ	0xFD8
 34487                           
 34488 ;; *************** function _Uart_Uart1RxIsr *****************
 34489 ;; Defined at:
 34490 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34491 ;; Parameters:    Size  Location     Type
 34492 ;;		None
 34493 ;; Auto vars:     Size  Location     Type
 34494 ;;		None
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  1    wreg      void 
 34497 ;; Registers used:
 34498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34499 ;; Tracked objects:
 34500 ;;		On entry : 0/0
 34501 ;;		On exit  : 0/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;Total ram usage:        0 bytes
 34509 ;; Hardware stack levels used:    1
 34510 ;; Hardware stack levels required when called:    2
 34511 ;; This function calls:
 34512 ;;		_Uart_MdmGsmGprsReadService
 34513 ;; This function is called by:
 34514 ;;		_HighPriorityIsr
 34515 ;; This function uses a non-reentrant model
 34516 ;;
 34517                           
 34518                           	psect	text170
 34519  006228                     __ptext170:
 34520                           	opt stack 0
 34521  006228                     _Uart_Uart1RxIsr:
 34522                           	opt stack 8
 34523                           
 34524                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 34525                           ;uart_drv.c: 590: UartRxData = RCREG1;
 34526                           
 34527                           ;incstack = 0
 34528  006228  CFAF F02C          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 34529                           
 34530                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 34531  00622C  C02C  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 34532  006230  0E01               	movlw	1
 34533  006232  ECBC  F01D         	call	_Uart_MdmGsmGprsReadService
 34534  006236  0012               	return		;funcret
 34535  006238                     __end_of_Uart_Uart1RxIsr:
 34536                           	opt stack 0
 34537                           tosu	equ	0xFFF
 34538                           tosh	equ	0xFFE
 34539                           tosl	equ	0xFFD
 34540                           pclatu	equ	0xFFB
 34541                           pclath	equ	0xFFA
 34542                           tblptru	equ	0xFF8
 34543                           tblptrh	equ	0xFF7
 34544                           tblptrl	equ	0xFF6
 34545                           tablat	equ	0xFF5
 34546                           prodh	equ	0xFF4
 34547                           prodl	equ	0xFF3
 34548                           intcon	equ	0xFF2
 34549                           intcon2	equ	0xFF1
 34550                           intcon3	equ	0xFF0
 34551                           indf0	equ	0xFEF
 34552                           postinc0	equ	0xFEE
 34553                           plusw0	equ	0xFEB
 34554                           fsr0h	equ	0xFEA
 34555                           fsr0l	equ	0xFE9
 34556                           wreg	equ	0xFE8
 34557                           indf1	equ	0xFE7
 34558                           postinc1	equ	0xFE6
 34559                           postdec1	equ	0xFE5
 34560                           plusw1	equ	0xFE3
 34561                           fsr1h	equ	0xFE2
 34562                           fsr1l	equ	0xFE1
 34563                           bsr	equ	0xFE0
 34564                           indf2	equ	0xFDF
 34565                           postinc2	equ	0xFDE
 34566                           postdec2	equ	0xFDD
 34567                           plusw2	equ	0xFDB
 34568                           fsr2h	equ	0xFDA
 34569                           fsr2l	equ	0xFD9
 34570                           status	equ	0xFD8
 34571                           
 34572 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 34573 ;; Defined at:
 34574 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 34575 ;; Parameters:    Size  Location     Type
 34576 ;;  Module          1    wreg     unsigned char 
 34577 ;;  UartData        1    3[COMRAM] unsigned char 
 34578 ;; Auto vars:     Size  Location     Type
 34579 ;;  Module          1    0[COMRAM] unsigned char 
 34580 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 34581 ;; Return value:  Size  Location     Type
 34582 ;;                  1    wreg      void 
 34583 ;; Registers used:
 34584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 34585 ;; Tracked objects:
 34586 ;;		On entry : 0/0
 34587 ;;		On exit  : 0/0
 34588 ;;		Unchanged: 0/0
 34589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34590 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34594 ;;Total ram usage:        3 bytes
 34595 ;; Hardware stack levels used:    1
 34596 ;; Hardware stack levels required when called:    1
 34597 ;; This function calls:
 34598 ;;		i2_GenerateEvt
 34599 ;; This function is called by:
 34600 ;;		_Uart_Uart1RxIsr
 34601 ;; This function uses a non-reentrant model
 34602 ;;
 34603                           
 34604                           	psect	text171
 34605  003B78                     __ptext171:
 34606                           	opt stack 0
 34607  003B78                     _Uart_MdmGsmGprsReadService:
 34608                           	opt stack 8
 34609                           
 34610                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 34611                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 34612                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 34613                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 34614                           
 34615                           ;incstack = 0
 34616  003B78  0E00               	movlw	0
 34617  003B7A  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34618  003B7C  0E00               	movlw	0
 34619  003B7E  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34620                           
 34621                           ;uart_drv.c: 383: switch (RxState)
 34622  003B80  D058               	goto	i2l680
 34623  003B82                     
 34624                           ;uart_drv.c: 387: if (UartData == '\r')
 34625  003B82  0E0D               	movlw	13
 34626  003B84  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34627  003B86  A4D8               	btfss	status,2,c
 34628  003B88  D003               	goto	i2l682
 34629                           
 34630                           ;uart_drv.c: 388: {
 34631                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 34632  003B8A  0E01               	movlw	1
 34633  003B8C  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34634                           
 34635                           ;uart_drv.c: 391: }
 34636  003B8E  0012               	return	
 34637  003B90                     i2l682:
 34638                           
 34639                           ;uart_drv.c: 392: else
 34640                           ;uart_drv.c: 393: {
 34641                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 34642  003B90  0E90               	movlw	144
 34643  003B92  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34644  003B94  0E01               	movlw	1
 34645  003B96  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34646  003B98  B0D8               	btfsc	status,0,c
 34647  003B9A  0012               	return	
 34648                           
 34649                           ;uart_drv.c: 395: {
 34650                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 34651  003B9C  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34652  003B9E  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34653  003BA0  6ED9               	movwf	fsr2l,c
 34654  003BA2  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34655  003BA4  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34656  003BA6  6EDA               	movwf	fsr2h,c
 34657  003BA8  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 34658                           
 34659                           ;uart_drv.c: 399: RxCounter++;
 34660  003BAC  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 34661  003BAE  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 34662                           
 34663                           ;uart_drv.c: 400: }
 34664                           ;uart_drv.c: 401: }
 34665                           ;uart_drv.c: 402: break;
 34666  003BB0  0012               	return	
 34667  003BB2                     
 34668                           ;uart_drv.c: 406: if (UartData == '\n')
 34669  003BB2  0E0A               	movlw	10
 34670  003BB4  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 34671  003BB6  A4D8               	btfss	status,2,c
 34672  003BB8  D035               	goto	i2l688
 34673                           
 34674                           ;uart_drv.c: 407: {
 34675                           ;uart_drv.c: 409: if (RxCounter > 0)
 34676  003BBA  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34677  003BBC  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34678  003BBE  B4D8               	btfsc	status,2,c
 34679  003BC0  D031               	goto	i2l688
 34680                           
 34681                           ;uart_drv.c: 410: {
 34682                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 34683  003BC2  0E00               	movlw	0
 34684  003BC4  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 34685  003BC6  0E00               	movlw	0
 34686  003BC8  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 34687  003BCA  D010               	goto	i2l689
 34688  003BCC                     
 34689                           ;uart_drv.c: 413: {
 34690                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 34691  003BCC  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 34692  003BCE  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34693  003BD0  6ED9               	movwf	fsr2l,c
 34694  003BD2  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 34695  003BD4  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34696  003BD6  6EDA               	movwf	fsr2h,c
 34697  003BD8  0E58               	movlw	low _RxBuffer
 34698  003BDA  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34699  003BDC  6EE1               	movwf	fsr1l,c
 34700  003BDE  0E0C               	movlw	high _RxBuffer
 34701  003BE0  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34702  003BE2  6EE2               	movwf	fsr1h,c
 34703  003BE4  CFDF FFE7          	movff	indf2,indf1
 34704  003BE8  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 34705  003BEA  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 34706  003BEC                     i2l689:
 34707  003BEC  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 34708  003BEE  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 34709  003BF0  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 34710  003BF2  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 34711  003BF4  A0D8               	btfss	status,0,c
 34712  003BF6  D7EA               	goto	i2l690
 34713                           
 34714                           ;uart_drv.c: 415: }
 34715                           ;uart_drv.c: 417: RxLen = RxCounter;
 34716  003BF8  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 34717  003BFC  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 34718                           
 34719                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 34720  003C00  0E3C               	movlw	low _NewStringReceived
 34721  003C02  6E01               	movwf	i2GenerateEvt@Event,c
 34722  003C04  0E00               	movlw	high _NewStringReceived
 34723  003C06  6E02               	movwf	i2GenerateEvt@Event+1,c
 34724  003C08  ECC4  F030         	call	i2_GenerateEvt	;wreg free
 34725                           
 34726                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 34727  003C0C  0E3B               	movlw	low _NewMdmEvtParserRequest
 34728  003C0E  6E01               	movwf	i2GenerateEvt@Event,c
 34729  003C10  0E00               	movlw	high _NewMdmEvtParserRequest
 34730  003C12  6E02               	movwf	i2GenerateEvt@Event+1,c
 34731  003C14  ECC4  F030         	call	i2_GenerateEvt	;wreg free
 34732                           
 34733                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 34734  003C18  0E3A               	movlw	low _NewStringMdmTerminal
 34735  003C1A  6E01               	movwf	i2GenerateEvt@Event,c
 34736  003C1C  0E00               	movlw	high _NewStringMdmTerminal
 34737  003C1E  6E02               	movwf	i2GenerateEvt@Event+1,c
 34738  003C20  ECC4  F030         	call	i2_GenerateEvt	;wreg free
 34739  003C24                     i2l688:
 34740                           
 34741                           ;uart_drv.c: 427: }
 34742                           ;uart_drv.c: 429: RxState = ReadData;
 34743                           
 34744                           ;uart_drv.c: 424: else
 34745                           ;uart_drv.c: 425: {
 34746                           
 34747                           ;uart_drv.c: 422: }
 34748                           ;uart_drv.c: 423: }
 34749  003C24  0E00               	movlw	0
 34750  003C26  6E2D               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 34751                           
 34752                           ;uart_drv.c: 431: RxCounter = 0;
 34753  003C28  0E00               	movlw	0
 34754  003C2A  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 34755  003C2C  0E00               	movlw	0
 34756  003C2E  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 34757                           
 34758                           ;uart_drv.c: 436: }
 34759                           
 34760                           ;uart_drv.c: 435: break;
 34761                           
 34762                           ;uart_drv.c: 434: default:
 34763                           
 34764                           ;uart_drv.c: 432: break;
 34765  003C30  0012               	return	
 34766  003C32                     i2l680:
 34767  003C32  502D               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 34768                           
 34769                           ; Switch size 1, requested type "space"
 34770                           ; Number of cases is 2, Range of values is 0 to 1
 34771                           ; switch strategies available:
 34772                           ; Name         Instructions Cycles
 34773                           ; simple_byte            7     4 (average)
 34774                           ;	Chosen strategy is simple_byte
 34775  003C34  0A00               	xorlw	0	; case 0
 34776  003C36  B4D8               	btfsc	status,2,c
 34777  003C38  D7A4               	goto	i2l681
 34778  003C3A  0A01               	xorlw	1	; case 1
 34779  003C3C  A4D8               	btfss	status,2,c
 34780  003C3E  0012               	return	
 34781  003C40  D7B8               	goto	i2l686
 34782  003C42                     __end_of_Uart_MdmGsmGprsReadService:
 34783                           	opt stack 0
 34784                           tosu	equ	0xFFF
 34785                           tosh	equ	0xFFE
 34786                           tosl	equ	0xFFD
 34787                           pclatu	equ	0xFFB
 34788                           pclath	equ	0xFFA
 34789                           tblptru	equ	0xFF8
 34790                           tblptrh	equ	0xFF7
 34791                           tblptrl	equ	0xFF6
 34792                           tablat	equ	0xFF5
 34793                           prodh	equ	0xFF4
 34794                           prodl	equ	0xFF3
 34795                           intcon	equ	0xFF2
 34796                           intcon2	equ	0xFF1
 34797                           intcon3	equ	0xFF0
 34798                           indf0	equ	0xFEF
 34799                           postinc0	equ	0xFEE
 34800                           plusw0	equ	0xFEB
 34801                           fsr0h	equ	0xFEA
 34802                           fsr0l	equ	0xFE9
 34803                           wreg	equ	0xFE8
 34804                           indf1	equ	0xFE7
 34805                           postinc1	equ	0xFE6
 34806                           postdec1	equ	0xFE5
 34807                           plusw1	equ	0xFE3
 34808                           fsr1h	equ	0xFE2
 34809                           fsr1l	equ	0xFE1
 34810                           bsr	equ	0xFE0
 34811                           indf2	equ	0xFDF
 34812                           postinc2	equ	0xFDE
 34813                           postdec2	equ	0xFDD
 34814                           plusw2	equ	0xFDB
 34815                           fsr2h	equ	0xFDA
 34816                           fsr2l	equ	0xFD9
 34817                           status	equ	0xFD8
 34818                           
 34819 ;; *************** function i2_GenerateEvt *****************
 34820 ;; Defined at:
 34821 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 34822 ;; Parameters:    Size  Location     Type
 34823 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 34824 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 34825 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 34826 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 34827 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 34828 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 34829 ;; Auto vars:     Size  Location     Type
 34830 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 34831 ;; Return value:  Size  Location     Type
 34832 ;;                  1    wreg      enum E7699
 34833 ;; Registers used:
 34834 ;;		wreg, fsr2l, fsr2h, status,2
 34835 ;; Tracked objects:
 34836 ;;		On entry : 0/0
 34837 ;;		On exit  : 0/0
 34838 ;;		Unchanged: 0/0
 34839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34843 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34844 ;;Total ram usage:        3 bytes
 34845 ;; Hardware stack levels used:    1
 34846 ;; This function calls:
 34847 ;;		Nothing
 34848 ;; This function is called by:
 34849 ;;		_Uart_MdmGsmGprsReadService
 34850 ;; This function uses a non-reentrant model
 34851 ;;
 34852                           
 34853                           	psect	text172
 34854  006188                     __ptext172:
 34855                           	opt stack 0
 34856  006188                     i2_GenerateEvt:
 34857                           	opt stack 8
 34858                           
 34859                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 34860                           
 34861                           ;incstack = 0
 34862  006188  0E00               	movlw	0
 34863  00618A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34864                           
 34865                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 34866  00618C  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 34867  006190  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 34868  006194  0E02               	movlw	2
 34869  006196  6EDF               	movwf	indf2,c
 34870                           
 34871                           ;os_ser.c: 83: EventStatus = EventSent;
 34872  006198  0E02               	movlw	2
 34873  00619A  6E03               	movwf	i2GenerateEvt@EventStatus,c
 34874  00619C  0012               	return	
 34875  00619E                     __end_ofi2_GenerateEvt:
 34876                           	opt stack 0
 34877                           tosu	equ	0xFFF
 34878                           tosh	equ	0xFFE
 34879                           tosl	equ	0xFFD
 34880                           pclatu	equ	0xFFB
 34881                           pclath	equ	0xFFA
 34882                           tblptru	equ	0xFF8
 34883                           tblptrh	equ	0xFF7
 34884                           tblptrl	equ	0xFF6
 34885                           tablat	equ	0xFF5
 34886                           prodh	equ	0xFF4
 34887                           prodl	equ	0xFF3
 34888                           intcon	equ	0xFF2
 34889                           intcon2	equ	0xFF1
 34890                           intcon3	equ	0xFF0
 34891                           indf0	equ	0xFEF
 34892                           postinc0	equ	0xFEE
 34893                           plusw0	equ	0xFEB
 34894                           fsr0h	equ	0xFEA
 34895                           fsr0l	equ	0xFE9
 34896                           wreg	equ	0xFE8
 34897                           indf1	equ	0xFE7
 34898                           postinc1	equ	0xFE6
 34899                           postdec1	equ	0xFE5
 34900                           plusw1	equ	0xFE3
 34901                           fsr1h	equ	0xFE2
 34902                           fsr1l	equ	0xFE1
 34903                           bsr	equ	0xFE0
 34904                           indf2	equ	0xFDF
 34905                           postinc2	equ	0xFDE
 34906                           postdec2	equ	0xFDD
 34907                           plusw2	equ	0xFDB
 34908                           fsr2h	equ	0xFDA
 34909                           fsr2l	equ	0xFD9
 34910                           status	equ	0xFD8
 34911                           
 34912 ;; *************** function _Rtcc_RtcIsr *****************
 34913 ;; Defined at:
 34914 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 34915 ;; Parameters:    Size  Location     Type
 34916 ;;		None
 34917 ;; Auto vars:     Size  Location     Type
 34918 ;;		None
 34919 ;; Return value:  Size  Location     Type
 34920 ;;                  1    wreg      void 
 34921 ;; Registers used:
 34922 ;;		wreg, status,2, status,0
 34923 ;; Tracked objects:
 34924 ;;		On entry : 0/0
 34925 ;;		On exit  : 0/0
 34926 ;;		Unchanged: 0/0
 34927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34932 ;;Total ram usage:        0 bytes
 34933 ;; Hardware stack levels used:    1
 34934 ;; This function calls:
 34935 ;;		Nothing
 34936 ;; This function is called by:
 34937 ;;		_HighPriorityIsr
 34938 ;; This function uses a non-reentrant model
 34939 ;;
 34940                           
 34941                           	psect	text173
 34942  0062B6                     __ptext173:
 34943                           	opt stack 0
 34944  0062B6                     _Rtcc_RtcIsr:
 34945                           	opt stack 10
 34946                           
 34947                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 34948                           
 34949                           ;incstack = 0
 34950  0062B6  90A4               	bcf	4004,0,c	;volatile
 34951  0062B8  0012               	return	
 34952  0062BA                     __end_of_Rtcc_RtcIsr:
 34953                           	opt stack 0
 34954                           tosu	equ	0xFFF
 34955                           tosh	equ	0xFFE
 34956                           tosl	equ	0xFFD
 34957                           pclatu	equ	0xFFB
 34958                           pclath	equ	0xFFA
 34959                           tblptru	equ	0xFF8
 34960                           tblptrh	equ	0xFF7
 34961                           tblptrl	equ	0xFF6
 34962                           tablat	equ	0xFF5
 34963                           prodh	equ	0xFF4
 34964                           prodl	equ	0xFF3
 34965                           intcon	equ	0xFF2
 34966                           intcon2	equ	0xFF1
 34967                           intcon3	equ	0xFF0
 34968                           indf0	equ	0xFEF
 34969                           postinc0	equ	0xFEE
 34970                           plusw0	equ	0xFEB
 34971                           fsr0h	equ	0xFEA
 34972                           fsr0l	equ	0xFE9
 34973                           wreg	equ	0xFE8
 34974                           indf1	equ	0xFE7
 34975                           postinc1	equ	0xFE6
 34976                           postdec1	equ	0xFE5
 34977                           plusw1	equ	0xFE3
 34978                           fsr1h	equ	0xFE2
 34979                           fsr1l	equ	0xFE1
 34980                           bsr	equ	0xFE0
 34981                           indf2	equ	0xFDF
 34982                           postinc2	equ	0xFDE
 34983                           postdec2	equ	0xFDD
 34984                           plusw2	equ	0xFDB
 34985                           fsr2h	equ	0xFDA
 34986                           fsr2l	equ	0xFD9
 34987                           status	equ	0xFD8
 34988                           
 34989 ;; *************** function _Mcu_Int1Isr *****************
 34990 ;; Defined at:
 34991 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 34992 ;; Parameters:    Size  Location     Type
 34993 ;;		None
 34994 ;; Auto vars:     Size  Location     Type
 34995 ;;		None
 34996 ;; Return value:  Size  Location     Type
 34997 ;;                  1    wreg      void 
 34998 ;; Registers used:
 34999 ;;		wreg, status,2, status,0
 35000 ;; Tracked objects:
 35001 ;;		On entry : 0/0
 35002 ;;		On exit  : 0/0
 35003 ;;		Unchanged: 0/0
 35004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35009 ;;Total ram usage:        0 bytes
 35010 ;; Hardware stack levels used:    1
 35011 ;; This function calls:
 35012 ;;		Nothing
 35013 ;; This function is called by:
 35014 ;;		_HighPriorityIsr
 35015 ;; This function uses a non-reentrant model
 35016 ;;
 35017                           
 35018                           	psect	text174
 35019  0062BA                     __ptext174:
 35020                           	opt stack 0
 35021  0062BA                     _Mcu_Int1Isr:
 35022                           	opt stack 10
 35023                           
 35024                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 35025                           
 35026                           ;incstack = 0
 35027  0062BA  90F0               	bcf	intcon3,0,c	;volatile
 35028  0062BC  0012               	return	
 35029  0062BE                     __end_of_Mcu_Int1Isr:
 35030                           	opt stack 0
 35031                           tosu	equ	0xFFF
 35032                           tosh	equ	0xFFE
 35033                           tosl	equ	0xFFD
 35034                           pclatu	equ	0xFFB
 35035                           pclath	equ	0xFFA
 35036                           tblptru	equ	0xFF8
 35037                           tblptrh	equ	0xFF7
 35038                           tblptrl	equ	0xFF6
 35039                           tablat	equ	0xFF5
 35040                           prodh	equ	0xFF4
 35041                           prodl	equ	0xFF3
 35042                           intcon	equ	0xFF2
 35043                           intcon2	equ	0xFF1
 35044                           intcon3	equ	0xFF0
 35045                           indf0	equ	0xFEF
 35046                           postinc0	equ	0xFEE
 35047                           plusw0	equ	0xFEB
 35048                           fsr0h	equ	0xFEA
 35049                           fsr0l	equ	0xFE9
 35050                           wreg	equ	0xFE8
 35051                           indf1	equ	0xFE7
 35052                           postinc1	equ	0xFE6
 35053                           postdec1	equ	0xFE5
 35054                           plusw1	equ	0xFE3
 35055                           fsr1h	equ	0xFE2
 35056                           fsr1l	equ	0xFE1
 35057                           bsr	equ	0xFE0
 35058                           indf2	equ	0xFDF
 35059                           postinc2	equ	0xFDE
 35060                           postdec2	equ	0xFDD
 35061                           plusw2	equ	0xFDB
 35062                           fsr2h	equ	0xFDA
 35063                           fsr2l	equ	0xFD9
 35064                           status	equ	0xFD8
 35065                           
 35066 ;; *************** function _Mcu_Int0Isr *****************
 35067 ;; Defined at:
 35068 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 35069 ;; Parameters:    Size  Location     Type
 35070 ;;		None
 35071 ;; Auto vars:     Size  Location     Type
 35072 ;;		None
 35073 ;; Return value:  Size  Location     Type
 35074 ;;                  1    wreg      void 
 35075 ;; Registers used:
 35076 ;;		wreg, status,2, status,0
 35077 ;; Tracked objects:
 35078 ;;		On entry : 0/0
 35079 ;;		On exit  : 0/0
 35080 ;;		Unchanged: 0/0
 35081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35086 ;;Total ram usage:        0 bytes
 35087 ;; Hardware stack levels used:    1
 35088 ;; This function calls:
 35089 ;;		Nothing
 35090 ;; This function is called by:
 35091 ;;		_HighPriorityIsr
 35092 ;; This function uses a non-reentrant model
 35093 ;;
 35094                           
 35095                           	psect	text175
 35096  0062BE                     __ptext175:
 35097                           	opt stack 0
 35098  0062BE                     _Mcu_Int0Isr:
 35099                           	opt stack 10
 35100                           
 35101                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 35102                           
 35103                           ;incstack = 0
 35104  0062BE  92F2               	bcf	intcon,1,c	;volatile
 35105  0062C0  0012               	return	
 35106  0062C2                     __end_of_Mcu_Int0Isr:
 35107                           	opt stack 0
 35108                           tosu	equ	0xFFF
 35109                           tosh	equ	0xFFE
 35110                           tosl	equ	0xFFD
 35111                           pclatu	equ	0xFFB
 35112                           pclath	equ	0xFFA
 35113                           tblptru	equ	0xFF8
 35114                           tblptrh	equ	0xFF7
 35115                           tblptrl	equ	0xFF6
 35116                           tablat	equ	0xFF5
 35117                           prodh	equ	0xFF4
 35118                           prodl	equ	0xFF3
 35119                           intcon	equ	0xFF2
 35120                           intcon2	equ	0xFF1
 35121                           intcon3	equ	0xFF0
 35122                           indf0	equ	0xFEF
 35123                           postinc0	equ	0xFEE
 35124                           plusw0	equ	0xFEB
 35125                           fsr0h	equ	0xFEA
 35126                           fsr0l	equ	0xFE9
 35127                           wreg	equ	0xFE8
 35128                           indf1	equ	0xFE7
 35129                           postinc1	equ	0xFE6
 35130                           postdec1	equ	0xFE5
 35131                           plusw1	equ	0xFE3
 35132                           fsr1h	equ	0xFE2
 35133                           fsr1l	equ	0xFE1
 35134                           bsr	equ	0xFE0
 35135                           indf2	equ	0xFDF
 35136                           postinc2	equ	0xFDE
 35137                           postdec2	equ	0xFDD
 35138                           plusw2	equ	0xFDB
 35139                           fsr2h	equ	0xFDA
 35140                           fsr2l	equ	0xFD9
 35141                           status	equ	0xFD8
 35142                           tosu	equ	0xFFF
 35143                           tosh	equ	0xFFE
 35144                           tosl	equ	0xFFD
 35145                           pclatu	equ	0xFFB
 35146                           pclath	equ	0xFFA
 35147                           tblptru	equ	0xFF8
 35148                           tblptrh	equ	0xFF7
 35149                           tblptrl	equ	0xFF6
 35150                           tablat	equ	0xFF5
 35151                           prodh	equ	0xFF4
 35152                           prodl	equ	0xFF3
 35153                           intcon	equ	0xFF2
 35154                           intcon2	equ	0xFF1
 35155                           intcon3	equ	0xFF0
 35156                           indf0	equ	0xFEF
 35157                           postinc0	equ	0xFEE
 35158                           plusw0	equ	0xFEB
 35159                           fsr0h	equ	0xFEA
 35160                           fsr0l	equ	0xFE9
 35161                           wreg	equ	0xFE8
 35162                           indf1	equ	0xFE7
 35163                           postinc1	equ	0xFE6
 35164                           postdec1	equ	0xFE5
 35165                           plusw1	equ	0xFE3
 35166                           fsr1h	equ	0xFE2
 35167                           fsr1l	equ	0xFE1
 35168                           bsr	equ	0xFE0
 35169                           indf2	equ	0xFDF
 35170                           postinc2	equ	0xFDE
 35171                           postdec2	equ	0xFDD
 35172                           plusw2	equ	0xFDB
 35173                           fsr2h	equ	0xFDA
 35174                           fsr2l	equ	0xFD9
 35175                           status	equ	0xFD8
 35176                           
 35177                           	psect	text176
 35178  000000                     __ptext176:
 35179                           	opt stack 0
 35180                           tosu	equ	0xFFF
 35181                           tosh	equ	0xFFE
 35182                           tosl	equ	0xFFD
 35183                           pclatu	equ	0xFFB
 35184                           pclath	equ	0xFFA
 35185                           tblptru	equ	0xFF8
 35186                           tblptrh	equ	0xFF7
 35187                           tblptrl	equ	0xFF6
 35188                           tablat	equ	0xFF5
 35189                           prodh	equ	0xFF4
 35190                           prodl	equ	0xFF3
 35191                           intcon	equ	0xFF2
 35192                           intcon2	equ	0xFF1
 35193                           intcon3	equ	0xFF0
 35194                           indf0	equ	0xFEF
 35195                           postinc0	equ	0xFEE
 35196                           plusw0	equ	0xFEB
 35197                           fsr0h	equ	0xFEA
 35198                           fsr0l	equ	0xFE9
 35199                           wreg	equ	0xFE8
 35200                           indf1	equ	0xFE7
 35201                           postinc1	equ	0xFE6
 35202                           postdec1	equ	0xFE5
 35203                           plusw1	equ	0xFE3
 35204                           fsr1h	equ	0xFE2
 35205                           fsr1l	equ	0xFE1
 35206                           bsr	equ	0xFE0
 35207                           indf2	equ	0xFDF
 35208                           postinc2	equ	0xFDE
 35209                           postdec2	equ	0xFDD
 35210                           plusw2	equ	0xFDB
 35211                           fsr2h	equ	0xFDA
 35212                           fsr2l	equ	0xFD9
 35213                           status	equ	0xFD8
 35214                           
 35215                           	psect	rparam
 35216  0000                     tosu	equ	0xFFF
 35217                           tosh	equ	0xFFE
 35218                           tosl	equ	0xFFD
 35219                           pclatu	equ	0xFFB
 35220                           pclath	equ	0xFFA
 35221                           tblptru	equ	0xFF8
 35222                           tblptrh	equ	0xFF7
 35223                           tblptrl	equ	0xFF6
 35224                           tablat	equ	0xFF5
 35225                           prodh	equ	0xFF4
 35226                           prodl	equ	0xFF3
 35227                           intcon	equ	0xFF2
 35228                           intcon2	equ	0xFF1
 35229                           intcon3	equ	0xFF0
 35230                           indf0	equ	0xFEF
 35231                           postinc0	equ	0xFEE
 35232                           plusw0	equ	0xFEB
 35233                           fsr0h	equ	0xFEA
 35234                           fsr0l	equ	0xFE9
 35235                           wreg	equ	0xFE8
 35236                           indf1	equ	0xFE7
 35237                           postinc1	equ	0xFE6
 35238                           postdec1	equ	0xFE5
 35239                           plusw1	equ	0xFE3
 35240                           fsr1h	equ	0xFE2
 35241                           fsr1l	equ	0xFE1
 35242                           bsr	equ	0xFE0
 35243                           indf2	equ	0xFDF
 35244                           postinc2	equ	0xFDE
 35245                           postdec2	equ	0xFDD
 35246                           plusw2	equ	0xFDB
 35247                           fsr2h	equ	0xFDA
 35248                           fsr2l	equ	0xFD9
 35249                           status	equ	0xFD8
 35250                           
 35251                           	psect	temp
 35252  000042                     btemp:
 35253                           	opt stack 0
 35254  000042                     	ds	1
 35255  0000                     int$flags	set	btemp
 35256  0000                     wtemp6	set	btemp+1
 35257                           tosu	equ	0xFFF
 35258                           tosh	equ	0xFFE
 35259                           tosl	equ	0xFFD
 35260                           pclatu	equ	0xFFB
 35261                           pclath	equ	0xFFA
 35262                           tblptru	equ	0xFF8
 35263                           tblptrh	equ	0xFF7
 35264                           tblptrl	equ	0xFF6
 35265                           tablat	equ	0xFF5
 35266                           prodh	equ	0xFF4
 35267                           prodl	equ	0xFF3
 35268                           intcon	equ	0xFF2
 35269                           intcon2	equ	0xFF1
 35270                           intcon3	equ	0xFF0
 35271                           indf0	equ	0xFEF
 35272                           postinc0	equ	0xFEE
 35273                           plusw0	equ	0xFEB
 35274                           fsr0h	equ	0xFEA
 35275                           fsr0l	equ	0xFE9
 35276                           wreg	equ	0xFE8
 35277                           indf1	equ	0xFE7
 35278                           postinc1	equ	0xFE6
 35279                           postdec1	equ	0xFE5
 35280                           plusw1	equ	0xFE3
 35281                           fsr1h	equ	0xFE2
 35282                           fsr1l	equ	0xFE1
 35283                           bsr	equ	0xFE0
 35284                           indf2	equ	0xFDF
 35285                           postinc2	equ	0xFDE
 35286                           postdec2	equ	0xFDD
 35287                           plusw2	equ	0xFDB
 35288                           fsr2h	equ	0xFDA
 35289                           fsr2l	equ	0xFD9
 35290                           status	equ	0xFD8


Data Sizes:
    Strings     394
    Constant    567
    Data        183
    BSS         2336
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      5     253
    BANK4           192      0     168
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_31(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), 

    blinkForSeconds@blinkTicks	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> MyApp_Task@blinkTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> MyApp_Task@phone(BANK4[14]), GsmGprsTerminal@UartBuffer(BANK9[200]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> STR_15(CODE[20]), STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), 
		 -> STR_5(CODE[10]), Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), 
		 -> PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK4[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> callerNumber(BANK4[13]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), ModemEvtParser@ClipString(BANK0[5]), 
		 -> ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8951 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4613$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4613$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4613$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4613$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3066$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3056$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3056$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3032$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3032$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3032$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3032$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 14
		 -> MyApp_Task@phone(BANK4[14]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2533_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2533_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK4[13]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(COMRAM[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_30(CODE[12]), STR_29(CODE[19]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), STR_14(CODE[21]), 
		 -> STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), STR_10(CODE[14]), 
		 -> STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), STR_4(CODE[12]), 
		 -> STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> MyApp_Task@phone(BANK4[14]), Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), triggerRelay@txBuffer(COMRAM[2]), Terminal@TermTxBuffer(BANK1[50]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Eeprom_Read
    _initGprsModem->_Mdm_SetSmsFormat
    _Mdm_SetSmsFormat->_Uart_WriteString
    _blinkForSeconds->_secondsAppTimer
    _secondsAppTimer->___lwdiv
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _GetCallerNumber->_ClearBuffer
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCompare
    _StringCompare->_GetCallerNumber
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  670393
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  665762
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  332974
                                              0 BANK3      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  332788
                                              0 BANK3      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59042
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59042
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   41832
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                          25    25      0   72412
                                              0 BANK1      4     4      0
                        _ClearBuffer
                        _Eeprom_Read
                    _GetCallerNumber
                _Led_SetLedBlinkTime
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                      _StringCompare
                    _blinkForSeconds
                      _initGprsModem
 ---------------------------------------------------------------------------------
 (4) _initGprsModem                                        0     0      0   16081
                   _Led_SetLedStatus
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _blinkForSeconds                                      3     1      2   11928
                                             51 BANK0      3     1      2
                   _Led_SetLedStatus
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (5) _secondsAppTimer                                      9     6      3   10910
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Mdm_HangPhoneCall                                    0     0      0    2647
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Read                                          7     4      3   23938
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (5) _I2cSlv_QueryI2cData                                  7     0      7   23495
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    3711
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   70348
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   15573
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   11578
                                             48 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _StringCompare                                       11     5      6    1792
                                             37 BANK0     11     5      6
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   14664
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8643
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13894
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   41683
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   20878
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   20805
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteConstString                                3     1      2    2647
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (6) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                          10     4      6    4563
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    6931
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    6931
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2669
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) _Led_SetLedStatus                                     2     1      1     852
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _StringCopy
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _ClearBuffer
         _Eeprom_Read
           _I2cSlv_QueryI2cData
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_GetTimerStatus
               _GetElapsedTime
                 _GetOsTickCounter
             _OsTmr_StartTimer
               _GetOsTickCounter
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
         _GetCallerNumber
           _ClearBuffer
           _ReceiveEvt
         _Led_SetLedBlinkTime
         _Mdm_HangPhoneCall
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _Mdm_IsRinging
           _ReceiveEvt
         _Mdm_IsSmsReceived
           _ReceiveEvt
         _Mdm_RequestSmsData
           _GenerateEvt
         _StringCompare
           _GetCallerNumber (ARG)
             _ClearBuffer
             _ReceiveEvt
         _blinkForSeconds
           _Led_SetLedStatus
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _initGprsModem
           _Led_SetLedStatus
           _Mdm_SetSmsFormat
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _secondsAppTimer
             ___lwdiv
               ___wmul (ARG)
             ___wmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      5      FD      12       98.8%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      A8      14       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     987       8        0.0%
DATA                 0      0     CA7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 20 08:37:41 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5300  
                              _USB_SD_Ptr FC35                 __size_of_Mdm_SetSmsFormat 0050  
                    __size_of_TurnOnModem 0046                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 603E               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 2180  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0031  
                                     l202 209C                                       l203 20A4  
                                     l205 20EC                                       l206 2112  
                                     l208 211A                                       l160 1FE0  
                                     l209 213A                                       l161 1EB6  
                                     l162 201E                                       l170 1F7E  
                                     l171 1F94                                       l163 1EC2  
                                     l315 4422                                       l323 43EE  
                                     l164 1F02                                       l316 4398  
                                     l420 49D0                                       l500 4880  
                                     l173 1F98                                       l325 4408  
                                     l421 49F0                                       l237 604A  
                                     l174 1FA0                                       l166 1F10  
                                     l318 43A2                                       l422 49FC  
             __end_of_USBStdGetDscHandler 2CDC                                       l510 4852  
                                     l502 4812                                       l175 1FAC  
                                     l167 1F38                                       l319 43C8  
                                     l423 4A08                                       l511 4842  
                                     l503 4802                                       l192 2144  
                                     l176 1FC2                                       l416 4A1C  
                                     l424 4A14                                       l512 4866  
                                     l504 4828                                       l520 5714  
                                     l193 2024                                       l169 1F4A  
                                     l417 49C2                                       l441 17EC  
                                     l513 4846                                       l505 4806  
                                     l521 56E0                                       l194 217C  
                                     l418 4A4A                                       l442 15F4  
                                     l514 484C                                       l506 480C  
                                     l530 31B8                                       l195 2030  
                                     l179 1FCE                                       l419 49CA  
                                     l523 56FA                                       l531 321E  
                                     l196 2070                                       l700 592C  
                                     l444 163C                                       l532 31E4  
                                     l445 1684                                       l541 6008  
                                     l198 207E                                       l446 16CC  
                                     l199 2092                                       l631 29F2  
                                     l447 1714                                       l448 175C  
                                     l528 3224                                       l633 2A6A  
                                     l625 297E                                       l449 17A4  
                                     l529 3210                                       l538 600C  
                                     l546 3C9A                                       l651 5664  
                                     l707 5A92                                       l627 29A2  
                                     l715 5A06                                       l539 6004  
                                     l547 3CB6                                       l660 5688  
                                     l652 565E                                       l716 59DC  
                                     l709 5AAC                                       l629 29CA  
                                     l718 59F4                                       l639 6030  
                                     l832 5DCC                                       l844 3D6E  
                                     l668 0C44                                       _BDT 000400  
                                     l790 6066                                       l855 4D66  
                                     l775 2F1E                                       l864 4ABE  
                                     l856 4D0C                                       l857 4D80  
                                     l698 5910                                       l858 4D3C  
                                     l867 4AD0                                       l982 255A  
                                     l983 242E                                       l985 2452  
                                     l987 246C                                       l988 24A0  
                                     l989 2512                                       l998 2536  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                        ?_blinkForSeconds 0093                   __end_of_HighPriorityIsr 42EC  
                          ??_Mdm_MainTask 00AA                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 5C54                              ___awmod@sign 0082  
                    USBStdSetCfgHandler@i 0091                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0080                            _USBDeviceTasks 1BAA  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CE  
             Rtcc_AlarmConfig@AlarmConfig 007D              __end_of_I2cSlv_ReceiveI2cMsg 59D0  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 007D                            ??_getsUSBUSART 0087  
                USBEnableEndpoint@options 0085                                _CheckModem 242C  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 57B6  
         InitGprsNetwork@GprsNetInitState 01ED                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 57CE  
                                    l1110 55B6                               RiSm@Counter 02E2  
                                    l1031 3924                                      l1111 55CA  
                                    l1032 395E                                      l1033 3984  
                                    l1009 57E8                                      l1121 5622  
                                    l1027 39BC                                      l1035 39A4  
                                    l2003 50E2                                      l1107 55DC  
                                    l1220 0DE8                                      l1028 3914  
                                    l1052 1E88                                      l1060 1E5A  
                                    l1108 55A0                                      l1221 0E22  
                                    l1053 1DA2                                      l2005 50E8  
                                    l1222 0E96                                      l1070 2B90  
                                    l1223 0E5E                                      l1071 2A88  
                                    l1055 1EA2                                      l2104 5D60  
                                    l1216 1078                                      l1056 1DD4  
                                    l1152 5F08                                      l1136 5EE4  
                                    l3000 4330                                      l2105 5D4E  
                                    l1233 1010                                      l1225 0F3E  
                                    l1217 0DD0                                      l2113 543C  
                                    l3001 4372                                      l1401 539A  
                                    l1250 05F4                                      l1234 1054  
                                    l1226 0F78                                      l1074 2AA4  
                                    l1058 1E24                                      l2114 5406  
                                    l1402 535A                                      l2107 5D54  
                                    l1219 10B0                                      l1227 0FB8  
                                    l1075 2ABC                                      l2211 553E  
                                    l1091 1B80                                      l2060 269E  
                                    l2108 5D5A                                      l1252 0AB6  
                                    l1260 07F2                                      l1228 0FBC  
                                    l2212 5514                                      l1092 19FE  
                                    l1156 5BDE                                      l2116 5418  
                                    l1404 5394                                      l2061 2580  
                                    l1261 082C                                      l1253 060C  
                                    l1229 1000                                      l2213 553A  
                                    l2117 542A                                      l2062 26B4  
                                    l1270 096E                                      l1262 0856  
                                    l1254 0646                                      l1238 106E  
                                    l1078 2B2E                                      l1414 59CA  
                                    l2063 25A8                                      l1263 0890  
                                    l1255 0680                                      l1095 1A1A  
                                    l3111 5D04                                      l3032 4CE4  
                                    l2064 262C                                      l2224 5C12  
                                    l1264 08CA                                      l1256 06BA  
                                    l1096 1AD0                                      l1440 3792  
                                    l3112 5CF2                                      l3033 4CF2  
                                    l2073 32E4                                      l2225 5BFE  
                                    l1249 0A54                                      l1265 090E  
                                    l1257 073E                                      l1097 1AF4  
                                    l1409 5A84                                      l3105 575A  
                                    l1601 21CA                                      l2074 322C  
                                    l2090 4494                                      l2218 50D2  
                                    l1282 0A42                                      l1274 097E  
                                    l1258 06F6                                      l1442 37F0  
                                    l3106 5738                                      l2075 3300  
                                    l2083 44B8                                      l2091 44A2  
                                    l2219 5092                                      l1283 0A4A  
                                    l1275 09AA                                      l1419 5FF4  
                                    l1443 3804                                      l2403 041E  
                                    l1603 21F2                                      l1291 5770  
                                    l1380 3E9C                                      l3028 4CB0  
                                    l2076 324A                                      l2084 444A  
                                    l2412 0524                                      l1700 3616  
                                    l1620 1C20                                      l1612 1BD6  
                                    l1381 3EBE                                      l3029 4CA4  
                                    l2085 44E0                                      l1277 09C4  
                                    l1269 092A                                      l1437 382A  
                                    l1445 3822                                      l2413 0570  
                                    l2405 045E                                      l1605 2232  
                                    l1621 1C2C                                      l1613 1BCC  
                                    l1390 3F20                                      l2078 32BA  
                                    l2086 445A                                      l1278 0A32  
                                    l1438 3774                                      l2406 0578  
                                    l2430 10DE                                      l1710 2D38  
                                    l1630 1CC0                                      l1614 1BCA  
                                    l2182 4B5C                                      l1391 3F2C  
                                    l1383 3EE0                                      l2087 446C  
                                    l1439 3840                                      l1703 3692  
                                    l1711 2D12                                      l1623 1C54  
                                    l2183 4AE2                                      l2088 4486  
                                    l3312 3496                                      l2408 04B4  
                                    l3240 51C6                                      l2432 10FA  
                                    l1704 3658                                      l1640 5852  
                                    l1288 57A2                                      l2096 3A9A  
                                    l3081 54C8                                      l3313 344E  
                                    l2409 0478                                      l3241 51BC  
                                    l2441 114E                                      l1713 2DB0  
                                    l1641 5862                                      l1633 1CE6  
                                    l1625 1C6A                                      l1617 1BF2  
                                    l2097 39E2                                      l2185 4B48  
                                    l1386 3EE8                                      l3082 54C0  
                                    l3314 3466                                      l3306 340E  
                                    l1714 2D96                                      l1730 2CC4  
                                    l1722 3360                                      l1810 3504  
                                    l1626 1C76                                      l1618 1C02  
                                    l1379 3F3A                                      l3091 58DE  
                                    l3315 3476                                      l3307 3408  
                                    l2371 0152                                      l2427 131E  
                                    l2443 128E                                      l1731 2BC0  
                                    l1811 3518                                      l1635 1D0A  
                                    l1627 1CA0                                      l1619 1C0A  
                                    l2099 39F0                                      l1388 3F04  
                                    l2540 4548                                      l3092 58D6  
                                    l2372 01E2                                      l2380 01D0  
                                    l3252 5A20                                      l2428 10B8  
                                    l1900 41B6                                      l1724 33D4  
                                    l1812 351E                                      l1628 1CAC  
                                    l2452 60D4                USBConfigureEndpoint@handle 0083  
                                    l3085 54E8                                      l2621 54A4  
                                    l1645 403A                                      l3309 3436  
                                    l3237 51AC                                      l3253 5A1A  
                                    l2445 12F8                                      l2437 110E  
                                    l1733 2BD4                                      l1805 357E  
                                    l1637 1D28                                      l3086 54F2  
                                    l2542 4574                                      l3246 5C9A  
                                    l3270 1874                                      l3318 34D4  
                                    l2390 0304                                      l2374 01AE  
                                    l2630 3850                                      l3238 51A6  
                                    l1902 41CE                                      l1822 137E  
                                    l1734 2C5C                                      l1750 4122  
                                    l1814 3524                                      l1806 34EE  
                                    l1670 4678                                      l2543 4584  
                                    l1647 4064                                      l3095 58F6  
                                    l3247 5C90                                      l2367 05D2  
                                    l2391 02C6                                      l2375 019C  
                                    l2631 386A                                      l2447 1318  
                                    l2439 112E                                      l1903 41DC  
                                    l1831 14EA                                      l1823 1384  
                                    l1743 4164                                      l1815 3542  
                                    l2455 60CE                                      l2560 4706  
                                    l3096 5900                                      l3344 5D3E  
                                    l3272 18C8                                      l2368 00E2  
                                    l2632 38CC                                      l1664 3AF4  
                                    l1904 41FA                                      l1736 2C64  
                                    l1744 40EA                                      l1816 355E  
                                    l1808 34F8                                      l1672 4692  
                                    l2472 5F42                                      l2553 4748  
                                    l2561 471E                                      l1649 40C0  
                                    l1921 4922                                      l3281 1902  
                                    l3361 5AFC                                      l2385 0392  
                                    l2641 38EC                                      l1905 4212  
                                    l1841 1570                                      l1833 14B2  
                                    l1825 13F6                                      l1737 2CB4  
                                    l1809 34FE                                      l1681 30BC  
                                    l2473 5F34                                      l2554 46C8  
                                    l2810 36E4                                      l3354 5F90  
                                    l2386 0326                                      l1834 14D0  
                                    l1682 3064                                      l2619 5498  
                                    l2387 02B4                                      l2635 3870  
                                    l1843 15C6                                      l1827 143E  
                                    l1739 2CBC                                      l1747 417A  
                                    l1771 49AA                                      l2475 5F3C  
                                    l1924 48D0                                      l3292 612A  
                                    l3284 1914                                      l3268 185C  
                                    l2388 0250                                      l1676 47CA  
                                    l1836 1532                                      l1828 1440  
                                    l1748 40FC                                      l1772 49A4  
                                    l2813 3734                                      l1925 48FC  
                                    l3349 5E4C                                      l3285 1980  
                                    l3365 6112                                      l2397 0402  
                                    l2637 38B8                                      l1837 153E  
                                    l1829 145C                                      l1749 4102  
                                    l1757 583A                                      l1765 5B34  
                                    l2581 302A                                      l2566 5B6C  
                                    l2830 4C36                                      l2814 36F6  
                                    l1926 48D6                                      l3278 18D8  
                                    l2398 03D2                                      l2638 389A  
                                    l1790 3F90                                      l1782 4FC2  
                                    l1838 15BA                                      l1686 30E6  
                                    l1758 5838                                      l1766 5B32  
                                    l2582 2F36                                      l2655 5262  
                                    l2559 475E                                      l2807 36A2  
                                    l3287 19A6                                      l3279 18E8  
                                    l1951 26EA                                      l1695 35E2  
                                    l1791 3F96                                      l2656 5276  
                                    l2840 4DA8                                      l2816 3768  
                                    l2808 369C                                      l3288 19E0  
                                    l1960 2754                                      l1792 4012  
                                    l1784 5010                                      l2592 3026  
                                    l2584 2F50                                      l2833 4C5E  
                                    l1953 271E                                      l1697 35EC  
                                    l1793 3FD8                                      l2834 4C68  
                                    l2826 4C10                                      l2842 4DBE  
                                    l2586 2FAE                                      l2835 4C76  
                                    l2827 4C20                                      l2843 4DB6  
                                    l1963 27CE                                      l1699 3650  
                                    l1795 3FF8                                      l2587 2F9E  
                                    l1964 2796                                      l1956 2730  
                                    l2829 4C3E                                      l1957 2734  
                                    l1949 26DC                                      l2589 2FEE  
                                    l2846 4DD6                                      l1990 5EA4  
                                    l2847 4DE0                                      l2839 4D9C  
                                    l1967 27E8                                      l1959 278C  
              __size_of_Mdm_IsSmsReceived 0024                                      l2848 4DEE  
                                    l1968 27EC                                      l1992 5EAA  
                              _Led1OutSts 01FC                                      l1899 421C  
                                    l1997 50EE                                      l1989 5EB4  
                                    l2994 58A8                                      l2988 5FD4  
                                    l2998 42F4                                      STR_1 FFE5  
                                    STR_2 FF74                                      STR_3 FFDE  
                                    STR_4 FFC1                                      STR_5 FFCD  
                                    STR_6 FFEF                                      STR_7 FFEA  
                                    STR_8 FE96                                      STR_9 FECA  
                              _Led2OutSts 01FA                                _Led3OutSts 01F8  
                                    u8205 5704                                      u8206 5706  
                                    u8215 5710                     ??_USBCtrlTrfTxService 007D  
                                    u8216 5712                                      _UCFG 000F39  
                                    u8185 56EA                                      u8186 56EC  
                                    u8195 56F6                                      u8196 56F8  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    u9705 5E26                                      u9706 5E28  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u9685 5E0E                                      u9686 5E10  
                                    u9695 5E1A                                      u9696 5E1C  
                              _AlarmEvent 01F7                            ?_StopCondition 0001  
                         ??_Mdm_DrvMainFn 0081                       _OsTmr_OsTickCounter 031C  
                           __CFG_FCMEN$ON 000000                        _InitModemInterface 6292  
                secondsAppTimer@isExpired 0090                           _CDCDataInHandle 01D1  
            I2c_ReadData@TentativeCounter 0032               Led_SetLedBlinkTime@OnTimeMs 007D  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 003A                                      _atoi 369A  
                                    _main 6254                           ??_Mdm_IsRinging 0081  
                                    _itoa 5882                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 5BEA                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0314  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 42EC                                      _xtoi 33F8  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 629A  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 49BC  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 5A10                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 54A8   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 6146  
                          ?_Mcu_SetWdgSts 0001                            ??_Mcu_ClearWdg 007D  
              __end_of_USBCheckStdRequest 35C2                           _Rtcm_SystemDate 0300  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 61E8  
                      ?_Rtcc_GetRtccValue 0001                       ?_InitModemInterface 0001  
                      StringCompare@Index 008E                            _GetElapsedTime 3D0A  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091                       StringCopy@SourceStr 007D  
             __end_of_OsAlrm_ClearOsAlarm 5358                                     EECON2 000FA7  
              InitGprsNetwork@UartMessage 0100                  ??_USBStdGetStatusHandler 007D  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 5A8C  
                     ??_Rtcc_GetRtccValue 007D                           __end_of_Welcome FDB8  
                       ?_UpdateOsCounters 0001                   Uart_ClearRxBuffer@Index 007D  
                              _GetSmsText 00DD                                     l11134 604A  
                                   l11810 5CF2                                     l14070 1D9A  
                                   l13328 5C32                                     l13192 49D6  
                                   l14092 1E54                                     l13428 21C2  
                                   l11848 35EC                                     l13456 222A  
                                   l14290 0FB0                                     l12826 3730  
                                   l11954 3358                                     l12676 5738  
                                   l15084 4E74                                     l14456 09A4  
                                   l14608 1CB8                                     l15096 2E0A  
                                   l15446 5108                                     l13864 4584  
                                   l15448 5138                                     l13944 3224  
                                   ?_atoi 0083                                     ?_main 0001  
                                   ?_itoa 0093                           __end_of___awdiv 4C80  
                                   STR_10 FF4A                                     STR_11 FF58  
                                   STR_12 FF9C                                     STR_20 FF3C  
                                   STR_13 FF66                                     STR_21 FE6C  
                                   STR_30 FFA9                                     STR_14 FEB5  
                                   STR_31 FFD7                                     STR_15 FEF3  
                                   STR_23 FEDF                                     STR_24 FFF4  
                                   STR_16 FF2B                                     STR_25 FFF4  
                                   STR_17 FF82                                     STR_26 FE93  
                                   STR_18 FF8F                                     STR_27 FF1A  
                                   STR_28 FFB5                           __end_of___awmod 4DF8  
                                   STR_29 FF07         __size_of_USBCtrlEPServiceComplete 0100  
                         __end_of___lldiv 4D04                                     ?_utoa 008A  
                                   u11000 565A                                     u11300 5E48  
                                   u10430 363E                                     u11320 5D2E  
                                   u10600 2C56                                     u12130 4DC2  
                                   u11410 5AEC                                     u10450 3680  
                                   u11260 4CB4                                     u10620 2CA8  
                         ___awdiv@divisor 007F                                     u10437 3634  
                                   u12070 4C42                                     u13110 51EE  
                                   u10550 338C                                     u10607 2C4C  
                                   u12305 0AF4                                     u10457 3676  
                                   u13050 04BE                    __end_of_USBDeviceTasks 1D32  
                                   u11435 61AC                                     u12315 0B14  
                                   u10627 2C9E                                     u11436 61AE  
                                   u11540 5ABA                                     u11700 48AC  
                                   u12165 56AE                                     u12325 0B9E  
                                   u13117 51E4                                     u11390 5AE0  
                                   u10590 2C26                                     u13215 4E5C  
                                   ?_xtoi 0083                                     u12440 554A  
                                   u10920 58E2                                     u10840 1554  
                                   u12345 0C78                                     u13225 61C0  
                                   u12450 50CA                                     u12370 593A  
                                   u13250 4400                                     u13330 24C8  
                                   u11490 29C6                                     u13170 3904  
                                   u12530 21E6                                     u14210 1D2E  
                                   u13226 61C2                                     u12355 0C98  
                                   u13411 1D4C                                     u13260 441A  
                                   u13500 1EA8                                     u14300 277C  
                                   u12365 0D22                                     u13421 1D5E  
                                   u12285 616C                                     u10597 2C1C  
                                   u13350 24DC                                     u12286 616E  
                                   u13431 1D70                                     u11920 189E  
                                   u14320 27BE                                     u12560 228E  
                                   u12457 50C0                                     u10890 54CC  
                                   u14330 27D6                                     u14307 2772  
                                   u11940 18AE                                     u13285 6156  
                                   u13286 615A                                     u14327 27B4  
                                   u11890 1864                 ?_USBCtrlEPServiceComplete 0001  
                                   u14371 5074                                     u14470 46D8  
                                   u14631 4B3A                                     u14641 4B52  
                                   u14758 4EA6                                     u14759 4ED4  
                                   u14798 2ED2                                     u14799 2F00  
                         __end_of___lwdiv 54FC                           __end_of___lwmod 590A  
               TurnOnModem@TurnOnMdmState 0029                        ??_UpdateOsCounters 0019  
                                   i1l742 22EE                                     i1l747 242A  
                                   i2l680 3C32                                     i2l681 3B82  
                                   i2l690 3BCC                                     i2l682 3B90  
                                   i2l686 3BB2                                     i2l688 3C24  
                                   i2l689 3BEC                                     _UADDR 000F38  
                         ___awdiv@counter 0081                                     _AlCfg 03AD  
            Led_SetLedBlinkTime@OffTimeMs 007F                   I2cSendMsgSm@I2cComState 01E9  
                                   _USTAT 000F64                   __end_of_LedStateMachine 44E6  
      __size_of_USBCtrlEPAllowStatusStage 00CC                       ___lmul@multiplicand 0081  
                    ??_InitModemInterface 007D                                     _RxLen 00C2  
         __end_of_USBCtrlEPAllowDataStage 46C6                             _StringCompare 54FC  
                                   _sd000 FE68                                     _sd001 FE21  
                                   _sd002 FDFB            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 007E                      __end_of_Led_MainTask 3AAC  
                             _ApnLenLocal 01F1                    ??_OsTmr_GetTimerStatus 0097  
            LedPulseStateMachine@LedPulse 008A                           __end_of_isalpha 5D48  
                         __end_of_isdigit 5FDC                                     atoi@a 0088  
                                   atoi@s 0083                               _ClearBuffer 5BEA  
                         __end_of_isspace 5E54               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0038                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 5F98  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 5EA2                 __end_of_Rtcc_GetRtccValue 4A50  
             I2cSlv_QueryI2cData@TxBuffer 00A2                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 4F46                                     utoa@c 0092  
                           ??_SetBaudRate 009E                                     utoa@v 0090  
                                   status 000FD8                           _I2cSlv_MainTask 5358  
               Rtcc_GetRtccValue@RetValue 007F                       i1___wmul@multiplier 0019  
                                   wtemp6 0043                           __end_of_sprintf 3912  
                         __end_of_tolower 6116                       __end_of_Mcu_Int0Isr 62C2  
                     __end_of_Mcu_Int1Isr 62BE                                     xtoi@c 008A  
                                   xtoi@s 0083                           __end_of_toupper 612E  
                  __end_of_GetElapsedTime 3DD2                     __end_of_UartSetConfig 5250  
                  __size_of_initGprsModem 009E               Rtcc_SetRtccValue@RtccPtrVal 0088  
                Eeprom_Read@MemoryAddress 00AC                     __end_of_Term_MainTask 60E6  
                 LedStateMachine@LedBlink 0093                          __end_of_GetSmsSm 2BAE  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0083  
            __size_of_USBStdSetCfgHandler 00E6                   OsTmr_StartTimer@Timeout 0083  
                    __end_of_I2cSetConfig 5E00                            _InitSchedTimer 5D78  
                         __initialization 280C                          __end_of_MdmCntSm 443E  
                    __end_of_I2c_ReadData 2180                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 3F5E                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 2F22                              __end_of_atoi 3772  
                            __end_of_main 6260                       StringCompare@Result 008D  
                            __end_of_itoa 58C6                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01E1                              __end_of_utoa 4396  
                            __end_of_xtoi 34DE                  __end_of_Rtcm_SetRtccDate 5400  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 627E                      initGprsModem@initMdm 01D6  
            __size_of_I2cSlv_QueryI2cData 00D2                      Term_MainSm@TermDelay 03CA  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FE56  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4892  
                              _ReceiveEvt 5DA6          Uart_WriteStringLen@StringToWrite 0080  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                        _Mdm_RequestSmsData 6208  
                          ?_StringCompare 0085                          __end_of_Terminal 05EC  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 4D04                              _cdc_mem_type 01E2  
                      ??_Mcu_ConfigExtInt 007D                         CheckModem@Timeout 03EB  
                         ReceiveEvt@Event 007D                               ?_CheckModem 0001  
                        _CDCDataOutHandle 00BC                           ??_StopCondition 007D  
                      ??_Led_SetLedStatus 007E                          ___awdiv@dividend 007D  
      __end_of_Uart_MdmGsmGprsReadService 3C42                _Uart_MdmGsmGprsReadService 3B78  
              __end_of_UsbDevice_MainTask 5EC6                           getsUSBUSART@len 0086  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 603E  
                        ??_LowPriorityIsr 0068                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F                               _Eeprom_Read 5454  
      Irq_InitIntController@IntPriorityEn 007F                     __size_of_CDCTxService 0146  
                                  i1l1409 5BAE                               _GenerateEvt 612E  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 002C  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC3D  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 4FB2                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 5DA6                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 62B2  
                              _UartConfig 0324                      __end_of_Mdm_MainTask 55EE  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                                    _Relay1 01DC  
                                  _Relay2 01DB                                    _Relay3 01DA  
                                  _Relay4 01D9                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 57B4  
                                  _SmsLen 00D4                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 56DA                                    ___lmul 5250  
                    _I2cSlv_ReceiveI2cMsg 5990                        TurnOnModem@Counter 02DC  
                            ?_putUSBUSART 0083                                    ___wmul 5E54  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 55EE  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5400  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4928  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
                       _USBEnableEndpoint 583E           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0001                              ReadByte@Byte 007D  
                                  _memcpy 5726                    __size_of_HttpGetMethod 04D0  
                                  _memset 5CE8                                    clear_0 28A6  
                                  clear_1 28B8                                    clear_2 28C4  
                                  clear_3 28D0                                    clear_4 28DC  
                                  clear_5 28E8                                    clear_6 28F4  
                                  clear_7 2900                                    clear_8 290C  
                                  clear_9 2918                          ___awdiv@quotient 0083  
                      ??_Rtcm_GetRtccDate 0089                           ___awmod@divisor 007F  
                      _ExtInt0IsrCallback 02E6                         ?_OsTmr_StartTimer 0081  
                              _PostMethod 01EE                           ___awmod@counter 0081  
                     UartWriteByte@Module 007E                       GetSmsSm@GetSmsState 01F4  
                      ?_USBEnableEndpoint 0085                                    _strcat 519C  
                                  _strcpy 5C86                                    _strlen 5A10  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 5B06  
                HttpGetMethod@UartMessage 0100                             _initGprsModem 46C6  
                      ??_OsTmr_StartTimer 0087                                    itoa@cp 0099  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9111 03B7  
                     ModemEvtParser@F9113 04D0                       ModemEvtParser@F9107 03C1  
                     ModemEvtParser@F9109 03BC                              _CDCTxService 26C6  
                     MdmCntSm@MdmCntState 002E                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC34  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 04B8                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 62AA  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 0039  
                 __end_of_I2cSlv_MainTask 53AC                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 62BE  
                             _Mcu_Int1Isr 62BA                      ?_Led_SetLedBlinkTime 007D  
                               ??_sprintf 0083                                 ??_tolower 007D  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 007D                       ModemEvtParser@Match 00A8  
                    _controlTransferState 00CC                     __end_ofi1_GenerateEvt 6188  
                 Eeprom_Read@SlaveAddress 00AD                     __end_of_Rtcm_MainTask 4B6E  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 02E4  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2936                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                  __end_of_EnableReceiver 62B6                        __size_of_WriteByte 000A  
                 __size_of_ModemEvtParser 0182               Uart_WriteConstString@Module 0082  
               Uart_WriteStringLen@Module 0084                             ___rparam_used 000001  
                             _ReadAddress 01F6                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 568C  
         I2cSlv_QueryI2cData@TimeoutTimer 0339                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 507E  
                          __pcstackBANK10 0A00                     I2cDummyTx@DummyBuffer 01FE  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
Uart_MdmGsmGprsReadService@ServiceCounter 0005                           MdmCntSm@Counter 02E0  
                   ?_I2cSlv_ReceiveI2cMsg 0080                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 5882                               _InitNetwork 00DB  
                             ?_MyApp_Task 0001                  LedStateMachine@LedOutSts 0098  
                           __end_of_sd000 FE6C                             __end_of_sd001 FE3F  
                           __end_of_sd002 FE21                              __pidataBANK1 62C2  
                            __pidataBANK2 6246                              __pidataBANK3 594E  
                            __pidataBANK4 60E6                              __pidataBANK5 554E  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 590A                       __size_of_CheckModem 0152  
              __end_of_Uart_ClearRxBuffer 5C54             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 0070                        __end_of_I2cDummyTx 60B2  
             __end_of_USBCtrlTrfInHandler 4020                           __CFG_DSWDTPS$G2 000000  
                    StringCompare@String1 0085                      StringCompare@String2 0087  
                      ??_UartSetConfigLow 007D                       __end_of_Term_MainSm 135A  
                   LedStateMachine@LedOut 0091                     LedStateMachine@LedSts 008F  
                      LedStateMachine@Led 0099                                 ?i1___wmul 0019  
                          ?_initGprsModem 0001                       __end_of_RtccIrqInit 6172  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 008B  
           I2cSlv_QueryI2cData@I2cOpState 01E8                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 0040                                _SystemInit 5CB8  
                              _cdc_notice 0459                     __end_of_Tmr_TmrBPrSet 322A  
                     __end_of_Rtcc_RtcIsr 62BA                                _cdc_rx_len 00C7  
                       __end_of_MsgFormat FD2F                                _cdc_tx_len 00C5  
                     Terminal@UsbRxBuffer 0A00                               ?_OsTmr_Wait 009B  
                   ??_Led_SetLedBlinkTime 0081                       Terminal@UsbTxBuffer 0200  
                               ?_GetSmsSm 0001               __end_ofi1_I2cSlv_SendI2cMsg 5BB4  
                ??_USBCtrlTrfSetupHandler 0097                   _USBTicksSinceSuspendEnd 01E3  
                          ClearBuffer@Len 007F                           _secondsAppTimer 44E6  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 5E00  
                  _USBStdGetStatusHandler 40DE                         __end_of_SendSmsSm 1BAA  
     Mcu_StartSystemPll@PllStartupCounter 007D                            _GprsNetworkSts 01F0  
                          _Rtcc_RtcConfig 4588                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                                __pbssBANK2 02C8  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                             _HttpGetMethod 05EC  
                 ?_Pm_DsReleasePinControl 0001                               _MessageText 0572  
                          ??_Wdg_MainTask 007E                     __end_ofi2_GenerateEvt 619E  
                __end_of_Uart_WriteString 5ACA                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 5F32  
                             _SetBaudRate 568C                 initGprsModem@modemCounter 03B5  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01F2  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 313C                                 ?_TmrBInit 007D  
                           _CheckTxStatus 627E                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
                     MyApp_Task@cmpString 0100                                 ?_Terminal 0001  
                                 ?___lmul 007D                              _Led_MainTask 39E0  
                          _Rtcc_UnlockRtc 61E8                              _I2cBusStatus 01EA  
                                 ?___wmul 007D           __size_of_OsAlrm_ProcessOsAlarms 0156  
                           _ScheduleTasks 2E00                 Uart_InitUartModule@Module 00A1  
                   __end_of_I2c_WriteData 2022                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE56  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4928  
                   __end_of_UpdateSchFlag 6096                              _EepromBuffer 04A9  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2E00  
                       __end_of_WriteByte 6274                        _USBCheckStdRequest 34DE  
                       _configDescriptor1 FDB8                       Wdg_MainTask@Options 0001  
                             _PhoneNumber 0495               __end_of_USBCtrlTrfTxService 369A  
                     _USBStdSetCfgHandler 3312                         triggerRelay@F8983 03C8  
                 __size_of_ConfigureModem 00CE                    I2cSlv_QueryI2cData@Ret 01E7  
                         __CFG_WDTPS$2048 000000                              _I2cSetConfig 5DD4  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 4628                                   _SSP2ADD 000F74  
                              ??_GetSmsSm 0087                                   _SSP2BUF 000F75  
                            _I2c_ReadData 2022                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 3E9A  
                        ?_I2cSlv_MainTask 0001                        GsmGprsTerminal@SMS 01DF  
          __end_of_Pm_DsReleasePinControl 62A0                       ?_USBCheckStdRequest 0001  
                   Mdm_SetSmsFormat@Index 0083              __size_of_USBStdGetDscHandler 012E  
                              ??_MdmCntSm 0081                       __size_of_MyApp_Task 011A  
                                 _UIEbits 000F36                            ?_HttpGetMethod 009B  
                            ?_ClearBuffer 007D                      _MdmOnOffPulseRequest 00E2  
                __size_of_blinkForSeconds 003A                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 002A                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FD                       _I2cSlv_QueryI2cData 3772  
                                 _Led2Sts 01FB                                   _Led3Sts 01F9  
              __end_of_Sch_SchmIntService 6246                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 0090                             _cdc_trf_state 00C6  
                              ??_ReadByte 007D                       _Uart_InitUartModule 0ABC  
                   __end_of_Mdm_DrvMainFn 62A6                          _ComChecCompleted 002B  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 5F0E  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                                   _RelayB1 01DE  
                                 _RelayB2 01DD                               ?_StringCopy 007D  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D8  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 4EDA                    __end_of_Rtcc_UnlockRtc 61F8  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 61B2                               _Term_MainSm 10B6  
 Uart_WriteConstString@ConstStringToWrite 0080                                   _Welcome FD2F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 00A2                         _Sch_MainScheduler 605C  
                  ?_Uart_WriteConstString 0080                       __size_of_OsTmr_Wait 0082  
                    ??_USBCheckStdRequest 0097                               _RtccIrqInit 615C  
           __size_of_USBCtrlTrfOutHandler 0066                                   ___awdiv 4BFA  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 4D86  
                                 ___lldiv 4C80                          ??_USBDeviceTasks 0098  
                         __size_of___wmul 0028                                   ___lwdiv 54A8  
                       ??_USBStallHandler 007D                                   ___lwmod 58C6  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                      ?_I2cSlv_QueryI2cData 00A2  
                         ??_initGprsModem 0099                               _Rtcc_RtcIsr 62B6  
                    __size_of_putUSBUSART 0022                                   __pcinit 280C  
                      getsUSBUSART@buffer 0084                           __size_of_memcpy 0048  
                               _I2cComSts 00CF                       __end_of_TurnOnModem 57FA  
                         __size_of_memset 0030                                 _I2cConfig 034F  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDFB  
                                 __ramtop 0F00                               Terminal@Len 03A9  
                      ??_Rtcm_SetRtccDate 0091                     Tmr_TmrBIrqSet@TmrNumb 007F  
                    ?_Uart_InitUartModule 009D                                   __ptext0 6254  
                                 __ptext1 5CB8                                   __ptext2 6260  
                                 __ptext3 629A                                   __ptext4 603E  
                                 __ptext5 60B2                                   __ptext6 5E00  
                                 __ptext7 5D78                                   __ptext8 3C42  
                                 __ptext9 313C                                   _inPipes 00B0  
                   __size_of_Mcu_ClearWdg 0004                 GsmGprsTerminal@UartBuffer 0900  
             _USBDeferOUTDataStagePackets 0025                           __size_of_strcat 005C  
                 __end_of_secondsAppTimer 4588                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                      InitGprsNetwork@Apn 009B                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 5D18  
                                 _isdigit 5FBA                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00B0                               ?_SystemInit 0001  
                                 clear_10 2924                                   clear_11 2930  
                        ___awmod@dividend 007D                         ??_InitializeTasks 03F8  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 01D3  
     __end_of_Tmr_RegisterTmr2IsrCallback 626A               _Tmr_RegisterTmr2IsrCallback 6260  
                                 _isspace 5E2A                              _Mdm_MainTask 559E  
                                 _isupper 5F76               __size_of_InitModemInterface 0008  
                    HttpGetMethod@GetData 009B                    ?_Irq_InitIntController 007D  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 22D6                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC3D                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 5F0E                                   _sprintf 3844  
                                 _tolower 60FE           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6228                          _HttpGetDataLocal 03A0  
                __end_of_Mdm_SetSmsFormat 563E                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 4240                                   _toupper 6116  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2936                              _getsUSBUSART 4892  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DC               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC3B       Irq_InitIntController@PerInt_LowPInt 007E  
                                 memcpy@d 0084                                   memcpy@n 0081  
                                 memcpy@s 0086                       _pBDTEntryEP0OutNext 00BE  
                                 itoa@buf 0093                                   memset@c 007F  
                                 itoa@val 0095                                   memset@n 0081  
                  Term_MainSm@FwkMinorStr 0136                                   memset@p 0083  
                           __Lmediumconst FC34                            _ModemEvtParser 1D32  
                                 int_func 4240                           _USB1msTickCount 0318  
         _dummy_encapsulated_cmd_response 0374                                 i1u1454_20 22EC  
                               i1u1458_28 240C                                 i1u1458_29 2420  
                               i1u1483_28 5F1E                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                         ?_Rtcc_AlarmConfig 007D  
                   ??_USBStdSetCfgHandler 0091                           ___lldiv@divisor 008D  
               __end_of_Sch_MainScheduler 607A                 __size_of_Led_SetLedStatus 0030  
                              ??_isxdigit 0080                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0095                         _Rtcc_SetRtccValue 15EE  
                       _Rtcc_SetRtcStatus 6146                       _ActivateRiDetection 0041  
                         ?_Rtcc_UnlockRtc 0001                        ??_Rtcc_AlarmConfig 007F  
                      __end_of_USBSuspend 5C86                             StringCopy@Len 0081  
                       ?_MdmHttp_MainTask 0001                  I2cSlv_QueryI2cData@RxLen 00A7  
                 _USBCtrlEPAllowDataStage 4628                        _UsbDevice_MainTask 5EA2  
                I2cSlv_QueryI2cData@TxLen 00A4                              _Mcu_ClearWdg 62A6  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 303C                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01EB                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 257E                           _RtccIsrCallback 02E8  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
              _USBStatusStageEnabledFlag1 00C8                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 5F54  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0308                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 61C4  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 5FFE  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 007F  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02EA  
                        _HttpGetMethodSts 01EF                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                        _BothEP0OutUOWNsSet 01E4  
                         ??_HttpGetMethod 009D                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0037                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB4  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D6                     __end_of_StopCondition 62AE  
                __size_of_HighPriorityIsr 42E4                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 036B  
                               _Led2Blink 0362                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0359              __end_of_USBTransferOnePacket 40DE  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 038F  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 615C  
                               _Led2Pulse 0389                                 _Led3Pulse 0383  
                       _I2cSlv_SendI2cMsg 5A4E           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                         ??_blinkForSeconds 0095  
                         ??_ScheduleTasks 03F8                            _Tmr_TmrBConfig 3C42  
                 Tmr_TmrBPrSet@Postscaler 0099                         putUSBUSART@length 0085  
                 MdmHttp_MainTask@Options 0001                     __end_of_Mcu_SetWdgSts 61C4  
                       _OsAlrm_SetOsAlarm 3DD2                      Terminal@TermRxBuffer 0540  
                      ?_I2cSlv_SendI2cMsg 0080                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 56DA                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 57B4                                 _ClipEvent 00DF  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
                               _GetMethod 00DA                    _USBCtrlTrfSetupHandler 4B6E  
                      ?_OsAlrm_SetOsAlarm 0083                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 22D6     __end_of_USBIncrement1msInternalTimers 5F76  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 5F54  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 52A8  
                          _CheckAckStatus 6288                            __end_of___wmul 5E7C  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 61D6  
                  __size_of_UartWriteByte 0020                            __end_of_memcpy 576E  
                      Terminal@PackageLen 02EF         Uart_MdmGsmGprsReadService@RxState 002D  
                          __end_of_memset 5D18                        _UartTxBufferStatus 563E  
                     ??_OsAlrm_SetOsAlarm 008B                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E5  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6238  
                               _MdmStatus 00D2                            __end_of_strcat 51F8  
                          __end_of_strcpy 5CB8                            __end_of_strlen 5A4E  
                          __end_of_strtol 19F2                       start_initialization 280C  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                          _ConfigureModem 3912                              ??_OsTmr_Wait 00A1  
                  Uart_WriteString@Module 0082             USBCtrlTrfRxService@byteToRead 007E  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 0089  
                         _MdmResetRequest 003D                       ?_UartTxBufferStatus 0001  
                      _Uart_ClearRxBuffer 5C20                 __size_of_UartSetConfigLow 0058  
                        ??_EnableReceiver 007D                               _cdc_data_rx 0500  
                             _cdc_data_tx 07B6              __end_of_USBConfigureEndpoint 47FC  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC3F  
                      __end_of_MyApp_Task 303C                          _UpdateOsCounters 6218  
                         ?_ModemEvtParser 0001                I2c_InitI2cModule@I2cConfig 00A2  
                       __size_of_GetSmsSm 0132         __end_of_USBCtrlEPAllowStatusStage 3B78  
               __end_of_I2cSlv_SendI2cMsg 5A8C                    Uart_WriteStringLen@Len 0082  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 49BC  
                       __size_of_MdmCntSm 00A8                         ?_Uart_WriteString 0080  
                   __size_of_SetAckStatus 0014                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 6208                       ?_Uart_ClearRxBuffer 0001  
                            ?_SetBaudRate 0096                    __end_of_Tmr_TmrBConfig 3D0A  
                               _SendSmsSm 19F2                 __end_of_OsAlrm_SetOsAlarm 3E9A  
                  __end_of_Tmr_TmrBIrqSet 5726                                 _TaskTable 05A4  
                               _RingEvent 00E0                 ??_USBCtrlEPAllowDataStage 007E  
                      ??_Uart_WriteString 0082                               _SystemState 00D5  
                       __size_of_ReadByte 000A                                 _RtcConfig 03B1  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 009D  
                             ??_CDCInitEP 0089                            USBDeviceInit@i 0085  
                           _UartSetConfig 51F8                    Led_SetLedBlinkTime@Led 0081  
                      __end_of_ReceiveEvt 5DD4                    _pBDTEntryEP0OutCurrent 00C0  
                           _Term_MainTask 60CC                   USBTransferOnePacket@dir 007D  
                    ??_UartTxBufferStatus 007D                   USBTransferOnePacket@len 0080  
                   Tmr_TmrBConfig@TmrNumb 00A3                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 6292                                  ??___lmul 0085  
                           _isxdigit$6469 0081                                 Terminal@i 00A4  
                                ??___wmul 0081                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 007D                       _USBStdGetDscHandler 2BAE  
              I2cSlv_SendI2cMsg@SlaveAddr 0082                        __end_of_OsTmr_Wait 4D86  
                      HttpGetMethod@Index 01C8                               __pdataBANK1 01FF  
                             __pdataBANK2 02F3                               __pdataBANK3 03B7  
                             __pdataBANK4 04D0                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                                ??_strtol 008F               __end_of_Led_SetLedBlinkTime 5454  
                  __end_of_ConfigureModem 39E0                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00D7            __end_of_USBStdGetStatusHandler 4190  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC3F  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 554E                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200                             __pcstackBANK3 03F8  
            __size_of_USBCtrlTrfInHandler 00C2                           RiSm@MdmDrvState 002F  
                  MyApp_Task@blinkSeconds 01D5                              _SetAckStatus 619E  
                            _isalpha$6459 0081                    GenerateEvt@EventStatus 007F  
                               _WriteByte 626A                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6193 007E             UpdateSchFlag@InterruptCounter 02DE  
               SetUartBaudRate@UartConfig 0096                       _Uart_WriteStringLen 59D0  
     InitGprsNetwork@GprsNetInitNextState 00D1                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 601E                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 5B40              __end_of_LedBlinkStateMachine 26C6  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 57FA                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 030E                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 60B2  
              __end_of_USBCheckCDCRequest 4240              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5300                           ?_Tmr_TmrBIrqSet 007D  
                    MyApp_Task@blinkTicks 03F6                   ??_Uart_WriteConstString 0082  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 601E  
                            ??_StringCopy 0083                          _Led_SetLedStatus 5D48  
                       ??_HighPriorityIsr 0007                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0083                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 5FDC                          GenerateEvt@Event 007D  
                  __size_of_Tmr_TmrBPrSet 00EE                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0080  
                           __pmediumconst FC34                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 007E  
                       __size_of_isxdigit 003C                                  ?___awdiv 007D  
                               __ptext100 5454                                 __ptext101 3772  
                               __ptext110 1D32                                 __ptext102 4D04  
                               __ptext111 5C20                                 __ptext103 5A4E  
                               __ptext120 4396                                 __ptext112 54FC  
                               __ptext104 5990                                 __ptext121 6292  
                               __ptext113 2A7C                                 __ptext105 5FDC  
                               __ptext130 4A50                                 __ptext122 0DC8  
                               __ptext114 3912                                 __ptext106 51F8  
                           Terminal@Index 00A6                                 __ptext131 3D0A  
                               __ptext123 05EC                                 __ptext115 0ABC  
                               __ptext107 57B4                                 __ptext140 5E54  
                               __ptext132 61D6                                 __ptext124 5A8C  
                               __ptext116 2944                                 __ptext108 19F2  
                               __ptext141 4DF8                                 __ptext133 5BEA  
                               __ptext125 590A                                 __ptext117 5250  
                               __ptext109 59D0                                 __ptext150 62AA  
                               __ptext142 568C                                 __ptext134 443E  
                               __ptext126 601E                                 __ptext118 52A8  
                               __ptext151 62AE                                 __ptext143 4C80  
                               __ptext135 322A                                 __ptext127 563E  
                               __ptext119 242C                                 __ptext160 6238  
                               __ptext152 619E                                 __ptext144 5DD4  
                               __ptext136 5D48                                 __ptext128 507E  
                               __ptext161 607A                                 __ptext153 6274  
                               __ptext145 3E9A                                 __ptext137 257E  
                               __ptext129 513E                                 __ptext170 6228  
                               __ptext162 6218                                 __ptext154 612E  
                               __ptext146 5DA6                                 __ptext138 54A8  
                               __ptext171 3B78                                 __ptext163 22D6  
                               __ptext155 62B2                                 __ptext147 1EB4  
                               __ptext139 3DD2                                 __ptext172 6188  
                               __ptext164 5E7C                                 __ptext156 627E  
                               __ptext148 2022                                 __ptext173 62B6  
                               __ptext165 5300                                 __ptext157 6288  
                               __ptext149 626A                                 __ptext174 62BA  
                               __ptext166 6096                                 __ptext175 62BE  
                               __ptext167 5B7A                                 __ptext159 5F0E  
                               __ptext176 0000                                 __ptext168 6172  
                                ?___awmod 007D                        _Sch_SchmIntService 6238  
                         _InitializeTasks 4E6A                                  ?___lldiv 0089  
                    ?_Uart_WriteStringLen 0080                                  ?___lwdiv 0083  
                                ?___lwmod 007D                           _CallClosedEvent 003E  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 0344                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 0395  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 4020                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                             _I2cTxBuffer 044F                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 039B  
          InitializeTasks@ActiveTaskIndex 03FA                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0001                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
                         Terminal@Payload 0766                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 5018                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 007D                          _Rtcm_GetRtccDate 5018  
              ConfigureModem@DelayCounter 02D8                        __end_of_StringCopy 50E0  
                             _ep_data_out 02CE                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0088  
                            ?_Tmr_Tmr2Isr 0001                              _SendSmsEvent 00E1  
                         Terminal@SwTimer 04C5                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 007D  
                                ?_toupper 0001                                  _I2cReady 01D8  
                       ?_Mdm_SetSmsFormat 0001                            ?_UartWriteByte 007D  
                  __size_of_I2c_WriteData 016E                ConfigureModem@DelayValueMs 02DA  
                        _OsTmr_StartTimer 513E                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 007D  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 6172  
              __end_of_Mcu_StartSystemPll 605C                              _PhoneNumbLen 00D3  
                      ??_Mdm_SetSmsFormat 0083                              _Wdg_MainTask 5F32  
                           _Rtcm_MainTask 4AE0                            ___wmul@product 0081  
                ModemEvtParser@ClipString 009A                          SendSmsSm@SwTimer 03E0  
                   Terminal@ReceivedBytes 00A5                      ??_Sch_SchmIntService 0023  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 007E                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                   LedPulseStateMachine@Led 008C  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A              ConfigureModem@MdmConfigState 0028  
         HttpGetMethod@GetMethodNextState 00D0                     ?_I2cSlv_I2cReadMsgSts 0001  
                       _I2c_InitI2cModule 4DF8                         _IncomingCallEvent 003F  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0097  
                      __end_of_SystemInit 5CE8                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      MyApp_Task@memoryFlag 00C4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 4AE0  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A9                      _USBConfigureEndpoint 4764  
                    _UsbMasterPhoneNumber 0440          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 242C  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 5E7C  
                   __end_of_initGprsModem 4764                       ??_I2c_InitI2cModule 00A4  
               __size_of_Rtcc_AlarmConfig 006C                __end_of_InitModemInterface 629A  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E6  
                                _ApnLocal 02D6                            _StartCondition 62AE  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0089  
             HttpGetMethod@GetMethodState 01EC                             _Tmr_TmrBPrSet 313C  
                       _NewStringReceived 003C                              _isspace$6462 007E  
                        _UartSetConfigLow 52A8                                  _GetSmsSm 2A7C  
                 __end_of_USBStallHandler 583E                      Mdm_DrvMainFn@Options 0001  
                         _blinkForSeconds 5B40                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03D5                                  _MdmCntSm 4396  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 2820                                 copy_data1 2840  
                               copy_data2 2860                                 copy_data3 2892  
            __end_of_LedPulseStateMachine 3312                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 33F8  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6274                             i2_GenerateEvt 6188  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE68                 __end_of_I2c_InitI2cModule 4E6A  
                                _MsgReady FE3F                           ??_Term_MainTask 00A7  
                 __end_of_InitializeTasks 4EDA                initGprsModem@isInitialized 01D7  
                 ?_USBCtrlTrfSetupHandler 0001               __end_of_I2cSlv_QueryI2cData 3844  
                              _ANCON1bits 000F49                                  _RxBuffer 0C58  
                 USBStdGetStatusHandler@p 007E                                  __Hrparam 0000  
                                _TmrBInit 47FC                      __size_of_SetBaudRate 004E  
                            ?_TurnOnModem 0001                                  _TxBuffer 0320  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DE                           _SetUartBaudRate 2944  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 1EB4  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                         MyApp_Task@F9008 03C5                  __end_of_UpdateOsCounters 6228  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                          __size_of___lwmod 0044  
                I2c_WriteData@WritePacket 007E                         Terminal@TermState 02F0  
                           _UpdateSchFlag 607A                       __end_of_putUSBUSART 5FBA  
                             _line_coding 037C                              _Rtcc_LockRtc 61F8  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 257E  
                  __end_of_StartCondition 62B2                            ??_CDCTxService 0084  
                ??_Pm_DsReleasePinControl 007D                    SendSmsSm@SendSms_State 01F3  
               Rtcm_GetRtccDate@LocalDate 008A                  I2c_WriteData@WriteStatus 0035  
                            _isupper$6465 007E                                strcat@from 007F  
                 I2c_ReadData@DataCounter 0033                            ?_Tmr_TmrBPrSet 0096  
                        ??_ModemEvtParser 0090                          _GetOsTickCounter 61D6  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0188                           ___lwdiv@divisor 0085  
                            Terminal@Addr 03A5                  ModemEvtParser@RingString 00A4  
                             ??_WriteByte 007D                          __size_of_isspace 002A  
                         ___lwdiv@counter 0087                           MyApp_Task@phone 04DA  
                                __ptext10 56DA                                  __ptext11 5FFE  
                                __ptext20 5EA2                                  __ptext12 47FC  
                                __ptext21 576E                                  __ptext13 605C  
                         ??_UartWriteByte 007E                                  __ptext30 5C54  
                                __ptext22 559E                                  __ptext14 2E00  
                                __ptext31 57FA                                  __ptext23 5358  
                                __ptext15 4E6A                                  __ptext40 3312  
                                __ptext32 5F54                                  __ptext24 62A0  
                                __ptext16 2F22                                  __ptext41 40DE  
                                __ptext33 2180                                  __ptext25 5F32  
                                __ptext17 60CC                                  __ptext50 2CDC  
                                __ptext42 2BAE                                  __ptext34 4928  
                                __ptext26 61B2                                  __ptext18 4AE0  
                                __ptext51 3AAC                                  __ptext43 135A  
                                __ptext35 5726                                  __ptext27 62A6  
                                __ptext19 39E0                                  __ptext60 00D0  
                                __ptext52 3F5E                                  __ptext44 50E0  
                                __ptext36 4B6E                                  __ptext28 1BAA  
                                __ptext61 33F8                                  __ptext53 35C2  
                                __ptext45 4190                                  __ptext37 303C  
                                __ptext29 5B06                                  __ptext70 5F98  
                                __ptext62 60FE                                  __ptext54 26C6  
                                __ptext46 4EDA                                  __ptext38 4628  
                                __ptext71 5882                                  __ptext63 5ACA  
                                __ptext55 10B6                                  __ptext47 583E  
                                __ptext39 34DE                                  __ptext80 15EE  
                                __ptext72 42EC                                  __ptext64 181C  
                                __ptext56 5A10                                  __ptext48 4764  
                                __ptext81 4D86                                  __ptext73 58C6  
                                __ptext65 6116                                  __ptext57 519C  
                                __ptext49 4FB2                                  __ptext90 46C6  
                                __ptext82 4BFA                                  __ptext74 4892  
                                __ptext66 5E2A                                  __ptext58 3844  
                                __ptext91 55EE                                  __ptext83 61F8  
                                __ptext75 4020                                  __ptext67 5D18  
                                __ptext59 5CE8                                  __ptext92 5B40  
                                __ptext84 5018                                  __ptext76 369A  
                                __ptext68 5F76                                  __ptext93 44E6  
                                __ptext85 49BC                                  __ptext77 5FBA  
                                __ptext69 5C86                                  __ptext94 6208  
                                __ptext86 6146                                  __ptext78 53AC  
                                __ptext95 5EC6                                  __ptext87 4588  
                                __ptext79 61E8                                  __ptext96 5EEA  
                                __ptext88 615C                                  __ptext97 61C4  
                                __ptext89 4F46                                  __ptext98 5400  
                                __ptext99 5BB4                          __size_of_isupper 0022  
                              _I2cDummyTx 6096                    Tmr_TmrBIrqSet@Priority 007D  
                   __end_of_HttpGetMethod 0ABC                  __size_of_InitGprsNetwork 02EE  
                            _SSP2CON2bits 000F71                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 007F                         _Mmd_RingIndicator 0030  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0019  
                       _Mdm_IsSmsReceived 5EC6               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 007E  
          __end_of_USBCtrlTrfSetupHandler 4BFA                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 6288  
                      ?_Mdm_IsSmsReceived 0001                             _Mdm_DrvMainFn 62A0  
                      ??_USBCtrlEPService 0097                                  _isxdigit 5ACA  
                           _Mdm_IsRinging 5EEA                       _USBCtrlTrfInHandler 3F5E  
                I2c_ReadData@I2cReadState 0034                __end_of_Mdm_RequestSmsData 6218  
                   __end_of_ScheduleTasks 2F22                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 4FB2                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 0085  
               _USBCtrlEPAllowStatusStage 3AAC                       ??_Mdm_IsSmsReceived 0081  
                    __size_of_Term_MainSm 02A4              ScheduleTasks@ActiveTaskIndex 03FC  
                              strtol@sign 0093                           Term_MainSm@Data 0463  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                 blinkForSeconds@blinkTicks 0093  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                   __end_of_blinkForSeconds 5B7A  
                    __size_of_Rtcc_RtcIsr 0004                       i1_I2cSlv_SendI2cMsg 5B7A  
                __end_of_Mcu_ConfigExtInt 60CC                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00C9                  CDCTxService@byte_to_send 0085  
           I2c_WriteData@TentativeCounter 0036                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 007D  
                            _Tmr_StartTmr 5FFE                  __end_of_Led_SetLedStatus 5D78  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 007D  
                                memcpy@s1 007F                I2cSlv_I2cReadMsgSts@Result 0081  
           USBCtrlTrfTxService@byteToSend 007D                             ?_I2cSetConfig 0001  
                                itoa@base 0097               i1I2cSlv_SendI2cMsg@TxBuffer 001C  
                           ?_I2c_ReadData 0080                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0082                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 007F                                  memset@p1 007D  
                   Eeprom_Read@DataLength 00AB                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 001B                          _Rtcm_SetRtccDate 53AC  
                USBStdFeatureReqHandler@p 0095                          ??_Tmr_TmrBConfig 00A2  
                           ??_ClearBuffer 0081                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0092                 __end_of_Mdm_IsSmsReceived 5EEA  
                        ??_Tmr_TmrBIrqSet 007F                  __size_of_secondsAppTimer 00A2  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 4A50                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0156   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 513E  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 50E0  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2A7C                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                  blinkForSeconds@seconds 0095                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 007F  
                          ?_Mdm_IsRinging 0001                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0084            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009F                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 594E                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 5BB4  
                __end_of_Rtcm_GetRtccDate 507E                               _putUSBUSART 5F98  
                     _USBCtrlTrfRxService 2CDC                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 5B06  
                 _USBStdFeatureReqHandler 135A                  __end_of_OsTmr_StartTimer 519C  
                    _LedPulseStateMachine 322A                        _USBCheckCDCRequest 4190  
                     _USBCtrlTrfTxService 35C2                       RtccIrqInit@Priority 007D  
                                utoa@base 008E                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                          _Rtcc_AlarmConfig 4F46  
                         ??_Tmr_TmrBPrSet 009A                                  sprintf@c 0086  
                                sprintf@f 007F                                  tolower@c 007D  
                                strcat@cp 0081                                  strcat@to 007D  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0091                InitGprsNetwork@GprsInitSts 01FF  
                         ___lwmod@divisor 007F               GsmGprsTerminal@FirstRecFlag 01E0  
                   ??_USBCtrlTrfInHandler 007E                                  strcpy@cp 0081  
                                strlen@cp 0081                                  strcpy@to 007D  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 02F1  
                         ___lwmod@counter 0081                             ?_Mdm_MainTask 0001  
                          ??_I2cSetConfig 007D            __size_of_Irq_InitIntController 002A  
                                toupper@c 007D           SetUartBaudRate@BaudRateRegister 009A  
                     ?_USBCheckCDCRequest 0001                          _MdmHttp_MainTask 576E  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 5E2A                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                       USBEnableEndpoint@ep 0088  
                         _endpoint_number 00CB                                _WDTCONbits 000FC0  
                  MyApp_Task@memoryResult 0103                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 003B  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 443E  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                             _StopCondition 62AA  
                   ??i1_I2cSlv_SendI2cMsg 0020                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 00CA                          Mdm_IsRinging@Ret 0081  
                    ??_USBWakeFromSuspend 0091                USBTransferOnePacket@handle 0082  
                       ??_InitGprsNetwork 009E                       __end_of_ClearBuffer 5C20  
                    __end_of_CDCTxService 280C                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC3B  
                   Eeprom_Read@ReadBuffer 00A9                           ??_I2c_WriteData 0080  
                 ConfigureModem@NextState 01F5                   _UsbMasterPhoneNumberLen 0322  
                           ?_Mcu_ClearWdg 0001                             _Mcu_SetWdgSts 61B2  
