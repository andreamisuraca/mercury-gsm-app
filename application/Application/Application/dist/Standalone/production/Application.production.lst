

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr  2 10:07:53 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
    11                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    28                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    29                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    30                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    31                           	psect	cstackBANK10,global,class=BANK10,space=1,delta=1,noexec
    32                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    33                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	text0,global,reloc=2,class=CODE,delta=1
    38                           	psect	text1,global,reloc=2,class=CODE,delta=1
    39                           	psect	text2,global,reloc=2,class=CODE,delta=1
    40                           	psect	text3,global,reloc=2,class=CODE,delta=1
    41                           	psect	text4,global,reloc=2,class=CODE,delta=1
    42                           	psect	text5,global,reloc=2,class=CODE,delta=1
    43                           	psect	text6,global,reloc=2,class=CODE,delta=1
    44                           	psect	text7,global,reloc=2,class=CODE,delta=1
    45                           	psect	text8,global,reloc=2,class=CODE,delta=1
    46                           	psect	text9,global,reloc=2,class=CODE,delta=1
    47                           	psect	text10,global,reloc=2,class=CODE,delta=1
    48                           	psect	text11,global,reloc=2,class=CODE,delta=1
    49                           	psect	text12,global,reloc=2,class=CODE,delta=1
    50                           	psect	text13,global,reloc=2,class=CODE,delta=1
    51                           	psect	text14,global,reloc=2,class=CODE,delta=1
    52                           	psect	text15,global,reloc=2,class=CODE,delta=1
    53                           	psect	text16,global,reloc=2,class=CODE,delta=1
    54                           	psect	text17,global,reloc=2,class=CODE,delta=1
    55                           	psect	text18,global,reloc=2,class=CODE,delta=1
    56                           	psect	text19,global,reloc=2,class=CODE,delta=1
    57                           	psect	text20,global,reloc=2,class=CODE,delta=1
    58                           	psect	text21,global,reloc=2,class=CODE,delta=1
    59                           	psect	text22,global,reloc=2,class=CODE,delta=1
    60                           	psect	text23,global,reloc=2,class=CODE,delta=1
    61                           	psect	text24,global,reloc=2,class=CODE,delta=1
    62                           	psect	text25,global,reloc=2,class=CODE,delta=1
    63                           	psect	text26,global,reloc=2,class=CODE,delta=1
    64                           	psect	text27,global,reloc=2,class=CODE,delta=1
    65                           	psect	text28,global,reloc=2,class=CODE,delta=1
    66                           	psect	text29,global,reloc=2,class=CODE,delta=1
    67                           	psect	text30,global,reloc=2,class=CODE,delta=1
    68                           	psect	text31,global,reloc=2,class=CODE,delta=1
    69                           	psect	text32,global,reloc=2,class=CODE,delta=1
    70                           	psect	text33,global,reloc=2,class=CODE,delta=1
    71                           	psect	text34,global,reloc=2,class=CODE,delta=1
    72                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text36,global,reloc=2,class=CODE,delta=1
    74                           	psect	text37,global,reloc=2,class=CODE,delta=1
    75                           	psect	text38,global,reloc=2,class=CODE,delta=1
    76                           	psect	text39,global,reloc=2,class=CODE,delta=1
    77                           	psect	text40,global,reloc=2,class=CODE,delta=1
    78                           	psect	text41,global,reloc=2,class=CODE,delta=1
    79                           	psect	text42,global,reloc=2,class=CODE,delta=1
    80                           	psect	text43,global,reloc=2,class=CODE,delta=1
    81                           	psect	text44,global,reloc=2,class=CODE,delta=1
    82                           	psect	text45,global,reloc=2,class=CODE,delta=1
    83                           	psect	text46,global,reloc=2,class=CODE,delta=1
    84                           	psect	text47,global,reloc=2,class=CODE,delta=1
    85                           	psect	text48,global,reloc=2,class=CODE,delta=1
    86                           	psect	text49,global,reloc=2,class=CODE,delta=1
    87                           	psect	text50,global,reloc=2,class=CODE,delta=1
    88                           	psect	text51,global,reloc=2,class=CODE,delta=1
    89                           	psect	text52,global,reloc=2,class=CODE,delta=1
    90                           	psect	text53,global,reloc=2,class=CODE,delta=1
    91                           	psect	text54,global,reloc=2,class=CODE,delta=1
    92                           	psect	text55,global,reloc=2,class=CODE,delta=1
    93                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text58,global,reloc=2,class=CODE,delta=1
    96                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text60,global,reloc=2,class=CODE,delta=1
    98                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text70,global,reloc=2,class=CODE,delta=1
   108                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text74,global,reloc=2,class=CODE,delta=1
   112                           	psect	text75,global,reloc=2,class=CODE,delta=1
   113                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text78,global,reloc=2,class=CODE,delta=1
   116                           	psect	text79,global,reloc=2,class=CODE,delta=1
   117                           	psect	text80,global,reloc=2,class=CODE,delta=1
   118                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text83,global,reloc=2,class=CODE,delta=1
   121                           	psect	text84,global,reloc=2,class=CODE,delta=1
   122                           	psect	text85,global,reloc=2,class=CODE,delta=1
   123                           	psect	text86,global,reloc=2,class=CODE,delta=1
   124                           	psect	text87,global,reloc=2,class=CODE,delta=1
   125                           	psect	text88,global,reloc=2,class=CODE,delta=1
   126                           	psect	text89,global,reloc=2,class=CODE,delta=1
   127                           	psect	text90,global,reloc=2,class=CODE,delta=1
   128                           	psect	text91,global,reloc=2,class=CODE,delta=1
   129                           	psect	text92,global,reloc=2,class=CODE,delta=1
   130                           	psect	text93,global,reloc=2,class=CODE,delta=1
   131                           	psect	text94,global,reloc=2,class=CODE,delta=1
   132                           	psect	text95,global,reloc=2,class=CODE,delta=1
   133                           	psect	text96,global,reloc=2,class=CODE,delta=1
   134                           	psect	text97,global,reloc=2,class=CODE,delta=1
   135                           	psect	text98,global,reloc=2,class=CODE,delta=1
   136                           	psect	text99,global,reloc=2,class=CODE,delta=1
   137                           	psect	text100,global,reloc=2,class=CODE,delta=1
   138                           	psect	text101,global,reloc=2,class=CODE,delta=1
   139                           	psect	text102,global,reloc=2,class=CODE,delta=1
   140                           	psect	text103,global,reloc=2,class=CODE,delta=1
   141                           	psect	text104,global,reloc=2,class=CODE,delta=1
   142                           	psect	text105,global,reloc=2,class=CODE,delta=1
   143                           	psect	text106,global,reloc=2,class=CODE,delta=1
   144                           	psect	text107,global,reloc=2,class=CODE,delta=1
   145                           	psect	text108,global,reloc=2,class=CODE,delta=1
   146                           	psect	text109,global,reloc=2,class=CODE,delta=1
   147                           	psect	text110,global,reloc=2,class=CODE,delta=1
   148                           	psect	text111,global,reloc=2,class=CODE,delta=1
   149                           	psect	text112,global,reloc=2,class=CODE,delta=1
   150                           	psect	text113,global,reloc=2,class=CODE,delta=1
   151                           	psect	text114,global,reloc=2,class=CODE,delta=1
   152                           	psect	text115,global,reloc=2,class=CODE,delta=1
   153                           	psect	text116,global,reloc=2,class=CODE,delta=1
   154                           	psect	text117,global,reloc=2,class=CODE,delta=1
   155                           	psect	text118,global,reloc=2,class=CODE,delta=1
   156                           	psect	text119,global,reloc=2,class=CODE,delta=1
   157                           	psect	text120,global,reloc=2,class=CODE,delta=1
   158                           	psect	text121,global,reloc=2,class=CODE,delta=1
   159                           	psect	text122,global,reloc=2,class=CODE,delta=1
   160                           	psect	text123,global,reloc=2,class=CODE,delta=1
   161                           	psect	text124,global,reloc=2,class=CODE,delta=1
   162                           	psect	text125,global,reloc=2,class=CODE,delta=1
   163                           	psect	text126,global,reloc=2,class=CODE,delta=1
   164                           	psect	text127,global,reloc=2,class=CODE,delta=1
   165                           	psect	text128,global,reloc=2,class=CODE,delta=1
   166                           	psect	text129,global,reloc=2,class=CODE,delta=1
   167                           	psect	text130,global,reloc=2,class=CODE,delta=1
   168                           	psect	text131,global,reloc=2,class=CODE,delta=1
   169                           	psect	text132,global,reloc=2,class=CODE,delta=1
   170                           	psect	text133,global,reloc=2,class=CODE,delta=1
   171                           	psect	text134,global,reloc=2,class=CODE,delta=1
   172                           	psect	text135,global,reloc=2,class=CODE,delta=1
   173                           	psect	text136,global,reloc=2,class=CODE,delta=1
   174                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text138,global,reloc=2,class=CODE,delta=1
   176                           	psect	text139,global,reloc=2,class=CODE,delta=1
   177                           	psect	text140,global,reloc=2,class=CODE,delta=1
   178                           	psect	text141,global,reloc=2,class=CODE,delta=1
   179                           	psect	text142,global,reloc=2,class=CODE,delta=1
   180                           	psect	text143,global,reloc=2,class=CODE,delta=1
   181                           	psect	text144,global,reloc=2,class=CODE,delta=1
   182                           	psect	text145,global,reloc=2,class=CODE,delta=1
   183                           	psect	text146,global,reloc=2,class=CODE,delta=1
   184                           	psect	text147,global,reloc=2,class=CODE,delta=1
   185                           	psect	text148,global,reloc=2,class=CODE,delta=1
   186                           	psect	text149,global,reloc=2,class=CODE,delta=1
   187                           	psect	text150,global,reloc=2,class=CODE,delta=1
   188                           	psect	text151,global,reloc=2,class=CODE,delta=1
   189                           	psect	text152,global,reloc=2,class=CODE,delta=1
   190                           	psect	text153,global,reloc=2,class=CODE,delta=1
   191                           	psect	text154,global,reloc=2,class=CODE,delta=1
   192                           	psect	text155,global,reloc=2,class=CODE,delta=1
   193                           	psect	text156,global,reloc=2,class=CODE,delta=1
   194                           	psect	text157,global,reloc=2,class=CODE,delta=1
   195                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text159,global,reloc=2,class=CODE,delta=1
   197                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   198                           	psect	text161,global,reloc=2,class=CODE,delta=1
   199                           	psect	text162,global,reloc=2,class=CODE,delta=1
   200                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text164,global,reloc=2,class=CODE,delta=1
   202                           	psect	text165,global,reloc=2,class=CODE,delta=1
   203                           	psect	text166,global,reloc=2,class=CODE,delta=1
   204                           	psect	text167,global,reloc=2,class=CODE,delta=1
   205                           	psect	text168,global,reloc=2,class=CODE,delta=1
   206                           	psect	text169,global,reloc=2,class=CODE,delta=1
   207                           	psect	text170,global,reloc=2,class=CODE,delta=1
   208                           	psect	text171,global,reloc=2,class=CODE,delta=1
   209                           	psect	text172,global,reloc=2,class=CODE,delta=1
   210                           	psect	text173,global,reloc=2,class=CODE,delta=1
   211                           	psect	text174,global,reloc=2,class=CODE,delta=1
   212                           	psect	text175,global,reloc=2,class=CODE,delta=1
   213                           	psect	text176,global,reloc=2,class=CODE,delta=1
   214                           	psect	text177,global,reloc=2,class=CODE,delta=1
   215                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   216                           	psect	text179,global,reloc=2,class=CODE,delta=1
   217                           	psect	text180,global,reloc=2,class=CODE,delta=1
   218                           	psect	text181,global,reloc=2,class=CODE,delta=1
   219                           	psect	text182,global,reloc=2,class=CODE,delta=1
   220                           	psect	text183,global,reloc=2,class=CODE,delta=1
   221                           	psect	text184,global,reloc=2,class=CODE,delta=1
   222                           	psect	text185,global,reloc=2,class=CODE,delta=1
   223                           	psect	text186,global,reloc=2,class=CODE,delta=1
   224                           	psect	text187,global,reloc=2,class=CODE,delta=1
   225                           	psect	text188,global,reloc=2,class=CODE,delta=1
   226                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   227                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   228                           	psect	text190,global,reloc=2,class=CODE,delta=1
   229                           	psect	text191,global,reloc=2,class=CODE,delta=1
   230                           	psect	text192,global,reloc=2,class=CODE,delta=1
   231                           	psect	text193,global,reloc=2,class=CODE,delta=1
   232                           	psect	text194,global,reloc=2,class=CODE,delta=1
   233                           	psect	text195,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text196,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   238                           	dabs	1,0x400,48,_BDT
   239                           	dabs	1,0x438,8,_CtrlTrfData
   240                           	dabs	1,0x430,8,_SetupPkt
   241  0000                     
   242                           ; Version 1.45
   243                           ; Generated 16/11/2017 GMT
   244                           ; 
   245                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   246                           ; All rights reserved.
   247                           ; 
   248                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   249                           ; 
   250                           ; Redistribution and use in source and binary forms, with or without modification, are
   251                           ; permitted provided that the following conditions are met:
   252                           ; 
   253                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   254                           ;        conditions and the following disclaimer.
   255                           ; 
   256                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   257                           ;        of conditions and the following disclaimer in the documentation and/or other
   258                           ;        materials provided with the distribution.
   259                           ; 
   260                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   261                           ;        software without specific prior written permission.
   262                           ; 
   263                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   264                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   265                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   266                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   267                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   268                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   269                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   270                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   271                           ; 
   272                           ; 
   273                           ; Code-generator required, PIC18F46J50 Definitions
   274                           ; 
   275                           ; SFR Addresses
   276  0000                     
   277                           	psect	idataCOMRAM
   278  006B3A                     __pidataCOMRAM:
   279                           	opt stack 0
   280                           
   281                           ;initializer for findEmptySpot@currentPosition
   282  006B3A  20                 	db	32
   283                           
   284                           ;initializer for isNumberInMemory@currentPosition
   285  006B3B  20                 	db	32
   286                           
   287                           	psect	idataBANK1
   288  006B3C                     __pidataBANK1:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _isMemoryEmpty
   292  006B3C  01                 	db	1
   293                           
   294                           ;initializer for InitGprsNetwork@GprsInitSts
   295  006B3D  01                 	db	1
   296                           
   297                           	psect	idataBANK2
   298  006AA8                     __pidataBANK2:
   299                           	opt stack 0
   300                           
   301                           ;initializer for Terminal@EchoOption
   302  006AA8  01                 	db	1
   303                           
   304                           ;initializer for _MainSystemTimebaseFlag
   305  006AA9  01                 	db	1
   306                           
   307                           ;initializer for _ConnTimeout
   308  006AAA  00                 	db	0
   309  006AAB  01                 	db	1
   310  006AAC  0000               	dw	0
   311  006AAE  0000               	dw	0
   312  006AB0  0000               	dw	0
   313  006AB2  0000               	dw	0
   314  006AB4  00                 	db	0
   315                           
   316                           	psect	idataBANK3
   317  00629A                     __pidataBANK3:
   318                           	opt stack 0
   319                           
   320                           ;initializer for ModemEvtParser@F9114
   321  00629A  2B                 	db	43
   322  00629B  43                 	db	67
   323  00629C  4D                 	db	77
   324  00629D  54                 	db	84
   325  00629E  49                 	db	73
   326                           
   327                           ;initializer for ModemEvtParser@F9112
   328  00629F  2B                 	db	43
   329  0062A0  43                 	db	67
   330  0062A1  4C                 	db	76
   331  0062A2  49                 	db	73
   332  0062A3  50                 	db	80
   333                           
   334                           ;initializer for ModemEvtParser@F9110
   335  0062A4  52                 	db	82
   336  0062A5  49                 	db	73
   337  0062A6  4E                 	db	78
   338  0062A7  47                 	db	71
   339                           
   340                           ;initializer for triggerRelay@F9012
   341  0062A8  50                 	db	80
   342  0062A9  00                 	db	0
   343                           
   344                           ;initializer for Term_MainSm@TermDelay
   345  0062AA  01                 	db	1
   346  0062AB  01                 	db	1
   347  0062AC  0000               	dw	0
   348  0062AE  0000               	dw	0
   349  0062B0  0000               	dw	0
   350  0062B2  0000               	dw	0
   351  0062B4  00                 	db	0
   352                           
   353                           ;initializer for _ConnWait
   354  0062B5  00                 	db	0
   355  0062B6  01                 	db	1
   356  0062B7  0000               	dw	0
   357  0062B9  0000               	dw	0
   358  0062BB  0000               	dw	0
   359  0062BD  0000               	dw	0
   360  0062BF  00                 	db	0
   361                           
   362                           ;initializer for SendSmsSm@SwTimer
   363  0062C0  01                 	db	1
   364  0062C1  01                 	db	1
   365  0062C2  0000               	dw	0
   366  0062C4  0000               	dw	0
   367  0062C6  0000               	dw	0
   368  0062C8  0000               	dw	0
   369  0062CA  00                 	db	0
   370                           
   371                           ;initializer for CheckModem@Timeout
   372  0062CB  00                 	db	0
   373  0062CC  01                 	db	1
   374  0062CD  0000               	dw	0
   375  0062CF  0000               	dw	0
   376  0062D1  0000               	dw	0
   377  0062D3  0000               	dw	0
   378  0062D5  00                 	db	0
   379                           
   380                           	psect	idataBANK4
   381  006ACE                     __pidataBANK4:
   382                           	opt stack 0
   383                           
   384                           ;initializer for ModemEvtParser@F9116
   385  006ACE  43                 	db	67
   386  006ACF  61                 	db	97
   387  006AD0  6C                 	db	108
   388  006AD1  6C                 	db	108
   389  006AD2  20                 	db	32
   390  006AD3  52                 	db	82
   391  006AD4  65                 	db	101
   392  006AD5  61                 	db	97
   393  006AD6  64                 	db	100
   394  006AD7  79                 	db	121
   395                           
   396                           	psect	idataBANK5
   397  005CC4                     __pidataBANK5:
   398                           	opt stack 0
   399                           
   400                           ;initializer for _TaskTable
   401  005CC4  18                 	db	low _Mdm_DrvMainFn
   402  005CC5  6B                 	db	high _Mdm_DrvMainFn
   403  005CC6  00                 	db	0
   404  005CC7  0000               	dw	0
   405  005CC9  000A               	dw	10
   406  005CCB  00                 	db	0
   407  005CCC  7C                 	db	low _I2cSlv_MainTask
   408  005CCD  5A                 	db	high _I2cSlv_MainTask
   409  005CCE  00                 	db	0
   410  005CCF  0000               	dw	0
   411  005CD1  0001               	dw	1
   412  005CD3  00                 	db	0
   413  005CD4  14                 	db	low _Mdm_MainTask
   414  005CD5  5D                 	db	high _Mdm_MainTask
   415  005CD6  00                 	db	0
   416  005CD7  0000               	dw	0
   417  005CD9  0001               	dw	1
   418  005CDB  00                 	db	0
   419  005CDC  C6                 	db	low _MdmHttp_MainTask
   420  005CDD  5F                 	db	high _MdmHttp_MainTask
   421  005CDE  00                 	db	0
   422  005CDF  0000               	dw	0
   423  005CE1  0001               	dw	1
   424  005CE3  00                 	db	0
   425  005CE4  AA                 	db	low _UsbDevice_MainTask
   426  005CE5  66                 	db	high _UsbDevice_MainTask
   427  005CE6  00                 	db	0
   428  005CE7  0000               	dw	0
   429  005CE9  0001               	dw	1
   430  005CEB  00                 	db	0
   431  005CEC  3A                 	db	low _Wdg_MainTask
   432  005CED  67                 	db	high _Wdg_MainTask
   433  005CEE  00                 	db	0
   434  005CEF  0000               	dw	0
   435  005CF1  0064               	dw	100
   436  005CF3  00                 	db	0
   437  005CF4  CA                 	db	low _Led_MainTask
   438  005CF5  3B                 	db	high _Led_MainTask
   439  005CF6  00                 	db	0
   440  005CF7  0000               	dw	0
   441  005CF9  0032               	dw	50
   442  005CFB  00                 	db	0
   443  005CFC  46                 	db	low _Rtcm_MainTask
   444  005CFD  4F                 	db	high _Rtcm_MainTask
   445  005CFE  00                 	db	0
   446  005CFF  0000               	dw	0
   447  005D01  0064               	dw	100
   448  005D03  00                 	db	0
   449  005D04  12                 	db	low _Term_MainTask
   450  005D05  69                 	db	high _Term_MainTask
   451  005D06  00                 	db	0
   452  005D07  0000               	dw	0
   453  005D09  0001               	dw	1
   454  005D0B  00                 	db	0
   455  005D0C  2C                 	db	low _MyApp_Task
   456  005D0D  33                 	db	high _MyApp_Task
   457  005D0E  00                 	db	0
   458  005D0F  0000               	dw	0
   459  005D11  0064               	dw	100
   460  005D13  00                 	db	0
   461                           
   462                           	psect	mediumconst
   463  00FC0E                     __pmediumconst:
   464                           	opt stack 0
   465  00FC0E  00                 	db	0
   466  00FC0F                     delCmdFsm@F9013:
   467                           	opt stack 0
   468  00FC0F  00                 	db	0
   469  00FC10  00                 	db	0
   470  00FC11  00                 	db	0
   471  00FC12  00                 	db	0
   472  00FC13  00                 	db	0
   473  00FC14  00                 	db	0
   474  00FC15  00                 	db	0
   475  00FC16  00                 	db	0
   476  00FC17  00                 	db	0
   477  00FC18  00                 	db	0
   478  00FC19  00                 	db	0
   479  00FC1A  00                 	db	0
   480  00FC1B  00                 	db	0
   481  00FC1C                     __end_ofdelCmdFsm@F9013:
   482                           	opt stack 0
   483  00FC1C                     _USB_SD_Ptr:
   484                           	opt stack 0
   485  00FC1C  5B                 	db	low _sd000
   486  00FC1D  FE                 	db	high _sd000
   487  00FC1E  14                 	db	low _sd001
   488  00FC1F  FE                 	db	high _sd001
   489  00FC20  EE                 	db	low _sd002
   490  00FC21  FD                 	db	high _sd002
   491  00FC22                     __end_of_USB_SD_Ptr:
   492                           	opt stack 0
   493  00FC22                     parseCommand@F9030:
   494                           	opt stack 0
   495  00FC22  52                 	db	82
   496  00FC23  45                 	db	69
   497  00FC24  53                 	db	83
   498  00FC25  3B                 	db	59
   499  00FC26                     __end_ofparseCommand@F9030:
   500                           	opt stack 0
   501  00FC26                     parseCommand@F9028:
   502                           	opt stack 0
   503  00FC26  44                 	db	68
   504  00FC27  45                 	db	69
   505  00FC28  4C                 	db	76
   506  00FC29  3B                 	db	59
   507  00FC2A                     __end_ofparseCommand@F9028:
   508                           	opt stack 0
   509  00FC2A                     parseCommand@F9026:
   510                           	opt stack 0
   511  00FC2A  41                 	db	65
   512  00FC2B  44                 	db	68
   513  00FC2C  44                 	db	68
   514  00FC2D  3B                 	db	59
   515  00FC2E                     __end_ofparseCommand@F9026:
   516                           	opt stack 0
   517  00FC2E                     _USB_CD_Ptr:
   518                           	opt stack 0
   519  00FC2E  AB                 	db	low _configDescriptor1
   520  00FC2F  FD                 	db	high _configDescriptor1
   521  00FC30                     __end_of_USB_CD_Ptr:
   522                           	opt stack 0
   523  00FC30                     _TaskNumber:
   524                           	opt stack 0
   525  00FC30  000A               	dw	10
   526  00FC32                     __end_of_TaskNumber:
   527                           	opt stack 0
   528  00FC32                     _MsgFormat:
   529                           	opt stack 0
   530  00FC32  48                 	db	72
   531  00FC33  6F                 	db	111
   532  00FC34  73                 	db	115
   533  00FC35  74                 	db	116
   534  00FC36  20                 	db	32
   535  00FC37  6D                 	db	109
   536  00FC38  65                 	db	101
   537  00FC39  73                 	db	115
   538  00FC3A  73                 	db	115
   539  00FC3B  61                 	db	97
   540  00FC3C  67                 	db	103
   541  00FC3D  65                 	db	101
   542  00FC3E  20                 	db	32
   543  00FC3F  66                 	db	102
   544  00FC40  6F                 	db	111
   545  00FC41  72                 	db	114
   546  00FC42  6D                 	db	109
   547  00FC43  61                 	db	97
   548  00FC44  74                 	db	116
   549  00FC45  3A                 	db	58
   550  00FC46  20                 	db	32
   551  00FC47  0D                 	db	13
   552  00FC48  0A                 	db	10
   553  00FC49  5B                 	db	91
   554  00FC4A  6F                 	db	111
   555  00FC4B  70                 	db	112
   556  00FC4C  5F                 	db	95
   557  00FC4D  74                 	db	116
   558  00FC4E  79                 	db	121
   559  00FC4F  70                 	db	112
   560  00FC50  65                 	db	101
   561  00FC51  5D                 	db	93
   562  00FC52  3A                 	db	58
   563  00FC53  5B                 	db	91
   564  00FC54  6F                 	db	111
   565  00FC55  70                 	db	112
   566  00FC56  5D                 	db	93
   567  00FC57  3A                 	db	58
   568  00FC58  5B                 	db	91
   569  00FC59  6C                 	db	108
   570  00FC5A  65                 	db	101
   571  00FC5B  6E                 	db	110
   572  00FC5C  5D                 	db	93
   573  00FC5D  3A                 	db	58
   574  00FC5E  5B                 	db	91
   575  00FC5F  61                 	db	97
   576  00FC60  64                 	db	100
   577  00FC61  64                 	db	100
   578  00FC62  72                 	db	114
   579  00FC63  5D                 	db	93
   580  00FC64  3A                 	db	58
   581  00FC65  5B                 	db	91
   582  00FC66  70                 	db	112
   583  00FC67  61                 	db	97
   584  00FC68  79                 	db	121
   585  00FC69  6C                 	db	108
   586  00FC6A  6F                 	db	111
   587  00FC6B  61                 	db	97
   588  00FC6C  64                 	db	100
   589  00FC6D  5D                 	db	93
   590  00FC6E  0D                 	db	13
   591  00FC6F  0A                 	db	10
   592  00FC70  0D                 	db	13
   593  00FC71  0A                 	db	10
   594  00FC72  5B                 	db	91
   595  00FC73  6F                 	db	111
   596  00FC74  70                 	db	112
   597  00FC75  5F                 	db	95
   598  00FC76  74                 	db	116
   599  00FC77  79                 	db	121
   600  00FC78  70                 	db	112
   601  00FC79  65                 	db	101
   602  00FC7A  5D                 	db	93
   603  00FC7B  20                 	db	32
   604  00FC7C  3D                 	db	61
   605  00FC7D  20                 	db	32
   606  00FC7E  53                 	db	83
   607  00FC7F  4F                 	db	79
   608  00FC80  2C                 	db	44
   609  00FC81  53                 	db	83
   610  00FC82  42                 	db	66
   611  00FC83  0D                 	db	13
   612  00FC84  0A                 	db	10
   613  00FC85  5B                 	db	91
   614  00FC86  6F                 	db	111
   615  00FC87  70                 	db	112
   616  00FC88  5D                 	db	93
   617  00FC89  20                 	db	32
   618  00FC8A  3D                 	db	61
   619  00FC8B  20                 	db	32
   620  00FC8C  52                 	db	82
   621  00FC8D  3A                 	db	58
   622  00FC8E  20                 	db	32
   623  00FC8F  72                 	db	114
   624  00FC90  65                 	db	101
   625  00FC91  61                 	db	97
   626  00FC92  64                 	db	100
   627  00FC93  2C                 	db	44
   628  00FC94  57                 	db	87
   629  00FC95  3A                 	db	58
   630  00FC96  20                 	db	32
   631  00FC97  77                 	db	119
   632  00FC98  72                 	db	114
   633  00FC99  69                 	db	105
   634  00FC9A  74                 	db	116
   635  00FC9B  65                 	db	101
   636  00FC9C  0D                 	db	13
   637  00FC9D  0A                 	db	10
   638  00FC9E  5B                 	db	91
   639  00FC9F  6C                 	db	108
   640  00FCA0  65                 	db	101
   641  00FCA1  6E                 	db	110
   642  00FCA2  5D                 	db	93
   643  00FCA3  20                 	db	32
   644  00FCA4  3D                 	db	61
   645  00FCA5  20                 	db	32
   646  00FCA6  32                 	db	50
   647  00FCA7  20                 	db	32
   648  00FCA8  62                 	db	98
   649  00FCA9  79                 	db	121
   650  00FCAA  74                 	db	116
   651  00FCAB  65                 	db	101
   652  00FCAC  20                 	db	32
   653  00FCAD  41                 	db	65
   654  00FCAE  53                 	db	83
   655  00FCAF  43                 	db	67
   656  00FCB0  49                 	db	73
   657  00FCB1  49                 	db	73
   658  00FCB2  0D                 	db	13
   659  00FCB3  0A                 	db	10
   660  00FCB4  5B                 	db	91
   661  00FCB5  61                 	db	97
   662  00FCB6  64                 	db	100
   663  00FCB7  64                 	db	100
   664  00FCB8  72                 	db	114
   665  00FCB9  5D                 	db	93
   666  00FCBA  20                 	db	32
   667  00FCBB  3D                 	db	61
   668  00FCBC  20                 	db	32
   669  00FCBD  32                 	db	50
   670  00FCBE  20                 	db	32
   671  00FCBF  62                 	db	98
   672  00FCC0  79                 	db	121
   673  00FCC1  74                 	db	116
   674  00FCC2  65                 	db	101
   675  00FCC3  20                 	db	32
   676  00FCC4  41                 	db	65
   677  00FCC5  53                 	db	83
   678  00FCC6  43                 	db	67
   679  00FCC7  49                 	db	73
   680  00FCC8  49                 	db	73
   681  00FCC9  0D                 	db	13
   682  00FCCA  0A                 	db	10
   683  00FCCB  5B                 	db	91
   684  00FCCC  70                 	db	112
   685  00FCCD  61                 	db	97
   686  00FCCE  79                 	db	121
   687  00FCCF  6C                 	db	108
   688  00FCD0  6F                 	db	111
   689  00FCD1  61                 	db	97
   690  00FCD2  64                 	db	100
   691  00FCD3  5D                 	db	93
   692  00FCD4  20                 	db	32
   693  00FCD5  3D                 	db	61
   694  00FCD6  20                 	db	32
   695  00FCD7  6D                 	db	109
   696  00FCD8  61                 	db	97
   697  00FCD9  78                 	db	120
   698  00FCDA  20                 	db	32
   699  00FCDB  32                 	db	50
   700  00FCDC  30                 	db	48
   701  00FCDD  20                 	db	32
   702  00FCDE  62                 	db	98
   703  00FCDF  79                 	db	121
   704  00FCE0  74                 	db	116
   705  00FCE1  65                 	db	101
   706  00FCE2  20                 	db	32
   707  00FCE3  41                 	db	65
   708  00FCE4  53                 	db	83
   709  00FCE5  43                 	db	67
   710  00FCE6  49                 	db	73
   711  00FCE7  49                 	db	73
   712  00FCE8  0D                 	db	13
   713  00FCE9  0A                 	db	10
   714  00FCEA  0D                 	db	13
   715  00FCEB  0A                 	db	10
   716  00FCEC  54                 	db	84
   717  00FCED  65                 	db	101
   718  00FCEE  72                 	db	114
   719  00FCEF  6D                 	db	109
   720  00FCF0  69                 	db	105
   721  00FCF1  6E                 	db	110
   722  00FCF2  61                 	db	97
   723  00FCF3  6C                 	db	108
   724  00FCF4  20                 	db	32
   725  00FCF5  4D                 	db	77
   726  00FCF6  6F                 	db	111
   727  00FCF7  64                 	db	100
   728  00FCF8  65                 	db	101
   729  00FCF9  3A                 	db	58
   730  00FCFA  20                 	db	32
   731  00FCFB  43                 	db	67
   732  00FCFC  4F                 	db	79
   733  00FCFD  4D                 	db	77
   734  00FCFE  4D                 	db	77
   735  00FCFF  41                 	db	65
   736  00FD00  4E                 	db	78
   737  00FD01  44                 	db	68
   738  00FD02  20                 	db	32
   739  00FD03  4D                 	db	77
   740  00FD04  4F                 	db	79
   741  00FD05  44                 	db	68
   742  00FD06  45                 	db	69
   743  00FD07  0D                 	db	13
   744  00FD08  0A                 	db	10
   745  00FD09  4D                 	db	77
   746  00FD0A  6F                 	db	111
   747  00FD0B  64                 	db	100
   748  00FD0C  65                 	db	101
   749  00FD0D  6D                 	db	109
   750  00FD0E  20                 	db	32
   751  00FD0F  54                 	db	84
   752  00FD10  79                 	db	121
   753  00FD11  70                 	db	112
   754  00FD12  65                 	db	101
   755  00FD13  3A                 	db	58
   756  00FD14  20                 	db	32
   757  00FD15  47                 	db	71
   758  00FD16  53                 	db	83
   759  00FD17  4D                 	db	77
   760  00FD18  2F                 	db	47
   761  00FD19  47                 	db	71
   762  00FD1A  50                 	db	80
   763  00FD1B  52                 	db	82
   764  00FD1C  53                 	db	83
   765  00FD1D  0D                 	db	13
   766  00FD1E  0A                 	db	10
   767  00FD1F  0D                 	db	13
   768  00FD20  0A                 	db	10
   769  00FD21  00                 	db	0
   770  00FD22                     __end_of_MsgFormat:
   771                           	opt stack 0
   772  00FD22                     _Welcome:
   773                           	opt stack 0
   774  00FD22  2A                 	db	42
   775  00FD23  2A                 	db	42
   776  00FD24  2A                 	db	42
   777  00FD25  2A                 	db	42
   778  00FD26  2A                 	db	42
   779  00FD27  2A                 	db	42
   780  00FD28  2A                 	db	42
   781  00FD29  2A                 	db	42
   782  00FD2A  2A                 	db	42
   783  00FD2B  2A                 	db	42
   784  00FD2C  2A                 	db	42
   785  00FD2D  2A                 	db	42
   786  00FD2E  2A                 	db	42
   787  00FD2F  2A                 	db	42
   788  00FD30  2A                 	db	42
   789  00FD31  2A                 	db	42
   790  00FD32  2A                 	db	42
   791  00FD33  2A                 	db	42
   792  00FD34  2A                 	db	42
   793  00FD35  2A                 	db	42
   794  00FD36  2A                 	db	42
   795  00FD37  2A                 	db	42
   796  00FD38  2A                 	db	42
   797  00FD39  2A                 	db	42
   798  00FD3A  2A                 	db	42
   799  00FD3B  2A                 	db	42
   800  00FD3C  2A                 	db	42
   801  00FD3D  2A                 	db	42
   802  00FD3E  2A                 	db	42
   803  00FD3F  2A                 	db	42
   804  00FD40  2A                 	db	42
   805  00FD41  2A                 	db	42
   806  00FD42  2A                 	db	42
   807  00FD43  2A                 	db	42
   808  00FD44  2A                 	db	42
   809  00FD45  2A                 	db	42
   810  00FD46  2A                 	db	42
   811  00FD47  2A                 	db	42
   812  00FD48  2A                 	db	42
   813  00FD49  2A                 	db	42
   814  00FD4A  2A                 	db	42
   815  00FD4B  2A                 	db	42
   816  00FD4C  2A                 	db	42
   817  00FD4D  2A                 	db	42
   818  00FD4E  2A                 	db	42
   819  00FD4F  2A                 	db	42
   820  00FD50  2A                 	db	42
   821  00FD51  2A                 	db	42
   822  00FD52  2A                 	db	42
   823  00FD53  0D                 	db	13
   824  00FD54  0A                 	db	10
   825  00FD55  20                 	db	32
   826  00FD56  20                 	db	32
   827  00FD57  20                 	db	32
   828  00FD58  20                 	db	32
   829  00FD59  20                 	db	32
   830  00FD5A  20                 	db	32
   831  00FD5B  20                 	db	32
   832  00FD5C  20                 	db	32
   833  00FD5D  20                 	db	32
   834  00FD5E  20                 	db	32
   835  00FD5F  20                 	db	32
   836  00FD60  20                 	db	32
   837  00FD61  20                 	db	32
   838  00FD62  20                 	db	32
   839  00FD63  20                 	db	32
   840  00FD64  20                 	db	32
   841  00FD65  20                 	db	32
   842  00FD66  20                 	db	32
   843  00FD67  4D                 	db	77
   844  00FD68  45                 	db	69
   845  00FD69  52                 	db	82
   846  00FD6A  43                 	db	67
   847  00FD6B  55                 	db	85
   848  00FD6C  52                 	db	82
   849  00FD6D  59                 	db	89
   850  00FD6E  20                 	db	32
   851  00FD6F  53                 	db	83
   852  00FD70  59                 	db	89
   853  00FD71  53                 	db	83
   854  00FD72  54                 	db	84
   855  00FD73  45                 	db	69
   856  00FD74  4D                 	db	77
   857  00FD75  0D                 	db	13
   858  00FD76  0A                 	db	10
   859  00FD77  2A                 	db	42
   860  00FD78  2A                 	db	42
   861  00FD79  2A                 	db	42
   862  00FD7A  2A                 	db	42
   863  00FD7B  2A                 	db	42
   864  00FD7C  2A                 	db	42
   865  00FD7D  2A                 	db	42
   866  00FD7E  2A                 	db	42
   867  00FD7F  2A                 	db	42
   868  00FD80  2A                 	db	42
   869  00FD81  2A                 	db	42
   870  00FD82  2A                 	db	42
   871  00FD83  2A                 	db	42
   872  00FD84  2A                 	db	42
   873  00FD85  2A                 	db	42
   874  00FD86  2A                 	db	42
   875  00FD87  2A                 	db	42
   876  00FD88  2A                 	db	42
   877  00FD89  2A                 	db	42
   878  00FD8A  2A                 	db	42
   879  00FD8B  2A                 	db	42
   880  00FD8C  2A                 	db	42
   881  00FD8D  2A                 	db	42
   882  00FD8E  2A                 	db	42
   883  00FD8F  2A                 	db	42
   884  00FD90  2A                 	db	42
   885  00FD91  2A                 	db	42
   886  00FD92  2A                 	db	42
   887  00FD93  2A                 	db	42
   888  00FD94  2A                 	db	42
   889  00FD95  2A                 	db	42
   890  00FD96  2A                 	db	42
   891  00FD97  2A                 	db	42
   892  00FD98  2A                 	db	42
   893  00FD99  2A                 	db	42
   894  00FD9A  2A                 	db	42
   895  00FD9B  2A                 	db	42
   896  00FD9C  2A                 	db	42
   897  00FD9D  2A                 	db	42
   898  00FD9E  2A                 	db	42
   899  00FD9F  2A                 	db	42
   900  00FDA0  2A                 	db	42
   901  00FDA1  2A                 	db	42
   902  00FDA2  2A                 	db	42
   903  00FDA3  2A                 	db	42
   904  00FDA4  2A                 	db	42
   905  00FDA5  2A                 	db	42
   906  00FDA6  2A                 	db	42
   907  00FDA7  2A                 	db	42
   908  00FDA8  0D                 	db	13
   909  00FDA9  0A                 	db	10
   910  00FDAA  00                 	db	0
   911  00FDAB                     __end_of_Welcome:
   912                           	opt stack 0
   913  00FDAB                     _configDescriptor1:
   914                           	opt stack 0
   915  00FDAB  09                 	db	9
   916  00FDAC  02                 	db	2
   917  00FDAD  43                 	db	67
   918  00FDAE  00                 	db	0
   919  00FDAF  02                 	db	2
   920  00FDB0  01                 	db	1
   921  00FDB1  00                 	db	0
   922  00FDB2  C0                 	db	192
   923  00FDB3  32                 	db	50
   924  00FDB4  09                 	db	9
   925  00FDB5  04                 	db	4
   926  00FDB6  00                 	db	0
   927  00FDB7  00                 	db	0
   928  00FDB8  01                 	db	1
   929  00FDB9  02                 	db	2
   930  00FDBA  02                 	db	2
   931  00FDBB  01                 	db	1
   932  00FDBC  00                 	db	0
   933  00FDBD  05                 	db	5
   934  00FDBE  24                 	db	36
   935  00FDBF  00                 	db	0
   936  00FDC0  10                 	db	16
   937  00FDC1  01                 	db	1
   938  00FDC2  04                 	db	4
   939  00FDC3  24                 	db	36
   940  00FDC4  02                 	db	2
   941  00FDC5  02                 	db	2
   942  00FDC6  05                 	db	5
   943  00FDC7  24                 	db	36
   944  00FDC8  06                 	db	6
   945  00FDC9  00                 	db	0
   946  00FDCA  01                 	db	1
   947  00FDCB  05                 	db	5
   948  00FDCC  24                 	db	36
   949  00FDCD  01                 	db	1
   950  00FDCE  00                 	db	0
   951  00FDCF  01                 	db	1
   952  00FDD0  07                 	db	7
   953  00FDD1  05                 	db	5
   954  00FDD2  81                 	db	129
   955  00FDD3  03                 	db	3
   956  00FDD4  08                 	db	8
   957  00FDD5  00                 	db	0
   958  00FDD6  02                 	db	2
   959  00FDD7  09                 	db	9
   960  00FDD8  04                 	db	4
   961  00FDD9  01                 	db	1
   962  00FDDA  00                 	db	0
   963  00FDDB  02                 	db	2
   964  00FDDC  0A                 	db	10
   965  00FDDD  00                 	db	0
   966  00FDDE  00                 	db	0
   967  00FDDF  00                 	db	0
   968  00FDE0  07                 	db	7
   969  00FDE1  05                 	db	5
   970  00FDE2  02                 	db	2
   971  00FDE3  02                 	db	2
   972  00FDE4  40                 	db	64
   973  00FDE5  00                 	db	0
   974  00FDE6  00                 	db	0
   975  00FDE7  07                 	db	7
   976  00FDE8  05                 	db	5
   977  00FDE9  82                 	db	130
   978  00FDEA  02                 	db	2
   979  00FDEB  40                 	db	64
   980  00FDEC  00                 	db	0
   981  00FDED  00                 	db	0
   982  00FDEE                     __end_of_configDescriptor1:
   983                           	opt stack 0
   984  00FDEE                     _sd002:
   985                           	opt stack 0
   986  00FDEE  26                 	db	38
   987  00FDEF  03                 	db	3
   988  00FDF0  0054               	dw	84
   989  00FDF2  0065               	dw	101
   990  00FDF4  0072               	dw	114
   991  00FDF6  006D               	dw	109
   992  00FDF8  0069               	dw	105
   993  00FDFA  006E               	dw	110
   994  00FDFC  0061               	dw	97
   995  00FDFE  006C               	dw	108
   996  00FE00  0020               	dw	32
   997  00FE02  0049               	dw	73
   998  00FE04  006E               	dw	110
   999  00FE06  0074               	dw	116
  1000  00FE08  0065               	dw	101
  1001  00FE0A  0072               	dw	114
  1002  00FE0C  0066               	dw	102
  1003  00FE0E  0061               	dw	97
  1004  00FE10  0063               	dw	99
  1005  00FE12  0065               	dw	101
  1006  00FE14                     __end_of_sd002:
  1007                           	opt stack 0
  1008  00FE14                     _sd001:
  1009                           	opt stack 0
  1010  00FE14  1E                 	db	30
  1011  00FE15  03                 	db	3
  1012  00FE16  004D               	dw	77
  1013  00FE18  0065               	dw	101
  1014  00FE1A  0072               	dw	114
  1015  00FE1C  0063               	dw	99
  1016  00FE1E  0075               	dw	117
  1017  00FE20  0072               	dw	114
  1018  00FE22  0079               	dw	121
  1019  00FE24  0020               	dw	32
  1020  00FE26  0053               	dw	83
  1021  00FE28  0079               	dw	121
  1022  00FE2A  0073               	dw	115
  1023  00FE2C  0074               	dw	116
  1024  00FE2E  0065               	dw	101
  1025  00FE30  006D               	dw	109
  1026  00FE32                     __end_of_sd001:
  1027                           	opt stack 0
  1028  00FE32                     _MsgReady:
  1029                           	opt stack 0
  1030  00FE32  0D                 	db	13
  1031  00FE33  0A                 	db	10
  1032  00FE34  53                 	db	83
  1033  00FE35  79                 	db	121
  1034  00FE36  73                 	db	115
  1035  00FE37  74                 	db	116
  1036  00FE38  65                 	db	101
  1037  00FE39  6D                 	db	109
  1038  00FE3A  20                 	db	32
  1039  00FE3B  52                 	db	82
  1040  00FE3C  65                 	db	101
  1041  00FE3D  61                 	db	97
  1042  00FE3E  64                 	db	100
  1043  00FE3F  79                 	db	121
  1044  00FE40  2E                 	db	46
  1045  00FE41  2E                 	db	46
  1046  00FE42  2E                 	db	46
  1047  00FE43  20                 	db	32
  1048  00FE44  0D                 	db	13
  1049  00FE45  0A                 	db	10
  1050  00FE46  0D                 	db	13
  1051  00FE47  0A                 	db	10
  1052  00FE48  00                 	db	0
  1053  00FE49                     __end_of_MsgReady:
  1054                           	opt stack 0
  1055  00FE49                     _device_dsc:
  1056                           	opt stack 0
  1057  00FE49  12                 	db	18
  1058  00FE4A  01                 	db	1
  1059  00FE4B  0200               	dw	512
  1060  00FE4D  02                 	db	2
  1061  00FE4E  00                 	db	0
  1062  00FE4F  00                 	db	0
  1063  00FE50  08                 	db	8
  1064  00FE51  04D8               	dw	1240
  1065  00FE53  000A               	dw	10
  1066  00FE55  0100               	dw	256
  1067  00FE57  01                 	db	1
  1068  00FE58  02                 	db	2
  1069  00FE59  00                 	db	0
  1070  00FE5A  01                 	db	1
  1071  00FE5B                     __end_of_device_dsc:
  1072                           	opt stack 0
  1073  00FE5B                     _sd000:
  1074                           	opt stack 0
  1075  00FE5B  04                 	db	4
  1076  00FE5C  03                 	db	3
  1077  00FE5D  0409               	dw	1033
  1078  00FE5F                     __end_of_sd000:
  1079                           	opt stack 0
  1080  0000                     _RPINR1	set	3815
  1081  0000                     _UEP0bits	set	3878
  1082  0000                     _UIEbits	set	3894
  1083  0000                     _UADDR	set	3896
  1084  0000                     _UIE	set	3894
  1085  0000                     _UEIE	set	3895
  1086  0000                     _UCFG	set	3897
  1087  0000                     _RTCCAL	set	3902
  1088  0000                     _PADCFG1bits	set	3900
  1089  0000                     _RTCCFGbits	set	3903
  1090  0000                     _DSCONLbits	set	3916
  1091  0000                     _DSGPR1	set	3919
  1092  0000                     _DSGPR0	set	3918
  1093  0000                     _DSCONHbits	set	3917
  1094  0000                     _ANCON1bits	set	3913
  1095  0000                     _UEP1	set	3879
  1096  0000                     _UEP0	set	3878
  1097  0000                     _T1CONbits	set	4045
  1098  0000                     _PORTDbits	set	3971
  1099  0000                     _USTAT	set	3940
  1100  0000                     _PIR2bits	set	4001
  1101  0000                     _UCON	set	3941
  1102  0000                     _UIRbits	set	3938
  1103  0000                     _UCONbits	set	3941
  1104  0000                     _UIR	set	3938
  1105  0000                     _UEIR	set	3939
  1106  0000                     _PIE2bits	set	4000
  1107  0000                     _BAUDCON2	set	3964
  1108  0000                     _RCSTA2	set	3996
  1109  0000                     _BAUDCON1	set	3966
  1110  0000                     _RCSTA1	set	4012
  1111  0000                     _TRISCbits	set	3988
  1112  0000                     _TXSTA2	set	4008
  1113  0000                     _TXSTA1	set	4013
  1114  0000                     _RCREG2	set	4010
  1115  0000                     _RCREG1	set	4015
  1116  0000                     _TXREG2	set	4009
  1117  0000                     _TXREG1	set	4014
  1118  0000                     _SPBRG2	set	4011
  1119  0000                     _SPBRGH2	set	3965
  1120  0000                     _SPBRG1	set	4016
  1121  0000                     _SPBRGH1	set	3967
  1122  0000                     _PR4	set	3959
  1123  0000                     _PR2	set	4043
  1124  0000                     _PIE1bits	set	3997
  1125  0000                     _IPR1bits	set	3999
  1126  0000                     _T4CONbits	set	3958
  1127  0000                     _T2CONbits	set	4042
  1128  0000                     _ALRMVALL	set	3982
  1129  0000                     _ALRMVALH	set	3983
  1130  0000                     _RTCVALH	set	3993
  1131  0000                     _RTCVALL	set	3992
  1132  0000                     _ALRMRPTbits	set	3984
  1133  0000                     _ALRMCFGbits	set	3985
  1134  0000                     _PIE3bits	set	4003
  1135  0000                     _IPR3bits	set	4005
  1136  0000                     _OSCCONbits	set	4051
  1137  0000                     _PORTEbits	set	3972
  1138  0000                     _TRISEbits	set	3990
  1139  0000                     _WDTCONbits	set	4032
  1140  0000                     _INTCON2bits	set	4081
  1141  0000                     _TRISBbits	set	3987
  1142  0000                     _OSCTUNEbits	set	3995
  1143  0000                     _SSP2CON1	set	3954
  1144  0000                     _TRISDbits	set	3989
  1145  0000                     _SSP2BUF	set	3957
  1146  0000                     _SSP2CON2bits	set	3953
  1147  0000                     _SSP2STAT	set	3955
  1148  0000                     _SSP2CON2	set	3953
  1149  0000                     _SSP2ADD	set	3956
  1150  0000                     _PIR1bits	set	3998
  1151  0000                     _PIR3bits	set	4004
  1152  0000                     _INTCON3bits	set	4080
  1153  0000                     _INTCONbits	set	4082
  1154  0000                     _RCONbits	set	4048
  1155  00FE5F                     STR_21:
  1156  00FE5F  20                 	db	32
  1157  00FE60  4C                 	db	76	;'L'
  1158  00FE61  61                 	db	97	;'a'
  1159  00FE62  7A                 	db	122	;'z'
  1160  00FE63  79                 	db	121	;'y'
  1161  00FE64  20                 	db	32
  1162  00FE65  64                 	db	100	;'d'
  1163  00FE66  65                 	db	101	;'e'
  1164  00FE67  76                 	db	118	;'v'
  1165  00FE68  69                 	db	105	;'i'
  1166  00FE69  63                 	db	99	;'c'
  1167  00FE6A  65                 	db	101	;'e'
  1168  00FE6B  2E                 	db	46
  1169  00FE6C  2E                 	db	46
  1170  00FE6D  2E                 	db	46
  1171  00FE6E  79                 	db	121	;'y'
  1172  00FE6F  6F                 	db	111	;'o'
  1173  00FE70  75                 	db	117	;'u'
  1174  00FE71  27                 	db	39
  1175  00FE72  76                 	db	118	;'v'
  1176  00FE73  65                 	db	101	;'e'
  1177  00FE74  20                 	db	32
  1178  00FE75  62                 	db	98	;'b'
  1179  00FE76  65                 	db	101	;'e'
  1180  00FE77  65                 	db	101	;'e'
  1181  00FE78  6E                 	db	110	;'n'
  1182  00FE79  20                 	db	32
  1183  00FE7A  74                 	db	116	;'t'
  1184  00FE7B  69                 	db	105	;'i'
  1185  00FE7C  6D                 	db	109	;'m'
  1186  00FE7D  65                 	db	101	;'e'
  1187  00FE7E  64                 	db	100	;'d'
  1188  00FE7F  2D                 	db	45
  1189  00FE80  6F                 	db	111	;'o'
  1190  00FE81  75                 	db	117	;'u'
  1191  00FE82  74                 	db	116	;'t'
  1192  00FE83  21                 	db	33
  1193  00FE84  21                 	db	33
  1194  00FE85  21                 	db	33
  1195  00FE86  0D                 	db	13
  1196  00FE87  0A                 	db	10
  1197  00FE88  00                 	db	0
  1198  00FE89                     STR_8:
  1199  00FE89  41                 	db	65	;'A'
  1200  00FE8A  54                 	db	84	;'T'
  1201  00FE8B  2B                 	db	43
  1202  00FE8C  53                 	db	83	;'S'
  1203  00FE8D  41                 	db	65	;'A'
  1204  00FE8E  50                 	db	80	;'P'
  1205  00FE8F  42                 	db	66	;'B'
  1206  00FE90  52                 	db	82	;'R'
  1207  00FE91  3D                 	db	61	;'='
  1208  00FE92  33                 	db	51	;'3'
  1209  00FE93  2C                 	db	44
  1210  00FE94  31                 	db	49	;'1'
  1211  00FE95  2C                 	db	44
  1212  00FE96  22                 	db	34
  1213  00FE97  43                 	db	67	;'C'
  1214  00FE98  6F                 	db	111	;'o'
  1215  00FE99  6E                 	db	110	;'n'
  1216  00FE9A  74                 	db	116	;'t'
  1217  00FE9B  79                 	db	121	;'y'
  1218  00FE9C  70                 	db	112	;'p'
  1219  00FE9D  65                 	db	101	;'e'
  1220  00FE9E  22                 	db	34
  1221  00FE9F  2C                 	db	44
  1222  00FEA0  22                 	db	34
  1223  00FEA1  47                 	db	71	;'G'
  1224  00FEA2  50                 	db	80	;'P'
  1225  00FEA3  52                 	db	82	;'R'
  1226  00FEA4  53                 	db	83	;'S'
  1227  00FEA5  22                 	db	34
  1228  00FEA6  0D                 	db	13
  1229  00FEA7  00                 	db	0
  1230  00FEA8                     STR_14:
  1231  00FEA8  41                 	db	65	;'A'
  1232  00FEA9  54                 	db	84	;'T'
  1233  00FEAA  2B                 	db	43
  1234  00FEAB  48                 	db	72	;'H'
  1235  00FEAC  54                 	db	84	;'T'
  1236  00FEAD  54                 	db	84	;'T'
  1237  00FEAE  50                 	db	80	;'P'
  1238  00FEAF  50                 	db	80	;'P'
  1239  00FEB0  41                 	db	65	;'A'
  1240  00FEB1  52                 	db	82	;'R'
  1241  00FEB2  41                 	db	65	;'A'
  1242  00FEB3  3D                 	db	61	;'='
  1243  00FEB4  22                 	db	34
  1244  00FEB5  43                 	db	67	;'C'
  1245  00FEB6  49                 	db	73	;'I'
  1246  00FEB7  44                 	db	68	;'D'
  1247  00FEB8  22                 	db	34
  1248  00FEB9  2C                 	db	44
  1249  00FEBA  31                 	db	49	;'1'
  1250  00FEBB  0D                 	db	13
  1251  00FEBC  00                 	db	0
  1252  00FEBD                     STR_9:
  1253  00FEBD  41                 	db	65	;'A'
  1254  00FEBE  54                 	db	84	;'T'
  1255  00FEBF  2B                 	db	43
  1256  00FEC0  53                 	db	83	;'S'
  1257  00FEC1  41                 	db	65	;'A'
  1258  00FEC2  50                 	db	80	;'P'
  1259  00FEC3  42                 	db	66	;'B'
  1260  00FEC4  52                 	db	82	;'R'
  1261  00FEC5  3D                 	db	61	;'='
  1262  00FEC6  33                 	db	51	;'3'
  1263  00FEC7  2C                 	db	44
  1264  00FEC8  31                 	db	49	;'1'
  1265  00FEC9  2C                 	db	44
  1266  00FECA  22                 	db	34
  1267  00FECB  41                 	db	65	;'A'
  1268  00FECC  50                 	db	80	;'P'
  1269  00FECD  4E                 	db	78	;'N'
  1270  00FECE  22                 	db	34
  1271  00FECF  2C                 	db	44
  1272  00FED0  22                 	db	34
  1273  00FED1  00                 	db	0
  1274  00FED2                     STR_23:
  1275  00FED2  46                 	db	70	;'F'
  1276  00FED3  72                 	db	114	;'r'
  1277  00FED4  61                 	db	97	;'a'
  1278  00FED5  6D                 	db	109	;'m'
  1279  00FED6  65                 	db	101	;'e'
  1280  00FED7  77                 	db	119	;'w'
  1281  00FED8  6F                 	db	111	;'o'
  1282  00FED9  72                 	db	114	;'r'
  1283  00FEDA  6B                 	db	107	;'k'
  1284  00FEDB  20                 	db	32
  1285  00FEDC  56                 	db	86	;'V'
  1286  00FEDD  65                 	db	101	;'e'
  1287  00FEDE  72                 	db	114	;'r'
  1288  00FEDF  73                 	db	115	;'s'
  1289  00FEE0  69                 	db	105	;'i'
  1290  00FEE1  6F                 	db	111	;'o'
  1291  00FEE2  6E                 	db	110	;'n'
  1292  00FEE3  3A                 	db	58	;':'
  1293  00FEE4  20                 	db	32
  1294  00FEE5  00                 	db	0
  1295  00FEE6                     STR_15:
  1296  00FEE6  41                 	db	65	;'A'
  1297  00FEE7  54                 	db	84	;'T'
  1298  00FEE8  2B                 	db	43
  1299  00FEE9  48                 	db	72	;'H'
  1300  00FEEA  54                 	db	84	;'T'
  1301  00FEEB  54                 	db	84	;'T'
  1302  00FEEC  50                 	db	80	;'P'
  1303  00FEED  50                 	db	80	;'P'
  1304  00FEEE  41                 	db	65	;'A'
  1305  00FEEF  52                 	db	82	;'R'
  1306  00FEF0  41                 	db	65	;'A'
  1307  00FEF1  3D                 	db	61	;'='
  1308  00FEF2  22                 	db	34
  1309  00FEF3  55                 	db	85	;'U'
  1310  00FEF4  52                 	db	82	;'R'
  1311  00FEF5  4C                 	db	76	;'L'
  1312  00FEF6  22                 	db	34
  1313  00FEF7  2C                 	db	44
  1314  00FEF8  22                 	db	34
  1315  00FEF9  00                 	db	0
  1316  00FEFA                     STR_30:
  1317  00FEFA  41                 	db	65	;'A'
  1318  00FEFB  54                 	db	84	;'T'
  1319  00FEFC  2B                 	db	43
  1320  00FEFD  43                 	db	67	;'C'
  1321  00FEFE  4D                 	db	77	;'M'
  1322  00FEFF  47                 	db	71	;'G'
  1323  00FF00  44                 	db	68	;'D'
  1324  00FF01  41                 	db	65	;'A'
  1325  00FF02  3D                 	db	61	;'='
  1326  00FF03  44                 	db	68	;'D'
  1327  00FF04  45                 	db	69	;'E'
  1328  00FF05  4C                 	db	76	;'L'
  1329  00FF06  20                 	db	32
  1330  00FF07  41                 	db	65	;'A'
  1331  00FF08  4C                 	db	76	;'L'
  1332  00FF09  4C                 	db	76	;'L'
  1333  00FF0A  0D                 	db	13
  1334  00FF0B  0A                 	db	10
  1335  00FF0C  00                 	db	0
  1336  00FF0D                     STR_27:
  1337  00FF0D  42                 	db	66	;'B'
  1338  00FF0E  75                 	db	117	;'u'
  1339  00FF0F  69                 	db	105	;'i'
  1340  00FF10  6C                 	db	108	;'l'
  1341  00FF11  64                 	db	100	;'d'
  1342  00FF12  20                 	db	32
  1343  00FF13  44                 	db	68	;'D'
  1344  00FF14  61                 	db	97	;'a'
  1345  00FF15  74                 	db	116	;'t'
  1346  00FF16  65                 	db	101	;'e'
  1347  00FF17  3A                 	db	58	;':'
  1348  00FF18  20                 	db	32
  1349  00FF19  25                 	db	37
  1350  00FF1A  73                 	db	115	;'s'
  1351  00FF1B  0D                 	db	13
  1352  00FF1C  0A                 	db	10
  1353  00FF1D  00                 	db	0
  1354  00FF1E                     STR_16:
  1355  00FF1E  41                 	db	65	;'A'
  1356  00FF1F  54                 	db	84	;'T'
  1357  00FF20  2B                 	db	43
  1358  00FF21  48                 	db	72	;'H'
  1359  00FF22  54                 	db	84	;'T'
  1360  00FF23  54                 	db	84	;'T'
  1361  00FF24  50                 	db	80	;'P'
  1362  00FF25  41                 	db	65	;'A'
  1363  00FF26  43                 	db	67	;'C'
  1364  00FF27  54                 	db	84	;'T'
  1365  00FF28  49                 	db	73	;'I'
  1366  00FF29  4F                 	db	79	;'O'
  1367  00FF2A  4E                 	db	78	;'N'
  1368  00FF2B  3D                 	db	61	;'='
  1369  00FF2C  30                 	db	48	;'0'
  1370  00FF2D  0D                 	db	13
  1371  00FF2E  00                 	db	0
  1372  00FF2F                     STR_29:
  1373  00FF2F  41                 	db	65	;'A'
  1374  00FF30  54                 	db	84	;'T'
  1375  00FF31  2B                 	db	43
  1376  00FF32  43                 	db	67	;'C'
  1377  00FF33  4D                 	db	77	;'M'
  1378  00FF34  47                 	db	71	;'G'
  1379  00FF35  44                 	db	68	;'D'
  1380  00FF36  3D                 	db	61	;'='
  1381  00FF37  31                 	db	49	;'1'
  1382  00FF38  2C                 	db	44
  1383  00FF39  30                 	db	48	;'0'
  1384  00FF3A  0D                 	db	13
  1385  00FF3B  0A                 	db	10
  1386  00FF3C  00                 	db	0
  1387  00FF3D  41                 	db	65	;'A'
  1388  00FF3E  54                 	db	84	;'T'
  1389  00FF3F  2B                 	db	43
  1390  00FF40  48                 	db	72	;'H'
  1391  00FF41  54                 	db	84	;'T'
  1392  00FF42  54                 	db	84	;'T'
  1393  00FF43  50                 	db	80	;'P'
  1394  00FF44  53                 	db	83	;'S'
  1395  00FF45  53                 	db	83	;'S'
  1396  00FF46  4C                 	db	76	;'L'
  1397  00FF47  3D                 	db	61	;'='
  1398  00FF48  30                 	db	48	;'0'
  1399  00FF49  0D                 	db	13
  1400  00FF4A  00                 	db	0
  1401  00FF4B                     STR_10:
  1402  00FF4B  41                 	db	65	;'A'
  1403  00FF4C  54                 	db	84	;'T'
  1404  00FF4D  2B                 	db	43
  1405  00FF4E  53                 	db	83	;'S'
  1406  00FF4F  41                 	db	65	;'A'
  1407  00FF50  50                 	db	80	;'P'
  1408  00FF51  42                 	db	66	;'B'
  1409  00FF52  52                 	db	82	;'R'
  1410  00FF53  3D                 	db	61	;'='
  1411  00FF54  31                 	db	49	;'1'
  1412  00FF55  2C                 	db	44
  1413  00FF56  31                 	db	49	;'1'
  1414  00FF57  0D                 	db	13
  1415  00FF58  00                 	db	0
  1416  00FF59                     STR_11:
  1417  00FF59  41                 	db	65	;'A'
  1418  00FF5A  54                 	db	84	;'T'
  1419  00FF5B  2B                 	db	43
  1420  00FF5C  53                 	db	83	;'S'
  1421  00FF5D  41                 	db	65	;'A'
  1422  00FF5E  50                 	db	80	;'P'
  1423  00FF5F  42                 	db	66	;'B'
  1424  00FF60  52                 	db	82	;'R'
  1425  00FF61  3D                 	db	61	;'='
  1426  00FF62  32                 	db	50	;'2'
  1427  00FF63  2C                 	db	44
  1428  00FF64  31                 	db	49	;'1'
  1429  00FF65  0D                 	db	13
  1430  00FF66  00                 	db	0
  1431  00FF67                     STR_13:
  1432  00FF67  41                 	db	65	;'A'
  1433  00FF68  54                 	db	84	;'T'
  1434  00FF69  2B                 	db	43
  1435  00FF6A  48                 	db	72	;'H'
  1436  00FF6B  54                 	db	84	;'T'
  1437  00FF6C  54                 	db	84	;'T'
  1438  00FF6D  50                 	db	80	;'P'
  1439  00FF6E  53                 	db	83	;'S'
  1440  00FF6F  53                 	db	83	;'S'
  1441  00FF70  4C                 	db	76	;'L'
  1442  00FF71  3D                 	db	61	;'='
  1443  00FF72  31                 	db	49	;'1'
  1444  00FF73  0D                 	db	13
  1445  00FF74  00                 	db	0
  1446  00FF75                     STR_2:
  1447  00FF75  41                 	db	65	;'A'
  1448  00FF76  54                 	db	84	;'T'
  1449  00FF77  2B                 	db	43
  1450  00FF78  49                 	db	73	;'I'
  1451  00FF79  50                 	db	80	;'P'
  1452  00FF7A  52                 	db	82	;'R'
  1453  00FF7B  3D                 	db	61	;'='
  1454  00FF7C  39                 	db	57	;'9'
  1455  00FF7D  36                 	db	54	;'6'
  1456  00FF7E  30                 	db	48	;'0'
  1457  00FF7F  30                 	db	48	;'0'
  1458  00FF80  0D                 	db	13
  1459  00FF81  0A                 	db	10
  1460  00FF82  00                 	db	0
  1461  00FF83                     STR_17:
  1462  00FF83  41                 	db	65	;'A'
  1463  00FF84  54                 	db	84	;'T'
  1464  00FF85  2B                 	db	43
  1465  00FF86  48                 	db	72	;'H'
  1466  00FF87  54                 	db	84	;'T'
  1467  00FF88  54                 	db	84	;'T'
  1468  00FF89  50                 	db	80	;'P'
  1469  00FF8A  52                 	db	82	;'R'
  1470  00FF8B  45                 	db	69	;'E'
  1471  00FF8C  41                 	db	65	;'A'
  1472  00FF8D  44                 	db	68	;'D'
  1473  00FF8E  0D                 	db	13
  1474  00FF8F  00                 	db	0
  1475  00FF90                     STR_18:
  1476  00FF90  41                 	db	65	;'A'
  1477  00FF91  54                 	db	84	;'T'
  1478  00FF92  2B                 	db	43
  1479  00FF93  48                 	db	72	;'H'
  1480  00FF94  54                 	db	84	;'T'
  1481  00FF95  54                 	db	84	;'T'
  1482  00FF96  50                 	db	80	;'P'
  1483  00FF97  54                 	db	84	;'T'
  1484  00FF98  45                 	db	69	;'E'
  1485  00FF99  52                 	db	82	;'R'
  1486  00FF9A  4D                 	db	77	;'M'
  1487  00FF9B  0D                 	db	13
  1488  00FF9C  00                 	db	0
  1489  00FF9D                     STR_12:
  1490  00FF9D  41                 	db	65	;'A'
  1491  00FF9E  54                 	db	84	;'T'
  1492  00FF9F  2B                 	db	43
  1493  00FFA0  48                 	db	72	;'H'
  1494  00FFA1  54                 	db	84	;'T'
  1495  00FFA2  54                 	db	84	;'T'
  1496  00FFA3  50                 	db	80	;'P'
  1497  00FFA4  49                 	db	73	;'I'
  1498  00FFA5  4E                 	db	78	;'N'
  1499  00FFA6  49                 	db	73	;'I'
  1500  00FFA7  54                 	db	84	;'T'
  1501  00FFA8  0D                 	db	13
  1502  00FFA9  00                 	db	0
  1503  00FFAA                     STR_31:
  1504  00FFAA  41                 	db	65	;'A'
  1505  00FFAB  54                 	db	84	;'T'
  1506  00FFAC  2B                 	db	43
  1507  00FFAD  43                 	db	67	;'C'
  1508  00FFAE  4C                 	db	76	;'L'
  1509  00FFAF  49                 	db	73	;'I'
  1510  00FFB0  50                 	db	80	;'P'
  1511  00FFB1  3D                 	db	61	;'='
  1512  00FFB2  31                 	db	49	;'1'
  1513  00FFB3  0D                 	db	13
  1514  00FFB4  0A                 	db	10
  1515  00FFB5  00                 	db	0
  1516  00FFB6                     STR_28:
  1517  00FFB6  4D                 	db	77	;'M'
  1518  00FFB7  61                 	db	97	;'a'
  1519  00FFB8  72                 	db	114	;'r'
  1520  00FFB9  20                 	db	32
  1521  00FFBA  32                 	db	50	;'2'
  1522  00FFBB  37                 	db	55	;'7'
  1523  00FFBC  20                 	db	32
  1524  00FFBD  32                 	db	50	;'2'
  1525  00FFBE  30                 	db	48	;'0'
  1526  00FFBF  32                 	db	50	;'2'
  1527  00FFC0  32                 	db	50	;'2'
  1528  00FFC1  00                 	db	0
  1529  00FFC2                     STR_4:
  1530  00FFC2  41                 	db	65	;'A'
  1531  00FFC3  54                 	db	84	;'T'
  1532  00FFC4  2B                 	db	43
  1533  00FFC5  43                 	db	67	;'C'
  1534  00FFC6  4D                 	db	77	;'M'
  1535  00FFC7  47                 	db	71	;'G'
  1536  00FFC8  52                 	db	82	;'R'
  1537  00FFC9  3D                 	db	61	;'='
  1538  00FFCA  31                 	db	49	;'1'
  1539  00FFCB  0D                 	db	13
  1540  00FFCC  0A                 	db	10
  1541  00FFCD  00                 	db	0
  1542  00FFCE                     STR_5:
  1543  00FFCE  41                 	db	65	;'A'
  1544  00FFCF  54                 	db	84	;'T'
  1545  00FFD0  2B                 	db	43
  1546  00FFD1  43                 	db	67	;'C'
  1547  00FFD2  4D                 	db	77	;'M'
  1548  00FFD3  47                 	db	71	;'G'
  1549  00FFD4  53                 	db	83	;'S'
  1550  00FFD5  3D                 	db	61	;'='
  1551  00FFD6  22                 	db	34
  1552  00FFD7  00                 	db	0
  1553  00FFD8                     STR_32:
  1554  00FFD8  28                 	db	40
  1555  00FFD9  6E                 	db	110	;'n'
  1556  00FFDA  75                 	db	117	;'u'
  1557  00FFDB  6C                 	db	108	;'l'
  1558  00FFDC  6C                 	db	108	;'l'
  1559  00FFDD  29                 	db	41
  1560  00FFDE  00                 	db	0
  1561  00FFDF                     STR_3:
  1562  00FFDF  41                 	db	65	;'A'
  1563  00FFE0  54                 	db	84	;'T'
  1564  00FFE1  45                 	db	69	;'E'
  1565  00FFE2  30                 	db	48	;'0'
  1566  00FFE3  0D                 	db	13
  1567  00FFE4  0A                 	db	10
  1568  00FFE5  00                 	db	0
  1569  00FFE6                     STR_1:
  1570  00FFE6  41                 	db	65	;'A'
  1571  00FFE7  54                 	db	84	;'T'
  1572  00FFE8  0D                 	db	13
  1573  00FFE9  0A                 	db	10
  1574  00FFEA  00                 	db	0
  1575  00FFEB  41                 	db	65	;'A'
  1576  00FFEC  54                 	db	84	;'T'
  1577  00FFED  41                 	db	65	;'A'
  1578  00FFEE  0D                 	db	13
  1579  00FFEF  00                 	db	0
  1580  00FFF0                     STR_6:
  1581  00FFF0  41                 	db	65	;'A'
  1582  00FFF1  54                 	db	84	;'T'
  1583  00FFF2  48                 	db	72	;'H'
  1584  00FFF3  0D                 	db	13
  1585  00FFF4  00                 	db	0
  1586  00FFF5                     STR_24:
  1587  00FFF5  2E                 	db	46
  1588  00FFF6  00                 	db	0
  1589  0000                     
  1590                           ; #config settings
  1591  00FFF7  00                 	db	0	; dummy byte at the end
  1592  0000                     
  1593                           	psect	cinit
  1594  0022DE                     __pcinit:
  1595                           	opt stack 0
  1596  0022DE                     start_initialization:
  1597                           	opt stack 0
  1598  0022DE                     __initialization:
  1599                           	opt stack 0
  1600                           
  1601                           ; Initialize objects allocated to BANK5 (80 bytes)
  1602                           ; load TBLPTR registers with __pidataBANK5
  1603  0022DE  0EC4               	movlw	low __pidataBANK5
  1604  0022E0  6EF6               	movwf	tblptrl,c
  1605  0022E2  0E5C               	movlw	high __pidataBANK5
  1606  0022E4  6EF7               	movwf	tblptrh,c
  1607  0022E6  0E00               	movlw	low (__pidataBANK5 shr (0+16))
  1608  0022E8  6EF8               	movwf	tblptru,c
  1609  0022EA  EE05  F0A4         	lfsr	0,__pdataBANK5
  1610  0022EE  EE10 F050          	lfsr	1,80
  1611  0022F2                     copy_data0:
  1612  0022F2  0009               	tblrd		*+
  1613  0022F4  CFF5 FFEE          	movff	tablat,postinc0
  1614  0022F8  50E5               	movf	postdec1,w,c
  1615  0022FA  50E1               	movf	fsr1l,w,c
  1616  0022FC  E1FA               	bnz	copy_data0
  1617                           
  1618                           ; Initialize objects allocated to BANK3 (60 bytes)
  1619                           ; load TBLPTR registers with __pidataBANK3
  1620  0022FE  0E9A               	movlw	low __pidataBANK3
  1621  002300  6EF6               	movwf	tblptrl,c
  1622  002302  0E62               	movlw	high __pidataBANK3
  1623  002304  6EF7               	movwf	tblptrh,c
  1624  002306  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1625  002308  6EF8               	movwf	tblptru,c
  1626  00230A  EE03  F0C4         	lfsr	0,__pdataBANK3
  1627  00230E  EE10 F03C          	lfsr	1,60
  1628  002312                     copy_data1:
  1629  002312  0009               	tblrd		*+
  1630  002314  CFF5 FFEE          	movff	tablat,postinc0
  1631  002318  50E5               	movf	postdec1,w,c
  1632  00231A  50E1               	movf	fsr1l,w,c
  1633  00231C  E1FA               	bnz	copy_data1
  1634                           
  1635                           ; Initialize objects allocated to BANK2 (13 bytes)
  1636                           ; load TBLPTR registers with __pidataBANK2
  1637  00231E  0EA8               	movlw	low __pidataBANK2
  1638  002320  6EF6               	movwf	tblptrl,c
  1639  002322  0E6A               	movlw	high __pidataBANK2
  1640  002324  6EF7               	movwf	tblptrh,c
  1641  002326  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1642  002328  6EF8               	movwf	tblptru,c
  1643  00232A  EE02  F0F3         	lfsr	0,__pdataBANK2
  1644  00232E  EE10 F00D          	lfsr	1,13
  1645  002332                     copy_data2:
  1646  002332  0009               	tblrd		*+
  1647  002334  CFF5 FFEE          	movff	tablat,postinc0
  1648  002338  50E5               	movf	postdec1,w,c
  1649  00233A  50E1               	movf	fsr1l,w,c
  1650  00233C  E1FA               	bnz	copy_data2
  1651                           
  1652                           ; Initialize objects allocated to BANK1 (2 bytes)
  1653                           ; load TBLPTR registers with __pidataBANK1
  1654  00233E  0E3C               	movlw	low __pidataBANK1
  1655  002340  6EF6               	movwf	tblptrl,c
  1656  002342  0E6B               	movlw	high __pidataBANK1
  1657  002344  6EF7               	movwf	tblptrh,c
  1658  002346  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1659  002348  6EF8               	movwf	tblptru,c
  1660  00234A  0009               	tblrd		*+	;fetch initializer
  1661  00234C  CFF5 F1FE          	movff	tablat,__pdataBANK1
  1662  002350  0009               	tblrd		*+	;fetch initializer
  1663  002352  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
  1664                           
  1665                           ; Initialize objects allocated to BANK4 (10 bytes)
  1666                           ; load TBLPTR registers with __pidataBANK4
  1667  002356  0ECE               	movlw	low __pidataBANK4
  1668  002358  6EF6               	movwf	tblptrl,c
  1669  00235A  0E6A               	movlw	high __pidataBANK4
  1670  00235C  6EF7               	movwf	tblptrh,c
  1671  00235E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1672  002360  6EF8               	movwf	tblptru,c
  1673  002362  EE04  F0E0         	lfsr	0,__pdataBANK4
  1674  002366  EE10 F00A          	lfsr	1,10
  1675  00236A                     copy_data3:
  1676  00236A  0009               	tblrd		*+
  1677  00236C  CFF5 FFEE          	movff	tablat,postinc0
  1678  002370  50E5               	movf	postdec1,w,c
  1679  002372  50E1               	movf	fsr1l,w,c
  1680  002374  E1FA               	bnz	copy_data3
  1681                           
  1682                           ; Initialize objects allocated to COMRAM (2 bytes)
  1683                           ; load TBLPTR registers with __pidataCOMRAM
  1684  002376  0E3A               	movlw	low __pidataCOMRAM
  1685  002378  6EF6               	movwf	tblptrl,c
  1686  00237A  0E6B               	movlw	high __pidataCOMRAM
  1687  00237C  6EF7               	movwf	tblptrh,c
  1688  00237E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1689  002380  6EF8               	movwf	tblptru,c
  1690  002382  0009               	tblrd		*+	;fetch initializer
  1691  002384  CFF5 F040          	movff	tablat,__pdataCOMRAM
  1692  002388  0009               	tblrd		*+	;fetch initializer
  1693  00238A  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
  1694                           
  1695                           ; Clear objects allocated to BIGRAMl (800 bytes)
  1696  00238E  EE0A  F0C8         	lfsr	0,__pbssBIGRAMl
  1697  002392  EE13 F020          	lfsr	1,800
  1698  002396                     clear_0:
  1699  002396  6AEE               	clrf	postinc0,c
  1700  002398  50E5               	movf	postdec1,w,c
  1701  00239A  50E1               	movf	fsr1l,w,c
  1702  00239C  E1FC               	bnz	clear_0
  1703  00239E  50E2               	movf	fsr1h,w,c
  1704  0023A0  E1FA               	bnz	clear_0
  1705                           
  1706                           ; Clear objects allocated to BANK9 (200 bytes)
  1707  0023A2  EE09  F000         	lfsr	0,__pbssBANK9
  1708  0023A6  0EC8               	movlw	200
  1709  0023A8                     clear_1:
  1710  0023A8  6AEE               	clrf	postinc0,c
  1711  0023AA  06E8               	decf	wreg,f,c
  1712  0023AC  E1FD               	bnz	clear_1
  1713                           
  1714                           ; Clear objects allocated to BANK8 (200 bytes)
  1715  0023AE  EE08  F000         	lfsr	0,__pbssBANK8
  1716  0023B2  0EC8               	movlw	200
  1717  0023B4                     clear_2:
  1718  0023B4  6AEE               	clrf	postinc0,c
  1719  0023B6  06E8               	decf	wreg,f,c
  1720  0023B8  E1FD               	bnz	clear_2
  1721                           
  1722                           ; Clear objects allocated to BANK7 (246 bytes)
  1723  0023BA  EE07  F000         	lfsr	0,__pbssBANK7
  1724  0023BE  0EF6               	movlw	246
  1725  0023C0                     clear_3:
  1726  0023C0  6AEE               	clrf	postinc0,c
  1727  0023C2  06E8               	decf	wreg,f,c
  1728  0023C4  E1FD               	bnz	clear_3
  1729                           
  1730                           ; Clear objects allocated to BANK6 (220 bytes)
  1731  0023C6  EE06  F000         	lfsr	0,__pbssBANK6
  1732  0023CA  0EDC               	movlw	220
  1733  0023CC                     clear_4:
  1734  0023CC  6AEE               	clrf	postinc0,c
  1735  0023CE  06E8               	decf	wreg,f,c
  1736  0023D0  E1FD               	bnz	clear_4
  1737                           
  1738                           ; Clear objects allocated to BANK5 (164 bytes)
  1739  0023D2  EE05  F000         	lfsr	0,__pbssBANK5
  1740  0023D6  0EA4               	movlw	164
  1741  0023D8                     clear_5:
  1742  0023D8  6AEE               	clrf	postinc0,c
  1743  0023DA  06E8               	decf	wreg,f,c
  1744  0023DC  E1FD               	bnz	clear_5
  1745                           
  1746                           ; Clear objects allocated to BANK3 (196 bytes)
  1747  0023DE  EE03  F000         	lfsr	0,__pbssBANK3
  1748  0023E2  0EC4               	movlw	196
  1749  0023E4                     clear_6:
  1750  0023E4  6AEE               	clrf	postinc0,c
  1751  0023E6  06E8               	decf	wreg,f,c
  1752  0023E8  E1FD               	bnz	clear_6
  1753                           
  1754                           ; Clear objects allocated to BANK2 (43 bytes)
  1755  0023EA  EE02  F0C8         	lfsr	0,__pbssBANK2
  1756  0023EE  0E2B               	movlw	43
  1757  0023F0                     clear_7:
  1758  0023F0  6AEE               	clrf	postinc0,c
  1759  0023F2  06E8               	decf	wreg,f,c
  1760  0023F4  E1FD               	bnz	clear_7
  1761                           
  1762                           ; Clear objects allocated to BANK1 (53 bytes)
  1763  0023F6  EE01  F0C9         	lfsr	0,__pbssBANK1
  1764  0023FA  0E35               	movlw	53
  1765  0023FC                     clear_8:
  1766  0023FC  6AEE               	clrf	postinc0,c
  1767  0023FE  06E8               	decf	wreg,f,c
  1768  002400  E1FD               	bnz	clear_8
  1769                           
  1770                           ; Clear objects allocated to BANK4 (160 bytes)
  1771  002402  EE04  F040         	lfsr	0,__pbssBANK4
  1772  002406  0EA0               	movlw	160
  1773  002408                     clear_9:
  1774  002408  6AEE               	clrf	postinc0,c
  1775  00240A  06E8               	decf	wreg,f,c
  1776  00240C  E1FD               	bnz	clear_9
  1777                           
  1778                           ; Clear objects allocated to BANK0 (51 bytes)
  1779  00240E  EE00  F0B0         	lfsr	0,__pbssBANK0
  1780  002412  0E33               	movlw	51
  1781  002414                     clear_10:
  1782  002414  6AEE               	clrf	postinc0,c
  1783  002416  06E8               	decf	wreg,f,c
  1784  002418  E1FD               	bnz	clear_10
  1785                           
  1786                           ; Clear objects allocated to COMRAM (29 bytes)
  1787  00241A  EE00  F023         	lfsr	0,__pbssCOMRAM
  1788  00241E  0E1D               	movlw	29
  1789  002420                     clear_11:
  1790  002420  6AEE               	clrf	postinc0,c
  1791  002422  06E8               	decf	wreg,f,c
  1792  002424  E1FD               	bnz	clear_11
  1793  002426                     end_of_initialization:
  1794                           	opt stack 0
  1795  002426                     __end_of__initialization:
  1796                           	opt stack 0
  1797  002426  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1798  002428  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1799  00242A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1800  00242C  6EF8               	movwf	tblptru,c
  1801  00242E  0100               	movlb	0
  1802  002430  EF5B  F035         	goto	_main	;jump to C main() function
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           postdec1	equ	0xFE5
  1810                           fsr1h	equ	0xFE2
  1811                           fsr1l	equ	0xFE1
  1812                           
  1813                           	psect	bssCOMRAM
  1814  000023                     __pbssCOMRAM:
  1815                           	opt stack 0
  1816  000023                     Uart_MdmGsmGprsReadService@RxCounter:
  1817                           	opt stack 0
  1818  000023                     	ds	2
  1819  000025                     _USBDeferOUTDataStagePackets:
  1820                           	opt stack 0
  1821  000025                     	ds	1
  1822  000026                     _USBDeferINDataStagePackets:
  1823                           	opt stack 0
  1824  000026                     	ds	1
  1825  000027                     _USBStatusStageEnabledFlag2:
  1826                           	opt stack 0
  1827  000027                     	ds	1
  1828  000028                     _USBStatusStageEnabledFlag1:
  1829                           	opt stack 0
  1830  000028                     	ds	1
  1831  000029                     _USBStatusStageTimeoutCounter:
  1832                           	opt stack 0
  1833  000029                     	ds	1
  1834  00002A                     _ComChecCompleted:
  1835                           	opt stack 0
  1836  00002A                     	ds	1
  1837  00002B                     Uart_Uart1RxIsr@UartRxData:
  1838                           	opt stack 0
  1839  00002B                     	ds	1
  1840  00002C                     Uart_MdmGsmGprsReadService@RxState:
  1841                           	opt stack 0
  1842  00002C                     	ds	1
  1843  00002D                     MdmCntSm@MdmCntState:
  1844                           	opt stack 0
  1845  00002D                     	ds	1
  1846  00002E                     RiSm@MdmDrvState:
  1847                           	opt stack 0
  1848  00002E                     	ds	1
  1849  00002F                     _Mmd_RingIndicator:
  1850                           	opt stack 0
  1851  00002F                     	ds	1
  1852  000030                     I2c_ReadData@ReadStatus:
  1853                           	opt stack 0
  1854  000030                     	ds	1
  1855  000031                     I2c_ReadData@TentativeCounter:
  1856                           	opt stack 0
  1857  000031                     	ds	1
  1858  000032                     I2c_ReadData@DataCounter:
  1859                           	opt stack 0
  1860  000032                     	ds	1
  1861  000033                     I2c_ReadData@I2cReadState:
  1862                           	opt stack 0
  1863  000033                     	ds	1
  1864  000034                     I2c_WriteData@WriteStatus:
  1865                           	opt stack 0
  1866  000034                     	ds	1
  1867  000035                     I2c_WriteData@TentativeCounter:
  1868                           	opt stack 0
  1869  000035                     	ds	1
  1870  000036                     I2c_WriteData@I2cNextState:
  1871                           	opt stack 0
  1872  000036                     	ds	1
  1873  000037                     I2c_WriteData@I2cWriteState:
  1874                           	opt stack 0
  1875  000037                     	ds	1
  1876  000038                     _NewStringMdmTerminal:
  1877                           	opt stack 0
  1878  000038                     	ds	1
  1879  000039                     _NewMdmEvtParserRequest:
  1880                           	opt stack 0
  1881  000039                     	ds	1
  1882  00003A                     _NewStringReceived:
  1883                           	opt stack 0
  1884  00003A                     	ds	1
  1885  00003B                     _MdmResetRequest:
  1886                           	opt stack 0
  1887  00003B                     	ds	1
  1888  00003C                     _CallClosedEvent:
  1889                           	opt stack 0
  1890  00003C                     	ds	1
  1891  00003D                     _IncomingCallEvent:
  1892                           	opt stack 0
  1893  00003D                     	ds	1
  1894  00003E                     _NewSmsEvent:
  1895                           	opt stack 0
  1896  00003E                     	ds	1
  1897  00003F                     _ActivateRiDetection:
  1898                           	opt stack 0
  1899  00003F                     	ds	1
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           postdec1	equ	0xFE5
  1907                           fsr1h	equ	0xFE2
  1908                           fsr1l	equ	0xFE1
  1909                           
  1910                           	psect	dataCOMRAM
  1911  000040                     __pdataCOMRAM:
  1912                           	opt stack 0
  1913  000040                     findEmptySpot@currentPosition:
  1914                           	opt stack 0
  1915  000040                     	ds	1
  1916  000041                     isNumberInMemory@currentPosition:
  1917                           	opt stack 0
  1918  000041                     	ds	1
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           postdec1	equ	0xFE5
  1926                           fsr1h	equ	0xFE2
  1927                           fsr1l	equ	0xFE1
  1928                           
  1929                           	psect	bssBANK0
  1930  0000B0                     __pbssBANK0:
  1931                           	opt stack 0
  1932  0000B0                     _inPipes:
  1933                           	opt stack 0
  1934  0000B0                     	ds	6
  1935  0000B6                     _pBDTEntryIn:
  1936                           	opt stack 0
  1937  0000B6                     	ds	6
  1938  0000BC                     _CDCDataOutHandle:
  1939                           	opt stack 0
  1940  0000BC                     	ds	2
  1941  0000BE                     _pBDTEntryEP0OutNext:
  1942                           	opt stack 0
  1943  0000BE                     	ds	2
  1944  0000C0                     _pBDTEntryEP0OutCurrent:
  1945                           	opt stack 0
  1946  0000C0                     	ds	2
  1947  0000C2                     _RxLen:
  1948                           	opt stack 0
  1949  0000C2                     	ds	2
  1950  0000C4                     findEmptySpot@currentState:
  1951                           	opt stack 0
  1952  0000C4                     	ds	1
  1953  0000C5                     isNumberInMemory@currentState:
  1954                           	opt stack 0
  1955  0000C5                     	ds	1
  1956  0000C6                     Eeprom_Reset@memoryAddress:
  1957                           	opt stack 0
  1958  0000C6                     	ds	1
  1959  0000C7                     _cdc_tx_len:
  1960                           	opt stack 0
  1961  0000C7                     	ds	1
  1962  0000C8                     _cdc_trf_state:
  1963                           	opt stack 0
  1964  0000C8                     	ds	1
  1965  0000C9                     _cdc_rx_len:
  1966                           	opt stack 0
  1967  0000C9                     	ds	1
  1968  0000CA                     _USBDeferStatusStagePacket:
  1969                           	opt stack 0
  1970  0000CA                     	ds	1
  1971  0000CB                     _endpoint_number:
  1972                           	opt stack 0
  1973  0000CB                     	ds	1
  1974  0000CC                     _controlTransferState:
  1975                           	opt stack 0
  1976  0000CC                     	ds	1
  1977  0000CD                     _shortPacketStatus:
  1978                           	opt stack 0
  1979  0000CD                     	ds	1
  1980  0000CE                     _USBDeviceState:
  1981                           	opt stack 0
  1982  0000CE                     	ds	1
  1983  0000CF                     _I2cComSts:
  1984                           	opt stack 0
  1985  0000CF                     	ds	1
  1986  0000D0                     HttpGetMethod@GetMethodNextState:
  1987                           	opt stack 0
  1988  0000D0                     	ds	1
  1989  0000D1                     InitGprsNetwork@GprsNetInitNextState:
  1990                           	opt stack 0
  1991  0000D1                     	ds	1
  1992  0000D2                     _MdmStatus:
  1993                           	opt stack 0
  1994  0000D2                     	ds	1
  1995  0000D3                     _PhoneNumbLen:
  1996                           	opt stack 0
  1997  0000D3                     	ds	1
  1998  0000D4                     _SmsLen:
  1999                           	opt stack 0
  2000  0000D4                     	ds	1
  2001  0000D5                     _SystemState:
  2002                           	opt stack 0
  2003  0000D5                     	ds	1
  2004  0000D6                     _USTATcopy:
  2005                           	opt stack 0
  2006  0000D6                     	ds	1
  2007  0000D7                     _USBActiveConfiguration:
  2008                           	opt stack 0
  2009  0000D7                     	ds	1
  2010  0000D8                     _I2cReadDataEvt:
  2011                           	opt stack 0
  2012  0000D8                     	ds	1
  2013  0000D9                     _I2cWriteDataEvt:
  2014                           	opt stack 0
  2015  0000D9                     	ds	1
  2016  0000DA                     _GetMethod:
  2017                           	opt stack 0
  2018  0000DA                     	ds	1
  2019  0000DB                     _InitNetwork:
  2020                           	opt stack 0
  2021  0000DB                     	ds	1
  2022  0000DC                     _SmsTxtReady:
  2023                           	opt stack 0
  2024  0000DC                     	ds	1
  2025  0000DD                     _GetSmsText:
  2026                           	opt stack 0
  2027  0000DD                     	ds	1
  2028  0000DE                     _SmsEvent:
  2029                           	opt stack 0
  2030  0000DE                     	ds	1
  2031  0000DF                     _ClipEvent:
  2032                           	opt stack 0
  2033  0000DF                     	ds	1
  2034  0000E0                     _RingEvent:
  2035                           	opt stack 0
  2036  0000E0                     	ds	1
  2037  0000E1                     _SendSmsEvent:
  2038                           	opt stack 0
  2039  0000E1                     	ds	1
  2040  0000E2                     _MdmOnOffPulseRequest:
  2041                           	opt stack 0
  2042  0000E2                     	ds	1
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           postdec1	equ	0xFE5
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           
  2053                           	psect	bssBANK1
  2054  0001C9                     __pbssBANK1:
  2055                           	opt stack 0
  2056  0001C9                     _outPipes:
  2057                           	opt stack 0
  2058  0001C9                     	ds	8
  2059  0001D1                     _CDCDataInHandle:
  2060                           	opt stack 0
  2061  0001D1                     	ds	2
  2062  0001D3                     triggerCmdFsm@currentState:
  2063                           	opt stack 0
  2064  0001D3                     	ds	1
  2065  0001D4                     delCmdFsm@currentState:
  2066                           	opt stack 0
  2067  0001D4                     	ds	1
  2068  0001D5                     addCmdFsm@currentState:
  2069                           	opt stack 0
  2070  0001D5                     	ds	1
  2071  0001D6                     initFsm@currentState:
  2072                           	opt stack 0
  2073  0001D6                     	ds	1
  2074  0001D7                     initEeprom@currentState:
  2075                           	opt stack 0
  2076  0001D7                     	ds	1
  2077  0001D8                     initGprsModem@currentState:
  2078                           	opt stack 0
  2079  0001D8                     	ds	1
  2080  0001D9                     MyApp_Task@currentState:
  2081                           	opt stack 0
  2082  0001D9                     	ds	1
  2083  0001DA                     GsmGprsTerminal@SMS:
  2084                           	opt stack 0
  2085  0001DA                     	ds	1
  2086  0001DB                     	ds	1
  2087  0001DC                     _control_signal_bitmap:
  2088                           	opt stack 0
  2089  0001DC                     	ds	1
  2090  0001DD                     _cdc_mem_type:
  2091                           	opt stack 0
  2092  0001DD                     	ds	1
  2093  0001DE                     _USBTicksSinceSuspendEnd:
  2094                           	opt stack 0
  2095  0001DE                     	ds	1
  2096  0001DF                     _BothEP0OutUOWNsSet:
  2097                           	opt stack 0
  2098  0001DF                     	ds	1
  2099  0001E0                     _USBBusIsSuspended:
  2100                           	opt stack 0
  2101  0001E0                     	ds	1
  2102  0001E1                     _RemoteWakeup:
  2103                           	opt stack 0
  2104  0001E1                     	ds	1
  2105  0001E2                     I2cSlv_QueryI2cData@Ret:
  2106                           	opt stack 0
  2107  0001E2                     	ds	1
  2108  0001E3                     I2cSlv_QueryI2cData@I2cOpState:
  2109                           	opt stack 0
  2110  0001E3                     	ds	1
  2111  0001E4                     I2cSendMsgSm@I2cComState:
  2112                           	opt stack 0
  2113  0001E4                     	ds	1
  2114  0001E5                     _I2cBusStatus:
  2115                           	opt stack 0
  2116  0001E5                     	ds	1
  2117  0001E6                     HttpGetMethod@GetMOutSts:
  2118                           	opt stack 0
  2119  0001E6                     	ds	1
  2120  0001E7                     HttpGetMethod@GetMethodState:
  2121                           	opt stack 0
  2122  0001E7                     	ds	1
  2123  0001E8                     InitGprsNetwork@GprsNetInitState:
  2124                           	opt stack 0
  2125  0001E8                     	ds	1
  2126  0001E9                     _PostMethod:
  2127                           	opt stack 0
  2128  0001E9                     	ds	1
  2129  0001EA                     _HttpGetMethodSts:
  2130                           	opt stack 0
  2131  0001EA                     	ds	1
  2132  0001EB                     _GprsNetworkSts:
  2133                           	opt stack 0
  2134  0001EB                     	ds	1
  2135  0001EC                     _ApnLenLocal:
  2136                           	opt stack 0
  2137  0001EC                     	ds	1
  2138  0001ED                     SendSmsSm@SendSms_NextState:
  2139                           	opt stack 0
  2140  0001ED                     	ds	1
  2141  0001EE                     SendSmsSm@SendSms_State:
  2142                           	opt stack 0
  2143  0001EE                     	ds	1
  2144  0001EF                     GetSmsSm@GetSmsState:
  2145                           	opt stack 0
  2146  0001EF                     	ds	1
  2147  0001F0                     ConfigureModem@NextState:
  2148                           	opt stack 0
  2149  0001F0                     	ds	1
  2150  0001F1                     ConfigureModem@MdmConfigState:
  2151                           	opt stack 0
  2152  0001F1                     	ds	1
  2153  0001F2                     TurnOnModem@TurnOnMdmState:
  2154                           	opt stack 0
  2155  0001F2                     	ds	1
  2156  0001F3                     CheckModem@CheckMdmSts:
  2157                           	opt stack 0
  2158  0001F3                     	ds	1
  2159  0001F4                     _AlarmEvent:
  2160                           	opt stack 0
  2161  0001F4                     	ds	1
  2162  0001F5                     _Led3OutSts:
  2163                           	opt stack 0
  2164  0001F5                     	ds	1
  2165  0001F6                     _Led3Sts:
  2166                           	opt stack 0
  2167  0001F6                     	ds	1
  2168  0001F7                     _Led2OutSts:
  2169                           	opt stack 0
  2170  0001F7                     	ds	1
  2171  0001F8                     _Led2Sts:
  2172                           	opt stack 0
  2173  0001F8                     	ds	1
  2174  0001F9                     _Led1OutSts:
  2175                           	opt stack 0
  2176  0001F9                     	ds	1
  2177  0001FA                     _Led1Sts:
  2178                           	opt stack 0
  2179  0001FA                     	ds	1
  2180  0001FB                     _ReadAddress:
  2181                           	opt stack 0
  2182  0001FB                     	ds	1
  2183  0001FC                     I2cDummyTx@DummyBuffer:
  2184                           	opt stack 0
  2185  0001FC                     	ds	1
  2186  0001FD                     _MdmStsReady:
  2187                           	opt stack 0
  2188  0001FD                     	ds	1
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1h	equ	0xFE2
  2197                           fsr1l	equ	0xFE1
  2198                           
  2199                           	psect	dataBANK1
  2200  0001FE                     __pdataBANK1:
  2201                           	opt stack 0
  2202  0001FE                     _isMemoryEmpty:
  2203                           	opt stack 0
  2204  0001FE                     	ds	1
  2205  0001FF                     InitGprsNetwork@GprsInitSts:
  2206                           	opt stack 0
  2207  0001FF                     	ds	1
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	bssBANK2
  2219  0002C8                     __pbssBANK2:
  2220                           	opt stack 0
  2221  0002C8                     _pCDCDst:
  2222                           	opt stack 0
  2223  0002C8                     	ds	3
  2224  0002CB                     _pCDCSrc:
  2225                           	opt stack 0
  2226  0002CB                     	ds	3
  2227  0002CE                     _ep_data_out:
  2228                           	opt stack 0
  2229  0002CE                     	ds	3
  2230  0002D1                     _ep_data_in:
  2231                           	opt stack 0
  2232  0002D1                     	ds	3
  2233  0002D4                     _pDst:
  2234                           	opt stack 0
  2235  0002D4                     	ds	2
  2236  0002D6                     ConfigureModem@DelayCounter:
  2237                           	opt stack 0
  2238  0002D6                     	ds	2
  2239  0002D8                     ConfigureModem@DelayValueMs:
  2240                           	opt stack 0
  2241  0002D8                     	ds	2
  2242  0002DA                     TurnOnModem@Counter:
  2243                           	opt stack 0
  2244  0002DA                     	ds	2
  2245  0002DC                     UpdateSchFlag@InterruptCounter:
  2246                           	opt stack 0
  2247  0002DC                     	ds	2
  2248  0002DE                     MdmCntSm@Counter:
  2249                           	opt stack 0
  2250  0002DE                     	ds	2
  2251  0002E0                     RiSm@Counter:
  2252                           	opt stack 0
  2253  0002E0                     	ds	2
  2254  0002E2                     _ExtInt1IsrCallback:
  2255                           	opt stack 0
  2256  0002E2                     	ds	2
  2257  0002E4                     _ExtInt0IsrCallback:
  2258                           	opt stack 0
  2259  0002E4                     	ds	2
  2260  0002E6                     _RtccIsrCallback:
  2261                           	opt stack 0
  2262  0002E6                     	ds	2
  2263  0002E8                     _Tmr4IsrCallback:
  2264                           	opt stack 0
  2265  0002E8                     	ds	2
  2266  0002EA                     _Tmr2IsrCallback:
  2267                           	opt stack 0
  2268  0002EA                     	ds	2
  2269  0002EC                     Term_MainSm@TermMainSmState:
  2270                           	opt stack 0
  2271  0002EC                     	ds	1
  2272  0002ED                     Terminal@FormatOption:
  2273                           	opt stack 0
  2274  0002ED                     	ds	1
  2275  0002EE                     Terminal@SlaveAddr:
  2276                           	opt stack 0
  2277  0002EE                     	ds	1
  2278  0002EF                     Terminal@PackageLen:
  2279                           	opt stack 0
  2280  0002EF                     	ds	1
  2281  0002F0                     Terminal@TermState:
  2282                           	opt stack 0
  2283  0002F0                     	ds	1
  2284  0002F1                     _USBAlternateInterface:
  2285                           	opt stack 0
  2286  0002F1                     	ds	2
  2287                           tblptru	equ	0xFF8
  2288                           tblptrh	equ	0xFF7
  2289                           tblptrl	equ	0xFF6
  2290                           tablat	equ	0xFF5
  2291                           postinc0	equ	0xFEE
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           
  2297                           	psect	dataBANK2
  2298  0002F3                     __pdataBANK2:
  2299                           	opt stack 0
  2300  0002F3                     Terminal@EchoOption:
  2301                           	opt stack 0
  2302  0002F3                     	ds	1
  2303  0002F4                     _MainSystemTimebaseFlag:
  2304                           	opt stack 0
  2305  0002F4                     	ds	1
  2306  0002F5                     _ConnTimeout:
  2307                           	opt stack 0
  2308  0002F5                     	ds	11
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           
  2319                           	psect	bssBANK3
  2320  000300                     __pbssBANK3:
  2321                           	opt stack 0
  2322  000300                     _Rtcm_RtccAlarm:
  2323                           	opt stack 0
  2324  000300                     	ds	6
  2325  000306                     _pBDTEntryOut:
  2326                           	opt stack 0
  2327  000306                     	ds	6
  2328  00030C                     _BaudRateGen:
  2329                           	opt stack 0
  2330  00030C                     	ds	4
  2331  000310                     _USB1msTickCount:
  2332                           	opt stack 0
  2333  000310                     	ds	4
  2334  000314                     _OsTmr_OsTickCounter:
  2335                           	opt stack 0
  2336  000314                     	ds	4
  2337  000318                     _UsbMasterPhoneNumberLen:
  2338                           	opt stack 0
  2339  000318                     	ds	2
  2340  00031A                     _ApnLocal:
  2341                           	opt stack 0
  2342  00031A                     	ds	2
  2343  00031C                     _UartConfig:
  2344                           	opt stack 0
  2345  00031C                     	ds	21
  2346  000331                     _receivedNumber:
  2347                           	opt stack 0
  2348  000331                     	ds	13
  2349  00033E                     _callerNumber:
  2350                           	opt stack 0
  2351  00033E                     	ds	13
  2352  00034B                     I2cSlv_QueryI2cData@TimeoutTimer:
  2353                           	opt stack 0
  2354  00034B                     	ds	11
  2355  000356                     _I2cConfig:
  2356                           	opt stack 0
  2357  000356                     	ds	10
  2358  000360                     _Led3Blink:
  2359                           	opt stack 0
  2360  000360                     	ds	9
  2361  000369                     _Led2Blink:
  2362                           	opt stack 0
  2363  000369                     	ds	9
  2364  000372                     _Led1Blink:
  2365                           	opt stack 0
  2366  000372                     	ds	9
  2367  00037B                     _dummy_encapsulated_cmd_response:
  2368                           	opt stack 0
  2369  00037B                     	ds	8
  2370  000383                     _line_coding:
  2371                           	opt stack 0
  2372  000383                     	ds	7
  2373  00038A                     _Led3Pulse:
  2374                           	opt stack 0
  2375  00038A                     	ds	6
  2376  000390                     _Led2Pulse:
  2377                           	opt stack 0
  2378  000390                     	ds	6
  2379  000396                     _Led1Pulse:
  2380                           	opt stack 0
  2381  000396                     	ds	6
  2382  00039C                     _I2cRxPacket:
  2383                           	opt stack 0
  2384  00039C                     	ds	6
  2385  0003A2                     _I2cTxPacket:
  2386                           	opt stack 0
  2387  0003A2                     	ds	5
  2388  0003A7                     _HttpGetDataLocal:
  2389                           	opt stack 0
  2390  0003A7                     	ds	5
  2391  0003AC                     _memoryPreamble:
  2392                           	opt stack 0
  2393  0003AC                     	ds	4
  2394  0003B0                     Terminal@Addr:
  2395                           	opt stack 0
  2396  0003B0                     	ds	4
  2397  0003B4                     Terminal@Len:
  2398                           	opt stack 0
  2399  0003B4                     	ds	4
  2400  0003B8                     _AlCfg:
  2401                           	opt stack 0
  2402  0003B8                     	ds	4
  2403  0003BC                     _RtcConfig:
  2404                           	opt stack 0
  2405  0003BC                     	ds	4
  2406  0003C0                     initGprsModem@modemCounter:
  2407                           	opt stack 0
  2408  0003C0                     	ds	2
  2409  0003C2                     _setupCallTicks:
  2410                           	opt stack 0
  2411  0003C2                     	ds	2
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1h	equ	0xFE2
  2420                           fsr1l	equ	0xFE1
  2421                           
  2422                           	psect	dataBANK3
  2423  0003C4                     __pdataBANK3:
  2424                           	opt stack 0
  2425  0003C4                     ModemEvtParser@F9114:
  2426                           	opt stack 0
  2427  0003C4                     	ds	5
  2428  0003C9                     ModemEvtParser@F9112:
  2429                           	opt stack 0
  2430  0003C9                     	ds	5
  2431  0003CE                     ModemEvtParser@F9110:
  2432                           	opt stack 0
  2433  0003CE                     	ds	4
  2434  0003D2                     triggerRelay@F9012:
  2435                           	opt stack 0
  2436  0003D2                     	ds	2
  2437  0003D4                     Term_MainSm@TermDelay:
  2438                           	opt stack 0
  2439  0003D4                     	ds	11
  2440  0003DF                     _ConnWait:
  2441                           	opt stack 0
  2442  0003DF                     	ds	11
  2443  0003EA                     SendSmsSm@SwTimer:
  2444                           	opt stack 0
  2445  0003EA                     	ds	11
  2446  0003F5                     CheckModem@Timeout:
  2447                           	opt stack 0
  2448  0003F5                     	ds	11
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           postdec1	equ	0xFE5
  2456                           fsr1h	equ	0xFE2
  2457                           fsr1l	equ	0xFE1
  2458                           
  2459                           	psect	bssBANK4
  2460  000440                     __pbssBANK4:
  2461                           	opt stack 0
  2462  000440                     _UsbMasterPhoneNumber:
  2463                           	opt stack 0
  2464  000440                     	ds	15
  2465  00044F                     _cdc_notice:
  2466                           	opt stack 0
  2467  00044F                     	ds	10
  2468  000459                     _Rtcm_SystemDate:
  2469                           	opt stack 0
  2470  000459                     	ds	8
  2471  000461                     Term_MainSm@Data:
  2472                           	opt stack 0
  2473  000461                     	ds	50
  2474  000493                     _smsText:
  2475                           	opt stack 0
  2476  000493                     	ds	20
  2477  0004A7                     _PhoneNumber:
  2478                           	opt stack 0
  2479  0004A7                     	ds	20
  2480  0004BB                     _EepromBuffer:
  2481                           	opt stack 0
  2482  0004BB                     	ds	15
  2483  0004CA                     Terminal@SwTimer:
  2484                           	opt stack 0
  2485  0004CA                     	ds	11
  2486  0004D5                     I2cSlv_QueryI2cData@QueryTimer:
  2487                           	opt stack 0
  2488  0004D5                     	ds	11
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           postdec1	equ	0xFE5
  2496                           fsr1h	equ	0xFE2
  2497                           fsr1l	equ	0xFE1
  2498                           
  2499                           	psect	dataBANK4
  2500  0004E0                     __pdataBANK4:
  2501                           	opt stack 0
  2502  0004E0                     ModemEvtParser@F9116:
  2503                           	opt stack 0
  2504  0004E0                     	ds	10
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           postinc0	equ	0xFEE
  2510                           wreg	equ	0xFE8
  2511                           postdec1	equ	0xFE5
  2512                           fsr1h	equ	0xFE2
  2513                           fsr1l	equ	0xFE1
  2514                           
  2515                           	psect	bssBANK5
  2516  000500                     __pbssBANK5:
  2517                           	opt stack 0
  2518  000500                     _cdc_data_rx:
  2519                           	opt stack 0
  2520  000500                     	ds	64
  2521  000540                     Terminal@TermRxBuffer:
  2522                           	opt stack 0
  2523  000540                     	ds	50
  2524  000572                     _MessageText:
  2525                           	opt stack 0
  2526  000572                     	ds	50
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           
  2537                           	psect	dataBANK5
  2538  0005A4                     __pdataBANK5:
  2539                           	opt stack 0
  2540  0005A4                     _TaskTable:
  2541                           	opt stack 0
  2542  0005A4                     	ds	80
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           postdec1	equ	0xFE5
  2550                           fsr1h	equ	0xFE2
  2551                           fsr1l	equ	0xFE1
  2552                           
  2553                           	psect	bssBANK6
  2554  000600                     __pbssBANK6:
  2555                           	opt stack 0
  2556  000600                     _OsAlarms:
  2557                           	opt stack 0
  2558  000600                     	ds	220
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           postinc0	equ	0xFEE
  2564                           wreg	equ	0xFE8
  2565                           postdec1	equ	0xFE5
  2566                           fsr1h	equ	0xFE2
  2567                           fsr1l	equ	0xFE1
  2568                           
  2569                           	psect	bssBANK7
  2570  000700                     __pbssBANK7:
  2571                           	opt stack 0
  2572  000700                     _Mdm_SmsRx:
  2573                           	opt stack 0
  2574  000700                     	ds	102
  2575  000766                     Terminal@Payload:
  2576                           	opt stack 0
  2577  000766                     	ds	80
  2578  0007B6                     _cdc_data_tx:
  2579                           	opt stack 0
  2580  0007B6                     	ds	64
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           postdec1	equ	0xFE5
  2588                           fsr1h	equ	0xFE2
  2589                           fsr1l	equ	0xFE1
  2590                           
  2591                           	psect	bssBANK8
  2592  000800                     __pbssBANK8:
  2593                           	opt stack 0
  2594  000800                     GsmGprsTerminal@UsbBuffer:
  2595                           	opt stack 0
  2596  000800                     	ds	200
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           postinc0	equ	0xFEE
  2602                           wreg	equ	0xFE8
  2603                           postdec1	equ	0xFE5
  2604                           fsr1h	equ	0xFE2
  2605                           fsr1l	equ	0xFE1
  2606                           
  2607                           	psect	bssBANK9
  2608  000900                     __pbssBANK9:
  2609                           	opt stack 0
  2610  000900                     GsmGprsTerminal@UartBuffer:
  2611                           	opt stack 0
  2612  000900                     	ds	200
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           postinc0	equ	0xFEE
  2618                           wreg	equ	0xFE8
  2619                           postdec1	equ	0xFE5
  2620                           fsr1h	equ	0xFE2
  2621                           fsr1l	equ	0xFE1
  2622                           
  2623                           	psect	bssBIGRAMl
  2624  000AC8                     __pbssBIGRAMl:
  2625                           	opt stack 0
  2626  000AC8                     Uart_MdmGsmGprsReadService@LocalRxBuffer:
  2627                           	opt stack 0
  2628  000AC8                     	ds	400
  2629  000C58                     _RxBuffer:
  2630                           	opt stack 0
  2631  000C58                     	ds	400
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           postdec1	equ	0xFE5
  2639                           fsr1h	equ	0xFE2
  2640                           fsr1l	equ	0xFE1
  2641                           
  2642                           	psect	cstackBANK10
  2643  000A00                     __pcstackBANK10:
  2644                           	opt stack 0
  2645  000A00                     Terminal@UsbRxBuffer:
  2646                           	opt stack 0
  2647                           
  2648                           ; 200 bytes @ 0x0
  2649  000A00                     	ds	200
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           postinc0	equ	0xFEE
  2655                           wreg	equ	0xFE8
  2656                           postdec1	equ	0xFE5
  2657                           fsr1h	equ	0xFE2
  2658                           fsr1l	equ	0xFE1
  2659                           
  2660                           	psect	cstackBANK4
  2661  0004EA                     __pcstackBANK4:
  2662                           	opt stack 0
  2663  0004EA                     ??_InitializeTasks:
  2664  0004EA                     ??_ScheduleTasks:
  2665                           
  2666                           ; 1 bytes @ 0x0
  2667  0004EA                     	ds	2
  2668  0004EC                     InitializeTasks@ActiveTaskIndex:
  2669                           	opt stack 0
  2670                           
  2671                           ; 1 bytes @ 0x2
  2672  0004EC                     	ds	2
  2673  0004EE                     ScheduleTasks@ActiveTaskIndex:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x4
  2677  0004EE                     	ds	1
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           postinc0	equ	0xFEE
  2683                           wreg	equ	0xFE8
  2684                           postdec1	equ	0xFE5
  2685                           fsr1h	equ	0xFE2
  2686                           fsr1l	equ	0xFE1
  2687                           
  2688                           	psect	cstackBANK2
  2689  000200                     __pcstackBANK2:
  2690                           	opt stack 0
  2691  000200                     Terminal@UsbTxBuffer:
  2692                           	opt stack 0
  2693                           
  2694                           ; 200 bytes @ 0x0
  2695  000200                     	ds	200
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           postinc0	equ	0xFEE
  2701                           wreg	equ	0xFE8
  2702                           postdec1	equ	0xFE5
  2703                           fsr1h	equ	0xFE2
  2704                           fsr1l	equ	0xFE1
  2705                           
  2706                           	psect	cstackBANK1
  2707  000100                     __pcstackBANK1:
  2708                           	opt stack 0
  2709  000100                     initEeprom@addressToRead:
  2710                           	opt stack 0
  2711  000100                     isNumberInMemory@phoneNumber:
  2712                           	opt stack 0
  2713  000100                     isMasterNumber@phoneNumber:
  2714                           	opt stack 0
  2715  000100                     findEmptySpot@positionInMemory:
  2716                           	opt stack 0
  2717  000100                     SendSmsSm@UartMessage:
  2718                           	opt stack 0
  2719  000100                     InitGprsNetwork@UartMessage:
  2720                           	opt stack 0
  2721  000100                     Terminal@TermTxBuffer:
  2722                           	opt stack 0
  2723  000100                     HttpGetMethod@UartMessage:
  2724                           	opt stack 0
  2725                           
  2726                           ; 200 bytes @ 0x0
  2727  000100                     	ds	1
  2728  000101                     initEeprom@memoryOpResult:
  2729                           	opt stack 0
  2730                           
  2731                           ; 1 bytes @ 0x1
  2732  000101                     	ds	1
  2733  000102                     initEeprom@isInitialized:
  2734                           	opt stack 0
  2735  000102                     isNumberInMemory@positionInMemory:
  2736                           	opt stack 0
  2737  000102                     isMasterNumber@readBuffer:
  2738                           	opt stack 0
  2739  000102                     findEmptySpot@readBuffer:
  2740                           	opt stack 0
  2741                           
  2742                           ; 13 bytes @ 0x2
  2743  000102                     	ds	1
  2744  000103                     initFsm@isInitialized:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x3
  2748  000103                     	ds	1
  2749  000104                     isNumberInMemory@readBuffer:
  2750                           	opt stack 0
  2751                           
  2752                           ; 13 bytes @ 0x4
  2753  000104                     	ds	11
  2754  00010F                     isMasterNumber@memoryOpResult:
  2755                           	opt stack 0
  2756  00010F                     findEmptySpot@memoryOpResult:
  2757                           	opt stack 0
  2758                           
  2759                           ; 1 bytes @ 0xF
  2760  00010F                     	ds	1
  2761  000110                     delCmdFsm@receivedNumber:
  2762                           	opt stack 0
  2763                           
  2764                           ; 2 bytes @ 0x10
  2765  000110                     	ds	1
  2766  000111                     isNumberInMemory@memoryOpResult:
  2767                           	opt stack 0
  2768                           
  2769                           ; 1 bytes @ 0x11
  2770  000111                     	ds	1
  2771  000112                     addCmdFsm@receivedNumber:
  2772                           	opt stack 0
  2773  000112                     delCmdFsm@smsText:
  2774                           	opt stack 0
  2775                           
  2776                           ; 2 bytes @ 0x12
  2777  000112                     	ds	2
  2778  000114                     addCmdFsm@smsText:
  2779                           	opt stack 0
  2780  000114                     delCmdFsm@emptyNumber:
  2781                           	opt stack 0
  2782                           
  2783                           ; 13 bytes @ 0x14
  2784  000114                     	ds	2
  2785  000116                     addCmdFsm@isComplete:
  2786                           	opt stack 0
  2787                           
  2788                           ; 1 bytes @ 0x16
  2789  000116                     	ds	1
  2790  000117                     addCmdFsm@masterOpResult:
  2791                           	opt stack 0
  2792                           
  2793                           ; 1 bytes @ 0x17
  2794  000117                     	ds	1
  2795  000118                     addCmdFsm@numberInMemory:
  2796                           	opt stack 0
  2797                           
  2798                           ; 1 bytes @ 0x18
  2799  000118                     	ds	1
  2800  000119                     addCmdFsm@searchNumber:
  2801                           	opt stack 0
  2802                           
  2803                           ; 1 bytes @ 0x19
  2804  000119                     	ds	8
  2805  000121                     delCmdFsm@isComplete:
  2806                           	opt stack 0
  2807                           
  2808                           ; 1 bytes @ 0x21
  2809  000121                     	ds	1
  2810  000122                     delCmdFsm@numberInMemory:
  2811                           	opt stack 0
  2812                           
  2813                           ; 1 bytes @ 0x22
  2814  000122                     	ds	16
  2815  000132                     InitGprsNetwork@Index:
  2816                           	opt stack 0
  2817  000132                     Term_MainSm@FwkMajorStr:
  2818                           	opt stack 0
  2819                           
  2820                           ; 4 bytes @ 0x32
  2821  000132                     	ds	4
  2822  000136                     Term_MainSm@FwkMinorStr:
  2823                           	opt stack 0
  2824                           
  2825                           ; 4 bytes @ 0x36
  2826  000136                     	ds	4
  2827  00013A                     Term_MainSm@FwkBuildStr:
  2828                           	opt stack 0
  2829                           
  2830                           ; 4 bytes @ 0x3A
  2831  00013A                     	ds	142
  2832  0001C8                     HttpGetMethod@Index:
  2833                           	opt stack 0
  2834                           
  2835                           ; 1 bytes @ 0xC8
  2836  0001C8                     	ds	1
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           postdec1	equ	0xFE5
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           
  2847                           	psect	cstackBANK0
  2848  000060                     __pcstackBANK0:
  2849                           	opt stack 0
  2850  000060                     
  2851                           ; 1 bytes @ 0x0
  2852  000060                     	ds	8
  2853  000068                     ??_LowPriorityIsr:
  2854                           
  2855                           ; 1 bytes @ 0x8
  2856  000068                     	ds	21
  2857  00007D                     ??_isdigit:
  2858  00007D                     ??_isspace:
  2859  00007D                     ??_isupper:
  2860  00007D                     ??_Rtcc_GetRtccValue:
  2861  00007D                     ??_UartTxBufferStatus:
  2862  00007D                     ??_USBStdGetDscHandler:
  2863  00007D                     ??_USBStdGetStatusHandler:
  2864  00007D                     ?_GetLastInteractionNumber:
  2865                           	opt stack 0
  2866  00007D                     ?_USBTransferOnePacket:
  2867                           	opt stack 0
  2868  00007D                     ?_strlen:
  2869                           	opt stack 0
  2870  00007D                     ?_sprintf:
  2871                           	opt stack 0
  2872  00007D                     ?_initPreamble:
  2873                           	opt stack 0
  2874  00007D                     ?___wmul:
  2875                           	opt stack 0
  2876  00007D                     ?___awdiv:
  2877                           	opt stack 0
  2878  00007D                     ?___awmod:
  2879                           	opt stack 0
  2880  00007D                     ?___lwmod:
  2881                           	opt stack 0
  2882  00007D                     ?_GetOsTickCounter:
  2883                           	opt stack 0
  2884  00007D                     ?___lmul:
  2885                           	opt stack 0
  2886  00007D                     Irq_InitIntController@GlobalInt_HighPInt:
  2887                           	opt stack 0
  2888  00007D                     SetAckStatus@AckSts:
  2889                           	opt stack 0
  2890  00007D                     WriteByte@Byte:
  2891                           	opt stack 0
  2892  00007D                     ReadByte@Byte:
  2893                           	opt stack 0
  2894  00007D                     Mcu_SetWdgSts@WdgSts:
  2895                           	opt stack 0
  2896  00007D                     RtccIrqInit@Priority:
  2897                           	opt stack 0
  2898  00007D                     Rtcc_SetRtcStatus@Status:
  2899                           	opt stack 0
  2900  00007D                     TmrBInit@Prescaler:
  2901                           	opt stack 0
  2902  00007D                     Tmr_TmrBIrqSet@Priority:
  2903                           	opt stack 0
  2904  00007D                     Tmr_StartTmr@TmrNumb:
  2905                           	opt stack 0
  2906  00007D                     UartWriteByte@ByteToWrite:
  2907                           	opt stack 0
  2908  00007D                     USBTransferOnePacket@dir:
  2909                           	opt stack 0
  2910  00007D                     USBConfigureEndpoint@direction:
  2911                           	opt stack 0
  2912  00007D                     USBCtrlTrfTxService@byteToSend:
  2913                           	opt stack 0
  2914  00007D                     USBCtrlTrfRxService@i:
  2915                           	opt stack 0
  2916  00007D                     Led_SetLedStatus@LedSts:
  2917                           	opt stack 0
  2918  00007D                     toupper@c:
  2919                           	opt stack 0
  2920  00007D                     tolower@c:
  2921                           	opt stack 0
  2922  00007D                     Mcu_StartSystemPll@PllStartupCounter:
  2923                           	opt stack 0
  2924  00007D                     Rtcc_AlarmConfig@AlarmConfig:
  2925                           	opt stack 0
  2926  00007D                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2927                           	opt stack 0
  2928  00007D                     Uart_ClearRxBuffer@Index:
  2929                           	opt stack 0
  2930  00007D                     GenerateEvt@Event:
  2931                           	opt stack 0
  2932  00007D                     ReceiveEvt@Event:
  2933                           	opt stack 0
  2934  00007D                     Led_SetLedBlinkTime@OnTimeMs:
  2935                           	opt stack 0
  2936  00007D                     StringCompare@String1:
  2937                           	opt stack 0
  2938  00007D                     ClearBuffer@Buffer:
  2939                           	opt stack 0
  2940  00007D                     isNumberValid@phoneNumber:
  2941                           	opt stack 0
  2942  00007D                     sprintf@sp:
  2943                           	opt stack 0
  2944  00007D                     ___wmul@multiplier:
  2945                           	opt stack 0
  2946  00007D                     ___awdiv@dividend:
  2947                           	opt stack 0
  2948  00007D                     ___awmod@dividend:
  2949                           	opt stack 0
  2950  00007D                     ___lwmod@dividend:
  2951                           	opt stack 0
  2952  00007D                     memcpy@d1:
  2953                           	opt stack 0
  2954  00007D                     memset@p1:
  2955                           	opt stack 0
  2956  00007D                     strcat@to:
  2957                           	opt stack 0
  2958  00007D                     strcpy@to:
  2959                           	opt stack 0
  2960  00007D                     strlen@s:
  2961                           	opt stack 0
  2962  00007D                     ___lmul@multiplier:
  2963                           	opt stack 0
  2964                           
  2965                           ; 4 bytes @ 0x1D
  2966  00007D                     	ds	1
  2967  00007E                     ??_USBConfigureEndpoint:
  2968  00007E                     Irq_InitIntController@PerInt_LowPInt:
  2969                           	opt stack 0
  2970  00007E                     Rtcc_GetRtccValue@RtccPtrVal:
  2971                           	opt stack 0
  2972  00007E                     TmrBInit@Postscaler:
  2973                           	opt stack 0
  2974  00007E                     Tmr_TmrBIrqSet@TmrIrqSts:
  2975                           	opt stack 0
  2976  00007E                     UartWriteByte@Module:
  2977                           	opt stack 0
  2978  00007E                     UartTxBufferStatus@Module:
  2979                           	opt stack 0
  2980  00007E                     USBCtrlTrfRxService@byteToRead:
  2981                           	opt stack 0
  2982  00007E                     USBCtrlTrfInHandler@lastDTS:
  2983                           	opt stack 0
  2984  00007E                     Led_SetLedStatus@Led:
  2985                           	opt stack 0
  2986  00007E                     _isdigit$6418:
  2987                           	opt stack 0
  2988  00007E                     _isspace$6687:
  2989                           	opt stack 0
  2990  00007E                     _isupper$6690:
  2991                           	opt stack 0
  2992  00007E                     I2c_WriteData@WritePacket:
  2993                           	opt stack 0
  2994  00007E                     Rtcc_RtcConfig@RtcConfig:
  2995                           	opt stack 0
  2996  00007E                     USBTransferOnePacket@data:
  2997                           	opt stack 0
  2998  00007E                     USBStdGetStatusHandler@p:
  2999                           	opt stack 0
  3000                           
  3001                           ; 2 bytes @ 0x1E
  3002  00007E                     	ds	1
  3003  00007F                     ??_strlen:
  3004  00007F                     ??_Rtcc_AlarmConfig:
  3005  00007F                     ??_TmrBInit:
  3006  00007F                     Irq_InitIntController@IntPriorityEn:
  3007                           	opt stack 0
  3008  00007F                     Rtcc_GetRtccValue@RetValue:
  3009                           	opt stack 0
  3010  00007F                     Tmr_TmrBIrqSet@TmrNumb:
  3011                           	opt stack 0
  3012  00007F                     UartTxBufferStatus@TxBufferStatus:
  3013                           	opt stack 0
  3014  00007F                     GenerateEvt@EventStatus:
  3015                           	opt stack 0
  3016  00007F                     isdigit@c:
  3017                           	opt stack 0
  3018  00007F                     isspace@c:
  3019                           	opt stack 0
  3020  00007F                     isupper@c:
  3021                           	opt stack 0
  3022  00007F                     Led_SetLedBlinkTime@OffTimeMs:
  3023                           	opt stack 0
  3024  00007F                     StringCompare@String2:
  3025                           	opt stack 0
  3026  00007F                     ClearBuffer@Len:
  3027                           	opt stack 0
  3028  00007F                     sprintf@f:
  3029                           	opt stack 0
  3030  00007F                     ___wmul@multiplicand:
  3031                           	opt stack 0
  3032  00007F                     ___awdiv@divisor:
  3033                           	opt stack 0
  3034  00007F                     ___awmod@divisor:
  3035                           	opt stack 0
  3036  00007F                     ___lwmod@divisor:
  3037                           	opt stack 0
  3038  00007F                     memcpy@s1:
  3039                           	opt stack 0
  3040  00007F                     memset@c:
  3041                           	opt stack 0
  3042  00007F                     strcat@from:
  3043                           	opt stack 0
  3044  00007F                     strcpy@from:
  3045                           	opt stack 0
  3046                           
  3047                           ; 2 bytes @ 0x1F
  3048  00007F                     	ds	1
  3049  000080                     ??_isalpha:
  3050  000080                     ??_isxdigit:
  3051  000080                     ??_I2c_WriteData:
  3052  000080                     ??_Rtcc_RtcConfig:
  3053  000080                     Rtcc_GetRtccValue@RegValue:
  3054                           	opt stack 0
  3055  000080                     TmrBInit@TmrNumb:
  3056                           	opt stack 0
  3057  000080                     ReceiveEvt@EventStatus:
  3058                           	opt stack 0
  3059  000080                     USBTransferOnePacket@len:
  3060                           	opt stack 0
  3061  000080                     isNumberValid@isNumberOk:
  3062                           	opt stack 0
  3063  000080                     I2c_ReadData@ReadPacket:
  3064                           	opt stack 0
  3065  000080                     Uart_WriteConstString@ConstStringToWrite:
  3066                           	opt stack 0
  3067  000080                     Uart_WriteString@StringToWrite:
  3068                           	opt stack 0
  3069  000080                     Uart_WriteStringLen@StringToWrite:
  3070                           	opt stack 0
  3071  000080                     I2cSlv_SendI2cMsg@TxBuffer:
  3072                           	opt stack 0
  3073  000080                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x20
  3077  000080                     	ds	1
  3078  000081                     ?_GetElapsedTime:
  3079                           	opt stack 0
  3080  000081                     ?_Rtcm_GetRtccDate:
  3081                           	opt stack 0
  3082  000081                     Mdm_IsSmsReceived@Ret:
  3083                           	opt stack 0
  3084  000081                     Mdm_IsRinging@Ret:
  3085                           	opt stack 0
  3086  000081                     I2cSlv_I2cReadMsgSts@Result:
  3087                           	opt stack 0
  3088  000081                     USBTransferOnePacket@ep:
  3089                           	opt stack 0
  3090  000081                     Led_SetLedBlinkTime@Led:
  3091                           	opt stack 0
  3092  000081                     isNumberValid@i:
  3093                           	opt stack 0
  3094  000081                     ___awdiv@counter:
  3095                           	opt stack 0
  3096  000081                     ___awmod@counter:
  3097                           	opt stack 0
  3098  000081                     ___lwmod@counter:
  3099                           	opt stack 0
  3100  000081                     _isalpha$6684:
  3101                           	opt stack 0
  3102  000081                     _isxdigit$6694:
  3103                           	opt stack 0
  3104  000081                     OsTmr_StartTimer@Timer:
  3105                           	opt stack 0
  3106  000081                     StringCompare@Len:
  3107                           	opt stack 0
  3108  000081                     ClearBuffer@Index:
  3109                           	opt stack 0
  3110  000081                     ___wmul@product:
  3111                           	opt stack 0
  3112  000081                     memcpy@n:
  3113                           	opt stack 0
  3114  000081                     memset@n:
  3115                           	opt stack 0
  3116  000081                     strcat@cp:
  3117                           	opt stack 0
  3118  000081                     strcpy@cp:
  3119                           	opt stack 0
  3120  000081                     strlen@cp:
  3121                           	opt stack 0
  3122  000081                     GetElapsedTime@StartTime:
  3123                           	opt stack 0
  3124  000081                     ___lmul@multiplicand:
  3125                           	opt stack 0
  3126                           
  3127                           ; 4 bytes @ 0x21
  3128  000081                     	ds	1
  3129  000082                     ??_I2c_ReadData:
  3130  000082                     Uart_WriteConstString@Module:
  3131                           	opt stack 0
  3132  000082                     Uart_WriteString@Module:
  3133                           	opt stack 0
  3134  000082                     Uart_WriteStringLen@Len:
  3135                           	opt stack 0
  3136  000082                     I2cSlv_SendI2cMsg@SlaveAddr:
  3137                           	opt stack 0
  3138  000082                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  3139                           	opt stack 0
  3140  000082                     USBConfigureEndpoint@EPNum:
  3141                           	opt stack 0
  3142  000082                     ___awdiv@sign:
  3143                           	opt stack 0
  3144  000082                     ___awmod@sign:
  3145                           	opt stack 0
  3146  000082                     isalpha@c:
  3147                           	opt stack 0
  3148  000082                     isxdigit@c:
  3149                           	opt stack 0
  3150  000082                     USBTransferOnePacket@handle:
  3151                           	opt stack 0
  3152                           
  3153                           ; 2 bytes @ 0x22
  3154  000082                     	ds	1
  3155  000083                     ?_GetCallerNumber:
  3156                           	opt stack 0
  3157  000083                     ?_atoi:
  3158                           	opt stack 0
  3159  000083                     ?_xtoi:
  3160                           	opt stack 0
  3161  000083                     ?___lwdiv:
  3162                           	opt stack 0
  3163  000083                     Uart_WriteStringLen@Index:
  3164                           	opt stack 0
  3165  000083                     Mdm_SetSmsFormat@Index:
  3166                           	opt stack 0
  3167  000083                     I2cSlv_SendI2cMsg@DataLenght:
  3168                           	opt stack 0
  3169  000083                     I2cSlv_ReceiveI2cMsg@DataLenght:
  3170                           	opt stack 0
  3171  000083                     getSetupCall@isCalledReceived:
  3172                           	opt stack 0
  3173  000083                     sprintf@flag:
  3174                           	opt stack 0
  3175  000083                     memcpy@tmp:
  3176                           	opt stack 0
  3177  000083                     OsAlrm_SetOsAlarm@OsAlarmId:
  3178                           	opt stack 0
  3179  000083                     USBConfigureEndpoint@handle:
  3180                           	opt stack 0
  3181  000083                     putUSBUSART@data:
  3182                           	opt stack 0
  3183  000083                     atoi@s:
  3184                           	opt stack 0
  3185  000083                     ___awdiv@quotient:
  3186                           	opt stack 0
  3187  000083                     ___lwdiv@dividend:
  3188                           	opt stack 0
  3189  000083                     memset@p:
  3190                           	opt stack 0
  3191  000083                     xtoi@s:
  3192                           	opt stack 0
  3193  000083                     OsTmr_StartTimer@Timeout:
  3194                           	opt stack 0
  3195                           
  3196                           ; 4 bytes @ 0x23
  3197  000083                     	ds	1
  3198  000084                     Uart_WriteStringLen@Module:
  3199                           	opt stack 0
  3200  000084                     I2cSlv_SendI2cMsg@TxSts:
  3201                           	opt stack 0
  3202  000084                     I2cSlv_ReceiveI2cMsg@RxSts:
  3203                           	opt stack 0
  3204  000084                     CDCTxService@i:
  3205                           	opt stack 0
  3206  000084                     getsUSBUSART@buffer:
  3207                           	opt stack 0
  3208  000084                     sprintf@ap:
  3209                           	opt stack 0
  3210  000084                     memcpy@d:
  3211                           	opt stack 0
  3212  000084                     Mdm_SetSmsFormat@UartMessage:
  3213                           	opt stack 0
  3214                           
  3215                           ; 20 bytes @ 0x24
  3216  000084                     	ds	1
  3217  000085                     ??_atoi:
  3218  000085                     ??_xtoi:
  3219  000085                     ??_GetElapsedTime:
  3220  000085                     Rtcc_SetRtccValue@Value:
  3221                           	opt stack 0
  3222  000085                     USBDeviceInit@i:
  3223                           	opt stack 0
  3224  000085                     USBEnableEndpoint@options:
  3225                           	opt stack 0
  3226  000085                     putUSBUSART@length:
  3227                           	opt stack 0
  3228  000085                     CDCTxService@byte_to_send:
  3229                           	opt stack 0
  3230  000085                     Eeprom_Reset@SlaveAddress:
  3231                           	opt stack 0
  3232  000085                     StringCompare@Result:
  3233                           	opt stack 0
  3234  000085                     triggerRelay@res:
  3235                           	opt stack 0
  3236  000085                     StringCopy@SourceStr:
  3237                           	opt stack 0
  3238  000085                     ___lwdiv@divisor:
  3239                           	opt stack 0
  3240  000085                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  3241                           	opt stack 0
  3242  000085                     ___lmul@product:
  3243                           	opt stack 0
  3244                           
  3245                           ; 4 bytes @ 0x25
  3246  000085                     	ds	1
  3247  000086                     ??_Rtcc_SetRtccValue:
  3248  000086                     getsUSBUSART@len:
  3249                           	opt stack 0
  3250  000086                     triggerRelay@isRelayOn:
  3251                           	opt stack 0
  3252  000086                     sprintf@c:
  3253                           	opt stack 0
  3254  000086                     USBEnableEndpoint@p:
  3255                           	opt stack 0
  3256  000086                     StringCompare@Index:
  3257                           	opt stack 0
  3258  000086                     memcpy@s:
  3259                           	opt stack 0
  3260                           
  3261                           ; 2 bytes @ 0x26
  3262  000086                     	ds	1
  3263  000087                     atoi@sign:
  3264                           	opt stack 0
  3265  000087                     ___lwdiv@counter:
  3266                           	opt stack 0
  3267  000087                     xtoi@sign:
  3268                           	opt stack 0
  3269  000087                     StringCopy@DestStr:
  3270                           	opt stack 0
  3271  000087                     triggerRelay@txBuffer:
  3272                           	opt stack 0
  3273  000087                     sprintf@cp:
  3274                           	opt stack 0
  3275                           
  3276                           ; 2 bytes @ 0x27
  3277  000087                     	ds	1
  3278  000088                     Rtcc_SetRtccValue@RtccPtrVal:
  3279                           	opt stack 0
  3280  000088                     USBEnableEndpoint@ep:
  3281                           	opt stack 0
  3282  000088                     atoi@a:
  3283                           	opt stack 0
  3284  000088                     ___lwdiv@quotient:
  3285                           	opt stack 0
  3286  000088                     xtoi@val:
  3287                           	opt stack 0
  3288  000088                     parseCommand@addNumberCmd:
  3289                           	opt stack 0
  3290                           
  3291                           ; 4 bytes @ 0x28
  3292  000088                     	ds	1
  3293  000089                     ??_Rtcm_GetRtccDate:
  3294  000089                     ?_strtol:
  3295                           	opt stack 0
  3296  000089                     ?___lldiv:
  3297                           	opt stack 0
  3298  000089                     OsAlrm_SetOsAlarm@AlarmCallback:
  3299                           	opt stack 0
  3300  000089                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  3301                           	opt stack 0
  3302  000089                     StringCopy@Len:
  3303                           	opt stack 0
  3304  000089                     triggerCmdFsm@receivedNumber:
  3305                           	opt stack 0
  3306  000089                     strtol@s:
  3307                           	opt stack 0
  3308  000089                     ___lldiv@dividend:
  3309                           	opt stack 0
  3310  000089                     Rtcm_SetRtccDate@Date:
  3311                           	opt stack 0
  3312                           
  3313                           ; 8 bytes @ 0x29
  3314  000089                     	ds	1
  3315  00008A                     xtoi@c:
  3316                           	opt stack 0
  3317  00008A                     LedBlinkStateMachine@LedBlink:
  3318                           	opt stack 0
  3319  00008A                     LedPulseStateMachine@LedPulse:
  3320                           	opt stack 0
  3321  00008A                     secondsAppTimer@counter:
  3322                           	opt stack 0
  3323  00008A                     utoa@buf:
  3324                           	opt stack 0
  3325  00008A                     Rtcm_GetRtccDate@LocalDate:
  3326                           	opt stack 0
  3327                           
  3328                           ; 8 bytes @ 0x2A
  3329  00008A                     	ds	1
  3330  00008B                     ??_StringCopy:
  3331  00008B                     triggerCmdFsm@isComplete:
  3332                           	opt stack 0
  3333  00008B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  3334                           	opt stack 0
  3335  00008B                     strtol@endptr:
  3336                           	opt stack 0
  3337                           
  3338                           ; 2 bytes @ 0x2B
  3339  00008B                     	ds	1
  3340  00008C                     LedPulseStateMachine@Led:
  3341                           	opt stack 0
  3342  00008C                     secondsAppTimer@isCyclic:
  3343                           	opt stack 0
  3344  00008C                     triggerCmdFsm@numberInMemory:
  3345                           	opt stack 0
  3346  00008C                     utoa@val:
  3347                           	opt stack 0
  3348  00008C                     parseCommand@deleteNumberCmd:
  3349                           	opt stack 0
  3350                           
  3351                           ; 4 bytes @ 0x2C
  3352  00008C                     	ds	1
  3353  00008D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3354                           	opt stack 0
  3355  00008D                     StringCopy@Index:
  3356                           	opt stack 0
  3357  00008D                     strtol@base:
  3358                           	opt stack 0
  3359  00008D                     GetElapsedTime@TimeValue:
  3360                           	opt stack 0
  3361  00008D                     ___lldiv@divisor:
  3362                           	opt stack 0
  3363                           
  3364                           ; 4 bytes @ 0x2D
  3365  00008D                     	ds	1
  3366  00008E                     utoa@base:
  3367                           	opt stack 0
  3368                           
  3369                           ; 2 bytes @ 0x2E
  3370  00008E                     	ds	1
  3371  00008F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3372  00008F                     ??_strtol:
  3373  00008F                     secondsAppTimer@seconds:
  3374                           	opt stack 0
  3375  00008F                     Mdm_GetSmsData@MessageText:
  3376                           	opt stack 0
  3377  00008F                     Eeprom_Write@WriteBuffer:
  3378                           	opt stack 0
  3379  00008F                     LedStateMachine@LedSts:
  3380                           	opt stack 0
  3381  00008F                     ModemEvtParser@CallReadyString:
  3382                           	opt stack 0
  3383                           
  3384                           ; 10 bytes @ 0x2F
  3385  00008F                     	ds	1
  3386  000090                     secondsAppTimer@isExpired:
  3387                           	opt stack 0
  3388  000090                     utoa@v:
  3389                           	opt stack 0
  3390  000090                     parseCommand@resetCmd:
  3391                           	opt stack 0
  3392                           
  3393                           ; 4 bytes @ 0x30
  3394  000090                     	ds	1
  3395  000091                     ??_USBStdFeatureReqHandler:
  3396  000091                     Mdm_GetSmsData@GetSmsStatus:
  3397                           	opt stack 0
  3398  000091                     USBStdSetCfgHandler@i:
  3399                           	opt stack 0
  3400  000091                     Eeprom_Write@DataLength:
  3401                           	opt stack 0
  3402  000091                     LedStateMachine@LedOut:
  3403                           	opt stack 0
  3404  000091                     secondsAppTimer@destinationTicks:
  3405                           	opt stack 0
  3406  000091                     GetElapsedTime@CurrentTimestamp:
  3407                           	opt stack 0
  3408  000091                     ___lldiv@quotient:
  3409                           	opt stack 0
  3410                           
  3411                           ; 4 bytes @ 0x31
  3412  000091                     	ds	1
  3413  000092                     Eeprom_Write@WriteSts:
  3414                           	opt stack 0
  3415  000092                     utoa@c:
  3416                           	opt stack 0
  3417  000092                     USBStdFeatureReqHandler@pUEP:
  3418                           	opt stack 0
  3419                           
  3420                           ; 2 bytes @ 0x32
  3421  000092                     	ds	1
  3422  000093                     Eeprom_Write@MemoryAddress:
  3423                           	opt stack 0
  3424  000093                     waitSetupCall@isCallArrived:
  3425                           	opt stack 0
  3426  000093                     strtol@sign:
  3427                           	opt stack 0
  3428  000093                     LedStateMachine@LedBlink:
  3429                           	opt stack 0
  3430  000093                     itoa@buf:
  3431                           	opt stack 0
  3432                           
  3433                           ; 2 bytes @ 0x33
  3434  000093                     	ds	1
  3435  000094                     USBStdFeatureReqHandler@current_ep_data:
  3436                           	opt stack 0
  3437  000094                     Eeprom_Write@SlaveAddress:
  3438                           	opt stack 0
  3439  000094                     parseCommand@state:
  3440                           	opt stack 0
  3441  000094                     strtol@a:
  3442                           	opt stack 0
  3443                           
  3444                           ; 4 bytes @ 0x34
  3445  000094                     	ds	1
  3446  000095                     Eeprom_Write@CommandLength:
  3447                           	opt stack 0
  3448  000095                     detectCmd@currentState:
  3449                           	opt stack 0
  3450  000095                     ___lldiv@counter:
  3451                           	opt stack 0
  3452  000095                     OsTmr_GetTimerStatus@Timer:
  3453                           	opt stack 0
  3454  000095                     USBStdFeatureReqHandler@p:
  3455                           	opt stack 0
  3456  000095                     LedStateMachine@LedPulse:
  3457                           	opt stack 0
  3458  000095                     itoa@val:
  3459                           	opt stack 0
  3460                           
  3461                           ; 2 bytes @ 0x35
  3462  000095                     	ds	1
  3463  000096                     Tmr_TmrBPrSet@IntFreqHz:
  3464                           	opt stack 0
  3465  000096                     SetUartBaudRate@UartConfig:
  3466                           	opt stack 0
  3467  000096                     saveNumberInMemory@phoneNumber:
  3468                           	opt stack 0
  3469  000096                     SetBaudRate@DesiredI2cBusClockHz:
  3470                           	opt stack 0
  3471                           
  3472                           ; 4 bytes @ 0x36
  3473  000096                     	ds	1
  3474  000097                     ??_USBCtrlEPService:
  3475  000097                     itoa@base:
  3476                           	opt stack 0
  3477                           
  3478                           ; 2 bytes @ 0x37
  3479  000097                     	ds	1
  3480  000098                     Tmr_TmrBPrSet@Prescaler:
  3481                           	opt stack 0
  3482  000098                     Mdm_SetSmsFormat@TextFormat:
  3483                           	opt stack 0
  3484  000098                     USBDeviceTasks@i:
  3485                           	opt stack 0
  3486  000098                     LedStateMachine@LedOutSts:
  3487                           	opt stack 0
  3488  000098                     saveNumberInMemory@address:
  3489                           	opt stack 0
  3490  000098                     strtol@c:
  3491                           	opt stack 0
  3492                           
  3493                           ; 1 bytes @ 0x38
  3494  000098                     	ds	1
  3495  000099                     Tmr_TmrBPrSet@Postscaler:
  3496                           	opt stack 0
  3497  000099                     SetUartBaudRate@Module:
  3498                           	opt stack 0
  3499  000099                     LedStateMachine@Led:
  3500                           	opt stack 0
  3501  000099                     initGprsModem@isInitialized:
  3502                           	opt stack 0
  3503  000099                     itoa@cp:
  3504                           	opt stack 0
  3505  000099                     ModemEvtParser@ClipString:
  3506                           	opt stack 0
  3507                           
  3508                           ; 5 bytes @ 0x39
  3509  000099                     	ds	1
  3510  00009A                     ??_Led_MainTask:
  3511  00009A                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  3512                           	opt stack 0
  3513  00009A                     SetUartBaudRate@BaudRateRegister:
  3514                           	opt stack 0
  3515  00009A                     SetBaudRate@McuClockHz:
  3516                           	opt stack 0
  3517                           
  3518                           ; 4 bytes @ 0x3A
  3519  00009A                     	ds	1
  3520  00009B                     ??_SendSmsSm:
  3521  00009B                     Tmr_TmrBPrSet@TmrNumb:
  3522                           	opt stack 0
  3523  00009B                     OsTmr_Wait@WaitTimer:
  3524                           	opt stack 0
  3525  00009B                     InitGprsNetwork@Apn:
  3526                           	opt stack 0
  3527  00009B                     HttpGetMethod@GetData:
  3528                           	opt stack 0
  3529                           
  3530                           ; 2 bytes @ 0x3B
  3531  00009B                     	ds	1
  3532  00009C                     SetUartBaudRate@DivisionFactor:
  3533                           	opt stack 0
  3534  00009C                     Tmr_TmrBPrSet@Divisor:
  3535                           	opt stack 0
  3536                           
  3537                           ; 4 bytes @ 0x3C
  3538  00009C                     	ds	1
  3539  00009D                     ??_HttpGetMethod:
  3540  00009D                     InitGprsNetwork@ApnLen:
  3541                           	opt stack 0
  3542  00009D                     Uart_InitUartModule@UartConfig:
  3543                           	opt stack 0
  3544  00009D                     OsTmr_Wait@DelayMs:
  3545                           	opt stack 0
  3546                           
  3547                           ; 4 bytes @ 0x3D
  3548  00009D                     	ds	1
  3549  00009E                     ??_SetBaudRate:
  3550  00009E                     ??_InitGprsNetwork:
  3551  00009E                     ModemEvtParser@SmsString:
  3552                           	opt stack 0
  3553                           
  3554                           ; 5 bytes @ 0x3E
  3555  00009E                     	ds	1
  3556  00009F                     ??_Uart_InitUartModule:
  3557                           
  3558                           ; 1 bytes @ 0x3F
  3559  00009F                     	ds	1
  3560  0000A0                     Tmr_TmrBConfig@TmrBConfig:
  3561                           	opt stack 0
  3562                           
  3563                           ; 2 bytes @ 0x40
  3564  0000A0                     	ds	1
  3565  0000A1                     Uart_InitUartModule@Module:
  3566                           	opt stack 0
  3567  0000A1                     OsTmr_Wait@Ret:
  3568                           	opt stack 0
  3569                           
  3570                           ; 1 bytes @ 0x41
  3571  0000A1                     	ds	1
  3572  0000A2                     ??_Terminal:
  3573  0000A2                     I2c_InitI2cModule@I2cConfig:
  3574                           	opt stack 0
  3575  0000A2                     I2cSlv_QueryI2cData@TxBuffer:
  3576                           	opt stack 0
  3577                           
  3578                           ; 2 bytes @ 0x42
  3579  0000A2                     	ds	1
  3580  0000A3                     Tmr_TmrBConfig@TmrNumb:
  3581                           	opt stack 0
  3582  0000A3                     ModemEvtParser@RingString:
  3583                           	opt stack 0
  3584                           
  3585                           ; 4 bytes @ 0x43
  3586  0000A3                     	ds	1
  3587  0000A4                     ??_I2c_InitI2cModule:
  3588  0000A4                     I2cSlv_QueryI2cData@TxLen:
  3589                           	opt stack 0
  3590  0000A4                     Terminal@i:
  3591                           	opt stack 0
  3592  0000A4                     InitSchedTimer@TmrBConfig:
  3593                           	opt stack 0
  3594                           
  3595                           ; 7 bytes @ 0x44
  3596  0000A4                     	ds	1
  3597  0000A5                     Terminal@ReceivedBytes:
  3598                           	opt stack 0
  3599  0000A5                     I2cSlv_QueryI2cData@RxBuffer:
  3600                           	opt stack 0
  3601                           
  3602                           ; 2 bytes @ 0x45
  3603  0000A5                     	ds	1
  3604  0000A6                     Terminal@Index:
  3605                           	opt stack 0
  3606                           
  3607                           ; 1 bytes @ 0x46
  3608  0000A6                     	ds	1
  3609  0000A7                     ModemEvtParser@Match:
  3610                           	opt stack 0
  3611  0000A7                     I2cSlv_QueryI2cData@RxLen:
  3612                           	opt stack 0
  3613                           
  3614                           ; 1 bytes @ 0x47
  3615  0000A7                     	ds	1
  3616  0000A8                     ModemEvtParser@CompareIdx:
  3617                           	opt stack 0
  3618  0000A8                     I2cSlv_QueryI2cData@SlaveAddr:
  3619                           	opt stack 0
  3620                           
  3621                           ; 1 bytes @ 0x48
  3622  0000A8                     	ds	1
  3623  0000A9                     Eeprom_Read@ReadBuffer:
  3624                           	opt stack 0
  3625                           
  3626                           ; 2 bytes @ 0x49
  3627  0000A9                     	ds	2
  3628  0000AB                     Eeprom_Read@DataLength:
  3629                           	opt stack 0
  3630                           
  3631                           ; 1 bytes @ 0x4B
  3632  0000AB                     	ds	1
  3633  0000AC                     Eeprom_Read@MemoryAddress:
  3634                           	opt stack 0
  3635                           
  3636                           ; 1 bytes @ 0x4C
  3637  0000AC                     	ds	1
  3638  0000AD                     Eeprom_Read@SlaveAddress:
  3639                           	opt stack 0
  3640                           
  3641                           ; 1 bytes @ 0x4D
  3642  0000AD                     	ds	1
  3643  0000AE                     Eeprom_Read@ReadSts:
  3644                           	opt stack 0
  3645                           
  3646                           ; 1 bytes @ 0x4E
  3647  0000AE                     	ds	1
  3648  0000AF                     Eeprom_Read@QuerySts:
  3649                           	opt stack 0
  3650                           
  3651                           ; 1 bytes @ 0x4F
  3652  0000AF                     	ds	1
  3653  0000B0                     tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           postdec1	equ	0xFE5
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           
  3663                           ; 1 bytes @ 0x50
  3664                           
  3665                           	psect	cstackCOMRAM
  3666  000001                     __pcstackCOMRAM:
  3667                           	opt stack 0
  3668  000001                     i2GenerateEvt@Event:
  3669                           	opt stack 0
  3670                           
  3671                           ; 2 bytes @ 0x0
  3672  000001                     	ds	2
  3673  000003                     i2GenerateEvt@EventStatus:
  3674                           	opt stack 0
  3675                           
  3676                           ; 1 bytes @ 0x2
  3677  000003                     	ds	1
  3678  000004                     Uart_MdmGsmGprsReadService@UartData:
  3679                           	opt stack 0
  3680                           
  3681                           ; 1 bytes @ 0x3
  3682  000004                     	ds	1
  3683  000005                     Uart_MdmGsmGprsReadService@ServiceCounter:
  3684                           	opt stack 0
  3685                           
  3686                           ; 2 bytes @ 0x4
  3687  000005                     	ds	2
  3688  000007                     ??_HighPriorityIsr:
  3689                           
  3690                           ; 1 bytes @ 0x6
  3691  000007                     	ds	18
  3692  000019                     ?i1___wmul:
  3693                           	opt stack 0
  3694  000019                     OsAlrm_ClearOsAlarm@OsAlarmId:
  3695                           	opt stack 0
  3696  000019                     i1GenerateEvt@Event:
  3697                           	opt stack 0
  3698  000019                     i1___wmul@multiplier:
  3699                           	opt stack 0
  3700                           
  3701                           ; 2 bytes @ 0x18
  3702  000019                     	ds	2
  3703  00001B                     i1GenerateEvt@EventStatus:
  3704                           	opt stack 0
  3705  00001B                     i1___wmul@multiplicand:
  3706                           	opt stack 0
  3707                           
  3708                           ; 2 bytes @ 0x1A
  3709  00001B                     	ds	1
  3710  00001C                     i1I2cSlv_SendI2cMsg@TxBuffer:
  3711                           	opt stack 0
  3712                           
  3713                           ; 2 bytes @ 0x1B
  3714  00001C                     	ds	1
  3715  00001D                     i1___wmul@product:
  3716                           	opt stack 0
  3717                           
  3718                           ; 2 bytes @ 0x1C
  3719  00001D                     	ds	1
  3720  00001E                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  3721                           	opt stack 0
  3722                           
  3723                           ; 1 bytes @ 0x1D
  3724  00001E                     	ds	1
  3725  00001F                     i1I2cSlv_SendI2cMsg@DataLenght:
  3726                           	opt stack 0
  3727                           
  3728                           ; 1 bytes @ 0x1E
  3729  00001F                     	ds	1
  3730  000020                     i1I2cSlv_SendI2cMsg@TxSts:
  3731                           	opt stack 0
  3732                           
  3733                           ; 1 bytes @ 0x1F
  3734  000020                     	ds	1
  3735  000021                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  3736                           	opt stack 0
  3737                           
  3738                           ; 2 bytes @ 0x20
  3739  000021                     	ds	2
  3740  000023                     tblptru	equ	0xFF8
  3741                           tblptrh	equ	0xFF7
  3742                           tblptrl	equ	0xFF6
  3743                           tablat	equ	0xFF5
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1h	equ	0xFE2
  3748                           fsr1l	equ	0xFE1
  3749                           
  3750                           ; 1 bytes @ 0x22
  3751 ;;
  3752 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3753 ;;
  3754 ;; *************** function _main *****************
  3755 ;; Defined at:
  3756 ;;		line 58 in file "../../MercuryFwk/Source/c/00_Main/main.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  2   14[None  ] short 
  3763 ;; Registers used:
  3764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels required when called:   23
  3776 ;; This function calls:
  3777 ;;		_Sch_MainScheduler
  3778 ;;		_SystemInit
  3779 ;; This function is called by:
  3780 ;;		Startup code after reset
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text0
  3785  006AB6                     __ptext0:
  3786                           	opt stack 0
  3787  006AB6                     _main:
  3788                           	opt stack 8
  3789                           
  3790                           ;main.c: 61: SystemInit();
  3791                           
  3792                           ;incstack = 0
  3793  006AB6  EC60  F032         	call	_SystemInit	;wreg free
  3794                           
  3795                           ;main.c: 64: Sch_MainScheduler();
  3796  006ABA  EC42  F034         	call	_Sch_MainScheduler	;wreg free
  3797                           
  3798                           ;main.c: 67: return 0;
  3799                           ;	Return value of _main is never used
  3800  006ABE  EF66  F000         	goto	start
  3801  006AC2                     __end_of_main:
  3802                           	opt stack 0
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           postdec1	equ	0xFE5
  3810                           fsr1h	equ	0xFE2
  3811                           fsr1l	equ	0xFE1
  3812                           
  3813 ;; *************** function _SystemInit *****************
  3814 ;; Defined at:
  3815 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:   15
  3836 ;; This function calls:
  3837 ;;		_InitSchedTimer
  3838 ;;		_Irq_InitIntController
  3839 ;;		_Mcu_ConfigExtInt
  3840 ;;		_Mcu_StartSystemPll
  3841 ;;		_Pm_DsReleasePinControl
  3842 ;;		_Tmr_RegisterTmr2IsrCallback
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text1
  3849  0064C0                     __ptext1:
  3850                           	opt stack 0
  3851  0064C0                     _SystemInit:
  3852                           	opt stack 15
  3853                           
  3854                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  3855                           
  3856                           ;incstack = 0
  3857  0064C0  EC89  F035         	call	_Pm_DsReleasePinControl	;wreg free
  3858                           
  3859                           ;sys_init.c: 126: Mcu_StartSystemPll();
  3860  0064C4  EC33  F034         	call	_Mcu_StartSystemPll	;wreg free
  3861                           
  3862                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  3863  0064C8  0E01               	movlw	1
  3864  0064CA  0100               	movlb	0	; () banked
  3865  0064CC  6F7D               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  3866  0064CE  0E01               	movlw	1
  3867  0064D0  6F7E               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  3868  0064D2  0E01               	movlw	1
  3869  0064D4  EC04  F033         	call	_Irq_InitIntController
  3870                           
  3871                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  3872  0064D8  0E9A               	movlw	low _Sch_SchmIntService
  3873  0064DA  0100               	movlb	0	; () banked
  3874  0064DC  6F7D               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  3875  0064DE  0E6A               	movlw	high _Sch_SchmIntService
  3876  0064E0  6F7E               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  3877  0064E2  EC6C  F035         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  3878                           
  3879                           ;sys_init.c: 132: InitSchedTimer();
  3880  0064E6  ECC0  F032         	call	_InitSchedTimer	;wreg free
  3881                           
  3882                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  3883  0064EA  EC7C  F034         	call	_Mcu_ConfigExtInt	;wreg free
  3884  0064EE  0012               	return		;funcret
  3885  0064F0                     __end_of_SystemInit:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           postdec1	equ	0xFE5
  3894                           fsr1h	equ	0xFE2
  3895                           fsr1l	equ	0xFE1
  3896                           
  3897 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  3898 ;; Defined at:
  3899 ;;		line 329 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  IsrCallback     2   29[BANK0 ] PTR FTN()void 
  3902 ;;		 -> Sch_SchmIntService(1), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3914 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;Total ram usage:        2 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:   11
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_SystemInit
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text2
  3929  006AD8                     __ptext2:
  3930                           	opt stack 0
  3931  006AD8                     _Tmr_RegisterTmr2IsrCallback:
  3932                           	opt stack 18
  3933                           
  3934                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3935                           
  3936                           ;incstack = 0
  3937  006AD8  C07D  F2EA         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3938  006ADC  C07E  F2EB         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3939  006AE0  0012               	return		;funcret
  3940  006AE2                     __end_of_Tmr_RegisterTmr2IsrCallback:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           postinc0	equ	0xFEE
  3947                           wreg	equ	0xFE8
  3948                           postdec1	equ	0xFE5
  3949                           fsr1h	equ	0xFE2
  3950                           fsr1l	equ	0xFE1
  3951                           
  3952 ;; *************** function _Pm_DsReleasePinControl *****************
  3953 ;; Defined at:
  3954 ;;		line 166 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		None
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;Total ram usage:        0 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:   11
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_SystemInit
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text3
  3983  006B12                     __ptext3:
  3984                           	opt stack 0
  3985  006B12                     _Pm_DsReleasePinControl:
  3986                           	opt stack 18
  3987                           
  3988                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3989                           
  3990                           ;incstack = 0
  3991  006B12  010F               	movlb	15	; () banked
  3992  006B14  914C               	bcf	76,0,b	;volatile
  3993                           
  3994                           ; BSR set to: 15
  3995  006B16  0012               	return		;funcret
  3996  006B18                     __end_of_Pm_DsReleasePinControl:
  3997                           	opt stack 0
  3998                           tblptru	equ	0xFF8
  3999                           tblptrh	equ	0xFF7
  4000                           tblptrl	equ	0xFF6
  4001                           tablat	equ	0xFF5
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           postdec1	equ	0xFE5
  4005                           fsr1h	equ	0xFE2
  4006                           fsr1l	equ	0xFE1
  4007                           
  4008 ;; *************** function _Mcu_StartSystemPll *****************
  4009 ;; Defined at:
  4010 ;;		line 81 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  PllStartupCo    2   29[BANK0 ] volatile unsigned short 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:        2 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   11
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_SystemInit
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text4
  4039  006866                     __ptext4:
  4040                           	opt stack 0
  4041  006866                     _Mcu_StartSystemPll:
  4042                           	opt stack 18
  4043                           
  4044                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  4045                           
  4046                           ; BSR set to: 15
  4047                           ;incstack = 0
  4048  006866  0E03               	movlw	3
  4049  006868  0100               	movlb	0	; () banked
  4050  00686A  6F7E               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  4051  00686C  0EE8               	movlw	232
  4052  00686E  6F7D               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  4056  006870  8C9B               	bsf	3995,6,c	;volatile
  4057  006872                     l12221:
  4058                           
  4059                           ; BSR set to: 0
  4060  006872  077D               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  4061  006874  A0D8               	btfss	status,0,c
  4062  006876  077E               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  4063  006878  297D               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  4064  00687A  E1FB               	bnz	l12221
  4065  00687C  297E               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  4066  00687E  B4D8               	btfsc	status,2,c
  4067  006880  0012               	return	
  4068  006882  D7F7               	goto	l237
  4069  006884                     __end_of_Mcu_StartSystemPll:
  4070                           	opt stack 0
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           postinc0	equ	0xFEE
  4076                           wreg	equ	0xFE8
  4077                           postdec1	equ	0xFE5
  4078                           fsr1h	equ	0xFE2
  4079                           fsr1l	equ	0xFE1
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _Mcu_ConfigExtInt *****************
  4083 ;; Defined at:
  4084 ;;		line 99 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:   11
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_SystemInit
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text5
  4113  0068F8                     __ptext5:
  4114                           	opt stack 0
  4115  0068F8                     _Mcu_ConfigExtInt:
  4116                           	opt stack 18
  4117                           
  4118                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;incstack = 0
  4122  0068F8  8093               	bsf	3987,0,c	;volatile
  4123                           
  4124                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  4125  0068FA  8695               	bsf	3989,3,c	;volatile
  4126                           
  4127                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  4128  0068FC  010F               	movlb	15	; () banked
  4129  0068FE  8949               	bsf	73,4,b	;volatile
  4130                           
  4131                           ; BSR set to: 15
  4132                           ;mcu_drv.c: 108: RPINR1 = 20;
  4133  006900  0E14               	movlw	20
  4134  006902  010E               	movlb	14	; () banked
  4135  006904  6FE7               	movwf	231,b	;volatile
  4136                           
  4137                           ; BSR set to: 14
  4138                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  4139  006906  88F2               	bsf	intcon,4,c	;volatile
  4140                           
  4141                           ; BSR set to: 14
  4142                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  4143  006908  86F0               	bsf	intcon3,3,c	;volatile
  4144                           
  4145                           ; BSR set to: 14
  4146                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  4147  00690A  8CF0               	bsf	intcon3,6,c	;volatile
  4148                           
  4149                           ; BSR set to: 14
  4150                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  4151  00690C  9CF1               	bcf	intcon2,6,c	;volatile
  4152                           
  4153                           ; BSR set to: 14
  4154                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  4155  00690E  9AF1               	bcf	intcon2,5,c	;volatile
  4156                           
  4157                           ; BSR set to: 14
  4158  006910  0012               	return		;funcret
  4159  006912                     __end_of_Mcu_ConfigExtInt:
  4160                           	opt stack 0
  4161                           tblptru	equ	0xFF8
  4162                           tblptrh	equ	0xFF7
  4163                           tblptrl	equ	0xFF6
  4164                           tablat	equ	0xFF5
  4165                           intcon	equ	0xFF2
  4166                           intcon2	equ	0xFF1
  4167                           intcon3	equ	0xFF0
  4168                           postinc0	equ	0xFEE
  4169                           wreg	equ	0xFE8
  4170                           postdec1	equ	0xFE5
  4171                           fsr1h	equ	0xFE2
  4172                           fsr1l	equ	0xFE1
  4173                           status	equ	0xFD8
  4174                           
  4175 ;; *************** function _Irq_InitIntController *****************
  4176 ;; Defined at:
  4177 ;;		line 75 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  IntPriorityE    1    wreg     enum E7720
  4180 ;;  GlobalInt_Hi    1   29[BANK0 ] unsigned char 
  4181 ;;  PerInt_LowPI    1   30[BANK0 ] unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  IntPriorityE    1   31[BANK0 ] enum E7720
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;Total ram usage:        3 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:   11
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_SystemInit
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text6
  4208  006608                     __ptext6:
  4209                           	opt stack 0
  4210  006608                     _Irq_InitIntController:
  4211                           	opt stack 18
  4212                           
  4213                           ; BSR set to: 14
  4214                           ;incstack = 0
  4215                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  4216  006608  0100               	movlb	0	; () banked
  4217  00660A  6F7F               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  4218                           
  4219                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  4220  00660C  0100               	movlb	0	; () banked
  4221  00660E  B17F               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  4222  006610  D002               	bra	u10725
  4223  006612  9ED0               	bcf	4048,7,c	;volatile
  4224  006614  D001               	bra	u10726
  4225  006616                     u10725:
  4226  006616  8ED0               	bsf	4048,7,c	;volatile
  4227  006618                     u10726:
  4228                           
  4229                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  4230  006618  0100               	movlb	0	; () banked
  4231  00661A  B17D               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  4232  00661C  D002               	bra	u10735
  4233  00661E  9EF2               	bcf	intcon,7,c	;volatile
  4234  006620  D001               	bra	u10736
  4235  006622                     u10735:
  4236  006622  8EF2               	bsf	intcon,7,c	;volatile
  4237  006624                     u10736:
  4238                           
  4239                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  4240  006624  0100               	movlb	0	; () banked
  4241  006626  B17E               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  4242  006628  D002               	bra	u10745
  4243  00662A  9CF2               	bcf	intcon,6,c	;volatile
  4244  00662C  D001               	bra	u10746
  4245  00662E                     u10745:
  4246  00662E  8CF2               	bsf	intcon,6,c	;volatile
  4247  006630                     u10746:
  4248  006630  0012               	return		;funcret
  4249  006632                     __end_of_Irq_InitIntController:
  4250                           	opt stack 0
  4251                           tblptru	equ	0xFF8
  4252                           tblptrh	equ	0xFF7
  4253                           tblptrl	equ	0xFF6
  4254                           tablat	equ	0xFF5
  4255                           intcon	equ	0xFF2
  4256                           intcon2	equ	0xFF1
  4257                           intcon3	equ	0xFF0
  4258                           postinc0	equ	0xFEE
  4259                           wreg	equ	0xFE8
  4260                           postdec1	equ	0xFE5
  4261                           fsr1h	equ	0xFE2
  4262                           fsr1l	equ	0xFE1
  4263                           status	equ	0xFD8
  4264                           
  4265 ;; *************** function _InitSchedTimer *****************
  4266 ;; Defined at:
  4267 ;;		line 69 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  TmrBConfig      7   68[BANK0 ] struct _TmrBConfigType
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;Total ram usage:        7 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:   14
  4288 ;; This function calls:
  4289 ;;		_Tmr_TmrBConfig
  4290 ;; This function is called by:
  4291 ;;		_SystemInit
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           	psect	text7
  4296  006580                     __ptext7:
  4297                           	opt stack 0
  4298  006580                     _InitSchedTimer:
  4299                           	opt stack 15
  4300                           
  4301                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  4302                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  4303                           
  4304                           ;incstack = 0
  4305  006580  0E04               	movlw	4
  4306  006582  0100               	movlb	0	; () banked
  4307  006584  6FA4               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  4308                           
  4309                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  4310  006586  0E0C               	movlw	12
  4311  006588  6FA5               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  4312                           
  4313                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  4314  00658A  0E00               	movlw	0
  4315  00658C  6FA7               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  4316                           
  4317                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  4318  00658E  0E01               	movlw	1
  4319  006590  6FA6               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  4320                           
  4321                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  4322  006592  0E03               	movlw	3
  4323  006594  6FA9               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  4324  006596  0EE8               	movlw	232
  4325  006598  6FA8               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  4326                           
  4327                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  4328  00659A  0E01               	movlw	1
  4329  00659C  6FAA               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  4333  00659E  0EA4               	movlw	low InitSchedTimer@TmrBConfig
  4334  0065A0  6FA0               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  4335  0065A2  0E00               	movlw	high InitSchedTimer@TmrBConfig
  4336  0065A4  6FA1               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  4337  0065A6  0E02               	movlw	2
  4338  0065A8  EC16  F01F         	call	_Tmr_TmrBConfig
  4339  0065AC  0012               	return		;funcret
  4340  0065AE                     __end_of_InitSchedTimer:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           intcon	equ	0xFF2
  4347                           intcon2	equ	0xFF1
  4348                           intcon3	equ	0xFF0
  4349                           postinc0	equ	0xFEE
  4350                           wreg	equ	0xFE8
  4351                           postdec1	equ	0xFE5
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           status	equ	0xFD8
  4355                           
  4356 ;; *************** function _Tmr_TmrBConfig *****************
  4357 ;; Defined at:
  4358 ;;		line 271 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  TmrNumb         1    wreg     unsigned char 
  4361 ;;  TmrBConfig      2   64[BANK0 ] PTR struct _TmrBConfigTy
  4362 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  TmrNumb         1   67[BANK0 ] unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;Total ram usage:        4 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:   13
  4381 ;; This function calls:
  4382 ;;		_TmrBInit
  4383 ;;		_Tmr_StartTmr
  4384 ;;		_Tmr_TmrBIrqSet
  4385 ;;		_Tmr_TmrBPrSet
  4386 ;; This function is called by:
  4387 ;;		_InitSchedTimer
  4388 ;;		_InitAuxTimer
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text8
  4393  003E2C                     __ptext8:
  4394                           	opt stack 0
  4395  003E2C                     _Tmr_TmrBConfig:
  4396                           	opt stack 15
  4397                           
  4398                           ;incstack = 0
  4399                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  4400  003E2C  0100               	movlb	0	; () banked
  4401  003E2E  6FA3               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  4402                           
  4403                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  4404  003E30  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4405  003E34  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4406  003E38  50DF               	movf	indf2,w,c
  4407  003E3A  0100               	movlb	0	; () banked
  4408  003E3C  6F7D               	movwf	TmrBInit@Prescaler& (0+255),b
  4409  003E3E  EE20 F001          	lfsr	2,1
  4410  003E42  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4411  003E44  26D9               	addwf	fsr2l,f,c
  4412  003E46  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4413  003E48  22DA               	addwfc	fsr2h,f,c
  4414  003E4A  50DF               	movf	indf2,w,c
  4415  003E4C  6F7E               	movwf	TmrBInit@Postscaler& (0+255),b
  4416  003E4E  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4417  003E50  EC9E  F025         	call	_TmrBInit
  4418                           
  4419                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  4420  003E54  0100               	movlb	0	; () banked
  4421  003E56  EE20 F002          	lfsr	2,2
  4422  003E5A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4423  003E5C  26D9               	addwf	fsr2l,f,c
  4424  003E5E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4425  003E60  22DA               	addwfc	fsr2h,f,c
  4426  003E62  04DE               	decf	postinc2,w,c
  4427  003E64  A4D8               	btfss	status,2,c
  4428  003E66  D00E               	goto	l546
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;tmr_drv.c: 277: {
  4432                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  4433  003E68  EE20 F003          	lfsr	2,3
  4434  003E6C  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4435  003E6E  26D9               	addwf	fsr2l,f,c
  4436  003E70  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4437  003E72  22DA               	addwfc	fsr2h,f,c
  4438  003E74  50DF               	movf	indf2,w,c
  4439  003E76  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4440  003E78  0E01               	movlw	1
  4441  003E7A  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4442  003E7C  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4443  003E7E  EC4F  F02F         	call	_Tmr_TmrBIrqSet
  4444                           
  4445                           ;tmr_drv.c: 280: }
  4446  003E82  D00E               	goto	l547
  4447  003E84                     l546:
  4448                           
  4449                           ;tmr_drv.c: 281: else
  4450                           ;tmr_drv.c: 282: {
  4451                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  4452  003E84  0100               	movlb	0	; () banked
  4453  003E86  EE20 F003          	lfsr	2,3
  4454  003E8A  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4455  003E8C  26D9               	addwf	fsr2l,f,c
  4456  003E8E  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4457  003E90  22DA               	addwfc	fsr2h,f,c
  4458  003E92  50DF               	movf	indf2,w,c
  4459  003E94  6F7D               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  4460  003E96  0E00               	movlw	0
  4461  003E98  6F7E               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  4462  003E9A  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4463  003E9C  EC4F  F02F         	call	_Tmr_TmrBIrqSet
  4464  003EA0                     l547:
  4465                           
  4466                           ;tmr_drv.c: 285: }
  4467                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  4468  003EA0  0100               	movlb	0	; () banked
  4469  003EA2  EE20 F004          	lfsr	2,4
  4470  003EA6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4471  003EA8  26D9               	addwf	fsr2l,f,c
  4472  003EAA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4473  003EAC  22DA               	addwfc	fsr2h,f,c
  4474  003EAE  CFDE F096          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  4475  003EB2  CFDD F097          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  4476  003EB6  C0A0  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  4477  003EBA  C0A1  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  4478  003EBE  50DF               	movf	indf2,w,c
  4479  003EC0  6F98               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  4480  003EC2  EE20 F001          	lfsr	2,1
  4481  003EC6  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4482  003EC8  26D9               	addwf	fsr2l,f,c
  4483  003ECA  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4484  003ECC  22DA               	addwfc	fsr2h,f,c
  4485  003ECE  50DF               	movf	indf2,w,c
  4486  003ED0  6F99               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4487  003ED2  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4488  003ED4  ECAB  F018         	call	_Tmr_TmrBPrSet
  4489                           
  4490                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  4491  003ED8  0100               	movlb	0	; () banked
  4492  003EDA  EE20 F006          	lfsr	2,6
  4493  003EDE  51A0               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  4494  003EE0  26D9               	addwf	fsr2l,f,c
  4495  003EE2  51A1               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  4496  003EE4  22DA               	addwfc	fsr2h,f,c
  4497  003EE6  04DE               	decf	postinc2,w,c
  4498  003EE8  A4D8               	btfss	status,2,c
  4499  003EEA  0012               	return	
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;tmr_drv.c: 290: {
  4503                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  4504  003EEC  51A3               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  4505  003EEE  EC03  F034         	call	_Tmr_StartTmr
  4506                           
  4507                           ;tmr_drv.c: 293: }
  4508  003EF2  0012               	return	
  4509  003EF4                     __end_of_Tmr_TmrBConfig:
  4510                           	opt stack 0
  4511                           tblptru	equ	0xFF8
  4512                           tblptrh	equ	0xFF7
  4513                           tblptrl	equ	0xFF6
  4514                           tablat	equ	0xFF5
  4515                           intcon	equ	0xFF2
  4516                           intcon2	equ	0xFF1
  4517                           intcon3	equ	0xFF0
  4518                           postinc0	equ	0xFEE
  4519                           wreg	equ	0xFE8
  4520                           postdec1	equ	0xFE5
  4521                           fsr1h	equ	0xFE2
  4522                           fsr1l	equ	0xFE1
  4523                           indf2	equ	0xFDF
  4524                           postinc2	equ	0xFDE
  4525                           postdec2	equ	0xFDD
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           status	equ	0xFD8
  4529                           
  4530 ;; *************** function _Tmr_TmrBPrSet *****************
  4531 ;; Defined at:
  4532 ;;		line 193 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  TmrNumb         1    wreg     unsigned char 
  4535 ;;  IntFreqHz       2   54[BANK0 ] unsigned short 
  4536 ;;  Prescaler       1   56[BANK0 ] unsigned char 
  4537 ;;  Postscaler      1   57[BANK0 ] unsigned char 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  TmrNumb         1   59[BANK0 ] unsigned char 
  4540 ;;  Divisor         4   60[BANK0 ] unsigned long 
  4541 ;;  TmrBPrCfgSts    1   58[BANK0 ] enum E7736
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      enum E7736
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4551 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4554 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4555 ;;Total ram usage:       10 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:   12
  4558 ;; This function calls:
  4559 ;;		___lldiv
  4560 ;;		___lmul
  4561 ;; This function is called by:
  4562 ;;		_Tmr_TmrBConfig
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	text9
  4567  003156                     __ptext9:
  4568                           	opt stack 0
  4569  003156                     _Tmr_TmrBPrSet:
  4570                           	opt stack 15
  4571                           
  4572                           ;incstack = 0
  4573                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  4574  003156  0100               	movlb	0	; () banked
  4575  003158  6F9B               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  4576                           
  4577                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  4578                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  4579  00315A  0E00               	movlw	0
  4580  00315C  0100               	movlb	0	; () banked
  4581  00315E  6F9C               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  4582  003160  0E00               	movlw	0
  4583  003162  6F9D               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  4584  003164  0E00               	movlw	0
  4585  003166  6F9E               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  4586  003168  0E00               	movlw	0
  4587  00316A  6F9F               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  4591  00316C  5198               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  4592  00316E  0399               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  4593  003170  CFF3 F07D          	movff	prodl,___lmul@multiplier
  4594  003174  CFF4 F07E          	movff	prodh,___lmul@multiplier+1
  4595  003178  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
  4596  00317A  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
  4597  00317C  C096  F081         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  4598  003180  C097  F082         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  4599  003184  6B83               	clrf	(___lmul@multiplicand+2)& (0+255),b
  4600  003186  6B84               	clrf	(___lmul@multiplicand+3)& (0+255),b
  4601  003188  ECBA  F02C         	call	___lmul	;wreg free
  4602  00318C  C07D  F09C         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  4603  003190  C07E  F09D         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  4604  003194  C07F  F09E         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  4605  003198  C080  F09F         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  4606                           
  4607                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  4608  00319C  0E00               	movlw	0
  4609  00319E  0100               	movlb	0	; () banked
  4610  0031A0  6F89               	movwf	___lldiv@dividend& (0+255),b
  4611  0031A2  0E1B               	movlw	27
  4612  0031A4  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4613  0031A6  0EB7               	movlw	183
  4614  0031A8  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4615  0031AA  0E00               	movlw	0
  4616  0031AC  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4617  0031AE  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4618  0031B2  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4619  0031B6  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4620  0031BA  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4621  0031BE  ECFE  F028         	call	___lldiv	;wreg free
  4622  0031C2  0100               	movlb	0	; () banked
  4623  0031C4  518C               	movf	(?___lldiv+3)& (0+255),w,b
  4624  0031C6  118B               	iorwf	(?___lldiv+2)& (0+255),w,b
  4625  0031C8  E13A               	bnz	l15329
  4626  0031CA  058A               	decf	(?___lldiv+1)& (0+255),w,b
  4627  0031CC  A0D8               	btfss	status,0,c
  4628  0031CE  D02D               	goto	l529
  4629  0031D0  D036               	goto	l528
  4630  0031D2                     
  4631                           ; BSR set to: 0
  4632                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4633                           
  4634                           ; BSR set to: 0
  4635  0031D2  0E00               	movlw	0
  4636  0031D4  6F89               	movwf	___lldiv@dividend& (0+255),b
  4637  0031D6  0E1B               	movlw	27
  4638  0031D8  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4639  0031DA  0EB7               	movlw	183
  4640  0031DC  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4641  0031DE  0E00               	movlw	0
  4642  0031E0  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4643  0031E2  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4644  0031E6  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4645  0031EA  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4646  0031EE  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4647  0031F2  ECFE  F028         	call	___lldiv	;wreg free
  4648  0031F6  0100               	movlb	0	; () banked
  4649  0031F8  5189               	movf	?___lldiv& (0+255),w,b
  4650  0031FA  6ECB               	movwf	4043,c	;volatile
  4651                           
  4652                           ;tmr_drv.c: 210: break;
  4653  0031FC  D01D               	goto	l531
  4654  0031FE                     
  4655                           ; BSR set to: 0
  4656                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  4657                           
  4658                           ; BSR set to: 0
  4659  0031FE  0E00               	movlw	0
  4660  003200  6F89               	movwf	___lldiv@dividend& (0+255),b
  4661  003202  0E1B               	movlw	27
  4662  003204  6F8A               	movwf	(___lldiv@dividend+1)& (0+255),b
  4663  003206  0EB7               	movlw	183
  4664  003208  6F8B               	movwf	(___lldiv@dividend+2)& (0+255),b
  4665  00320A  0E00               	movlw	0
  4666  00320C  6F8C               	movwf	(___lldiv@dividend+3)& (0+255),b
  4667  00320E  C09C  F08D         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  4668  003212  C09D  F08E         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  4669  003216  C09E  F08F         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  4670  00321A  C09F  F090         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  4671  00321E  ECFE  F028         	call	___lldiv	;wreg free
  4672  003222  0100               	movlb	0	; () banked
  4673  003224  5189               	movf	?___lldiv& (0+255),w,b
  4674  003226  6E77               	movwf	3959,c	;volatile
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;tmr_drv.c: 219: }
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;tmr_drv.c: 218: break;
  4681                           
  4682                           ;tmr_drv.c: 217: default:
  4683                           
  4684                           ;tmr_drv.c: 215: break;
  4685  003228  D007               	goto	l531
  4686  00322A                     l529:
  4687                           
  4688                           ; BSR set to: 0
  4689                           
  4690                           ; BSR set to: 0
  4691  00322A  519B               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  4692                           
  4693                           ; Switch size 1, requested type "space"
  4694                           ; Number of cases is 2, Range of values is 2 to 4
  4695                           ; switch strategies available:
  4696                           ; Name         Instructions Cycles
  4697                           ; simple_byte            7     4 (average)
  4698                           ;	Chosen strategy is simple_byte
  4699  00322C  0A02               	xorlw	2	; case 2
  4700  00322E  B4D8               	btfsc	status,2,c
  4701  003230  D7D0               	goto	l530
  4702  003232  0A06               	xorlw	6	; case 4
  4703  003234  B4D8               	btfsc	status,2,c
  4704  003236  D7E3               	goto	l532
  4705  003238                     l531:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  4709                           
  4710                           ; BSR set to: 0
  4711  003238  0E00               	movlw	0
  4712  00323A  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4713                           
  4714                           ;tmr_drv.c: 223: }
  4715  00323C  0012               	return	
  4716  00323E                     l528:
  4717  00323E                     l15329:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;tmr_drv.c: 224: else
  4721                           ;tmr_drv.c: 225: {
  4722                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  4723  00323E  0E01               	movlw	1
  4724  003240  6F9A               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  4725                           
  4726                           ; BSR set to: 0
  4727  003242  0012               	return	
  4728  003244                     __end_of_Tmr_TmrBPrSet:
  4729                           	opt stack 0
  4730                           tblptru	equ	0xFF8
  4731                           tblptrh	equ	0xFF7
  4732                           tblptrl	equ	0xFF6
  4733                           tablat	equ	0xFF5
  4734                           prodh	equ	0xFF4
  4735                           prodl	equ	0xFF3
  4736                           intcon	equ	0xFF2
  4737                           intcon2	equ	0xFF1
  4738                           intcon3	equ	0xFF0
  4739                           postinc0	equ	0xFEE
  4740                           wreg	equ	0xFE8
  4741                           postdec1	equ	0xFE5
  4742                           fsr1h	equ	0xFE2
  4743                           fsr1l	equ	0xFE1
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function _Tmr_TmrBIrqSet *****************
  4752 ;; Defined at:
  4753 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  TmrNumb         1    wreg     unsigned char 
  4756 ;;  Priority        1   29[BANK0 ] enum E7716
  4757 ;;  TmrIrqSts       1   30[BANK0 ] unsigned char 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  TmrNumb         1   31[BANK0 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;Total ram usage:        3 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:   11
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_Tmr_TmrBConfig
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text10
  4784  005E9E                     __ptext10:
  4785                           	opt stack 0
  4786  005E9E                     _Tmr_TmrBIrqSet:
  4787                           	opt stack 16
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;incstack = 0
  4791                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  4792  005E9E  0100               	movlb	0	; () banked
  4793  005EA0  6F7F               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  4794                           
  4795                           ;tmr_drv.c: 156: switch (TmrNumb)
  4796  005EA2  D01A               	goto	l520
  4797  005EA4                     l521:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  4801  005EA4  929E               	bcf	3998,1,c	;volatile
  4802                           
  4803                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  4804  005EA6  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4805  005EA8  D002               	bra	u9105
  4806  005EAA  929F               	bcf	3999,1,c	;volatile
  4807  005EAC  D001               	bra	u9106
  4808  005EAE                     u9105:
  4809  005EAE  829F               	bsf	3999,1,c	;volatile
  4810  005EB0                     u9106:
  4811                           
  4812                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  4813  005EB0  0100               	movlb	0	; () banked
  4814  005EB2  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4815  005EB4  D002               	bra	u9115
  4816  005EB6  929D               	bcf	3997,1,c	;volatile
  4817  005EB8  D001               	bra	u9116
  4818  005EBA                     u9115:
  4819  005EBA  829D               	bsf	3997,1,c	;volatile
  4820  005EBC                     u9116:
  4821                           
  4822                           ;tmr_drv.c: 165: break;
  4823  005EBC  0012               	return	
  4824  005EBE                     l523:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  4828  005EBE  96A4               	bcf	4004,3,c	;volatile
  4829                           
  4830                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  4831  005EC0  B17D               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  4832  005EC2  D002               	bra	u9125
  4833  005EC4  96A5               	bcf	4005,3,c	;volatile
  4834  005EC6  D001               	bra	u9126
  4835  005EC8                     u9125:
  4836  005EC8  86A5               	bsf	4005,3,c	;volatile
  4837  005ECA                     u9126:
  4838                           
  4839                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  4840  005ECA  0100               	movlb	0	; () banked
  4841  005ECC  B17E               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  4842  005ECE  D002               	bra	u9135
  4843  005ED0  96A3               	bcf	4003,3,c	;volatile
  4844  005ED2  D001               	bra	u9136
  4845  005ED4                     u9135:
  4846  005ED4  86A3               	bsf	4003,3,c	;volatile
  4847  005ED6                     u9136:
  4848                           
  4849                           ;tmr_drv.c: 178: }
  4850                           
  4851                           ;tmr_drv.c: 177: break;
  4852                           
  4853                           ;tmr_drv.c: 176: default:
  4854                           
  4855                           ;tmr_drv.c: 174: break;
  4856  005ED6  0012               	return	
  4857  005ED8                     l520:
  4858  005ED8  0100               	movlb	0	; () banked
  4859  005EDA  517F               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  4860                           
  4861                           ; Switch size 1, requested type "space"
  4862                           ; Number of cases is 2, Range of values is 2 to 4
  4863                           ; switch strategies available:
  4864                           ; Name         Instructions Cycles
  4865                           ; simple_byte            7     4 (average)
  4866                           ;	Chosen strategy is simple_byte
  4867  005EDC  0A02               	xorlw	2	; case 2
  4868  005EDE  B4D8               	btfsc	status,2,c
  4869  005EE0  D7E1               	goto	l521
  4870  005EE2  0A06               	xorlw	6	; case 4
  4871  005EE4  A4D8               	btfss	status,2,c
  4872  005EE6  0012               	return	
  4873  005EE8  D7EA               	goto	l523
  4874  005EEA                     __end_of_Tmr_TmrBIrqSet:
  4875                           	opt stack 0
  4876                           tblptru	equ	0xFF8
  4877                           tblptrh	equ	0xFF7
  4878                           tblptrl	equ	0xFF6
  4879                           tablat	equ	0xFF5
  4880                           prodh	equ	0xFF4
  4881                           prodl	equ	0xFF3
  4882                           intcon	equ	0xFF2
  4883                           intcon2	equ	0xFF1
  4884                           intcon3	equ	0xFF0
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           postdec1	equ	0xFE5
  4888                           fsr1h	equ	0xFE2
  4889                           fsr1l	equ	0xFE1
  4890                           indf2	equ	0xFDF
  4891                           postinc2	equ	0xFDE
  4892                           postdec2	equ	0xFDD
  4893                           fsr2h	equ	0xFDA
  4894                           fsr2l	equ	0xFD9
  4895                           status	equ	0xFD8
  4896                           
  4897 ;; *************** function _Tmr_StartTmr *****************
  4898 ;; Defined at:
  4899 ;;		line 242 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  TmrNumb         1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  TmrNumb         1   29[BANK0 ] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;Total ram usage:        1 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:   11
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_Tmr_TmrBConfig
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text11
  4928  006806                     __ptext11:
  4929                           	opt stack 0
  4930  006806                     _Tmr_StartTmr:
  4931                           	opt stack 16
  4932                           
  4933                           ;incstack = 0
  4934                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4935  006806  0100               	movlb	0	; () banked
  4936  006808  6F7D               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4937                           
  4938                           ;tmr_drv.c: 245: switch (TmrNumb)
  4939  00680A  D004               	goto	l538
  4940  00680C                     l539:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4944  00680C  84CA               	bsf	4042,2,c	;volatile
  4945                           
  4946                           ;tmr_drv.c: 250: break;
  4947  00680E  0012               	return	
  4948  006810                     l541:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4952  006810  8476               	bsf	3958,2,c	;volatile
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;tmr_drv.c: 259: }
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;tmr_drv.c: 258: break;
  4959                           
  4960                           ;tmr_drv.c: 257: default:
  4961                           
  4962                           ;tmr_drv.c: 255: break;
  4963  006812  0012               	return	
  4964  006814                     l538:
  4965                           
  4966                           ; BSR set to: 0
  4967  006814  0100               	movlb	0	; () banked
  4968  006816  517D               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4969                           
  4970                           ; Switch size 1, requested type "space"
  4971                           ; Number of cases is 2, Range of values is 2 to 4
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte            7     4 (average)
  4975                           ;	Chosen strategy is simple_byte
  4976  006818  0A02               	xorlw	2	; case 2
  4977  00681A  B4D8               	btfsc	status,2,c
  4978  00681C  D7F7               	goto	l539
  4979  00681E  0A06               	xorlw	6	; case 4
  4980  006820  A4D8               	btfss	status,2,c
  4981  006822  0012               	return	
  4982  006824  D7F5               	goto	l541
  4983  006826                     __end_of_Tmr_StartTmr:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodh	equ	0xFF4
  4990                           prodl	equ	0xFF3
  4991                           intcon	equ	0xFF2
  4992                           intcon2	equ	0xFF1
  4993                           intcon3	equ	0xFF0
  4994                           postinc0	equ	0xFEE
  4995                           wreg	equ	0xFE8
  4996                           postdec1	equ	0xFE5
  4997                           fsr1h	equ	0xFE2
  4998                           fsr1l	equ	0xFE1
  4999                           indf2	equ	0xFDF
  5000                           postinc2	equ	0xFDE
  5001                           postdec2	equ	0xFDD
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function _TmrBInit *****************
  5007 ;; Defined at:
  5008 ;;		line 72 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  TmrNumb         1    wreg     unsigned char 
  5011 ;;  Prescaler       1   29[BANK0 ] unsigned char 
  5012 ;;  Postscaler      1   30[BANK0 ] unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  TmrNumb         1   32[BANK0 ] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;Total ram usage:        4 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:   11
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_Tmr_TmrBConfig
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text12
  5039  004B3C                     __ptext12:
  5040                           	opt stack 0
  5041  004B3C                     _TmrBInit:
  5042                           	opt stack 16
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;incstack = 0
  5046                           ;TmrBInit@TmrNumb stored from wreg
  5047  004B3C  0100               	movlb	0	; () banked
  5048  004B3E  6F80               	movwf	TmrBInit@TmrNumb& (0+255),b
  5049                           
  5050                           ;tmr_drv.c: 75: switch (TmrNumb)
  5051  004B40  D03F               	goto	l500
  5052  004B42                     l503:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  5056  004B42  90CA               	bcf	4042,0,c	;volatile
  5057  004B44  D001               	goto	L1
  5058  004B46                     l505:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  5062  004B46  80CA               	bsf	4042,0,c	;volatile
  5063  004B48                     L1:
  5064                           
  5065                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  5066  004B48  92CA               	bcf	4042,1,c	;volatile
  5067                           
  5068                           ;tmr_drv.c: 91: break;
  5069  004B4A  D00E               	goto	l504
  5070  004B4C                     l506:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  5074  004B4C  80CA               	bsf	4042,0,c	;volatile
  5075                           
  5076                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  5077  004B4E  82CA               	bsf	4042,1,c	;volatile
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;tmr_drv.c: 100: }
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;tmr_drv.c: 99: break;
  5084                           
  5085                           ;tmr_drv.c: 98: default:
  5086                           
  5087                           ;tmr_drv.c: 96: break;
  5088  004B50  D00B               	goto	l504
  5089  004B52                     
  5090                           ; BSR set to: 0
  5091  004B52  0100               	movlb	0	; () banked
  5092  004B54  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5093                           
  5094                           ; Switch size 1, requested type "space"
  5095                           ; Number of cases is 3, Range of values is 1 to 16
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte           10     6 (average)
  5099                           ;	Chosen strategy is simple_byte
  5100  004B56  0A01               	xorlw	1	; case 1
  5101  004B58  B4D8               	btfsc	status,2,c
  5102  004B5A  D7F3               	goto	l503
  5103  004B5C  0A05               	xorlw	5	; case 4
  5104  004B5E  B4D8               	btfsc	status,2,c
  5105  004B60  D7F2               	goto	l505
  5106  004B62  0A14               	xorlw	20	; case 16
  5107  004B64  B4D8               	btfsc	status,2,c
  5108  004B66  D7F2               	goto	l506
  5109  004B68                     l504:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  5113                           
  5114                           ; BSR set to: 0
  5115  004B68  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5116  004B6C  0EFF               	movlw	255
  5117  004B6E  277F               	addwf	??_TmrBInit& (0+255),f,b
  5118  004B70  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5119  004B72  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5120  004B74  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5121  004B76  50CA               	movf	4042,w,c	;volatile
  5122  004B78  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5123  004B7A  0B87               	andlw	-121
  5124  004B7C  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5125  004B7E  6ECA               	movwf	4042,c	;volatile
  5126                           
  5127                           ;tmr_drv.c: 104: break;
  5128  004B80  0012               	return	
  5129  004B82                     l511:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  5133  004B82  9076               	bcf	3958,0,c	;volatile
  5134  004B84  D001               	goto	L2
  5135  004B86                     l513:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  5139  004B86  8076               	bsf	3958,0,c	;volatile
  5140  004B88                     L2:
  5141                           
  5142                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  5143  004B88  9276               	bcf	3958,1,c	;volatile
  5144                           
  5145                           ;tmr_drv.c: 120: break;
  5146  004B8A  D00D               	goto	l512
  5147  004B8C                     l514:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  5151  004B8C  8076               	bsf	3958,0,c	;volatile
  5152                           
  5153                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  5154  004B8E  8276               	bsf	3958,1,c	;volatile
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;tmr_drv.c: 129: }
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;tmr_drv.c: 128: break;
  5161                           
  5162                           ;tmr_drv.c: 127: default:
  5163                           
  5164                           ;tmr_drv.c: 125: break;
  5165  004B90  D00A               	goto	l512
  5166  004B92                     
  5167                           ; BSR set to: 0
  5168                           
  5169                           ; BSR set to: 0
  5170  004B92  517D               	movf	TmrBInit@Prescaler& (0+255),w,b
  5171                           
  5172                           ; Switch size 1, requested type "space"
  5173                           ; Number of cases is 3, Range of values is 1 to 16
  5174                           ; switch strategies available:
  5175                           ; Name         Instructions Cycles
  5176                           ; simple_byte           10     6 (average)
  5177                           ;	Chosen strategy is simple_byte
  5178  004B94  0A01               	xorlw	1	; case 1
  5179  004B96  B4D8               	btfsc	status,2,c
  5180  004B98  D7F4               	goto	l511
  5181  004B9A  0A05               	xorlw	5	; case 4
  5182  004B9C  B4D8               	btfsc	status,2,c
  5183  004B9E  D7F3               	goto	l513
  5184  004BA0  0A14               	xorlw	20	; case 16
  5185  004BA2  B4D8               	btfsc	status,2,c
  5186  004BA4  D7F3               	goto	l514
  5187  004BA6                     l512:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  5191                           
  5192                           ; BSR set to: 0
  5193  004BA6  C07E  F07F         	movff	TmrBInit@Postscaler,??_TmrBInit
  5194  004BAA  0EFF               	movlw	255
  5195  004BAC  277F               	addwf	??_TmrBInit& (0+255),f,b
  5196  004BAE  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5197  004BB0  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5198  004BB2  477F               	rlncf	??_TmrBInit& (0+255),f,b
  5199  004BB4  5076               	movf	3958,w,c	;volatile
  5200  004BB6  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5201  004BB8  0B87               	andlw	-121
  5202  004BBA  197F               	xorwf	??_TmrBInit& (0+255),w,b
  5203  004BBC  6E76               	movwf	3958,c	;volatile
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;tmr_drv.c: 137: }
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;tmr_drv.c: 136: break;
  5210                           
  5211                           ;tmr_drv.c: 135: default:
  5212                           
  5213                           ;tmr_drv.c: 133: break;
  5214  004BBE  0012               	return	
  5215  004BC0                     l500:
  5216                           
  5217                           ; BSR set to: 0
  5218  004BC0  0100               	movlb	0	; () banked
  5219  004BC2  5180               	movf	TmrBInit@TmrNumb& (0+255),w,b
  5220                           
  5221                           ; Switch size 1, requested type "space"
  5222                           ; Number of cases is 2, Range of values is 2 to 4
  5223                           ; switch strategies available:
  5224                           ; Name         Instructions Cycles
  5225                           ; simple_byte            7     4 (average)
  5226                           ;	Chosen strategy is simple_byte
  5227  004BC4  0A02               	xorlw	2	; case 2
  5228  004BC6  B4D8               	btfsc	status,2,c
  5229  004BC8  D7C4               	goto	l502
  5230  004BCA  0A06               	xorlw	6	; case 4
  5231  004BCC  A4D8               	btfss	status,2,c
  5232  004BCE  0012               	return	
  5233  004BD0  D7E0               	goto	l510
  5234  004BD2                     __end_of_TmrBInit:
  5235                           	opt stack 0
  5236                           tblptru	equ	0xFF8
  5237                           tblptrh	equ	0xFF7
  5238                           tblptrl	equ	0xFF6
  5239                           tablat	equ	0xFF5
  5240                           prodh	equ	0xFF4
  5241                           prodl	equ	0xFF3
  5242                           intcon	equ	0xFF2
  5243                           intcon2	equ	0xFF1
  5244                           intcon3	equ	0xFF0
  5245                           postinc0	equ	0xFEE
  5246                           wreg	equ	0xFE8
  5247                           postdec1	equ	0xFE5
  5248                           fsr1h	equ	0xFE2
  5249                           fsr1l	equ	0xFE1
  5250                           indf2	equ	0xFDF
  5251                           postinc2	equ	0xFDE
  5252                           postdec2	equ	0xFDD
  5253                           fsr2h	equ	0xFDA
  5254                           fsr2l	equ	0xFD9
  5255                           status	equ	0xFD8
  5256                           
  5257 ;; *************** function _Sch_MainScheduler *****************
  5258 ;; Defined at:
  5259 ;;		line 175 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;Total ram usage:        0 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:   22
  5280 ;; This function calls:
  5281 ;;		_InitializeTasks
  5282 ;;		_ScheduleTasks
  5283 ;; This function is called by:
  5284 ;;		_main
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text13
  5289  006884                     __ptext13:
  5290                           	opt stack 0
  5291  006884                     _Sch_MainScheduler:
  5292                           	opt stack 8
  5293                           
  5294                           ;os_sched.c: 178: InitializeTasks();
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;incstack = 0
  5298  006884  ECF3  F029         	call	_InitializeTasks	;wreg free
  5299                           
  5300                           ;os_sched.c: 180: SystemState = RunningState;
  5301  006888  0E01               	movlw	1
  5302  00688A  0100               	movlb	0	; () banked
  5303  00688C  6FD5               	movwf	_SystemState& (0+255),b
  5304  00688E                     
  5305                           ;os_sched.c: 188: {
  5306                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  5307                           
  5308                           ; BSR set to: 0
  5309  00688E  0102               	movlb	2	; () banked
  5310  006890  51F4               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  5311  006892  A4D8               	btfss	status,2,c
  5312  006894  D7FC               	goto	l790
  5313                           
  5314                           ; BSR set to: 2
  5315                           ;os_sched.c: 191: {
  5316                           ;os_sched.c: 196: ScheduleTasks();
  5317  006896  EC13  F017         	call	_ScheduleTasks	;wreg free
  5318                           
  5319                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  5320  00689A  0E01               	movlw	1
  5321  00689C  0102               	movlb	2	; () banked
  5322  00689E  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
  5323                           
  5324                           ; BSR set to: 2
  5325                           
  5326                           ; BSR set to: 2
  5327  0068A0  D7F6               	goto	l790
  5328  0068A2                     __end_of_Sch_MainScheduler:
  5329                           	opt stack 0
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           intcon2	equ	0xFF1
  5338                           intcon3	equ	0xFF0
  5339                           postinc0	equ	0xFEE
  5340                           wreg	equ	0xFE8
  5341                           postdec1	equ	0xFE5
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           indf2	equ	0xFDF
  5345                           postinc2	equ	0xFDE
  5346                           postdec2	equ	0xFDD
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _ScheduleTasks *****************
  5352 ;; Defined at:
  5353 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  ActiveTaskIn    1    4[BANK4 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0
  5370 ;;      Totals:         0       0       0       0       0       5       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;Total ram usage:        5 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:   21
  5374 ;; This function calls:
  5375 ;;		_I2cSlv_MainTask
  5376 ;;		_Led_MainTask
  5377 ;;		_MdmHttp_MainTask
  5378 ;;		_Mdm_DrvMainFn
  5379 ;;		_Mdm_MainTask
  5380 ;;		_MyApp_Task
  5381 ;;		_Rtcm_MainTask
  5382 ;;		_Term_MainTask
  5383 ;;		_UsbDevice_MainTask
  5384 ;;		_Wdg_MainTask
  5385 ;; This function is called by:
  5386 ;;		_Sch_MainScheduler
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text14
  5391  002E26                     __ptext14:
  5392                           	opt stack 0
  5393  002E26                     _ScheduleTasks:
  5394                           	opt stack 8
  5395                           
  5396                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  5397                           
  5398                           ; BSR set to: 2
  5399                           ;incstack = 0
  5400  002E26  0E00               	movlw	0
  5401  002E28  0104               	movlb	4	; () banked
  5402  002E2A  6FEE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5403                           
  5404                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  5405  002E2C  0E00               	movlw	0
  5406  002E2E  6FEE               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  5407  002E30                     l16577:
  5408                           
  5409                           ; BSR set to: 4
  5410  002E30  0E30               	movlw	low _TaskNumber
  5411  002E32  6EF6               	movwf	tblptrl,c
  5412  002E34                     	if	1	;There is more than 1 active tblptr byte
  5413  002E34  0EFC               	movlw	high _TaskNumber
  5414  002E36  6EF7               	movwf	tblptrh,c
  5415  002E38                     	endif
  5416  002E38                     	if	0	;There are less than 3 active tblptr bytes
  5417  002E38                     	endif
  5418  002E38  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5419  002E3A  6FEA               	movwf	??_ScheduleTasks& (0+255),b
  5420  002E3C  6BEB               	clrf	(??_ScheduleTasks+1)& (0+255),b
  5421  002E3E  0009               	tblrd		*+
  5422  002E40  50F5               	movf	tablat,w,c
  5423  002E42  5DEA               	subwf	??_ScheduleTasks& (0+255),w,b
  5424  002E44  0009               	tblrd		*+
  5425  002E46  50F5               	movf	tablat,w,c
  5426  002E48  59EB               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  5427  002E4A  B0D8               	btfsc	status,0,c
  5428  002E4C  0012               	return	
  5429                           
  5430                           ; BSR set to: 4
  5431                           ;os_sched.c: 106: {
  5432                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  5433                           
  5434                           ; BSR set to: 4
  5435                           
  5436                           ; BSR set to: 4
  5437  002E4E  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5438  002E50  0D08               	mullw	8
  5439  002E52  0E03               	movlw	3
  5440  002E54  26F3               	addwf	prodl,f,c
  5441  002E56  0E00               	movlw	0
  5442  002E58  22F4               	addwfc	prodh,f,c
  5443  002E5A  0EA4               	movlw	low _TaskTable
  5444  002E5C  24F3               	addwf	prodl,w,c
  5445  002E5E  6ED9               	movwf	fsr2l,c
  5446  002E60  0E05               	movlw	high _TaskTable
  5447  002E62  20F4               	addwfc	prodh,w,c
  5448  002E64  6EDA               	movwf	fsr2h,c
  5449  002E66  2ADE               	incf	postinc2,f,c
  5450  002E68  0E00               	movlw	0
  5451  002E6A  22DD               	addwfc	postdec2,f,c
  5452                           
  5453                           ; BSR set to: 4
  5454                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  5455  002E6C  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5456  002E6E  0D08               	mullw	8
  5457  002E70  0E05               	movlw	5
  5458  002E72  26F3               	addwf	prodl,f,c
  5459  002E74  0E00               	movlw	0
  5460  002E76  22F4               	addwfc	prodh,f,c
  5461  002E78  0EA4               	movlw	low _TaskTable
  5462  002E7A  24F3               	addwf	prodl,w,c
  5463  002E7C  6ED9               	movwf	fsr2l,c
  5464  002E7E  0E05               	movlw	high _TaskTable
  5465  002E80  20F4               	addwfc	prodh,w,c
  5466  002E82  6EDA               	movwf	fsr2h,c
  5467  002E84  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5468  002E86  0D08               	mullw	8
  5469  002E88  0E03               	movlw	3
  5470  002E8A  26F3               	addwf	prodl,f,c
  5471  002E8C  0E00               	movlw	0
  5472  002E8E  22F4               	addwfc	prodh,f,c
  5473  002E90  0EA4               	movlw	low _TaskTable
  5474  002E92  24F3               	addwf	prodl,w,c
  5475  002E94  6EE1               	movwf	fsr1l,c
  5476  002E96  0E05               	movlw	high _TaskTable
  5477  002E98  20F4               	addwfc	prodh,w,c
  5478  002E9A  6EE2               	movwf	fsr1h,c
  5479  002E9C  50DE               	movf	postinc2,w,c
  5480  002E9E  5CE6               	subwf	postinc1,w,c
  5481  002EA0  50DE               	movf	postinc2,w,c
  5482  002EA2  58E6               	subwfb	postinc1,w,c
  5483  002EA4  A0D8               	btfss	status,0,c
  5484  002EA6  D04E               	goto	l775
  5485                           
  5486                           ; BSR set to: 4
  5487                           ;os_sched.c: 111: {
  5488                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  5489  002EA8  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5490  002EAA  0D08               	mullw	8
  5491  002EAC  0E03               	movlw	3
  5492  002EAE  26F3               	addwf	prodl,f,c
  5493  002EB0  0E00               	movlw	0
  5494  002EB2  22F4               	addwfc	prodh,f,c
  5495  002EB4  0EA4               	movlw	low _TaskTable
  5496  002EB6  24F3               	addwf	prodl,w,c
  5497  002EB8  6ED9               	movwf	fsr2l,c
  5498  002EBA  0E05               	movlw	high _TaskTable
  5499  002EBC  20F4               	addwfc	prodh,w,c
  5500  002EBE  6EDA               	movwf	fsr2h,c
  5501  002EC0  0E00               	movlw	0
  5502  002EC2  6EDE               	movwf	postinc2,c
  5503  002EC4  0E00               	movlw	0
  5504  002EC6  6EDD               	movwf	postdec2,c
  5505                           
  5506                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  5507  002EC8  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5508  002ECA  0D08               	mullw	8
  5509  002ECC  0E02               	movlw	2
  5510  002ECE  26F3               	addwf	prodl,f,c
  5511  002ED0  0E00               	movlw	0
  5512  002ED2  22F4               	addwfc	prodh,f,c
  5513  002ED4  0EA4               	movlw	low _TaskTable
  5514  002ED6  24F3               	addwf	prodl,w,c
  5515  002ED8  6ED9               	movwf	fsr2l,c
  5516  002EDA  0E05               	movlw	high _TaskTable
  5517  002EDC  20F4               	addwfc	prodh,w,c
  5518  002EDE  6EDA               	movwf	fsr2h,c
  5519  002EE0  0E01               	movlw	1
  5520  002EE2  6EDF               	movwf	indf2,c
  5521                           
  5522                           ; BSR set to: 4
  5523                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5524  002EE4  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5525  002EE6  0D08               	mullw	8
  5526  002EE8  0EA4               	movlw	low _TaskTable
  5527  002EEA  24F3               	addwf	prodl,w,c
  5528  002EEC  6ED9               	movwf	fsr2l,c
  5529  002EEE  0E05               	movlw	high _TaskTable
  5530  002EF0  20F4               	addwfc	prodh,w,c
  5531  002EF2  6EDA               	movwf	fsr2h,c
  5532  002EF4  D801               	call	u16348
  5533  002EF6  D017               	goto	u16349
  5534  002EF8                     u16348:
  5535  002EF8  0005               	push	
  5536  002EFA  6EFA               	movwf	pclath,c
  5537  002EFC  50DE               	movf	postinc2,w,c
  5538  002EFE  6EFD               	movwf	tosl,c
  5539  002F00  50DE               	movf	postinc2,w,c
  5540  002F02  6EFE               	movwf	tosh,c
  5541  002F04  50F8               	movf	tblptru,w,c
  5542  002F06  6EFF               	movwf	tosu,c
  5543  002F08  50FA               	movf	pclath,w,c
  5544  002F0A  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5545  002F0C  0D08               	mullw	8
  5546  002F0E  0E07               	movlw	7
  5547  002F10  26F3               	addwf	prodl,f,c
  5548  002F12  0E00               	movlw	0
  5549  002F14  22F4               	addwfc	prodh,f,c
  5550  002F16  0EA4               	movlw	low _TaskTable
  5551  002F18  24F3               	addwf	prodl,w,c
  5552  002F1A  6ED9               	movwf	fsr2l,c
  5553  002F1C  0E05               	movlw	high _TaskTable
  5554  002F1E  20F4               	addwfc	prodh,w,c
  5555  002F20  6EDA               	movwf	fsr2h,c
  5556  002F22  50DF               	movf	indf2,w,c
  5557  002F24  0012               	return		;indir
  5558  002F26                     u16349:
  5559                           
  5560                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  5561  002F26  0104               	movlb	4	; () banked
  5562  002F28  51EE               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  5563  002F2A  0D08               	mullw	8
  5564  002F2C  0E02               	movlw	2
  5565  002F2E  26F3               	addwf	prodl,f,c
  5566  002F30  0E00               	movlw	0
  5567  002F32  22F4               	addwfc	prodh,f,c
  5568  002F34  0EA4               	movlw	low _TaskTable
  5569  002F36  24F3               	addwf	prodl,w,c
  5570  002F38  6ED9               	movwf	fsr2l,c
  5571  002F3A  0E05               	movlw	high _TaskTable
  5572  002F3C  20F4               	addwfc	prodh,w,c
  5573  002F3E  6EDA               	movwf	fsr2h,c
  5574  002F40  0E00               	movlw	0
  5575  002F42  6EDF               	movwf	indf2,c
  5576  002F44                     l775:
  5577                           
  5578                           ; BSR set to: 4
  5579                           
  5580                           ; BSR set to: 4
  5581                           
  5582                           ;os_sched.c: 117: else
  5583                           ;os_sched.c: 118: {
  5584                           
  5585                           ; BSR set to: 4
  5586  002F44  2BEE               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  5587  002F46  D774               	goto	l16577
  5588  002F48                     __end_of_ScheduleTasks:
  5589                           	opt stack 0
  5590                           tosu	equ	0xFFF
  5591                           tosh	equ	0xFFE
  5592                           tosl	equ	0xFFD
  5593                           pclath	equ	0xFFA
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           intcon2	equ	0xFF1
  5602                           intcon3	equ	0xFF0
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           postinc1	equ	0xFE6
  5606                           postdec1	equ	0xFE5
  5607                           fsr1h	equ	0xFE2
  5608                           fsr1l	equ	0xFE1
  5609                           indf2	equ	0xFDF
  5610                           postinc2	equ	0xFDE
  5611                           postdec2	equ	0xFDD
  5612                           fsr2h	equ	0xFDA
  5613                           fsr2l	equ	0xFD9
  5614                           status	equ	0xFD8
  5615                           
  5616 ;; *************** function _InitializeTasks *****************
  5617 ;; Defined at:
  5618 ;;		line 79 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  ActiveTaskIn    1    2[BANK4 ] unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       1       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;Total ram usage:        3 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:   21
  5639 ;; This function calls:
  5640 ;;		_I2cSlv_MainTask
  5641 ;;		_Led_MainTask
  5642 ;;		_MdmHttp_MainTask
  5643 ;;		_Mdm_DrvMainFn
  5644 ;;		_Mdm_MainTask
  5645 ;;		_MyApp_Task
  5646 ;;		_Rtcm_MainTask
  5647 ;;		_Term_MainTask
  5648 ;;		_UsbDevice_MainTask
  5649 ;;		_Wdg_MainTask
  5650 ;; This function is called by:
  5651 ;;		_Sch_MainScheduler
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text15
  5656  0053E6                     __ptext15:
  5657                           	opt stack 0
  5658  0053E6                     _InitializeTasks:
  5659                           	opt stack 8
  5660                           
  5661                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  5662                           
  5663                           ; BSR set to: 4
  5664                           ;incstack = 0
  5665  0053E6  0E00               	movlw	0
  5666  0053E8  0104               	movlb	4	; () banked
  5667  0053EA  6FEC               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5668                           
  5669                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  5670  0053EC  0E00               	movlw	0
  5671  0053EE  6FEC               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  5672  0053F0                     l16565:
  5673                           
  5674                           ; BSR set to: 4
  5675  0053F0  0E30               	movlw	low _TaskNumber
  5676  0053F2  6EF6               	movwf	tblptrl,c
  5677  0053F4                     	if	1	;There is more than 1 active tblptr byte
  5678  0053F4  0EFC               	movlw	high _TaskNumber
  5679  0053F6  6EF7               	movwf	tblptrh,c
  5680  0053F8                     	endif
  5681  0053F8                     	if	0	;There are less than 3 active tblptr bytes
  5682  0053F8                     	endif
  5683  0053F8  51EC               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5684  0053FA  6FEA               	movwf	??_InitializeTasks& (0+255),b
  5685  0053FC  6BEB               	clrf	(??_InitializeTasks+1)& (0+255),b
  5686  0053FE  0009               	tblrd		*+
  5687  005400  50F5               	movf	tablat,w,c
  5688  005402  5DEA               	subwf	??_InitializeTasks& (0+255),w,b
  5689  005404  0009               	tblrd		*+
  5690  005406  50F5               	movf	tablat,w,c
  5691  005408  59EB               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  5692  00540A  B0D8               	btfsc	status,0,c
  5693  00540C  0012               	return	
  5694                           
  5695                           ; BSR set to: 4
  5696                           ;os_sched.c: 86: {
  5697                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  5698                           
  5699                           ; BSR set to: 4
  5700                           
  5701                           ; BSR set to: 4
  5702  00540E  51EC               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5703  005410  0D08               	mullw	8
  5704  005412  0EA4               	movlw	low _TaskTable
  5705  005414  24F3               	addwf	prodl,w,c
  5706  005416  6ED9               	movwf	fsr2l,c
  5707  005418  0E05               	movlw	high _TaskTable
  5708  00541A  20F4               	addwfc	prodh,w,c
  5709  00541C  6EDA               	movwf	fsr2h,c
  5710  00541E  D801               	call	u16308
  5711  005420  D017               	goto	u16309
  5712  005422                     u16308:
  5713  005422  0005               	push	
  5714  005424  6EFA               	movwf	pclath,c
  5715  005426  50DE               	movf	postinc2,w,c
  5716  005428  6EFD               	movwf	tosl,c
  5717  00542A  50DE               	movf	postinc2,w,c
  5718  00542C  6EFE               	movwf	tosh,c
  5719  00542E  50F8               	movf	tblptru,w,c
  5720  005430  6EFF               	movwf	tosu,c
  5721  005432  50FA               	movf	pclath,w,c
  5722  005434  51EC               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  5723  005436  0D08               	mullw	8
  5724  005438  0E07               	movlw	7
  5725  00543A  26F3               	addwf	prodl,f,c
  5726  00543C  0E00               	movlw	0
  5727  00543E  22F4               	addwfc	prodh,f,c
  5728  005440  0EA4               	movlw	low _TaskTable
  5729  005442  24F3               	addwf	prodl,w,c
  5730  005444  6ED9               	movwf	fsr2l,c
  5731  005446  0E05               	movlw	high _TaskTable
  5732  005448  20F4               	addwfc	prodh,w,c
  5733  00544A  6EDA               	movwf	fsr2h,c
  5734  00544C  50DF               	movf	indf2,w,c
  5735  00544E  0012               	return		;indir
  5736  005450                     u16309:
  5737  005450  0104               	movlb	4	; () banked
  5738  005452  2BEC               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  5739  005454  D7CD               	goto	l16565
  5740  005456                     __end_of_InitializeTasks:
  5741                           	opt stack 0
  5742                           tosu	equ	0xFFF
  5743                           tosh	equ	0xFFE
  5744                           tosl	equ	0xFFD
  5745                           pclath	equ	0xFFA
  5746                           tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           prodh	equ	0xFF4
  5751                           prodl	equ	0xFF3
  5752                           intcon	equ	0xFF2
  5753                           intcon2	equ	0xFF1
  5754                           intcon3	equ	0xFF0
  5755                           postinc0	equ	0xFEE
  5756                           wreg	equ	0xFE8
  5757                           postinc1	equ	0xFE6
  5758                           postdec1	equ	0xFE5
  5759                           fsr1h	equ	0xFE2
  5760                           fsr1l	equ	0xFE1
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           fsr2h	equ	0xFDA
  5765                           fsr2l	equ	0xFD9
  5766                           status	equ	0xFD8
  5767                           
  5768 ;; *************** function _MyApp_Task *****************
  5769 ;; Defined at:
  5770 ;;		line 148 in file "../Source/c/04_App/app.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  Options         1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  Options         1    0[COMRAM] unsigned char 
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; Hardware stack levels required when called:   19
  5791 ;; This function calls:
  5792 ;;		_Eeprom_Reset
  5793 ;;		_Led_SetLedBlinkTime
  5794 ;;		_addCmdFsm
  5795 ;;		_delCmdFsm
  5796 ;;		_detectCmd
  5797 ;;		_initFsm
  5798 ;;		_triggerCmdFsm
  5799 ;; This function is called by:
  5800 ;;		_InitializeTasks
  5801 ;;		_ScheduleTasks
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text16
  5806  00332C                     __ptext16:
  5807                           	opt stack 0
  5808  00332C                     _MyApp_Task:
  5809                           	opt stack 9
  5810                           
  5811                           ;app.c: 150: static gateFsmStates currentState = GATE_INIT;
  5812                           ;app.c: 152: switch (SystemState)
  5813                           
  5814                           ; BSR set to: 4
  5815                           ;incstack = 0
  5816  00332C  D069               	goto	l2590
  5817  00332E                     
  5818                           ;app.c: 157: Led_SetLedBlinkTime(1u,100,900);
  5819  00332E  0E00               	movlw	0
  5820  003330  0100               	movlb	0	; () banked
  5821  003332  6F7E               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  5822  003334  0E64               	movlw	100
  5823  003336  6F7D               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  5824  003338  0E03               	movlw	3
  5825  00333A  6F80               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  5826  00333C  0E84               	movlw	132
  5827  00333E  6F7F               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  5828  003340  0E01               	movlw	1
  5829  003342  ECBC  F02D         	call	_Led_SetLedBlinkTime
  5830                           
  5831                           ;app.c: 158: break;
  5832  003346  0012               	return	
  5833  003348                     
  5834                           ;app.c: 165: if (initFsm())
  5835  003348  EC18  F023         	call	_initFsm	;wreg free
  5836  00334C  0900               	iorlw	0
  5837  00334E  B4D8               	btfsc	status,2,c
  5838  003350  0012               	return	
  5839                           
  5840                           ;app.c: 166: {
  5841                           ;app.c: 167: currentState = GATE_WAIT_EVENT;
  5842  003352  0E01               	movlw	1
  5843  003354  0101               	movlb	1	; () banked
  5844  003356  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5845                           
  5846                           ; BSR set to: 1
  5847                           ;app.c: 168: }
  5848                           ;app.c: 169: break;
  5849  003358  0012               	return	
  5850  00335A                     
  5851                           ; BSR set to: 1
  5852                           ;app.c: 172: currentState = detectCmd();
  5853                           
  5854                           ; BSR set to: 1
  5855  00335A  EC04  F025         	call	_detectCmd	;wreg free
  5856  00335E  0101               	movlb	1	; () banked
  5857  003360  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5858                           
  5859                           ;app.c: 173: break;
  5860  003362  0012               	return	
  5861  003364                     
  5862                           ; BSR set to: 1
  5863                           ;app.c: 176: if (addCmdFsm(receivedNumber, smsText))
  5864                           
  5865                           ; BSR set to: 1
  5866  003364  0E31               	movlw	low _receivedNumber
  5867  003366  6F12               	movwf	addCmdFsm@receivedNumber& (0+255),b
  5868  003368  0E03               	movlw	high _receivedNumber
  5869  00336A  6F13               	movwf	(addCmdFsm@receivedNumber+1)& (0+255),b
  5870  00336C  0E93               	movlw	low _smsText
  5871  00336E  6F14               	movwf	addCmdFsm@smsText& (0+255),b
  5872  003370  0E04               	movlw	high _smsText
  5873  003372  6F15               	movwf	(addCmdFsm@smsText+1)& (0+255),b
  5874  003374  EC61  F01B         	call	_addCmdFsm	;wreg free
  5875  003378  0900               	iorlw	0
  5876  00337A  B4D8               	btfsc	status,2,c
  5877  00337C  0012               	return	
  5878                           
  5879                           ;app.c: 177: {
  5880                           ;app.c: 178: currentState = GATE_WAIT_EVENT;
  5881  00337E  0E01               	movlw	1
  5882  003380  0101               	movlb	1	; () banked
  5883  003382  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;app.c: 179: }
  5887                           ;app.c: 180: break;
  5888  003384  0012               	return	
  5889  003386                     
  5890                           ; BSR set to: 1
  5891                           ;app.c: 183: if (delCmdFsm(receivedNumber, smsText))
  5892                           
  5893                           ; BSR set to: 1
  5894  003386  0E31               	movlw	low _receivedNumber
  5895  003388  6F10               	movwf	delCmdFsm@receivedNumber& (0+255),b
  5896  00338A  0E03               	movlw	high _receivedNumber
  5897  00338C  6F11               	movwf	(delCmdFsm@receivedNumber+1)& (0+255),b
  5898  00338E  0E93               	movlw	low _smsText
  5899  003390  6F12               	movwf	delCmdFsm@smsText& (0+255),b
  5900  003392  0E04               	movlw	high _smsText
  5901  003394  6F13               	movwf	(delCmdFsm@smsText+1)& (0+255),b
  5902  003396  EC12  F027         	call	_delCmdFsm	;wreg free
  5903  00339A  0900               	iorlw	0
  5904  00339C  B4D8               	btfsc	status,2,c
  5905  00339E  0012               	return	
  5906                           
  5907                           ;app.c: 184: {
  5908                           ;app.c: 185: currentState = GATE_WAIT_EVENT;
  5909  0033A0  0E01               	movlw	1
  5910  0033A2  0101               	movlb	1	; () banked
  5911  0033A4  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5912                           
  5913                           ; BSR set to: 1
  5914                           ;app.c: 186: }
  5915                           ;app.c: 187: break;
  5916  0033A6  0012               	return	
  5917  0033A8                     
  5918                           ; BSR set to: 1
  5919                           ;app.c: 190: if (triggerCmdFsm(receivedNumber))
  5920                           
  5921                           ; BSR set to: 1
  5922  0033A8  0E31               	movlw	low _receivedNumber
  5923  0033AA  0100               	movlb	0	; () banked
  5924  0033AC  6F89               	movwf	triggerCmdFsm@receivedNumber& (0+255),b
  5925  0033AE  0E03               	movlw	high _receivedNumber
  5926  0033B0  6F8A               	movwf	(triggerCmdFsm@receivedNumber+1)& (0+255),b
  5927  0033B2  ECCE  F02A         	call	_triggerCmdFsm	;wreg free
  5928  0033B6  0900               	iorlw	0
  5929  0033B8  B4D8               	btfsc	status,2,c
  5930  0033BA  0012               	return	
  5931                           
  5932                           ;app.c: 191: {
  5933                           ;app.c: 192: currentState = GATE_WAIT_EVENT;
  5934  0033BC  0E01               	movlw	1
  5935  0033BE  0101               	movlb	1	; () banked
  5936  0033C0  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;app.c: 193: }
  5940                           ;app.c: 194: break;
  5941  0033C2  0012               	return	
  5942  0033C4                     
  5943                           ; BSR set to: 1
  5944                           ;app.c: 197: if (Eeprom_Reset() == 0)
  5945                           
  5946                           ; BSR set to: 1
  5947  0033C4  ECBF  F02F         	call	_Eeprom_Reset	;wreg free
  5948  0033C8  0900               	iorlw	0
  5949  0033CA  A4D8               	btfss	status,2,c
  5950  0033CC  0012               	return	
  5951                           
  5952                           ;app.c: 198: {
  5953                           ;app.c: 199: currentState = GATE_INIT;
  5954  0033CE  0E00               	movlw	0
  5955  0033D0  0101               	movlb	1	; () banked
  5956  0033D2  6FD9               	movwf	MyApp_Task@currentState& (0+255),b
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;app.c: 205: }
  5960                           
  5961                           ; BSR set to: 1
  5962                           ;app.c: 204: break;
  5963                           
  5964                           ;app.c: 203: default:
  5965                           
  5966                           ; BSR set to: 1
  5967                           ;app.c: 200: }
  5968                           ;app.c: 201: break;
  5969  0033D4  0012               	return	
  5970  0033D6                     
  5971                           ; BSR set to: 1
  5972  0033D6  0101               	movlb	1	; () banked
  5973  0033D8  51D9               	movf	MyApp_Task@currentState& (0+255),w,b
  5974                           
  5975                           ; Switch size 1, requested type "space"
  5976                           ; Number of cases is 6, Range of values is 0 to 5
  5977                           ; switch strategies available:
  5978                           ; Name         Instructions Cycles
  5979                           ; simple_byte           19    10 (average)
  5980                           ;	Chosen strategy is simple_byte
  5981  0033DA  0A00               	xorlw	0	; case 0
  5982  0033DC  B4D8               	btfsc	status,2,c
  5983  0033DE  D7B4               	goto	l2595
  5984  0033E0  0A01               	xorlw	1	; case 1
  5985  0033E2  B4D8               	btfsc	status,2,c
  5986  0033E4  D7BA               	goto	l2598
  5987  0033E6  0A03               	xorlw	3	; case 2
  5988  0033E8  B4D8               	btfsc	status,2,c
  5989  0033EA  D7BC               	goto	l2599
  5990  0033EC  0A01               	xorlw	1	; case 3
  5991  0033EE  B4D8               	btfsc	status,2,c
  5992  0033F0  D7CA               	goto	l2601
  5993  0033F2  0A07               	xorlw	7	; case 4
  5994  0033F4  B4D8               	btfsc	status,2,c
  5995  0033F6  D7D8               	goto	l2603
  5996  0033F8  0A01               	xorlw	1	; case 5
  5997  0033FA  A4D8               	btfss	status,2,c
  5998                           
  5999                           ; BSR set to: 1
  6000                           ;app.c: 211: }
  6001                           
  6002                           ; BSR set to: 1
  6003                           ;app.c: 210: break;
  6004                           
  6005                           ;app.c: 209: default:
  6006                           
  6007                           ; BSR set to: 1
  6008                           ;app.c: 206: break;
  6009  0033FC  0012               	return	
  6010  0033FE  D7E2               	goto	l2605
  6011  003400                     l2590:
  6012                           
  6013                           ; BSR set to: 1
  6014  003400  0100               	movlb	0	; () banked
  6015  003402  51D5               	movf	_SystemState& (0+255),w,b
  6016                           
  6017                           ; Switch size 1, requested type "space"
  6018                           ; Number of cases is 2, Range of values is 0 to 1
  6019                           ; switch strategies available:
  6020                           ; Name         Instructions Cycles
  6021                           ; simple_byte            7     4 (average)
  6022                           ;	Chosen strategy is simple_byte
  6023  003404  0A00               	xorlw	0	; case 0
  6024  003406  B4D8               	btfsc	status,2,c
  6025  003408  D792               	goto	l2591
  6026  00340A  0A01               	xorlw	1	; case 1
  6027  00340C  A4D8               	btfss	status,2,c
  6028  00340E  0012               	return	
  6029  003410  D7E2               	goto	l2594
  6030  003412                     __end_of_MyApp_Task:
  6031                           	opt stack 0
  6032                           tosu	equ	0xFFF
  6033                           tosh	equ	0xFFE
  6034                           tosl	equ	0xFFD
  6035                           pclath	equ	0xFFA
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           intcon2	equ	0xFF1
  6044                           intcon3	equ	0xFF0
  6045                           postinc0	equ	0xFEE
  6046                           wreg	equ	0xFE8
  6047                           postinc1	equ	0xFE6
  6048                           postdec1	equ	0xFE5
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           indf2	equ	0xFDF
  6052                           postinc2	equ	0xFDE
  6053                           postdec2	equ	0xFDD
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function _Term_MainTask *****************
  6059 ;; Defined at:
  6060 ;;		line 845 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  Options         1    wreg     unsigned char 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  Options         1    0[COMRAM] unsigned char 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:   17
  6081 ;; This function calls:
  6082 ;;		_Term_MainSm
  6083 ;; This function is called by:
  6084 ;;		_InitializeTasks
  6085 ;;		_ScheduleTasks
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text17
  6090  006912                     __ptext17:
  6091                           	opt stack 0
  6092  006912                     _Term_MainTask:
  6093                           	opt stack 11
  6094                           
  6095                           ;term.c: 847: switch (SystemState)
  6096                           
  6097                           ;incstack = 0
  6098  006912  D003               	goto	l2489
  6099  006914                     
  6100                           ;term.c: 858: Term_MainSm();
  6101  006914  EC5B  F008         	call	_Term_MainSm	;wreg free
  6102                           
  6103                           ;term.c: 865: }
  6104                           
  6105                           ;term.c: 864: break;
  6106                           
  6107                           ;term.c: 863: default:
  6108                           
  6109                           ;term.c: 860: break;
  6110  006918  0012               	return	
  6111  00691A                     l2489:
  6112  00691A  0100               	movlb	0	; () banked
  6113  00691C  51D5               	movf	_SystemState& (0+255),w,b
  6114                           
  6115                           ; Switch size 1, requested type "space"
  6116                           ; Number of cases is 2, Range of values is 0 to 1
  6117                           ; switch strategies available:
  6118                           ; Name         Instructions Cycles
  6119                           ; simple_byte            7     4 (average)
  6120                           ;	Chosen strategy is simple_byte
  6121  00691E  0A00               	xorlw	0	; case 0
  6122  006920  B4D8               	btfsc	status,2,c
  6123  006922  0012               	return	
  6124  006924  0A01               	xorlw	1	; case 1
  6125  006926  A4D8               	btfss	status,2,c
  6126  006928  0012               	return	
  6127  00692A  D7F4               	goto	l2492
  6128  00692C                     __end_of_Term_MainTask:
  6129                           	opt stack 0
  6130                           tosu	equ	0xFFF
  6131                           tosh	equ	0xFFE
  6132                           tosl	equ	0xFFD
  6133                           pclath	equ	0xFFA
  6134                           tblptru	equ	0xFF8
  6135                           tblptrh	equ	0xFF7
  6136                           tblptrl	equ	0xFF6
  6137                           tablat	equ	0xFF5
  6138                           prodh	equ	0xFF4
  6139                           prodl	equ	0xFF3
  6140                           intcon	equ	0xFF2
  6141                           intcon2	equ	0xFF1
  6142                           intcon3	equ	0xFF0
  6143                           postinc0	equ	0xFEE
  6144                           wreg	equ	0xFE8
  6145                           postinc1	equ	0xFE6
  6146                           postdec1	equ	0xFE5
  6147                           fsr1h	equ	0xFE2
  6148                           fsr1l	equ	0xFE1
  6149                           indf2	equ	0xFDF
  6150                           postinc2	equ	0xFDE
  6151                           postdec2	equ	0xFDD
  6152                           fsr2h	equ	0xFDA
  6153                           fsr2l	equ	0xFD9
  6154                           status	equ	0xFD8
  6155                           
  6156 ;; *************** function _Rtcm_MainTask *****************
  6157 ;; Defined at:
  6158 ;;		line 99 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  Options         1    wreg     unsigned char 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  Options         1    0[COMRAM] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6176 ;;Total ram usage:        0 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:   14
  6179 ;; This function calls:
  6180 ;;		_Rtcc_AlarmConfig
  6181 ;;		_Rtcc_LockRtc
  6182 ;;		_Rtcc_RtcConfig
  6183 ;;		_Rtcc_SetRtcStatus
  6184 ;;		_Rtcc_UnlockRtc
  6185 ;;		_Rtcm_GetRtccDate
  6186 ;;		_Rtcm_SetRtccDate
  6187 ;; This function is called by:
  6188 ;;		_InitializeTasks
  6189 ;;		_ScheduleTasks
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text18
  6194  004F46                     __ptext18:
  6195                           	opt stack 0
  6196  004F46                     _Rtcm_MainTask:
  6197                           	opt stack 14
  6198                           
  6199                           ;rtcm.c: 101: switch (SystemState)
  6200                           
  6201                           ;incstack = 0
  6202  004F46  D03D               	goto	l2219
  6203  004F48                     l2220:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  6207  004F48  86CD               	bsf	4045,3,c	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  6211  004F4A  0E00               	movlw	0
  6212  004F4C  0103               	movlb	3	; () banked
  6213  004F4E  6FBC               	movwf	_RtcConfig& (0+255),b
  6214                           
  6215                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  6216  004F50  0E00               	movlw	0
  6217  004F52  6FBD               	movwf	(_RtcConfig+1)& (0+255),b
  6218                           
  6219                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  6220  004F54  0E01               	movlw	1
  6221  004F56  6FBE               	movwf	(_RtcConfig+2)& (0+255),b
  6222                           
  6223                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  6224  004F58  0E01               	movlw	1
  6225  004F5A  6FBF               	movwf	(_RtcConfig+3)& (0+255),b
  6226                           
  6227                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  6228  004F5C  0E01               	movlw	1
  6229  004F5E  6FB8               	movwf	_AlCfg& (0+255),b
  6230                           
  6231                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  6232  004F60  0E01               	movlw	1
  6233  004F62  6FB9               	movwf	(_AlCfg+1)& (0+255),b
  6234                           
  6235                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  6236  004F64  0E01               	movlw	1
  6237  004F66  6FBA               	movwf	(_AlCfg+2)& (0+255),b
  6238                           
  6239                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  6240  004F68  0E00               	movlw	0
  6241  004F6A  6FBB               	movwf	(_AlCfg+3)& (0+255),b
  6242                           
  6243                           ; BSR set to: 3
  6244                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  6245  004F6C  EC25  F035         	call	_Rtcc_UnlockRtc	;wreg free
  6246                           
  6247                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  6248  004F70  0EBC               	movlw	low _RtcConfig
  6249  004F72  0100               	movlb	0	; () banked
  6250  004F74  6F7E               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  6251  004F76  0E03               	movlw	high _RtcConfig
  6252  004F78  6F7F               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  6253  004F7A  EC65  F024         	call	_Rtcc_RtcConfig	;wreg free
  6254                           
  6255                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  6256  004F7E  0EB8               	movlw	low _AlCfg
  6257  004F80  0100               	movlb	0	; () banked
  6258  004F82  6F7D               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  6259  004F84  0E03               	movlw	high _AlCfg
  6260  004F86  6F7E               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  6261  004F88  EC98  F02A         	call	_Rtcc_AlarmConfig	;wreg free
  6262                           
  6263                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  6264  004F8C  0E01               	movlw	1
  6265  004F8E  ECD4  F034         	call	_Rtcc_SetRtcStatus
  6266                           
  6267                           ;rtcm.c: 127: Rtcc_LockRtc();
  6268  004F92  EC2D  F035         	call	_Rtcc_LockRtc	;wreg free
  6269                           
  6270                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  6271  004F96  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6272  004F9A  EE00  F089         	lfsr	0,Rtcm_SetRtccDate@Date
  6273  004F9E  0E07               	movlw	7
  6274  004FA0                     u16221:
  6275  004FA0  CFDB FFEB          	movff	plusw2,plusw0
  6276  004FA4  06E8               	decf	wreg,f,c
  6277  004FA6  E2FC               	bc	u16221
  6278  004FA8  EC68  F02D         	call	_Rtcm_SetRtccDate	;wreg free
  6279                           
  6280                           ;rtcm.c: 154: break;
  6281  004FAC  0012               	return	
  6282  004FAE                     
  6283                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  6284  004FAE  EC6B  F02B         	call	_Rtcm_GetRtccDate	;wreg free
  6285  004FB2  EE24  F059         	lfsr	2,_Rtcm_SystemDate
  6286  004FB6  0E07               	movlw	7
  6287  004FB8                     u16231:
  6288  004FB8  CFEB FFDB          	movff	plusw0,plusw2
  6289  004FBC  06E8               	decf	wreg,f,c
  6290  004FBE  E2FC               	bc	u16231
  6291                           
  6292                           ;rtcm.c: 165: }
  6293                           
  6294                           ;rtcm.c: 164: break;
  6295                           
  6296                           ;rtcm.c: 163: default:
  6297                           
  6298                           ;rtcm.c: 160: break;
  6299  004FC0  0012               	return	
  6300  004FC2                     l2219:
  6301  004FC2  0100               	movlb	0	; () banked
  6302  004FC4  51D5               	movf	_SystemState& (0+255),w,b
  6303                           
  6304                           ; Switch size 1, requested type "space"
  6305                           ; Number of cases is 2, Range of values is 0 to 1
  6306                           ; switch strategies available:
  6307                           ; Name         Instructions Cycles
  6308                           ; simple_byte            7     4 (average)
  6309                           ;	Chosen strategy is simple_byte
  6310  004FC6  0A00               	xorlw	0	; case 0
  6311  004FC8  B4D8               	btfsc	status,2,c
  6312  004FCA  D7BE               	goto	l2220
  6313  004FCC  0A01               	xorlw	1	; case 1
  6314  004FCE  A4D8               	btfss	status,2,c
  6315  004FD0  0012               	return	
  6316  004FD2  D7ED               	goto	l2222
  6317  004FD4                     __end_of_Rtcm_MainTask:
  6318                           	opt stack 0
  6319                           tosu	equ	0xFFF
  6320                           tosh	equ	0xFFE
  6321                           tosl	equ	0xFFD
  6322                           pclath	equ	0xFFA
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           intcon	equ	0xFF2
  6330                           intcon2	equ	0xFF1
  6331                           intcon3	equ	0xFF0
  6332                           postinc0	equ	0xFEE
  6333                           plusw0	equ	0xFEB
  6334                           wreg	equ	0xFE8
  6335                           postinc1	equ	0xFE6
  6336                           postdec1	equ	0xFE5
  6337                           fsr1h	equ	0xFE2
  6338                           fsr1l	equ	0xFE1
  6339                           indf2	equ	0xFDF
  6340                           postinc2	equ	0xFDE
  6341                           postdec2	equ	0xFDD
  6342                           plusw2	equ	0xFDB
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function _Led_MainTask *****************
  6348 ;; Defined at:
  6349 ;;		line 298 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  Options         1    wreg     unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  Options         1    0[COMRAM] unsigned char 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;Total ram usage:        1 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:   14
  6370 ;; This function calls:
  6371 ;;		_LedStateMachine
  6372 ;; This function is called by:
  6373 ;;		_InitializeTasks
  6374 ;;		_ScheduleTasks
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text19
  6379  003BCA                     __ptext19:
  6380                           	opt stack 0
  6381  003BCA                     _Led_MainTask:
  6382                           	opt stack 14
  6383                           
  6384                           ;led.c: 300: switch (SystemState)
  6385                           
  6386                           ;incstack = 0
  6387  003BCA  D05C               	goto	l2133
  6388  003BCC                     l2134:
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  6392  003BCC  9895               	bcf	3989,4,c	;volatile
  6393                           
  6394                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  6395  003BCE  9A95               	bcf	3989,5,c	;volatile
  6396                           
  6397                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  6398  003BD0  9C95               	bcf	3989,6,c	;volatile
  6399                           
  6400                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  6401  003BD2  9883               	bcf	3971,4,c	;volatile
  6402                           
  6403                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  6404  003BD4  9A83               	bcf	3971,5,c	;volatile
  6405                           
  6406                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  6407  003BD6  9C83               	bcf	3971,6,c	;volatile
  6408                           
  6409                           ;led.c: 311: break;
  6410  003BD8  0012               	return	
  6411  003BDA                     
  6412                           ; BSR set to: 0
  6413                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  6414                           
  6415                           ; BSR set to: 0
  6416  003BDA  0EFA               	movlw	low _Led1Sts
  6417  003BDC  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6418  003BDE  0E01               	movlw	high _Led1Sts
  6419  003BE0  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6420  003BE2  0EF9               	movlw	low _Led1OutSts
  6421  003BE4  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6422  003BE6  0E01               	movlw	high _Led1OutSts
  6423  003BE8  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6424  003BEA  0E72               	movlw	low _Led1Blink
  6425  003BEC  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6426  003BEE  0E03               	movlw	high _Led1Blink
  6427  003BF0  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6428  003BF2  0E96               	movlw	low _Led1Pulse
  6429  003BF4  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6430  003BF6  0E03               	movlw	high _Led1Pulse
  6431  003BF8  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6432  003BFA  0E01               	movlw	1
  6433  003BFC  ECC0  F023         	call	_LedStateMachine
  6434  003C00  0100               	movlb	0	; () banked
  6435  003C02  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6436  003C04  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6437  003C06  5083               	movf	3971,w,c	;volatile
  6438  003C08  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6439  003C0A  0BEF               	andlw	-17
  6440  003C0C  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6441  003C0E  6E83               	movwf	3971,c	;volatile
  6442                           
  6443                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  6444  003C10  0EF8               	movlw	low _Led2Sts
  6445  003C12  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6446  003C14  0E01               	movlw	high _Led2Sts
  6447  003C16  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6448  003C18  0EF7               	movlw	low _Led2OutSts
  6449  003C1A  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6450  003C1C  0E01               	movlw	high _Led2OutSts
  6451  003C1E  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6452  003C20  0E69               	movlw	low _Led2Blink
  6453  003C22  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6454  003C24  0E03               	movlw	high _Led2Blink
  6455  003C26  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6456  003C28  0E90               	movlw	low _Led2Pulse
  6457  003C2A  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6458  003C2C  0E03               	movlw	high _Led2Pulse
  6459  003C2E  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6460  003C30  0E02               	movlw	2
  6461  003C32  ECC0  F023         	call	_LedStateMachine
  6462  003C36  0100               	movlb	0	; () banked
  6463  003C38  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6464  003C3A  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6465  003C3C  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6466  003C3E  5083               	movf	3971,w,c	;volatile
  6467  003C40  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6468  003C42  0BDF               	andlw	-33
  6469  003C44  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6470  003C46  6E83               	movwf	3971,c	;volatile
  6471                           
  6472                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  6473  003C48  0EF6               	movlw	low _Led3Sts
  6474  003C4A  6F8F               	movwf	LedStateMachine@LedSts& (0+255),b
  6475  003C4C  0E01               	movlw	high _Led3Sts
  6476  003C4E  6F90               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  6477  003C50  0EF5               	movlw	low _Led3OutSts
  6478  003C52  6F91               	movwf	LedStateMachine@LedOut& (0+255),b
  6479  003C54  0E01               	movlw	high _Led3OutSts
  6480  003C56  6F92               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  6481  003C58  0E60               	movlw	low _Led3Blink
  6482  003C5A  6F93               	movwf	LedStateMachine@LedBlink& (0+255),b
  6483  003C5C  0E03               	movlw	high _Led3Blink
  6484  003C5E  6F94               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  6485  003C60  0E8A               	movlw	low _Led3Pulse
  6486  003C62  6F95               	movwf	LedStateMachine@LedPulse& (0+255),b
  6487  003C64  0E03               	movlw	high _Led3Pulse
  6488  003C66  6F96               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  6489  003C68  0E03               	movlw	3
  6490  003C6A  ECC0  F023         	call	_LedStateMachine
  6491  003C6E  0100               	movlb	0	; () banked
  6492  003C70  6F9A               	movwf	??_Led_MainTask& (0+255),b
  6493  003C72  3B9A               	swapf	??_Led_MainTask& (0+255),f,b
  6494  003C74  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6495  003C76  479A               	rlncf	??_Led_MainTask& (0+255),f,b
  6496  003C78  5083               	movf	3971,w,c	;volatile
  6497  003C7A  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6498  003C7C  0BBF               	andlw	-65
  6499  003C7E  199A               	xorwf	??_Led_MainTask& (0+255),w,b
  6500  003C80  6E83               	movwf	3971,c	;volatile
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;led.c: 326: }
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;led.c: 325: break;
  6507                           
  6508                           ;led.c: 324: default:
  6509                           
  6510                           ;led.c: 321: break;
  6511  003C82  0012               	return	
  6512  003C84                     l2133:
  6513                           
  6514                           ; BSR set to: 0
  6515  003C84  0100               	movlb	0	; () banked
  6516  003C86  51D5               	movf	_SystemState& (0+255),w,b
  6517                           
  6518                           ; Switch size 1, requested type "space"
  6519                           ; Number of cases is 2, Range of values is 0 to 1
  6520                           ; switch strategies available:
  6521                           ; Name         Instructions Cycles
  6522                           ; simple_byte            7     4 (average)
  6523                           ;	Chosen strategy is simple_byte
  6524  003C88  0A00               	xorlw	0	; case 0
  6525  003C8A  B4D8               	btfsc	status,2,c
  6526  003C8C  D79F               	goto	l2134
  6527  003C8E  0A01               	xorlw	1	; case 1
  6528  003C90  A4D8               	btfss	status,2,c
  6529  003C92  0012               	return	
  6530  003C94  D7A2               	goto	l2136
  6531  003C96                     __end_of_Led_MainTask:
  6532                           	opt stack 0
  6533                           tosu	equ	0xFFF
  6534                           tosh	equ	0xFFE
  6535                           tosl	equ	0xFFD
  6536                           pclath	equ	0xFFA
  6537                           tblptru	equ	0xFF8
  6538                           tblptrh	equ	0xFF7
  6539                           tblptrl	equ	0xFF6
  6540                           tablat	equ	0xFF5
  6541                           prodh	equ	0xFF4
  6542                           prodl	equ	0xFF3
  6543                           intcon	equ	0xFF2
  6544                           intcon2	equ	0xFF1
  6545                           intcon3	equ	0xFF0
  6546                           postinc0	equ	0xFEE
  6547                           plusw0	equ	0xFEB
  6548                           wreg	equ	0xFE8
  6549                           postinc1	equ	0xFE6
  6550                           postdec1	equ	0xFE5
  6551                           fsr1h	equ	0xFE2
  6552                           fsr1l	equ	0xFE1
  6553                           indf2	equ	0xFDF
  6554                           postinc2	equ	0xFDE
  6555                           postdec2	equ	0xFDD
  6556                           plusw2	equ	0xFDB
  6557                           fsr2h	equ	0xFDA
  6558                           fsr2l	equ	0xFD9
  6559                           status	equ	0xFD8
  6560                           
  6561 ;; *************** function _UsbDevice_MainTask *****************
  6562 ;; Defined at:
  6563 ;;		line 72 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  Options         1    wreg     unsigned char 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  Options         1    0[COMRAM] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:   20
  6584 ;; This function calls:
  6585 ;;		_CDCTxService
  6586 ;;		_USBDeviceInit
  6587 ;;		_USBDeviceTasks
  6588 ;; This function is called by:
  6589 ;;		_InitializeTasks
  6590 ;;		_ScheduleTasks
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text20
  6595  0066AA                     __ptext20:
  6596                           	opt stack 0
  6597  0066AA                     _UsbDevice_MainTask:
  6598                           	opt stack 8
  6599                           
  6600                           ;usb_device_mgr.c: 74: switch (SystemState)
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;incstack = 0
  6604  0066AA  D008               	goto	l1992
  6605  0066AC                     
  6606                           ;usb_device_mgr.c: 79: USBDeviceInit();
  6607  0066AC  ECC5  F012         	call	_USBDeviceInit	;wreg free
  6608                           
  6609                           ;usb_device_mgr.c: 80: ;
  6610                           ;usb_device_mgr.c: 81: break;
  6611  0066B0  0012               	return	
  6612  0066B2                     
  6613                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  6614  0066B2  ECD5  F00D         	call	_USBDeviceTasks	;wreg free
  6615                           
  6616                           ;usb_device_mgr.c: 90: CDCTxService();
  6617  0066B6  EC12  F014         	call	_CDCTxService	;wreg free
  6618                           
  6619                           ;usb_device_mgr.c: 101: }
  6620                           
  6621                           ;usb_device_mgr.c: 100: break;
  6622                           
  6623                           ;usb_device_mgr.c: 99: default:
  6624                           
  6625                           ;usb_device_mgr.c: 96: break;
  6626  0066BA  0012               	return	
  6627  0066BC                     l1992:
  6628  0066BC  0100               	movlb	0	; () banked
  6629  0066BE  51D5               	movf	_SystemState& (0+255),w,b
  6630                           
  6631                           ; Switch size 1, requested type "space"
  6632                           ; Number of cases is 2, Range of values is 0 to 1
  6633                           ; switch strategies available:
  6634                           ; Name         Instructions Cycles
  6635                           ; simple_byte            7     4 (average)
  6636                           ;	Chosen strategy is simple_byte
  6637  0066C0  0A00               	xorlw	0	; case 0
  6638  0066C2  B4D8               	btfsc	status,2,c
  6639  0066C4  D7F3               	goto	l1993
  6640  0066C6  0A01               	xorlw	1	; case 1
  6641  0066C8  A4D8               	btfss	status,2,c
  6642  0066CA  0012               	return	
  6643  0066CC  D7F2               	goto	l1995
  6644  0066CE                     __end_of_UsbDevice_MainTask:
  6645                           	opt stack 0
  6646                           tosu	equ	0xFFF
  6647                           tosh	equ	0xFFE
  6648                           tosl	equ	0xFFD
  6649                           pclath	equ	0xFFA
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           prodh	equ	0xFF4
  6655                           prodl	equ	0xFF3
  6656                           intcon	equ	0xFF2
  6657                           intcon2	equ	0xFF1
  6658                           intcon3	equ	0xFF0
  6659                           postinc0	equ	0xFEE
  6660                           plusw0	equ	0xFEB
  6661                           wreg	equ	0xFE8
  6662                           postinc1	equ	0xFE6
  6663                           postdec1	equ	0xFE5
  6664                           fsr1h	equ	0xFE2
  6665                           fsr1l	equ	0xFE1
  6666                           indf2	equ	0xFDF
  6667                           postinc2	equ	0xFDE
  6668                           postdec2	equ	0xFDD
  6669                           plusw2	equ	0xFDB
  6670                           fsr2h	equ	0xFDA
  6671                           fsr2l	equ	0xFD9
  6672                           status	equ	0xFD8
  6673                           
  6674 ;; *************** function _MdmHttp_MainTask *****************
  6675 ;; Defined at:
  6676 ;;		line 557 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  Options         1    wreg     unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  Options         1    0[COMRAM] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:   15
  6697 ;; This function calls:
  6698 ;;		_HttpGetMethod
  6699 ;;		_InitGprsNetwork
  6700 ;; This function is called by:
  6701 ;;		_InitializeTasks
  6702 ;;		_ScheduleTasks
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text21
  6707  005FC6                     __ptext21:
  6708                           	opt stack 0
  6709  005FC6                     _MdmHttp_MainTask:
  6710                           	opt stack 13
  6711                           
  6712                           ;mdm_gsm_gprs_http.c: 559: switch (SystemState)
  6713                           
  6714                           ;incstack = 0
  6715  005FC6  D019               	goto	l1291
  6716  005FC8                     
  6717                           ;mdm_gsm_gprs_http.c: 569: if (MdmStatus == ModemConfigured)
  6718  005FC8  0E03               	movlw	3
  6719  005FCA  0100               	movlb	0	; () banked
  6720  005FCC  19D2               	xorwf	_MdmStatus& (0+255),w,b
  6721  005FCE  A4D8               	btfss	status,2,c
  6722  005FD0  0012               	return	
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;mdm_gsm_gprs_http.c: 570: {
  6726                           ;mdm_gsm_gprs_http.c: 572: GprsNetworkSts = InitGprsNetwork(ApnLocal,ApnLenLocal);
  6727  005FD2  C31A  F09B         	movff	_ApnLocal,InitGprsNetwork@Apn
  6728  005FD6  C31B  F09C         	movff	_ApnLocal+1,InitGprsNetwork@Apn+1
  6729  005FDA  C1EC  F09D         	movff	_ApnLenLocal,InitGprsNetwork@ApnLen
  6730  005FDE  ECE4  F006         	call	_InitGprsNetwork	;wreg free
  6731  005FE2  0101               	movlb	1	; () banked
  6732  005FE4  6FEB               	movwf	_GprsNetworkSts& (0+255),b
  6733                           
  6734                           ;mdm_gsm_gprs_http.c: 574: HttpGetMethodSts = HttpGetMethod(&HttpGetDataLocal);
  6735  005FE6  0EA7               	movlw	low _HttpGetDataLocal
  6736  005FE8  0100               	movlb	0	; () banked
  6737  005FEA  6F9B               	movwf	HttpGetMethod@GetData& (0+255),b
  6738  005FEC  0E03               	movlw	high _HttpGetDataLocal
  6739  005FEE  6F9C               	movwf	(HttpGetMethod@GetData+1)& (0+255),b
  6740  005FF0  ECF6  F002         	call	_HttpGetMethod	;wreg free
  6741  005FF4  0101               	movlb	1	; () banked
  6742  005FF6  6FEA               	movwf	_HttpGetMethodSts& (0+255),b
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;mdm_gsm_gprs_http.c: 581: }
  6746                           
  6747                           ; BSR set to: 1
  6748                           ;mdm_gsm_gprs_http.c: 580: break;
  6749                           
  6750                           ;mdm_gsm_gprs_http.c: 579: default:
  6751                           
  6752                           ; BSR set to: 1
  6753                           ;mdm_gsm_gprs_http.c: 575: }
  6754                           ;mdm_gsm_gprs_http.c: 576: break;
  6755  005FF8  0012               	return	
  6756  005FFA                     l1291:
  6757                           
  6758                           ; BSR set to: 1
  6759  005FFA  0100               	movlb	0	; () banked
  6760  005FFC  51D5               	movf	_SystemState& (0+255),w,b
  6761                           
  6762                           ; Switch size 1, requested type "space"
  6763                           ; Number of cases is 2, Range of values is 0 to 1
  6764                           ; switch strategies available:
  6765                           ; Name         Instructions Cycles
  6766                           ; simple_byte            7     4 (average)
  6767                           ;	Chosen strategy is simple_byte
  6768  005FFE  0A00               	xorlw	0	; case 0
  6769  006000  B4D8               	btfsc	status,2,c
  6770  006002  0012               	return	
  6771  006004  0A01               	xorlw	1	; case 1
  6772  006006  A4D8               	btfss	status,2,c
  6773  006008  0012               	return	
  6774  00600A  D7DE               	goto	l1294
  6775  00600C                     __end_of_MdmHttp_MainTask:
  6776                           	opt stack 0
  6777                           tosu	equ	0xFFF
  6778                           tosh	equ	0xFFE
  6779                           tosl	equ	0xFFD
  6780                           pclath	equ	0xFFA
  6781                           tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           intcon2	equ	0xFF1
  6789                           intcon3	equ	0xFF0
  6790                           postinc0	equ	0xFEE
  6791                           plusw0	equ	0xFEB
  6792                           wreg	equ	0xFE8
  6793                           postinc1	equ	0xFE6
  6794                           postdec1	equ	0xFE5
  6795                           fsr1h	equ	0xFE2
  6796                           fsr1l	equ	0xFE1
  6797                           indf2	equ	0xFDF
  6798                           postinc2	equ	0xFDE
  6799                           postdec2	equ	0xFDD
  6800                           plusw2	equ	0xFDB
  6801                           fsr2h	equ	0xFDA
  6802                           fsr2l	equ	0xFD9
  6803                           status	equ	0xFD8
  6804                           
  6805 ;; *************** function _Mdm_MainTask *****************
  6806 ;; Defined at:
  6807 ;;		line 754 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  Options         1    wreg     unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  Options         1    0[COMRAM] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:   15
  6828 ;; This function calls:
  6829 ;;		_CheckModem
  6830 ;;		_ConfigureModem
  6831 ;;		_GetSmsSm
  6832 ;;		_ModemEvtParser
  6833 ;;		_SendSmsSm
  6834 ;;		_TurnOnModem
  6835 ;;		_UartSetConfig
  6836 ;;		_Uart_InitUartModule
  6837 ;; This function is called by:
  6838 ;;		_InitializeTasks
  6839 ;;		_ScheduleTasks
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text22
  6844  005D14                     __ptext22:
  6845                           	opt stack 0
  6846  005D14                     _Mdm_MainTask:
  6847                           	opt stack 13
  6848                           
  6849                           ;mdm_gsm_gprs.c: 756: switch (SystemState)
  6850                           
  6851                           ;incstack = 0
  6852  005D14  D01E               	goto	l1107
  6853  005D16                     
  6854                           ;mdm_gsm_gprs.c: 761: UartSetConfig();
  6855  005D16  EC8E  F02C         	call	_UartSetConfig	;wreg free
  6856                           
  6857                           ;mdm_gsm_gprs.c: 763: Uart_InitUartModule(1,&UartConfig);
  6858  005D1A  0E1C               	movlw	low _UartConfig
  6859  005D1C  0100               	movlb	0	; () banked
  6860  005D1E  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  6861  005D20  0E03               	movlw	high _UartConfig
  6862  005D22  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  6863  005D24  0E01               	movlw	1
  6864  005D26  EC5E  F005         	call	_Uart_InitUartModule
  6865                           
  6866                           ;mdm_gsm_gprs.c: 764: break;
  6867  005D2A  0012               	return	
  6868  005D2C                     
  6869                           ;mdm_gsm_gprs.c: 769: CheckModem();
  6870  005D2C  EC10  F010         	call	_CheckModem	;wreg free
  6871                           
  6872                           ;mdm_gsm_gprs.c: 771: if ((ComChecCompleted == 1u) && (MdmStatus == ModemOff))
  6873  005D30  042A               	decf	_ComChecCompleted,w,c
  6874  005D32  A4D8               	btfss	status,2,c
  6875  005D34  D005               	goto	l1111
  6876  005D36  0100               	movlb	0	; () banked
  6877  005D38  51D2               	movf	_MdmStatus& (0+255),w,b
  6878  005D3A  B4D8               	btfsc	status,2,c
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;mdm_gsm_gprs.c: 772: {
  6882                           ;mdm_gsm_gprs.c: 774: TurnOnModem();
  6883  005D3C  EC75  F02F         	call	_TurnOnModem	;wreg free
  6884  005D40                     l1111:
  6885                           
  6886                           ;mdm_gsm_gprs.c: 775: }
  6887                           ;mdm_gsm_gprs.c: 777: ConfigureModem();
  6888  005D40  ECAB  F01C         	call	_ConfigureModem	;wreg free
  6889                           
  6890                           ;mdm_gsm_gprs.c: 779: ModemEvtParser();
  6891  005D44  EC98  F00E         	call	_ModemEvtParser	;wreg free
  6892                           
  6893                           ;mdm_gsm_gprs.c: 781: GetSmsSm();
  6894  005D48  EC51  F015         	call	_GetSmsSm	;wreg free
  6895                           
  6896                           ;mdm_gsm_gprs.c: 783: SendSmsSm();
  6897  005D4C  ECF9  F00C         	call	_SendSmsSm	;wreg free
  6898                           
  6899                           ;mdm_gsm_gprs.c: 789: }
  6900                           
  6901                           ;mdm_gsm_gprs.c: 788: break;
  6902                           
  6903                           ;mdm_gsm_gprs.c: 787: default:
  6904                           
  6905                           ;mdm_gsm_gprs.c: 784: break;
  6906  005D50  0012               	return	
  6907  005D52                     l1107:
  6908  005D52  0100               	movlb	0	; () banked
  6909  005D54  51D5               	movf	_SystemState& (0+255),w,b
  6910                           
  6911                           ; Switch size 1, requested type "space"
  6912                           ; Number of cases is 2, Range of values is 0 to 1
  6913                           ; switch strategies available:
  6914                           ; Name         Instructions Cycles
  6915                           ; simple_byte            7     4 (average)
  6916                           ;	Chosen strategy is simple_byte
  6917  005D56  0A00               	xorlw	0	; case 0
  6918  005D58  B4D8               	btfsc	status,2,c
  6919  005D5A  D7DD               	goto	l1108
  6920  005D5C  0A01               	xorlw	1	; case 1
  6921  005D5E  A4D8               	btfss	status,2,c
  6922  005D60  0012               	return	
  6923  005D62  D7E4               	goto	l1110
  6924  005D64                     __end_of_Mdm_MainTask:
  6925                           	opt stack 0
  6926                           tosu	equ	0xFFF
  6927                           tosh	equ	0xFFE
  6928                           tosl	equ	0xFFD
  6929                           pclath	equ	0xFFA
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           intcon	equ	0xFF2
  6937                           intcon2	equ	0xFF1
  6938                           intcon3	equ	0xFF0
  6939                           postinc0	equ	0xFEE
  6940                           plusw0	equ	0xFEB
  6941                           wreg	equ	0xFE8
  6942                           postinc1	equ	0xFE6
  6943                           postdec1	equ	0xFE5
  6944                           fsr1h	equ	0xFE2
  6945                           fsr1l	equ	0xFE1
  6946                           indf2	equ	0xFDF
  6947                           postinc2	equ	0xFDE
  6948                           postdec2	equ	0xFDD
  6949                           plusw2	equ	0xFDB
  6950                           fsr2h	equ	0xFDA
  6951                           fsr2l	equ	0xFD9
  6952                           status	equ	0xFD8
  6953                           
  6954 ;; *************** function _I2cSlv_MainTask *****************
  6955 ;; Defined at:
  6956 ;;		line 215 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  Options         1    wreg     unsigned char 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  Options         1    0[COMRAM] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:   14
  6977 ;; This function calls:
  6978 ;;		_I2cSendMsgSm
  6979 ;;		_I2cSetConfig
  6980 ;;		_I2c_InitI2cModule
  6981 ;;		_OsAlrm_SetOsAlarm
  6982 ;; This function is called by:
  6983 ;;		_InitializeTasks
  6984 ;;		_ScheduleTasks
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text23
  6989  005A7C                     __ptext23:
  6990                           	opt stack 0
  6991  005A7C                     _I2cSlv_MainTask:
  6992                           	opt stack 14
  6993                           
  6994                           ;i2c_slv.c: 217: switch (SystemState)
  6995                           
  6996                           ;incstack = 0
  6997  005A7C  D020               	goto	l1404
  6998  005A7E                     
  6999                           ;i2c_slv.c: 222: I2cSetConfig();
  7000  005A7E  ECEE  F032         	call	_I2cSetConfig	;wreg free
  7001                           
  7002                           ;i2c_slv.c: 224: I2c_InitI2cModule(&I2cConfig);
  7003  005A82  0E56               	movlw	low _I2cConfig
  7004  005A84  0100               	movlb	0	; () banked
  7005  005A86  6FA2               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  7006  005A88  0E03               	movlw	high _I2cConfig
  7007  005A8A  6FA3               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  7008  005A8C  ECBA  F029         	call	_I2c_InitI2cModule	;wreg free
  7009                           
  7010                           ;i2c_slv.c: 226: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  7011  005A90  0E00               	movlw	0
  7012  005A92  0100               	movlb	0	; () banked
  7013  005A94  6F84               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  7014  005A96  0E00               	movlw	0
  7015  005A98  6F83               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  7016  005A9A  0E32               	movlw	50
  7017  005A9C  6F85               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  7018  005A9E  0E00               	movlw	0
  7019  005AA0  6F86               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  7020  005AA2  0E00               	movlw	0
  7021  005AA4  6F87               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  7022  005AA6  0E00               	movlw	0
  7023  005AA8  6F88               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  7024  005AAA  0EDC               	movlw	low _I2cDummyTx
  7025  005AAC  6F89               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  7026  005AAE  0E68               	movlw	high _I2cDummyTx
  7027  005AB0  6F8A               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  7028  005AB2  ECDE  F01F         	call	_OsAlrm_SetOsAlarm	;wreg free
  7029                           
  7030                           ;i2c_slv.c: 227: break;
  7031  005AB6  0012               	return	
  7032  005AB8                     
  7033                           ;i2c_slv.c: 232: I2cSendMsgSm();
  7034  005AB8  EC42  F020         	call	_I2cSendMsgSm	;wreg free
  7035                           
  7036                           ;i2c_slv.c: 238: }
  7037                           
  7038                           ;i2c_slv.c: 237: break;
  7039                           
  7040                           ;i2c_slv.c: 236: default:
  7041                           
  7042                           ;i2c_slv.c: 233: break;
  7043  005ABC  0012               	return	
  7044  005ABE                     l1404:
  7045  005ABE  0100               	movlb	0	; () banked
  7046  005AC0  51D5               	movf	_SystemState& (0+255),w,b
  7047                           
  7048                           ; Switch size 1, requested type "space"
  7049                           ; Number of cases is 2, Range of values is 0 to 1
  7050                           ; switch strategies available:
  7051                           ; Name         Instructions Cycles
  7052                           ; simple_byte            7     4 (average)
  7053                           ;	Chosen strategy is simple_byte
  7054  005AC2  0A00               	xorlw	0	; case 0
  7055  005AC4  B4D8               	btfsc	status,2,c
  7056  005AC6  D7DB               	goto	l1405
  7057  005AC8  0A01               	xorlw	1	; case 1
  7058  005ACA  A4D8               	btfss	status,2,c
  7059  005ACC  0012               	return	
  7060  005ACE  D7F4               	goto	l1407
  7061  005AD0                     __end_of_I2cSlv_MainTask:
  7062                           	opt stack 0
  7063                           tosu	equ	0xFFF
  7064                           tosh	equ	0xFFE
  7065                           tosl	equ	0xFFD
  7066                           pclath	equ	0xFFA
  7067                           tblptru	equ	0xFF8
  7068                           tblptrh	equ	0xFF7
  7069                           tblptrl	equ	0xFF6
  7070                           tablat	equ	0xFF5
  7071                           prodh	equ	0xFF4
  7072                           prodl	equ	0xFF3
  7073                           intcon	equ	0xFF2
  7074                           intcon2	equ	0xFF1
  7075                           intcon3	equ	0xFF0
  7076                           postinc0	equ	0xFEE
  7077                           plusw0	equ	0xFEB
  7078                           wreg	equ	0xFE8
  7079                           postinc1	equ	0xFE6
  7080                           postdec1	equ	0xFE5
  7081                           fsr1h	equ	0xFE2
  7082                           fsr1l	equ	0xFE1
  7083                           indf2	equ	0xFDF
  7084                           postinc2	equ	0xFDE
  7085                           postdec2	equ	0xFDD
  7086                           plusw2	equ	0xFDB
  7087                           fsr2h	equ	0xFDA
  7088                           fsr2l	equ	0xFD9
  7089                           status	equ	0xFD8
  7090                           
  7091 ;; *************** function _Mdm_DrvMainFn *****************
  7092 ;; Defined at:
  7093 ;;		line 304 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  Options         1    wreg     unsigned char 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  Options         1    0[COMRAM] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      void 
  7100 ;; Registers used:
  7101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7111 ;;Total ram usage:        0 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:   13
  7114 ;; This function calls:
  7115 ;;		_MdmCntSm
  7116 ;; This function is called by:
  7117 ;;		_InitializeTasks
  7118 ;;		_ScheduleTasks
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text24
  7123  006B18                     __ptext24:
  7124                           	opt stack 0
  7125  006B18                     _Mdm_DrvMainFn:
  7126                           	opt stack 15
  7127                           
  7128                           ;mdm_drv.c: 307: MdmCntSm();
  7129                           
  7130                           ;incstack = 0
  7131  006B18  EC6C  F023         	call	_MdmCntSm	;wreg free
  7132  006B1C  0012               	return		;funcret
  7133  006B1E                     __end_of_Mdm_DrvMainFn:
  7134                           	opt stack 0
  7135                           tosu	equ	0xFFF
  7136                           tosh	equ	0xFFE
  7137                           tosl	equ	0xFFD
  7138                           pclath	equ	0xFFA
  7139                           tblptru	equ	0xFF8
  7140                           tblptrh	equ	0xFF7
  7141                           tblptrl	equ	0xFF6
  7142                           tablat	equ	0xFF5
  7143                           prodh	equ	0xFF4
  7144                           prodl	equ	0xFF3
  7145                           intcon	equ	0xFF2
  7146                           intcon2	equ	0xFF1
  7147                           intcon3	equ	0xFF0
  7148                           postinc0	equ	0xFEE
  7149                           plusw0	equ	0xFEB
  7150                           wreg	equ	0xFE8
  7151                           postinc1	equ	0xFE6
  7152                           postdec1	equ	0xFE5
  7153                           fsr1h	equ	0xFE2
  7154                           fsr1l	equ	0xFE1
  7155                           indf2	equ	0xFDF
  7156                           postinc2	equ	0xFDE
  7157                           postdec2	equ	0xFDD
  7158                           plusw2	equ	0xFDB
  7159                           fsr2h	equ	0xFDA
  7160                           fsr2l	equ	0xFD9
  7161                           status	equ	0xFD8
  7162                           
  7163 ;; *************** function _Wdg_MainTask *****************
  7164 ;; Defined at:
  7165 ;;		line 73 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  Options         1    wreg     unsigned char 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  Options         1    0[COMRAM] unsigned char 
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;Total ram usage:        0 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:   12
  7186 ;; This function calls:
  7187 ;;		_Mcu_ClearWdg
  7188 ;;		_Mcu_SetWdgSts
  7189 ;; This function is called by:
  7190 ;;		_InitializeTasks
  7191 ;;		_ScheduleTasks
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text25
  7196  00673A                     __ptext25:
  7197                           	opt stack 0
  7198  00673A                     _Wdg_MainTask:
  7199                           	opt stack 16
  7200                           
  7201                           ;wdg.c: 75: switch (SystemState)
  7202                           
  7203                           ;incstack = 0
  7204  00673A  D007               	goto	l2509
  7205  00673C                     
  7206                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  7207  00673C  0E01               	movlw	1
  7208  00673E  EC0A  F035         	call	_Mcu_SetWdgSts
  7209                           
  7210                           ;wdg.c: 81: break;
  7211  006742  0012               	return	
  7212  006744                     
  7213                           ;wdg.c: 86: Mcu_ClearWdg();
  7214  006744  EC8F  F035         	call	_Mcu_ClearWdg	;wreg free
  7215                           
  7216                           ;wdg.c: 92: }
  7217                           
  7218                           ;wdg.c: 91: break;
  7219                           
  7220                           ;wdg.c: 90: default:
  7221                           
  7222                           ;wdg.c: 87: break;
  7223  006748  0012               	return	
  7224  00674A                     l2509:
  7225  00674A  0100               	movlb	0	; () banked
  7226  00674C  51D5               	movf	_SystemState& (0+255),w,b
  7227                           
  7228                           ; Switch size 1, requested type "space"
  7229                           ; Number of cases is 2, Range of values is 0 to 1
  7230                           ; switch strategies available:
  7231                           ; Name         Instructions Cycles
  7232                           ; simple_byte            7     4 (average)
  7233                           ;	Chosen strategy is simple_byte
  7234  00674E  0A00               	xorlw	0	; case 0
  7235  006750  B4D8               	btfsc	status,2,c
  7236  006752  D7F4               	goto	l2510
  7237  006754  0A01               	xorlw	1	; case 1
  7238  006756  A4D8               	btfss	status,2,c
  7239  006758  0012               	return	
  7240  00675A  D7F4               	goto	l2512
  7241  00675C                     __end_of_Wdg_MainTask:
  7242                           	opt stack 0
  7243                           tosu	equ	0xFFF
  7244                           tosh	equ	0xFFE
  7245                           tosl	equ	0xFFD
  7246                           pclath	equ	0xFFA
  7247                           tblptru	equ	0xFF8
  7248                           tblptrh	equ	0xFF7
  7249                           tblptrl	equ	0xFF6
  7250                           tablat	equ	0xFF5
  7251                           prodh	equ	0xFF4
  7252                           prodl	equ	0xFF3
  7253                           intcon	equ	0xFF2
  7254                           intcon2	equ	0xFF1
  7255                           intcon3	equ	0xFF0
  7256                           postinc0	equ	0xFEE
  7257                           plusw0	equ	0xFEB
  7258                           wreg	equ	0xFE8
  7259                           postinc1	equ	0xFE6
  7260                           postdec1	equ	0xFE5
  7261                           fsr1h	equ	0xFE2
  7262                           fsr1l	equ	0xFE1
  7263                           indf2	equ	0xFDF
  7264                           postinc2	equ	0xFDE
  7265                           postdec2	equ	0xFDD
  7266                           plusw2	equ	0xFDB
  7267                           fsr2h	equ	0xFDA
  7268                           fsr2l	equ	0xFD9
  7269                           status	equ	0xFD8
  7270                           
  7271 ;; *************** function _Mcu_SetWdgSts *****************
  7272 ;; Defined at:
  7273 ;;		line 196 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  WdgSts          1    wreg     unsigned char 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;  WdgSts          1   29[BANK0 ] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  1    wreg      void 
  7280 ;; Registers used:
  7281 ;;		wreg
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;Total ram usage:        1 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:   11
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_Wdg_MainTask
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text26
  7302  006A14                     __ptext26:
  7303                           	opt stack 0
  7304  006A14                     _Mcu_SetWdgSts:
  7305                           	opt stack 16
  7306                           
  7307                           ;incstack = 0
  7308                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  7309  006A14  0100               	movlb	0	; () banked
  7310  006A16  6F7D               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  7311                           
  7312                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  7313  006A18  0100               	movlb	0	; () banked
  7314  006A1A  B17D               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  7315  006A1C  D002               	bra	u14655
  7316  006A1E  90C0               	bcf	4032,0,c	;volatile
  7317  006A20  D001               	bra	u14656
  7318  006A22                     u14655:
  7319  006A22  80C0               	bsf	4032,0,c	;volatile
  7320  006A24                     u14656:
  7321  006A24  0012               	return		;funcret
  7322  006A26                     __end_of_Mcu_SetWdgSts:
  7323                           	opt stack 0
  7324                           tosu	equ	0xFFF
  7325                           tosh	equ	0xFFE
  7326                           tosl	equ	0xFFD
  7327                           pclath	equ	0xFFA
  7328                           tblptru	equ	0xFF8
  7329                           tblptrh	equ	0xFF7
  7330                           tblptrl	equ	0xFF6
  7331                           tablat	equ	0xFF5
  7332                           prodh	equ	0xFF4
  7333                           prodl	equ	0xFF3
  7334                           intcon	equ	0xFF2
  7335                           intcon2	equ	0xFF1
  7336                           intcon3	equ	0xFF0
  7337                           postinc0	equ	0xFEE
  7338                           plusw0	equ	0xFEB
  7339                           wreg	equ	0xFE8
  7340                           postinc1	equ	0xFE6
  7341                           postdec1	equ	0xFE5
  7342                           fsr1h	equ	0xFE2
  7343                           fsr1l	equ	0xFE1
  7344                           indf2	equ	0xFDF
  7345                           postinc2	equ	0xFDE
  7346                           postdec2	equ	0xFDD
  7347                           plusw2	equ	0xFDB
  7348                           fsr2h	equ	0xFDA
  7349                           fsr2l	equ	0xFD9
  7350                           status	equ	0xFD8
  7351                           
  7352 ;; *************** function _Mcu_ClearWdg *****************
  7353 ;; Defined at:
  7354 ;;		line 210 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		None
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:   11
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_Wdg_MainTask
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text27
  7383  006B1E                     __ptext27:
  7384                           	opt stack 0
  7385  006B1E                     _Mcu_ClearWdg:
  7386                           	opt stack 16
  7387                           
  7388                           ;incstack = 0
  7389  006B1E  0004               	clrwdt		;# 
  7390  006B20  0012               	return		;funcret
  7391  006B22                     __end_of_Mcu_ClearWdg:
  7392                           	opt stack 0
  7393                           tosu	equ	0xFFF
  7394                           tosh	equ	0xFFE
  7395                           tosl	equ	0xFFD
  7396                           pclath	equ	0xFFA
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           intcon	equ	0xFF2
  7404                           intcon2	equ	0xFF1
  7405                           intcon3	equ	0xFF0
  7406                           postinc0	equ	0xFEE
  7407                           plusw0	equ	0xFEB
  7408                           wreg	equ	0xFE8
  7409                           postinc1	equ	0xFE6
  7410                           postdec1	equ	0xFE5
  7411                           fsr1h	equ	0xFE2
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           plusw2	equ	0xFDB
  7417                           fsr2h	equ	0xFDA
  7418                           fsr2l	equ	0xFD9
  7419                           status	equ	0xFD8
  7420                           
  7421 ;; *************** function _USBDeviceTasks *****************
  7422 ;; Defined at:
  7423 ;;		line 495 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;		None
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  i               1   56[BANK0 ] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;Total ram usage:        1 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:   19
  7444 ;; This function calls:
  7445 ;;		_USBCtrlEPAllowStatusStage
  7446 ;;		_USBCtrlEPService
  7447 ;;		_USBDeviceInit
  7448 ;;		_USBIncrement1msInternalTimers
  7449 ;;		_USBStallHandler
  7450 ;;		_USBSuspend
  7451 ;;		_USBWakeFromSuspend
  7452 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7453 ;; This function is called by:
  7454 ;;		_UsbDevice_MainTask
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text28
  7459  001BAA                     __ptext28:
  7460                           	opt stack 0
  7461  001BAA                     _USBDeviceTasks:
  7462                           	opt stack 8
  7463                           
  7464                           ;usb_device.c: 562: }
  7465                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  7466                           
  7467                           ; BSR set to: 0
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;usb_device.c: 561: return;
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  7474                           
  7475                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  7476                           
  7477                           ;usb_device.c: 529: UIE = 0;
  7478                           
  7479                           ;usb_device.c: 524: {
  7480                           ;usb_device.c: 526: UCON = 0;
  7481                           
  7482                           ;usb_device.c: 497: uint8_t i;
  7483                           ;usb_device.c: 523: if (1 != 1)
  7484                           
  7485                           ;incstack = 0
  7486  001BAA  0100               	movlb	0	; () banked
  7487  001BAC  51CE               	movf	_USBDeviceState& (0+255),w,b
  7488  001BAE  A4D8               	btfss	status,2,c
  7489  001BB0  D012               	goto	l1615
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;usb_device.c: 585: {
  7493                           ;usb_device.c: 587: UCON = 0;
  7494  001BB2  0E00               	movlw	0
  7495  001BB4  6E65               	movwf	3941,c	;volatile
  7496                           
  7497                           ;usb_device.c: 590: UIE = 0;
  7498  001BB6  0E00               	movlw	0
  7499  001BB8  010F               	movlb	15	; () banked
  7500  001BBA  6F36               	movwf	54,b	;volatile
  7501                           
  7502                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7503  001BBC  0E16               	movlw	22
  7504  001BBE  6F39               	movwf	57,b	;volatile
  7505  001BC0  0E9F               	movlw	159
  7506  001BC2  6F37               	movwf	55,b	;volatile
  7507  001BC4  0E7B               	movlw	123
  7508  001BC6  6F36               	movwf	54,b	;volatile
  7509                           
  7510                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7511  001BC8  D001               	goto	l1616
  7512  001BCA                     l1617:
  7513  001BCA  8665               	bsf	3941,3,c	;volatile
  7514  001BCC                     l1616:
  7515  001BCC  A665               	btfss	3941,3,c	;volatile
  7516  001BCE  D7FD               	goto	l1617
  7517                           
  7518                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  7519  001BD0  0E01               	movlw	1
  7520  001BD2  0100               	movlb	0	; () banked
  7521  001BD4  6FCE               	movwf	_USBDeviceState& (0+255),b
  7522  001BD6                     l1615:
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;usb_device.c: 605: }
  7526                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  7527                           
  7528                           ; BSR set to: 0
  7529  001BD6  05CE               	decf	_USBDeviceState& (0+255),w,b
  7530  001BD8  B4D8               	btfsc	status,2,c
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;usb_device.c: 609: {
  7534                           ;usb_device.c: 619: if(!UCONbits.SE0)
  7535  001BDA  BA65               	btfsc	3941,5,c	;volatile
  7536  001BDC  D00A               	goto	l1620
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;usb_device.c: 620: {
  7540                           ;usb_device.c: 626: {UIR = 0;};
  7541  001BDE  0E00               	movlw	0
  7542  001BE0  6E62               	movwf	3938,c	;volatile
  7543                           
  7544                           ;usb_device.c: 630: UIE=0;
  7545  001BE2  0E00               	movlw	0
  7546  001BE4  010F               	movlb	15	; () banked
  7547  001BE6  6F36               	movwf	54,b	;volatile
  7548                           
  7549                           ; BSR set to: 15
  7550                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  7551  001BE8  8136               	bsf	54,0,b	;volatile
  7552                           
  7553                           ; BSR set to: 15
  7554                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  7555  001BEA  8936               	bsf	54,4,b	;volatile
  7556                           
  7557                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  7558  001BEC  0E02               	movlw	2
  7559  001BEE  0100               	movlb	0	; () banked
  7560  001BF0  6FCE               	movwf	_USBDeviceState& (0+255),b
  7561  001BF2                     l1620:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;usb_device.c: 635: }
  7565                           ;usb_device.c: 636: }
  7566                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7567                           
  7568                           ; BSR set to: 0
  7569                           
  7570                           ; BSR set to: 0
  7571  001BF2  A462               	btfss	3938,2,c	;volatile
  7572  001BF4  D006               	goto	l1621
  7573                           
  7574                           ; BSR set to: 0
  7575  001BF6  010F               	movlb	15	; () banked
  7576  001BF8  A536               	btfss	54,2,b	;volatile
  7577  001BFA  D003               	goto	l1621
  7578                           
  7579                           ; BSR set to: 15
  7580                           ;usb_device.c: 653: {
  7581                           ;usb_device.c: 654: (UIR &= 0xFB);
  7582  001BFC  9462               	bcf	3938,2,c	;volatile
  7583                           
  7584                           ; BSR set to: 15
  7585                           ;usb_device.c: 658: USBWakeFromSuspend();
  7586  001BFE  EC89  F031         	call	_USBWakeFromSuspend	;wreg free
  7587  001C02                     l1621:
  7588                           
  7589                           ;usb_device.c: 660: }
  7590                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  7591  001C02  A265               	btfss	3941,1,c	;volatile
  7592  001C04  D002               	goto	l1622
  7593                           
  7594                           ;usb_device.c: 666: {
  7595                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  7596  001C06  98A1               	bcf	4001,4,c	;volatile
  7597                           
  7598                           ;usb_device.c: 668: return;
  7599  001C08  0012               	return	
  7600  001C0A                     l1622:
  7601                           
  7602                           ;usb_device.c: 669: }
  7603                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7604  001C0A  A062               	btfss	3938,0,c	;volatile
  7605  001C0C  D009               	goto	l1623
  7606  001C0E  010F               	movlb	15	; () banked
  7607  001C10  A136               	btfss	54,0,b	;volatile
  7608  001C12  D006               	goto	l1623
  7609                           
  7610                           ; BSR set to: 15
  7611                           ;usb_device.c: 682: {
  7612                           ;usb_device.c: 683: USBDeviceInit();
  7613  001C14  ECC5  F012         	call	_USBDeviceInit	;wreg free
  7614                           
  7615                           ;usb_device.c: 687: ;
  7616                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  7617  001C18  0E04               	movlw	4
  7618  001C1A  0100               	movlb	0	; () banked
  7619  001C1C  6FCE               	movwf	_USBDeviceState& (0+255),b
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;usb_device.c: 699: (UIR &= 0xFE);
  7623  001C1E  9062               	bcf	3938,0,c	;volatile
  7624  001C20                     l1623:
  7625                           
  7626                           ;usb_device.c: 700: }
  7627                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7628                           
  7629                           ; BSR set to: 0
  7630  001C20  A862               	btfss	3938,4,c	;volatile
  7631  001C22  D004               	goto	l1624
  7632  001C24  010F               	movlb	15	; () banked
  7633  001C26  B936               	btfsc	54,4,b	;volatile
  7634                           
  7635                           ; BSR set to: 15
  7636                           ;usb_device.c: 706: {
  7637                           ;usb_device.c: 712: USBSuspend();
  7638  001C28  EC2E  F032         	call	_USBSuspend	;wreg free
  7639  001C2C                     l1624:
  7640                           
  7641                           ;usb_device.c: 714: }
  7642                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  7643  001C2C  AC62               	btfss	3938,6,c	;volatile
  7644  001C2E  D01C               	goto	l1628
  7645                           
  7646                           ;usb_device.c: 727: {
  7647                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  7648  001C30  010F               	movlb	15	; () banked
  7649  001C32  AD36               	btfss	54,6,b	;volatile
  7650  001C34  D00F               	goto	l1626
  7651                           
  7652                           ; BSR set to: 15
  7653                           ;usb_device.c: 730: {
  7654                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7655  001C36  0E00               	movlw	0
  7656  001C38  0100               	movlb	0	; () banked
  7657  001C3A  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7658  001C3C  0E73               	movlw	115
  7659  001C3E  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7660  001C40  0E00               	movlw	0
  7661  001C42  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7662  001C44  0E00               	movlw	0
  7663  001C46  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7664  001C48  0E00               	movlw	0
  7665  001C4A  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7666  001C4C  0E01               	movlw	1
  7667  001C4E  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7668  001C50  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7669  001C54                     l1626:
  7670                           
  7671                           ;usb_device.c: 732: }
  7672                           ;usb_device.c: 733: (UIR &= 0xBF);
  7673  001C54  9C62               	bcf	3938,6,c	;volatile
  7674                           
  7675                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  7676  001C56  ECAE  F033         	call	_USBIncrement1msInternalTimers	;wreg free
  7677                           
  7678                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  7679  001C5A  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7680  001C5C  A4D8               	btfss	status,2,c
  7681                           
  7682                           ;usb_device.c: 754: {
  7683                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  7684  001C5E  0629               	decf	_USBStatusStageTimeoutCounter,f,c
  7685                           
  7686                           ;usb_device.c: 756: }
  7687                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  7688  001C60  5029               	movf	_USBStatusStageTimeoutCounter,w,c
  7689  001C62  B4D8               	btfsc	status,2,c
  7690                           
  7691                           ;usb_device.c: 763: {
  7692                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  7693  001C64  EC4B  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7694  001C68                     l1628:
  7695                           
  7696                           ;usb_device.c: 765: }
  7697                           ;usb_device.c: 767: }
  7698                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7699  001C68  AA62               	btfss	3938,5,c	;volatile
  7700  001C6A  D004               	goto	l1629
  7701  001C6C  010F               	movlb	15	; () banked
  7702  001C6E  BB36               	btfsc	54,5,b	;volatile
  7703                           
  7704                           ; BSR set to: 15
  7705                           ;usb_device.c: 770: {
  7706                           ;usb_device.c: 771: USBStallHandler();
  7707  001C70  EC06  F030         	call	_USBStallHandler	;wreg free
  7708  001C74                     l1629:
  7709                           
  7710                           ;usb_device.c: 772: }
  7711                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7712  001C74  A262               	btfss	3938,1,c	;volatile
  7713  001C76  D013               	goto	l1630
  7714  001C78  010F               	movlb	15	; () banked
  7715  001C7A  A336               	btfss	54,1,b	;volatile
  7716  001C7C  D010               	goto	l1630
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;usb_device.c: 775: {
  7720                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7721  001C7E  0E7F               	movlw	127
  7722  001C80  0100               	movlb	0	; () banked
  7723  001C82  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7724  001C84  6989               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7725  001C86  0E00               	movlw	0
  7726  001C88  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7727  001C8A  0E00               	movlw	0
  7728  001C8C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7729  001C8E  0E00               	movlw	0
  7730  001C90  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7731  001C92  0E01               	movlw	1
  7732  001C94  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7733  001C96  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7734                           
  7735                           ;usb_device.c: 777: {UEIR = 0;};
  7736  001C9A  0E00               	movlw	0
  7737  001C9C  6E63               	movwf	3939,c	;volatile
  7738  001C9E                     l1630:
  7739                           
  7740                           ;usb_device.c: 785: }
  7741                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  7742  001C9E  0E04               	movlw	4
  7743  001CA0  0100               	movlb	0	; () banked
  7744  001CA2  61CE               	cpfslt	_USBDeviceState& (0+255),b
  7745  001CA4  D002               	goto	l1631
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;usb_device.c: 793: {
  7749                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  7750  001CA6  98A1               	bcf	4001,4,c	;volatile
  7751                           
  7752                           ;usb_device.c: 795: return;
  7753  001CA8  0012               	return	
  7754  001CAA                     l1631:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;usb_device.c: 796: }
  7758                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  7759  001CAA  010F               	movlb	15	; () banked
  7760  001CAC  A736               	btfss	54,3,b	;volatile
  7761  001CAE  D03E               	goto	u15610
  7762                           
  7763                           ; BSR set to: 15
  7764                           ;usb_device.c: 802: {
  7765                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  7766  001CB0  0E00               	movlw	0
  7767  001CB2  0100               	movlb	0	; () banked
  7768  001CB4  6F98               	movwf	USBDeviceTasks@i& (0+255),b
  7769  001CB6                     l15965:
  7770                           
  7771                           ; BSR set to: 0
  7772  001CB6  0E03               	movlw	3
  7773  001CB8  6598               	cpfsgt	USBDeviceTasks@i& (0+255),b
  7774  001CBA  D001               	goto	l1633
  7775  001CBC  D037               	goto	u15610
  7776  001CBE                     l1633:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;usb_device.c: 804: {
  7780                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  7781  001CBE  A662               	btfss	3938,3,c	;volatile
  7782  001CC0  D035               	goto	u15610
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;usb_device.c: 806: {
  7786                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  7787  001CC2  CF64 F0D6          	movff	3940,_USTATcopy	;volatile
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  7791  001CC6  31D6               	rrcf	_USTATcopy& (0+255),w,b
  7792  001CC8  32E8               	rrcf	wreg,f,c
  7793  001CCA  32E8               	rrcf	wreg,f,c
  7794  001CCC  0B0F               	andlw	15
  7795  001CCE  6FCB               	movwf	_endpoint_number& (0+255),b
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;usb_device.c: 811: (UIR &= 0xF7);
  7799  001CD0  9662               	bcf	3938,3,c	;volatile
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  7803  001CD2  B5D6               	btfsc	_USTATcopy& (0+255),2,b
  7804  001CD4  D007               	goto	l1636
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;usb_device.c: 817: {
  7808                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7809  001CD6  51CB               	movf	_endpoint_number& (0+255),w,b
  7810  001CD8  0D01               	mullw	1
  7811  001CDA  0ECE               	movlw	low _ep_data_out
  7812  001CDC  24F3               	addwf	prodl,w,c
  7813  001CDE  6ED9               	movwf	fsr2l,c
  7814  001CE0  0E02               	movlw	high _ep_data_out
  7815  001CE2  D007               	goto	L3
  7816  001CE4                     l1636:
  7817                           
  7818                           ;usb_device.c: 820: else
  7819                           ;usb_device.c: 821: {
  7820                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7821                           
  7822                           ; BSR set to: 2
  7823  001CE4  0100               	movlb	0	; () banked
  7824  001CE6  51CB               	movf	_endpoint_number& (0+255),w,b
  7825  001CE8  0D01               	mullw	1
  7826  001CEA  0ED1               	movlw	low _ep_data_in
  7827  001CEC  24F3               	addwf	prodl,w,c
  7828  001CEE  6ED9               	movwf	fsr2l,c
  7829  001CF0  0E02               	movlw	high _ep_data_in
  7830  001CF2                     L3:
  7831  001CF2  20F4               	addwfc	prodh,w,c
  7832  001CF4  6EDA               	movwf	fsr2h,c
  7833  001CF6  0102               	movlb	2	; () banked
  7834  001CF8  70DF               	btg	indf2,0,c
  7835                           
  7836                           ; BSR set to: 2
  7837                           ;usb_device.c: 823: }
  7838                           ;usb_device.c: 828: if(endpoint_number == 0)
  7839                           
  7840                           ; BSR set to: 2
  7841  001CFA  0100               	movlb	0	; () banked
  7842  001CFC  51CB               	movf	_endpoint_number& (0+255),w,b
  7843  001CFE  A4D8               	btfss	status,2,c
  7844  001D00  D003               	goto	l1638
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;usb_device.c: 829: {
  7848                           ;usb_device.c: 830: USBCtrlEPService();
  7849  001D02  EC34  F026         	call	_USBCtrlEPService	;wreg free
  7850                           
  7851                           ;usb_device.c: 831: }
  7852  001D06  D00F               	goto	l1640
  7853  001D08                     l1638:
  7854                           
  7855                           ;usb_device.c: 832: else
  7856                           ;usb_device.c: 833: {
  7857                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7858  001D08  0E00               	movlw	0
  7859  001D0A  0100               	movlb	0	; () banked
  7860  001D0C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7861  001D0E  0E72               	movlw	114
  7862  001D10  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7863  001D12  0ED6               	movlw	low _USTATcopy
  7864  001D14  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7865  001D16  0E00               	movlw	high _USTATcopy
  7866  001D18  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7867  001D1A  0E00               	movlw	0
  7868  001D1C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7869  001D1E  0E00               	movlw	0
  7870  001D20  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7871  001D22  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7872  001D26                     l1640:
  7873  001D26  0100               	movlb	0	; () banked
  7874  001D28  2B98               	incf	USBDeviceTasks@i& (0+255),f,b
  7875  001D2A  D7C5               	goto	l15965
  7876  001D2C                     u15610:
  7877                           
  7878                           ;usb_device.c: 840: }
  7879                           ;usb_device.c: 841: }
  7880                           ;usb_device.c: 842: }
  7881                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  7882                           
  7883                           ; BSR set to: 0
  7884  001D2C  98A1               	bcf	4001,4,c	;volatile
  7885  001D2E  0012               	return		;funcret
  7886  001D30                     __end_of_USBDeviceTasks:
  7887                           	opt stack 0
  7888                           tosu	equ	0xFFF
  7889                           tosh	equ	0xFFE
  7890                           tosl	equ	0xFFD
  7891                           pclath	equ	0xFFA
  7892                           tblptru	equ	0xFF8
  7893                           tblptrh	equ	0xFF7
  7894                           tblptrl	equ	0xFF6
  7895                           tablat	equ	0xFF5
  7896                           prodh	equ	0xFF4
  7897                           prodl	equ	0xFF3
  7898                           intcon	equ	0xFF2
  7899                           intcon2	equ	0xFF1
  7900                           intcon3	equ	0xFF0
  7901                           postinc0	equ	0xFEE
  7902                           plusw0	equ	0xFEB
  7903                           wreg	equ	0xFE8
  7904                           postinc1	equ	0xFE6
  7905                           postdec1	equ	0xFE5
  7906                           fsr1h	equ	0xFE2
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           plusw2	equ	0xFDB
  7912                           fsr2h	equ	0xFDA
  7913                           fsr2l	equ	0xFD9
  7914                           status	equ	0xFD8
  7915                           
  7916 ;; *************** function _USBWakeFromSuspend *****************
  7917 ;; Defined at:
  7918 ;;		line 2321 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;Total ram usage:        0 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:   15
  7939 ;; This function calls:
  7940 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7941 ;; This function is called by:
  7942 ;;		_USBDeviceTasks
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text29
  7947  006312                     __ptext29:
  7948                           	opt stack 0
  7949  006312                     _USBWakeFromSuspend:
  7950                           	opt stack 11
  7951                           
  7952                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  7953                           
  7954                           ;incstack = 0
  7955  006312  0E00               	movlw	0
  7956  006314  0101               	movlb	1	; () banked
  7957  006316  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  7958                           
  7959                           ; BSR set to: 1
  7960                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  7961  006318  0E00               	movlw	0
  7962  00631A  0100               	movlb	0	; () banked
  7963  00631C  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7964  00631E  0E74               	movlw	116
  7965  006320  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7966  006322  0E00               	movlw	0
  7967  006324  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7968  006326  0E00               	movlw	0
  7969  006328  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7970  00632A  0E00               	movlw	0
  7971  00632C  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7972  00632E  0E00               	movlw	0
  7973  006330  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7974  006332  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7975                           
  7976                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  7977  006336  9265               	bcf	3941,1,c	;volatile
  7978                           
  7979                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  7980  006338  010F               	movlb	15	; () banked
  7981  00633A  9536               	bcf	54,2,b	;volatile
  7982                           
  7983                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  7984  00633C  D001               	goto	l1768
  7985  00633E                     
  7986                           ;usb_device.c: 2361: {
  7987                           ;usb_device.c: 2362: (UIR &= 0xFB);
  7988                           
  7989                           ; BSR set to: 15
  7990  00633E  9462               	bcf	3938,2,c	;volatile
  7991  006340                     l1768:
  7992  006340  B462               	btfsc	3938,2,c	;volatile
  7993  006342  D7FD               	goto	l1769
  7994                           
  7995                           ;usb_device.c: 2363: }
  7996                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  7997  006344  0E00               	movlw	0
  7998  006346  0101               	movlb	1	; () banked
  7999  006348  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8000                           
  8001                           ; BSR set to: 1
  8002  00634A  0012               	return		;funcret
  8003  00634C                     __end_of_USBWakeFromSuspend:
  8004                           	opt stack 0
  8005                           tosu	equ	0xFFF
  8006                           tosh	equ	0xFFE
  8007                           tosl	equ	0xFFD
  8008                           pclath	equ	0xFFA
  8009                           tblptru	equ	0xFF8
  8010                           tblptrh	equ	0xFF7
  8011                           tblptrl	equ	0xFF6
  8012                           tablat	equ	0xFF5
  8013                           prodh	equ	0xFF4
  8014                           prodl	equ	0xFF3
  8015                           intcon	equ	0xFF2
  8016                           intcon2	equ	0xFF1
  8017                           intcon3	equ	0xFF0
  8018                           postinc0	equ	0xFEE
  8019                           plusw0	equ	0xFEB
  8020                           wreg	equ	0xFE8
  8021                           postinc1	equ	0xFE6
  8022                           postdec1	equ	0xFE5
  8023                           fsr1h	equ	0xFE2
  8024                           fsr1l	equ	0xFE1
  8025                           indf2	equ	0xFDF
  8026                           postinc2	equ	0xFDE
  8027                           postdec2	equ	0xFDD
  8028                           plusw2	equ	0xFDB
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function _USBSuspend *****************
  8034 ;; Defined at:
  8035 ;;		line 2263 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:   15
  8056 ;; This function calls:
  8057 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8058 ;; This function is called by:
  8059 ;;		_USBDeviceTasks
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text30
  8064  00645C                     __ptext30:
  8065                           	opt stack 0
  8066  00645C                     _USBSuspend:
  8067                           	opt stack 11
  8068                           
  8069                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  8070                           
  8071                           ; BSR set to: 1
  8072                           ;incstack = 0
  8073  00645C  010F               	movlb	15	; () banked
  8074  00645E  8536               	bsf	54,2,b	;volatile
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;usb_device.c: 2289: (UIR &= 0xEF);
  8078  006460  9862               	bcf	3938,4,c	;volatile
  8079                           
  8080                           ; BSR set to: 15
  8081                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  8082  006462  8265               	bsf	3941,1,c	;volatile
  8083                           
  8084                           ; BSR set to: 15
  8085                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  8086  006464  0E01               	movlw	1
  8087  006466  0101               	movlb	1	; () banked
  8088  006468  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8089                           
  8090                           ; BSR set to: 1
  8091                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  8092  00646A  0E00               	movlw	0
  8093  00646C  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8094                           
  8095                           ; BSR set to: 1
  8096                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  8097  00646E  0E00               	movlw	0
  8098  006470  0100               	movlb	0	; () banked
  8099  006472  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8100  006474  0E75               	movlw	117
  8101  006476  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8102  006478  0E00               	movlw	0
  8103  00647A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8104  00647C  0E00               	movlw	0
  8105  00647E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8106  006480  0E00               	movlw	0
  8107  006482  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8108  006484  0E00               	movlw	0
  8109  006486  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8110  006488  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8111  00648C  0012               	return		;funcret
  8112  00648E                     __end_of_USBSuspend:
  8113                           	opt stack 0
  8114                           tosu	equ	0xFFF
  8115                           tosh	equ	0xFFE
  8116                           tosl	equ	0xFFD
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           intcon2	equ	0xFF1
  8126                           intcon3	equ	0xFF0
  8127                           postinc0	equ	0xFEE
  8128                           plusw0	equ	0xFEB
  8129                           wreg	equ	0xFE8
  8130                           postinc1	equ	0xFE6
  8131                           postdec1	equ	0xFE5
  8132                           fsr1h	equ	0xFE2
  8133                           fsr1l	equ	0xFE1
  8134                           indf2	equ	0xFDF
  8135                           postinc2	equ	0xFDE
  8136                           postdec2	equ	0xFDD
  8137                           plusw2	equ	0xFDB
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function _USBStallHandler *****************
  8143 ;; Defined at:
  8144 ;;		line 2220 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8161 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8162 ;;Total ram usage:        1 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:   11
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_USBDeviceTasks
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text31
  8173  00600C                     __ptext31:
  8174                           	opt stack 0
  8175  00600C                     _USBStallHandler:
  8176                           	opt stack 15
  8177                           
  8178                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  8179                           
  8180                           ;incstack = 0
  8181  00600C  010F               	movlb	15	; () banked
  8182  00600E  A126               	btfss	38,0,b	;volatile
  8183  006010  D01D               	goto	l1760
  8184                           
  8185                           ; BSR set to: 15
  8186                           ;usb_device.c: 2233: {
  8187                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  8188  006012  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8189  006016  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8190  00601A  0E80               	movlw	128
  8191  00601C  18DE               	xorwf	postinc2,w,c
  8192  00601E  A4D8               	btfss	status,2,c
  8193  006020  D014               	goto	l1761
  8194                           
  8195                           ; BSR set to: 15
  8196  006022  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  8197  006026  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8198  00602A  0E84               	movlw	132
  8199  00602C  18DE               	xorwf	postinc2,w,c
  8200  00602E  A4D8               	btfss	status,2,c
  8201  006030  D00C               	goto	l1761
  8202                           
  8203                           ; BSR set to: 15
  8204                           ;usb_device.c: 2236: {
  8205                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8206  006032  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8207  006036  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8208  00603A  0E0C               	movlw	12
  8209  00603C  6EDF               	movwf	indf2,c
  8210                           
  8211                           ; BSR set to: 15
  8212                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8213  00603E  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8214  006042  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8215  006046  0E00               	movlw	0
  8216  006048  8EDB               	bsf	plusw2,7,c
  8217  00604A                     l1761:
  8218                           
  8219                           ; BSR set to: 15
  8220                           ;usb_device.c: 2240: }
  8221                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  8222                           
  8223                           ; BSR set to: 15
  8224  00604A  9126               	bcf	38,0,b	;volatile
  8225  00604C                     l1760:
  8226                           
  8227                           ; BSR set to: 15
  8228                           ;usb_device.c: 2242: }
  8229                           ;usb_device.c: 2244: (UIR &= 0xDF);
  8230  00604C  9A62               	bcf	3938,5,c	;volatile
  8231                           
  8232                           ; BSR set to: 15
  8233  00604E  0012               	return		;funcret
  8234  006050                     __end_of_USBStallHandler:
  8235                           	opt stack 0
  8236                           tosu	equ	0xFFF
  8237                           tosh	equ	0xFFE
  8238                           tosl	equ	0xFFD
  8239                           pclath	equ	0xFFA
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           prodh	equ	0xFF4
  8245                           prodl	equ	0xFF3
  8246                           intcon	equ	0xFF2
  8247                           intcon2	equ	0xFF1
  8248                           intcon3	equ	0xFF0
  8249                           postinc0	equ	0xFEE
  8250                           plusw0	equ	0xFEB
  8251                           wreg	equ	0xFE8
  8252                           postinc1	equ	0xFE6
  8253                           postdec1	equ	0xFE5
  8254                           fsr1h	equ	0xFE2
  8255                           fsr1l	equ	0xFE1
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           plusw2	equ	0xFDB
  8260                           fsr2h	equ	0xFDA
  8261                           fsr2l	equ	0xFD9
  8262                           status	equ	0xFD8
  8263                           
  8264 ;; *************** function _USBIncrement1msInternalTimers *****************
  8265 ;; Defined at:
  8266 ;;		line 3042 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1    wreg      void 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8284 ;;Total ram usage:        0 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:   11
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_USBDeviceTasks
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           	psect	text32
  8295  00675C                     __ptext32:
  8296                           	opt stack 0
  8297  00675C                     _USBIncrement1msInternalTimers:
  8298                           	opt stack 15
  8299                           
  8300                           ;usb_device.c: 3050: USB1msTickCount++;
  8301                           
  8302                           ; BSR set to: 15
  8303                           ;incstack = 0
  8304  00675C  0E01               	movlw	1
  8305  00675E  0103               	movlb	3	; () banked
  8306  006760  2710               	addwf	_USB1msTickCount& (0+255),f,b
  8307  006762  0E00               	movlw	0
  8308  006764  2311               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  8309  006766  2312               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  8310  006768  2313               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  8311                           
  8312                           ; BSR set to: 3
  8313                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  8314  00676A  0101               	movlb	1	; () banked
  8315  00676C  51E0               	movf	_USBBusIsSuspended& (0+255),w,b
  8316  00676E  A4D8               	btfss	status,2,c
  8317  006770  0012               	return	
  8318                           
  8319                           ; BSR set to: 1
  8320                           ;usb_device.c: 3052: {
  8321                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  8322  006772  2BDE               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  8323                           
  8324                           ; BSR set to: 1
  8325                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  8326  006774  51DE               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  8327  006776  A4D8               	btfss	status,2,c
  8328  006778  0012               	return	
  8329                           
  8330                           ; BSR set to: 1
  8331                           ;usb_device.c: 3056: {
  8332                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  8333  00677A  69DE               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  8334                           
  8335                           ; BSR set to: 1
  8336  00677C  0012               	return	
  8337  00677E                     __end_of_USBIncrement1msInternalTimers:
  8338                           	opt stack 0
  8339                           tosu	equ	0xFFF
  8340                           tosh	equ	0xFFE
  8341                           tosl	equ	0xFFD
  8342                           pclath	equ	0xFFA
  8343                           tblptru	equ	0xFF8
  8344                           tblptrh	equ	0xFF7
  8345                           tblptrl	equ	0xFF6
  8346                           tablat	equ	0xFF5
  8347                           prodh	equ	0xFF4
  8348                           prodl	equ	0xFF3
  8349                           intcon	equ	0xFF2
  8350                           intcon2	equ	0xFF1
  8351                           intcon3	equ	0xFF0
  8352                           postinc0	equ	0xFEE
  8353                           plusw0	equ	0xFEB
  8354                           wreg	equ	0xFE8
  8355                           postinc1	equ	0xFE6
  8356                           postdec1	equ	0xFE5
  8357                           fsr1h	equ	0xFE2
  8358                           fsr1l	equ	0xFE1
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           postdec2	equ	0xFDD
  8362                           plusw2	equ	0xFDB
  8363                           fsr2h	equ	0xFDA
  8364                           fsr2l	equ	0xFD9
  8365                           status	equ	0xFD8
  8366                           
  8367 ;; *************** function _USBDeviceInit *****************
  8368 ;; Defined at:
  8369 ;;		line 295 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  i               1   37[BANK0 ] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8387 ;;Total ram usage:        1 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:   12
  8390 ;; This function calls:
  8391 ;;		_memset
  8392 ;; This function is called by:
  8393 ;;		_USBDeviceTasks
  8394 ;;		_UsbDevice_MainTask
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text33
  8399  00258A                     __ptext33:
  8400                           	opt stack 0
  8401  00258A                     _USBDeviceInit:
  8402                           	opt stack 14
  8403                           
  8404                           ;usb_device.c: 297: uint8_t i;
  8405                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  8406                           
  8407                           ; BSR set to: 1
  8408                           ;incstack = 0
  8409  00258A  98A0               	bcf	4000,4,c	;volatile
  8410                           
  8411                           ;usb_device.c: 303: ;
  8412                           ;usb_device.c: 306: {UEIR = 0;};
  8413  00258C  0E00               	movlw	0
  8414  00258E  6E63               	movwf	3939,c	;volatile
  8415                           
  8416                           ;usb_device.c: 309: {UIR = 0;};
  8417  002590  0E00               	movlw	0
  8418  002592  6E62               	movwf	3938,c	;volatile
  8419                           
  8420                           ;usb_device.c: 312: UEP0 = 0;
  8421  002594  0E00               	movlw	0
  8422  002596  010F               	movlb	15	; () banked
  8423  002598  6F26               	movwf	38,b	;volatile
  8424                           
  8425                           ; BSR set to: 15
  8426                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  8427  00259A  0E27               	movlw	39
  8428  00259C  0100               	movlb	0	; () banked
  8429  00259E  6F7D               	movwf	memset@p1& (0+255),b
  8430  0025A0  0E0F               	movlw	15
  8431  0025A2  6F7E               	movwf	(memset@p1+1)& (0+255),b
  8432  0025A4  0E00               	movlw	0
  8433  0025A6  6F80               	movwf	(memset@c+1)& (0+255),b
  8434  0025A8  0E00               	movlw	0
  8435  0025AA  6F7F               	movwf	memset@c& (0+255),b
  8436  0025AC  0E00               	movlw	0
  8437  0025AE  6F82               	movwf	(memset@n+1)& (0+255),b
  8438  0025B0  0E02               	movlw	2
  8439  0025B2  6F81               	movwf	memset@n& (0+255),b
  8440  0025B4  EC78  F032         	call	_memset	;wreg free
  8441                           
  8442                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8443  0025B8  0E16               	movlw	22
  8444  0025BA  010F               	movlb	15	; () banked
  8445  0025BC  6F39               	movwf	57,b	;volatile
  8446                           
  8447                           ; BSR set to: 15
  8448  0025BE  0E9F               	movlw	159
  8449  0025C0  6F37               	movwf	55,b	;volatile
  8450                           
  8451                           ; BSR set to: 15
  8452  0025C2  0E7B               	movlw	123
  8453  0025C4  6F36               	movwf	54,b	;volatile
  8454                           
  8455                           ; BSR set to: 15
  8456                           ;usb_device.c: 319: ;
  8457                           ;usb_device.c: 322: ;
  8458                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8459  0025C6  0E00               	movlw	0
  8460  0025C8  0100               	movlb	0	; () banked
  8461  0025CA  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8462  0025CC                     l14625:
  8463                           
  8464                           ; BSR set to: 0
  8465  0025CC  0E0B               	movlw	11
  8466  0025CE  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8467  0025D0  D001               	goto	l1604
  8468  0025D2  D00E               	goto	u13710
  8469  0025D4                     l1604:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;usb_device.c: 326: {
  8473                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  8474                           
  8475                           ; BSR set to: 0
  8476  0025D4  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8477  0025D6  0D04               	mullw	4
  8478  0025D8  0E00               	movlw	0
  8479  0025DA  24F3               	addwf	prodl,w,c
  8480  0025DC  6ED9               	movwf	fsr2l,c
  8481  0025DE  0E04               	movlw	4
  8482  0025E0  20F4               	addwfc	prodh,w,c
  8483  0025E2  6EDA               	movwf	fsr2h,c
  8484  0025E4  6ADE               	clrf	postinc2,c
  8485  0025E6  6ADE               	clrf	postinc2,c
  8486  0025E8  6ADE               	clrf	postinc2,c
  8487  0025EA  6ADD               	clrf	postdec2,c
  8488                           
  8489                           ; BSR set to: 0
  8490  0025EC  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8491  0025EE  D7EE               	goto	l14625
  8492  0025F0                     u13710:
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;usb_device.c: 328: }
  8496                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  8497  0025F0  8C65               	bsf	3941,6,c	;volatile
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;usb_device.c: 334: UADDR = 0x00;
  8501  0025F2  0E00               	movlw	0
  8502  0025F4  010F               	movlb	15	; () banked
  8503  0025F6  6F38               	movwf	56,b	;volatile
  8504                           
  8505                           ; BSR set to: 15
  8506                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  8507  0025F8  9865               	bcf	3941,4,c	;volatile
  8508                           
  8509                           ; BSR set to: 15
  8510                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  8511  0025FA  9C65               	bcf	3941,6,c	;volatile
  8512  0025FC                     
  8513                           ;usb_device.c: 344: {
  8514                           ;usb_device.c: 345: (UIR &= 0xF7);
  8515                           
  8516                           ; BSR set to: 15
  8517  0025FC  9662               	bcf	3938,3,c	;volatile
  8518                           
  8519                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  8520  0025FE  0E00               	movlw	0
  8521  002600  0100               	movlb	0	; () banked
  8522  002602  6FB3               	movwf	(_inPipes+3)& (0+255),b
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  8526  002604  0E00               	movlw	0
  8527  002606  0101               	movlb	1	; () banked
  8528  002608  6FCC               	movwf	(_outPipes+3)& (0+255),b
  8529                           
  8530                           ; BSR set to: 1
  8531                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  8532  00260A  0E00               	movlw	0
  8533  00260C  6FCE               	movwf	(_outPipes+5)& (0+255),b
  8534  00260E  0E00               	movlw	0
  8535  002610  6FCD               	movwf	(_outPipes+4)& (0+255),b
  8536                           
  8537                           ; BSR set to: 1
  8538                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  8539  002612  B662               	btfsc	3938,3,c	;volatile
  8540  002614  D7F3               	goto	l1606
  8541                           
  8542                           ; BSR set to: 1
  8543                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  8544                           
  8545                           ; BSR set to: 1
  8546  002616  0E01               	movlw	1
  8547  002618  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8548                           
  8549                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  8550  00261A  0E01               	movlw	1
  8551  00261C  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8552                           
  8553                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  8554  00261E  0E00               	movlw	0
  8555  002620  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8556                           
  8557                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  8558  002622  0E00               	movlw	0
  8559  002624  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8560                           
  8561                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  8562  002626  0E00               	movlw	0
  8563  002628  6FE0               	movwf	_USBBusIsSuspended& (0+255),b
  8564                           
  8565                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  8566  00262A  0E00               	movlw	0
  8567  00262C  0100               	movlb	0	; () banked
  8568  00262E  6F85               	movwf	USBDeviceInit@i& (0+255),b
  8569  002630                     l14653:
  8570                           
  8571                           ; BSR set to: 0
  8572  002630  0E02               	movlw	2
  8573  002632  6585               	cpfsgt	USBDeviceInit@i& (0+255),b
  8574  002634  D001               	goto	l1608
  8575  002636  D02E               	goto	u13740
  8576  002638                     l1608:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;usb_device.c: 364: {
  8580                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  8581                           
  8582                           ; BSR set to: 0
  8583  002638  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8584  00263A  0D02               	mullw	2
  8585  00263C  0EB6               	movlw	low _pBDTEntryIn
  8586  00263E  24F3               	addwf	prodl,w,c
  8587  002640  6ED9               	movwf	fsr2l,c
  8588  002642  0E00               	movlw	high _pBDTEntryIn
  8589  002644  20F4               	addwfc	prodh,w,c
  8590  002646  6EDA               	movwf	fsr2h,c
  8591  002648  0E00               	movlw	0
  8592  00264A  6EDE               	movwf	postinc2,c
  8593  00264C  0E00               	movlw	0
  8594  00264E  6EDD               	movwf	postdec2,c
  8595                           
  8596                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  8597  002650  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8598  002652  0D02               	mullw	2
  8599  002654  0E06               	movlw	low _pBDTEntryOut
  8600  002656  24F3               	addwf	prodl,w,c
  8601  002658  6ED9               	movwf	fsr2l,c
  8602  00265A  0E03               	movlw	high _pBDTEntryOut
  8603  00265C  20F4               	addwfc	prodh,w,c
  8604  00265E  6EDA               	movwf	fsr2h,c
  8605  002660  0E00               	movlw	0
  8606  002662  6EDE               	movwf	postinc2,c
  8607  002664  0E00               	movlw	0
  8608  002666  6EDD               	movwf	postdec2,c
  8609                           
  8610                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  8611  002668  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8612  00266A  0D01               	mullw	1
  8613  00266C  0ED1               	movlw	low _ep_data_in
  8614  00266E  24F3               	addwf	prodl,w,c
  8615  002670  6ED9               	movwf	fsr2l,c
  8616  002672  0E02               	movlw	high _ep_data_in
  8617  002674  20F4               	addwfc	prodh,w,c
  8618  002676  6EDA               	movwf	fsr2h,c
  8619  002678  0E00               	movlw	0
  8620  00267A  6EDF               	movwf	indf2,c
  8621                           
  8622                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  8623  00267C  5185               	movf	USBDeviceInit@i& (0+255),w,b
  8624  00267E  0D01               	mullw	1
  8625  002680  0ECE               	movlw	low _ep_data_out
  8626  002682  24F3               	addwf	prodl,w,c
  8627  002684  6ED9               	movwf	fsr2l,c
  8628  002686  0E02               	movlw	high _ep_data_out
  8629  002688  20F4               	addwfc	prodh,w,c
  8630  00268A  6EDA               	movwf	fsr2h,c
  8631  00268C  0E00               	movlw	0
  8632  00268E  6EDF               	movwf	indf2,c
  8633                           
  8634                           ; BSR set to: 0
  8635  002690  2B85               	incf	USBDeviceInit@i& (0+255),f,b
  8636  002692  D7CE               	goto	l14653
  8637  002694                     u13740:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;usb_device.c: 369: }
  8641                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8642                           
  8643                           ; BSR set to: 0
  8644  002694  0E08               	movlw	8
  8645  002696  6FB6               	movwf	_pBDTEntryIn& (0+255),b
  8646  002698  0E04               	movlw	4
  8647  00269A  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  8651  00269C  0E16               	movlw	22
  8652  00269E  010F               	movlb	15	; () banked
  8653  0026A0  6F26               	movwf	38,b	;volatile
  8654                           
  8655                           ; BSR set to: 15
  8656                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  8657  0026A2  0E04               	movlw	4
  8658  0026A4  0104               	movlb	4	; () banked
  8659  0026A6  6F03               	movwf	3,b	;volatile
  8660  0026A8  0E30               	movlw	48
  8661  0026AA  6F02               	movwf	2,b	;volatile
  8662                           
  8663                           ; BSR set to: 4
  8664                           ;usb_device.c: 377: BDT[0].CNT = 8;
  8665  0026AC  0E08               	movlw	8
  8666  0026AE  6F01               	movwf	1,b	;volatile
  8667                           
  8668                           ; BSR set to: 4
  8669                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  8670  0026B0  0E04               	movlw	4
  8671  0026B2  6F00               	movwf	0,b	;volatile
  8672                           
  8673                           ; BSR set to: 4
  8674                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  8675  0026B4  8F00               	bsf	0,7,b	;volatile
  8676                           
  8677                           ; BSR set to: 4
  8678                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  8679  0026B6  0E00               	movlw	0
  8680  0026B8  0100               	movlb	0	; () banked
  8681  0026BA  6FD7               	movwf	_USBActiveConfiguration& (0+255),b
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;usb_device.c: 384: USB1msTickCount = 0;
  8685  0026BC  0E00               	movlw	0
  8686  0026BE  0103               	movlb	3	; () banked
  8687  0026C0  6F10               	movwf	_USB1msTickCount& (0+255),b
  8688  0026C2  0E00               	movlw	0
  8689  0026C4  6F11               	movwf	(_USB1msTickCount+1)& (0+255),b
  8690  0026C6  0E00               	movlw	0
  8691  0026C8  6F12               	movwf	(_USB1msTickCount+2)& (0+255),b
  8692  0026CA  0E00               	movlw	0
  8693  0026CC  6F13               	movwf	(_USB1msTickCount+3)& (0+255),b
  8694                           
  8695                           ; BSR set to: 3
  8696                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  8697  0026CE  0E00               	movlw	0
  8698  0026D0  0101               	movlb	1	; () banked
  8699  0026D2  6FDE               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  8700                           
  8701                           ; BSR set to: 1
  8702                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  8703  0026D4  0E00               	movlw	0
  8704  0026D6  0100               	movlb	0	; () banked
  8705  0026D8  6FCE               	movwf	_USBDeviceState& (0+255),b
  8706                           
  8707                           ; BSR set to: 0
  8708  0026DA  0012               	return		;funcret
  8709  0026DC                     __end_of_USBDeviceInit:
  8710                           	opt stack 0
  8711                           tosu	equ	0xFFF
  8712                           tosh	equ	0xFFE
  8713                           tosl	equ	0xFFD
  8714                           pclath	equ	0xFFA
  8715                           tblptru	equ	0xFF8
  8716                           tblptrh	equ	0xFF7
  8717                           tblptrl	equ	0xFF6
  8718                           tablat	equ	0xFF5
  8719                           prodh	equ	0xFF4
  8720                           prodl	equ	0xFF3
  8721                           intcon	equ	0xFF2
  8722                           intcon2	equ	0xFF1
  8723                           intcon3	equ	0xFF0
  8724                           postinc0	equ	0xFEE
  8725                           plusw0	equ	0xFEB
  8726                           wreg	equ	0xFE8
  8727                           postinc1	equ	0xFE6
  8728                           postdec1	equ	0xFE5
  8729                           fsr1h	equ	0xFE2
  8730                           fsr1l	equ	0xFE1
  8731                           indf2	equ	0xFDF
  8732                           postinc2	equ	0xFDE
  8733                           postdec2	equ	0xFDD
  8734                           plusw2	equ	0xFDB
  8735                           fsr2h	equ	0xFDA
  8736                           fsr2l	equ	0xFD9
  8737                           status	equ	0xFD8
  8738                           
  8739 ;; *************** function _USBCtrlEPService *****************
  8740 ;; Defined at:
  8741 ;;		line 2390 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8757 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8758 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;Total ram usage:        1 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:   18
  8762 ;; This function calls:
  8763 ;;		_USBCtrlTrfInHandler
  8764 ;;		_USBCtrlTrfOutHandler
  8765 ;;		_USBCtrlTrfSetupHandler
  8766 ;;		_memcpy
  8767 ;; This function is called by:
  8768 ;;		_USBDeviceTasks
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text34
  8773  004C68                     __ptext34:
  8774                           	opt stack 0
  8775  004C68                     _USBCtrlEPService:
  8776                           	opt stack 8
  8777                           
  8778                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;incstack = 0
  8782  004C68  0E2D               	movlw	45
  8783  004C6A  6E29               	movwf	_USBStatusStageTimeoutCounter,c
  8784                           
  8785                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  8786  004C6C  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8787  004C70  0EFD               	movlw	253
  8788  004C72  0100               	movlb	0	; () banked
  8789  004C74  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8790  004C76  A4D8               	btfss	status,2,c
  8791  004C78  D038               	goto	l1774
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;usb_device.c: 2401: {
  8795                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  8796  004C7A  C0D6  F097         	movff	_USTATcopy,??_USBCtrlEPService
  8797  004C7E  90D8               	bcf	status,0,c
  8798  004C80  3397               	rrcf	??_USBCtrlEPService& (0+255),f,b
  8799  004C82  0E3F               	movlw	63
  8800  004C84  1797               	andwf	??_USBCtrlEPService& (0+255),f,b
  8801  004C86  5197               	movf	??_USBCtrlEPService& (0+255),w,b
  8802  004C88  0D04               	mullw	4
  8803  004C8A  0E00               	movlw	0
  8804  004C8C  24F3               	addwf	prodl,w,c
  8805  004C8E  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8806  004C90  0E04               	movlw	4
  8807  004C92  20F4               	addwfc	prodh,w,c
  8808  004C94  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8812  004C96  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8813  004C9A  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  8817  004C9E  0E04               	movlw	4
  8818  004CA0  1BBE               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  8822  004CA2  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8823  004CA6  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8824  004CAA  30DF               	rrcf	223,w,c
  8825  004CAC  32E8               	rrcf	wreg,f,c
  8826  004CAE  0B0F               	andlw	15
  8827  004CB0  0A0D               	xorlw	13
  8828  004CB2  A4D8               	btfss	status,2,c
  8829  004CB4  D017               	goto	l1775
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;usb_device.c: 2418: {
  8833                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  8834  004CB6  0E30               	movlw	48
  8835  004CB8  6F7D               	movwf	memcpy@d1& (0+255),b
  8836  004CBA  0E04               	movlw	4
  8837  004CBC  6F7E               	movwf	(memcpy@d1+1)& (0+255),b
  8838  004CBE  EE20 F002          	lfsr	2,2
  8839  004CC2  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8840  004CC4  26D9               	addwf	fsr2l,f,c
  8841  004CC6  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8842  004CC8  22DA               	addwfc	fsr2h,f,c
  8843  004CCA  CFDE F07F          	movff	postinc2,memcpy@s1
  8844  004CCE  CFDD F080          	movff	postdec2,memcpy@s1+1
  8845  004CD2  0E00               	movlw	0
  8846  004CD4  6F82               	movwf	(memcpy@n+1)& (0+255),b
  8847  004CD6  0E08               	movlw	8
  8848  004CD8  6F81               	movwf	memcpy@n& (0+255),b
  8849  004CDA  EC9B  F02F         	call	_memcpy	;wreg free
  8850                           
  8851                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  8852  004CDE  ECEA  F027         	call	_USBCtrlTrfSetupHandler	;wreg free
  8853                           
  8854                           ;usb_device.c: 2427: }
  8855  004CE2  0012               	return	
  8856  004CE4                     l1775:
  8857                           
  8858                           ;usb_device.c: 2428: else
  8859                           ;usb_device.c: 2429: {
  8860                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  8861  004CE4  EC38  F02B         	call	_USBCtrlTrfOutHandler	;wreg free
  8862                           
  8863                           ;usb_device.c: 2432: }
  8864                           ;usb_device.c: 2433: }
  8865  004CE8  0012               	return	
  8866  004CEA                     l1774:
  8867                           
  8868                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  8869  004CEA  0100               	movlb	0	; () banked
  8870  004CEC  51D6               	movf	_USTATcopy& (0+255),w,b
  8871  004CEE  0BFD               	andlw	253
  8872  004CF0  0A04               	xorlw	4
  8873  004CF2  A4D8               	btfss	status,2,c
  8874  004CF4  0012               	return	
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;usb_device.c: 2435: {
  8878                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  8879  004CF6  ECA4  F020         	call	_USBCtrlTrfInHandler	;wreg free
  8880  004CFA  0012               	return	
  8881  004CFC                     __end_of_USBCtrlEPService:
  8882                           	opt stack 0
  8883                           tosu	equ	0xFFF
  8884                           tosh	equ	0xFFE
  8885                           tosl	equ	0xFFD
  8886                           pclath	equ	0xFFA
  8887                           tblptru	equ	0xFF8
  8888                           tblptrh	equ	0xFF7
  8889                           tblptrl	equ	0xFF6
  8890                           tablat	equ	0xFF5
  8891                           prodh	equ	0xFF4
  8892                           prodl	equ	0xFF3
  8893                           intcon	equ	0xFF2
  8894                           intcon2	equ	0xFF1
  8895                           intcon3	equ	0xFF0
  8896                           postinc0	equ	0xFEE
  8897                           plusw0	equ	0xFEB
  8898                           wreg	equ	0xFE8
  8899                           postinc1	equ	0xFE6
  8900                           postdec1	equ	0xFE5
  8901                           fsr1h	equ	0xFE2
  8902                           fsr1l	equ	0xFE1
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           plusw2	equ	0xFDB
  8907                           fsr2h	equ	0xFDA
  8908                           fsr2l	equ	0xFD9
  8909                           status	equ	0xFD8
  8910                           
  8911 ;; *************** function _memcpy *****************
  8912 ;; Defined at:
  8913 ;;		line 27 in file "/opt/microchip/xc8/v1.45/sources/common/memcpy.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  d1              2   29[BANK0 ] PTR void 
  8916 ;;		 -> SetupPkt(8), 
  8917 ;;  s1              2   31[BANK0 ] PTR const void 
  8918 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8919 ;;  n               2   33[BANK0 ] unsigned int 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;  s               2   38[BANK0 ] PTR const unsigned char 
  8922 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  8923 ;;  d               2   36[BANK0 ] PTR unsigned char 
  8924 ;;		 -> SetupPkt(8), 
  8925 ;;  tmp             1   35[BANK0 ] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  2   29[BANK0 ] PTR void 
  8928 ;; Registers used:
  8929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8935 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;Total ram usage:       11 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:   11
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_USBCtrlEPService
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text35
  8950  005F36                     __ptext35:
  8951                           	opt stack 0
  8952  005F36                     _memcpy:
  8953                           	opt stack 14
  8954                           
  8955                           ;incstack = 0
  8956  005F36  C07F  F086         	movff	memcpy@s1,memcpy@s
  8957  005F3A  C080  F087         	movff	memcpy@s1+1,memcpy@s+1
  8958  005F3E  C07D  F084         	movff	memcpy@d1,memcpy@d
  8959  005F42  C07E  F085         	movff	memcpy@d1+1,memcpy@d+1
  8960  005F46  D011               	goto	l3372
  8961  005F48                     l13825:
  8962  005F48  C086  FFD9         	movff	memcpy@s,fsr2l
  8963  005F4C  C087  FFDA         	movff	memcpy@s+1,fsr2h
  8964  005F50  50DF               	movf	indf2,w,c
  8965  005F52  0100               	movlb	0	; () banked
  8966  005F54  6F83               	movwf	memcpy@tmp& (0+255),b
  8967                           
  8968                           ; BSR set to: 0
  8969  005F56  4B86               	infsnz	memcpy@s& (0+255),f,b
  8970  005F58  2B87               	incf	(memcpy@s+1)& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  005F5A  C084  FFD9         	movff	memcpy@d,fsr2l
  8974  005F5E  C085  FFDA         	movff	memcpy@d+1,fsr2h
  8975  005F62  C083  FFDF         	movff	memcpy@tmp,indf2
  8976                           
  8977                           ; BSR set to: 0
  8978  005F66  4B84               	infsnz	memcpy@d& (0+255),f,b
  8979  005F68  2B85               	incf	(memcpy@d+1)& (0+255),f,b
  8980  005F6A                     l3372:
  8981                           
  8982                           ; BSR set to: 0
  8983  005F6A  0100               	movlb	0	; () banked
  8984  005F6C  0781               	decf	memcpy@n& (0+255),f,b
  8985  005F6E  A0D8               	btfss	status,0,c
  8986  005F70  0782               	decf	(memcpy@n+1)& (0+255),f,b
  8987  005F72  2981               	incf	memcpy@n& (0+255),w,b
  8988  005F74  E1E9               	bnz	l13825
  8989  005F76  2982               	incf	(memcpy@n+1)& (0+255),w,b
  8990  005F78  B4D8               	btfsc	status,2,c
  8991  005F7A  0012               	return	
  8992  005F7C  D7E5               	goto	l3373
  8993  005F7E                     __end_of_memcpy:
  8994                           	opt stack 0
  8995                           tosu	equ	0xFFF
  8996                           tosh	equ	0xFFE
  8997                           tosl	equ	0xFFD
  8998                           pclath	equ	0xFFA
  8999                           tblptru	equ	0xFF8
  9000                           tblptrh	equ	0xFF7
  9001                           tblptrl	equ	0xFF6
  9002                           tablat	equ	0xFF5
  9003                           prodh	equ	0xFF4
  9004                           prodl	equ	0xFF3
  9005                           intcon	equ	0xFF2
  9006                           intcon2	equ	0xFF1
  9007                           intcon3	equ	0xFF0
  9008                           postinc0	equ	0xFEE
  9009                           plusw0	equ	0xFEB
  9010                           wreg	equ	0xFE8
  9011                           postinc1	equ	0xFE6
  9012                           postdec1	equ	0xFE5
  9013                           fsr1h	equ	0xFE2
  9014                           fsr1l	equ	0xFE1
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           plusw2	equ	0xFDB
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function _USBCtrlTrfSetupHandler *****************
  9024 ;; Defined at:
  9025 ;;		line 2483 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:   17
  9046 ;; This function calls:
  9047 ;;		_USBCheckStdRequest
  9048 ;;		_USBCtrlEPServiceComplete
  9049 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9050 ;; This function is called by:
  9051 ;;		_USBCtrlEPService
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text36
  9056  004FD4                     __ptext36:
  9057                           	opt stack 0
  9058  004FD4                     _USBCtrlTrfSetupHandler:
  9059                           	opt stack 8
  9060                           
  9061                           ;usb_device.c: 2488: shortPacketStatus = 0;
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;incstack = 0
  9065  004FD4  0E00               	movlw	0
  9066  004FD6  0100               	movlb	0	; () banked
  9067  004FD8  6FCD               	movwf	_shortPacketStatus& (0+255),b
  9068                           
  9069                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  9070  004FDA  0E00               	movlw	0
  9071  004FDC  6FCA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  9072                           
  9073                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  9074  004FDE  0E00               	movlw	0
  9075  004FE0  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9076                           
  9077                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  9078  004FE2  0E00               	movlw	0
  9079  004FE4  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9080                           
  9081                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  9082  004FE6  0E00               	movlw	0
  9083  004FE8  0101               	movlb	1	; () banked
  9084  004FEA  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  9085                           
  9086                           ;usb_device.c: 2493: controlTransferState = 0;
  9087  004FEC  0E00               	movlw	0
  9088  004FEE  0100               	movlb	0	; () banked
  9089  004FF0  6FCC               	movwf	_controlTransferState& (0+255),b
  9090                           
  9091                           ; BSR set to: 0
  9092                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9093  004FF2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9094  004FF6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9095  004FFA  0E7F               	movlw	127
  9096  004FFC  16DF               	andwf	indf2,f,c
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9100  004FFE  0E04               	movlw	4
  9101  005000  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  9105  005002  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9106  005006  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9107  00500A  0E7F               	movlw	127
  9108  00500C  16DF               	andwf	indf2,f,c
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9112  00500E  0E04               	movlw	4
  9113  005010  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  9117  005012  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9118  005016  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9119  00501A  0E7F               	movlw	127
  9120  00501C  16DF               	andwf	indf2,f,c
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  9124  00501E  0E00               	movlw	0
  9125  005020  6FB3               	movwf	(_inPipes+3)& (0+255),b
  9126                           
  9127                           ; BSR set to: 0
  9128                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  9129  005022  0E00               	movlw	0
  9130  005024  6FB5               	movwf	(_inPipes+5)& (0+255),b
  9131  005026  0E00               	movlw	0
  9132  005028  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  9136  00502A  0E00               	movlw	0
  9137  00502C  0101               	movlb	1	; () banked
  9138  00502E  6FCC               	movwf	(_outPipes+3)& (0+255),b
  9139                           
  9140                           ; BSR set to: 1
  9141                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  9142  005030  0E00               	movlw	0
  9143  005032  6FCE               	movwf	(_outPipes+5)& (0+255),b
  9144  005034  0E00               	movlw	0
  9145  005036  6FCD               	movwf	(_outPipes+4)& (0+255),b
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;usb_device.c: 2517: USBCheckStdRequest();
  9149  005038  ECEF  F01A         	call	_USBCheckStdRequest	;wreg free
  9150                           
  9151                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  9152  00503C  0E00               	movlw	0
  9153  00503E  0100               	movlb	0	; () banked
  9154  005040  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9155  005042  0E03               	movlw	3
  9156  005044  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9157  005046  0E00               	movlw	0
  9158  005048  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9159  00504A  0E00               	movlw	0
  9160  00504C  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9161  00504E  0E00               	movlw	0
  9162  005050  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9163  005052  0E00               	movlw	0
  9164  005054  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9165  005056  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9166                           
  9167                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  9168  00505A  EC2C  F018         	call	_USBCtrlEPServiceComplete	;wreg free
  9169  00505E  0012               	return		;funcret
  9170  005060                     __end_of_USBCtrlTrfSetupHandler:
  9171                           	opt stack 0
  9172                           tosu	equ	0xFFF
  9173                           tosh	equ	0xFFE
  9174                           tosl	equ	0xFFD
  9175                           pclath	equ	0xFFA
  9176                           tblptru	equ	0xFF8
  9177                           tblptrh	equ	0xFF7
  9178                           tblptrl	equ	0xFF6
  9179                           tablat	equ	0xFF5
  9180                           prodh	equ	0xFF4
  9181                           prodl	equ	0xFF3
  9182                           intcon	equ	0xFF2
  9183                           intcon2	equ	0xFF1
  9184                           intcon3	equ	0xFF0
  9185                           postinc0	equ	0xFEE
  9186                           plusw0	equ	0xFEB
  9187                           wreg	equ	0xFE8
  9188                           postinc1	equ	0xFE6
  9189                           postdec1	equ	0xFE5
  9190                           fsr1h	equ	0xFE2
  9191                           fsr1l	equ	0xFE1
  9192                           indf2	equ	0xFDF
  9193                           postinc2	equ	0xFDE
  9194                           postdec2	equ	0xFDD
  9195                           plusw2	equ	0xFDB
  9196                           fsr2h	equ	0xFDA
  9197                           fsr2l	equ	0xFD9
  9198                           status	equ	0xFD8
  9199                           
  9200 ;; *************** function _USBCtrlEPServiceComplete *****************
  9201 ;; Defined at:
  9202 ;;		line 1634 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;		None
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;		None
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;Total ram usage:        0 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:   13
  9223 ;; This function calls:
  9224 ;;		_USBCtrlEPAllowDataStage
  9225 ;;		_USBCtrlEPAllowStatusStage
  9226 ;; This function is called by:
  9227 ;;		_USBCtrlTrfSetupHandler
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text37
  9232  003058                     __ptext37:
  9233                           	opt stack 0
  9234  003058                     _USBCtrlEPServiceComplete:
  9235                           	opt stack 11
  9236                           
  9237                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  9238                           
  9239                           ;incstack = 0
  9240  003058  9865               	bcf	3941,4,c	;volatile
  9241                           
  9242                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  9243  00305A  0100               	movlb	0	; () banked
  9244  00305C  BFB3               	btfsc	(_inPipes+3)& (0+255),7,b
  9245  00305E  D03B               	goto	l1684
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;usb_device.c: 1647: {
  9249                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  9250  003060  0101               	movlb	1	; () banked
  9251  003062  AFCC               	btfss	(_outPipes+3)& (0+255),7,b
  9252  003064  D00C               	goto	l1685
  9253                           
  9254                           ; BSR set to: 1
  9255                           ;usb_device.c: 1649: {
  9256                           ;usb_device.c: 1650: controlTransferState = 2;
  9257  003066  0E02               	movlw	2
  9258  003068  0100               	movlb	0	; () banked
  9259  00306A  6FCC               	movwf	_controlTransferState& (0+255),b
  9260                           
  9261                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  9262  00306C  5025               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
  9263  00306E  B4D8               	btfsc	status,2,c
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;usb_device.c: 1662: {
  9267                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  9268  003070  ECB5  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9269                           
  9270                           ;usb_device.c: 1664: }
  9271                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  9272  003074  0E00               	movlw	0
  9273  003076  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9274                           
  9275                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  9276  003078  0E00               	movlw	0
  9277  00307A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9278                           
  9279                           ;usb_device.c: 1670: }
  9280  00307C  0012               	return	
  9281  00307E                     l1685:
  9282                           
  9283                           ;usb_device.c: 1671: else
  9284                           ;usb_device.c: 1672: {
  9285                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  9286  00307E  0100               	movlb	0	; () banked
  9287  003080  EE20 F001          	lfsr	2,1
  9288  003084  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9289  003086  26D9               	addwf	fsr2l,f,c
  9290  003088  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9291  00308A  22DA               	addwfc	fsr2h,f,c
  9292  00308C  0E08               	movlw	8
  9293  00308E  6EDF               	movwf	indf2,c
  9294                           
  9295                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9296  003090  EE20 F002          	lfsr	2,2
  9297  003094  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9298  003096  26D9               	addwf	fsr2l,f,c
  9299  003098  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9300  00309A  22DA               	addwfc	fsr2h,f,c
  9301  00309C  0E30               	movlw	48
  9302  00309E  6EDE               	movwf	postinc2,c
  9303  0030A0  0E04               	movlw	4
  9304  0030A2  6EDD               	movwf	postdec2,c
  9305                           
  9306                           ; BSR set to: 0
  9307                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9308  0030A4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9309  0030A8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9310  0030AC  0E0C               	movlw	12
  9311  0030AE  6EDF               	movwf	indf2,c
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9315  0030B0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9316  0030B4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9317  0030B8  0E00               	movlw	0
  9318  0030BA  8EDB               	bsf	plusw2,7,c
  9319                           
  9320                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  9321  0030BC  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9322  0030C0  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9323  0030C4  0E04               	movlw	4
  9324  0030C6  6EDF               	movwf	indf2,c
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9328  0030C8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9329  0030CC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9330  0030D0  0E00               	movlw	0
  9331  0030D2  8EDB               	bsf	plusw2,7,c
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;usb_device.c: 1683: }
  9335                           ;usb_device.c: 1684: }
  9336  0030D4  0012               	return	
  9337  0030D6                     l1684:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;usb_device.c: 1685: else
  9341                           ;usb_device.c: 1686: {
  9342                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  9343  0030D6  0104               	movlb	4	; () banked
  9344  0030D8  AF30               	btfss	48,7,b	;volatile
  9345  0030DA  D012               	goto	l1689
  9346                           
  9347                           ; BSR set to: 4
  9348                           ;usb_device.c: 1688: {
  9349                           ;usb_device.c: 1689: controlTransferState = 1;
  9350  0030DC  0E01               	movlw	1
  9351  0030DE  0100               	movlb	0	; () banked
  9352  0030E0  6FCC               	movwf	_controlTransferState& (0+255),b
  9353                           
  9354                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  9355  0030E2  5026               	movf	_USBDeferINDataStagePackets,w,c	;volatile
  9356  0030E4  B4D8               	btfsc	status,2,c
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;usb_device.c: 1704: {
  9360                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  9361  0030E6  ECB5  F024         	call	_USBCtrlEPAllowDataStage	;wreg free
  9362                           
  9363                           ;usb_device.c: 1706: }
  9364                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  9365  0030EA  0E00               	movlw	0
  9366  0030EC  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9367                           
  9368                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  9369  0030EE  0E00               	movlw	0
  9370  0030F0  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9371                           
  9372                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  9373  0030F2  0100               	movlb	0	; () banked
  9374  0030F4  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9375  0030F6  A4D8               	btfss	status,2,c
  9376  0030F8  0012               	return	
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;usb_device.c: 1731: {
  9380                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  9381  0030FA  EC4B  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9382                           
  9383                           ;usb_device.c: 1733: }
  9384                           ;usb_device.c: 1734: }
  9385  0030FE  0012               	return	
  9386  003100                     l1689:
  9387                           
  9388                           ;usb_device.c: 1735: else
  9389                           ;usb_device.c: 1736: {
  9390                           ;usb_device.c: 1747: controlTransferState = 2;
  9391  003100  0E02               	movlw	2
  9392  003102  0100               	movlb	0	; () banked
  9393  003104  6FCC               	movwf	_controlTransferState& (0+255),b
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  9397  003106  EE20 F001          	lfsr	2,1
  9398  00310A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9399  00310C  26D9               	addwf	fsr2l,f,c
  9400  00310E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9401  003110  22DA               	addwfc	fsr2h,f,c
  9402  003112  0E08               	movlw	8
  9403  003114  6EDF               	movwf	indf2,c
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  9407  003116  EE20 F002          	lfsr	2,2
  9408  00311A  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9409  00311C  26D9               	addwf	fsr2l,f,c
  9410  00311E  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9411  003120  22DA               	addwfc	fsr2h,f,c
  9412  003122  0E30               	movlw	48
  9413  003124  6EDE               	movwf	postinc2,c
  9414  003126  0E04               	movlw	4
  9415  003128  6EDD               	movwf	postdec2,c
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9419  00312A  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9420  00312E  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9421  003132  0E04               	movlw	4
  9422  003134  6EDF               	movwf	indf2,c
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9426  003136  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9427  00313A  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9428  00313E  0E00               	movlw	0
  9429  003140  8EDB               	bsf	plusw2,7,c
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  9433  003142  0E00               	movlw	0
  9434  003144  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  9438  003146  0E00               	movlw	0
  9439  003148  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  9443  00314A  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  9444  00314C  A4D8               	btfss	status,2,c
  9445  00314E  0012               	return	
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;usb_device.c: 1759: {
  9449                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  9450  003150  EC4B  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
  9451  003154  0012               	return	
  9452  003156                     __end_of_USBCtrlEPServiceComplete:
  9453                           	opt stack 0
  9454                           tosu	equ	0xFFF
  9455                           tosh	equ	0xFFE
  9456                           tosl	equ	0xFFD
  9457                           pclath	equ	0xFFA
  9458                           tblptru	equ	0xFF8
  9459                           tblptrh	equ	0xFF7
  9460                           tblptrl	equ	0xFF6
  9461                           tablat	equ	0xFF5
  9462                           prodh	equ	0xFF4
  9463                           prodl	equ	0xFF3
  9464                           intcon	equ	0xFF2
  9465                           intcon2	equ	0xFF1
  9466                           intcon3	equ	0xFF0
  9467                           postinc0	equ	0xFEE
  9468                           plusw0	equ	0xFEB
  9469                           wreg	equ	0xFE8
  9470                           postinc1	equ	0xFE6
  9471                           postdec1	equ	0xFE5
  9472                           fsr1h	equ	0xFE2
  9473                           fsr1l	equ	0xFE1
  9474                           indf2	equ	0xFDF
  9475                           postinc2	equ	0xFDE
  9476                           postdec2	equ	0xFDD
  9477                           plusw2	equ	0xFDB
  9478                           fsr2h	equ	0xFDA
  9479                           fsr2l	equ	0xFD9
  9480                           status	equ	0xFD8
  9481                           
  9482 ;; *************** function _USBCtrlEPAllowDataStage *****************
  9483 ;; Defined at:
  9484 ;;		line 1506 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;		None
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;		None
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      void 
  9491 ;; Registers used:
  9492 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9502 ;;Total ram usage:        0 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:   12
  9505 ;; This function calls:
  9506 ;;		_USBCtrlTrfTxService
  9507 ;; This function is called by:
  9508 ;;		_USBCtrlEPServiceComplete
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text38
  9513  00496A                     __ptext38:
  9514                           	opt stack 0
  9515  00496A                     _USBCtrlEPAllowDataStage:
  9516                           	opt stack 11
  9517                           
  9518                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  9519                           
  9520                           ;incstack = 0
  9521  00496A  0E00               	movlw	0
  9522  00496C  6E26               	movwf	_USBDeferINDataStagePackets,c	;volatile
  9523                           
  9524                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  9525  00496E  0E00               	movlw	0
  9526  004970  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  9527                           
  9528                           ;usb_device.c: 1511: if(controlTransferState == 2)
  9529  004972  0E02               	movlw	2
  9530  004974  0100               	movlb	0	; () banked
  9531  004976  19CC               	xorwf	_controlTransferState& (0+255),w,b
  9532  004978  A4D8               	btfss	status,2,c
  9533  00497A  D01F               	goto	l1673
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;usb_device.c: 1512: {
  9537                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  9538  00497C  EE20 F001          	lfsr	2,1
  9539  004980  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9540  004982  26D9               	addwf	fsr2l,f,c
  9541  004984  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9542  004986  22DA               	addwfc	fsr2h,f,c
  9543  004988  0E08               	movlw	8
  9544  00498A  6EDF               	movwf	indf2,c
  9545                           
  9546                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  9547  00498C  EE20 F002          	lfsr	2,2
  9548  004990  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  9549  004992  26D9               	addwf	fsr2l,f,c
  9550  004994  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  9551  004996  22DA               	addwfc	fsr2h,f,c
  9552  004998  0E38               	movlw	56
  9553  00499A  6EDE               	movwf	postinc2,c
  9554  00499C  0E04               	movlw	4
  9555  00499E  6EDD               	movwf	postdec2,c
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9559  0049A0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9560  0049A4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9561  0049A8  0E48               	movlw	72
  9562  0049AA  6EDF               	movwf	indf2,c
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9566  0049AC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  9567  0049B0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  9568  0049B4  0E00               	movlw	0
  9569  0049B6  8EDB               	bsf	plusw2,7,c
  9570                           
  9571                           ;usb_device.c: 1518: }
  9572  0049B8  0012               	return	
  9573  0049BA                     l1673:
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;usb_device.c: 1519: else
  9577                           ;usb_device.c: 1520: {
  9578                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  9579                           
  9580                           ; BSR set to: 0
  9581  0049BA  51B4               	movf	(_inPipes+4)& (0+255),w,b
  9582  0049BC  0104               	movlb	4	; () banked
  9583  0049BE  5D36               	subwf	54,w,b	;volatile
  9584  0049C0  0100               	movlb	0	; () banked
  9585  0049C2  51B5               	movf	(_inPipes+5)& (0+255),w,b
  9586  0049C4  0104               	movlb	4	; () banked
  9587  0049C6  5937               	subwfb	55,w,b	;volatile
  9588  0049C8  B0D8               	btfsc	status,0,c
  9589  0049CA  D004               	goto	l1675
  9590                           
  9591                           ; BSR set to: 4
  9592                           ;usb_device.c: 1524: {
  9593                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  9594  0049CC  C436 F0B4          	movff	1078,_inPipes+4	;volatile
  9595  0049D0  C437 F0B5          	movff	1079,_inPipes+5	;volatile
  9596  0049D4                     l1675:
  9597                           
  9598                           ; BSR set to: 4
  9599                           ;usb_device.c: 1526: }
  9600                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  9601                           
  9602                           ; BSR set to: 4
  9603  0049D4  ECD3  F01B         	call	_USBCtrlTrfTxService	;wreg free
  9604                           
  9605                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  9606  0049D8  0100               	movlb	0	; () banked
  9607  0049DA  EE20 F002          	lfsr	2,2
  9608  0049DE  51B6               	movf	_pBDTEntryIn& (0+255),w,b
  9609  0049E0  26D9               	addwf	fsr2l,f,c
  9610  0049E2  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9611  0049E4  22DA               	addwfc	fsr2h,f,c
  9612  0049E6  0E38               	movlw	56
  9613  0049E8  6EDE               	movwf	postinc2,c
  9614  0049EA  0E04               	movlw	4
  9615  0049EC  6EDD               	movwf	postdec2,c
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9619  0049EE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9620  0049F2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9621  0049F6  0E48               	movlw	72
  9622  0049F8  6EDF               	movwf	indf2,c
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9626  0049FA  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
  9627  0049FE  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9628  004A02  0E00               	movlw	0
  9629  004A04  8EDB               	bsf	plusw2,7,c
  9630  004A06  0012               	return	
  9631  004A08                     __end_of_USBCtrlEPAllowDataStage:
  9632                           	opt stack 0
  9633                           tosu	equ	0xFFF
  9634                           tosh	equ	0xFFE
  9635                           tosl	equ	0xFFD
  9636                           pclath	equ	0xFFA
  9637                           tblptru	equ	0xFF8
  9638                           tblptrh	equ	0xFF7
  9639                           tblptrl	equ	0xFF6
  9640                           tablat	equ	0xFF5
  9641                           prodh	equ	0xFF4
  9642                           prodl	equ	0xFF3
  9643                           intcon	equ	0xFF2
  9644                           intcon2	equ	0xFF1
  9645                           intcon3	equ	0xFF0
  9646                           postinc0	equ	0xFEE
  9647                           plusw0	equ	0xFEB
  9648                           wreg	equ	0xFE8
  9649                           postinc1	equ	0xFE6
  9650                           postdec1	equ	0xFE5
  9651                           fsr1h	equ	0xFE2
  9652                           fsr1l	equ	0xFE1
  9653                           indf2	equ	0xFDF
  9654                           postinc2	equ	0xFDE
  9655                           postdec2	equ	0xFDD
  9656                           plusw2	equ	0xFDB
  9657                           fsr2h	equ	0xFDA
  9658                           fsr2l	equ	0xFD9
  9659                           status	equ	0xFD8
  9660                           
  9661 ;; *************** function _USBCheckStdRequest *****************
  9662 ;; Defined at:
  9663 ;;		line 2703 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;		None
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      void 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9681 ;;Total ram usage:        0 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:   16
  9684 ;; This function calls:
  9685 ;;		_USBStdFeatureReqHandler
  9686 ;;		_USBStdGetDscHandler
  9687 ;;		_USBStdGetStatusHandler
  9688 ;;		_USBStdSetCfgHandler
  9689 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9690 ;; This function is called by:
  9691 ;;		_USBCtrlTrfSetupHandler
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text39
  9696  0035DE                     __ptext39:
  9697                           	opt stack 0
  9698  0035DE                     _USBCheckStdRequest:
  9699                           	opt stack 8
  9700                           
  9701                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;incstack = 0
  9705  0035DE  0104               	movlb	4	; () banked
  9706  0035E0  3930               	swapf	48,w,b	;volatile
  9707  0035E2  32E8               	rrcf	wreg,f,c
  9708  0035E4  0B03               	andlw	3
  9709  0035E6  0900               	iorlw	0
  9710  0035E8  A4D8               	btfss	status,2,c
  9711  0035EA  0012               	return	
  9712  0035EC  D048               	goto	l1808
  9713  0035EE                     l1809:
  9714                           
  9715                           ; BSR set to: 4
  9716                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  9717  0035EE  0100               	movlb	0	; () banked
  9718  0035F0  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  9722  0035F2  0E08               	movlw	8
  9723  0035F4  6FCE               	movwf	_USBDeviceState& (0+255),b
  9724                           
  9725                           ;usb_device.c: 2713: break;
  9726  0035F6  0012               	return	
  9727  0035F8                     
  9728                           ;usb_device.c: 2715: USBStdGetDscHandler();
  9729                           
  9730                           ; BSR set to: 0
  9731  0035F8  ECEA  F015         	call	_USBStdGetDscHandler	;wreg free
  9732                           
  9733                           ;usb_device.c: 2716: break;
  9734  0035FC  0012               	return	
  9735  0035FE                     
  9736                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  9737  0035FE  EC09  F01A         	call	_USBStdSetCfgHandler	;wreg free
  9738                           
  9739                           ;usb_device.c: 2719: break;
  9740  003602  0012               	return	
  9741  003604                     
  9742                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  9743  003604  0ED7               	movlw	low _USBActiveConfiguration
  9744  003606  0100               	movlb	0	; () banked
  9745  003608  6FB0               	movwf	_inPipes& (0+255),b
  9746  00360A  0E00               	movlw	high _USBActiveConfiguration
  9747  00360C  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9751  00360E  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  9755  003610  0E01               	movlw	1
  9756  003612  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  9760  003614  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9761                           
  9762                           ;usb_device.c: 2725: break;
  9763  003616  0012               	return	
  9764  003618                     
  9765                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  9766                           
  9767                           ; BSR set to: 0
  9768  003618  EC64  F021         	call	_USBStdGetStatusHandler	;wreg free
  9769                           
  9770                           ;usb_device.c: 2728: break;
  9771  00361C  0012               	return	
  9772  00361E                     
  9773                           ;usb_device.c: 2730: case 3:
  9774                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  9775  00361E  ECAD  F009         	call	_USBStdFeatureReqHandler	;wreg free
  9776                           
  9777                           ;usb_device.c: 2732: break;
  9778  003622  0012               	return	
  9779  003624                     
  9780                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  9781  003624  0104               	movlb	4	; () banked
  9782  003626  5134               	movf	52,w,b	;volatile
  9783  003628  0D01               	mullw	1
  9784  00362A  0EF1               	movlw	low _USBAlternateInterface
  9785  00362C  24F3               	addwf	prodl,w,c
  9786  00362E  0100               	movlb	0	; () banked
  9787  003630  6FB0               	movwf	_inPipes& (0+255),b
  9788  003632  0E02               	movlw	high _USBAlternateInterface
  9789  003634  20F4               	addwfc	prodh,w,c
  9790  003636  6FB1               	movwf	(_inPipes+1)& (0+255),b
  9791                           
  9792                           ; BSR set to: 0
  9793                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9794  003638  81B3               	bsf	(_inPipes+3)& (0+255),0,b
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  9798  00363A  0E01               	movlw	1
  9799  00363C  6FB4               	movwf	(_inPipes+4)& (0+255),b
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  9803  00363E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9804                           
  9805                           ;usb_device.c: 2738: break;
  9806  003640  0012               	return	
  9807  003642                     l1818:
  9808                           
  9809                           ; BSR set to: 4
  9810                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  9811  003642  0100               	movlb	0	; () banked
  9812  003644  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  9816  003646  0104               	movlb	4	; () banked
  9817  003648  5134               	movf	52,w,b	;volatile
  9818  00364A  0D01               	mullw	1
  9819  00364C  0EF1               	movlw	low _USBAlternateInterface
  9820  00364E  24F3               	addwf	prodl,w,c
  9821  003650  6ED9               	movwf	fsr2l,c
  9822  003652  0E02               	movlw	high _USBAlternateInterface
  9823  003654  20F4               	addwfc	prodh,w,c
  9824  003656  6EDA               	movwf	fsr2h,c
  9825  003658  C432 FFDF          	movff	1074,indf2	;volatile
  9826                           
  9827                           ;usb_device.c: 2742: break;
  9828  00365C  0012               	return	
  9829  00365E                     
  9830                           ; BSR set to: 4
  9831                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  9832                           
  9833                           ; BSR set to: 4
  9834  00365E  0E00               	movlw	0
  9835  003660  0100               	movlb	0	; () banked
  9836  003662  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9837  003664  0E02               	movlw	2
  9838  003666  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9839  003668  0E00               	movlw	0
  9840  00366A  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  9841  00366C  0E00               	movlw	0
  9842  00366E  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  9843  003670  0E00               	movlw	0
  9844  003672  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9845  003674  0E00               	movlw	0
  9846  003676  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9847  003678  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9848                           
  9849                           ;usb_device.c: 2749: }
  9850                           
  9851                           ;usb_device.c: 2748: break;
  9852                           
  9853                           ;usb_device.c: 2747: default:
  9854                           
  9855                           ;usb_device.c: 2746: case 12:
  9856                           
  9857                           ;usb_device.c: 2745: break;
  9858  00367C  0012               	return	
  9859  00367E                     l1808:
  9860  00367E  0104               	movlb	4	; () banked
  9861  003680  5131               	movf	49,w,b	;volatile
  9862                           
  9863                           ; Switch size 1, requested type "space"
  9864                           ; Number of cases is 11, Range of values is 0 to 12
  9865                           ; switch strategies available:
  9866                           ; Name         Instructions Cycles
  9867                           ; simple_byte           34    18 (average)
  9868                           ;	Chosen strategy is simple_byte
  9869  003682  0A00               	xorlw	0	; case 0
  9870  003684  B4D8               	btfsc	status,2,c
  9871  003686  D7C8               	goto	l1814
  9872  003688  0A01               	xorlw	1	; case 1
  9873  00368A  B4D8               	btfsc	status,2,c
  9874  00368C  D7C8               	goto	l1815
  9875  00368E  0A02               	xorlw	2	; case 3
  9876  003690  B4D8               	btfsc	status,2,c
  9877  003692  D7C5               	goto	l1815
  9878  003694  0A06               	xorlw	6	; case 5
  9879  003696  B4D8               	btfsc	status,2,c
  9880  003698  D7AA               	goto	l1809
  9881  00369A  0A03               	xorlw	3	; case 6
  9882  00369C  B4D8               	btfsc	status,2,c
  9883  00369E  D7AC               	goto	l1811
  9884  0036A0  0A01               	xorlw	1	; case 7
  9885  0036A2  B4D8               	btfsc	status,2,c
  9886  0036A4  D7DC               	goto	l1819
  9887  0036A6  0A0F               	xorlw	15	; case 8
  9888  0036A8  B4D8               	btfsc	status,2,c
  9889  0036AA  D7AC               	goto	l1813
  9890  0036AC  0A01               	xorlw	1	; case 9
  9891  0036AE  B4D8               	btfsc	status,2,c
  9892  0036B0  D7A6               	goto	l1812
  9893  0036B2  0A03               	xorlw	3	; case 10
  9894  0036B4  B4D8               	btfsc	status,2,c
  9895  0036B6  D7B6               	goto	l1817
  9896  0036B8  0A01               	xorlw	1	; case 11
  9897  0036BA  B4D8               	btfsc	status,2,c
  9898  0036BC  D7C2               	goto	l1818
  9899  0036BE  0A07               	xorlw	7	; case 12
  9900  0036C0  0012               	return	
  9901  0036C2                     __end_of_USBCheckStdRequest:
  9902                           	opt stack 0
  9903                           tosu	equ	0xFFF
  9904                           tosh	equ	0xFFE
  9905                           tosl	equ	0xFFD
  9906                           pclath	equ	0xFFA
  9907                           tblptru	equ	0xFF8
  9908                           tblptrh	equ	0xFF7
  9909                           tblptrl	equ	0xFF6
  9910                           tablat	equ	0xFF5
  9911                           prodh	equ	0xFF4
  9912                           prodl	equ	0xFF3
  9913                           intcon	equ	0xFF2
  9914                           intcon2	equ	0xFF1
  9915                           intcon3	equ	0xFF0
  9916                           postinc0	equ	0xFEE
  9917                           plusw0	equ	0xFEB
  9918                           wreg	equ	0xFE8
  9919                           postinc1	equ	0xFE6
  9920                           postdec1	equ	0xFE5
  9921                           fsr1h	equ	0xFE2
  9922                           fsr1l	equ	0xFE1
  9923                           indf2	equ	0xFDF
  9924                           postinc2	equ	0xFDE
  9925                           postdec2	equ	0xFDD
  9926                           plusw2	equ	0xFDB
  9927                           fsr2h	equ	0xFDA
  9928                           fsr2l	equ	0xFD9
  9929                           status	equ	0xFD8
  9930                           
  9931 ;; *************** function _USBStdSetCfgHandler *****************
  9932 ;; Defined at:
  9933 ;;		line 1986 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  i               1   49[BANK0 ] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9951 ;;Total ram usage:        1 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:   15
  9954 ;; This function calls:
  9955 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9956 ;;		_memset
  9957 ;; This function is called by:
  9958 ;;		_USBCheckStdRequest
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text40
  9963  003412                     __ptext40:
  9964                           	opt stack 0
  9965  003412                     _USBStdSetCfgHandler:
  9966                           	opt stack 8
  9967                           
  9968                           ;usb_device.c: 1988: uint8_t i;
  9969                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  9970                           
  9971                           ;incstack = 0
  9972  003412  0100               	movlb	0	; () banked
  9973  003414  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  9977  003416  0E27               	movlw	39
  9978  003418  6F7D               	movwf	memset@p1& (0+255),b
  9979  00341A  0E0F               	movlw	15
  9980  00341C  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9981  00341E  0E00               	movlw	0
  9982  003420  6F80               	movwf	(memset@c+1)& (0+255),b
  9983  003422  0E00               	movlw	0
  9984  003424  6F7F               	movwf	memset@c& (0+255),b
  9985  003426  0E00               	movlw	0
  9986  003428  6F82               	movwf	(memset@n+1)& (0+255),b
  9987  00342A  0E02               	movlw	2
  9988  00342C  6F81               	movwf	memset@n& (0+255),b
  9989  00342E  EC78  F032         	call	_memset	;wreg free
  9990                           
  9991                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  9992  003432  0E00               	movlw	0
  9993  003434  0100               	movlb	0	; () banked
  9994  003436  6F7D               	movwf	memset@p1& (0+255),b
  9995  003438  0E04               	movlw	4
  9996  00343A  6F7E               	movwf	(memset@p1+1)& (0+255),b
  9997  00343C  0E00               	movlw	0
  9998  00343E  6F80               	movwf	(memset@c+1)& (0+255),b
  9999  003440  0E00               	movlw	0
 10000  003442  6F7F               	movwf	memset@c& (0+255),b
 10001  003444  0E00               	movlw	0
 10002  003446  6F82               	movwf	(memset@n+1)& (0+255),b
 10003  003448  0E30               	movlw	48
 10004  00344A  6F81               	movwf	memset@n& (0+255),b
 10005  00344C  EC78  F032         	call	_memset	;wreg free
 10006                           
 10007                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
 10008  003450  8C65               	bsf	3941,6,c	;volatile
 10009                           
 10010                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
 10011  003452  0E00               	movlw	0
 10012  003454  0100               	movlb	0	; () banked
 10013  003456  6F91               	movwf	USBStdSetCfgHandler@i& (0+255),b
 10014  003458                     l13161:
 10015                           
 10016                           ; BSR set to: 0
 10017  003458  0E02               	movlw	2
 10018  00345A  6591               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
 10019  00345C  D001               	goto	l1725
 10020  00345E  D016               	goto	u11740
 10021  003460                     l1725:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;usb_device.c: 2006: {
 10025                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
 10026                           
 10027                           ; BSR set to: 0
 10028  003460  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10029  003462  0D01               	mullw	1
 10030  003464  0ED1               	movlw	low _ep_data_in
 10031  003466  24F3               	addwf	prodl,w,c
 10032  003468  6ED9               	movwf	fsr2l,c
 10033  00346A  0E02               	movlw	high _ep_data_in
 10034  00346C  20F4               	addwfc	prodh,w,c
 10035  00346E  6EDA               	movwf	fsr2h,c
 10036  003470  0E00               	movlw	0
 10037  003472  6EDF               	movwf	indf2,c
 10038                           
 10039                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
 10040  003474  5191               	movf	USBStdSetCfgHandler@i& (0+255),w,b
 10041  003476  0D01               	mullw	1
 10042  003478  0ECE               	movlw	low _ep_data_out
 10043  00347A  24F3               	addwf	prodl,w,c
 10044  00347C  6ED9               	movwf	fsr2l,c
 10045  00347E  0E02               	movlw	high _ep_data_out
 10046  003480  20F4               	addwfc	prodh,w,c
 10047  003482  6EDA               	movwf	fsr2h,c
 10048  003484  0E00               	movlw	0
 10049  003486  6EDF               	movwf	indf2,c
 10050                           
 10051                           ; BSR set to: 0
 10052  003488  2B91               	incf	USBStdSetCfgHandler@i& (0+255),f,b
 10053  00348A  D7E6               	goto	l13161
 10054  00348C                     u11740:
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;usb_device.c: 2009: }
 10058                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
 10059                           
 10060                           ; BSR set to: 0
 10061  00348C  0EF1               	movlw	low _USBAlternateInterface
 10062  00348E  6F7D               	movwf	memset@p1& (0+255),b
 10063  003490  0E02               	movlw	high _USBAlternateInterface
 10064  003492  6F7E               	movwf	(memset@p1+1)& (0+255),b
 10065  003494  0E00               	movlw	0
 10066  003496  6F80               	movwf	(memset@c+1)& (0+255),b
 10067  003498  0E00               	movlw	0
 10068  00349A  6F7F               	movwf	memset@c& (0+255),b
 10069  00349C  0E00               	movlw	0
 10070  00349E  6F82               	movwf	(memset@n+1)& (0+255),b
 10071  0034A0  0E02               	movlw	2
 10072  0034A2  6F81               	movwf	memset@n& (0+255),b
 10073  0034A4  EC78  F032         	call	_memset	;wreg free
 10074                           
 10075                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
 10076  0034A8  9C65               	bcf	3941,6,c	;volatile
 10077                           
 10078                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10079  0034AA  0E08               	movlw	8
 10080  0034AC  0100               	movlb	0	; () banked
 10081  0034AE  6FB6               	movwf	_pBDTEntryIn& (0+255),b
 10082  0034B0  0E04               	movlw	4
 10083  0034B2  6FB7               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 10087  0034B4  0E00               	movlw	0
 10088  0034B6  6FC0               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 10089  0034B8  0E04               	movlw	4
 10090  0034BA  6FC1               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10094  0034BC  C0C0  F0BE         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 10095  0034C0  C0C1  F0BF         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 10099  0034C4  C432 F0D7          	movff	1074,_USBActiveConfiguration	;volatile
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
 10103  0034C8  51D7               	movf	_USBActiveConfiguration& (0+255),w,b
 10104  0034CA  A4D8               	btfss	status,2,c
 10105  0034CC  D003               	goto	l1727
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;usb_device.c: 2028: {
 10109                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
 10110  0034CE  0E10               	movlw	16
 10111  0034D0  6FCE               	movwf	_USBDeviceState& (0+255),b
 10112                           
 10113                           ;usb_device.c: 2031: }
 10114  0034D2  0012               	return	
 10115  0034D4                     l1727:
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;usb_device.c: 2032: else
 10119                           ;usb_device.c: 2033: {
 10120                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 10121                           
 10122                           ; BSR set to: 0
 10123  0034D4  0E00               	movlw	0
 10124  0034D6  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 10125  0034D8  0E01               	movlw	1
 10126  0034DA  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 10127  0034DC  0ED7               	movlw	low _USBActiveConfiguration
 10128  0034DE  6F8B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
 10129  0034E0  0E00               	movlw	high _USBActiveConfiguration
 10130  0034E2  6F8C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
 10131  0034E4  0E00               	movlw	0
 10132  0034E6  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 10133  0034E8  0E01               	movlw	1
 10134  0034EA  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 10135  0034EC  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10136                           
 10137                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
 10138  0034F0  0E20               	movlw	32
 10139  0034F2  0100               	movlb	0	; () banked
 10140  0034F4  6FCE               	movwf	_USBDeviceState& (0+255),b
 10141  0034F6  0012               	return	
 10142  0034F8                     __end_of_USBStdSetCfgHandler:
 10143                           	opt stack 0
 10144                           tosu	equ	0xFFF
 10145                           tosh	equ	0xFFE
 10146                           tosl	equ	0xFFD
 10147                           pclath	equ	0xFFA
 10148                           tblptru	equ	0xFF8
 10149                           tblptrh	equ	0xFF7
 10150                           tblptrl	equ	0xFF6
 10151                           tablat	equ	0xFF5
 10152                           prodh	equ	0xFF4
 10153                           prodl	equ	0xFF3
 10154                           intcon	equ	0xFF2
 10155                           intcon2	equ	0xFF1
 10156                           intcon3	equ	0xFF0
 10157                           postinc0	equ	0xFEE
 10158                           plusw0	equ	0xFEB
 10159                           wreg	equ	0xFE8
 10160                           postinc1	equ	0xFE6
 10161                           postdec1	equ	0xFE5
 10162                           fsr1h	equ	0xFE2
 10163                           fsr1l	equ	0xFE1
 10164                           indf2	equ	0xFDF
 10165                           postinc2	equ	0xFDE
 10166                           postdec2	equ	0xFDD
 10167                           plusw2	equ	0xFDB
 10168                           fsr2h	equ	0xFDA
 10169                           fsr2l	equ	0xFD9
 10170                           status	equ	0xFD8
 10171                           
 10172 ;; *************** function _USBStdGetStatusHandler *****************
 10173 ;; Defined at:
 10174 ;;		line 2147 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;  p               2   30[BANK0 ] PTR struct __BDT
 10179 ;;		 -> NULL(0), BDT(48), 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;Total ram usage:        3 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:   11
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_USBCheckStdRequest
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text41
 10204  0042C8                     __ptext41:
 10205                           	opt stack 0
 10206  0042C8                     _USBStdGetStatusHandler:
 10207                           	opt stack 12
 10208                           
 10209                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;incstack = 0
 10213  0042C8  0E00               	movlw	0
 10214  0042CA  0104               	movlb	4	; () banked
 10215  0042CC  6F38               	movwf	56,b	;volatile
 10216                           
 10217                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
 10218  0042CE  0E00               	movlw	0
 10219  0042D0  6F39               	movwf	57,b	;volatile
 10220                           
 10221                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
 10222  0042D2  D03D               	goto	l1746
 10223  0042D4                     l1747:
 10224                           
 10225                           ; BSR set to: 4
 10226                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 10227  0042D4  0100               	movlb	0	; () banked
 10228  0042D6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10229                           
 10230                           ;usb_device.c: 2163: }
 10231                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
 10232                           
 10233                           ; BSR set to: 4
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;usb_device.c: 2161: {
 10237                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
 10238                           
 10239                           ;usb_device.c: 2160: if(0 == 1)
 10240  0042D8  0101               	movlb	1	; () banked
 10241  0042DA  05E1               	decf	_RemoteWakeup& (0+255),w,b
 10242  0042DC  A4D8               	btfss	status,2,c
 10243  0042DE  D042               	goto	l1750
 10244                           
 10245                           ; BSR set to: 1
 10246                           ;usb_device.c: 2166: {
 10247                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
 10248  0042E0  0104               	movlb	4	; () banked
 10249  0042E2  8338               	bsf	56,1,b	;volatile
 10250                           
 10251                           ; BSR set to: 4
 10252                           ;usb_device.c: 2168: }
 10253                           ;usb_device.c: 2169: break;
 10254  0042E4  D03F               	goto	l1750
 10255  0042E6                     l1751:
 10256                           
 10257                           ; BSR set to: 4
 10258                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
 10259  0042E6  0100               	movlb	0	; () banked
 10260  0042E8  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10261                           
 10262                           ;usb_device.c: 2172: break;
 10263  0042EA  D03C               	goto	l1750
 10264  0042EC                     l1752:
 10265                           
 10266                           ; BSR set to: 4
 10267                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
 10268  0042EC  0100               	movlb	0	; () banked
 10269  0042EE  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10270                           
 10271                           ;usb_device.c: 2178: {
 10272                           ;usb_device.c: 2179: BDT_ENTRY *p;
 10273                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
 10274  0042F0  0104               	movlb	4	; () banked
 10275  0042F2  BF34               	btfsc	52,7,b	;volatile
 10276  0042F4  D00B               	goto	l1753
 10277                           
 10278                           ; BSR set to: 4
 10279                           ;usb_device.c: 2182: {
 10280                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10281  0042F6  5134               	movf	52,w,b	;volatile
 10282  0042F8  0B0F               	andlw	15
 10283  0042FA  0100               	movlb	0	; () banked
 10284  0042FC  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10285  0042FE  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10286  004300  0D02               	mullw	2
 10287  004302  0E06               	movlw	low _pBDTEntryOut
 10288  004304  24F3               	addwf	prodl,w,c
 10289  004306  6ED9               	movwf	fsr2l,c
 10290  004308  0E03               	movlw	high _pBDTEntryOut
 10291  00430A  D00B               	goto	L4
 10292  00430C                     l1753:
 10293                           
 10294                           ;usb_device.c: 2185: else
 10295                           ;usb_device.c: 2186: {
 10296                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10297                           
 10298                           ; BSR set to: 0
 10299  00430C  0104               	movlb	4	; () banked
 10300  00430E  5134               	movf	52,w,b	;volatile
 10301  004310  0B0F               	andlw	15
 10302  004312  0100               	movlb	0	; () banked
 10303  004314  6F7D               	movwf	??_USBStdGetStatusHandler& (0+255),b
 10304  004316  517D               	movf	??_USBStdGetStatusHandler& (0+255),w,b
 10305  004318  0D02               	mullw	2
 10306  00431A  0EB6               	movlw	low _pBDTEntryIn
 10307  00431C  24F3               	addwf	prodl,w,c
 10308  00431E  6ED9               	movwf	fsr2l,c
 10309  004320  0E00               	movlw	high _pBDTEntryIn
 10310  004322                     L4:
 10311  004322  20F4               	addwfc	prodh,w,c
 10312  004324  6EDA               	movwf	fsr2h,c
 10313  004326  CFDE F07E          	movff	postinc2,USBStdGetStatusHandler@p
 10314  00432A  CFDD F07F          	movff	postdec2,USBStdGetStatusHandler@p+1
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;usb_device.c: 2188: }
 10318                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 10319                           
 10320                           ; BSR set to: 0
 10321  00432E  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10322  004332  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10323  004336  AEDF               	btfss	indf2,7,c
 10324  004338  D015               	goto	l1750
 10325                           
 10326                           ; BSR set to: 0
 10327  00433A  C07E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 10328  00433E  C07F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 10329  004342  A4DF               	btfss	indf2,2,c
 10330  004344  D00F               	goto	l1750
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
 10334  004346  0E01               	movlw	1
 10335  004348  0104               	movlb	4	; () banked
 10336  00434A  6F38               	movwf	56,b	;volatile
 10337                           
 10338                           ; BSR set to: 4
 10339                           ;usb_device.c: 2193: }
 10340                           ;usb_device.c: 2194: }
 10341                           
 10342                           ; BSR set to: 4
 10343                           ;usb_device.c: 2192: break;
 10344  00434C  D00B               	goto	l1750
 10345  00434E                     l1746:
 10346                           
 10347                           ; BSR set to: 4
 10348                           
 10349                           ; BSR set to: 4
 10350  00434E  5130               	movf	48,w,b	;volatile
 10351  004350  0B1F               	andlw	31
 10352                           
 10353                           ; Switch size 1, requested type "space"
 10354                           ; Number of cases is 3, Range of values is 0 to 2
 10355                           ; switch strategies available:
 10356                           ; Name         Instructions Cycles
 10357                           ; simple_byte           10     6 (average)
 10358                           ;	Chosen strategy is simple_byte
 10359  004352  0A00               	xorlw	0	; case 0
 10360  004354  B4D8               	btfsc	status,2,c
 10361  004356  D7BE               	goto	l1747
 10362  004358  0A01               	xorlw	1	; case 1
 10363  00435A  B4D8               	btfsc	status,2,c
 10364  00435C  D7C4               	goto	l1751
 10365  00435E  0A03               	xorlw	3	; case 2
 10366  004360  B4D8               	btfsc	status,2,c
 10367  004362  D7C4               	goto	l1752
 10368  004364                     l1750:
 10369                           
 10370                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
 10371  004364  0100               	movlb	0	; () banked
 10372  004366  AFB3               	btfss	(_inPipes+3)& (0+255),7,b
 10373  004368  0012               	return	
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;usb_device.c: 2197: {
 10377                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 10378  00436A  0E38               	movlw	56
 10379  00436C  6FB0               	movwf	_inPipes& (0+255),b
 10380  00436E  0E04               	movlw	4
 10381  004370  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10385  004372  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 10386                           
 10387                           ; BSR set to: 0
 10388                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
 10389  004374  0E02               	movlw	2
 10390  004376  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10391  004378  0012               	return	
 10392  00437A                     __end_of_USBStdGetStatusHandler:
 10393                           	opt stack 0
 10394                           tosu	equ	0xFFF
 10395                           tosh	equ	0xFFE
 10396                           tosl	equ	0xFFD
 10397                           pclath	equ	0xFFA
 10398                           tblptru	equ	0xFF8
 10399                           tblptrh	equ	0xFF7
 10400                           tblptrl	equ	0xFF6
 10401                           tablat	equ	0xFF5
 10402                           prodh	equ	0xFF4
 10403                           prodl	equ	0xFF3
 10404                           intcon	equ	0xFF2
 10405                           intcon2	equ	0xFF1
 10406                           intcon3	equ	0xFF0
 10407                           postinc0	equ	0xFEE
 10408                           plusw0	equ	0xFEB
 10409                           wreg	equ	0xFE8
 10410                           postinc1	equ	0xFE6
 10411                           postdec1	equ	0xFE5
 10412                           fsr1h	equ	0xFE2
 10413                           fsr1l	equ	0xFE1
 10414                           indf2	equ	0xFDF
 10415                           postinc2	equ	0xFDE
 10416                           postdec2	equ	0xFDD
 10417                           plusw2	equ	0xFDB
 10418                           fsr2h	equ	0xFDA
 10419                           fsr2l	equ	0xFD9
 10420                           status	equ	0xFD8
 10421                           
 10422 ;; *************** function _USBStdGetDscHandler *****************
 10423 ;; Defined at:
 10424 ;;		line 2061 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10441 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10442 ;;Total ram usage:        2 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:   11
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_USBCheckStdRequest
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           	psect	text42
 10453  002BD4                     __ptext42:
 10454                           	opt stack 0
 10455  002BD4                     _USBStdGetDscHandler:
 10456                           	opt stack 12
 10457                           
 10458                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;incstack = 0
 10462  002BD4  0E80               	movlw	128
 10463  002BD6  0104               	movlb	4	; () banked
 10464  002BD8  1930               	xorwf	48,w,b	;volatile
 10465  002BDA  A4D8               	btfss	status,2,c
 10466  002BDC  0012               	return	
 10467                           
 10468                           ; BSR set to: 4
 10469                           ;usb_device.c: 2064: {
 10470                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 10471  002BDE  0EC0               	movlw	192
 10472  002BE0  0100               	movlb	0	; () banked
 10473  002BE2  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10474                           
 10475                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
 10476  002BE4  D082               	goto	l1733
 10477  002BE6                     
 10478                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 10479                           
 10480                           ; BSR set to: 0
 10481  002BE6  0E49               	movlw	low _device_dsc
 10482  002BE8  0100               	movlb	0	; () banked
 10483  002BEA  6FB0               	movwf	_inPipes& (0+255),b
 10484  002BEC  0EFE               	movlw	high _device_dsc
 10485  002BEE  6FB1               	movwf	(_inPipes+1)& (0+255),b
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
 10489  002BF0  0E00               	movlw	0
 10490  002BF2  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10491  002BF4  0E12               	movlw	18
 10492  002BF6  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10493                           
 10494                           ;usb_device.c: 2076: break;
 10495  002BF8  0012               	return	
 10496  002BFA                     
 10497                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
 10498                           
 10499                           ; BSR set to: 0
 10500  002BFA  0104               	movlb	4	; () banked
 10501  002BFC  5132               	movf	50,w,b	;volatile
 10502  002BFE  A4D8               	btfss	status,2,c
 10503  002C00  D040               	goto	l1737
 10504                           
 10505                           ; BSR set to: 4
 10506                           ;usb_device.c: 2082: {
 10507                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 10508  002C02  5132               	movf	50,w,b	;volatile
 10509  002C04  0D02               	mullw	2
 10510  002C06  0E2E               	movlw	low _USB_CD_Ptr
 10511  002C08  24F3               	addwf	prodl,w,c
 10512  002C0A  6EF6               	movwf	tblptrl,c
 10513  002C0C  0EFC               	movlw	high _USB_CD_Ptr
 10514  002C0E  20F4               	addwfc	prodh,w,c
 10515  002C10  6EF7               	movwf	tblptrh,c
 10516  002C12                     	if	0	;There are less than 3 active tblptr bytes
 10517  002C12                     	endif
 10518  002C12  0009               	tblrd		*+
 10519  002C14  CFF5 F0B0          	movff	tablat,_inPipes
 10520  002C18  000A               	tblrd		*-
 10521  002C1A  CFF5 F0B1          	movff	tablat,_inPipes+1
 10522                           
 10523                           ; BSR set to: 4
 10524                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 10525  002C1E  0E02               	movlw	2
 10526  002C20  0100               	movlb	0	; () banked
 10527  002C22  25B0               	addwf	_inPipes& (0+255),w,b
 10528  002C24  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10529  002C26  0E00               	movlw	0
 10530  002C28  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10531  002C2A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10532  002C2C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10533  002C30  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10534  002C34  6AF8               	clrf	tblptru,c
 10535  002C36  0E0E               	movlw	(high __ramtop+-1)
 10536  002C38  64F7               	cpfsgt	tblptrh,c
 10537  002C3A  D003               	bra	u11787
 10538  002C3C  0008               	tblrd		*
 10539  002C3E  50F5               	movf	tablat,w,c
 10540  002C40  D005               	bra	u11780
 10541  002C42                     u11787:
 10542  002C42  CFF6 FFE9          	movff	tblptrl,fsr0l
 10543  002C46  CFF7 FFEA          	movff	tblptrh,fsr0h
 10544  002C4A  50EF               	movf	indf0,w,c
 10545  002C4C                     u11780:
 10546  002C4C  0100               	movlb	0	; () banked
 10547  002C4E  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 10551  002C50  0E03               	movlw	3
 10552  002C52  25B0               	addwf	_inPipes& (0+255),w,b
 10553  002C54  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10554  002C56  0E00               	movlw	0
 10555  002C58  21B1               	addwfc	(_inPipes+1)& (0+255),w,b
 10556  002C5A  6F7E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
 10557  002C5C  C07D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 10558  002C60  C07E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 10559  002C64  6AF8               	clrf	tblptru,c
 10560  002C66  0E0E               	movlw	(high __ramtop+-1)
 10561  002C68  64F7               	cpfsgt	tblptrh,c
 10562  002C6A  D003               	bra	u11797
 10563  002C6C  0008               	tblrd		*
 10564  002C6E  50F5               	movf	tablat,w,c
 10565  002C70  D005               	bra	u11790
 10566  002C72                     u11797:
 10567  002C72  CFF6 FFE9          	movff	tblptrl,fsr0l
 10568  002C76  CFF7 FFEA          	movff	tblptrh,fsr0h
 10569  002C7A  50EF               	movf	indf0,w,c
 10570  002C7C                     u11790:
 10571  002C7C  0100               	movlb	0	; () banked
 10572  002C7E  6FB5               	movwf	(_inPipes+5)& (0+255),b
 10573                           
 10574                           ;usb_device.c: 2094: }
 10575  002C80  0012               	return	
 10576  002C82                     l1737:
 10577                           
 10578                           ;usb_device.c: 2095: else
 10579                           ;usb_device.c: 2096: {
 10580                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
 10581                           
 10582                           ; BSR set to: 0
 10583  002C82  0E00               	movlw	0
 10584  002C84  0100               	movlb	0	; () banked
 10585  002C86  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;usb_device.c: 2098: }
 10589                           ;usb_device.c: 2099: break;
 10590  002C88  0012               	return	
 10591  002C8A                     
 10592                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
 10593                           
 10594                           ; BSR set to: 0
 10595  002C8A  0E03               	movlw	3
 10596  002C8C  0104               	movlb	4	; () banked
 10597  002C8E  6132               	cpfslt	50,b	;volatile
 10598  002C90  D024               	goto	l1740
 10599                           
 10600                           ; BSR set to: 4
 10601                           ;usb_device.c: 2105: {
 10602                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 10603  002C92  5132               	movf	50,w,b	;volatile
 10604  002C94  0D02               	mullw	2
 10605  002C96  0E1C               	movlw	low _USB_SD_Ptr
 10606  002C98  24F3               	addwf	prodl,w,c
 10607  002C9A  6EF6               	movwf	tblptrl,c
 10608  002C9C  0EFC               	movlw	high _USB_SD_Ptr
 10609  002C9E  20F4               	addwfc	prodh,w,c
 10610  002CA0  6EF7               	movwf	tblptrh,c
 10611  002CA2                     	if	0	;There are less than 3 active tblptr bytes
 10612  002CA2                     	endif
 10613  002CA2  0009               	tblrd		*+
 10614  002CA4  CFF5 F0B0          	movff	tablat,_inPipes
 10615  002CA8  000A               	tblrd		*-
 10616  002CAA  CFF5 F0B1          	movff	tablat,_inPipes+1
 10617                           
 10618                           ; BSR set to: 4
 10619                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 10620  002CAE  C0B0  FFF6         	movff	_inPipes,tblptrl
 10621  002CB2  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 10622  002CB6  6AF8               	clrf	tblptru,c
 10623  002CB8  0E0E               	movlw	(high __ramtop+-1)
 10624  002CBA  64F7               	cpfsgt	tblptrh,c
 10625  002CBC  D003               	bra	u11817
 10626  002CBE  0008               	tblrd		*
 10627  002CC0  50F5               	movf	tablat,w,c
 10628  002CC2  D005               	bra	u11810
 10629  002CC4                     u11817:
 10630  002CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 10631  002CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 10632  002CCC  50EF               	movf	indf0,w,c
 10633  002CCE                     u11810:
 10634  002CCE  0100               	movlb	0	; () banked
 10635  002CD0  6F7D               	movwf	??_USBStdGetDscHandler& (0+255),b
 10636  002CD2  517D               	movf	??_USBStdGetDscHandler& (0+255),w,b
 10637  002CD4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 10638  002CD6  6BB5               	clrf	(_inPipes+5)& (0+255),b
 10639                           
 10640                           ;usb_device.c: 2110: }
 10641  002CD8  0012               	return	
 10642  002CDA                     l1740:
 10643                           
 10644                           ;usb_device.c: 2120: else
 10645                           ;usb_device.c: 2121: {
 10646                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 10647                           
 10648                           ; BSR set to: 0
 10649  002CDA  0E00               	movlw	0
 10650  002CDC  0100               	movlb	0	; () banked
 10651  002CDE  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;usb_device.c: 2123: }
 10655                           ;usb_device.c: 2124: break;
 10656  002CE0  0012               	return	
 10657  002CE2                     
 10658                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
 10659                           
 10660                           ; BSR set to: 0
 10661  002CE2  0E00               	movlw	0
 10662  002CE4  0100               	movlb	0	; () banked
 10663  002CE6  6FB3               	movwf	(_inPipes+3)& (0+255),b
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;usb_device.c: 2128: }
 10667                           
 10668                           ;usb_device.c: 2127: break;
 10669  002CE8  0012               	return	
 10670  002CEA                     l1733:
 10671                           
 10672                           ; BSR set to: 0
 10673                           
 10674                           ; BSR set to: 0
 10675  002CEA  0104               	movlb	4	; () banked
 10676  002CEC  5133               	movf	51,w,b	;volatile
 10677                           
 10678                           ; Switch size 1, requested type "space"
 10679                           ; Number of cases is 3, Range of values is 1 to 3
 10680                           ; switch strategies available:
 10681                           ; Name         Instructions Cycles
 10682                           ; simple_byte           10     6 (average)
 10683                           ;	Chosen strategy is simple_byte
 10684  002CEE  0A01               	xorlw	1	; case 1
 10685  002CF0  B4D8               	btfsc	status,2,c
 10686  002CF2  D779               	goto	l1734
 10687  002CF4  0A03               	xorlw	3	; case 2
 10688  002CF6  B4D8               	btfsc	status,2,c
 10689  002CF8  D780               	goto	l1736
 10690  002CFA  0A01               	xorlw	1	; case 3
 10691  002CFC  B4D8               	btfsc	status,2,c
 10692  002CFE  D7C5               	goto	l1739
 10693  002D00  D7F0               	goto	l1742
 10694  002D02                     __end_of_USBStdGetDscHandler:
 10695                           	opt stack 0
 10696                           tosu	equ	0xFFF
 10697                           tosh	equ	0xFFE
 10698                           tosl	equ	0xFFD
 10699                           pclath	equ	0xFFA
 10700                           tblptru	equ	0xFF8
 10701                           tblptrh	equ	0xFF7
 10702                           tblptrl	equ	0xFF6
 10703                           tablat	equ	0xFF5
 10704                           prodh	equ	0xFF4
 10705                           prodl	equ	0xFF3
 10706                           intcon	equ	0xFF2
 10707                           intcon2	equ	0xFF1
 10708                           intcon3	equ	0xFF0
 10709                           indf0	equ	0xFEF
 10710                           postinc0	equ	0xFEE
 10711                           plusw0	equ	0xFEB
 10712                           fsr0h	equ	0xFEA
 10713                           fsr0l	equ	0xFE9
 10714                           wreg	equ	0xFE8
 10715                           postinc1	equ	0xFE6
 10716                           postdec1	equ	0xFE5
 10717                           fsr1h	equ	0xFE2
 10718                           fsr1l	equ	0xFE1
 10719                           indf2	equ	0xFDF
 10720                           postinc2	equ	0xFDE
 10721                           postdec2	equ	0xFDD
 10722                           plusw2	equ	0xFDB
 10723                           fsr2h	equ	0xFDA
 10724                           fsr2l	equ	0xFD9
 10725                           status	equ	0xFD8
 10726                           
 10727 ;; *************** function _USBStdFeatureReqHandler *****************
 10728 ;; Defined at:
 10729 ;;		line 2771 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;		None
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  p               2   53[BANK0 ] PTR struct __BDT
 10734 ;;		 -> NULL(0), BDT(48), 
 10735 ;;  pUEP            2   50[BANK0 ] PTR unsigned char 
 10736 ;;		 -> UEP0(1), 
 10737 ;;  current_ep_d    1   52[BANK0 ] struct .
 10738 ;; Return value:  Size  Location     Type
 10739 ;;                  1    wreg      void 
 10740 ;; Registers used:
 10741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10742 ;; Tracked objects:
 10743 ;;		On entry : 0/0
 10744 ;;		On exit  : 0/0
 10745 ;;		Unchanged: 0/0
 10746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10748 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10750 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10751 ;;Total ram usage:        6 bytes
 10752 ;; Hardware stack levels used:    1
 10753 ;; Hardware stack levels required when called:   15
 10754 ;; This function calls:
 10755 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10756 ;; This function is called by:
 10757 ;;		_USBCheckStdRequest
 10758 ;; This function uses a non-reentrant model
 10759 ;;
 10760                           
 10761                           	psect	text43
 10762  00135A                     __ptext43:
 10763                           	opt stack 0
 10764  00135A                     _USBStdFeatureReqHandler:
 10765                           	opt stack 8
 10766                           
 10767                           ;usb_device.c: 2773: BDT_ENTRY *p;
 10768                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
 10769                           ;usb_device.c: 2778: unsigned char* pUEP;
 10770                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
 10771                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
 10772                           
 10773                           ;incstack = 0
 10774  00135A  0104               	movlb	4	; () banked
 10775  00135C  0532               	decf	50,w,b	;volatile
 10776  00135E  A4D8               	btfss	status,2,c
 10777  001360  D011               	goto	l1826
 10778                           
 10779                           ; BSR set to: 4
 10780  001362  5130               	movf	48,w,b	;volatile
 10781  001364  0B1F               	andlw	31
 10782  001366  0900               	iorlw	0
 10783  001368  A4D8               	btfss	status,2,c
 10784  00136A  D00C               	goto	l1826
 10785                           
 10786                           ; BSR set to: 4
 10787                           ;usb_device.c: 2818: {
 10788                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 10789  00136C  0100               	movlb	0	; () banked
 10790  00136E  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
 10794  001370  0E03               	movlw	3
 10795  001372  0104               	movlb	4	; () banked
 10796  001374  1931               	xorwf	49,w,b	;volatile
 10797  001376  A4D8               	btfss	status,2,c
 10798  001378  D002               	goto	l1825
 10799                           
 10800                           ; BSR set to: 4
 10801                           ;usb_device.c: 2821: RemoteWakeup = 1;
 10802  00137A  0E01               	movlw	1
 10803  00137C  D001               	goto	L5
 10804  00137E                     l1825:
 10805                           
 10806                           ;usb_device.c: 2822: else
 10807                           ;usb_device.c: 2823: RemoteWakeup = 0;
 10808                           
 10809                           ; BSR set to: 1
 10810  00137E  0E00               	movlw	0
 10811  001380                     L5:
 10812  001380  0101               	movlb	1	; () banked
 10813  001382  6FE1               	movwf	_RemoteWakeup& (0+255),b
 10814  001384                     l1826:
 10815                           
 10816                           ;usb_device.c: 2824: }
 10817                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
 10818                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
 10819                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 10820                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
 10821                           
 10822                           ; BSR set to: 1
 10823  001384  0104               	movlb	4	; () banked
 10824  001386  5132               	movf	50,w,b	;volatile
 10825  001388  A4D8               	btfss	status,2,c
 10826  00138A  0012               	return	
 10827                           
 10828                           ; BSR set to: 4
 10829  00138C  5130               	movf	48,w,b	;volatile
 10830  00138E  0B1F               	andlw	31
 10831  001390  0A02               	xorlw	2
 10832  001392  A4D8               	btfss	status,2,c
 10833  001394  0012               	return	
 10834                           
 10835                           ; BSR set to: 4
 10836  001396  5134               	movf	52,w,b	;volatile
 10837  001398  0B0F               	andlw	15
 10838  00139A  0900               	iorlw	0
 10839  00139C  B4D8               	btfsc	status,2,c
 10840  00139E  0012               	return	
 10841                           
 10842                           ; BSR set to: 4
 10843  0013A0  5134               	movf	52,w,b	;volatile
 10844  0013A2  0B0F               	andlw	15
 10845  0013A4  0100               	movlb	0	; () banked
 10846  0013A6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10847  0013A8  0E03               	movlw	3
 10848  0013AA  6191               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
 10849  0013AC  0012               	return	
 10850                           
 10851                           ; BSR set to: 0
 10852  0013AE  0E20               	movlw	32
 10853  0013B0  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 10854  0013B2  A4D8               	btfss	status,2,c
 10855  0013B4  0012               	return	
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;usb_device.c: 2831: {
 10859                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
 10860  0013B6  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 10861                           
 10862                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
 10863  0013B8  0104               	movlb	4	; () banked
 10864  0013BA  BF34               	btfsc	52,7,b	;volatile
 10865  0013BC  D01C               	goto	l1828
 10866                           
 10867                           ; BSR set to: 4
 10868                           ;usb_device.c: 2838: {
 10869                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10870  0013BE  5134               	movf	52,w,b	;volatile
 10871  0013C0  0B0F               	andlw	15
 10872  0013C2  0100               	movlb	0	; () banked
 10873  0013C4  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10874  0013C6  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10875  0013C8  0D02               	mullw	2
 10876  0013CA  0E06               	movlw	low _pBDTEntryOut
 10877  0013CC  24F3               	addwf	prodl,w,c
 10878  0013CE  6ED9               	movwf	fsr2l,c
 10879  0013D0  0E03               	movlw	high _pBDTEntryOut
 10880  0013D2  20F4               	addwfc	prodh,w,c
 10881  0013D4  6EDA               	movwf	fsr2h,c
 10882  0013D6  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10883  0013DA  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10884                           
 10885                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10886  0013DE  0104               	movlb	4	; () banked
 10887  0013E0  5134               	movf	52,w,b	;volatile
 10888  0013E2  0B0F               	andlw	15
 10889  0013E4  0100               	movlb	0	; () banked
 10890  0013E6  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10891  0013E8  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10892  0013EA  0D01               	mullw	1
 10893  0013EC  0ECE               	movlw	low _ep_data_out
 10894  0013EE  24F3               	addwf	prodl,w,c
 10895  0013F0  6ED9               	movwf	fsr2l,c
 10896  0013F2  0E02               	movlw	high _ep_data_out
 10897  0013F4  D01C               	goto	L6
 10898  0013F6                     l1828:
 10899                           
 10900                           ;usb_device.c: 2842: else
 10901                           ;usb_device.c: 2843: {
 10902                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10903                           
 10904                           ; BSR set to: 0
 10905  0013F6  0104               	movlb	4	; () banked
 10906  0013F8  5134               	movf	52,w,b	;volatile
 10907  0013FA  0B0F               	andlw	15
 10908  0013FC  0100               	movlb	0	; () banked
 10909  0013FE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10910  001400  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10911  001402  0D02               	mullw	2
 10912  001404  0EB6               	movlw	low _pBDTEntryIn
 10913  001406  24F3               	addwf	prodl,w,c
 10914  001408  6ED9               	movwf	fsr2l,c
 10915  00140A  0E00               	movlw	high _pBDTEntryIn
 10916  00140C  20F4               	addwfc	prodh,w,c
 10917  00140E  6EDA               	movwf	fsr2h,c
 10918  001410  CFDE F095          	movff	postinc2,USBStdFeatureReqHandler@p
 10919  001414  CFDD F096          	movff	postdec2,USBStdFeatureReqHandler@p+1
 10920                           
 10921                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10922  001418  0104               	movlb	4	; () banked
 10923  00141A  5134               	movf	52,w,b	;volatile
 10924  00141C  0B0F               	andlw	15
 10925  00141E  0100               	movlb	0	; () banked
 10926  001420  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10927  001422  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10928  001424  0D01               	mullw	1
 10929  001426  0ED1               	movlw	low _ep_data_in
 10930  001428  24F3               	addwf	prodl,w,c
 10931  00142A  6ED9               	movwf	fsr2l,c
 10932  00142C  0E02               	movlw	high _ep_data_in
 10933  00142E                     L6:
 10934  00142E  20F4               	addwfc	prodh,w,c
 10935  001430  6EDA               	movwf	fsr2h,c
 10936  001432  50DF               	movf	indf2,w,c
 10937  001434  6F94               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;usb_device.c: 2846: }
 10941                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
 10942                           
 10943                           ; BSR set to: 0
 10944  001436  B194               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
 10945  001438  D002               	goto	l1830
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;usb_device.c: 2853: {
 10949                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 10950  00143A  9595               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
 10951                           
 10952                           ;usb_device.c: 2855: }
 10953  00143C  D001               	goto	l1831
 10954  00143E                     l1830:
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;usb_device.c: 2856: else
 10958                           ;usb_device.c: 2857: {
 10959                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 10960                           
 10961                           ; BSR set to: 0
 10962  00143E  8595               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
 10963  001440                     l1831:
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;usb_device.c: 2859: }
 10967                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
 10968                           
 10969                           ; BSR set to: 0
 10970  001440  0104               	movlb	4	; () banked
 10971  001442  BF34               	btfsc	52,7,b	;volatile
 10972  001444  D00B               	goto	l1832
 10973                           
 10974                           ; BSR set to: 4
 10975                           ;usb_device.c: 2865: {
 10976                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10977  001446  5134               	movf	52,w,b	;volatile
 10978  001448  0B0F               	andlw	15
 10979  00144A  0100               	movlb	0	; () banked
 10980  00144C  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 10981  00144E  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 10982  001450  0D02               	mullw	2
 10983  001452  0E06               	movlw	low _pBDTEntryOut
 10984  001454  24F3               	addwf	prodl,w,c
 10985  001456  6ED9               	movwf	fsr2l,c
 10986  001458  0E03               	movlw	high _pBDTEntryOut
 10987  00145A  D00B               	goto	L7
 10988  00145C                     l1832:
 10989                           
 10990                           ;usb_device.c: 2868: else
 10991                           ;usb_device.c: 2869: {
 10992                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 10993                           
 10994                           ; BSR set to: 0
 10995  00145C  0104               	movlb	4	; () banked
 10996  00145E  5134               	movf	52,w,b	;volatile
 10997  001460  0B0F               	andlw	15
 10998  001462  0100               	movlb	0	; () banked
 10999  001464  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11000  001466  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11001  001468  0D02               	mullw	2
 11002  00146A  0EB6               	movlw	low _pBDTEntryIn
 11003  00146C  24F3               	addwf	prodl,w,c
 11004  00146E  6ED9               	movwf	fsr2l,c
 11005  001470  0E00               	movlw	high _pBDTEntryIn
 11006  001472                     L7:
 11007  001472  20F4               	addwfc	prodh,w,c
 11008  001474  6EDA               	movwf	fsr2h,c
 11009  001476  C095  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 11010  00147A  C096  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;usb_device.c: 2871: }
 11014                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
 11015                           
 11016                           ; BSR set to: 0
 11017  00147E  0E03               	movlw	3
 11018  001480  0104               	movlb	4	; () banked
 11019  001482  1931               	xorwf	49,w,b	;volatile
 11020  001484  A4D8               	btfss	status,2,c
 11021  001486  D031               	goto	l1834
 11022                           
 11023                           ; BSR set to: 4
 11024                           ;usb_device.c: 2875: {
 11025                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
 11026  001488  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11027  00148C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11028  001490  0100               	movlb	0	; () banked
 11029  001492  AEDF               	btfss	indf2,7,c
 11030  001494  D01D               	goto	l1837
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;usb_device.c: 2877: {
 11034                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
 11035  001496  0104               	movlb	4	; () banked
 11036  001498  BF34               	btfsc	52,7,b	;volatile
 11037  00149A  D00B               	goto	l1836
 11038                           
 11039                           ; BSR set to: 4
 11040                           ;usb_device.c: 2881: {
 11041                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11042  00149C  5134               	movf	52,w,b	;volatile
 11043  00149E  0B0F               	andlw	15
 11044  0014A0  0100               	movlb	0	; () banked
 11045  0014A2  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11046  0014A4  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11047  0014A6  0D01               	mullw	1
 11048  0014A8  0ECE               	movlw	low _ep_data_out
 11049  0014AA  24F3               	addwf	prodl,w,c
 11050  0014AC  6ED9               	movwf	fsr2l,c
 11051  0014AE  0E02               	movlw	high _ep_data_out
 11052  0014B0  D00B               	goto	L8
 11053  0014B2                     l1836:
 11054                           
 11055                           ;usb_device.c: 2884: else
 11056                           ;usb_device.c: 2885: {
 11057                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11058                           
 11059                           ; BSR set to: 2
 11060  0014B2  0104               	movlb	4	; () banked
 11061  0014B4  5134               	movf	52,w,b	;volatile
 11062  0014B6  0B0F               	andlw	15
 11063  0014B8  0100               	movlb	0	; () banked
 11064  0014BA  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11065  0014BC  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11066  0014BE  0D01               	mullw	1
 11067  0014C0  0ED1               	movlw	low _ep_data_in
 11068  0014C2  24F3               	addwf	prodl,w,c
 11069  0014C4  6ED9               	movwf	fsr2l,c
 11070  0014C6  0E02               	movlw	high _ep_data_in
 11071  0014C8                     L8:
 11072  0014C8  20F4               	addwfc	prodh,w,c
 11073  0014CA  6EDA               	movwf	fsr2h,c
 11074  0014CC  0102               	movlb	2	; () banked
 11075  0014CE  82DF               	bsf	indf2,1,c
 11076  0014D0                     l1837:
 11077                           
 11078                           ;usb_device.c: 2887: }
 11079                           ;usb_device.c: 2888: }
 11080                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
 11081                           
 11082                           ; BSR set to: 2
 11083                           
 11084                           ; BSR set to: 2
 11085  0014D0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11086  0014D4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11087  0014D8  0E00               	movlw	0
 11088  0014DA  84DB               	bsf	plusw2,2,c
 11089                           
 11090                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
 11091  0014DC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11092  0014E0  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11093  0014E4  0E00               	movlw	0
 11094  0014E6  8EDB               	bsf	plusw2,7,c
 11095                           
 11096                           ;usb_device.c: 2893: }
 11097  0014E8  0012               	return	
 11098  0014EA                     l1834:
 11099                           
 11100                           ;usb_device.c: 2894: else
 11101                           ;usb_device.c: 2895: {
 11102                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11103  0014EA  0E04               	movlw	4
 11104  0014EC  0100               	movlb	0	; () banked
 11105  0014EE  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
 11109  0014F0  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11110  0014F4  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11111  0014F8  AEDF               	btfss	indf2,7,c
 11112  0014FA  D01B               	goto	l1839
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;usb_device.c: 2902: {
 11116                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
 11117  0014FC  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11118  001500  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11119  001504  0E7F               	movlw	127
 11120  001506  16DF               	andwf	indf2,f,c
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
 11124  001508  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11125  00150C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11126  001510  0E00               	movlw	0
 11127  001512  8CDB               	bsf	plusw2,6,c
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11131  001514  0E00               	movlw	0
 11132  001516  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11133  001518  0E05               	movlw	5
 11134  00151A  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11135  00151C  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11136  001520  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11137  001524  0E00               	movlw	0
 11138  001526  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11139  001528  0E02               	movlw	2
 11140  00152A  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11141  00152C  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11142                           
 11143                           ;usb_device.c: 2908: }
 11144  001530  D006               	goto	l1840
 11145  001532                     l1839:
 11146                           
 11147                           ;usb_device.c: 2909: else
 11148                           ;usb_device.c: 2910: {
 11149                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
 11150  001532  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11151  001536  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11152  00153A  0E00               	movlw	0
 11153  00153C  8CDB               	bsf	plusw2,6,c
 11154  00153E                     l1840:
 11155                           
 11156                           ;usb_device.c: 2913: }
 11157                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 11158  00153E  0E04               	movlw	4
 11159  001540  0100               	movlb	0	; () banked
 11160  001542  1B95               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11164  001544  B394               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
 11165  001546  D006               	goto	u12030
 11166                           
 11167                           ; BSR set to: 0
 11168  001548  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11169  00154C  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11170  001550  AEDF               	btfss	indf2,7,c
 11171  001552  D033               	goto	l1841
 11172  001554                     u12030:
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;usb_device.c: 2924: {
 11176                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
 11177  001554  0104               	movlb	4	; () banked
 11178  001556  BF34               	btfsc	52,7,b	;volatile
 11179  001558  D00B               	goto	l1844
 11180                           
 11181                           ; BSR set to: 4
 11182                           ;usb_device.c: 2926: {
 11183                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11184  00155A  5134               	movf	52,w,b	;volatile
 11185  00155C  0B0F               	andlw	15
 11186  00155E  0100               	movlb	0	; () banked
 11187  001560  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11188  001562  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11189  001564  0D01               	mullw	1
 11190  001566  0ECE               	movlw	low _ep_data_out
 11191  001568  24F3               	addwf	prodl,w,c
 11192  00156A  6ED9               	movwf	fsr2l,c
 11193  00156C  0E02               	movlw	high _ep_data_out
 11194  00156E  D00B               	goto	L9
 11195  001570                     l1844:
 11196                           
 11197                           ;usb_device.c: 2929: else
 11198                           ;usb_device.c: 2930: {
 11199                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11200                           
 11201                           ; BSR set to: 2
 11202  001570  0104               	movlb	4	; () banked
 11203  001572  5134               	movf	52,w,b	;volatile
 11204  001574  0B0F               	andlw	15
 11205  001576  0100               	movlb	0	; () banked
 11206  001578  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11207  00157A  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11208  00157C  0D01               	mullw	1
 11209  00157E  0ED1               	movlw	low _ep_data_in
 11210  001580  24F3               	addwf	prodl,w,c
 11211  001582  6ED9               	movwf	fsr2l,c
 11212  001584  0E02               	movlw	high _ep_data_in
 11213  001586                     L9:
 11214  001586  20F4               	addwfc	prodh,w,c
 11215  001588  6EDA               	movwf	fsr2h,c
 11216  00158A  0102               	movlb	2	; () banked
 11217  00158C  92DF               	bcf	indf2,1,c
 11218                           
 11219                           ; BSR set to: 2
 11220                           ;usb_device.c: 2932: }
 11221                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11222                           
 11223                           ; BSR set to: 2
 11224  00158E  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11225  001592  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11226  001596  0E3B               	movlw	59
 11227  001598  16DF               	andwf	indf2,f,c
 11228                           
 11229                           ; BSR set to: 2
 11230                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11231  00159A  0E00               	movlw	0
 11232  00159C  0100               	movlb	0	; () banked
 11233  00159E  6F8A               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
 11234  0015A0  0E05               	movlw	5
 11235  0015A2  6F89               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
 11236  0015A4  C095  F08B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11237  0015A8  C096  F08C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11238  0015AC  0E00               	movlw	0
 11239  0015AE  6F8E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
 11240  0015B0  0E02               	movlw	2
 11241  0015B2  6F8D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
 11242  0015B4  EC02  F02C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11243                           
 11244                           ;usb_device.c: 2938: }
 11245  0015B8  D006               	goto	l1846
 11246  0015BA                     l1841:
 11247                           
 11248                           ;usb_device.c: 2939: else
 11249                           ;usb_device.c: 2940: {
 11250                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11251  0015BA  C095  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 11252  0015BE  C096  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 11253  0015C2  0E3B               	movlw	59
 11254  0015C4  16DF               	andwf	indf2,f,c
 11255  0015C6                     l1846:
 11256                           
 11257                           ;usb_device.c: 2943: }
 11258                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11259  0015C6  0104               	movlb	4	; () banked
 11260  0015C8  5134               	movf	52,w,b	;volatile
 11261  0015CA  0B0F               	andlw	15
 11262  0015CC  0100               	movlb	0	; () banked
 11263  0015CE  6F91               	movwf	??_USBStdFeatureReqHandler& (0+255),b
 11264  0015D0  5191               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
 11265  0015D2  0D01               	mullw	1
 11266  0015D4  0E26               	movlw	38
 11267  0015D6  24F3               	addwf	prodl,w,c
 11268  0015D8  6F92               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
 11269  0015DA  0E0F               	movlw	15
 11270  0015DC  20F4               	addwfc	prodh,w,c
 11271  0015DE  6F93               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
 11275  0015E0  C092  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 11276  0015E4  C093  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 11277  0015E8  0EFE               	movlw	254
 11278  0015EA  16DF               	andwf	indf2,f,c
 11279                           
 11280                           ; BSR set to: 0
 11281  0015EC  0012               	return	
 11282  0015EE                     __end_of_USBStdFeatureReqHandler:
 11283                           	opt stack 0
 11284                           tosu	equ	0xFFF
 11285                           tosh	equ	0xFFE
 11286                           tosl	equ	0xFFD
 11287                           pclath	equ	0xFFA
 11288                           tblptru	equ	0xFF8
 11289                           tblptrh	equ	0xFF7
 11290                           tblptrl	equ	0xFF6
 11291                           tablat	equ	0xFF5
 11292                           prodh	equ	0xFF4
 11293                           prodl	equ	0xFF3
 11294                           intcon	equ	0xFF2
 11295                           intcon2	equ	0xFF1
 11296                           intcon3	equ	0xFF0
 11297                           indf0	equ	0xFEF
 11298                           postinc0	equ	0xFEE
 11299                           plusw0	equ	0xFEB
 11300                           fsr0h	equ	0xFEA
 11301                           fsr0l	equ	0xFE9
 11302                           wreg	equ	0xFE8
 11303                           postinc1	equ	0xFE6
 11304                           postdec1	equ	0xFE5
 11305                           fsr1h	equ	0xFE2
 11306                           fsr1l	equ	0xFE1
 11307                           indf2	equ	0xFDF
 11308                           postinc2	equ	0xFDE
 11309                           postdec2	equ	0xFDD
 11310                           plusw2	equ	0xFDB
 11311                           fsr2h	equ	0xFDA
 11312                           fsr2l	equ	0xFD9
 11313                           status	equ	0xFD8
 11314                           
 11315 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 11316 ;; Defined at:
 11317 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  event           2   41[BANK0 ] enum E8366
 11320 ;;  pdata           2   43[BANK0 ] PTR void 
 11321 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 11322 ;;  size            2   45[BANK0 ] unsigned int 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      unsigned char 
 11327 ;; Registers used:
 11328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11334 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11337 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;Total ram usage:        8 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:   14
 11341 ;; This function calls:
 11342 ;;		_CDCInitEP
 11343 ;;		_USBCheckCDCRequest
 11344 ;; This function is called by:
 11345 ;;		_USBDeviceTasks
 11346 ;;		_USBStdSetCfgHandler
 11347 ;;		_USBSuspend
 11348 ;;		_USBWakeFromSuspend
 11349 ;;		_USBCtrlTrfSetupHandler
 11350 ;;		_USBCheckStdRequest
 11351 ;;		_USBStdFeatureReqHandler
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text44
 11356  005804                     __ptext44:
 11357                           	opt stack 0
 11358  005804                     _USER_USB_CALLBACK_EVENT_HANDLER:
 11359                           	opt stack 12
 11360                           
 11361                           ;usb_device_mgr.c: 106: switch( (int) event )
 11362                           
 11363                           ;incstack = 0
 11364  005804  D006               	goto	l2000
 11365  005806                     
 11366                           ;usb_device_mgr.c: 134: CDCInitEP();
 11367  005806  EC62  F02A         	call	_CDCInitEP	;wreg free
 11368                           
 11369                           ;usb_device_mgr.c: 142: break;
 11370                           
 11371                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
 11372                           
 11373                           ;usb_device_mgr.c: 139: break;
 11374  00580A  0012               	return	
 11375  00580C                     
 11376                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
 11377  00580C  ECBD  F021         	call	_USBCheckCDCRequest	;wreg free
 11378                           
 11379                           ;usb_device_mgr.c: 163: }
 11380                           
 11381                           ;usb_device_mgr.c: 162: break;
 11382                           
 11383                           ;usb_device_mgr.c: 161: default:
 11384                           
 11385                           ;usb_device_mgr.c: 159: break;
 11386                           
 11387                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
 11388                           
 11389                           ;usb_device_mgr.c: 156: break;
 11390                           
 11391                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
 11392                           
 11393                           ;usb_device_mgr.c: 153: break;
 11394  005810  0012               	return	
 11395  005812                     l2000:
 11396  005812  C089  F08F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 11397  005816  C08A  F090         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 11398                           
 11399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11400                           ; Switch size 1, requested type "space"
 11401                           ; Number of cases is 2, Range of values is 0 to 127
 11402                           ; switch strategies available:
 11403                           ; Name         Instructions Cycles
 11404                           ; simple_byte            7     4 (average)
 11405                           ;	Chosen strategy is simple_byte
 11406  00581A  0100               	movlb	0	; () banked
 11407  00581C  5190               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
 11408  00581E  0A00               	xorlw	0	; case 0
 11409  005820  B4D8               	btfsc	status,2,c
 11410  005822  D004               	goto	l16895
 11411  005824  0A7F               	xorlw	127	; case 127
 11412  005826  A4D8               	btfss	status,2,c
 11413  005828  0012               	return	
 11414  00582A  D018               	goto	l16897
 11415  00582C                     l16895:
 11416                           
 11417                           ; BSR set to: 0
 11418                           ; Switch size 1, requested type "space"
 11419                           ; Number of cases is 8, Range of values is 1 to 117
 11420                           ; switch strategies available:
 11421                           ; Name         Instructions Cycles
 11422                           ; simple_byte           25    13 (average)
 11423                           ;	Chosen strategy is simple_byte
 11424  00582C  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11425  00582E  0A01               	xorlw	1	; case 1
 11426  005830  B4D8               	btfsc	status,2,c
 11427  005832  D7E9               	goto	l2006
 11428  005834  0A03               	xorlw	3	; case 2
 11429  005836  B4D8               	btfsc	status,2,c
 11430  005838  0012               	return	
 11431  00583A  0A01               	xorlw	1	; case 3
 11432  00583C  B4D8               	btfsc	status,2,c
 11433  00583E  D7E6               	goto	l2008
 11434  005840  0A06               	xorlw	6	; case 5
 11435  005842  B4D8               	btfsc	status,2,c
 11436  005844  0012               	return	
 11437  005846  0A77               	xorlw	119	; case 114
 11438  005848  B4D8               	btfsc	status,2,c
 11439  00584A  0012               	return	
 11440  00584C  0A01               	xorlw	1	; case 115
 11441  00584E  B4D8               	btfsc	status,2,c
 11442  005850  0012               	return	
 11443  005852  0A07               	xorlw	7	; case 116
 11444  005854  B4D8               	btfsc	status,2,c
 11445  005856  0012               	return	
 11446  005858  0A01               	xorlw	1	; case 117
 11447  00585A  0012               	return	
 11448  00585C                     l16897:
 11449                           
 11450                           ; BSR set to: 0
 11451                           ; Switch size 1, requested type "space"
 11452                           ; Number of cases is 1, Range of values is 255 to 255
 11453                           ; switch strategies available:
 11454                           ; Name         Instructions Cycles
 11455                           ; simple_byte            4     3 (average)
 11456                           ;	Chosen strategy is simple_byte
 11457  00585C  518F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
 11458  00585E  0AFF               	xorlw	255	; case 255
 11459  005860  0012               	return	
 11460  005862                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 11461                           	opt stack 0
 11462                           tosu	equ	0xFFF
 11463                           tosh	equ	0xFFE
 11464                           tosl	equ	0xFFD
 11465                           pclath	equ	0xFFA
 11466                           tblptru	equ	0xFF8
 11467                           tblptrh	equ	0xFF7
 11468                           tblptrl	equ	0xFF6
 11469                           tablat	equ	0xFF5
 11470                           prodh	equ	0xFF4
 11471                           prodl	equ	0xFF3
 11472                           intcon	equ	0xFF2
 11473                           intcon2	equ	0xFF1
 11474                           intcon3	equ	0xFF0
 11475                           indf0	equ	0xFEF
 11476                           postinc0	equ	0xFEE
 11477                           plusw0	equ	0xFEB
 11478                           fsr0h	equ	0xFEA
 11479                           fsr0l	equ	0xFE9
 11480                           wreg	equ	0xFE8
 11481                           postinc1	equ	0xFE6
 11482                           postdec1	equ	0xFE5
 11483                           fsr1h	equ	0xFE2
 11484                           fsr1l	equ	0xFE1
 11485                           indf2	equ	0xFDF
 11486                           postinc2	equ	0xFDE
 11487                           postdec2	equ	0xFDD
 11488                           plusw2	equ	0xFDB
 11489                           fsr2h	equ	0xFDA
 11490                           fsr2l	equ	0xFD9
 11491                           status	equ	0xFD8
 11492                           
 11493 ;; *************** function _USBCheckCDCRequest *****************
 11494 ;; Defined at:
 11495 ;;		line 150 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;		None
 11498 ;; Auto vars:     Size  Location     Type
 11499 ;;		None
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      void 
 11502 ;; Registers used:
 11503 ;;		wreg, status,2, status,0
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11513 ;;Total ram usage:        0 bytes
 11514 ;; Hardware stack levels used:    1
 11515 ;; Hardware stack levels required when called:   11
 11516 ;; This function calls:
 11517 ;;		Nothing
 11518 ;; This function is called by:
 11519 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text45
 11524  00437A                     __ptext45:
 11525                           	opt stack 0
 11526  00437A                     _USBCheckCDCRequest:
 11527                           	opt stack 14
 11528                           
 11529                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 11530                           
 11531                           ;incstack = 0
 11532  00437A  0104               	movlb	4	; () banked
 11533  00437C  5130               	movf	48,w,b	;volatile
 11534  00437E  0B1F               	andlw	31
 11535  004380  06E8               	decf	wreg,f,c
 11536  004382  A4D8               	btfss	status,2,c
 11537  004384  0012               	return	
 11538                           
 11539                           ; BSR set to: 4
 11540                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 11541                           
 11542                           ; BSR set to: 4
 11543                           
 11544                           ; BSR set to: 4
 11545  004386  3930               	swapf	48,w,b	;volatile
 11546  004388  32E8               	rrcf	wreg,f,c
 11547  00438A  0B03               	andlw	3
 11548  00438C  06E8               	decf	wreg,f,c
 11549  00438E  A4D8               	btfss	status,2,c
 11550  004390  0012               	return	
 11551                           
 11552                           ; BSR set to: 4
 11553                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 11554                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 11555                           
 11556                           ; BSR set to: 4
 11557                           
 11558                           ; BSR set to: 4
 11559  004392  5134               	movf	52,w,b	;volatile
 11560  004394  B4D8               	btfsc	status,2,c
 11561  004396  D037               	goto	l1902
 11562                           
 11563                           ; BSR set to: 4
 11564  004398  0534               	decf	52,w,b	;volatile
 11565  00439A  A4D8               	btfss	status,2,c
 11566  00439C  0012               	return	
 11567  00439E  D033               	goto	l1902
 11568  0043A0                     
 11569                           ; BSR set to: 4
 11570                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11571                           
 11572                           ; BSR set to: 4
 11573  0043A0  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11574  0043A2  0100               	movlb	0	; () banked
 11575  0043A4  6FB0               	movwf	_inPipes& (0+255),b
 11576  0043A6  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11577  0043A8  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 11581  0043AA  0E00               	movlw	0
 11582  0043AC  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11583  0043AE  0E08               	movlw	8
 11584  0043B0  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11588  0043B2  81B3               	bsf	(_inPipes+3)& (0+255),0,b
 11589                           
 11590                           ; BSR set to: 0
 11591                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 11592  0043B4  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11593                           
 11594                           ;usb_device_cdc.c: 178: break;
 11595  0043B6  0012               	return	
 11596  0043B8                     
 11597                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11598                           
 11599                           ; BSR set to: 0
 11600  0043B8  0E7B               	movlw	low _dummy_encapsulated_cmd_response
 11601  0043BA  0100               	movlb	0	; () banked
 11602  0043BC  6FB0               	movwf	_inPipes& (0+255),b
 11603  0043BE  0E03               	movlw	high _dummy_encapsulated_cmd_response
 11604  0043C0  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 11608  0043C2  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11609                           
 11610                           ;usb_device_cdc.c: 183: break;
 11611  0043C4  0012               	return	
 11612  0043C6                     l1906:
 11613                           
 11614                           ; BSR set to: 4
 11615                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 11616  0043C6  C436 F1CD          	movff	1078,_outPipes+4	;volatile
 11617  0043CA  C437 F1CE          	movff	1079,_outPipes+5	;volatile
 11618                           
 11619                           ; BSR set to: 4
 11620                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11621  0043CE  0E83               	movlw	low _line_coding
 11622  0043D0  0101               	movlb	1	; () banked
 11623  0043D2  6FC9               	movwf	_outPipes& (0+255),b
 11624  0043D4  0E03               	movlw	high _line_coding
 11625  0043D6  6FCA               	movwf	(_outPipes+1)& (0+255),b
 11626                           
 11627                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 11628  0043D8  0E00               	movlw	0
 11629  0043DA  6FCF               	movwf	(_outPipes+6)& (0+255),b
 11630  0043DC  0E00               	movlw	0
 11631  0043DE  6FD0               	movwf	(_outPipes+7)& (0+255),b
 11632                           
 11633                           ; BSR set to: 1
 11634                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 11635  0043E0  8FCC               	bsf	(_outPipes+3)& (0+255),7,b
 11636                           
 11637                           ;usb_device_cdc.c: 192: break;
 11638  0043E2  0012               	return	
 11639  0043E4                     
 11640                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11641                           
 11642                           ; BSR set to: 1
 11643  0043E4  0E83               	movlw	low _line_coding
 11644  0043E6  0100               	movlb	0	; () banked
 11645  0043E8  6FB0               	movwf	_inPipes& (0+255),b
 11646  0043EA  0E03               	movlw	high _line_coding
 11647  0043EC  6FB1               	movwf	(_inPipes+1)& (0+255),b
 11648                           
 11649                           ; BSR set to: 0
 11650  0043EE  0E00               	movlw	0
 11651  0043F0  6FB5               	movwf	(_inPipes+5)& (0+255),b
 11652  0043F2  0E07               	movlw	7
 11653  0043F4  6FB4               	movwf	(_inPipes+4)& (0+255),b
 11654                           
 11655                           ; BSR set to: 0
 11656  0043F6  0EC1               	movlw	193
 11657  0043F8  6FB3               	movwf	(_inPipes+3)& (0+255),b
 11658                           
 11659                           ;usb_device_cdc.c: 199: break;
 11660  0043FA  0012               	return	
 11661  0043FC                     l1908:
 11662                           
 11663                           ; BSR set to: 4
 11664                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11665  0043FC  C432 F1DC          	movff	1074,_control_signal_bitmap	;volatile
 11666                           
 11667                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 11668  004400  0100               	movlb	0	; () banked
 11669  004402  8FB3               	bsf	(_inPipes+3)& (0+255),7,b
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;usb_device_cdc.c: 261: }
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;usb_device_cdc.c: 260: break;
 11676                           
 11677                           ;usb_device_cdc.c: 259: default:
 11678                           
 11679                           ;usb_device_cdc.c: 235: break;
 11680  004404  0012               	return	
 11681  004406                     l1902:
 11682                           
 11683                           ; BSR set to: 0
 11684  004406  0104               	movlb	4	; () banked
 11685  004408  5131               	movf	49,w,b	;volatile
 11686                           
 11687                           ; Switch size 1, requested type "space"
 11688                           ; Number of cases is 5, Range of values is 0 to 34
 11689                           ; switch strategies available:
 11690                           ; Name         Instructions Cycles
 11691                           ; simple_byte           16     9 (average)
 11692                           ;	Chosen strategy is simple_byte
 11693  00440A  0A00               	xorlw	0	; case 0
 11694  00440C  B4D8               	btfsc	status,2,c
 11695  00440E  D7C8               	goto	l1903
 11696  004410  0A01               	xorlw	1	; case 1
 11697  004412  B4D8               	btfsc	status,2,c
 11698  004414  D7D1               	goto	l1905
 11699  004416  0A21               	xorlw	33	; case 32
 11700  004418  B4D8               	btfsc	status,2,c
 11701  00441A  D7D5               	goto	l1906
 11702  00441C  0A01               	xorlw	1	; case 33
 11703  00441E  B4D8               	btfsc	status,2,c
 11704  004420  D7E1               	goto	l1907
 11705  004422  0A03               	xorlw	3	; case 34
 11706  004424  A4D8               	btfss	status,2,c
 11707  004426  0012               	return	
 11708  004428  D7E9               	goto	l1908
 11709  00442A                     __end_of_USBCheckCDCRequest:
 11710                           	opt stack 0
 11711                           tosu	equ	0xFFF
 11712                           tosh	equ	0xFFE
 11713                           tosl	equ	0xFFD
 11714                           pclath	equ	0xFFA
 11715                           tblptru	equ	0xFF8
 11716                           tblptrh	equ	0xFF7
 11717                           tblptrl	equ	0xFF6
 11718                           tablat	equ	0xFF5
 11719                           prodh	equ	0xFF4
 11720                           prodl	equ	0xFF3
 11721                           intcon	equ	0xFF2
 11722                           intcon2	equ	0xFF1
 11723                           intcon3	equ	0xFF0
 11724                           indf0	equ	0xFEF
 11725                           postinc0	equ	0xFEE
 11726                           plusw0	equ	0xFEB
 11727                           fsr0h	equ	0xFEA
 11728                           fsr0l	equ	0xFE9
 11729                           wreg	equ	0xFE8
 11730                           postinc1	equ	0xFE6
 11731                           postdec1	equ	0xFE5
 11732                           fsr1h	equ	0xFE2
 11733                           fsr1l	equ	0xFE1
 11734                           indf2	equ	0xFDF
 11735                           postinc2	equ	0xFDE
 11736                           postdec2	equ	0xFDD
 11737                           plusw2	equ	0xFDB
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function _CDCInitEP *****************
 11743 ;; Defined at:
 11744 ;;		line 297 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:   13
 11765 ;; This function calls:
 11766 ;;		_USBEnableEndpoint
 11767 ;;		_USBTransferOnePacket
 11768 ;; This function is called by:
 11769 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	text46
 11774  0054C4                     __ptext46:
 11775                           	opt stack 0
 11776  0054C4                     _CDCInitEP:
 11777                           	opt stack 12
 11778                           
 11779                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 11780                           
 11781                           ;incstack = 0
 11782  0054C4  0E80               	movlw	128
 11783  0054C6  0103               	movlb	3	; () banked
 11784  0054C8  6F83               	movwf	_line_coding& (0+255),b
 11785  0054CA  0E25               	movlw	37
 11786  0054CC  6F84               	movwf	(_line_coding+1)& (0+255),b
 11787  0054CE  0E00               	movlw	0
 11788  0054D0  6F85               	movwf	(_line_coding+2)& (0+255),b
 11789  0054D2  0E00               	movlw	0
 11790  0054D4  6F86               	movwf	(_line_coding+3)& (0+255),b
 11791                           
 11792                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 11793  0054D6  0E00               	movlw	0
 11794  0054D8  6F87               	movwf	(_line_coding+4)& (0+255),b
 11795                           
 11796                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 11797  0054DA  0E00               	movlw	0
 11798  0054DC  6F88               	movwf	(_line_coding+5)& (0+255),b
 11799                           
 11800                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 11801  0054DE  0E08               	movlw	8
 11802  0054E0  6F89               	movwf	(_line_coding+6)& (0+255),b
 11803                           
 11804                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 11805  0054E2  0E00               	movlw	0
 11806  0054E4  0100               	movlb	0	; () banked
 11807  0054E6  6FC9               	movwf	_cdc_rx_len& (0+255),b
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 11811  0054E8  0E1A               	movlw	26
 11812  0054EA  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11813  0054EC  0E01               	movlw	1
 11814  0054EE  EC28  F030         	call	_USBEnableEndpoint
 11815                           
 11816                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11817  0054F2  0E1E               	movlw	30
 11818  0054F4  0100               	movlb	0	; () banked
 11819  0054F6  6F85               	movwf	USBEnableEndpoint@options& (0+255),b
 11820  0054F8  0E02               	movlw	2
 11821  0054FA  EC28  F030         	call	_USBEnableEndpoint
 11822                           
 11823                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11824  0054FE  0E00               	movlw	0
 11825  005500  0100               	movlb	0	; () banked
 11826  005502  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 11827  005504  0E00               	movlw	low _cdc_data_rx
 11828  005506  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 11829  005508  0E05               	movlw	high _cdc_data_rx
 11830  00550A  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11831  00550C  0E40               	movlw	64
 11832  00550E  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 11833  005510  0E02               	movlw	2
 11834  005512  EC05  F021         	call	_USBTransferOnePacket
 11835  005516  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11836  00551A  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11837                           
 11838                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 11839  00551E  0E00               	movlw	0
 11840  005520  0101               	movlb	1	; () banked
 11841  005522  6FD1               	movwf	_CDCDataInHandle& (0+255),b
 11842  005524  0E00               	movlw	0
 11843  005526  6FD2               	movwf	(_CDCDataInHandle+1)& (0+255),b
 11844                           
 11845                           ; BSR set to: 1
 11846                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 11847  005528  0E00               	movlw	0
 11848  00552A  0100               	movlb	0	; () banked
 11849  00552C  6FC8               	movwf	_cdc_trf_state& (0+255),b
 11850                           
 11851                           ; BSR set to: 0
 11852  00552E  0012               	return		;funcret
 11853  005530                     __end_of_CDCInitEP:
 11854                           	opt stack 0
 11855                           tosu	equ	0xFFF
 11856                           tosh	equ	0xFFE
 11857                           tosl	equ	0xFFD
 11858                           pclath	equ	0xFFA
 11859                           tblptru	equ	0xFF8
 11860                           tblptrh	equ	0xFF7
 11861                           tblptrl	equ	0xFF6
 11862                           tablat	equ	0xFF5
 11863                           prodh	equ	0xFF4
 11864                           prodl	equ	0xFF3
 11865                           intcon	equ	0xFF2
 11866                           intcon2	equ	0xFF1
 11867                           intcon3	equ	0xFF0
 11868                           indf0	equ	0xFEF
 11869                           postinc0	equ	0xFEE
 11870                           plusw0	equ	0xFEB
 11871                           fsr0h	equ	0xFEA
 11872                           fsr0l	equ	0xFE9
 11873                           wreg	equ	0xFE8
 11874                           postinc1	equ	0xFE6
 11875                           postdec1	equ	0xFE5
 11876                           fsr1h	equ	0xFE2
 11877                           fsr1l	equ	0xFE1
 11878                           indf2	equ	0xFDF
 11879                           postinc2	equ	0xFDE
 11880                           postdec2	equ	0xFDD
 11881                           plusw2	equ	0xFDB
 11882                           fsr2h	equ	0xFDA
 11883                           fsr2l	equ	0xFD9
 11884                           status	equ	0xFD8
 11885                           
 11886 ;; *************** function _USBEnableEndpoint *****************
 11887 ;; Defined at:
 11888 ;;		line 896 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  ep              1    wreg     unsigned char 
 11891 ;;  options         1   37[BANK0 ] unsigned char 
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;  ep              1   40[BANK0 ] unsigned char 
 11894 ;;  p               2   38[BANK0 ] PTR unsigned char 
 11895 ;;		 -> UEP0(1), 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11905 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11906 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11908 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11909 ;;Total ram usage:        4 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:   12
 11912 ;; This function calls:
 11913 ;;		_USBConfigureEndpoint
 11914 ;; This function is called by:
 11915 ;;		_CDCInitEP
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text47
 11920  006050                     __ptext47:
 11921                           	opt stack 0
 11922  006050                     _USBEnableEndpoint:
 11923                           	opt stack 12
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;incstack = 0
 11927                           ;USBEnableEndpoint@ep stored from wreg
 11928  006050  0100               	movlb	0	; () banked
 11929  006052  6F88               	movwf	USBEnableEndpoint@ep& (0+255),b
 11930                           
 11931                           ;usb_device.c: 898: unsigned char* p;
 11932                           ;usb_device.c: 902: if(options & 0x04)
 11933  006054  0100               	movlb	0	; () banked
 11934  006056  A585               	btfss	USBEnableEndpoint@options& (0+255),2,b
 11935  006058  D005               	goto	l1643
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;usb_device.c: 903: {
 11939                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 11940  00605A  0E00               	movlw	0
 11941  00605C  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11942  00605E  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11943  006060  EC52  F025         	call	_USBConfigureEndpoint
 11944  006064                     l1643:
 11945                           
 11946                           ;usb_device.c: 905: }
 11947                           ;usb_device.c: 906: if(options & 0x02)
 11948  006064  0100               	movlb	0	; () banked
 11949  006066  A385               	btfss	USBEnableEndpoint@options& (0+255),1,b
 11950  006068  D005               	goto	l1644
 11951                           
 11952                           ; BSR set to: 0
 11953                           ;usb_device.c: 907: {
 11954                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 11955  00606A  0E01               	movlw	1
 11956  00606C  6F7D               	movwf	USBConfigureEndpoint@direction& (0+255),b
 11957  00606E  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11958  006070  EC52  F025         	call	_USBConfigureEndpoint
 11959  006074                     l1644:
 11960                           
 11961                           ;usb_device.c: 909: }
 11962                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 11963  006074  0100               	movlb	0	; () banked
 11964  006076  5188               	movf	USBEnableEndpoint@ep& (0+255),w,b
 11965  006078  0D01               	mullw	1
 11966  00607A  0E26               	movlw	38
 11967  00607C  24F3               	addwf	prodl,w,c
 11968  00607E  6F86               	movwf	USBEnableEndpoint@p& (0+255),b
 11969  006080  0E0F               	movlw	15
 11970  006082  20F4               	addwfc	prodh,w,c
 11971  006084  6F87               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;usb_device.c: 919: *p = options;
 11975  006086  C086  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 11976  00608A  C087  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 11977  00608E  C085  FFDF         	movff	USBEnableEndpoint@options,indf2
 11978                           
 11979                           ; BSR set to: 0
 11980  006092  0012               	return		;funcret
 11981  006094                     __end_of_USBEnableEndpoint:
 11982                           	opt stack 0
 11983                           tosu	equ	0xFFF
 11984                           tosh	equ	0xFFE
 11985                           tosl	equ	0xFFD
 11986                           pclath	equ	0xFFA
 11987                           tblptru	equ	0xFF8
 11988                           tblptrh	equ	0xFF7
 11989                           tblptrl	equ	0xFF6
 11990                           tablat	equ	0xFF5
 11991                           prodh	equ	0xFF4
 11992                           prodl	equ	0xFF3
 11993                           intcon	equ	0xFF2
 11994                           intcon2	equ	0xFF1
 11995                           intcon3	equ	0xFF0
 11996                           indf0	equ	0xFEF
 11997                           postinc0	equ	0xFEE
 11998                           plusw0	equ	0xFEB
 11999                           fsr0h	equ	0xFEA
 12000                           fsr0l	equ	0xFE9
 12001                           wreg	equ	0xFE8
 12002                           postinc1	equ	0xFE6
 12003                           postdec1	equ	0xFE5
 12004                           fsr1h	equ	0xFE2
 12005                           fsr1l	equ	0xFE1
 12006                           indf2	equ	0xFDF
 12007                           postinc2	equ	0xFDE
 12008                           postdec2	equ	0xFDD
 12009                           plusw2	equ	0xFDB
 12010                           fsr2h	equ	0xFDA
 12011                           fsr2l	equ	0xFD9
 12012                           status	equ	0xFD8
 12013                           
 12014 ;; *************** function _USBConfigureEndpoint *****************
 12015 ;; Defined at:
 12016 ;;		line 1561 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;  EPNum           1    wreg     unsigned char 
 12019 ;;  direction       1   29[BANK0 ] unsigned char 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  EPNum           1   34[BANK0 ] unsigned char 
 12022 ;;  handle          2   35[BANK0 ] PTR volatile struct __BD
 12023 ;;		 -> BDT(48), 
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12033 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12034 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12035 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12036 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12037 ;;Total ram usage:        8 bytes
 12038 ;; Hardware stack levels used:    1
 12039 ;; Hardware stack levels required when called:   11
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_USBEnableEndpoint
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           	psect	text48
 12048  004AA4                     __ptext48:
 12049                           	opt stack 0
 12050  004AA4                     _USBConfigureEndpoint:
 12051                           	opt stack 12
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;incstack = 0
 12055                           ;USBConfigureEndpoint@EPNum stored from wreg
 12056  004AA4  0100               	movlb	0	; () banked
 12057  004AA6  6F82               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 12058                           
 12059                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 12060                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 12061  004AA8  0E00               	movlw	0
 12062  004AAA  0100               	movlb	0	; () banked
 12063  004AAC  6F83               	movwf	USBConfigureEndpoint@handle& (0+255),b
 12064  004AAE  0E04               	movlw	4
 12065  004AB0  6F84               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 12069  004AB2  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12070  004AB4  6F7E               	movwf	??_USBConfigureEndpoint& (0+255),b
 12071  004AB6  6B7F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 12072  004AB8  90D8               	bcf	status,0,c
 12073  004ABA  377E               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 12074  004ABC  377F               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 12075  004ABE  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12076  004AC0  6F80               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 12077  004AC2  6B81               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 12078  004AC4  90D8               	bcf	status,0,c
 12079  004AC6  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12080  004AC8  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12081  004ACA  90D8               	bcf	status,0,c
 12082  004ACC  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12083  004ACE  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12084  004AD0  517E               	movf	??_USBConfigureEndpoint& (0+255),w,b
 12085  004AD2  2780               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12086  004AD4  517F               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 12087  004AD6  2381               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12088  004AD8  90D8               	bcf	status,0,c
 12089  004ADA  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12090  004ADC  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12091  004ADE  90D8               	bcf	status,0,c
 12092  004AE0  3780               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 12093  004AE2  3781               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 12094  004AE4  5180               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 12095  004AE6  2783               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 12096  004AE8  5181               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 12097  004AEA  2384               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 12101  004AEC  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12102  004AF0  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12103  004AF4  9EDF               	bcf	indf2,7,c
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;usb_device.c: 1575: if(direction == 0)
 12107  004AF6  517D               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 12108  004AF8  A4D8               	btfss	status,2,c
 12109  004AFA  D007               	goto	l1679
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;usb_device.c: 1576: {
 12113                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 12114  004AFC  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12115  004AFE  0D02               	mullw	2
 12116  004B00  0E06               	movlw	low _pBDTEntryOut
 12117  004B02  24F3               	addwf	prodl,w,c
 12118  004B04  6ED9               	movwf	fsr2l,c
 12119  004B06  0E03               	movlw	high _pBDTEntryOut
 12120  004B08  D006               	goto	L10
 12121  004B0A                     l1679:
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;usb_device.c: 1579: else
 12125                           ;usb_device.c: 1580: {
 12126                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 12127                           
 12128                           ; BSR set to: 0
 12129  004B0A  5182               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 12130  004B0C  0D02               	mullw	2
 12131  004B0E  0EB6               	movlw	low _pBDTEntryIn
 12132  004B10  24F3               	addwf	prodl,w,c
 12133  004B12  6ED9               	movwf	fsr2l,c
 12134  004B14  0E00               	movlw	high _pBDTEntryIn
 12135  004B16                     L10:
 12136  004B16  20F4               	addwfc	prodh,w,c
 12137  004B18  6EDA               	movwf	fsr2h,c
 12138  004B1A  C083  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 12139  004B1E  C084  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;usb_device.c: 1582: }
 12143                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 12144                           
 12145                           ; BSR set to: 0
 12146  004B22  C083  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 12147  004B26  C084  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 12148  004B2A  9CDF               	bcf	indf2,6,c
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 12152  004B2C  EE20 F004          	lfsr	2,4
 12153  004B30  5183               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 12154  004B32  26D9               	addwf	fsr2l,f,c
 12155  004B34  5184               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 12156  004B36  22DA               	addwfc	fsr2h,f,c
 12157  004B38  8CDF               	bsf	indf2,6,c
 12158                           
 12159                           ; BSR set to: 0
 12160  004B3A  0012               	return		;funcret
 12161  004B3C                     __end_of_USBConfigureEndpoint:
 12162                           	opt stack 0
 12163                           tosu	equ	0xFFF
 12164                           tosh	equ	0xFFE
 12165                           tosl	equ	0xFFD
 12166                           pclath	equ	0xFFA
 12167                           tblptru	equ	0xFF8
 12168                           tblptrh	equ	0xFF7
 12169                           tblptrl	equ	0xFF6
 12170                           tablat	equ	0xFF5
 12171                           prodh	equ	0xFF4
 12172                           prodl	equ	0xFF3
 12173                           intcon	equ	0xFF2
 12174                           intcon2	equ	0xFF1
 12175                           intcon3	equ	0xFF0
 12176                           indf0	equ	0xFEF
 12177                           postinc0	equ	0xFEE
 12178                           plusw0	equ	0xFEB
 12179                           fsr0h	equ	0xFEA
 12180                           fsr0l	equ	0xFE9
 12181                           wreg	equ	0xFE8
 12182                           postinc1	equ	0xFE6
 12183                           postdec1	equ	0xFE5
 12184                           fsr1h	equ	0xFE2
 12185                           fsr1l	equ	0xFE1
 12186                           indf2	equ	0xFDF
 12187                           postinc2	equ	0xFDE
 12188                           postdec2	equ	0xFDD
 12189                           plusw2	equ	0xFDB
 12190                           fsr2h	equ	0xFDA
 12191                           fsr2l	equ	0xFD9
 12192                           status	equ	0xFD8
 12193                           
 12194 ;; *************** function _USBCtrlTrfOutHandler *****************
 12195 ;; Defined at:
 12196 ;;		line 2555 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;		None
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12214 ;;Total ram usage:        0 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; Hardware stack levels required when called:   13
 12217 ;; This function calls:
 12218 ;;		_USBCtrlTrfRxService
 12219 ;; This function is called by:
 12220 ;;		_USBCtrlEPService
 12221 ;; This function uses a non-reentrant model
 12222 ;;
 12223                           
 12224                           	psect	text49
 12225  005670                     __ptext49:
 12226                           	opt stack 0
 12227  005670                     _USBCtrlTrfOutHandler:
 12228                           	opt stack 12
 12229                           
 12230                           ;usb_device.c: 2557: if(controlTransferState == 2)
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;incstack = 0
 12234  005670  0E02               	movlw	2
 12235  005672  0100               	movlb	0	; () banked
 12236  005674  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12237  005676  A4D8               	btfss	status,2,c
 12238  005678  D003               	goto	l1785
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;usb_device.c: 2558: {
 12242                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 12243  00567A  EC81  F016         	call	_USBCtrlTrfRxService	;wreg free
 12244                           
 12245                           ;usb_device.c: 2560: }
 12246  00567E  0012               	return	
 12247  005680                     l1785:
 12248                           
 12249                           ;usb_device.c: 2561: else
 12250                           ;usb_device.c: 2562: {
 12251                           ;usb_device.c: 2565: controlTransferState = 0;
 12252  005680  0E00               	movlw	0
 12253  005682  0100               	movlb	0	; () banked
 12254  005684  6FCC               	movwf	_controlTransferState& (0+255),b
 12255                           
 12256                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 12257  005686  0101               	movlb	1	; () banked
 12258  005688  51DF               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 12259  00568A  A4D8               	btfss	status,2,c
 12260  00568C  D020               	goto	l1787
 12261                           
 12262                           ; BSR set to: 1
 12263                           ;usb_device.c: 2573: {
 12264                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 12265  00568E  0100               	movlb	0	; () banked
 12266  005690  EE20 F001          	lfsr	2,1
 12267  005694  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12268  005696  26D9               	addwf	fsr2l,f,c
 12269  005698  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12270  00569A  22DA               	addwfc	fsr2h,f,c
 12271  00569C  0E08               	movlw	8
 12272  00569E  6EDF               	movwf	indf2,c
 12273                           
 12274                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12275  0056A0  EE20 F002          	lfsr	2,2
 12276  0056A4  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12277  0056A6  26D9               	addwf	fsr2l,f,c
 12278  0056A8  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12279  0056AA  22DA               	addwfc	fsr2h,f,c
 12280  0056AC  0E30               	movlw	48
 12281  0056AE  6EDE               	movwf	postinc2,c
 12282  0056B0  0E04               	movlw	4
 12283  0056B2  6EDD               	movwf	postdec2,c
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12287  0056B4  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12288  0056B8  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12289  0056BC  0E0C               	movlw	12
 12290  0056BE  6EDF               	movwf	indf2,c
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12294  0056C0  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12295  0056C4  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12296  0056C8  0E00               	movlw	0
 12297  0056CA  8EDB               	bsf	plusw2,7,c
 12298                           
 12299                           ;usb_device.c: 2578: }
 12300  0056CC  0012               	return	
 12301  0056CE                     l1787:
 12302                           
 12303                           ;usb_device.c: 2579: else
 12304                           ;usb_device.c: 2580: {
 12305                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 12306                           
 12307                           ; BSR set to: 0
 12308  0056CE  0E00               	movlw	0
 12309  0056D0  0101               	movlb	1	; () banked
 12310  0056D2  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12311                           
 12312                           ; BSR set to: 1
 12313  0056D4  0012               	return	
 12314  0056D6                     __end_of_USBCtrlTrfOutHandler:
 12315                           	opt stack 0
 12316                           tosu	equ	0xFFF
 12317                           tosh	equ	0xFFE
 12318                           tosl	equ	0xFFD
 12319                           pclath	equ	0xFFA
 12320                           tblptru	equ	0xFF8
 12321                           tblptrh	equ	0xFF7
 12322                           tblptrl	equ	0xFF6
 12323                           tablat	equ	0xFF5
 12324                           prodh	equ	0xFF4
 12325                           prodl	equ	0xFF3
 12326                           intcon	equ	0xFF2
 12327                           intcon2	equ	0xFF1
 12328                           intcon3	equ	0xFF0
 12329                           indf0	equ	0xFEF
 12330                           postinc0	equ	0xFEE
 12331                           plusw0	equ	0xFEB
 12332                           fsr0h	equ	0xFEA
 12333                           fsr0l	equ	0xFE9
 12334                           wreg	equ	0xFE8
 12335                           postinc1	equ	0xFE6
 12336                           postdec1	equ	0xFE5
 12337                           fsr1h	equ	0xFE2
 12338                           fsr1l	equ	0xFE1
 12339                           indf2	equ	0xFDF
 12340                           postinc2	equ	0xFDE
 12341                           postdec2	equ	0xFDD
 12342                           plusw2	equ	0xFDB
 12343                           fsr2h	equ	0xFDA
 12344                           fsr2l	equ	0xFD9
 12345                           status	equ	0xFD8
 12346                           
 12347 ;; *************** function _USBCtrlTrfRxService *****************
 12348 ;; Defined at:
 12349 ;;		line 1870 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;		None
 12352 ;; Auto vars:     Size  Location     Type
 12353 ;;  byteToRead      1   30[BANK0 ] unsigned char 
 12354 ;;  i               1   29[BANK0 ] unsigned char 
 12355 ;; Return value:  Size  Location     Type
 12356 ;;                  1    wreg      void 
 12357 ;; Registers used:
 12358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12359 ;; Tracked objects:
 12360 ;;		On entry : 0/0
 12361 ;;		On exit  : 0/0
 12362 ;;		Unchanged: 0/0
 12363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12365 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12367 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12368 ;;Total ram usage:        2 bytes
 12369 ;; Hardware stack levels used:    1
 12370 ;; Hardware stack levels required when called:   12
 12371 ;; This function calls:
 12372 ;;		_USBCtrlEPAllowStatusStage
 12373 ;; This function is called by:
 12374 ;;		_USBCtrlTrfOutHandler
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           	psect	text50
 12379  002D02                     __ptext50:
 12380                           	opt stack 0
 12381  002D02                     _USBCtrlTrfRxService:
 12382                           	opt stack 12
 12383                           
 12384                           ;usb_device.c: 1872: uint8_t byteToRead;
 12385                           ;usb_device.c: 1873: uint8_t i;
 12386                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 12387                           
 12388                           ;incstack = 0
 12389  002D02  0100               	movlb	0	; () banked
 12390  002D04  EE20 F001          	lfsr	2,1
 12391  002D08  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12392  002D0A  26D9               	addwf	fsr2l,f,c
 12393  002D0C  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12394  002D0E  22DA               	addwfc	fsr2h,f,c
 12395  002D10  50DF               	movf	indf2,w,c
 12396  002D12  6F7E               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 12400  002D14  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12401  002D16  0101               	movlb	1	; () banked
 12402  002D18  5DCD               	subwf	(_outPipes+4)& (0+255),w,b
 12403  002D1A  0E00               	movlw	0
 12404  002D1C  59CE               	subwfb	(_outPipes+5)& (0+255),w,b
 12405  002D1E  A0D8               	btfss	status,0,c
 12406                           
 12407                           ; BSR set to: 1
 12408                           ;usb_device.c: 1884: {
 12409                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 12410  002D20  C1CD  F07E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 12411                           
 12412                           ; BSR set to: 1
 12413                           ;usb_device.c: 1886: }
 12414                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 12415                           
 12416                           ; BSR set to: 1
 12417  002D24  0100               	movlb	0	; () banked
 12418  002D26  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12419  002D28  0101               	movlb	1	; () banked
 12420  002D2A  5FCD               	subwf	(_outPipes+4)& (0+255),f,b
 12421  002D2C  0E00               	movlw	0
 12422  002D2E  5BCE               	subwfb	(_outPipes+5)& (0+255),f,b
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 12426  002D30  0E00               	movlw	0
 12427  002D32  0100               	movlb	0	; () banked
 12428  002D34  6F7D               	movwf	USBCtrlTrfRxService@i& (0+255),b
 12429  002D36  D013               	goto	l1713
 12430  002D38                     
 12431                           ; BSR set to: 0
 12432                           ;usb_device.c: 1893: {
 12433                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12434                           
 12435                           ; BSR set to: 0
 12436  002D38  517D               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 12437  002D3A  0D01               	mullw	1
 12438  002D3C  0E38               	movlw	56
 12439  002D3E  24F3               	addwf	prodl,w,c
 12440  002D40  6ED9               	movwf	fsr2l,c
 12441  002D42  0E04               	movlw	4
 12442  002D44  20F4               	addwfc	prodh,w,c
 12443  002D46  6EDA               	movwf	fsr2h,c
 12444  002D48  C1C9  FFE1         	movff	_outPipes,fsr1l
 12445  002D4C  C1CA  FFE2         	movff	_outPipes+1,fsr1h
 12446  002D50  CFDF FFE7          	movff	indf2,indf1
 12447                           
 12448                           ; BSR set to: 0
 12449  002D54  0101               	movlb	1	; () banked
 12450  002D56  4BC9               	infsnz	_outPipes& (0+255),f,b
 12451  002D58  2BCA               	incf	(_outPipes+1)& (0+255),f,b
 12452                           
 12453                           ; BSR set to: 1
 12454  002D5A  0100               	movlb	0	; () banked
 12455  002D5C  2B7D               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 12456  002D5E                     l1713:
 12457                           
 12458                           ; BSR set to: 0
 12459                           
 12460                           ; BSR set to: 0
 12461  002D5E  517E               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 12462  002D60  5D7D               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 12463  002D62  A0D8               	btfss	status,0,c
 12464  002D64  D7E9               	goto	l1714
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;usb_device.c: 1895: }
 12468                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 12469                           
 12470                           ; BSR set to: 0
 12471  002D66  0101               	movlb	1	; () banked
 12472  002D68  51CD               	movf	(_outPipes+4)& (0+255),w,b
 12473  002D6A  11CE               	iorwf	(_outPipes+5)& (0+255),w,b
 12474  002D6C  B4D8               	btfsc	status,2,c
 12475  002D6E  D033               	goto	l1716
 12476                           
 12477                           ; BSR set to: 1
 12478                           ;usb_device.c: 1900: {
 12479                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 12480  002D70  0100               	movlb	0	; () banked
 12481  002D72  EE20 F001          	lfsr	2,1
 12482  002D76  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12483  002D78  26D9               	addwf	fsr2l,f,c
 12484  002D7A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12485  002D7C  22DA               	addwfc	fsr2h,f,c
 12486  002D7E  0E08               	movlw	8
 12487  002D80  6EDF               	movwf	indf2,c
 12488                           
 12489                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12490  002D82  EE20 F002          	lfsr	2,2
 12491  002D86  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12492  002D88  26D9               	addwf	fsr2l,f,c
 12493  002D8A  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12494  002D8C  22DA               	addwfc	fsr2h,f,c
 12495  002D8E  0E38               	movlw	56
 12496  002D90  6EDE               	movwf	postinc2,c
 12497  002D92  0E04               	movlw	4
 12498  002D94  6EDD               	movwf	postdec2,c
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12502  002D96  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12503  002D9A  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12504  002D9E  BCDF               	btfsc	indf2,6,c
 12505  002DA0  D00D               	goto	l1717
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;usb_device.c: 1904: {
 12509                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12510  002DA2  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12511  002DA6  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12512  002DAA  0E48               	movlw	72
 12513  002DAC  6EDF               	movwf	indf2,c
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12517  002DAE  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12518  002DB2  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12519  002DB6  0E00               	movlw	0
 12520  002DB8  8EDB               	bsf	plusw2,7,c
 12521                           
 12522                           ;usb_device.c: 1907: }
 12523  002DBA  0012               	return	
 12524  002DBC                     l1717:
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;usb_device.c: 1908: else
 12528                           ;usb_device.c: 1909: {
 12529                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 12530                           
 12531                           ; BSR set to: 0
 12532  002DBC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12533  002DC0  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12534  002DC4  0E08               	movlw	8
 12535  002DC6  6EDF               	movwf	indf2,c
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12539  002DC8  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12540  002DCC  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12541  002DD0  0E00               	movlw	0
 12542  002DD2  8EDB               	bsf	plusw2,7,c
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;usb_device.c: 1912: }
 12546                           ;usb_device.c: 1913: }
 12547  002DD4  0012               	return	
 12548  002DD6                     l1716:
 12549                           
 12550                           ;usb_device.c: 1914: else
 12551                           ;usb_device.c: 1915: {
 12552                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 12553                           
 12554                           ; BSR set to: 0
 12555  002DD6  0100               	movlb	0	; () banked
 12556  002DD8  EE20 F001          	lfsr	2,1
 12557  002DDC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12558  002DDE  26D9               	addwf	fsr2l,f,c
 12559  002DE0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12560  002DE2  22DA               	addwfc	fsr2h,f,c
 12561  002DE4  0E08               	movlw	8
 12562  002DE6  6EDF               	movwf	indf2,c
 12563                           
 12564                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12565  002DE8  EE20 F002          	lfsr	2,2
 12566  002DEC  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12567  002DEE  26D9               	addwf	fsr2l,f,c
 12568  002DF0  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12569  002DF2  22DA               	addwfc	fsr2h,f,c
 12570  002DF4  0E30               	movlw	48
 12571  002DF6  6EDE               	movwf	postinc2,c
 12572  002DF8  0E04               	movlw	4
 12573  002DFA  6EDD               	movwf	postdec2,c
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12577  002DFC  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12578  002E00  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12579  002E04  0E04               	movlw	4
 12580  002E06  6EDF               	movwf	indf2,c
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12584  002E08  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12585  002E0C  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12586  002E10  0E00               	movlw	0
 12587  002E12  8EDB               	bsf	plusw2,7,c
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;usb_device.c: 1944: }
 12591                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 12592                           
 12593                           ; BSR set to: 0
 12594  002E14  0101               	movlb	1	; () banked
 12595  002E16  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 12596                           
 12597                           ; BSR set to: 1
 12598                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 12599  002E18  0100               	movlb	0	; () banked
 12600  002E1A  51CA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12601  002E1C  A4D8               	btfss	status,2,c
 12602  002E1E  0012               	return	
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;usb_device.c: 1960: {
 12606                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 12607  002E20  EC4B  F01E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12608  002E24  0012               	return	
 12609  002E26                     __end_of_USBCtrlTrfRxService:
 12610                           	opt stack 0
 12611                           tosu	equ	0xFFF
 12612                           tosh	equ	0xFFE
 12613                           tosl	equ	0xFFD
 12614                           pclath	equ	0xFFA
 12615                           tblptru	equ	0xFF8
 12616                           tblptrh	equ	0xFF7
 12617                           tblptrl	equ	0xFF6
 12618                           tablat	equ	0xFF5
 12619                           prodh	equ	0xFF4
 12620                           prodl	equ	0xFF3
 12621                           intcon	equ	0xFF2
 12622                           intcon2	equ	0xFF1
 12623                           intcon3	equ	0xFF0
 12624                           indf0	equ	0xFEF
 12625                           postinc0	equ	0xFEE
 12626                           plusw0	equ	0xFEB
 12627                           fsr0h	equ	0xFEA
 12628                           fsr0l	equ	0xFE9
 12629                           wreg	equ	0xFE8
 12630                           indf1	equ	0xFE7
 12631                           postinc1	equ	0xFE6
 12632                           postdec1	equ	0xFE5
 12633                           fsr1h	equ	0xFE2
 12634                           fsr1l	equ	0xFE1
 12635                           indf2	equ	0xFDF
 12636                           postinc2	equ	0xFDE
 12637                           postdec2	equ	0xFDD
 12638                           plusw2	equ	0xFDB
 12639                           fsr2h	equ	0xFDA
 12640                           fsr2l	equ	0xFD9
 12641                           status	equ	0xFD8
 12642                           
 12643 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12644 ;; Defined at:
 12645 ;;		line 1434 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      void 
 12652 ;; Registers used:
 12653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12663 ;;Total ram usage:        0 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:   11
 12666 ;; This function calls:
 12667 ;;		Nothing
 12668 ;; This function is called by:
 12669 ;;		_USBDeviceTasks
 12670 ;;		_USBCtrlEPServiceComplete
 12671 ;;		_USBCtrlTrfRxService
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           
 12675                           	psect	text51
 12676  003C96                     __ptext51:
 12677                           	opt stack 0
 12678  003C96                     _USBCtrlEPAllowStatusStage:
 12679                           	opt stack 12
 12680                           
 12681                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 12682                           
 12683                           ;incstack = 0
 12684  003C96  5028               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 12685  003C98  A4D8               	btfss	status,2,c
 12686  003C9A  0012               	return	
 12687                           
 12688                           ;usb_device.c: 1442: {
 12689                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 12690  003C9C  0E01               	movlw	1
 12691  003C9E  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12692                           
 12693                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 12694  003CA0  5027               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 12695  003CA2  A4D8               	btfss	status,2,c
 12696  003CA4  0012               	return	
 12697                           
 12698                           ;usb_device.c: 1445: {
 12699                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 12700  003CA6  0E01               	movlw	1
 12701  003CA8  6E27               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12702                           
 12703                           ;usb_device.c: 1450: if(controlTransferState == 2)
 12704  003CAA  0E02               	movlw	2
 12705  003CAC  0100               	movlb	0	; () banked
 12706  003CAE  19CC               	xorwf	_controlTransferState& (0+255),w,b
 12707  003CB0  A4D8               	btfss	status,2,c
 12708  003CB2  D015               	goto	l1667
 12709                           
 12710                           ; BSR set to: 0
 12711                           ;usb_device.c: 1451: {
 12712                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 12713  003CB4  EE20 F001          	lfsr	2,1
 12714  003CB8  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12715  003CBA  26D9               	addwf	fsr2l,f,c
 12716  003CBC  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12717  003CBE  22DA               	addwfc	fsr2h,f,c
 12718  003CC0  0E00               	movlw	0
 12719  003CC2  6EDF               	movwf	indf2,c
 12720                           
 12721                           ; BSR set to: 0
 12722                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12723  003CC4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12724  003CC8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12725  003CCC  0E48               	movlw	72
 12726  003CCE  6EDF               	movwf	indf2,c
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12730  003CD0  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12731  003CD4  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12732  003CD8  0E00               	movlw	0
 12733  003CDA  8EDB               	bsf	plusw2,7,c
 12734                           
 12735                           ;usb_device.c: 1455: }
 12736  003CDC  0012               	return	
 12737  003CDE                     l1667:
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 12741                           
 12742                           ; BSR set to: 0
 12743  003CDE  05CC               	decf	_controlTransferState& (0+255),w,b
 12744  003CE0  A4D8               	btfss	status,2,c
 12745  003CE2  0012               	return	
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;usb_device.c: 1457: {
 12749                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 12750  003CE4  0E00               	movlw	0
 12751  003CE6  0101               	movlb	1	; () banked
 12752  003CE8  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12753                           
 12754                           ; BSR set to: 1
 12755                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 12756  003CEA  0100               	movlb	0	; () banked
 12757  003CEC  EE20 F001          	lfsr	2,1
 12758  003CF0  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12759  003CF2  26D9               	addwf	fsr2l,f,c
 12760  003CF4  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12761  003CF6  22DA               	addwfc	fsr2h,f,c
 12762  003CF8  0E08               	movlw	8
 12763  003CFA  6EDF               	movwf	indf2,c
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 12767  003CFC  EE20 F002          	lfsr	2,2
 12768  003D00  51C0               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12769  003D02  26D9               	addwf	fsr2l,f,c
 12770  003D04  51C1               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12771  003D06  22DA               	addwfc	fsr2h,f,c
 12772  003D08  0E30               	movlw	48
 12773  003D0A  6EDE               	movwf	postinc2,c
 12774  003D0C  0E04               	movlw	4
 12775  003D0E  6EDD               	movwf	postdec2,c
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 12779  003D10  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12780  003D14  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12781  003D18  0E04               	movlw	4
 12782  003D1A  6EDF               	movwf	indf2,c
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12786  003D1C  C0C0  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12787  003D20  C0C1  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12788  003D24  0E00               	movlw	0
 12789  003D26  8EDB               	bsf	plusw2,7,c
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 12793  003D28  0E01               	movlw	1
 12794  003D2A  0101               	movlb	1	; () banked
 12795  003D2C  6FDF               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12796                           
 12797                           ; BSR set to: 1
 12798                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 12799  003D2E  0100               	movlb	0	; () banked
 12800  003D30  EE20 F001          	lfsr	2,1
 12801  003D34  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12802  003D36  26D9               	addwf	fsr2l,f,c
 12803  003D38  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12804  003D3A  22DA               	addwfc	fsr2h,f,c
 12805  003D3C  0E08               	movlw	8
 12806  003D3E  6EDF               	movwf	indf2,c
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12810  003D40  EE20 F002          	lfsr	2,2
 12811  003D44  51BE               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12812  003D46  26D9               	addwf	fsr2l,f,c
 12813  003D48  51BF               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12814  003D4A  22DA               	addwfc	fsr2h,f,c
 12815  003D4C  0E30               	movlw	48
 12816  003D4E  6EDE               	movwf	postinc2,c
 12817  003D50  0E04               	movlw	4
 12818  003D52  6EDD               	movwf	postdec2,c
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12822  003D54  C0BE  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12823  003D58  C0BF  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12824  003D5C  0E80               	movlw	128
 12825  003D5E  6EDF               	movwf	indf2,c
 12826                           
 12827                           ; BSR set to: 0
 12828                           
 12829                           ; BSR set to: 0
 12830                           
 12831                           ; BSR set to: 0
 12832  003D60  0012               	return	
 12833  003D62                     __end_of_USBCtrlEPAllowStatusStage:
 12834                           	opt stack 0
 12835                           tosu	equ	0xFFF
 12836                           tosh	equ	0xFFE
 12837                           tosl	equ	0xFFD
 12838                           pclath	equ	0xFFA
 12839                           tblptru	equ	0xFF8
 12840                           tblptrh	equ	0xFF7
 12841                           tblptrl	equ	0xFF6
 12842                           tablat	equ	0xFF5
 12843                           prodh	equ	0xFF4
 12844                           prodl	equ	0xFF3
 12845                           intcon	equ	0xFF2
 12846                           intcon2	equ	0xFF1
 12847                           intcon3	equ	0xFF0
 12848                           indf0	equ	0xFEF
 12849                           postinc0	equ	0xFEE
 12850                           plusw0	equ	0xFEB
 12851                           fsr0h	equ	0xFEA
 12852                           fsr0l	equ	0xFE9
 12853                           wreg	equ	0xFE8
 12854                           indf1	equ	0xFE7
 12855                           postinc1	equ	0xFE6
 12856                           postdec1	equ	0xFE5
 12857                           fsr1h	equ	0xFE2
 12858                           fsr1l	equ	0xFE1
 12859                           indf2	equ	0xFDF
 12860                           postinc2	equ	0xFDE
 12861                           postdec2	equ	0xFDD
 12862                           plusw2	equ	0xFDB
 12863                           fsr2h	equ	0xFDA
 12864                           fsr2l	equ	0xFD9
 12865                           status	equ	0xFD8
 12866                           
 12867 ;; *************** function _USBCtrlTrfInHandler *****************
 12868 ;; Defined at:
 12869 ;;		line 2609 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;		None
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;  lastDTS         1   30[BANK0 ] unsigned char 
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  1    wreg      void 
 12876 ;; Registers used:
 12877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12886 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12887 ;;Total ram usage:        1 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:   12
 12890 ;; This function calls:
 12891 ;;		_USBCtrlTrfTxService
 12892 ;; This function is called by:
 12893 ;;		_USBCtrlEPService
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           	psect	text52
 12898  004148                     __ptext52:
 12899                           	opt stack 0
 12900  004148                     _USBCtrlTrfInHandler:
 12901                           	opt stack 13
 12902                           
 12903                           ;usb_device.c: 2611: uint8_t lastDTS;
 12904                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 12905                           
 12906                           ;incstack = 0
 12907  004148  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 12908  00414C  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12909  004150  0100               	movlb	0	; () banked
 12910  004152  0E00               	movlw	0
 12911  004154  BCDF               	btfsc	indf2,6,c
 12912  004156  0E01               	movlw	1
 12913  004158  6F7E               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12917  00415A  0E04               	movlw	4
 12918  00415C  1BB6               	xorwf	_pBDTEntryIn& (0+255),f,b
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 12922  00415E  0E08               	movlw	8
 12923  004160  19CE               	xorwf	_USBDeviceState& (0+255),w,b
 12924  004162  A4D8               	btfss	status,2,c
 12925  004164  D00D               	goto	l1794
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;usb_device.c: 2622: {
 12929                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 12930  004166  0104               	movlb	4	; () banked
 12931  004168  5132               	movf	50,w,b	;volatile
 12932  00416A  0B7F               	andlw	127
 12933  00416C  010F               	movlb	15	; () banked
 12934  00416E  6F38               	movwf	56,b	;volatile
 12935                           
 12936                           ; BSR set to: 15
 12937                           ;usb_device.c: 2624: if(UADDR != 0u)
 12938  004170  5138               	movf	56,w,b	;volatile
 12939  004172  B4D8               	btfsc	status,2,c
 12940  004174  D002               	goto	l1793
 12941                           
 12942                           ; BSR set to: 15
 12943                           ;usb_device.c: 2625: {
 12944                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 12945  004176  0E10               	movlw	16
 12946  004178  D001               	goto	L11
 12947  00417A                     l1793:
 12948                           
 12949                           ;usb_device.c: 2628: else
 12950                           ;usb_device.c: 2629: {
 12951                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 12952                           
 12953                           ; BSR set to: 0
 12954  00417A  0E04               	movlw	4
 12955  00417C                     L11:
 12956  00417C  0100               	movlb	0	; () banked
 12957  00417E  6FCE               	movwf	_USBDeviceState& (0+255),b
 12958  004180                     l1794:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;usb_device.c: 2631: }
 12962                           ;usb_device.c: 2632: }
 12963                           ;usb_device.c: 2635: if(controlTransferState == 1)
 12964                           
 12965                           ; BSR set to: 0
 12966                           
 12967                           ; BSR set to: 0
 12968  004180  05CC               	decf	_controlTransferState& (0+255),w,b
 12969  004182  A4D8               	btfss	status,2,c
 12970  004184  D03B               	goto	l1795
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;usb_device.c: 2636: {
 12974                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 12975  004186  EE20 F002          	lfsr	2,2
 12976  00418A  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 12977  00418C  26D9               	addwf	fsr2l,f,c
 12978  00418E  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12979  004190  22DA               	addwfc	fsr2h,f,c
 12980  004192  0E38               	movlw	56
 12981  004194  6EDE               	movwf	postinc2,c
 12982  004196  0E04               	movlw	4
 12983  004198  6EDD               	movwf	postdec2,c
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 12987  00419A  ECD3  F01B         	call	_USBCtrlTrfTxService	;wreg free
 12988                           
 12989                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 12990  00419E  0E02               	movlw	2
 12991  0041A0  0100               	movlb	0	; () banked
 12992  0041A2  19CD               	xorwf	_shortPacketStatus& (0+255),w,b
 12993  0041A4  A4D8               	btfss	status,2,c
 12994  0041A6  D00D               	goto	l1796
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;usb_device.c: 2645: {
 12998                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 12999  0041A8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13000  0041AC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13001  0041B0  0E04               	movlw	4
 13002  0041B2  6EDF               	movwf	indf2,c
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13006  0041B4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13007  0041B8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13008  0041BC  0E00               	movlw	0
 13009  0041BE  8EDB               	bsf	plusw2,7,c
 13010                           
 13011                           ;usb_device.c: 2650: }
 13012  0041C0  0012               	return	
 13013  0041C2                     l1796:
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;usb_device.c: 2651: else
 13017                           ;usb_device.c: 2652: {
 13018                           ;usb_device.c: 2653: if(lastDTS == 0)
 13019                           
 13020                           ; BSR set to: 0
 13021  0041C2  517E               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 13022  0041C4  A4D8               	btfss	status,2,c
 13023  0041C6  D00D               	goto	l1798
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;usb_device.c: 2654: {
 13027                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13028  0041C8  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13029  0041CC  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13030  0041D0  0E48               	movlw	72
 13031  0041D2  6EDF               	movwf	indf2,c
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13035  0041D4  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13036  0041D8  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13037  0041DC  0E00               	movlw	0
 13038  0041DE  8EDB               	bsf	plusw2,7,c
 13039                           
 13040                           ;usb_device.c: 2657: }
 13041  0041E0  0012               	return	
 13042  0041E2                     l1798:
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;usb_device.c: 2658: else
 13046                           ;usb_device.c: 2659: {
 13047                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 13048                           
 13049                           ; BSR set to: 0
 13050  0041E2  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13051  0041E6  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13052  0041EA  0E08               	movlw	8
 13053  0041EC  6EDF               	movwf	indf2,c
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13057  0041EE  C0B6  FFD9         	movff	_pBDTEntryIn,fsr2l
 13058  0041F2  C0B7  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13059  0041F6  0E00               	movlw	0
 13060  0041F8  8EDB               	bsf	plusw2,7,c
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;usb_device.c: 2662: }
 13064                           ;usb_device.c: 2663: }
 13065                           ;usb_device.c: 2664: }
 13066                           
 13067                           ; BSR set to: 0
 13068  0041FA  0012               	return	
 13069  0041FC                     l1795:
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;usb_device.c: 2665: else
 13073                           ;usb_device.c: 2666: {
 13074                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 13075  0041FC  0101               	movlb	1	; () banked
 13076  0041FE  BFCC               	btfsc	(_outPipes+3)& (0+255),7,b
 13077                           
 13078                           ; BSR set to: 1
 13079                           ;usb_device.c: 2675: }
 13080                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 13081                           
 13082                           ; BSR set to: 1
 13083  004200  9FCC               	bcf	(_outPipes+3)& (0+255),7,b
 13084                           
 13085                           ; BSR set to: 1
 13086                           ;usb_device.c: 2677: }
 13087                           ;usb_device.c: 2679: controlTransferState = 0;
 13088                           
 13089                           ; BSR set to: 1
 13090  004202  0E00               	movlw	0
 13091  004204  0100               	movlb	0	; () banked
 13092  004206  6FCC               	movwf	_controlTransferState& (0+255),b
 13093  004208  0012               	return	
 13094  00420A                     __end_of_USBCtrlTrfInHandler:
 13095                           	opt stack 0
 13096                           tosu	equ	0xFFF
 13097                           tosh	equ	0xFFE
 13098                           tosl	equ	0xFFD
 13099                           pclath	equ	0xFFA
 13100                           tblptru	equ	0xFF8
 13101                           tblptrh	equ	0xFF7
 13102                           tblptrl	equ	0xFF6
 13103                           tablat	equ	0xFF5
 13104                           prodh	equ	0xFF4
 13105                           prodl	equ	0xFF3
 13106                           intcon	equ	0xFF2
 13107                           intcon2	equ	0xFF1
 13108                           intcon3	equ	0xFF0
 13109                           indf0	equ	0xFEF
 13110                           postinc0	equ	0xFEE
 13111                           plusw0	equ	0xFEB
 13112                           fsr0h	equ	0xFEA
 13113                           fsr0l	equ	0xFE9
 13114                           wreg	equ	0xFE8
 13115                           indf1	equ	0xFE7
 13116                           postinc1	equ	0xFE6
 13117                           postdec1	equ	0xFE5
 13118                           fsr1h	equ	0xFE2
 13119                           fsr1l	equ	0xFE1
 13120                           indf2	equ	0xFDF
 13121                           postinc2	equ	0xFDE
 13122                           postdec2	equ	0xFDD
 13123                           plusw2	equ	0xFDB
 13124                           fsr2h	equ	0xFDA
 13125                           fsr2l	equ	0xFD9
 13126                           status	equ	0xFD8
 13127                           
 13128 ;; *************** function _USBCtrlTrfTxService *****************
 13129 ;; Defined at:
 13130 ;;		line 1789 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;		None
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;  byteToSend      1   29[BANK0 ] unsigned char 
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13139 ;; Tracked objects:
 13140 ;;		On entry : 0/0
 13141 ;;		On exit  : 0/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13148 ;;Total ram usage:        1 bytes
 13149 ;; Hardware stack levels used:    1
 13150 ;; Hardware stack levels required when called:   11
 13151 ;; This function calls:
 13152 ;;		Nothing
 13153 ;; This function is called by:
 13154 ;;		_USBCtrlEPAllowDataStage
 13155 ;;		_USBCtrlTrfInHandler
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           	psect	text53
 13160  0037A6                     __ptext53:
 13161                           	opt stack 0
 13162  0037A6                     _USBCtrlTrfTxService:
 13163                           	opt stack 11
 13164                           
 13165                           ;usb_device.c: 1791: uint8_t byteToSend;
 13166                           ;usb_device.c: 1795: byteToSend = 8;
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;incstack = 0
 13170  0037A6  0E08               	movlw	8
 13171  0037A8  0100               	movlb	0	; () banked
 13172  0037AA  6F7D               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 13176  0037AC  51B5               	movf	(_inPipes+5)& (0+255),w,b
 13177  0037AE  E110               	bnz	l12989
 13178  0037B0  0E08               	movlw	8
 13179  0037B2  5DB4               	subwf	(_inPipes+4)& (0+255),w,b
 13180  0037B4  B0D8               	btfsc	status,0,c
 13181  0037B6  D00C               	goto	l1700
 13182                           
 13183                           ; BSR set to: 0
 13184                           ;usb_device.c: 1797: {
 13185                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 13186  0037B8  C0B4  F07D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 13190  0037BC  51CD               	movf	_shortPacketStatus& (0+255),w,b
 13191  0037BE  A4D8               	btfss	status,2,c
 13192  0037C0  D002               	goto	l1698
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;usb_device.c: 1806: {
 13196                           ;usb_device.c: 1807: shortPacketStatus = 1;
 13197  0037C2  0E01               	movlw	1
 13198  0037C4  D004               	goto	L12
 13199  0037C6                     l1698:
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 13203                           
 13204                           ; BSR set to: 0
 13205  0037C6  05CD               	decf	_shortPacketStatus& (0+255),w,b
 13206  0037C8  A4D8               	btfss	status,2,c
 13207  0037CA  D002               	goto	l1700
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;usb_device.c: 1810: {
 13211                           ;usb_device.c: 1811: shortPacketStatus = 2;
 13212  0037CC  0E02               	movlw	2
 13213  0037CE                     L12:
 13214  0037CE  6FCD               	movwf	_shortPacketStatus& (0+255),b
 13215  0037D0                     l1700:
 13216  0037D0                     l12989:
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;usb_device.c: 1812: }
 13220                           ;usb_device.c: 1813: }
 13221                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 13222  0037D0  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13223  0037D2  5FB4               	subwf	(_inPipes+4)& (0+255),f,b
 13224  0037D4  0E00               	movlw	0
 13225  0037D6  5BB5               	subwfb	(_inPipes+5)& (0+255),f,b
 13226                           
 13227                           ; BSR set to: 0
 13228                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 13229  0037D8  EE20 F001          	lfsr	2,1
 13230  0037DC  51B6               	movf	_pBDTEntryIn& (0+255),w,b
 13231  0037DE  26D9               	addwf	fsr2l,f,c
 13232  0037E0  51B7               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13233  0037E2  22DA               	addwfc	fsr2h,f,c
 13234  0037E4  C07D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 13238  0037E8  0E38               	movlw	56
 13239  0037EA  0102               	movlb	2	; () banked
 13240  0037EC  6FD4               	movwf	_pDst& (0+255),b
 13241  0037EE  0E04               	movlw	4
 13242  0037F0  6FD5               	movwf	(_pDst+1)& (0+255),b
 13243                           
 13244                           ; BSR set to: 2
 13245                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 13246  0037F2  0100               	movlb	0	; () banked
 13247  0037F4  A1B3               	btfss	(_inPipes+3)& (0+255),0,b
 13248  0037F6  D01E               	goto	l1702
 13249  0037F8  D03E               	goto	l1706
 13250  0037FA                     
 13251                           ; BSR set to: 0
 13252                           ;usb_device.c: 1830: {
 13253                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 13254                           
 13255                           ; BSR set to: 0
 13256  0037FA  C0B0  FFF6         	movff	_inPipes,tblptrl
 13257  0037FE  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13258  003802  6AF8               	clrf	tblptru,c
 13259  003804  C2D4  FFD9         	movff	_pDst,fsr2l
 13260  003808  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13261  00380C  0E0E               	movlw	(high __ramtop+-1)
 13262  00380E  64F7               	cpfsgt	tblptrh,c
 13263  003810  D003               	bra	u11577
 13264  003812  0008               	tblrd		*
 13265  003814  50F5               	movf	tablat,w,c
 13266  003816  D005               	bra	u11570
 13267  003818                     u11577:
 13268  003818  CFF6 FFE9          	movff	tblptrl,fsr0l
 13269  00381C  CFF7 FFEA          	movff	tblptrh,fsr0h
 13270  003820  50EF               	movf	indf0,w,c
 13271  003822                     u11570:
 13272  003822  6EDF               	movwf	indf2,c
 13273  003824  0100               	movlb	0	; () banked
 13274  003826  4BB0               	infsnz	_inPipes& (0+255),f,b
 13275  003828  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13276                           
 13277                           ; BSR set to: 0
 13278  00382A  0102               	movlb	2	; () banked
 13279  00382C  4BD4               	infsnz	_pDst& (0+255),f,b
 13280  00382E  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13281                           
 13282                           ; BSR set to: 2
 13283                           ;usb_device.c: 1832: byteToSend--;
 13284  003830  0100               	movlb	0	; () banked
 13285  003832  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13286  003834                     l1702:
 13287                           
 13288                           ; BSR set to: 0
 13289                           
 13290                           ; BSR set to: 0
 13291  003834  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13292  003836  B4D8               	btfsc	status,2,c
 13293  003838  0012               	return	
 13294  00383A  D7DF               	goto	l1703
 13295  00383C                     
 13296                           ; BSR set to: 0
 13297                           ;usb_device.c: 1838: {
 13298                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 13299                           
 13300                           ; BSR set to: 0
 13301  00383C  C0B0  FFF6         	movff	_inPipes,tblptrl
 13302  003840  C0B1  FFF7         	movff	_inPipes+1,tblptrh
 13303  003844  6AF8               	clrf	tblptru,c
 13304  003846  C2D4  FFD9         	movff	_pDst,fsr2l
 13305  00384A  C2D5  FFDA         	movff	_pDst+1,fsr2h
 13306  00384E  0E0E               	movlw	(high __ramtop+-1)
 13307  003850  64F7               	cpfsgt	tblptrh,c
 13308  003852  D003               	bra	u11597
 13309  003854  0008               	tblrd		*
 13310  003856  50F5               	movf	tablat,w,c
 13311  003858  D005               	bra	u11590
 13312  00385A                     u11597:
 13313  00385A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13314  00385E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13315  003862  50EF               	movf	indf0,w,c
 13316  003864                     u11590:
 13317  003864  6EDF               	movwf	indf2,c
 13318  003866  0100               	movlb	0	; () banked
 13319  003868  4BB0               	infsnz	_inPipes& (0+255),f,b
 13320  00386A  2BB1               	incf	(_inPipes+1)& (0+255),f,b
 13321                           
 13322                           ; BSR set to: 0
 13323  00386C  0102               	movlb	2	; () banked
 13324  00386E  4BD4               	infsnz	_pDst& (0+255),f,b
 13325  003870  2BD5               	incf	(_pDst+1)& (0+255),f,b
 13326                           
 13327                           ; BSR set to: 2
 13328                           ;usb_device.c: 1840: byteToSend--;
 13329  003872  0100               	movlb	0	; () banked
 13330  003874  077D               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 13331  003876                     l1706:
 13332                           
 13333                           ; BSR set to: 0
 13334                           
 13335                           ; BSR set to: 0
 13336  003876  517D               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 13337  003878  B4D8               	btfsc	status,2,c
 13338  00387A  0012               	return	
 13339  00387C  D7DF               	goto	l1707
 13340  00387E                     __end_of_USBCtrlTrfTxService:
 13341                           	opt stack 0
 13342                           tosu	equ	0xFFF
 13343                           tosh	equ	0xFFE
 13344                           tosl	equ	0xFFD
 13345                           pclath	equ	0xFFA
 13346                           tblptru	equ	0xFF8
 13347                           tblptrh	equ	0xFF7
 13348                           tblptrl	equ	0xFF6
 13349                           tablat	equ	0xFF5
 13350                           prodh	equ	0xFF4
 13351                           prodl	equ	0xFF3
 13352                           intcon	equ	0xFF2
 13353                           intcon2	equ	0xFF1
 13354                           intcon3	equ	0xFF0
 13355                           indf0	equ	0xFEF
 13356                           postinc0	equ	0xFEE
 13357                           plusw0	equ	0xFEB
 13358                           fsr0h	equ	0xFEA
 13359                           fsr0l	equ	0xFE9
 13360                           wreg	equ	0xFE8
 13361                           indf1	equ	0xFE7
 13362                           postinc1	equ	0xFE6
 13363                           postdec1	equ	0xFE5
 13364                           fsr1h	equ	0xFE2
 13365                           fsr1l	equ	0xFE1
 13366                           indf2	equ	0xFDF
 13367                           postinc2	equ	0xFDE
 13368                           postdec2	equ	0xFDD
 13369                           plusw2	equ	0xFDB
 13370                           fsr2h	equ	0xFDA
 13371                           fsr2l	equ	0xFD9
 13372                           status	equ	0xFD8
 13373                           
 13374 ;; *************** function _CDCTxService *****************
 13375 ;; Defined at:
 13376 ;;		line 839 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;		None
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;  byte_to_send    1   37[BANK0 ] unsigned char 
 13381 ;;  i               1   36[BANK0 ] unsigned char 
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13394 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;Total ram usage:        2 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:   12
 13398 ;; This function calls:
 13399 ;;		_USBTransferOnePacket
 13400 ;; This function is called by:
 13401 ;;		_UsbDevice_MainTask
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405                           	psect	text54
 13406  002824                     __ptext54:
 13407                           	opt stack 0
 13408  002824                     _CDCTxService:
 13409                           	opt stack 15
 13410                           
 13411                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 13412                           ;usb_device_cdc.c: 842: uint8_t i;
 13413                           ;usb_device_cdc.c: 844: ;
 13414                           ;usb_device_cdc.c: 846: {};
 13415                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;incstack = 0
 13419  002824  0101               	movlb	1	; () banked
 13420  002826  51D1               	movf	_CDCDataInHandle& (0+255),w,b
 13421  002828  11D2               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 13422  00282A  B4D8               	btfsc	status,2,c
 13423  00282C  D006               	goto	l1952
 13424                           
 13425                           ; BSR set to: 1
 13426  00282E  C1D1  FFD9         	movff	_CDCDataInHandle,fsr2l
 13427  002832  C1D2  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 13428  002836  BEDF               	btfsc	indf2,7,c
 13429  002838  0012               	return	
 13430  00283A                     l1952:
 13431                           
 13432                           ; BSR set to: 1
 13433                           ;usb_device_cdc.c: 852: }
 13434                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 13435                           
 13436                           ; BSR set to: 1
 13437  00283A  0E03               	movlw	3
 13438  00283C  0100               	movlb	0	; () banked
 13439  00283E  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13440  002840  A4D8               	btfss	status,2,c
 13441  002842  D002               	goto	l1954
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 13445  002844  0E00               	movlw	0
 13446  002846  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13447  002848                     l1954:
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 13451  002848  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13452  00284A  B4D8               	btfsc	status,2,c
 13453  00284C  0012               	return	
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;usb_device_cdc.c: 869: }
 13457                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 13458                           
 13459                           ; BSR set to: 0
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;usb_device_cdc.c: 866: {
 13463                           ;usb_device_cdc.c: 867: ;
 13464                           ;usb_device_cdc.c: 868: return;
 13465  00284E  0E02               	movlw	2
 13466  002850  19C8               	xorwf	_cdc_trf_state& (0+255),w,b
 13467  002852  A4D8               	btfss	status,2,c
 13468  002854  D013               	goto	l1956
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;usb_device_cdc.c: 875: {
 13472                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 13473  002856  0E01               	movlw	1
 13474  002858  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13475  00285A  0E00               	movlw	0
 13476  00285C  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13477  00285E  0E00               	movlw	0
 13478  002860  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13479  002862  0E00               	movlw	0
 13480  002864  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 13481  002866  0E02               	movlw	2
 13482  002868  EC05  F021         	call	_USBTransferOnePacket
 13483  00286C  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13484  002870  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13485                           
 13486                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 13487  002874  0E03               	movlw	3
 13488  002876  0100               	movlb	0	; () banked
 13489  002878  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13490                           
 13491                           ;usb_device_cdc.c: 879: }
 13492  00287A  0012               	return	
 13493  00287C                     l1956:
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 13497                           
 13498                           ; BSR set to: 0
 13499  00287C  05C8               	decf	_cdc_trf_state& (0+255),w,b
 13500  00287E  A4D8               	btfss	status,2,c
 13501  002880  0012               	return	
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;usb_device_cdc.c: 881: {
 13505                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 13506  002882  0E40               	movlw	64
 13507  002884  65C7               	cpfsgt	_cdc_tx_len& (0+255),b
 13508  002886  D003               	goto	l1959
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 13512  002888  0E40               	movlw	64
 13513  00288A  6F85               	movwf	CDCTxService@byte_to_send& (0+255),b
 13514  00288C  D002               	goto	l1960
 13515  00288E                     l1959:
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;usb_device_cdc.c: 887: else
 13519                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 13520  00288E  C0C7  F085         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 13521  002892                     l1960:
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 13525                           
 13526                           ; BSR set to: 0
 13527  002892  5185               	movf	CDCTxService@byte_to_send& (0+255),w,b
 13528  002894  0800               	sublw	0
 13529  002896  25C7               	addwf	_cdc_tx_len& (0+255),w,b
 13530  002898  6FC7               	movwf	_cdc_tx_len& (0+255),b
 13531                           
 13532                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 13533  00289A  0EB6               	movlw	low _cdc_data_tx
 13534  00289C  0102               	movlb	2	; () banked
 13535  00289E  6FC8               	movwf	_pCDCDst& (0+255),b
 13536  0028A0  0E07               	movlw	high _cdc_data_tx
 13537  0028A2  6FC9               	movwf	(_pCDCDst+1)& (0+255),b
 13538                           
 13539                           ; BSR set to: 2
 13540                           ;usb_device_cdc.c: 897: i = byte_to_send;
 13541  0028A4  C085  F084         	movff	CDCTxService@byte_to_send,CDCTxService@i
 13542                           
 13543                           ; BSR set to: 2
 13544                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 13545  0028A8  0101               	movlb	1	; () banked
 13546  0028AA  51DD               	movf	_cdc_mem_type& (0+255),w,b
 13547  0028AC  B4D8               	btfsc	status,2,c
 13548  0028AE  D01D               	goto	l1962
 13549  0028B0  D03D               	goto	l1966
 13550  0028B2                     
 13551                           ;usb_device_cdc.c: 901: {
 13552                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 13553                           
 13554                           ; BSR set to: 1
 13555  0028B2  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13556  0028B6  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13557  0028BA  6AF8               	clrf	tblptru,c
 13558  0028BC  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13559  0028C0  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13560  0028C4  0E0E               	movlw	(high __ramtop+-1)
 13561  0028C6  64F7               	cpfsgt	tblptrh,c
 13562  0028C8  D003               	bra	u15707
 13563  0028CA  0008               	tblrd		*
 13564  0028CC  50F5               	movf	tablat,w,c
 13565  0028CE  D005               	bra	u15700
 13566  0028D0                     u15707:
 13567  0028D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 13568  0028D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 13569  0028D8  50EF               	movf	indf0,w,c
 13570  0028DA                     u15700:
 13571  0028DA  6EDF               	movwf	indf2,c
 13572                           
 13573                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 13574  0028DC  0102               	movlb	2	; () banked
 13575  0028DE  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13576  0028E0  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13577                           
 13578                           ; BSR set to: 2
 13579                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 13580  0028E2  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13581  0028E4  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13582                           
 13583                           ; BSR set to: 2
 13584                           ;usb_device_cdc.c: 905: i--;
 13585  0028E6  0100               	movlb	0	; () banked
 13586  0028E8  0784               	decf	CDCTxService@i& (0+255),f,b
 13587  0028EA                     l1962:
 13588                           
 13589                           ; BSR set to: 0
 13590  0028EA  0100               	movlb	0	; () banked
 13591  0028EC  5184               	movf	CDCTxService@i& (0+255),w,b
 13592  0028EE  B4D8               	btfsc	status,2,c
 13593  0028F0  D021               	goto	u15730
 13594  0028F2  D7DF               	goto	l1963
 13595  0028F4                     
 13596                           ; BSR set to: 0
 13597                           ;usb_device_cdc.c: 911: {
 13598                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 13599                           
 13600                           ; BSR set to: 0
 13601  0028F4  C2CB  FFF6         	movff	_pCDCSrc,tblptrl
 13602  0028F8  C2CC  FFF7         	movff	_pCDCSrc+1,tblptrh
 13603  0028FC  6AF8               	clrf	tblptru,c
 13604  0028FE  C2C8  FFD9         	movff	_pCDCDst,fsr2l
 13605  002902  C2C9  FFDA         	movff	_pCDCDst+1,fsr2h
 13606  002906  0E0E               	movlw	(high __ramtop+-1)
 13607  002908  64F7               	cpfsgt	tblptrh,c
 13608  00290A  D003               	bra	u15727
 13609  00290C  0008               	tblrd		*
 13610  00290E  50F5               	movf	tablat,w,c
 13611  002910  D005               	bra	u15720
 13612  002912                     u15727:
 13613  002912  CFF6 FFE9          	movff	tblptrl,fsr0l
 13614  002916  CFF7 FFEA          	movff	tblptrh,fsr0h
 13615  00291A  50EF               	movf	indf0,w,c
 13616  00291C                     u15720:
 13617  00291C  6EDF               	movwf	indf2,c
 13618                           
 13619                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 13620  00291E  0102               	movlb	2	; () banked
 13621  002920  4BC8               	infsnz	_pCDCDst& (0+255),f,b
 13622  002922  2BC9               	incf	(_pCDCDst+1)& (0+255),f,b
 13623                           
 13624                           ; BSR set to: 2
 13625                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 13626  002924  4BCB               	infsnz	_pCDCSrc& (0+255),f,b
 13627  002926  2BCC               	incf	(_pCDCSrc+1)& (0+255),f,b
 13628                           
 13629                           ; BSR set to: 2
 13630                           ;usb_device_cdc.c: 915: i--;
 13631  002928  0100               	movlb	0	; () banked
 13632  00292A  0784               	decf	CDCTxService@i& (0+255),f,b
 13633  00292C                     l1966:
 13634                           
 13635                           ; BSR set to: 0
 13636  00292C  0100               	movlb	0	; () banked
 13637  00292E  5184               	movf	CDCTxService@i& (0+255),w,b
 13638  002930  A4D8               	btfss	status,2,c
 13639  002932  D7E0               	goto	l1967
 13640  002934                     u15730:
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;usb_device_cdc.c: 916: }
 13644                           ;usb_device_cdc.c: 917: }
 13645                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 13646                           
 13647                           ; BSR set to: 0
 13648                           
 13649                           ; BSR set to: 0
 13650  002934  51C7               	movf	_cdc_tx_len& (0+255),w,b
 13651  002936  A4D8               	btfss	status,2,c
 13652  002938  D008               	goto	l1971
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;usb_device_cdc.c: 924: {
 13656                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 13657  00293A  0E40               	movlw	64
 13658  00293C  1985               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 13659  00293E  A4D8               	btfss	status,2,c
 13660  002940  D002               	goto	l1970
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 13664  002942  0E02               	movlw	2
 13665  002944  D001               	goto	L13
 13666  002946                     l1970:
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;usb_device_cdc.c: 927: else
 13670                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 13671                           
 13672                           ; BSR set to: 0
 13673  002946  0E03               	movlw	3
 13674  002948                     L13:
 13675  002948  6FC8               	movwf	_cdc_trf_state& (0+255),b
 13676  00294A                     l1971:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;usb_device_cdc.c: 929: }
 13680                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 13681                           
 13682                           ; BSR set to: 0
 13683                           
 13684                           ; BSR set to: 0
 13685  00294A  0E01               	movlw	1
 13686  00294C  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 13687  00294E  0EB6               	movlw	low _cdc_data_tx
 13688  002950  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 13689  002952  0E07               	movlw	high _cdc_data_tx
 13690  002954  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 13691  002956  C085  F080         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 13692  00295A  0E02               	movlw	2
 13693  00295C  EC05  F021         	call	_USBTransferOnePacket
 13694  002960  C07D  F1D1         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 13695  002964  C07E  F1D2         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 13696  002968  0012               	return	
 13697  00296A                     __end_of_CDCTxService:
 13698                           	opt stack 0
 13699                           tosu	equ	0xFFF
 13700                           tosh	equ	0xFFE
 13701                           tosl	equ	0xFFD
 13702                           pclath	equ	0xFFA
 13703                           tblptru	equ	0xFF8
 13704                           tblptrh	equ	0xFF7
 13705                           tblptrl	equ	0xFF6
 13706                           tablat	equ	0xFF5
 13707                           prodh	equ	0xFF4
 13708                           prodl	equ	0xFF3
 13709                           intcon	equ	0xFF2
 13710                           intcon2	equ	0xFF1
 13711                           intcon3	equ	0xFF0
 13712                           indf0	equ	0xFEF
 13713                           postinc0	equ	0xFEE
 13714                           plusw0	equ	0xFEB
 13715                           fsr0h	equ	0xFEA
 13716                           fsr0l	equ	0xFE9
 13717                           wreg	equ	0xFE8
 13718                           indf1	equ	0xFE7
 13719                           postinc1	equ	0xFE6
 13720                           postdec1	equ	0xFE5
 13721                           fsr1h	equ	0xFE2
 13722                           fsr1l	equ	0xFE1
 13723                           indf2	equ	0xFDF
 13724                           postinc2	equ	0xFDE
 13725                           postdec2	equ	0xFDD
 13726                           plusw2	equ	0xFDB
 13727                           fsr2h	equ	0xFDA
 13728                           fsr2l	equ	0xFD9
 13729                           status	equ	0xFD8
 13730                           
 13731 ;; *************** function _Term_MainSm *****************
 13732 ;; Defined at:
 13733 ;;		line 707 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;		None
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;  FwkBuildStr     4   58[BANK1 ] unsigned char [4]
 13738 ;;  FwkMinorStr     4   54[BANK1 ] unsigned char [4]
 13739 ;;  FwkMajorStr     4   50[BANK1 ] unsigned char [4]
 13740 ;;  FwkBuildYear    4    0        unsigned char [4]
 13741 ;;  FwkBuildMont    4    0        unsigned char [4]
 13742 ;;  FwkBuildDayS    4    0        unsigned char [4]
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  1    wreg      void 
 13745 ;; Registers used:
 13746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13753 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13755 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13756 ;;Total ram usage:       12 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; Hardware stack levels required when called:   16
 13759 ;; This function calls:
 13760 ;;		_OsTmr_GetTimerStatus
 13761 ;;		_OsTmr_StartTimer
 13762 ;;		_Terminal
 13763 ;;		_memset
 13764 ;;		_putUSBUSART
 13765 ;;		_sprintf
 13766 ;;		_strcat
 13767 ;;		_strcpy
 13768 ;;		_strlen
 13769 ;;		_utoa
 13770 ;; This function is called by:
 13771 ;;		_Term_MainTask
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           	psect	text55
 13776  0010B6                     __ptext55:
 13777                           	opt stack 0
 13778  0010B6                     _Term_MainSm:
 13779                           	opt stack 11
 13780                           
 13781                           ;term.c: 709: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 13782                           ;term.c: 710: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 13783                           ;term.c: 711: static UINT8 Data[50];
 13784                           ;term.c: 712: UINT8 FwkMajorStr[4];
 13785                           ;term.c: 713: UINT8 FwkMinorStr[4];
 13786                           ;term.c: 714: UINT8 FwkBuildStr[4];
 13787                           ;term.c: 715: UINT8 FwkBuildDayStr[4];
 13788                           ;term.c: 716: UINT8 FwkBuildMonthStr[4];
 13789                           ;term.c: 717: UINT8 FwkBuildYearStr[4];
 13790                           ;term.c: 719: switch (TermMainSmState)
 13791                           
 13792                           ;incstack = 0
 13793  0010B6  D133               	goto	l2464
 13794  0010B8                     
 13795                           ;term.c: 723: OsTmr_StartTimer(&TermDelay,2000);
 13796  0010B8  0ED4               	movlw	low Term_MainSm@TermDelay
 13797  0010BA  0100               	movlb	0	; () banked
 13798  0010BC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 13799  0010BE  0E03               	movlw	high Term_MainSm@TermDelay
 13800  0010C0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 13801  0010C2  0ED0               	movlw	208
 13802  0010C4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 13803  0010C6  0E07               	movlw	7
 13804  0010C8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 13805  0010CA  0E00               	movlw	0
 13806  0010CC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 13807  0010CE  0E00               	movlw	0
 13808  0010D0  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 13809  0010D2  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 13810                           
 13811                           ;term.c: 725: TermMainSmState = Term_InitDelay;
 13812  0010D6  0E01               	movlw	1
 13813  0010D8  0102               	movlb	2	; () banked
 13814  0010DA  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13815                           
 13816                           ;term.c: 726: break;
 13817  0010DC  0012               	return	
 13818  0010DE                     
 13819                           ; BSR set to: 2
 13820                           ;term.c: 730: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 13821                           
 13822                           ; BSR set to: 2
 13823  0010DE  0ED4               	movlw	low Term_MainSm@TermDelay
 13824  0010E0  0100               	movlb	0	; () banked
 13825  0010E2  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 13826  0010E4  0E03               	movlw	high Term_MainSm@TermDelay
 13827  0010E6  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 13828  0010E8  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 13829  0010EC  06E8               	decf	wreg,f,c
 13830  0010EE  A4D8               	btfss	status,2,c
 13831  0010F0  0012               	return	
 13832                           
 13833                           ;term.c: 731: {
 13834                           ;term.c: 733: TermMainSmState = Term_InitState;
 13835  0010F2  0E02               	movlw	2
 13836  0010F4  0102               	movlb	2	; () banked
 13837  0010F6  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13838                           
 13839                           ; BSR set to: 2
 13840                           ;term.c: 734: }
 13841                           ;term.c: 735: break;
 13842  0010F8  0012               	return	
 13843  0010FA                     
 13844                           ; BSR set to: 2
 13845                           ;term.c: 739: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 13846                           
 13847                           ; BSR set to: 2
 13848  0010FA  0E1F               	movlw	31
 13849  0010FC  0100               	movlb	0	; () banked
 13850  0010FE  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 13851  001100  0012               	return	
 13852                           
 13853                           ; BSR set to: 0
 13854  001102  B265               	btfsc	3941,1,c	;volatile
 13855  001104  0012               	return	
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;term.c: 743: else
 13859                           ;term.c: 744: {
 13860                           ;term.c: 746: TermMainSmState = Term_WelcomeState;
 13861                           
 13862                           ; BSR set to: 0
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;term.c: 740: {
 13866                           ;term.c: 742: }
 13867  001106  0E03               	movlw	3
 13868  001108  0102               	movlb	2	; () banked
 13869  00110A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13870                           
 13871                           ; BSR set to: 2
 13872                           ;term.c: 747: }
 13873                           ;term.c: 748: break;
 13874  00110C  0012               	return	
 13875  00110E                     
 13876                           ; BSR set to: 2
 13877                           ;term.c: 752: if((cdc_trf_state == 0))
 13878                           
 13879                           ; BSR set to: 2
 13880  00110E  0100               	movlb	0	; () banked
 13881  001110  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13882  001112  A4D8               	btfss	status,2,c
 13883  001114  0012               	return	
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;term.c: 753: {
 13887                           ;term.c: 755: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 13888  001116  0E22               	movlw	low _Welcome
 13889  001118  6F83               	movwf	putUSBUSART@data& (0+255),b
 13890  00111A  0EFD               	movlw	high _Welcome
 13891  00111C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13892  00111E  0E88               	movlw	136
 13893  001120  6F85               	movwf	putUSBUSART@length& (0+255),b
 13894  001122  ECD0  F033         	call	_putUSBUSART	;wreg free
 13895                           
 13896                           ;term.c: 757: TermMainSmState = Term_InstDescState;
 13897  001126  0E04               	movlw	4
 13898  001128  0102               	movlb	2	; () banked
 13899  00112A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13900                           
 13901                           ; BSR set to: 2
 13902                           ;term.c: 758: }
 13903                           ;term.c: 759: break;
 13904  00112C  0012               	return	
 13905  00112E                     
 13906                           ; BSR set to: 2
 13907                           ;term.c: 763: if((cdc_trf_state == 0))
 13908                           
 13909                           ; BSR set to: 2
 13910  00112E  0100               	movlb	0	; () banked
 13911  001130  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13912  001132  A4D8               	btfss	status,2,c
 13913  001134  0012               	return	
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;term.c: 764: {
 13917                           ;term.c: 766: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 13918  001136  0E32               	movlw	low _MsgFormat
 13919  001138  6F83               	movwf	putUSBUSART@data& (0+255),b
 13920  00113A  0EFC               	movlw	high _MsgFormat
 13921  00113C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 13922  00113E  0EEF               	movlw	239
 13923  001140  6F85               	movwf	putUSBUSART@length& (0+255),b
 13924  001142  ECD0  F033         	call	_putUSBUSART	;wreg free
 13925                           
 13926                           ;term.c: 768: TermMainSmState = Term_FwkVerState;
 13927  001146  0E05               	movlw	5
 13928  001148  0102               	movlb	2	; () banked
 13929  00114A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 13930                           
 13931                           ; BSR set to: 2
 13932                           ;term.c: 769: }
 13933                           ;term.c: 770: break;
 13934  00114C  0012               	return	
 13935  00114E                     
 13936                           ; BSR set to: 2
 13937                           ;term.c: 774: if((cdc_trf_state == 0))
 13938                           
 13939                           ; BSR set to: 2
 13940  00114E  0100               	movlb	0	; () banked
 13941  001150  51C8               	movf	_cdc_trf_state& (0+255),w,b
 13942  001152  A4D8               	btfss	status,2,c
 13943  001154  0012               	return	
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;term.c: 775: {
 13947                           ;term.c: 777: memset(Data,0,50);
 13948  001156  0E61               	movlw	low Term_MainSm@Data
 13949  001158  6F7D               	movwf	memset@p1& (0+255),b
 13950  00115A  0E04               	movlw	high Term_MainSm@Data
 13951  00115C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 13952  00115E  0E00               	movlw	0
 13953  001160  6F80               	movwf	(memset@c+1)& (0+255),b
 13954  001162  0E00               	movlw	0
 13955  001164  6F7F               	movwf	memset@c& (0+255),b
 13956  001166  0E00               	movlw	0
 13957  001168  6F82               	movwf	(memset@n+1)& (0+255),b
 13958  00116A  0E32               	movlw	50
 13959  00116C  6F81               	movwf	memset@n& (0+255),b
 13960  00116E  EC78  F032         	call	_memset	;wreg free
 13961                           
 13962                           ;term.c: 779: utoa(FwkMajorStr,1,10);
 13963  001172  0E32               	movlw	low Term_MainSm@FwkMajorStr
 13964  001174  0100               	movlb	0	; () banked
 13965  001176  6F8A               	movwf	utoa@buf& (0+255),b
 13966  001178  0E01               	movlw	high Term_MainSm@FwkMajorStr
 13967  00117A  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13968  00117C  0E00               	movlw	0
 13969  00117E  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13970  001180  0E01               	movlw	1
 13971  001182  6F8C               	movwf	utoa@val& (0+255),b
 13972  001184  0E00               	movlw	0
 13973  001186  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13974  001188  0E0A               	movlw	10
 13975  00118A  6F8E               	movwf	utoa@base& (0+255),b
 13976  00118C  ECC3  F022         	call	_utoa	;wreg free
 13977                           
 13978                           ;term.c: 780: utoa(FwkMinorStr,2,10);
 13979  001190  0E36               	movlw	low Term_MainSm@FwkMinorStr
 13980  001192  0100               	movlb	0	; () banked
 13981  001194  6F8A               	movwf	utoa@buf& (0+255),b
 13982  001196  0E01               	movlw	high Term_MainSm@FwkMinorStr
 13983  001198  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 13984  00119A  0E00               	movlw	0
 13985  00119C  6F8D               	movwf	(utoa@val+1)& (0+255),b
 13986  00119E  0E02               	movlw	2
 13987  0011A0  6F8C               	movwf	utoa@val& (0+255),b
 13988  0011A2  0E00               	movlw	0
 13989  0011A4  6F8F               	movwf	(utoa@base+1)& (0+255),b
 13990  0011A6  0E0A               	movlw	10
 13991  0011A8  6F8E               	movwf	utoa@base& (0+255),b
 13992  0011AA  ECC3  F022         	call	_utoa	;wreg free
 13993                           
 13994                           ;term.c: 781: utoa(FwkBuildStr,0,10);
 13995  0011AE  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 13996  0011B0  0100               	movlb	0	; () banked
 13997  0011B2  6F8A               	movwf	utoa@buf& (0+255),b
 13998  0011B4  0E01               	movlw	high Term_MainSm@FwkBuildStr
 13999  0011B6  6F8B               	movwf	(utoa@buf+1)& (0+255),b
 14000  0011B8  0E00               	movlw	0
 14001  0011BA  6F8D               	movwf	(utoa@val+1)& (0+255),b
 14002  0011BC  0E00               	movlw	0
 14003  0011BE  6F8C               	movwf	utoa@val& (0+255),b
 14004  0011C0  0E00               	movlw	0
 14005  0011C2  6F8F               	movwf	(utoa@base+1)& (0+255),b
 14006  0011C4  0E0A               	movlw	10
 14007  0011C6  6F8E               	movwf	utoa@base& (0+255),b
 14008  0011C8  ECC3  F022         	call	_utoa	;wreg free
 14009                           
 14010                           ;term.c: 782: strcpy(Data,"Framework Version: ");
 14011  0011CC  0E61               	movlw	low Term_MainSm@Data
 14012  0011CE  0100               	movlb	0	; () banked
 14013  0011D0  6F7D               	movwf	strcpy@to& (0+255),b
 14014  0011D2  0E04               	movlw	high Term_MainSm@Data
 14015  0011D4  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 14016  0011D6  0ED2               	movlw	low STR_23
 14017  0011D8  6F7F               	movwf	strcpy@from& (0+255),b
 14018  0011DA  0EFE               	movlw	high STR_23
 14019  0011DC  6F80               	movwf	(strcpy@from+1)& (0+255),b
 14020  0011DE  EC47  F032         	call	_strcpy	;wreg free
 14021                           
 14022                           ;term.c: 783: strcat(Data,FwkMajorStr);
 14023  0011E2  0E61               	movlw	low Term_MainSm@Data
 14024  0011E4  0100               	movlb	0	; () banked
 14025  0011E6  6F7D               	movwf	strcat@to& (0+255),b
 14026  0011E8  0E04               	movlw	high Term_MainSm@Data
 14027  0011EA  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14028  0011EC  0E32               	movlw	low Term_MainSm@FwkMajorStr
 14029  0011EE  6F7F               	movwf	strcat@from& (0+255),b
 14030  0011F0  0E01               	movlw	high Term_MainSm@FwkMajorStr
 14031  0011F2  6F80               	movwf	(strcat@from+1)& (0+255),b
 14032  0011F4  EC60  F02C         	call	_strcat	;wreg free
 14033                           
 14034                           ;term.c: 784: strcat(Data,".");
 14035  0011F8  0E61               	movlw	low Term_MainSm@Data
 14036  0011FA  0100               	movlb	0	; () banked
 14037  0011FC  6F7D               	movwf	strcat@to& (0+255),b
 14038  0011FE  0E04               	movlw	high Term_MainSm@Data
 14039  001200  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14040  001202  0EF5               	movlw	low STR_24
 14041  001204  6F7F               	movwf	strcat@from& (0+255),b
 14042  001206  0EFF               	movlw	high STR_24
 14043  001208  6F80               	movwf	(strcat@from+1)& (0+255),b
 14044  00120A  EC60  F02C         	call	_strcat	;wreg free
 14045                           
 14046                           ;term.c: 785: strcat(Data,FwkMinorStr);
 14047  00120E  0E61               	movlw	low Term_MainSm@Data
 14048  001210  0100               	movlb	0	; () banked
 14049  001212  6F7D               	movwf	strcat@to& (0+255),b
 14050  001214  0E04               	movlw	high Term_MainSm@Data
 14051  001216  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14052  001218  0E36               	movlw	low Term_MainSm@FwkMinorStr
 14053  00121A  6F7F               	movwf	strcat@from& (0+255),b
 14054  00121C  0E01               	movlw	high Term_MainSm@FwkMinorStr
 14055  00121E  6F80               	movwf	(strcat@from+1)& (0+255),b
 14056  001220  EC60  F02C         	call	_strcat	;wreg free
 14057                           
 14058                           ;term.c: 786: strcat(Data,".");
 14059  001224  0E61               	movlw	low Term_MainSm@Data
 14060  001226  0100               	movlb	0	; () banked
 14061  001228  6F7D               	movwf	strcat@to& (0+255),b
 14062  00122A  0E04               	movlw	high Term_MainSm@Data
 14063  00122C  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14064  00122E  0EF5               	movlw	low STR_24
 14065  001230  6F7F               	movwf	strcat@from& (0+255),b
 14066  001232  0EFF               	movlw	high STR_24
 14067  001234  6F80               	movwf	(strcat@from+1)& (0+255),b
 14068  001236  EC60  F02C         	call	_strcat	;wreg free
 14069                           
 14070                           ;term.c: 787: strcat(Data,FwkBuildStr);
 14071  00123A  0E61               	movlw	low Term_MainSm@Data
 14072  00123C  0100               	movlb	0	; () banked
 14073  00123E  6F7D               	movwf	strcat@to& (0+255),b
 14074  001240  0E04               	movlw	high Term_MainSm@Data
 14075  001242  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14076  001244  0E3A               	movlw	low Term_MainSm@FwkBuildStr
 14077  001246  6F7F               	movwf	strcat@from& (0+255),b
 14078  001248  0E01               	movlw	high Term_MainSm@FwkBuildStr
 14079  00124A  6F80               	movwf	(strcat@from+1)& (0+255),b
 14080  00124C  EC60  F02C         	call	_strcat	;wreg free
 14081                           
 14082                           ;term.c: 788: strcat(Data,"\r\n");
 14083  001250  0E61               	movlw	low Term_MainSm@Data
 14084  001252  0100               	movlb	0	; () banked
 14085  001254  6F7D               	movwf	strcat@to& (0+255),b
 14086  001256  0E04               	movlw	high Term_MainSm@Data
 14087  001258  6F7E               	movwf	(strcat@to+1)& (0+255),b
 14088  00125A  0E86               	movlw	low (STR_21+39)
 14089  00125C  6F7F               	movwf	strcat@from& (0+255),b
 14090  00125E  0EFE               	movlw	high (STR_21+39)
 14091  001260  6F80               	movwf	(strcat@from+1)& (0+255),b
 14092  001262  EC60  F02C         	call	_strcat	;wreg free
 14093                           
 14094                           ;term.c: 790: putUSBUSART((void*)Data,strlen(Data));
 14095  001266  0E61               	movlw	low Term_MainSm@Data
 14096  001268  0100               	movlb	0	; () banked
 14097  00126A  6F83               	movwf	putUSBUSART@data& (0+255),b
 14098  00126C  0E04               	movlw	high Term_MainSm@Data
 14099  00126E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14100  001270  0E61               	movlw	low Term_MainSm@Data
 14101  001272  6F7D               	movwf	strlen@s& (0+255),b
 14102  001274  0E04               	movlw	high Term_MainSm@Data
 14103  001276  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14104  001278  ECF0  F030         	call	_strlen	;wreg free
 14105  00127C  0100               	movlb	0	; () banked
 14106  00127E  517D               	movf	?_strlen& (0+255),w,b
 14107  001280  6F85               	movwf	putUSBUSART@length& (0+255),b
 14108  001282  ECD0  F033         	call	_putUSBUSART	;wreg free
 14109                           
 14110                           ;term.c: 792: TermMainSmState = Term_FwkBuildDateState;
 14111  001286  0E06               	movlw	6
 14112  001288  0102               	movlb	2	; () banked
 14113  00128A  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14114                           
 14115                           ; BSR set to: 2
 14116                           ;term.c: 793: }
 14117                           ;term.c: 794: break;
 14118  00128C  0012               	return	
 14119  00128E                     
 14120                           ; BSR set to: 2
 14121                           ;term.c: 798: if((cdc_trf_state == 0))
 14122                           
 14123                           ; BSR set to: 2
 14124  00128E  0100               	movlb	0	; () banked
 14125  001290  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14126  001292  A4D8               	btfss	status,2,c
 14127  001294  0012               	return	
 14128                           
 14129                           ; BSR set to: 0
 14130                           ;term.c: 799: {
 14131                           ;term.c: 801: memset(Data,0,50);
 14132  001296  0E61               	movlw	low Term_MainSm@Data
 14133  001298  6F7D               	movwf	memset@p1& (0+255),b
 14134  00129A  0E04               	movlw	high Term_MainSm@Data
 14135  00129C  6F7E               	movwf	(memset@p1+1)& (0+255),b
 14136  00129E  0E00               	movlw	0
 14137  0012A0  6F80               	movwf	(memset@c+1)& (0+255),b
 14138  0012A2  0E00               	movlw	0
 14139  0012A4  6F7F               	movwf	memset@c& (0+255),b
 14140  0012A6  0E00               	movlw	0
 14141  0012A8  6F82               	movwf	(memset@n+1)& (0+255),b
 14142  0012AA  0E32               	movlw	50
 14143  0012AC  6F81               	movwf	memset@n& (0+255),b
 14144  0012AE  EC78  F032         	call	_memset	;wreg free
 14145                           
 14146                           ;term.c: 803: sprintf(Data,"Build Date: %s\r\n","Mar 27 2022");
 14147  0012B2  0E61               	movlw	low Term_MainSm@Data
 14148  0012B4  0100               	movlb	0	; () banked
 14149  0012B6  6F7D               	movwf	sprintf@sp& (0+255),b
 14150  0012B8  0E04               	movlw	high Term_MainSm@Data
 14151  0012BA  6F7E               	movwf	(sprintf@sp+1)& (0+255),b
 14152  0012BC  0E0D               	movlw	low STR_27
 14153  0012BE  6F7F               	movwf	sprintf@f& (0+255),b
 14154  0012C0  0EFF               	movlw	high STR_27
 14155  0012C2  6F80               	movwf	(sprintf@f+1)& (0+255),b
 14156  0012C4  0EB6               	movlw	low STR_28
 14157  0012C6  6F81               	movwf	(?_sprintf+4)& (0+255),b
 14158  0012C8  0EFF               	movlw	high STR_28
 14159  0012CA  6F82               	movwf	(?_sprintf+5)& (0+255),b
 14160  0012CC  EC7E  F01D         	call	_sprintf	;wreg free
 14161                           
 14162                           ;term.c: 805: putUSBUSART((void*)Data,strlen(Data));
 14163  0012D0  0E61               	movlw	low Term_MainSm@Data
 14164  0012D2  0100               	movlb	0	; () banked
 14165  0012D4  6F83               	movwf	putUSBUSART@data& (0+255),b
 14166  0012D6  0E04               	movlw	high Term_MainSm@Data
 14167  0012D8  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14168  0012DA  0E61               	movlw	low Term_MainSm@Data
 14169  0012DC  6F7D               	movwf	strlen@s& (0+255),b
 14170  0012DE  0E04               	movlw	high Term_MainSm@Data
 14171  0012E0  6F7E               	movwf	(strlen@s+1)& (0+255),b
 14172  0012E2  ECF0  F030         	call	_strlen	;wreg free
 14173  0012E6  0100               	movlb	0	; () banked
 14174  0012E8  517D               	movf	?_strlen& (0+255),w,b
 14175  0012EA  6F85               	movwf	putUSBUSART@length& (0+255),b
 14176  0012EC  ECD0  F033         	call	_putUSBUSART	;wreg free
 14177                           
 14178                           ;term.c: 807: TermMainSmState = Term_SysInitState;
 14179  0012F0  0E07               	movlw	7
 14180  0012F2  0102               	movlb	2	; () banked
 14181  0012F4  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14182                           
 14183                           ; BSR set to: 2
 14184                           ;term.c: 808: }
 14185                           ;term.c: 809: break;
 14186  0012F6  0012               	return	
 14187  0012F8                     
 14188                           ; BSR set to: 2
 14189                           ;term.c: 813: if((cdc_trf_state == 0))
 14190                           
 14191                           ; BSR set to: 2
 14192  0012F8  0100               	movlb	0	; () banked
 14193  0012FA  51C8               	movf	_cdc_trf_state& (0+255),w,b
 14194  0012FC  A4D8               	btfss	status,2,c
 14195  0012FE  0012               	return	
 14196                           
 14197                           ; BSR set to: 0
 14198                           ;term.c: 814: {
 14199                           ;term.c: 816: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 14200  001300  0E32               	movlw	low _MsgReady
 14201  001302  6F83               	movwf	putUSBUSART@data& (0+255),b
 14202  001304  0EFE               	movlw	high _MsgReady
 14203  001306  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 14204  001308  0E16               	movlw	22
 14205  00130A  6F85               	movwf	putUSBUSART@length& (0+255),b
 14206  00130C  ECD0  F033         	call	_putUSBUSART	;wreg free
 14207                           
 14208                           ;term.c: 818: TermMainSmState = Term_FinalState;
 14209  001310  0E08               	movlw	8
 14210  001312  0102               	movlb	2	; () banked
 14211  001314  6FEC               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 14212                           
 14213                           ; BSR set to: 2
 14214                           ;term.c: 819: }
 14215                           ;term.c: 820: break;
 14216  001316  0012               	return	
 14217  001318                     
 14218                           ; BSR set to: 2
 14219                           ;term.c: 824: Terminal();
 14220                           
 14221                           ; BSR set to: 2
 14222  001318  EC68  F000         	call	_Terminal	;wreg free
 14223                           
 14224                           ;term.c: 829: }
 14225                           
 14226                           ;term.c: 828: break;
 14227                           
 14228                           ;term.c: 827: default:
 14229                           
 14230                           ;term.c: 825: break;
 14231  00131C  0012               	return	
 14232  00131E                     l2464:
 14233  00131E  0102               	movlb	2	; () banked
 14234  001320  51EC               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 14235                           
 14236                           ; Switch size 1, requested type "space"
 14237                           ; Number of cases is 9, Range of values is 0 to 8
 14238                           ; switch strategies available:
 14239                           ; Name         Instructions Cycles
 14240                           ; simple_byte           28    15 (average)
 14241                           ;	Chosen strategy is simple_byte
 14242  001322  0A00               	xorlw	0	; case 0
 14243  001324  B4D8               	btfsc	status,2,c
 14244  001326  D6C8               	goto	l2465
 14245  001328  0A01               	xorlw	1	; case 1
 14246  00132A  B4D8               	btfsc	status,2,c
 14247  00132C  D6D8               	goto	l2467
 14248  00132E  0A03               	xorlw	3	; case 2
 14249  001330  B4D8               	btfsc	status,2,c
 14250  001332  D6E3               	goto	l2469
 14251  001334  0A01               	xorlw	1	; case 3
 14252  001336  B4D8               	btfsc	status,2,c
 14253  001338  D6EA               	goto	l2474
 14254  00133A  0A07               	xorlw	7	; case 4
 14255  00133C  B4D8               	btfsc	status,2,c
 14256  00133E  D6F7               	goto	l2476
 14257  001340  0A01               	xorlw	1	; case 5
 14258  001342  B4D8               	btfsc	status,2,c
 14259  001344  D704               	goto	l2478
 14260  001346  0A03               	xorlw	3	; case 6
 14261  001348  B4D8               	btfsc	status,2,c
 14262  00134A  D7A1               	goto	l2480
 14263  00134C  0A01               	xorlw	1	; case 7
 14264  00134E  B4D8               	btfsc	status,2,c
 14265  001350  D7D3               	goto	l2482
 14266  001352  0A0F               	xorlw	15	; case 8
 14267  001354  A4D8               	btfss	status,2,c
 14268  001356  0012               	return	
 14269  001358  D7DF               	goto	l2484
 14270  00135A                     __end_of_Term_MainSm:
 14271                           	opt stack 0
 14272                           tosu	equ	0xFFF
 14273                           tosh	equ	0xFFE
 14274                           tosl	equ	0xFFD
 14275                           pclath	equ	0xFFA
 14276                           tblptru	equ	0xFF8
 14277                           tblptrh	equ	0xFF7
 14278                           tblptrl	equ	0xFF6
 14279                           tablat	equ	0xFF5
 14280                           prodh	equ	0xFF4
 14281                           prodl	equ	0xFF3
 14282                           intcon	equ	0xFF2
 14283                           intcon2	equ	0xFF1
 14284                           intcon3	equ	0xFF0
 14285                           indf0	equ	0xFEF
 14286                           postinc0	equ	0xFEE
 14287                           plusw0	equ	0xFEB
 14288                           fsr0h	equ	0xFEA
 14289                           fsr0l	equ	0xFE9
 14290                           wreg	equ	0xFE8
 14291                           indf1	equ	0xFE7
 14292                           postinc1	equ	0xFE6
 14293                           postdec1	equ	0xFE5
 14294                           fsr1h	equ	0xFE2
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           plusw2	equ	0xFDB
 14300                           fsr2h	equ	0xFDA
 14301                           fsr2l	equ	0xFD9
 14302                           status	equ	0xFD8
 14303                           
 14304 ;; *************** function _strlen *****************
 14305 ;; Defined at:
 14306 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/strlen.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 14309 ;;		 -> Term_MainSm@Data(50), 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;  cp              2   33[BANK0 ] PTR const unsigned char 
 14312 ;;		 -> Term_MainSm@Data(50), 
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  2   29[BANK0 ] unsigned int 
 14315 ;; Registers used:
 14316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14325 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14326 ;;Total ram usage:        6 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; Hardware stack levels required when called:   11
 14329 ;; This function calls:
 14330 ;;		Nothing
 14331 ;; This function is called by:
 14332 ;;		_Term_MainSm
 14333 ;; This function uses a non-reentrant model
 14334 ;;
 14335                           
 14336                           	psect	text56
 14337  0061E0                     __ptext56:
 14338                           	opt stack 0
 14339  0061E0                     _strlen:
 14340                           	opt stack 15
 14341                           
 14342                           ;incstack = 0
 14343  0061E0  C07D  F081         	movff	strlen@s,strlen@cp
 14344  0061E4  C07E  F082         	movff	strlen@s+1,strlen@cp+1
 14345  0061E8  D003               	goto	l3519
 14346  0061EA  0100               	movlb	0	; () banked
 14347  0061EC  4B81               	infsnz	strlen@cp& (0+255),f,b
 14348  0061EE  2B82               	incf	(strlen@cp+1)& (0+255),f,b
 14349  0061F0                     l3519:
 14350                           
 14351                           ; BSR set to: 0
 14352  0061F0  C081  FFD9         	movff	strlen@cp,fsr2l
 14353  0061F4  C082  FFDA         	movff	strlen@cp+1,fsr2h
 14354  0061F8  50DF               	movf	indf2,w,c
 14355  0061FA  A4D8               	btfss	status,2,c
 14356  0061FC  D7F6               	goto	l3520
 14357  0061FE  C07D  F07F         	movff	strlen@s,??_strlen
 14358  006202  C07E  F080         	movff	strlen@s+1,??_strlen+1
 14359  006206  0100               	movlb	0	; () banked
 14360  006208  1F7F               	comf	??_strlen& (0+255),f,b
 14361  00620A  1F80               	comf	(??_strlen+1)& (0+255),f,b
 14362  00620C  4B7F               	infsnz	??_strlen& (0+255),f,b
 14363  00620E  2B80               	incf	(??_strlen+1)& (0+255),f,b
 14364  006210  5181               	movf	strlen@cp& (0+255),w,b
 14365  006212  257F               	addwf	??_strlen& (0+255),w,b
 14366  006214  6F7D               	movwf	?_strlen& (0+255),b
 14367  006216  5182               	movf	(strlen@cp+1)& (0+255),w,b
 14368  006218  2180               	addwfc	(??_strlen+1)& (0+255),w,b
 14369  00621A  6F7E               	movwf	(?_strlen+1)& (0+255),b
 14370  00621C  0012               	return	
 14371  00621E                     __end_of_strlen:
 14372                           	opt stack 0
 14373                           tosu	equ	0xFFF
 14374                           tosh	equ	0xFFE
 14375                           tosl	equ	0xFFD
 14376                           pclath	equ	0xFFA
 14377                           tblptru	equ	0xFF8
 14378                           tblptrh	equ	0xFF7
 14379                           tblptrl	equ	0xFF6
 14380                           tablat	equ	0xFF5
 14381                           prodh	equ	0xFF4
 14382                           prodl	equ	0xFF3
 14383                           intcon	equ	0xFF2
 14384                           intcon2	equ	0xFF1
 14385                           intcon3	equ	0xFF0
 14386                           indf0	equ	0xFEF
 14387                           postinc0	equ	0xFEE
 14388                           plusw0	equ	0xFEB
 14389                           fsr0h	equ	0xFEA
 14390                           fsr0l	equ	0xFE9
 14391                           wreg	equ	0xFE8
 14392                           indf1	equ	0xFE7
 14393                           postinc1	equ	0xFE6
 14394                           postdec1	equ	0xFE5
 14395                           fsr1h	equ	0xFE2
 14396                           fsr1l	equ	0xFE1
 14397                           indf2	equ	0xFDF
 14398                           postinc2	equ	0xFDE
 14399                           postdec2	equ	0xFDD
 14400                           plusw2	equ	0xFDB
 14401                           fsr2h	equ	0xFDA
 14402                           fsr2l	equ	0xFD9
 14403                           status	equ	0xFD8
 14404                           
 14405 ;; *************** function _strcat *****************
 14406 ;; Defined at:
 14407 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcat.c"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;  to              2   29[BANK0 ] PTR unsigned char 
 14410 ;;		 -> Term_MainSm@Data(50), 
 14411 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 14412 ;;		 -> STR_26(3), STR_25(2), STR_24(2), Term_MainSm@FwkBuildStr(4), 
 14413 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 14416 ;;		 -> Term_MainSm@Data(50), 
 14417 ;; Return value:  Size  Location     Type
 14418 ;;                  2   29[BANK0 ] PTR unsigned char 
 14419 ;; Registers used:
 14420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14421 ;; Tracked objects:
 14422 ;;		On entry : 0/0
 14423 ;;		On exit  : 0/0
 14424 ;;		Unchanged: 0/0
 14425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14429 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14430 ;;Total ram usage:        6 bytes
 14431 ;; Hardware stack levels used:    1
 14432 ;; Hardware stack levels required when called:   11
 14433 ;; This function calls:
 14434 ;;		Nothing
 14435 ;; This function is called by:
 14436 ;;		_Term_MainSm
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text57
 14441  0058C0                     __ptext57:
 14442                           	opt stack 0
 14443  0058C0                     _strcat:
 14444                           	opt stack 15
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;incstack = 0
 14448  0058C0  C07D  F081         	movff	strcat@to,strcat@cp
 14449  0058C4  C07E  F082         	movff	strcat@to+1,strcat@cp+1
 14450  0058C8  D003               	goto	l3504
 14451  0058CA  0100               	movlb	0	; () banked
 14452  0058CC  4B81               	infsnz	strcat@cp& (0+255),f,b
 14453  0058CE  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14454  0058D0                     l3504:
 14455                           
 14456                           ; BSR set to: 0
 14457  0058D0  C081  FFD9         	movff	strcat@cp,fsr2l
 14458  0058D4  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14459  0058D8  50DF               	movf	indf2,w,c
 14460  0058DA  B4D8               	btfsc	status,2,c
 14461  0058DC  D006               	goto	l3507
 14462  0058DE  D7F5               	goto	l3505
 14463  0058E0  0100               	movlb	0	; () banked
 14464  0058E2  4B81               	infsnz	strcat@cp& (0+255),f,b
 14465  0058E4  2B82               	incf	(strcat@cp+1)& (0+255),f,b
 14466  0058E6  4B7F               	infsnz	strcat@from& (0+255),f,b
 14467  0058E8  2B80               	incf	(strcat@from+1)& (0+255),f,b
 14468  0058EA                     l3507:
 14469                           
 14470                           ; BSR set to: 0
 14471  0058EA  C07F  FFF6         	movff	strcat@from,tblptrl
 14472  0058EE  C080  FFF7         	movff	strcat@from+1,tblptrh
 14473  0058F2  6AF8               	clrf	tblptru,c
 14474  0058F4  C081  FFD9         	movff	strcat@cp,fsr2l
 14475  0058F8  C082  FFDA         	movff	strcat@cp+1,fsr2h
 14476  0058FC  0E0E               	movlw	(high __ramtop+-1)
 14477  0058FE  64F7               	cpfsgt	tblptrh,c
 14478  005900  D003               	bra	u14297
 14479  005902  0008               	tblrd		*
 14480  005904  50F5               	movf	tablat,w,c
 14481  005906  D005               	bra	u14290
 14482  005908                     u14297:
 14483  005908  CFF6 FFE9          	movff	tblptrl,fsr0l
 14484  00590C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14485  005910  50EF               	movf	indf0,w,c
 14486  005912                     u14290:
 14487  005912  6EDF               	movwf	indf2,c
 14488  005914  50DF               	movf	indf2,w,c
 14489  005916  B4D8               	btfsc	status,2,c
 14490  005918  0012               	return	
 14491  00591A  D7E2               	goto	l3508
 14492  00591C                     __end_of_strcat:
 14493                           	opt stack 0
 14494                           tosu	equ	0xFFF
 14495                           tosh	equ	0xFFE
 14496                           tosl	equ	0xFFD
 14497                           pclath	equ	0xFFA
 14498                           tblptru	equ	0xFF8
 14499                           tblptrh	equ	0xFF7
 14500                           tblptrl	equ	0xFF6
 14501                           tablat	equ	0xFF5
 14502                           prodh	equ	0xFF4
 14503                           prodl	equ	0xFF3
 14504                           intcon	equ	0xFF2
 14505                           intcon2	equ	0xFF1
 14506                           intcon3	equ	0xFF0
 14507                           indf0	equ	0xFEF
 14508                           postinc0	equ	0xFEE
 14509                           plusw0	equ	0xFEB
 14510                           fsr0h	equ	0xFEA
 14511                           fsr0l	equ	0xFE9
 14512                           wreg	equ	0xFE8
 14513                           indf1	equ	0xFE7
 14514                           postinc1	equ	0xFE6
 14515                           postdec1	equ	0xFE5
 14516                           fsr1h	equ	0xFE2
 14517                           fsr1l	equ	0xFE1
 14518                           indf2	equ	0xFDF
 14519                           postinc2	equ	0xFDE
 14520                           postdec2	equ	0xFDD
 14521                           plusw2	equ	0xFDB
 14522                           fsr2h	equ	0xFDA
 14523                           fsr2l	equ	0xFD9
 14524                           status	equ	0xFD8
 14525                           
 14526 ;; *************** function _sprintf *****************
 14527 ;; Defined at:
 14528 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;  sp              2   29[BANK0 ] PTR unsigned char 
 14531 ;;		 -> Term_MainSm@Data(50), 
 14532 ;;  f               2   31[BANK0 ] PTR const unsigned char 
 14533 ;;		 -> STR_27(17), 
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;  tmpval          4    0        struct .
 14536 ;;  cp              2   39[BANK0 ] PTR const unsigned char 
 14537 ;;		 -> STR_32(7), STR_28(12), 
 14538 ;;  ap              2   36[BANK0 ] PTR void [1]
 14539 ;;		 -> ?_sprintf(2), 
 14540 ;;  len             2    0        unsigned int 
 14541 ;;  val             2    0        unsigned int 
 14542 ;;  c               1   38[BANK0 ] char 
 14543 ;;  flag            1   35[BANK0 ] unsigned char 
 14544 ;;  prec            1    0        char 
 14545 ;; Return value:  Size  Location     Type
 14546 ;;                  2   29[BANK0 ] int 
 14547 ;; Registers used:
 14548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14549 ;; Tracked objects:
 14550 ;;		On entry : 0/0
 14551 ;;		On exit  : 0/0
 14552 ;;		Unchanged: 0/0
 14553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14557 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14558 ;;Total ram usage:       12 bytes
 14559 ;; Hardware stack levels used:    1
 14560 ;; Hardware stack levels required when called:   11
 14561 ;; This function calls:
 14562 ;;		Nothing
 14563 ;; This function is called by:
 14564 ;;		_Term_MainSm
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           
 14568                           	psect	text58
 14569  003AFC                     __ptext58:
 14570                           	opt stack 0
 14571  003AFC                     _sprintf:
 14572                           	opt stack 15
 14573                           
 14574                           ;doprnt.c: 494: va_list ap;
 14575                           ;doprnt.c: 499: signed char c;
 14576                           ;doprnt.c: 506: signed char prec;
 14577                           ;doprnt.c: 508: unsigned char flag;
 14578                           ;doprnt.c: 523: union {
 14579                           ;doprnt.c: 524: unsigned long vd;
 14580                           ;doprnt.c: 525: double integ;
 14581                           ;doprnt.c: 526: } tmpval;
 14582                           ;doprnt.c: 528: unsigned int val;
 14583                           ;doprnt.c: 529: unsigned len;
 14584                           ;doprnt.c: 530: const char * cp;
 14585                           ;doprnt.c: 533: *ap = __va_start();
 14586                           
 14587                           ;incstack = 0
 14588  003AFC  0E81               	movlw	low (?_sprintf+4)
 14589  003AFE  0100               	movlb	0	; () banked
 14590  003B00  6F84               	movwf	sprintf@ap& (0+255),b
 14591  003B02  0E00               	movlw	high (?_sprintf+4)
 14592  003B04  6F85               	movwf	(sprintf@ap+1)& (0+255),b
 14593                           
 14594                           ;doprnt.c: 536: while(c = *f++) {
 14595  003B06  D04E               	goto	l2908
 14596  003B08                     
 14597                           ; BSR set to: 0
 14598                           ;doprnt.c: 538: if(c != '%')
 14599                           
 14600                           ; BSR set to: 0
 14601  003B08  0E25               	movlw	37
 14602  003B0A  1986               	xorwf	sprintf@c& (0+255),w,b
 14603  003B0C  B4D8               	btfsc	status,2,c
 14604  003B0E  D009               	goto	l2898
 14605                           
 14606                           ; BSR set to: 0
 14607                           ;doprnt.c: 540: {
 14608                           ;doprnt.c: 541: ((*sp++ = (c)));
 14609  003B10  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14610  003B14  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14611  003B18  C086  FFDF         	movff	sprintf@c,indf2
 14612                           
 14613                           ; BSR set to: 0
 14614  003B1C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14615  003B1E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14616                           
 14617                           ;doprnt.c: 542: continue;
 14618  003B20  D041               	goto	l2908
 14619  003B22                     l2898:
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;doprnt.c: 543: }
 14623                           ;doprnt.c: 548: flag = 0;
 14624                           
 14625                           ; BSR set to: 0
 14626  003B22  0E00               	movlw	0
 14627  003B24  6F83               	movwf	sprintf@flag& (0+255),b
 14628                           
 14629                           ;doprnt.c: 635: switch(c = *f++) {
 14630  003B26  D02E               	goto	l2899
 14631  003B28                     
 14632                           ; BSR set to: 0
 14633                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14634                           
 14635                           ; BSR set to: 0
 14636  003B28  C084  FFD9         	movff	sprintf@ap,fsr2l
 14637  003B2C  C085  FFDA         	movff	sprintf@ap+1,fsr2h
 14638  003B30  CFDE F087          	movff	postinc2,sprintf@cp
 14639  003B34  CFDD F088          	movff	postdec2,sprintf@cp+1
 14640                           
 14641                           ; BSR set to: 0
 14642  003B38  0E02               	movlw	2
 14643  003B3A  2784               	addwf	sprintf@ap& (0+255),f,b
 14644  003B3C  0E00               	movlw	0
 14645  003B3E  2385               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;doprnt.c: 740: if(!cp)
 14649  003B40  5187               	movf	sprintf@cp& (0+255),w,b
 14650  003B42  1188               	iorwf	(sprintf@cp+1)& (0+255),w,b
 14651  003B44  A4D8               	btfss	status,2,c
 14652  003B46  D014               	goto	l2904
 14653                           
 14654                           ; BSR set to: 0
 14655                           ;doprnt.c: 741: cp = "(null)";
 14656  003B48  0ED8               	movlw	low STR_32
 14657  003B4A  6F87               	movwf	sprintf@cp& (0+255),b
 14658  003B4C  0EFF               	movlw	high STR_32
 14659  003B4E  6F88               	movwf	(sprintf@cp+1)& (0+255),b
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;doprnt.c: 777: while(*cp)
 14663  003B50  D00F               	goto	l2904
 14664  003B52                     
 14665                           ; BSR set to: 0
 14666                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 14667                           
 14668                           ; BSR set to: 0
 14669  003B52  C087  FFF6         	movff	sprintf@cp,tblptrl
 14670  003B56  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14671  003B5A                     	if	0	;tblptru may be non-zero
 14672  003B5A                     	endif
 14673  003B5A                     	if	0	;tblptru may be non-zero
 14674  003B5A                     	endif
 14675  003B5A  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14676  003B5E  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14677  003B62  0008               	tblrd		*
 14678  003B64  CFF5 FFDF          	movff	tablat,indf2
 14679                           
 14680                           ; BSR set to: 0
 14681  003B68  4B87               	infsnz	sprintf@cp& (0+255),f,b
 14682  003B6A  2B88               	incf	(sprintf@cp+1)& (0+255),f,b
 14683                           
 14684                           ; BSR set to: 0
 14685  003B6C  4B7D               	infsnz	sprintf@sp& (0+255),f,b
 14686  003B6E  2B7E               	incf	(sprintf@sp+1)& (0+255),f,b
 14687  003B70                     l2904:
 14688                           
 14689                           ; BSR set to: 0
 14690                           
 14691                           ; BSR set to: 0
 14692  003B70  C087  FFF6         	movff	sprintf@cp,tblptrl
 14693  003B74  C088  FFF7         	movff	sprintf@cp+1,tblptrh
 14694  003B78                     	if	0	;tblptru may be non-zero
 14695  003B78                     	endif
 14696  003B78                     	if	0	;tblptru may be non-zero
 14697  003B78                     	endif
 14698  003B78  0008               	tblrd		*
 14699  003B7A  50F5               	movf	tablat,w,c
 14700  003B7C  0900               	iorlw	0
 14701  003B7E  B4D8               	btfsc	status,2,c
 14702  003B80  D011               	goto	l2908
 14703  003B82  D7E7               	goto	l2905
 14704  003B84                     l2899:
 14705                           
 14706                           ; BSR set to: 0
 14707                           
 14708                           ; BSR set to: 0
 14709  003B84  C07F  FFF6         	movff	sprintf@f,tblptrl
 14710  003B88  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14711  003B8C  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14712  003B8E  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14713  003B90                     	if	0	;tblptru may be non-zero
 14714  003B90                     	endif
 14715  003B90                     	if	0	;tblptru may be non-zero
 14716  003B90                     	endif
 14717  003B90  0008               	tblrd		*
 14718  003B92  CFF5 F086          	movff	tablat,sprintf@c
 14719  003B96  5186               	movf	sprintf@c& (0+255),w,b
 14720                           
 14721                           ; Switch size 1, requested type "space"
 14722                           ; Number of cases is 2, Range of values is 0 to 115
 14723                           ; switch strategies available:
 14724                           ; Name         Instructions Cycles
 14725                           ; simple_byte            7     4 (average)
 14726                           ;	Chosen strategy is simple_byte
 14727  003B98  0A00               	xorlw	0	; case 0
 14728  003B9A  B4D8               	btfsc	status,2,c
 14729  003B9C  D00F               	goto	u14350
 14730  003B9E  0A73               	xorlw	115	; case 115
 14731  003BA0  B4D8               	btfsc	status,2,c
 14732  003BA2  D7C2               	goto	l2902
 14733  003BA4                     l2908:
 14734                           
 14735                           ; BSR set to: 0
 14736                           
 14737                           ; BSR set to: 0
 14738                           
 14739                           ;doprnt.c: 1422: {
 14740                           
 14741                           ; BSR set to: 0
 14742  003BA4  C07F  FFF6         	movff	sprintf@f,tblptrl
 14743  003BA8  C080  FFF7         	movff	sprintf@f+1,tblptrh
 14744  003BAC  4B7F               	infsnz	sprintf@f& (0+255),f,b
 14745  003BAE  2B80               	incf	(sprintf@f+1)& (0+255),f,b
 14746  003BB0                     	if	0	;tblptru may be non-zero
 14747  003BB0                     	endif
 14748  003BB0                     	if	0	;tblptru may be non-zero
 14749  003BB0                     	endif
 14750  003BB0  0008               	tblrd		*
 14751  003BB2  CFF5 F086          	movff	tablat,sprintf@c
 14752  003BB6  5186               	movf	sprintf@c& (0+255),w,b
 14753  003BB8  A4D8               	btfss	status,2,c
 14754  003BBA  D7A6               	goto	l2897
 14755  003BBC                     u14350:
 14756                           
 14757                           ; BSR set to: 0
 14758                           ;doprnt.c: 1538: *sp = 0;
 14759                           
 14760                           ; BSR set to: 0
 14761                           
 14762                           ;doprnt.c: 1469: }
 14763                           ;doprnt.c: 1533: }
 14764                           ;doprnt.c: 1535: alldone:
 14765                           
 14766                           ; BSR set to: 0
 14767  003BBC  C07D  FFD9         	movff	sprintf@sp,fsr2l
 14768  003BC0  C07E  FFDA         	movff	sprintf@sp+1,fsr2h
 14769  003BC4  0E00               	movlw	0
 14770  003BC6  6EDF               	movwf	indf2,c
 14771  003BC8  0012               	return	
 14772  003BCA                     __end_of_sprintf:
 14773                           	opt stack 0
 14774                           tosu	equ	0xFFF
 14775                           tosh	equ	0xFFE
 14776                           tosl	equ	0xFFD
 14777                           pclath	equ	0xFFA
 14778                           tblptru	equ	0xFF8
 14779                           tblptrh	equ	0xFF7
 14780                           tblptrl	equ	0xFF6
 14781                           tablat	equ	0xFF5
 14782                           prodh	equ	0xFF4
 14783                           prodl	equ	0xFF3
 14784                           intcon	equ	0xFF2
 14785                           intcon2	equ	0xFF1
 14786                           intcon3	equ	0xFF0
 14787                           indf0	equ	0xFEF
 14788                           postinc0	equ	0xFEE
 14789                           plusw0	equ	0xFEB
 14790                           fsr0h	equ	0xFEA
 14791                           fsr0l	equ	0xFE9
 14792                           wreg	equ	0xFE8
 14793                           indf1	equ	0xFE7
 14794                           postinc1	equ	0xFE6
 14795                           postdec1	equ	0xFE5
 14796                           fsr1h	equ	0xFE2
 14797                           fsr1l	equ	0xFE1
 14798                           indf2	equ	0xFDF
 14799                           postinc2	equ	0xFDE
 14800                           postdec2	equ	0xFDD
 14801                           plusw2	equ	0xFDB
 14802                           fsr2h	equ	0xFDA
 14803                           fsr2l	equ	0xFD9
 14804                           status	equ	0xFD8
 14805                           
 14806 ;; *************** function _memset *****************
 14807 ;; Defined at:
 14808 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/memset.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;  p1              2   29[BANK0 ] PTR void 
 14811 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14812 ;;  c               2   31[BANK0 ] int 
 14813 ;;  n               2   33[BANK0 ] unsigned int 
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;  p               2   35[BANK0 ] PTR unsigned char 
 14816 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  2   29[BANK0 ] PTR void 
 14819 ;; Registers used:
 14820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14821 ;; Tracked objects:
 14822 ;;		On entry : 0/0
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14826 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14829 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14830 ;;Total ram usage:        8 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:   11
 14833 ;; This function calls:
 14834 ;;		Nothing
 14835 ;; This function is called by:
 14836 ;;		_USBDeviceInit
 14837 ;;		_USBStdSetCfgHandler
 14838 ;;		_Term_MainSm
 14839 ;; This function uses a non-reentrant model
 14840 ;;
 14841                           
 14842                           	psect	text59
 14843  0064F0                     __ptext59:
 14844                           	opt stack 0
 14845  0064F0                     _memset:
 14846                           	opt stack 14
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;incstack = 0
 14850  0064F0  C07D  F083         	movff	memset@p1,memset@p
 14851  0064F4  C07E  F084         	movff	memset@p1+1,memset@p+1
 14852  0064F8  D009               	goto	l3378
 14853  0064FA                     l12951:
 14854  0064FA  C083  FFD9         	movff	memset@p,fsr2l
 14855  0064FE  C084  FFDA         	movff	memset@p+1,fsr2h
 14856  006502  C07F  FFDF         	movff	memset@c,indf2
 14857  006506  0100               	movlb	0	; () banked
 14858  006508  4B83               	infsnz	memset@p& (0+255),f,b
 14859  00650A  2B84               	incf	(memset@p+1)& (0+255),f,b
 14860  00650C                     l3378:
 14861                           
 14862                           ; BSR set to: 0
 14863  00650C  0100               	movlb	0	; () banked
 14864  00650E  0781               	decf	memset@n& (0+255),f,b
 14865  006510  A0D8               	btfss	status,0,c
 14866  006512  0782               	decf	(memset@n+1)& (0+255),f,b
 14867  006514  2981               	incf	memset@n& (0+255),w,b
 14868  006516  E1F1               	bnz	l12951
 14869  006518  2982               	incf	(memset@n+1)& (0+255),w,b
 14870  00651A  B4D8               	btfsc	status,2,c
 14871  00651C  0012               	return	
 14872  00651E  D7ED               	goto	l3379
 14873  006520                     __end_of_memset:
 14874                           	opt stack 0
 14875                           tosu	equ	0xFFF
 14876                           tosh	equ	0xFFE
 14877                           tosl	equ	0xFFD
 14878                           pclath	equ	0xFFA
 14879                           tblptru	equ	0xFF8
 14880                           tblptrh	equ	0xFF7
 14881                           tblptrl	equ	0xFF6
 14882                           tablat	equ	0xFF5
 14883                           prodh	equ	0xFF4
 14884                           prodl	equ	0xFF3
 14885                           intcon	equ	0xFF2
 14886                           intcon2	equ	0xFF1
 14887                           intcon3	equ	0xFF0
 14888                           indf0	equ	0xFEF
 14889                           postinc0	equ	0xFEE
 14890                           plusw0	equ	0xFEB
 14891                           fsr0h	equ	0xFEA
 14892                           fsr0l	equ	0xFE9
 14893                           wreg	equ	0xFE8
 14894                           indf1	equ	0xFE7
 14895                           postinc1	equ	0xFE6
 14896                           postdec1	equ	0xFE5
 14897                           fsr1h	equ	0xFE2
 14898                           fsr1l	equ	0xFE1
 14899                           indf2	equ	0xFDF
 14900                           postinc2	equ	0xFDE
 14901                           postdec2	equ	0xFDD
 14902                           plusw2	equ	0xFDB
 14903                           fsr2h	equ	0xFDA
 14904                           fsr2l	equ	0xFD9
 14905                           status	equ	0xFD8
 14906                           
 14907 ;; *************** function _Terminal *****************
 14908 ;; Defined at:
 14909 ;;		line 428 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;		None
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  i               1   68[BANK0 ] unsigned char 
 14914 ;;  UsbRxBuffer   200    0[BANK10] unsigned char [200]
 14915 ;;  UsbTxBuffer   200    0[BANK2 ] unsigned char [200]
 14916 ;;  TermTxBuffer   50    0[BANK1 ] unsigned char [50]
 14917 ;;  Index           1   70[BANK0 ] unsigned char 
 14918 ;;  ReceivedByte    1   69[BANK0 ] unsigned char 
 14919 ;; Return value:  Size  Location     Type
 14920 ;;                  1    wreg      void 
 14921 ;; Registers used:
 14922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14923 ;; Tracked objects:
 14924 ;;		On entry : 0/0
 14925 ;;		On exit  : 0/0
 14926 ;;		Unchanged: 0/0
 14927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;      Locals:         0       3      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14931 ;;      Totals:         0       5      50     200       0       0       0       0       0       0       0     200       
      +0       0       0       0
 14932 ;;Total ram usage:      455 bytes
 14933 ;; Hardware stack levels used:    1
 14934 ;; Hardware stack levels required when called:   15
 14935 ;; This function calls:
 14936 ;;		_I2cSlv_I2cReadMsgSts
 14937 ;;		_I2cSlv_ReceiveI2cMsg
 14938 ;;		_I2cSlv_SendI2cMsg
 14939 ;;		_OsTmr_Wait
 14940 ;;		_atoi
 14941 ;;		_getsUSBUSART
 14942 ;;		_itoa
 14943 ;;		_putUSBUSART
 14944 ;;		_strcpy
 14945 ;;		_strtol
 14946 ;;		_xtoi
 14947 ;; This function is called by:
 14948 ;;		_Term_MainSm
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           	psect	text60
 14953  0000D0                     __ptext60:
 14954                           	opt stack 0
 14955  0000D0                     _Terminal:
 14956                           	opt stack 11
 14957                           
 14958                           ;term.c: 430: static TermStateType TermState = Term_GetData;
 14959                           ;term.c: 431: UINT8 UsbRxBuffer[200u];
 14960                           ;term.c: 432: UINT8 UsbTxBuffer[200u];
 14961                           ;term.c: 433: UINT8 TermTxBuffer[50u];
 14962                           ;term.c: 434: static UINT8 TermRxBuffer[50u];
 14963                           ;term.c: 435: UINT8 Index;
 14964                           ;term.c: 436: static UINT8 Len[4];
 14965                           ;term.c: 437: static UINT8 PackageLen;
 14966                           ;term.c: 438: static UINT8 Addr[4];
 14967                           ;term.c: 439: static UINT8 SlaveAddr;
 14968                           ;term.c: 440: static PayloadType Payload[20u];
 14969                           ;term.c: 441: UINT8 ReceivedBytes = 0;
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;incstack = 0
 14973  0000D0  0E00               	movlw	0
 14974  0000D2  0100               	movlb	0	; () banked
 14975  0000D4  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;term.c: 443: static UINT8 FormatOption = 0u;
 14979                           ;term.c: 444: static UINT8 EchoOption = 1u;
 14980                           ;term.c: 445: static SwTimerType SwTimer;
 14981                           ;term.c: 448: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 14982  0000D6  0E1F               	movlw	31
 14983  0000D8  65CE               	cpfsgt	_USBDeviceState& (0+255),b
 14984  0000DA  0012               	return	
 14985                           
 14986                           ; BSR set to: 0
 14987  0000DC  B265               	btfsc	3941,1,c	;volatile
 14988  0000DE  0012               	return	
 14989  0000E0  D278               	goto	l2404
 14990  0000E2                     
 14991                           ;term.c: 455: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 14992                           
 14993                           ; BSR set to: 0
 14994  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 14995  0000E4  0100               	movlb	0	; () banked
 14996  0000E6  6F84               	movwf	getsUSBUSART@buffer& (0+255),b
 14997  0000E8  0E0A               	movlw	high Terminal@UsbRxBuffer
 14998  0000EA  6F85               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 14999  0000EC  0EC8               	movlw	200
 15000  0000EE  6F86               	movwf	getsUSBUSART@len& (0+255),b
 15001  0000F0  ECE9  F025         	call	_getsUSBUSART	;wreg free
 15002  0000F4  0100               	movlb	0	; () banked
 15003  0000F6  6FA5               	movwf	Terminal@ReceivedBytes& (0+255),b
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;term.c: 458: if (ReceivedBytes > 0)
 15007  0000F8  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15008  0000FA  B4D8               	btfsc	status,2,c
 15009  0000FC  0012               	return	
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;term.c: 459: {
 15013                           ;term.c: 461: if (EchoOption == 1u)
 15014  0000FE  0102               	movlb	2	; () banked
 15015  000100  05F3               	decf	Terminal@EchoOption& (0+255),w,b
 15016  000102  A4D8               	btfss	status,2,c
 15017  000104  D026               	goto	l2408
 15018                           
 15019                           ; BSR set to: 2
 15020                           ;term.c: 462: {
 15021                           ;term.c: 464: if((cdc_trf_state == 0))
 15022  000106  0100               	movlb	0	; () banked
 15023  000108  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15024  00010A  A4D8               	btfss	status,2,c
 15025  00010C  D022               	goto	l2408
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;term.c: 465: {
 15029                           ;term.c: 466: UsbRxBuffer[ReceivedBytes] = '\r';
 15030  00010E  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15031  000110  0D01               	mullw	1
 15032  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 15033  000114  24F3               	addwf	prodl,w,c
 15034  000116  6ED9               	movwf	fsr2l,c
 15035  000118  0E0A               	movlw	high Terminal@UsbRxBuffer
 15036  00011A  20F4               	addwfc	prodh,w,c
 15037  00011C  6EDA               	movwf	fsr2h,c
 15038  00011E  0E0D               	movlw	13
 15039  000120  6EDF               	movwf	indf2,c
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;term.c: 467: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 15043  000122  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15044  000124  6FA2               	movwf	??_Terminal& (0+255),b
 15045  000126  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15046  000128  0E01               	movlw	1
 15047  00012A  27A2               	addwf	??_Terminal& (0+255),f,b
 15048  00012C  0E00               	movlw	0
 15049  00012E  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15050  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 15051  000132  25A2               	addwf	??_Terminal& (0+255),w,b
 15052  000134  6ED9               	movwf	fsr2l,c
 15053  000136  0E0A               	movlw	high Terminal@UsbRxBuffer
 15054  000138  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15055  00013A  6EDA               	movwf	fsr2h,c
 15056  00013C  0E0A               	movlw	10
 15057  00013E  6EDF               	movwf	indf2,c
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;term.c: 468: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 15061  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 15062  000142  6F83               	movwf	putUSBUSART@data& (0+255),b
 15063  000144  0E0A               	movlw	high Terminal@UsbRxBuffer
 15064  000146  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15065  000148  51A5               	movf	Terminal@ReceivedBytes& (0+255),w,b
 15066  00014A  0F02               	addlw	2
 15067  00014C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15068  00014E  ECD0  F033         	call	_putUSBUSART	;wreg free
 15069  000152                     l2408:
 15070                           
 15071                           ;term.c: 469: }
 15072                           ;term.c: 470: }
 15073                           ;term.c: 473: if ((UsbRxBuffer[0u] == 'S') &&
 15074                           ;term.c: 474: (UsbRxBuffer[0u + 1u] == 'O') &&
 15075                           ;term.c: 475: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15076  000152  0E53               	movlw	83
 15077  000154  010A               	movlb	10	; () banked
 15078  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15079  000158  A4D8               	btfss	status,2,c
 15080  00015A  D043               	goto	l2409
 15081                           
 15082                           ; BSR set to: 10
 15083  00015C  0E4F               	movlw	79
 15084  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15085  000160  A4D8               	btfss	status,2,c
 15086  000162  D03F               	goto	l2409
 15087                           
 15088                           ; BSR set to: 10
 15089  000164  0E3A               	movlw	58
 15090  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15091  000168  A4D8               	btfss	status,2,c
 15092  00016A  D03B               	goto	l2409
 15093                           
 15094                           ; BSR set to: 10
 15095                           ;term.c: 476: {
 15096                           ;term.c: 478: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15097  00016C  0E47               	movlw	71
 15098  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15099  000170  A4D8               	btfss	status,2,c
 15100  000172  0012               	return	
 15101                           
 15102                           ; BSR set to: 10
 15103  000174  0E3A               	movlw	58
 15104  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15105  000178  A4D8               	btfss	status,2,c
 15106  00017A  0012               	return	
 15107                           
 15108                           ; BSR set to: 10
 15109                           ;term.c: 479: {
 15110                           ;term.c: 481: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 15111  00017C  0E44               	movlw	68
 15112  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15113  000180  A4D8               	btfss	status,2,c
 15114  000182  D015               	goto	l2411
 15115                           
 15116                           ; BSR set to: 10
 15117  000184  0E46               	movlw	70
 15118  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15119  000188  A4D8               	btfss	status,2,c
 15120  00018A  D011               	goto	l2411
 15121                           
 15122                           ; BSR set to: 10
 15123                           ;term.c: 482: {
 15124                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 15125  00018C  0E41               	movlw	65
 15126  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15127  000190  A4D8               	btfss	status,2,c
 15128  000192  D004               	goto	l2412
 15129                           
 15130                           ; BSR set to: 10
 15131                           ;term.c: 484: {
 15132                           ;term.c: 485: FormatOption = 1u;
 15133  000194  0E01               	movlw	1
 15134  000196  0102               	movlb	2	; () banked
 15135  000198  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15136                           
 15137                           ;term.c: 486: }
 15138  00019A  0012               	return	
 15139  00019C                     l2412:
 15140                           
 15141                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 15142                           
 15143                           ; BSR set to: 2
 15144  00019C  0E42               	movlw	66
 15145  00019E  010A               	movlb	10	; () banked
 15146  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15147  0001A2  A4D8               	btfss	status,2,c
 15148  0001A4  0012               	return	
 15149                           
 15150                           ; BSR set to: 10
 15151                           ;term.c: 488: {
 15152                           ;term.c: 489: FormatOption = 0u;
 15153  0001A6  0E00               	movlw	0
 15154  0001A8  0102               	movlb	2	; () banked
 15155  0001AA  6FED               	movwf	Terminal@FormatOption& (0+255),b
 15156                           
 15157                           ; BSR set to: 2
 15158                           ;term.c: 490: }
 15159                           ;term.c: 491: }
 15160                           
 15161                           ; BSR set to: 2
 15162  0001AC  0012               	return	
 15163  0001AE                     l2411:
 15164                           
 15165                           ;term.c: 493: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 15166                           
 15167                           ; BSR set to: 2
 15168  0001AE  0E45               	movlw	69
 15169  0001B0  010A               	movlb	10	; () banked
 15170  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 15171  0001B4  A4D8               	btfss	status,2,c
 15172  0001B6  0012               	return	
 15173                           
 15174                           ; BSR set to: 10
 15175  0001B8  0E4D               	movlw	77
 15176  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 15177  0001BC  A4D8               	btfss	status,2,c
 15178  0001BE  0012               	return	
 15179                           
 15180                           ; BSR set to: 10
 15181                           ;term.c: 494: {
 15182                           ;term.c: 495: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 15183  0001C0  0E31               	movlw	49
 15184  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15185  0001C4  A4D8               	btfss	status,2,c
 15186  0001C6  D004               	goto	l2417
 15187                           
 15188                           ; BSR set to: 10
 15189                           ;term.c: 496: {
 15190                           ;term.c: 497: EchoOption = 1u;
 15191  0001C8  0E01               	movlw	1
 15192  0001CA  0102               	movlb	2	; () banked
 15193  0001CC  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15194                           
 15195                           ;term.c: 498: }
 15196  0001CE  0012               	return	
 15197  0001D0                     l2417:
 15198                           
 15199                           ;term.c: 499: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 15200                           
 15201                           ; BSR set to: 2
 15202  0001D0  0E30               	movlw	48
 15203  0001D2  010A               	movlb	10	; () banked
 15204  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 15205  0001D6  A4D8               	btfss	status,2,c
 15206  0001D8  0012               	return	
 15207                           
 15208                           ; BSR set to: 10
 15209                           ;term.c: 500: {
 15210                           ;term.c: 501: EchoOption = 0u;
 15211  0001DA  0E00               	movlw	0
 15212  0001DC  0102               	movlb	2	; () banked
 15213  0001DE  6FF3               	movwf	Terminal@EchoOption& (0+255),b
 15214                           
 15215                           ; BSR set to: 2
 15216                           ;term.c: 507: }
 15217                           ;term.c: 508: }
 15218                           ;term.c: 509: }
 15219                           
 15220                           ; BSR set to: 2
 15221                           
 15222                           ; BSR set to: 2
 15223                           
 15224                           ;term.c: 504: else
 15225                           ;term.c: 505: {
 15226                           
 15227                           ; BSR set to: 2
 15228                           
 15229                           ; BSR set to: 2
 15230                           ;term.c: 502: }
 15231                           ;term.c: 503: }
 15232                           
 15233                           ; BSR set to: 2
 15234  0001E0  0012               	return	
 15235  0001E2                     l2409:
 15236                           
 15237                           ;term.c: 510: else if ((UsbRxBuffer[0u] == 'S') &&
 15238                           ;term.c: 511: (UsbRxBuffer[0u + 1u] == 'B') &&
 15239                           ;term.c: 512: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 15240                           
 15241                           ; BSR set to: 2
 15242  0001E2  0E53               	movlw	83
 15243  0001E4  010A               	movlb	10	; () banked
 15244  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15245  0001E8  A4D8               	btfss	status,2,c
 15246  0001EA  D0D3               	goto	l2422
 15247                           
 15248                           ; BSR set to: 10
 15249  0001EC  0E42               	movlw	66
 15250  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15251  0001F0  A4D8               	btfss	status,2,c
 15252  0001F2  D0CF               	goto	l2422
 15253                           
 15254                           ; BSR set to: 10
 15255  0001F4  0E3A               	movlw	58
 15256  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15257  0001F8  A4D8               	btfss	status,2,c
 15258  0001FA  D0CB               	goto	l2422
 15259                           
 15260                           ; BSR set to: 10
 15261                           ;term.c: 513: {
 15262                           ;term.c: 514: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 15263  0001FC  0E57               	movlw	87
 15264  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15265  000200  A4D8               	btfss	status,2,c
 15266  000202  D091               	goto	l2423
 15267                           
 15268                           ; BSR set to: 10
 15269  000204  0E3A               	movlw	58
 15270  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15271  000208  A4D8               	btfss	status,2,c
 15272  00020A  D08D               	goto	l2423
 15273                           
 15274                           ; BSR set to: 10
 15275                           ;term.c: 515: {
 15276                           ;term.c: 517: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15277  00020C  CA05  F3B4         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15278                           
 15279                           ;term.c: 518: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15280  000210  CA06  F3B5         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15281                           
 15282                           ;term.c: 520: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15283  000214  CA08  F3B0         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15284                           
 15285                           ;term.c: 521: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15286  000218  CA09  F3B1         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15287                           
 15288                           ; BSR set to: 10
 15289                           ;term.c: 523: PackageLen = atoi((void*)Len);
 15290  00021C  0EB4               	movlw	low Terminal@Len
 15291  00021E  0100               	movlb	0	; () banked
 15292  000220  6F83               	movwf	atoi@s& (0+255),b
 15293  000222  0E03               	movlw	high Terminal@Len
 15294  000224  6F84               	movwf	(atoi@s+1)& (0+255),b
 15295  000226  EC3F  F01C         	call	_atoi	;wreg free
 15296  00022A  0100               	movlb	0	; () banked
 15297  00022C  5183               	movf	?_atoi& (0+255),w,b
 15298  00022E  0102               	movlb	2	; () banked
 15299  000230  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15300                           
 15301                           ; BSR set to: 2
 15302                           ;term.c: 524: SlaveAddr = xtoi((void*)Addr);
 15303  000232  0EB0               	movlw	low Terminal@Addr
 15304  000234  0100               	movlb	0	; () banked
 15305  000236  6F83               	movwf	xtoi@s& (0+255),b
 15306  000238  0E03               	movlw	high Terminal@Addr
 15307  00023A  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15308  00023C  EC7C  F01A         	call	_xtoi	;wreg free
 15309  000240  0100               	movlb	0	; () banked
 15310  000242  5183               	movf	?_xtoi& (0+255),w,b
 15311  000244  0102               	movlb	2	; () banked
 15312  000246  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15313                           
 15314                           ; BSR set to: 2
 15315                           ;term.c: 526: for (Index = 0; Index <= PackageLen; Index++)
 15316  000248  0E00               	movlw	0
 15317  00024A  0100               	movlb	0	; () banked
 15318  00024C  6FA6               	movwf	Terminal@Index& (0+255),b
 15319  00024E  D032               	goto	l2424
 15320  000250                     
 15321                           ;term.c: 527: {
 15322                           ;term.c: 528: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 15323                           
 15324                           ; BSR set to: 0
 15325  000250  0100               	movlb	0	; () banked
 15326  000252  51A6               	movf	Terminal@Index& (0+255),w,b
 15327  000254  0D02               	mullw	2
 15328  000256  0E0B               	movlw	11
 15329  000258  26F3               	addwf	prodl,f,c
 15330  00025A  0E00               	movlw	0
 15331  00025C  22F4               	addwfc	prodh,f,c
 15332  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 15333  000260  24F3               	addwf	prodl,w,c
 15334  000262  6ED9               	movwf	fsr2l,c
 15335  000264  0E0A               	movlw	high Terminal@UsbRxBuffer
 15336  000266  20F4               	addwfc	prodh,w,c
 15337  000268  6EDA               	movwf	fsr2h,c
 15338  00026A  51A6               	movf	Terminal@Index& (0+255),w,b
 15339  00026C  0D04               	mullw	4
 15340  00026E  0E66               	movlw	low Terminal@Payload
 15341  000270  24F3               	addwf	prodl,w,c
 15342  000272  6EE1               	movwf	fsr1l,c
 15343  000274  0E07               	movlw	high Terminal@Payload
 15344  000276  20F4               	addwfc	prodh,w,c
 15345  000278  6EE2               	movwf	fsr1h,c
 15346  00027A  CFDF FFE7          	movff	indf2,indf1
 15347                           
 15348                           ;term.c: 529: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 15349  00027E  51A6               	movf	Terminal@Index& (0+255),w,b
 15350  000280  0D02               	mullw	2
 15351  000282  0E0C               	movlw	12
 15352  000284  26F3               	addwf	prodl,f,c
 15353  000286  0E00               	movlw	0
 15354  000288  22F4               	addwfc	prodh,f,c
 15355  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 15356  00028C  24F3               	addwf	prodl,w,c
 15357  00028E  6ED9               	movwf	fsr2l,c
 15358  000290  0E0A               	movlw	high Terminal@UsbRxBuffer
 15359  000292  20F4               	addwfc	prodh,w,c
 15360  000294  6EDA               	movwf	fsr2h,c
 15361  000296  51A6               	movf	Terminal@Index& (0+255),w,b
 15362  000298  0D04               	mullw	4
 15363  00029A  0E01               	movlw	1
 15364  00029C  26F3               	addwf	prodl,f,c
 15365  00029E  0E00               	movlw	0
 15366  0002A0  22F4               	addwfc	prodh,f,c
 15367  0002A2  0E66               	movlw	low Terminal@Payload
 15368  0002A4  24F3               	addwf	prodl,w,c
 15369  0002A6  6EE1               	movwf	fsr1l,c
 15370  0002A8  0E07               	movlw	high Terminal@Payload
 15371  0002AA  20F4               	addwfc	prodh,w,c
 15372  0002AC  6EE2               	movwf	fsr1h,c
 15373  0002AE  CFDF FFE7          	movff	indf2,indf1
 15374                           
 15375                           ; BSR set to: 0
 15376  0002B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15377  0002B4                     l2424:
 15378                           
 15379                           ; BSR set to: 0
 15380                           
 15381                           ; BSR set to: 0
 15382  0002B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15383  0002B6  0102               	movlb	2	; () banked
 15384  0002B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15385  0002BA  B0D8               	btfsc	status,0,c
 15386  0002BC  D7C9               	goto	l2425
 15387                           
 15388                           ; BSR set to: 2
 15389                           ;term.c: 530: }
 15390                           ;term.c: 532: for (Index = 0; Index <= PackageLen; Index++)
 15391                           
 15392                           ; BSR set to: 2
 15393  0002BE  0E00               	movlw	0
 15394  0002C0  0100               	movlb	0	; () banked
 15395  0002C2  6FA6               	movwf	Terminal@Index& (0+255),b
 15396  0002C4  D01F               	goto	l2427
 15397  0002C6                     
 15398                           ;term.c: 533: {
 15399                           ;term.c: 537: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 15400                           
 15401                           ; BSR set to: 0
 15402  0002C6  0100               	movlb	0	; () banked
 15403  0002C8  51A6               	movf	Terminal@Index& (0+255),w,b
 15404  0002CA  0D04               	mullw	4
 15405  0002CC  0E66               	movlw	low Terminal@Payload
 15406  0002CE  24F3               	addwf	prodl,w,c
 15407  0002D0  6F89               	movwf	strtol@s& (0+255),b
 15408  0002D2  0E07               	movlw	high Terminal@Payload
 15409  0002D4  20F4               	addwfc	prodh,w,c
 15410  0002D6  6F8A               	movwf	(strtol@s+1)& (0+255),b
 15411  0002D8  0E00               	movlw	0
 15412  0002DA  6F8B               	movwf	strtol@endptr& (0+255),b
 15413  0002DC  0E00               	movlw	0
 15414  0002DE  6F8C               	movwf	(strtol@endptr+1)& (0+255),b
 15415  0002E0  0E00               	movlw	0
 15416  0002E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 15417  0002E4  0E10               	movlw	16
 15418  0002E6  6F8D               	movwf	strtol@base& (0+255),b
 15419  0002E8  EC0E  F00C         	call	_strtol	;wreg free
 15420  0002EC  0100               	movlb	0	; () banked
 15421  0002EE  51A6               	movf	Terminal@Index& (0+255),w,b
 15422  0002F0  0D01               	mullw	1
 15423  0002F2  0E00               	movlw	low Terminal@TermTxBuffer
 15424  0002F4  24F3               	addwf	prodl,w,c
 15425  0002F6  6ED9               	movwf	fsr2l,c
 15426  0002F8  0E01               	movlw	high Terminal@TermTxBuffer
 15427  0002FA  20F4               	addwfc	prodh,w,c
 15428  0002FC  6EDA               	movwf	fsr2h,c
 15429  0002FE  C089  FFDF         	movff	?_strtol,indf2
 15430                           
 15431                           ; BSR set to: 0
 15432  000302  2BA6               	incf	Terminal@Index& (0+255),f,b
 15433  000304                     l2427:
 15434                           
 15435                           ; BSR set to: 0
 15436                           
 15437                           ; BSR set to: 0
 15438  000304  51A6               	movf	Terminal@Index& (0+255),w,b
 15439  000306  0102               	movlb	2	; () banked
 15440  000308  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15441  00030A  B0D8               	btfsc	status,0,c
 15442  00030C  D7DC               	goto	l2428
 15443                           
 15444                           ; BSR set to: 2
 15445                           ;term.c: 539: }
 15446                           ;term.c: 542: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 15447                           
 15448                           ; BSR set to: 2
 15449  00030E  0E00               	movlw	low Terminal@TermTxBuffer
 15450  000310  0100               	movlb	0	; () banked
 15451  000312  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 15452  000314  0E01               	movlw	high Terminal@TermTxBuffer
 15453  000316  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 15454  000318  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 15455  00031C  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 15456  000320  EC0F  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 15457                           
 15458                           ;term.c: 543: }
 15459  000324  0012               	return	
 15460  000326                     l2423:
 15461                           
 15462                           ;term.c: 544: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 15463  000326  0E52               	movlw	82
 15464  000328  010A               	movlb	10	; () banked
 15465  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 15466  00032C  A4D8               	btfss	status,2,c
 15467  00032E  0012               	return	
 15468                           
 15469                           ; BSR set to: 10
 15470  000330  0E3A               	movlw	58
 15471  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 15472  000334  A4D8               	btfss	status,2,c
 15473  000336  0012               	return	
 15474                           
 15475                           ; BSR set to: 10
 15476                           ;term.c: 545: {
 15477                           ;term.c: 547: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 15478  000338  CA05  F3B4         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 15479                           
 15480                           ;term.c: 548: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 15481  00033C  CA06  F3B5         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 15482                           
 15483                           ;term.c: 550: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 15484  000340  CA08  F3B0         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 15485                           
 15486                           ;term.c: 551: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 15487  000344  CA09  F3B1         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 15488                           
 15489                           ; BSR set to: 10
 15490                           ;term.c: 553: PackageLen = atoi((void*)Len);
 15491  000348  0EB4               	movlw	low Terminal@Len
 15492  00034A  0100               	movlb	0	; () banked
 15493  00034C  6F83               	movwf	atoi@s& (0+255),b
 15494  00034E  0E03               	movlw	high Terminal@Len
 15495  000350  6F84               	movwf	(atoi@s+1)& (0+255),b
 15496  000352  EC3F  F01C         	call	_atoi	;wreg free
 15497  000356  0100               	movlb	0	; () banked
 15498  000358  5183               	movf	?_atoi& (0+255),w,b
 15499  00035A  0102               	movlb	2	; () banked
 15500  00035C  6FEF               	movwf	Terminal@PackageLen& (0+255),b
 15501                           
 15502                           ; BSR set to: 2
 15503                           ;term.c: 554: SlaveAddr = xtoi((void*)Addr);
 15504  00035E  0EB0               	movlw	low Terminal@Addr
 15505  000360  0100               	movlb	0	; () banked
 15506  000362  6F83               	movwf	xtoi@s& (0+255),b
 15507  000364  0E03               	movlw	high Terminal@Addr
 15508  000366  6F84               	movwf	(xtoi@s+1)& (0+255),b
 15509  000368  EC7C  F01A         	call	_xtoi	;wreg free
 15510  00036C  0100               	movlb	0	; () banked
 15511  00036E  5183               	movf	?_xtoi& (0+255),w,b
 15512  000370  0102               	movlb	2	; () banked
 15513  000372  6FEE               	movwf	Terminal@SlaveAddr& (0+255),b
 15514                           
 15515                           ; BSR set to: 2
 15516                           ;term.c: 557: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 15517  000374  0E40               	movlw	low Terminal@TermRxBuffer
 15518  000376  0100               	movlb	0	; () banked
 15519  000378  6F80               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 15520  00037A  0E05               	movlw	high Terminal@TermRxBuffer
 15521  00037C  6F81               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 15522  00037E  C2EE  F082         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 15523  000382  C2EF  F083         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 15524  000386  ECB0  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 15525                           
 15526                           ;term.c: 560: TermState = Term_PrepSlvI2cResp;
 15527  00038A  0E01               	movlw	1
 15528  00038C  0102               	movlb	2	; () banked
 15529  00038E  6FF0               	movwf	Terminal@TermState& (0+255),b
 15530                           
 15531                           ; BSR set to: 2
 15532                           ;term.c: 561: }
 15533                           ;term.c: 562: }
 15534                           
 15535                           ; BSR set to: 2
 15536  000390  0012               	return	
 15537  000392                     l2422:
 15538                           
 15539                           ;term.c: 563: else if ((UsbRxBuffer[0u] == 'T') &&
 15540                           ;term.c: 564: (UsbRxBuffer[0u + 1u] == 'E') &&
 15541                           ;term.c: 565: (UsbRxBuffer[0u + 1u + 1u] == 'L'))
 15542                           
 15543                           ; BSR set to: 2
 15544  000392  0E54               	movlw	84
 15545  000394  010A               	movlb	10	; () banked
 15546  000396  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 15547  000398  A4D8               	btfss	status,2,c
 15548  00039A  0012               	return	
 15549                           
 15550                           ; BSR set to: 10
 15551  00039C  0E45               	movlw	69
 15552  00039E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 15553  0003A0  A4D8               	btfss	status,2,c
 15554  0003A2  0012               	return	
 15555                           
 15556                           ; BSR set to: 10
 15557  0003A4  0E4C               	movlw	76
 15558  0003A6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 15559  0003A8  A4D8               	btfss	status,2,c
 15560  0003AA  0012               	return	
 15561                           
 15562                           ; BSR set to: 10
 15563                           ;term.c: 566: {
 15564                           ;term.c: 568: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u];
 15565  0003AC  CA03  F3B4         	movff	Terminal@UsbRxBuffer+3,Terminal@Len
 15566                           
 15567                           ;term.c: 569: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 1];
 15568  0003B0  CA04  F3B5         	movff	Terminal@UsbRxBuffer+4,Terminal@Len+1
 15569                           
 15570                           ; BSR set to: 10
 15571                           ;term.c: 570: UsbMasterPhoneNumberLen = atoi(Len);
 15572  0003B4  0EB4               	movlw	low Terminal@Len
 15573  0003B6  0100               	movlb	0	; () banked
 15574  0003B8  6F83               	movwf	atoi@s& (0+255),b
 15575  0003BA  0E03               	movlw	high Terminal@Len
 15576  0003BC  6F84               	movwf	(atoi@s+1)& (0+255),b
 15577  0003BE  EC3F  F01C         	call	_atoi	;wreg free
 15578  0003C2  C083  F318         	movff	?_atoi,_UsbMasterPhoneNumberLen
 15579  0003C6  C084  F319         	movff	?_atoi+1,_UsbMasterPhoneNumberLen+1
 15580                           
 15581                           ;term.c: 572: for (UINT8 i = 0; i < UsbMasterPhoneNumberLen; i++)
 15582  0003CA  0E00               	movlw	0
 15583  0003CC  0100               	movlb	0	; () banked
 15584  0003CE  6FA4               	movwf	Terminal@i& (0+255),b
 15585  0003D0  D018               	goto	l2434
 15586  0003D2                     
 15587                           ; BSR set to: 0
 15588                           ;term.c: 573: {
 15589                           ;term.c: 574: UsbMasterPhoneNumber[i] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + i];
 15590                           
 15591                           ; BSR set to: 0
 15592  0003D2  51A4               	movf	Terminal@i& (0+255),w,b
 15593  0003D4  6FA2               	movwf	??_Terminal& (0+255),b
 15594  0003D6  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15595  0003D8  0E05               	movlw	5
 15596  0003DA  27A2               	addwf	??_Terminal& (0+255),f,b
 15597  0003DC  0E00               	movlw	0
 15598  0003DE  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15599  0003E0  0E00               	movlw	low Terminal@UsbRxBuffer
 15600  0003E2  25A2               	addwf	??_Terminal& (0+255),w,b
 15601  0003E4  6ED9               	movwf	fsr2l,c
 15602  0003E6  0E0A               	movlw	high Terminal@UsbRxBuffer
 15603  0003E8  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15604  0003EA  6EDA               	movwf	fsr2h,c
 15605  0003EC  51A4               	movf	Terminal@i& (0+255),w,b
 15606  0003EE  0D01               	mullw	1
 15607  0003F0  0E40               	movlw	low _UsbMasterPhoneNumber
 15608  0003F2  24F3               	addwf	prodl,w,c
 15609  0003F4  6EE1               	movwf	fsr1l,c
 15610  0003F6  0E04               	movlw	high _UsbMasterPhoneNumber
 15611  0003F8  20F4               	addwfc	prodh,w,c
 15612  0003FA  6EE2               	movwf	fsr1h,c
 15613  0003FC  CFDF FFE7          	movff	indf2,indf1
 15614                           
 15615                           ; BSR set to: 0
 15616  000400  2BA4               	incf	Terminal@i& (0+255),f,b
 15617  000402                     l2434:
 15618                           
 15619                           ; BSR set to: 0
 15620                           
 15621                           ; BSR set to: 0
 15622  000402  51A4               	movf	Terminal@i& (0+255),w,b
 15623  000404  6FA2               	movwf	??_Terminal& (0+255),b
 15624  000406  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15625  000408  0103               	movlb	3	; () banked
 15626  00040A  5118               	movf	_UsbMasterPhoneNumberLen& (0+255),w,b
 15627  00040C  0100               	movlb	0	; () banked
 15628  00040E  5DA2               	subwf	??_Terminal& (0+255),w,b
 15629  000410  0103               	movlb	3	; () banked
 15630  000412  5119               	movf	(_UsbMasterPhoneNumberLen+1)& (0+255),w,b
 15631  000414  0100               	movlb	0	; () banked
 15632  000416  59A3               	subwfb	(??_Terminal+1)& (0+255),w,b
 15633  000418  B0D8               	btfsc	status,0,c
 15634  00041A  0012               	return	
 15635  00041C  D7DA               	goto	l2435
 15636  00041E                     
 15637                           ;term.c: 619: if((cdc_trf_state == 0))
 15638                           
 15639                           ; BSR set to: 0
 15640  00041E  0100               	movlb	0	; () banked
 15641  000420  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15642  000422  A4D8               	btfss	status,2,c
 15643  000424  0012               	return	
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;term.c: 620: {
 15647                           ;term.c: 621: UsbTxBuffer[0] = 'S';
 15648  000426  0E53               	movlw	83
 15649  000428  0102               	movlb	2	; () banked
 15650  00042A  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 15651                           
 15652                           ;term.c: 622: UsbTxBuffer[1] = 'B';
 15653  00042C  0E42               	movlw	66
 15654  00042E  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 15655                           
 15656                           ;term.c: 623: UsbTxBuffer[2] = '[';
 15657  000430  0E5B               	movlw	91
 15658  000432  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 15659                           
 15660                           ; BSR set to: 2
 15661                           ;term.c: 624: UsbTxBuffer[3] = Addr[0];
 15662  000434  C3B0  F203         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 15663                           
 15664                           ; BSR set to: 2
 15665                           ;term.c: 625: UsbTxBuffer[4] = Addr[1];
 15666  000438  C3B1  F204         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 15667                           
 15668                           ;term.c: 626: UsbTxBuffer[5] = ']';
 15669  00043C  0E5D               	movlw	93
 15670  00043E  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 15671                           
 15672                           ;term.c: 627: UsbTxBuffer[6] = ':';
 15673  000440  0E3A               	movlw	58
 15674  000442  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 15675                           
 15676                           ; BSR set to: 2
 15677                           ;term.c: 628: putUSBUSART(UsbTxBuffer,7);
 15678  000444  0E00               	movlw	low Terminal@UsbTxBuffer
 15679  000446  0100               	movlb	0	; () banked
 15680  000448  6F83               	movwf	putUSBUSART@data& (0+255),b
 15681  00044A  0E02               	movlw	high Terminal@UsbTxBuffer
 15682  00044C  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15683  00044E  0E07               	movlw	7
 15684  000450  6F85               	movwf	putUSBUSART@length& (0+255),b
 15685  000452  ECD0  F033         	call	_putUSBUSART	;wreg free
 15686                           
 15687                           ;term.c: 631: TermState = Term_ReadSlvI2cData;
 15688  000456  0E02               	movlw	2
 15689  000458  0102               	movlb	2	; () banked
 15690  00045A  6FF0               	movwf	Terminal@TermState& (0+255),b
 15691                           
 15692                           ; BSR set to: 2
 15693                           ;term.c: 632: }
 15694                           ;term.c: 633: break;
 15695  00045C  0012               	return	
 15696  00045E                     
 15697                           ; BSR set to: 2
 15698                           ;term.c: 637: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 15699                           
 15700                           ; BSR set to: 2
 15701  00045E  ECF2  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 15702  000462  06E8               	decf	wreg,f,c
 15703  000464  A4D8               	btfss	status,2,c
 15704  000466  D088               	goto	l2443
 15705                           
 15706                           ;term.c: 638: {
 15707                           ;term.c: 640: if (FormatOption == 1u)
 15708  000468  0102               	movlb	2	; () banked
 15709  00046A  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15710  00046C  A4D8               	btfss	status,2,c
 15711  00046E  D027               	goto	u14230
 15712                           
 15713                           ; BSR set to: 2
 15714                           ;term.c: 641: {
 15715                           ;term.c: 643: for (Index = 0; Index <= PackageLen; Index++)
 15716  000470  0E00               	movlw	0
 15717  000472  0100               	movlb	0	; () banked
 15718  000474  6FA6               	movwf	Terminal@Index& (0+255),b
 15719  000476  D01E               	goto	l2445
 15720  000478                     
 15721                           ;term.c: 644: {
 15722                           ;term.c: 645: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 15723                           
 15724                           ; BSR set to: 0
 15725  000478  0100               	movlb	0	; () banked
 15726  00047A  51A6               	movf	Terminal@Index& (0+255),w,b
 15727  00047C  0D04               	mullw	4
 15728  00047E  0E66               	movlw	low Terminal@Payload
 15729  000480  24F3               	addwf	prodl,w,c
 15730  000482  6F93               	movwf	itoa@buf& (0+255),b
 15731  000484  0E07               	movlw	high Terminal@Payload
 15732  000486  20F4               	addwfc	prodh,w,c
 15733  000488  6F94               	movwf	(itoa@buf+1)& (0+255),b
 15734  00048A  51A6               	movf	Terminal@Index& (0+255),w,b
 15735  00048C  0D01               	mullw	1
 15736  00048E  0E40               	movlw	low Terminal@TermRxBuffer
 15737  000490  24F3               	addwf	prodl,w,c
 15738  000492  6ED9               	movwf	fsr2l,c
 15739  000494  0E05               	movlw	high Terminal@TermRxBuffer
 15740  000496  20F4               	addwfc	prodh,w,c
 15741  000498  6EDA               	movwf	fsr2h,c
 15742  00049A  50DF               	movf	indf2,w,c
 15743  00049C  6FA2               	movwf	??_Terminal& (0+255),b
 15744  00049E  51A2               	movf	??_Terminal& (0+255),w,b
 15745  0004A0  6F95               	movwf	itoa@val& (0+255),b
 15746  0004A2  6B96               	clrf	(itoa@val+1)& (0+255),b
 15747  0004A4  0E00               	movlw	0
 15748  0004A6  6F98               	movwf	(itoa@base+1)& (0+255),b
 15749  0004A8  0E0A               	movlw	10
 15750  0004AA  6F97               	movwf	itoa@base& (0+255),b
 15751  0004AC  EC4A  F030         	call	_itoa	;wreg free
 15752  0004B0  0100               	movlb	0	; () banked
 15753  0004B2  2BA6               	incf	Terminal@Index& (0+255),f,b
 15754  0004B4                     l2445:
 15755                           
 15756                           ; BSR set to: 0
 15757                           
 15758                           ; BSR set to: 0
 15759  0004B4  51A6               	movf	Terminal@Index& (0+255),w,b
 15760  0004B6  0102               	movlb	2	; () banked
 15761  0004B8  5DEF               	subwf	Terminal@PackageLen& (0+255),w,b
 15762  0004BA  B0D8               	btfsc	status,0,c
 15763  0004BC  D7DD               	goto	l2446
 15764  0004BE                     u14230:
 15765                           
 15766                           ; BSR set to: 2
 15767                           ;term.c: 646: }
 15768                           ;term.c: 647: }
 15769                           ;term.c: 650: if((cdc_trf_state == 0))
 15770                           
 15771                           ; BSR set to: 2
 15772                           
 15773                           ; BSR set to: 2
 15774  0004BE  0100               	movlb	0	; () banked
 15775  0004C0  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15776  0004C2  A4D8               	btfss	status,2,c
 15777  0004C4  0012               	return	
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;term.c: 651: {
 15781                           ;term.c: 653: if (FormatOption == 1u)
 15782  0004C6  0102               	movlb	2	; () banked
 15783  0004C8  05ED               	decf	Terminal@FormatOption& (0+255),w,b
 15784  0004CA  A4D8               	btfss	status,2,c
 15785  0004CC  D02B               	goto	l2449
 15786                           
 15787                           ; BSR set to: 2
 15788                           ;term.c: 654: {
 15789                           ;term.c: 655: Payload[(2*PackageLen)].Byte[3] = '\r';
 15790  0004CE  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15791  0004D0  0D08               	mullw	8
 15792  0004D2  0E03               	movlw	3
 15793  0004D4  26F3               	addwf	prodl,f,c
 15794  0004D6  0E00               	movlw	0
 15795  0004D8  22F4               	addwfc	prodh,f,c
 15796  0004DA  0E66               	movlw	low Terminal@Payload
 15797  0004DC  24F3               	addwf	prodl,w,c
 15798  0004DE  6ED9               	movwf	fsr2l,c
 15799  0004E0  0E07               	movlw	high Terminal@Payload
 15800  0004E2  20F4               	addwfc	prodh,w,c
 15801  0004E4  6EDA               	movwf	fsr2h,c
 15802  0004E6  0E0D               	movlw	13
 15803  0004E8  6EDF               	movwf	indf2,c
 15804                           
 15805                           ;term.c: 656: Payload[(2*PackageLen)].Byte[2] = '\n';
 15806  0004EA  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15807  0004EC  0D08               	mullw	8
 15808  0004EE  0E02               	movlw	2
 15809  0004F0  26F3               	addwf	prodl,f,c
 15810  0004F2  0E00               	movlw	0
 15811  0004F4  22F4               	addwfc	prodh,f,c
 15812  0004F6  0E66               	movlw	low Terminal@Payload
 15813  0004F8  24F3               	addwf	prodl,w,c
 15814  0004FA  6ED9               	movwf	fsr2l,c
 15815  0004FC  0E07               	movlw	high Terminal@Payload
 15816  0004FE  20F4               	addwfc	prodh,w,c
 15817  000500  6EDA               	movwf	fsr2h,c
 15818  000502  0E0A               	movlw	10
 15819  000504  6EDF               	movwf	indf2,c
 15820                           
 15821                           ; BSR set to: 2
 15822                           ;term.c: 658: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 15823  000506  0E66               	movlw	low Terminal@Payload
 15824  000508  0100               	movlb	0	; () banked
 15825  00050A  6F83               	movwf	putUSBUSART@data& (0+255),b
 15826  00050C  0E07               	movlw	high Terminal@Payload
 15827  00050E  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15828  000510  0102               	movlb	2	; () banked
 15829  000512  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15830  000514  0D02               	mullw	2
 15831  000516  50F3               	movf	prodl,w,c
 15832  000518  0F04               	addlw	4
 15833  00051A  0100               	movlb	0	; () banked
 15834  00051C  6F85               	movwf	putUSBUSART@length& (0+255),b
 15835  00051E  ECD0  F033         	call	_putUSBUSART	;wreg free
 15836                           
 15837                           ;term.c: 659: }
 15838  000522  D026               	goto	l2450
 15839  000524                     l2449:
 15840                           
 15841                           ;term.c: 660: else
 15842                           ;term.c: 661: {
 15843                           ;term.c: 662: TermRxBuffer[PackageLen] = '\r';
 15844  000524  0102               	movlb	2	; () banked
 15845  000526  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15846  000528  0D01               	mullw	1
 15847  00052A  0E40               	movlw	low Terminal@TermRxBuffer
 15848  00052C  24F3               	addwf	prodl,w,c
 15849  00052E  6ED9               	movwf	fsr2l,c
 15850  000530  0E05               	movlw	high Terminal@TermRxBuffer
 15851  000532  20F4               	addwfc	prodh,w,c
 15852  000534  6EDA               	movwf	fsr2h,c
 15853  000536  0E0D               	movlw	13
 15854  000538  6EDF               	movwf	indf2,c
 15855                           
 15856                           ; BSR set to: 2
 15857                           ;term.c: 663: TermRxBuffer[PackageLen + 1] = '\n';
 15858  00053A  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15859  00053C  0100               	movlb	0	; () banked
 15860  00053E  6FA2               	movwf	??_Terminal& (0+255),b
 15861  000540  6BA3               	clrf	(??_Terminal+1)& (0+255),b
 15862  000542  0E01               	movlw	1
 15863  000544  27A2               	addwf	??_Terminal& (0+255),f,b
 15864  000546  0E00               	movlw	0
 15865  000548  23A3               	addwfc	(??_Terminal+1)& (0+255),f,b
 15866  00054A  0E40               	movlw	low Terminal@TermRxBuffer
 15867  00054C  25A2               	addwf	??_Terminal& (0+255),w,b
 15868  00054E  6ED9               	movwf	fsr2l,c
 15869  000550  0E05               	movlw	high Terminal@TermRxBuffer
 15870  000552  21A3               	addwfc	(??_Terminal+1)& (0+255),w,b
 15871  000554  6EDA               	movwf	fsr2h,c
 15872  000556  0E0A               	movlw	10
 15873  000558  6EDF               	movwf	indf2,c
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;term.c: 665: putUSBUSART(TermRxBuffer,PackageLen + 2);
 15877  00055A  0E40               	movlw	low Terminal@TermRxBuffer
 15878  00055C  6F83               	movwf	putUSBUSART@data& (0+255),b
 15879  00055E  0E05               	movlw	high Terminal@TermRxBuffer
 15880  000560  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15881  000562  0102               	movlb	2	; () banked
 15882  000564  51EF               	movf	Terminal@PackageLen& (0+255),w,b
 15883  000566  0F02               	addlw	2
 15884  000568  0100               	movlb	0	; () banked
 15885  00056A  6F85               	movwf	putUSBUSART@length& (0+255),b
 15886  00056C  ECD0  F033         	call	_putUSBUSART	;wreg free
 15887  000570                     l2450:
 15888                           
 15889                           ;term.c: 666: }
 15890                           ;term.c: 668: TermState = Term_GetData;
 15891  000570  0E00               	movlw	0
 15892  000572  0102               	movlb	2	; () banked
 15893  000574  6FF0               	movwf	Terminal@TermState& (0+255),b
 15894                           
 15895                           ; BSR set to: 2
 15896                           ;term.c: 669: }
 15897                           ;term.c: 670: }
 15898  000576  0012               	return	
 15899  000578                     l2443:
 15900                           
 15901                           ;term.c: 671: else
 15902                           ;term.c: 672: {
 15903                           ;term.c: 674: if (OsTmr_Wait(&SwTimer,3000u) == DelayExpired)
 15904                           
 15905                           ; BSR set to: 2
 15906  000578  0ECA               	movlw	low Terminal@SwTimer
 15907  00057A  0100               	movlb	0	; () banked
 15908  00057C  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 15909  00057E  0E04               	movlw	high Terminal@SwTimer
 15910  000580  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 15911  000582  0EB8               	movlw	184
 15912  000584  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 15913  000586  0E0B               	movlw	11
 15914  000588  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 15915  00058A  0E00               	movlw	0
 15916  00058C  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 15917  00058E  0E00               	movlw	0
 15918  000590  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 15919  000592  EC40  F029         	call	_OsTmr_Wait	;wreg free
 15920  000596  06E8               	decf	wreg,f,c
 15921  000598  A4D8               	btfss	status,2,c
 15922  00059A  0012               	return	
 15923                           
 15924                           ;term.c: 675: {
 15925                           ;term.c: 677: if((cdc_trf_state == 0))
 15926  00059C  0100               	movlb	0	; () banked
 15927  00059E  51C8               	movf	_cdc_trf_state& (0+255),w,b
 15928  0005A0  A4D8               	btfss	status,2,c
 15929  0005A2  0012               	return	
 15930                           
 15931                           ; BSR set to: 0
 15932                           ;term.c: 678: {
 15933                           ;term.c: 679: strcpy(UsbTxBuffer," Lazy device...you've been timed-out!!!\r\n");
 15934  0005A4  0E00               	movlw	low Terminal@UsbTxBuffer
 15935  0005A6  6F7D               	movwf	strcpy@to& (0+255),b
 15936  0005A8  0E02               	movlw	high Terminal@UsbTxBuffer
 15937  0005AA  6F7E               	movwf	(strcpy@to+1)& (0+255),b
 15938  0005AC  0E5F               	movlw	low STR_21
 15939  0005AE  6F7F               	movwf	strcpy@from& (0+255),b
 15940  0005B0  0EFE               	movlw	high STR_21
 15941  0005B2  6F80               	movwf	(strcpy@from+1)& (0+255),b
 15942  0005B4  EC47  F032         	call	_strcpy	;wreg free
 15943                           
 15944                           ;term.c: 680: putUSBUSART(UsbTxBuffer,sizeof(" Lazy device...you've been timed-out!!!\r\
      +                          n")-1);
 15945  0005B8  0E00               	movlw	low Terminal@UsbTxBuffer
 15946  0005BA  0100               	movlb	0	; () banked
 15947  0005BC  6F83               	movwf	putUSBUSART@data& (0+255),b
 15948  0005BE  0E02               	movlw	high Terminal@UsbTxBuffer
 15949  0005C0  6F84               	movwf	(putUSBUSART@data+1)& (0+255),b
 15950  0005C2  0E29               	movlw	41
 15951  0005C4  6F85               	movwf	putUSBUSART@length& (0+255),b
 15952  0005C6  ECD0  F033         	call	_putUSBUSART	;wreg free
 15953                           
 15954                           ;term.c: 682: TermState = Term_GetData;
 15955  0005CA  0E00               	movlw	0
 15956  0005CC  0102               	movlb	2	; () banked
 15957  0005CE  6FF0               	movwf	Terminal@TermState& (0+255),b
 15958                           
 15959                           ; BSR set to: 2
 15960                           ;term.c: 693: }
 15961                           
 15962                           ; BSR set to: 2
 15963                           ;term.c: 692: break;
 15964                           
 15965                           ;term.c: 691: default:
 15966                           
 15967                           ; BSR set to: 2
 15968                           ;term.c: 689: break;
 15969                           
 15970                           ;term.c: 688: case Term_ReadSlvUartData:
 15971                           
 15972                           ; BSR set to: 2
 15973                           ;term.c: 683: }
 15974                           ;term.c: 684: }
 15975                           ;term.c: 685: }
 15976                           ;term.c: 686: break;
 15977                           
 15978                           ; BSR set to: 2
 15979                           
 15980                           ; BSR set to: 2
 15981  0005D0  0012               	return	
 15982  0005D2                     l2404:
 15983                           
 15984                           ; BSR set to: 2
 15985  0005D2  0102               	movlb	2	; () banked
 15986  0005D4  51F0               	movf	Terminal@TermState& (0+255),w,b
 15987                           
 15988                           ; Switch size 1, requested type "space"
 15989                           ; Number of cases is 4, Range of values is 0 to 3
 15990                           ; switch strategies available:
 15991                           ; Name         Instructions Cycles
 15992                           ; simple_byte           13     7 (average)
 15993                           ;	Chosen strategy is simple_byte
 15994  0005D6  0A00               	xorlw	0	; case 0
 15995  0005D8  B4D8               	btfsc	status,2,c
 15996  0005DA  D583               	goto	l2405
 15997  0005DC  0A01               	xorlw	1	; case 1
 15998  0005DE  B4D8               	btfsc	status,2,c
 15999  0005E0  D71E               	goto	l2440
 16000  0005E2  0A03               	xorlw	3	; case 2
 16001  0005E4  B4D8               	btfsc	status,2,c
 16002  0005E6  D73B               	goto	l2442
 16003  0005E8  0A01               	xorlw	1	; case 3
 16004  0005EA  0012               	return	
 16005  0005EC                     __end_of_Terminal:
 16006                           	opt stack 0
 16007                           tosu	equ	0xFFF
 16008                           tosh	equ	0xFFE
 16009                           tosl	equ	0xFFD
 16010                           pclath	equ	0xFFA
 16011                           tblptru	equ	0xFF8
 16012                           tblptrh	equ	0xFF7
 16013                           tblptrl	equ	0xFF6
 16014                           tablat	equ	0xFF5
 16015                           prodh	equ	0xFF4
 16016                           prodl	equ	0xFF3
 16017                           intcon	equ	0xFF2
 16018                           intcon2	equ	0xFF1
 16019                           intcon3	equ	0xFF0
 16020                           indf0	equ	0xFEF
 16021                           postinc0	equ	0xFEE
 16022                           plusw0	equ	0xFEB
 16023                           fsr0h	equ	0xFEA
 16024                           fsr0l	equ	0xFE9
 16025                           wreg	equ	0xFE8
 16026                           indf1	equ	0xFE7
 16027                           postinc1	equ	0xFE6
 16028                           postdec1	equ	0xFE5
 16029                           fsr1h	equ	0xFE2
 16030                           fsr1l	equ	0xFE1
 16031                           indf2	equ	0xFDF
 16032                           postinc2	equ	0xFDE
 16033                           postdec2	equ	0xFDD
 16034                           plusw2	equ	0xFDB
 16035                           fsr2h	equ	0xFDA
 16036                           fsr2l	equ	0xFD9
 16037                           status	equ	0xFD8
 16038                           
 16039 ;; *************** function _xtoi *****************
 16040 ;; Defined at:
 16041 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/xtoi.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 16044 ;;		 -> Terminal@Addr(4), 
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;  val             2   40[BANK0 ] unsigned int 
 16047 ;;  c               1   42[BANK0 ] unsigned char 
 16048 ;;  sign            1   39[BANK0 ] unsigned char 
 16049 ;; Return value:  Size  Location     Type
 16050 ;;                  2   35[BANK0 ] unsigned int 
 16051 ;; Registers used:
 16052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16053 ;; Tracked objects:
 16054 ;;		On entry : 0/0
 16055 ;;		On exit  : 0/0
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16059 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16061 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16062 ;;Total ram usage:        8 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:   13
 16065 ;; This function calls:
 16066 ;;		_isdigit
 16067 ;;		_isspace
 16068 ;;		_isupper
 16069 ;;		_isxdigit
 16070 ;;		_tolower
 16071 ;; This function is called by:
 16072 ;;		_Terminal
 16073 ;; This function uses a non-reentrant model
 16074 ;;
 16075                           
 16076                           	psect	text61
 16077  0034F8                     __ptext61:
 16078                           	opt stack 0
 16079  0034F8                     _xtoi:
 16080                           	opt stack 12
 16081                           
 16082                           ;incstack = 0
 16083  0034F8  0E00               	movlw	0
 16084  0034FA  0100               	movlb	0	; () banked
 16085  0034FC  6F87               	movwf	xtoi@sign& (0+255),b
 16086  0034FE  0E00               	movlw	0
 16087  003500  6F89               	movwf	(xtoi@val+1)& (0+255),b
 16088  003502  0E00               	movlw	0
 16089  003504  6F88               	movwf	xtoi@val& (0+255),b
 16090  003506  D003               	goto	l3573
 16091  003508                     
 16092                           ; BSR set to: 0
 16093  003508  0100               	movlb	0	; () banked
 16094  00350A  4B83               	infsnz	xtoi@s& (0+255),f,b
 16095  00350C  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16096  00350E                     l3573:
 16097                           
 16098                           ; BSR set to: 0
 16099                           
 16100                           ; BSR set to: 0
 16101  00350E  C083  FFD9         	movff	xtoi@s,fsr2l
 16102  003512  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16103  003516  50DF               	movf	indf2,w,c
 16104  003518  EC19  F033         	call	_isspace
 16105  00351C  B0D8               	btfsc	status,0,c
 16106  00351E  D7F4               	goto	l3574
 16107  003520  C083  FFD9         	movff	xtoi@s,fsr2l
 16108  003524  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16109  003528  0E2D               	movlw	45
 16110  00352A  18DE               	xorwf	postinc2,w,c
 16111  00352C  A4D8               	btfss	status,2,c
 16112  00352E  D003               	goto	l3576
 16113  003530  0100               	movlb	0	; () banked
 16114  003532  2B87               	incf	xtoi@sign& (0+255),f,b
 16115  003534  D009               	goto	L15
 16116  003536                     l3576:
 16117                           
 16118                           ; BSR set to: 0
 16119  003536  C083  FFD9         	movff	xtoi@s,fsr2l
 16120  00353A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16121  00353E  0E2B               	movlw	43
 16122  003540  18DE               	xorwf	postinc2,w,c
 16123  003542  A4D8               	btfss	status,2,c
 16124  003544  D028               	goto	l3579
 16125  003546  0100               	movlb	0	; () banked
 16126  003548                     L15:
 16127  003548  4B83               	infsnz	xtoi@s& (0+255),f,b
 16128  00354A  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16129                           
 16130                           ; BSR set to: 0
 16131                           
 16132                           ; BSR set to: 0
 16133  00354C  D024               	goto	l3579
 16134  00354E                     
 16135                           ; BSR set to: 0
 16136  00354E  0100               	movlb	0	; () banked
 16137  003550  518A               	movf	xtoi@c& (0+255),w,b
 16138  003552  ECBF  F033         	call	_isupper
 16139  003556  A0D8               	btfss	status,0,c
 16140  003558  D006               	goto	l3581
 16141  00355A  0100               	movlb	0	; () banked
 16142  00355C  518A               	movf	xtoi@c& (0+255),w,b
 16143  00355E  ECB0  F034         	call	_tolower
 16144  003562  0100               	movlb	0	; () banked
 16145  003564  6F8A               	movwf	xtoi@c& (0+255),b
 16146  003566                     l3581:
 16147  003566  0100               	movlb	0	; () banked
 16148  003568  518A               	movf	xtoi@c& (0+255),w,b
 16149  00356A  ECE1  F033         	call	_isdigit
 16150  00356E  A0D8               	btfss	status,0,c
 16151  003570  D002               	goto	l3582
 16152  003572  0E30               	movlw	48
 16153  003574  D001               	goto	L14
 16154  003576                     l3582:
 16155                           
 16156                           ; BSR set to: 0
 16157  003576  0E57               	movlw	87
 16158  003578                     L14:
 16159  003578  0100               	movlb	0	; () banked
 16160  00357A  5F8A               	subwf	xtoi@c& (0+255),f,b
 16161                           
 16162                           ; BSR set to: 0
 16163  00357C  3B88               	swapf	xtoi@val& (0+255),f,b
 16164  00357E  3B89               	swapf	(xtoi@val+1)& (0+255),f,b
 16165  003580  0EF0               	movlw	240
 16166  003582  1789               	andwf	(xtoi@val+1)& (0+255),f,b
 16167  003584  5188               	movf	xtoi@val& (0+255),w,b
 16168  003586  0B0F               	andlw	15
 16169  003588  1389               	iorwf	(xtoi@val+1)& (0+255),f,b
 16170  00358A  0EF0               	movlw	240
 16171  00358C  1788               	andwf	xtoi@val& (0+255),f,b
 16172  00358E  518A               	movf	xtoi@c& (0+255),w,b
 16173  003590  2788               	addwf	xtoi@val& (0+255),f,b
 16174  003592  0E00               	movlw	0
 16175  003594  2389               	addwfc	(xtoi@val+1)& (0+255),f,b
 16176  003596                     l3579:
 16177                           
 16178                           ; BSR set to: 0
 16179  003596  C083  FFD9         	movff	xtoi@s,fsr2l
 16180  00359A  C084  FFDA         	movff	xtoi@s+1,fsr2h
 16181  00359E  0100               	movlb	0	; () banked
 16182  0035A0  4B83               	infsnz	xtoi@s& (0+255),f,b
 16183  0035A2  2B84               	incf	(xtoi@s+1)& (0+255),f,b
 16184  0035A4  50DF               	movf	indf2,w,c
 16185  0035A6  6F8A               	movwf	xtoi@c& (0+255),b
 16186  0035A8  518A               	movf	xtoi@c& (0+255),w,b
 16187  0035AA  EC6B  F031         	call	_isxdigit
 16188  0035AE  B0D8               	btfsc	status,0,c
 16189  0035B0  D7CE               	goto	l3580
 16190  0035B2  0100               	movlb	0	; () banked
 16191  0035B4  5187               	movf	xtoi@sign& (0+255),w,b
 16192  0035B6  B4D8               	btfsc	status,2,c
 16193  0035B8  D00D               	goto	l3585
 16194                           
 16195                           ; BSR set to: 0
 16196  0035BA  C088  F085         	movff	xtoi@val,??_xtoi
 16197  0035BE  C089  F086         	movff	xtoi@val+1,??_xtoi+1
 16198  0035C2  1F85               	comf	??_xtoi& (0+255),f,b
 16199  0035C4  1F86               	comf	(??_xtoi+1)& (0+255),f,b
 16200  0035C6  4B85               	infsnz	??_xtoi& (0+255),f,b
 16201  0035C8  2B86               	incf	(??_xtoi+1)& (0+255),f,b
 16202  0035CA  C085  F083         	movff	??_xtoi,?_xtoi
 16203  0035CE  C086  F084         	movff	??_xtoi+1,?_xtoi+1
 16204  0035D2  0012               	return	
 16205  0035D4                     l3585:
 16206                           
 16207                           ; BSR set to: 0
 16208  0035D4  C088  F083         	movff	xtoi@val,?_xtoi
 16209  0035D8  C089  F084         	movff	xtoi@val+1,?_xtoi+1
 16210                           
 16211                           ; BSR set to: 0
 16212  0035DC  0012               	return		;funcret
 16213  0035DE                     __end_of_xtoi:
 16214                           	opt stack 0
 16215                           tosu	equ	0xFFF
 16216                           tosh	equ	0xFFE
 16217                           tosl	equ	0xFFD
 16218                           pclath	equ	0xFFA
 16219                           tblptru	equ	0xFF8
 16220                           tblptrh	equ	0xFF7
 16221                           tblptrl	equ	0xFF6
 16222                           tablat	equ	0xFF5
 16223                           prodh	equ	0xFF4
 16224                           prodl	equ	0xFF3
 16225                           intcon	equ	0xFF2
 16226                           intcon2	equ	0xFF1
 16227                           intcon3	equ	0xFF0
 16228                           indf0	equ	0xFEF
 16229                           postinc0	equ	0xFEE
 16230                           plusw0	equ	0xFEB
 16231                           fsr0h	equ	0xFEA
 16232                           fsr0l	equ	0xFE9
 16233                           wreg	equ	0xFE8
 16234                           indf1	equ	0xFE7
 16235                           postinc1	equ	0xFE6
 16236                           postdec1	equ	0xFE5
 16237                           fsr1h	equ	0xFE2
 16238                           fsr1l	equ	0xFE1
 16239                           indf2	equ	0xFDF
 16240                           postinc2	equ	0xFDE
 16241                           postdec2	equ	0xFDD
 16242                           plusw2	equ	0xFDB
 16243                           fsr2h	equ	0xFDA
 16244                           fsr2l	equ	0xFD9
 16245                           status	equ	0xFD8
 16246                           
 16247 ;; *************** function _tolower *****************
 16248 ;; Defined at:
 16249 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/tolower.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;  c               1    wreg     unsigned char 
 16252 ;; Auto vars:     Size  Location     Type
 16253 ;;  c               1   29[BANK0 ] unsigned char 
 16254 ;; Return value:  Size  Location     Type
 16255 ;;                  1    wreg      unsigned char 
 16256 ;; Registers used:
 16257 ;;		wreg, status,2, status,0
 16258 ;; Tracked objects:
 16259 ;;		On entry : 0/0
 16260 ;;		On exit  : 0/0
 16261 ;;		Unchanged: 0/0
 16262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16266 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16267 ;;Total ram usage:        1 bytes
 16268 ;; Hardware stack levels used:    1
 16269 ;; Hardware stack levels required when called:   11
 16270 ;; This function calls:
 16271 ;;		Nothing
 16272 ;; This function is called by:
 16273 ;;		_xtoi
 16274 ;; This function uses a non-reentrant model
 16275 ;;
 16276                           
 16277                           	psect	text62
 16278  006960                     __ptext62:
 16279                           	opt stack 0
 16280  006960                     _tolower:
 16281                           	opt stack 13
 16282                           
 16283                           ; BSR set to: 0
 16284                           ;incstack = 0
 16285                           ;tolower@c stored from wreg
 16286  006960  0100               	movlb	0	; () banked
 16287  006962  6F7D               	movwf	tolower@c& (0+255),b
 16288  006964  0E5B               	movlw	91
 16289  006966  0100               	movlb	0	; () banked
 16290  006968  617D               	cpfslt	tolower@c& (0+255),b
 16291  00696A  D004               	goto	l3632
 16292                           
 16293                           ; BSR set to: 0
 16294  00696C  0E40               	movlw	64
 16295  00696E  657D               	cpfsgt	tolower@c& (0+255),b
 16296  006970  D001               	goto	l3632
 16297                           
 16298                           ; BSR set to: 0
 16299  006972  8B7D               	bsf	tolower@c& (0+255),5,b
 16300  006974                     l3632:
 16301                           
 16302                           ; BSR set to: 0
 16303                           
 16304                           ; BSR set to: 0
 16305  006974  517D               	movf	tolower@c& (0+255),w,b
 16306  006976  0012               	return	
 16307  006978                     __end_of_tolower:
 16308                           	opt stack 0
 16309                           tosu	equ	0xFFF
 16310                           tosh	equ	0xFFE
 16311                           tosl	equ	0xFFD
 16312                           pclath	equ	0xFFA
 16313                           tblptru	equ	0xFF8
 16314                           tblptrh	equ	0xFF7
 16315                           tblptrl	equ	0xFF6
 16316                           tablat	equ	0xFF5
 16317                           prodh	equ	0xFF4
 16318                           prodl	equ	0xFF3
 16319                           intcon	equ	0xFF2
 16320                           intcon2	equ	0xFF1
 16321                           intcon3	equ	0xFF0
 16322                           indf0	equ	0xFEF
 16323                           postinc0	equ	0xFEE
 16324                           plusw0	equ	0xFEB
 16325                           fsr0h	equ	0xFEA
 16326                           fsr0l	equ	0xFE9
 16327                           wreg	equ	0xFE8
 16328                           indf1	equ	0xFE7
 16329                           postinc1	equ	0xFE6
 16330                           postdec1	equ	0xFE5
 16331                           fsr1h	equ	0xFE2
 16332                           fsr1l	equ	0xFE1
 16333                           indf2	equ	0xFDF
 16334                           postinc2	equ	0xFDE
 16335                           postdec2	equ	0xFDD
 16336                           plusw2	equ	0xFDB
 16337                           fsr2h	equ	0xFDA
 16338                           fsr2l	equ	0xFD9
 16339                           status	equ	0xFD8
 16340                           
 16341 ;; *************** function _isxdigit *****************
 16342 ;; Defined at:
 16343 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isxdigit.c"
 16344 ;; Parameters:    Size  Location     Type
 16345 ;;  c               1    wreg     unsigned char 
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;  c               1   34[BANK0 ] unsigned char 
 16348 ;; Return value:  Size  Location     Type
 16349 ;;		None               void
 16350 ;; Registers used:
 16351 ;;		wreg, status,2, status,0, cstack
 16352 ;; Tracked objects:
 16353 ;;		On entry : 0/0
 16354 ;;		On exit  : 0/0
 16355 ;;		Unchanged: 0/0
 16356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16360 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16361 ;;Total ram usage:        3 bytes
 16362 ;; Hardware stack levels used:    1
 16363 ;; Hardware stack levels required when called:   12
 16364 ;; This function calls:
 16365 ;;		_isdigit
 16366 ;; This function is called by:
 16367 ;;		_xtoi
 16368 ;; This function uses a non-reentrant model
 16369 ;;
 16370                           
 16371                           	psect	text63
 16372  0062D6                     __ptext63:
 16373                           	opt stack 0
 16374  0062D6                     _isxdigit:
 16375                           	opt stack 12
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;incstack = 0
 16379                           ;isxdigit@c stored from wreg
 16380  0062D6  0100               	movlb	0	; () banked
 16381  0062D8  6F82               	movwf	isxdigit@c& (0+255),b
 16382  0062DA  0E01               	movlw	1
 16383  0062DC  0100               	movlb	0	; () banked
 16384  0062DE  6F81               	movwf	_isxdigit$6694& (0+255),b
 16385                           
 16386                           ; BSR set to: 0
 16387  0062E0  0E67               	movlw	103
 16388  0062E2  6182               	cpfslt	isxdigit@c& (0+255),b
 16389  0062E4  D003               	goto	u12550
 16390                           
 16391                           ; BSR set to: 0
 16392  0062E6  0E61               	movlw	97
 16393  0062E8  6182               	cpfslt	isxdigit@c& (0+255),b
 16394  0062EA  D00E               	goto	l3628
 16395  0062EC                     u12550:
 16396                           
 16397                           ; BSR set to: 0
 16398                           
 16399                           ; BSR set to: 0
 16400  0062EC  0E47               	movlw	71
 16401  0062EE  6182               	cpfslt	isxdigit@c& (0+255),b
 16402  0062F0  D003               	goto	u12570
 16403                           
 16404                           ; BSR set to: 0
 16405  0062F2  0E41               	movlw	65
 16406  0062F4  6182               	cpfslt	isxdigit@c& (0+255),b
 16407  0062F6  D008               	goto	l3628
 16408  0062F8                     u12570:
 16409                           
 16410                           ; BSR set to: 0
 16411                           
 16412                           ; BSR set to: 0
 16413  0062F8  5182               	movf	isxdigit@c& (0+255),w,b
 16414  0062FA  ECE1  F033         	call	_isdigit
 16415  0062FE  B0D8               	btfsc	status,0,c
 16416  006300  D003               	goto	l3628
 16417  006302  0E00               	movlw	0
 16418  006304  0100               	movlb	0	; () banked
 16419  006306  6F81               	movwf	_isxdigit$6694& (0+255),b
 16420  006308                     l3628:
 16421                           
 16422                           ; BSR set to: 0
 16423  006308  C081  F080         	movff	_isxdigit$6694,??_isxdigit
 16424  00630C  0100               	movlb	0	; () banked
 16425  00630E  3180               	rrcf	??_isxdigit& (0+255),w,b
 16426  006310  0012               	return	
 16427  006312                     __end_of_isxdigit:
 16428                           	opt stack 0
 16429                           tosu	equ	0xFFF
 16430                           tosh	equ	0xFFE
 16431                           tosl	equ	0xFFD
 16432                           pclath	equ	0xFFA
 16433                           tblptru	equ	0xFF8
 16434                           tblptrh	equ	0xFF7
 16435                           tblptrl	equ	0xFF6
 16436                           tablat	equ	0xFF5
 16437                           prodh	equ	0xFF4
 16438                           prodl	equ	0xFF3
 16439                           intcon	equ	0xFF2
 16440                           intcon2	equ	0xFF1
 16441                           intcon3	equ	0xFF0
 16442                           indf0	equ	0xFEF
 16443                           postinc0	equ	0xFEE
 16444                           plusw0	equ	0xFEB
 16445                           fsr0h	equ	0xFEA
 16446                           fsr0l	equ	0xFE9
 16447                           wreg	equ	0xFE8
 16448                           indf1	equ	0xFE7
 16449                           postinc1	equ	0xFE6
 16450                           postdec1	equ	0xFE5
 16451                           fsr1h	equ	0xFE2
 16452                           fsr1l	equ	0xFE1
 16453                           indf2	equ	0xFDF
 16454                           postinc2	equ	0xFDE
 16455                           postdec2	equ	0xFDD
 16456                           plusw2	equ	0xFDB
 16457                           fsr2h	equ	0xFDA
 16458                           fsr2l	equ	0xFD9
 16459                           status	equ	0xFD8
 16460                           
 16461 ;; *************** function _strtol *****************
 16462 ;; Defined at:
 16463 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/strtol.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  s               2   41[BANK0 ] PTR const unsigned char 
 16466 ;;		 -> Terminal@Payload(80), 
 16467 ;;  endptr          2   43[BANK0 ] PTR PTR unsigned char 
 16468 ;;		 -> NULL(0), 
 16469 ;;  base            2   45[BANK0 ] int 
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;  a               4   52[BANK0 ] long 
 16472 ;;  c               1   56[BANK0 ] unsigned char 
 16473 ;;  sign            1   51[BANK0 ] unsigned char 
 16474 ;; Return value:  Size  Location     Type
 16475 ;;                  4   41[BANK0 ] long 
 16476 ;; Registers used:
 16477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16478 ;; Tracked objects:
 16479 ;;		On entry : 0/0
 16480 ;;		On exit  : 0/0
 16481 ;;		Unchanged: 0/0
 16482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16483 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16484 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16485 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16486 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16487 ;;Total ram usage:       16 bytes
 16488 ;; Hardware stack levels used:    1
 16489 ;; Hardware stack levels required when called:   13
 16490 ;; This function calls:
 16491 ;;		___lmul
 16492 ;;		_isalpha
 16493 ;;		_isdigit
 16494 ;;		_isspace
 16495 ;;		_toupper
 16496 ;; This function is called by:
 16497 ;;		_Terminal
 16498 ;; This function uses a non-reentrant model
 16499 ;;
 16500                           
 16501                           	psect	text64
 16502  00181C                     __ptext64:
 16503                           	opt stack 0
 16504  00181C                     _strtol:
 16505                           	opt stack 12
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;incstack = 0
 16509  00181C  C089  FFD9         	movff	strtol@s,fsr2l
 16510  001820  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16511  001824  50DF               	movf	indf2,w,c
 16512  001826  0100               	movlb	0	; () banked
 16513  001828  6F98               	movwf	strtol@c& (0+255),b
 16514                           
 16515                           ; BSR set to: 0
 16516  00182A  4B89               	infsnz	strtol@s& (0+255),f,b
 16517  00182C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16518                           
 16519                           ; BSR set to: 0
 16520  00182E  5198               	movf	strtol@c& (0+255),w,b
 16521  001830  EC19  F033         	call	_isspace
 16522  001834  B0D8               	btfsc	status,0,c
 16523  001836  D7F2               	goto	_strtol
 16524  001838  0E00               	movlw	0
 16525  00183A  0100               	movlb	0	; () banked
 16526  00183C  6F94               	movwf	strtol@a& (0+255),b
 16527  00183E  0E00               	movlw	0
 16528  001840  6F95               	movwf	(strtol@a+1)& (0+255),b
 16529  001842  0E00               	movlw	0
 16530  001844  6F96               	movwf	(strtol@a+2)& (0+255),b
 16531  001846  0E00               	movlw	0
 16532  001848  6F97               	movwf	(strtol@a+3)& (0+255),b
 16533  00184A  0E00               	movlw	0
 16534  00184C  6F93               	movwf	strtol@sign& (0+255),b
 16535                           
 16536                           ; BSR set to: 0
 16537  00184E  0E2D               	movlw	45
 16538  001850  1998               	xorwf	strtol@c& (0+255),w,b
 16539  001852  A4D8               	btfss	status,2,c
 16540  001854  D003               	goto	l3535
 16541                           
 16542                           ; BSR set to: 0
 16543  001856  0E01               	movlw	1
 16544  001858  6F93               	movwf	strtol@sign& (0+255),b
 16545  00185A  D004               	goto	u13060
 16546  00185C                     l3535:
 16547                           
 16548                           ; BSR set to: 0
 16549                           
 16550                           ; BSR set to: 0
 16551  00185C  0E2B               	movlw	43
 16552  00185E  1998               	xorwf	strtol@c& (0+255),w,b
 16553  001860  A4D8               	btfss	status,2,c
 16554  001862  D008               	goto	l3537
 16555  001864                     u13060:
 16556                           
 16557                           ; BSR set to: 0
 16558  001864  C089  FFD9         	movff	strtol@s,fsr2l
 16559  001868  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16560  00186C  50DF               	movf	indf2,w,c
 16561  00186E  6F98               	movwf	strtol@c& (0+255),b
 16562                           
 16563                           ; BSR set to: 0
 16564  001870  4B89               	infsnz	strtol@s& (0+255),f,b
 16565  001872  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16566  001874                     l3537:
 16567                           
 16568                           ; BSR set to: 0
 16569                           
 16570                           ; BSR set to: 0
 16571                           
 16572                           ; BSR set to: 0
 16573  001874  0E30               	movlw	48
 16574  001876  1998               	xorwf	strtol@c& (0+255),w,b
 16575  001878  A4D8               	btfss	status,2,c
 16576  00187A  D02E               	goto	l3545
 16577                           
 16578                           ; BSR set to: 0
 16579  00187C  C089  FFD9         	movff	strtol@s,fsr2l
 16580  001880  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16581  001884  50DF               	movf	indf2,w,c
 16582  001886  6F98               	movwf	strtol@c& (0+255),b
 16583                           
 16584                           ; BSR set to: 0
 16585  001888  4B89               	infsnz	strtol@s& (0+255),f,b
 16586  00188A  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16587                           
 16588                           ; BSR set to: 0
 16589  00188C  518D               	movf	strtol@base& (0+255),w,b
 16590  00188E  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16591  001890  B4D8               	btfsc	status,2,c
 16592  001892  D005               	goto	u13090
 16593                           
 16594                           ; BSR set to: 0
 16595  001894  0E10               	movlw	16
 16596  001896  198D               	xorwf	strtol@base& (0+255),w,b
 16597  001898  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16598  00189A  A4D8               	btfss	status,2,c
 16599  00189C  D015               	goto	l3539
 16600  00189E                     u13090:
 16601                           
 16602                           ; BSR set to: 0
 16603                           
 16604                           ; BSR set to: 0
 16605  00189E  0E78               	movlw	120
 16606  0018A0  1998               	xorwf	strtol@c& (0+255),w,b
 16607  0018A2  B4D8               	btfsc	status,2,c
 16608  0018A4  D004               	goto	u13110
 16609                           
 16610                           ; BSR set to: 0
 16611  0018A6  0E58               	movlw	88
 16612  0018A8  1998               	xorwf	strtol@c& (0+255),w,b
 16613  0018AA  A4D8               	btfss	status,2,c
 16614  0018AC  D00D               	goto	l3539
 16615  0018AE                     u13110:
 16616                           
 16617                           ; BSR set to: 0
 16618                           
 16619                           ; BSR set to: 0
 16620  0018AE  0E00               	movlw	0
 16621  0018B0  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16622  0018B2  0E10               	movlw	16
 16623  0018B4  6F8D               	movwf	strtol@base& (0+255),b
 16624                           
 16625                           ; BSR set to: 0
 16626  0018B6  C089  FFD9         	movff	strtol@s,fsr2l
 16627  0018BA  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16628  0018BE  50DF               	movf	indf2,w,c
 16629  0018C0  6F98               	movwf	strtol@c& (0+255),b
 16630                           
 16631                           ; BSR set to: 0
 16632  0018C2  4B89               	infsnz	strtol@s& (0+255),f,b
 16633  0018C4  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16634  0018C6  D008               	goto	l3545
 16635  0018C8                     l3539:
 16636                           
 16637                           ; BSR set to: 0
 16638                           
 16639                           ; BSR set to: 0
 16640  0018C8  518D               	movf	strtol@base& (0+255),w,b
 16641  0018CA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16642  0018CC  A4D8               	btfss	status,2,c
 16643  0018CE  D004               	goto	l3545
 16644                           
 16645                           ; BSR set to: 0
 16646  0018D0  0E00               	movlw	0
 16647  0018D2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16648  0018D4  0E08               	movlw	8
 16649  0018D6  6F8D               	movwf	strtol@base& (0+255),b
 16650  0018D8                     l3545:
 16651                           
 16652                           ; BSR set to: 0
 16653                           
 16654                           ; BSR set to: 0
 16655                           
 16656                           ; BSR set to: 0
 16657                           
 16658                           ; BSR set to: 0
 16659  0018D8  518D               	movf	strtol@base& (0+255),w,b
 16660  0018DA  118E               	iorwf	(strtol@base+1)& (0+255),w,b
 16661  0018DC  A4D8               	btfss	status,2,c
 16662  0018DE  D004               	goto	l3546
 16663                           
 16664                           ; BSR set to: 0
 16665  0018E0  0E00               	movlw	0
 16666  0018E2  6F8E               	movwf	(strtol@base+1)& (0+255),b
 16667  0018E4  0E0A               	movlw	10
 16668  0018E6  6F8D               	movwf	strtol@base& (0+255),b
 16669  0018E8                     l3546:
 16670                           
 16671                           ; BSR set to: 0
 16672                           
 16673                           ; BSR set to: 0
 16674                           
 16675                           ; BSR set to: 0
 16676  0018E8  5198               	movf	strtol@c& (0+255),w,b
 16677  0018EA  EC90  F032         	call	_isalpha
 16678  0018EE  A0D8               	btfss	status,0,c
 16679  0018F0  D008               	goto	l3548
 16680  0018F2  0100               	movlb	0	; () banked
 16681  0018F4  5198               	movf	strtol@c& (0+255),w,b
 16682  0018F6  ECBC  F034         	call	_toupper
 16683  0018FA  0FC9               	addlw	201
 16684  0018FC  0100               	movlb	0	; () banked
 16685  0018FE  6F98               	movwf	strtol@c& (0+255),b
 16686  001900  D009               	goto	l3551
 16687  001902                     l3548:
 16688                           
 16689                           ; BSR set to: 0
 16690  001902  0100               	movlb	0	; () banked
 16691  001904  5198               	movf	strtol@c& (0+255),w,b
 16692  001906  ECE1  F033         	call	_isdigit
 16693  00190A  A0D8               	btfss	status,0,c
 16694  00190C  D039               	goto	l3552
 16695  00190E  0E30               	movlw	48
 16696  001910  0100               	movlb	0	; () banked
 16697  001912  5F98               	subwf	strtol@c& (0+255),f,b
 16698  001914                     l3551:
 16699                           
 16700                           ; BSR set to: 0
 16701                           
 16702                           ; BSR set to: 0
 16703                           
 16704                           ; BSR set to: 0
 16705  001914  5198               	movf	strtol@c& (0+255),w,b
 16706  001916  6F8F               	movwf	??_strtol& (0+255),b
 16707  001918  6B90               	clrf	(??_strtol+1)& (0+255),b
 16708  00191A  518D               	movf	strtol@base& (0+255),w,b
 16709  00191C  5D8F               	subwf	??_strtol& (0+255),w,b
 16710  00191E  5190               	movf	(??_strtol+1)& (0+255),w,b
 16711  001920  0A80               	xorlw	128
 16712  001922  6F91               	movwf	(??_strtol+2)& (0+255),b
 16713  001924  518E               	movf	(strtol@base+1)& (0+255),w,b
 16714  001926  0A80               	xorlw	128
 16715  001928  5991               	subwfb	(??_strtol+2)& (0+255),w,b
 16716  00192A  B0D8               	btfsc	status,0,c
 16717  00192C  D029               	goto	l3552
 16718                           
 16719                           ; BSR set to: 0
 16720                           
 16721                           ; BSR set to: 0
 16722                           
 16723                           ; BSR set to: 0
 16724  00192E  C08D  F07D         	movff	strtol@base,___lmul@multiplier
 16725  001932  C08E  F07E         	movff	strtol@base+1,___lmul@multiplier+1
 16726  001936  0E00               	movlw	0
 16727  001938  BF7E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 16728  00193A  0EFF               	movlw	-1
 16729  00193C  6F7F               	movwf	(___lmul@multiplier+2)& (0+255),b
 16730  00193E  6F80               	movwf	(___lmul@multiplier+3)& (0+255),b
 16731  001940  C094  F081         	movff	strtol@a,___lmul@multiplicand
 16732  001944  C095  F082         	movff	strtol@a+1,___lmul@multiplicand+1
 16733  001948  C096  F083         	movff	strtol@a+2,___lmul@multiplicand+2
 16734  00194C  C097  F084         	movff	strtol@a+3,___lmul@multiplicand+3
 16735  001950  ECBA  F02C         	call	___lmul	;wreg free
 16736  001954  0100               	movlb	0	; () banked
 16737  001956  5198               	movf	strtol@c& (0+255),w,b
 16738  001958  257D               	addwf	?___lmul& (0+255),w,b
 16739  00195A  6F94               	movwf	strtol@a& (0+255),b
 16740  00195C  0E00               	movlw	0
 16741  00195E  217E               	addwfc	(?___lmul+1)& (0+255),w,b
 16742  001960  6F95               	movwf	(strtol@a+1)& (0+255),b
 16743  001962  0E00               	movlw	0
 16744  001964  217F               	addwfc	(?___lmul+2)& (0+255),w,b
 16745  001966  6F96               	movwf	(strtol@a+2)& (0+255),b
 16746  001968  0E00               	movlw	0
 16747  00196A  2180               	addwfc	(?___lmul+3)& (0+255),w,b
 16748  00196C  6F97               	movwf	(strtol@a+3)& (0+255),b
 16749                           
 16750                           ; BSR set to: 0
 16751  00196E  C089  FFD9         	movff	strtol@s,fsr2l
 16752  001972  C08A  FFDA         	movff	strtol@s+1,fsr2h
 16753  001976  50DF               	movf	indf2,w,c
 16754  001978  6F98               	movwf	strtol@c& (0+255),b
 16755                           
 16756                           ; BSR set to: 0
 16757  00197A  4B89               	infsnz	strtol@s& (0+255),f,b
 16758  00197C  2B8A               	incf	(strtol@s+1)& (0+255),f,b
 16759  00197E  D7B4               	goto	l3546
 16760  001980                     l3552:
 16761                           
 16762                           ; BSR set to: 0
 16763  001980  0100               	movlb	0	; () banked
 16764  001982  518B               	movf	strtol@endptr& (0+255),w,b
 16765  001984  118C               	iorwf	(strtol@endptr+1)& (0+255),w,b
 16766  001986  B4D8               	btfsc	status,2,c
 16767  001988  D00E               	goto	l3554
 16768                           
 16769                           ; BSR set to: 0
 16770  00198A  0EFF               	movlw	255
 16771  00198C  2589               	addwf	strtol@s& (0+255),w,b
 16772  00198E  6F8F               	movwf	??_strtol& (0+255),b
 16773  001990  0EFF               	movlw	255
 16774  001992  218A               	addwfc	(strtol@s+1)& (0+255),w,b
 16775  001994  6F90               	movwf	(??_strtol+1)& (0+255),b
 16776  001996  C08B  FFD9         	movff	strtol@endptr,fsr2l
 16777  00199A  C08C  FFDA         	movff	strtol@endptr+1,fsr2h
 16778  00199E  C08F  FFDE         	movff	??_strtol,postinc2
 16779  0019A2  C090  FFDD         	movff	??_strtol+1,postdec2
 16780  0019A6                     l3554:
 16781                           
 16782                           ; BSR set to: 0
 16783                           
 16784                           ; BSR set to: 0
 16785  0019A6  5193               	movf	strtol@sign& (0+255),w,b
 16786  0019A8  B4D8               	btfsc	status,2,c
 16787  0019AA  D01A               	goto	l3555
 16788                           
 16789                           ; BSR set to: 0
 16790  0019AC  C094  F08F         	movff	strtol@a,??_strtol
 16791  0019B0  C095  F090         	movff	strtol@a+1,??_strtol+1
 16792  0019B4  C096  F091         	movff	strtol@a+2,??_strtol+2
 16793  0019B8  C097  F092         	movff	strtol@a+3,??_strtol+3
 16794  0019BC  1F8F               	comf	??_strtol& (0+255),f,b
 16795  0019BE  1F90               	comf	(??_strtol+1)& (0+255),f,b
 16796  0019C0  1F91               	comf	(??_strtol+2)& (0+255),f,b
 16797  0019C2  1F92               	comf	(??_strtol+3)& (0+255),f,b
 16798  0019C4  2B8F               	incf	??_strtol& (0+255),f,b
 16799  0019C6  0E00               	movlw	0
 16800  0019C8  2390               	addwfc	(??_strtol+1)& (0+255),f,b
 16801  0019CA  2391               	addwfc	(??_strtol+2)& (0+255),f,b
 16802  0019CC  2392               	addwfc	(??_strtol+3)& (0+255),f,b
 16803  0019CE  C08F  F089         	movff	??_strtol,?_strtol
 16804  0019D2  C090  F08A         	movff	??_strtol+1,?_strtol+1
 16805  0019D6  C091  F08B         	movff	??_strtol+2,?_strtol+2
 16806  0019DA  C092  F08C         	movff	??_strtol+3,?_strtol+3
 16807                           
 16808                           ; BSR set to: 0
 16809  0019DE  0012               	return	
 16810  0019E0                     l3555:
 16811                           
 16812                           ; BSR set to: 0
 16813  0019E0  C094  F089         	movff	strtol@a,?_strtol
 16814  0019E4  C095  F08A         	movff	strtol@a+1,?_strtol+1
 16815  0019E8  C096  F08B         	movff	strtol@a+2,?_strtol+2
 16816  0019EC  C097  F08C         	movff	strtol@a+3,?_strtol+3
 16817                           
 16818                           ; BSR set to: 0
 16819  0019F0  0012               	return		;funcret
 16820  0019F2                     __end_of_strtol:
 16821                           	opt stack 0
 16822                           tosu	equ	0xFFF
 16823                           tosh	equ	0xFFE
 16824                           tosl	equ	0xFFD
 16825                           pclath	equ	0xFFA
 16826                           tblptru	equ	0xFF8
 16827                           tblptrh	equ	0xFF7
 16828                           tblptrl	equ	0xFF6
 16829                           tablat	equ	0xFF5
 16830                           prodh	equ	0xFF4
 16831                           prodl	equ	0xFF3
 16832                           intcon	equ	0xFF2
 16833                           intcon2	equ	0xFF1
 16834                           intcon3	equ	0xFF0
 16835                           indf0	equ	0xFEF
 16836                           postinc0	equ	0xFEE
 16837                           plusw0	equ	0xFEB
 16838                           fsr0h	equ	0xFEA
 16839                           fsr0l	equ	0xFE9
 16840                           wreg	equ	0xFE8
 16841                           indf1	equ	0xFE7
 16842                           postinc1	equ	0xFE6
 16843                           postdec1	equ	0xFE5
 16844                           fsr1h	equ	0xFE2
 16845                           fsr1l	equ	0xFE1
 16846                           indf2	equ	0xFDF
 16847                           postinc2	equ	0xFDE
 16848                           postdec2	equ	0xFDD
 16849                           plusw2	equ	0xFDB
 16850                           fsr2h	equ	0xFDA
 16851                           fsr2l	equ	0xFD9
 16852                           status	equ	0xFD8
 16853                           
 16854 ;; *************** function _toupper *****************
 16855 ;; Defined at:
 16856 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/toupper.c"
 16857 ;; Parameters:    Size  Location     Type
 16858 ;;  c               1    wreg     unsigned char 
 16859 ;; Auto vars:     Size  Location     Type
 16860 ;;  c               1   29[BANK0 ] unsigned char 
 16861 ;; Return value:  Size  Location     Type
 16862 ;;                  1    wreg      unsigned char 
 16863 ;; Registers used:
 16864 ;;		wreg, status,2, status,0
 16865 ;; Tracked objects:
 16866 ;;		On entry : 0/0
 16867 ;;		On exit  : 0/0
 16868 ;;		Unchanged: 0/0
 16869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16874 ;;Total ram usage:        1 bytes
 16875 ;; Hardware stack levels used:    1
 16876 ;; Hardware stack levels required when called:   11
 16877 ;; This function calls:
 16878 ;;		Nothing
 16879 ;; This function is called by:
 16880 ;;		_strtol
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           	psect	text65
 16885  006978                     __ptext65:
 16886                           	opt stack 0
 16887  006978                     _toupper:
 16888                           	opt stack 13
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;incstack = 0
 16892                           ;toupper@c stored from wreg
 16893  006978  0100               	movlb	0	; () banked
 16894  00697A  6F7D               	movwf	toupper@c& (0+255),b
 16895  00697C  0E7B               	movlw	123
 16896  00697E  0100               	movlb	0	; () banked
 16897  006980  617D               	cpfslt	toupper@c& (0+255),b
 16898  006982  D004               	goto	l3559
 16899                           
 16900                           ; BSR set to: 0
 16901  006984  0E60               	movlw	96
 16902  006986  657D               	cpfsgt	toupper@c& (0+255),b
 16903  006988  D001               	goto	l3559
 16904                           
 16905                           ; BSR set to: 0
 16906  00698A  9B7D               	bcf	toupper@c& (0+255),5,b
 16907  00698C                     l3559:
 16908                           
 16909                           ; BSR set to: 0
 16910                           
 16911                           ; BSR set to: 0
 16912  00698C  517D               	movf	toupper@c& (0+255),w,b
 16913  00698E  0012               	return	
 16914  006990                     __end_of_toupper:
 16915                           	opt stack 0
 16916                           tosu	equ	0xFFF
 16917                           tosh	equ	0xFFE
 16918                           tosl	equ	0xFFD
 16919                           pclath	equ	0xFFA
 16920                           tblptru	equ	0xFF8
 16921                           tblptrh	equ	0xFF7
 16922                           tblptrl	equ	0xFF6
 16923                           tablat	equ	0xFF5
 16924                           prodh	equ	0xFF4
 16925                           prodl	equ	0xFF3
 16926                           intcon	equ	0xFF2
 16927                           intcon2	equ	0xFF1
 16928                           intcon3	equ	0xFF0
 16929                           indf0	equ	0xFEF
 16930                           postinc0	equ	0xFEE
 16931                           plusw0	equ	0xFEB
 16932                           fsr0h	equ	0xFEA
 16933                           fsr0l	equ	0xFE9
 16934                           wreg	equ	0xFE8
 16935                           indf1	equ	0xFE7
 16936                           postinc1	equ	0xFE6
 16937                           postdec1	equ	0xFE5
 16938                           fsr1h	equ	0xFE2
 16939                           fsr1l	equ	0xFE1
 16940                           indf2	equ	0xFDF
 16941                           postinc2	equ	0xFDE
 16942                           postdec2	equ	0xFDD
 16943                           plusw2	equ	0xFDB
 16944                           fsr2h	equ	0xFDA
 16945                           fsr2l	equ	0xFD9
 16946                           status	equ	0xFD8
 16947                           
 16948 ;; *************** function _isspace *****************
 16949 ;; Defined at:
 16950 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isspace.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;  c               1    wreg     unsigned char 
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;  c               1   31[BANK0 ] unsigned char 
 16955 ;; Return value:  Size  Location     Type
 16956 ;;		None               void
 16957 ;; Registers used:
 16958 ;;		wreg, status,2, status,0
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16968 ;;Total ram usage:        3 bytes
 16969 ;; Hardware stack levels used:    1
 16970 ;; Hardware stack levels required when called:   11
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_strtol
 16975 ;;		_xtoi
 16976 ;; This function uses a non-reentrant model
 16977 ;;
 16978                           
 16979                           	psect	text66
 16980  006632                     __ptext66:
 16981                           	opt stack 0
 16982  006632                     _isspace:
 16983                           	opt stack 13
 16984                           
 16985                           ; BSR set to: 0
 16986                           ;incstack = 0
 16987                           ;isspace@c stored from wreg
 16988  006632  0100               	movlb	0	; () banked
 16989  006634  6F7F               	movwf	isspace@c& (0+255),b
 16990  006636  0E01               	movlw	1
 16991  006638  0100               	movlb	0	; () banked
 16992  00663A  6F7E               	movwf	_isspace$6687& (0+255),b
 16993                           
 16994                           ; BSR set to: 0
 16995  00663C  0E20               	movlw	32
 16996  00663E  197F               	xorwf	isspace@c& (0+255),w,b
 16997  006640  B4D8               	btfsc	status,2,c
 16998  006642  D008               	goto	l3616
 16999                           
 17000                           ; BSR set to: 0
 17001  006644  0E0E               	movlw	14
 17002  006646  617F               	cpfslt	isspace@c& (0+255),b
 17003  006648  D003               	goto	u12460
 17004                           
 17005                           ; BSR set to: 0
 17006  00664A  0E09               	movlw	9
 17007  00664C  617F               	cpfslt	isspace@c& (0+255),b
 17008  00664E  D002               	goto	l3616
 17009  006650                     u12460:
 17010                           
 17011                           ; BSR set to: 0
 17012                           
 17013                           ; BSR set to: 0
 17014  006650  0E00               	movlw	0
 17015  006652  6F7E               	movwf	_isspace$6687& (0+255),b
 17016  006654                     l3616:
 17017                           
 17018                           ; BSR set to: 0
 17019                           
 17020                           ; BSR set to: 0
 17021  006654  C07E  F07D         	movff	_isspace$6687,??_isspace
 17022  006658  317D               	rrcf	??_isspace& (0+255),w,b
 17023  00665A  0012               	return	
 17024  00665C                     __end_of_isspace:
 17025                           	opt stack 0
 17026                           tosu	equ	0xFFF
 17027                           tosh	equ	0xFFE
 17028                           tosl	equ	0xFFD
 17029                           pclath	equ	0xFFA
 17030                           tblptru	equ	0xFF8
 17031                           tblptrh	equ	0xFF7
 17032                           tblptrl	equ	0xFF6
 17033                           tablat	equ	0xFF5
 17034                           prodh	equ	0xFF4
 17035                           prodl	equ	0xFF3
 17036                           intcon	equ	0xFF2
 17037                           intcon2	equ	0xFF1
 17038                           intcon3	equ	0xFF0
 17039                           indf0	equ	0xFEF
 17040                           postinc0	equ	0xFEE
 17041                           plusw0	equ	0xFEB
 17042                           fsr0h	equ	0xFEA
 17043                           fsr0l	equ	0xFE9
 17044                           wreg	equ	0xFE8
 17045                           indf1	equ	0xFE7
 17046                           postinc1	equ	0xFE6
 17047                           postdec1	equ	0xFE5
 17048                           fsr1h	equ	0xFE2
 17049                           fsr1l	equ	0xFE1
 17050                           indf2	equ	0xFDF
 17051                           postinc2	equ	0xFDE
 17052                           postdec2	equ	0xFDD
 17053                           plusw2	equ	0xFDB
 17054                           fsr2h	equ	0xFDA
 17055                           fsr2l	equ	0xFD9
 17056                           status	equ	0xFD8
 17057                           
 17058 ;; *************** function _isalpha *****************
 17059 ;; Defined at:
 17060 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isalpha.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;  c               1    wreg     unsigned char 
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;  c               1   34[BANK0 ] unsigned char 
 17065 ;; Return value:  Size  Location     Type
 17066 ;;		None               void
 17067 ;; Registers used:
 17068 ;;		wreg, status,2, status,0, cstack
 17069 ;; Tracked objects:
 17070 ;;		On entry : 0/0
 17071 ;;		On exit  : 0/0
 17072 ;;		Unchanged: 0/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17078 ;;Total ram usage:        3 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:   12
 17081 ;; This function calls:
 17082 ;;		_isupper
 17083 ;; This function is called by:
 17084 ;;		_strtol
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text67
 17089  006520                     __ptext67:
 17090                           	opt stack 0
 17091  006520                     _isalpha:
 17092                           	opt stack 12
 17093                           
 17094                           ; BSR set to: 0
 17095                           ;incstack = 0
 17096                           ;isalpha@c stored from wreg
 17097  006520  0100               	movlb	0	; () banked
 17098  006522  6F82               	movwf	isalpha@c& (0+255),b
 17099  006524  0E01               	movlw	1
 17100  006526  0100               	movlb	0	; () banked
 17101  006528  6F81               	movwf	_isalpha$6684& (0+255),b
 17102                           
 17103                           ; BSR set to: 0
 17104  00652A  0E7B               	movlw	123
 17105  00652C  6182               	cpfslt	isalpha@c& (0+255),b
 17106  00652E  D003               	goto	u12480
 17107                           
 17108                           ; BSR set to: 0
 17109  006530  0E61               	movlw	97
 17110  006532  6182               	cpfslt	isalpha@c& (0+255),b
 17111  006534  D008               	goto	l3611
 17112  006536                     u12480:
 17113                           
 17114                           ; BSR set to: 0
 17115                           
 17116                           ; BSR set to: 0
 17117  006536  5182               	movf	isalpha@c& (0+255),w,b
 17118  006538  ECBF  F033         	call	_isupper
 17119  00653C  B0D8               	btfsc	status,0,c
 17120  00653E  D003               	goto	l3611
 17121  006540  0E00               	movlw	0
 17122  006542  0100               	movlb	0	; () banked
 17123  006544  6F81               	movwf	_isalpha$6684& (0+255),b
 17124  006546                     l3611:
 17125                           
 17126                           ; BSR set to: 0
 17127  006546  C081  F080         	movff	_isalpha$6684,??_isalpha
 17128  00654A  0100               	movlb	0	; () banked
 17129  00654C  3180               	rrcf	??_isalpha& (0+255),w,b
 17130  00654E  0012               	return	
 17131  006550                     __end_of_isalpha:
 17132                           	opt stack 0
 17133                           tosu	equ	0xFFF
 17134                           tosh	equ	0xFFE
 17135                           tosl	equ	0xFFD
 17136                           pclath	equ	0xFFA
 17137                           tblptru	equ	0xFF8
 17138                           tblptrh	equ	0xFF7
 17139                           tblptrl	equ	0xFF6
 17140                           tablat	equ	0xFF5
 17141                           prodh	equ	0xFF4
 17142                           prodl	equ	0xFF3
 17143                           intcon	equ	0xFF2
 17144                           intcon2	equ	0xFF1
 17145                           intcon3	equ	0xFF0
 17146                           indf0	equ	0xFEF
 17147                           postinc0	equ	0xFEE
 17148                           plusw0	equ	0xFEB
 17149                           fsr0h	equ	0xFEA
 17150                           fsr0l	equ	0xFE9
 17151                           wreg	equ	0xFE8
 17152                           indf1	equ	0xFE7
 17153                           postinc1	equ	0xFE6
 17154                           postdec1	equ	0xFE5
 17155                           fsr1h	equ	0xFE2
 17156                           fsr1l	equ	0xFE1
 17157                           indf2	equ	0xFDF
 17158                           postinc2	equ	0xFDE
 17159                           postdec2	equ	0xFDD
 17160                           plusw2	equ	0xFDB
 17161                           fsr2h	equ	0xFDA
 17162                           fsr2l	equ	0xFD9
 17163                           status	equ	0xFD8
 17164                           
 17165 ;; *************** function _isupper *****************
 17166 ;; Defined at:
 17167 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isupper.c"
 17168 ;; Parameters:    Size  Location     Type
 17169 ;;  c               1    wreg     unsigned char 
 17170 ;; Auto vars:     Size  Location     Type
 17171 ;;  c               1   31[BANK0 ] unsigned char 
 17172 ;; Return value:  Size  Location     Type
 17173 ;;		None               void
 17174 ;; Registers used:
 17175 ;;		wreg, status,2, status,0
 17176 ;; Tracked objects:
 17177 ;;		On entry : 0/0
 17178 ;;		On exit  : 0/0
 17179 ;;		Unchanged: 0/0
 17180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17185 ;;Total ram usage:        3 bytes
 17186 ;; Hardware stack levels used:    1
 17187 ;; Hardware stack levels required when called:   11
 17188 ;; This function calls:
 17189 ;;		Nothing
 17190 ;; This function is called by:
 17191 ;;		_xtoi
 17192 ;;		_isalpha
 17193 ;; This function uses a non-reentrant model
 17194 ;;
 17195                           
 17196                           	psect	text68
 17197  00677E                     __ptext68:
 17198                           	opt stack 0
 17199  00677E                     _isupper:
 17200                           	opt stack 13
 17201                           
 17202                           ; BSR set to: 0
 17203                           ;incstack = 0
 17204                           ;isupper@c stored from wreg
 17205  00677E  0100               	movlb	0	; () banked
 17206  006780  6F7F               	movwf	isupper@c& (0+255),b
 17207  006782  0E00               	movlw	0
 17208  006784  0100               	movlb	0	; () banked
 17209  006786  6F7E               	movwf	_isupper$6690& (0+255),b
 17210                           
 17211                           ; BSR set to: 0
 17212  006788  0E5B               	movlw	91
 17213  00678A  617F               	cpfslt	isupper@c& (0+255),b
 17214  00678C  D005               	goto	l3621
 17215                           
 17216                           ; BSR set to: 0
 17217  00678E  0E40               	movlw	64
 17218  006790  657F               	cpfsgt	isupper@c& (0+255),b
 17219  006792  D002               	goto	l3621
 17220                           
 17221                           ; BSR set to: 0
 17222  006794  0E01               	movlw	1
 17223  006796  6F7E               	movwf	_isupper$6690& (0+255),b
 17224  006798                     l3621:
 17225                           
 17226                           ; BSR set to: 0
 17227                           
 17228                           ; BSR set to: 0
 17229  006798  C07E  F07D         	movff	_isupper$6690,??_isupper
 17230  00679C  317D               	rrcf	??_isupper& (0+255),w,b
 17231  00679E  0012               	return	
 17232  0067A0                     __end_of_isupper:
 17233                           	opt stack 0
 17234                           tosu	equ	0xFFF
 17235                           tosh	equ	0xFFE
 17236                           tosl	equ	0xFFD
 17237                           pclath	equ	0xFFA
 17238                           tblptru	equ	0xFF8
 17239                           tblptrh	equ	0xFF7
 17240                           tblptrl	equ	0xFF6
 17241                           tablat	equ	0xFF5
 17242                           prodh	equ	0xFF4
 17243                           prodl	equ	0xFF3
 17244                           intcon	equ	0xFF2
 17245                           intcon2	equ	0xFF1
 17246                           intcon3	equ	0xFF0
 17247                           indf0	equ	0xFEF
 17248                           postinc0	equ	0xFEE
 17249                           plusw0	equ	0xFEB
 17250                           fsr0h	equ	0xFEA
 17251                           fsr0l	equ	0xFE9
 17252                           wreg	equ	0xFE8
 17253                           indf1	equ	0xFE7
 17254                           postinc1	equ	0xFE6
 17255                           postdec1	equ	0xFE5
 17256                           fsr1h	equ	0xFE2
 17257                           fsr1l	equ	0xFE1
 17258                           indf2	equ	0xFDF
 17259                           postinc2	equ	0xFDE
 17260                           postdec2	equ	0xFDD
 17261                           plusw2	equ	0xFDB
 17262                           fsr2h	equ	0xFDA
 17263                           fsr2l	equ	0xFD9
 17264                           status	equ	0xFD8
 17265                           
 17266 ;; *************** function _strcpy *****************
 17267 ;; Defined at:
 17268 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/strcpy.c"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;  to              2   29[BANK0 ] PTR unsigned char 
 17271 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17272 ;;  from            2   31[BANK0 ] PTR const unsigned char 
 17273 ;;		 -> STR_23(20), STR_21(42), 
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;  cp              2   33[BANK0 ] PTR unsigned char 
 17276 ;;		 -> Term_MainSm@Data(50), Terminal@UsbTxBuffer(200), 
 17277 ;; Return value:  Size  Location     Type
 17278 ;;                  2   29[BANK0 ] PTR unsigned char 
 17279 ;; Registers used:
 17280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17281 ;; Tracked objects:
 17282 ;;		On entry : 0/0
 17283 ;;		On exit  : 0/0
 17284 ;;		Unchanged: 0/0
 17285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17287 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17290 ;;Total ram usage:        6 bytes
 17291 ;; Hardware stack levels used:    1
 17292 ;; Hardware stack levels required when called:   11
 17293 ;; This function calls:
 17294 ;;		Nothing
 17295 ;; This function is called by:
 17296 ;;		_Terminal
 17297 ;;		_Term_MainSm
 17298 ;; This function uses a non-reentrant model
 17299 ;;
 17300                           
 17301                           	psect	text69
 17302  00648E                     __ptext69:
 17303                           	opt stack 0
 17304  00648E                     _strcpy:
 17305                           	opt stack 15
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;incstack = 0
 17309  00648E  C07D  F081         	movff	strcpy@to,strcpy@cp
 17310  006492  C07E  F082         	movff	strcpy@to+1,strcpy@cp+1
 17311  006496  D005               	goto	l3513
 17312  006498  0100               	movlb	0	; () banked
 17313  00649A  4B81               	infsnz	strcpy@cp& (0+255),f,b
 17314  00649C  2B82               	incf	(strcpy@cp+1)& (0+255),f,b
 17315  00649E  4B7F               	infsnz	strcpy@from& (0+255),f,b
 17316  0064A0  2B80               	incf	(strcpy@from+1)& (0+255),f,b
 17317  0064A2                     l3513:
 17318                           
 17319                           ; BSR set to: 0
 17320  0064A2  C07F  FFF6         	movff	strcpy@from,tblptrl
 17321  0064A6  C080  FFF7         	movff	strcpy@from+1,tblptrh
 17322  0064AA                     	if	0	;tblptru may be non-zero
 17323  0064AA                     	endif
 17324  0064AA                     	if	0	;tblptru may be non-zero
 17325  0064AA                     	endif
 17326  0064AA  C081  FFD9         	movff	strcpy@cp,fsr2l
 17327  0064AE  C082  FFDA         	movff	strcpy@cp+1,fsr2h
 17328  0064B2  0008               	tblrd		*
 17329  0064B4  CFF5 FFDF          	movff	tablat,indf2
 17330  0064B8  50DF               	movf	indf2,w,c
 17331  0064BA  B4D8               	btfsc	status,2,c
 17332  0064BC  0012               	return	
 17333  0064BE  D7EC               	goto	l3514
 17334  0064C0                     __end_of_strcpy:
 17335                           	opt stack 0
 17336                           tosu	equ	0xFFF
 17337                           tosh	equ	0xFFE
 17338                           tosl	equ	0xFFD
 17339                           pclath	equ	0xFFA
 17340                           tblptru	equ	0xFF8
 17341                           tblptrh	equ	0xFF7
 17342                           tblptrl	equ	0xFF6
 17343                           tablat	equ	0xFF5
 17344                           prodh	equ	0xFF4
 17345                           prodl	equ	0xFF3
 17346                           intcon	equ	0xFF2
 17347                           intcon2	equ	0xFF1
 17348                           intcon3	equ	0xFF0
 17349                           indf0	equ	0xFEF
 17350                           postinc0	equ	0xFEE
 17351                           plusw0	equ	0xFEB
 17352                           fsr0h	equ	0xFEA
 17353                           fsr0l	equ	0xFE9
 17354                           wreg	equ	0xFE8
 17355                           indf1	equ	0xFE7
 17356                           postinc1	equ	0xFE6
 17357                           postdec1	equ	0xFE5
 17358                           fsr1h	equ	0xFE2
 17359                           fsr1l	equ	0xFE1
 17360                           indf2	equ	0xFDF
 17361                           postinc2	equ	0xFDE
 17362                           postdec2	equ	0xFDD
 17363                           plusw2	equ	0xFDB
 17364                           fsr2h	equ	0xFDA
 17365                           fsr2l	equ	0xFD9
 17366                           status	equ	0xFD8
 17367                           
 17368 ;; *************** function _putUSBUSART *****************
 17369 ;; Defined at:
 17370 ;;		line 559 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17371 ;; Parameters:    Size  Location     Type
 17372 ;;  data            2   35[BANK0 ] PTR unsigned char 
 17373 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(240), Welcome(137), 
 17374 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 17375 ;;		 -> RxBuffer(400), 
 17376 ;;  length          1   37[BANK0 ] unsigned char 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;		None
 17379 ;; Return value:  Size  Location     Type
 17380 ;;                  1    wreg      void 
 17381 ;; Registers used:
 17382 ;;		wreg, status,2, status,0
 17383 ;; Tracked objects:
 17384 ;;		On entry : 0/0
 17385 ;;		On exit  : 0/0
 17386 ;;		Unchanged: 0/0
 17387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17388 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17391 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17392 ;;Total ram usage:        3 bytes
 17393 ;; Hardware stack levels used:    1
 17394 ;; Hardware stack levels required when called:   11
 17395 ;; This function calls:
 17396 ;;		Nothing
 17397 ;; This function is called by:
 17398 ;;		_Terminal
 17399 ;;		_Term_MainSm
 17400 ;;		_GsmGprsTerminal
 17401 ;; This function uses a non-reentrant model
 17402 ;;
 17403                           
 17404                           	psect	text70
 17405  0067A0                     __ptext70:
 17406                           	opt stack 0
 17407  0067A0                     _putUSBUSART:
 17408                           	opt stack 15
 17409                           
 17410                           ;usb_device_cdc.c: 584: ;
 17411                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 17412                           
 17413                           ;incstack = 0
 17414  0067A0  0100               	movlb	0	; () banked
 17415  0067A2  51C8               	movf	_cdc_trf_state& (0+255),w,b
 17416  0067A4  A4D8               	btfss	status,2,c
 17417  0067A6  0012               	return	
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;usb_device_cdc.c: 586: {
 17421                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 17422  0067A8  C083  F2CB         	movff	putUSBUSART@data,_pCDCSrc
 17423  0067AC  C084  F2CC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 17424                           
 17425                           ; BSR set to: 0
 17426  0067B0  C085  F0C7         	movff	putUSBUSART@length,_cdc_tx_len
 17427                           
 17428                           ; BSR set to: 0
 17429  0067B4  0E01               	movlw	1
 17430  0067B6  0101               	movlb	1	; () banked
 17431  0067B8  6FDD               	movwf	_cdc_mem_type& (0+255),b
 17432                           
 17433                           ; BSR set to: 1
 17434  0067BA  0E01               	movlw	1
 17435  0067BC  0100               	movlb	0	; () banked
 17436  0067BE  6FC8               	movwf	_cdc_trf_state& (0+255),b
 17437  0067C0  0012               	return	
 17438  0067C2                     __end_of_putUSBUSART:
 17439                           	opt stack 0
 17440                           tosu	equ	0xFFF
 17441                           tosh	equ	0xFFE
 17442                           tosl	equ	0xFFD
 17443                           pclath	equ	0xFFA
 17444                           tblptru	equ	0xFF8
 17445                           tblptrh	equ	0xFF7
 17446                           tblptrl	equ	0xFF6
 17447                           tablat	equ	0xFF5
 17448                           prodh	equ	0xFF4
 17449                           prodl	equ	0xFF3
 17450                           intcon	equ	0xFF2
 17451                           intcon2	equ	0xFF1
 17452                           intcon3	equ	0xFF0
 17453                           indf0	equ	0xFEF
 17454                           postinc0	equ	0xFEE
 17455                           plusw0	equ	0xFEB
 17456                           fsr0h	equ	0xFEA
 17457                           fsr0l	equ	0xFE9
 17458                           wreg	equ	0xFE8
 17459                           indf1	equ	0xFE7
 17460                           postinc1	equ	0xFE6
 17461                           postdec1	equ	0xFE5
 17462                           fsr1h	equ	0xFE2
 17463                           fsr1l	equ	0xFE1
 17464                           indf2	equ	0xFDF
 17465                           postinc2	equ	0xFDE
 17466                           postdec2	equ	0xFDD
 17467                           plusw2	equ	0xFDB
 17468                           fsr2h	equ	0xFDA
 17469                           fsr2l	equ	0xFD9
 17470                           status	equ	0xFD8
 17471                           
 17472 ;; *************** function _itoa *****************
 17473 ;; Defined at:
 17474 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;  buf             2   51[BANK0 ] PTR unsigned char 
 17477 ;;		 -> Terminal@Payload(80), 
 17478 ;;  val             2   53[BANK0 ] int 
 17479 ;;  base            2   55[BANK0 ] int 
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;  cp              2   57[BANK0 ] PTR unsigned char 
 17482 ;;		 -> Terminal@Payload(80), 
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  2   51[BANK0 ] PTR unsigned char 
 17485 ;; Registers used:
 17486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17492 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17495 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17496 ;;Total ram usage:        8 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:   13
 17499 ;; This function calls:
 17500 ;;		_utoa
 17501 ;; This function is called by:
 17502 ;;		_Terminal
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           	psect	text71
 17507  006094                     __ptext71:
 17508                           	opt stack 0
 17509  006094                     _itoa:
 17510                           	opt stack 12
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;incstack = 0
 17514  006094  C093  F099         	movff	itoa@buf,itoa@cp
 17515  006098  C094  F09A         	movff	itoa@buf+1,itoa@cp+1
 17516  00609C  0100               	movlb	0	; () banked
 17517  00609E  AF96               	btfss	(itoa@val+1)& (0+255),7,b
 17518  0060A0  D00C               	goto	l3261
 17519                           
 17520                           ; BSR set to: 0
 17521  0060A2  C093  FFD9         	movff	itoa@buf,fsr2l
 17522  0060A6  C094  FFDA         	movff	itoa@buf+1,fsr2h
 17523  0060AA  0E2D               	movlw	45
 17524  0060AC  6EDF               	movwf	indf2,c
 17525                           
 17526                           ; BSR set to: 0
 17527  0060AE  4B93               	infsnz	itoa@buf& (0+255),f,b
 17528  0060B0  2B94               	incf	(itoa@buf+1)& (0+255),f,b
 17529                           
 17530                           ; BSR set to: 0
 17531  0060B2  6D95               	negf	itoa@val& (0+255),b
 17532  0060B4  1F96               	comf	(itoa@val+1)& (0+255),f,b
 17533  0060B6  B0D8               	btfsc	status,0,c
 17534  0060B8  2B96               	incf	(itoa@val+1)& (0+255),f,b
 17535  0060BA                     l3261:
 17536                           
 17537                           ; BSR set to: 0
 17538                           
 17539                           ; BSR set to: 0
 17540  0060BA  C093  F08A         	movff	itoa@buf,utoa@buf
 17541  0060BE  C094  F08B         	movff	itoa@buf+1,utoa@buf+1
 17542  0060C2  C095  F08C         	movff	itoa@val,utoa@val
 17543  0060C6  C096  F08D         	movff	itoa@val+1,utoa@val+1
 17544  0060CA  C097  F08E         	movff	itoa@base,utoa@base
 17545  0060CE  C098  F08F         	movff	itoa@base+1,utoa@base+1
 17546  0060D2  ECC3  F022         	call	_utoa	;wreg free
 17547  0060D6  0012               	return	
 17548  0060D8                     __end_of_itoa:
 17549                           	opt stack 0
 17550                           tosu	equ	0xFFF
 17551                           tosh	equ	0xFFE
 17552                           tosl	equ	0xFFD
 17553                           pclath	equ	0xFFA
 17554                           tblptru	equ	0xFF8
 17555                           tblptrh	equ	0xFF7
 17556                           tblptrl	equ	0xFF6
 17557                           tablat	equ	0xFF5
 17558                           prodh	equ	0xFF4
 17559                           prodl	equ	0xFF3
 17560                           intcon	equ	0xFF2
 17561                           intcon2	equ	0xFF1
 17562                           intcon3	equ	0xFF0
 17563                           indf0	equ	0xFEF
 17564                           postinc0	equ	0xFEE
 17565                           plusw0	equ	0xFEB
 17566                           fsr0h	equ	0xFEA
 17567                           fsr0l	equ	0xFE9
 17568                           wreg	equ	0xFE8
 17569                           indf1	equ	0xFE7
 17570                           postinc1	equ	0xFE6
 17571                           postdec1	equ	0xFE5
 17572                           fsr1h	equ	0xFE2
 17573                           fsr1l	equ	0xFE1
 17574                           indf2	equ	0xFDF
 17575                           postinc2	equ	0xFDE
 17576                           postdec2	equ	0xFDD
 17577                           plusw2	equ	0xFDB
 17578                           fsr2h	equ	0xFDA
 17579                           fsr2l	equ	0xFD9
 17580                           status	equ	0xFD8
 17581                           
 17582 ;; *************** function _utoa *****************
 17583 ;; Defined at:
 17584 ;;		line 17 in file "/opt/microchip/xc8/v1.45/sources/common/itoa.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 17587 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 17588 ;;  val             2   44[BANK0 ] unsigned int 
 17589 ;;  base            2   46[BANK0 ] int 
 17590 ;; Auto vars:     Size  Location     Type
 17591 ;;  v               2   48[BANK0 ] unsigned int 
 17592 ;;  c               1   50[BANK0 ] unsigned char 
 17593 ;; Return value:  Size  Location     Type
 17594 ;;                  2   42[BANK0 ] PTR unsigned char 
 17595 ;; Registers used:
 17596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17597 ;; Tracked objects:
 17598 ;;		On entry : 0/0
 17599 ;;		On exit  : 0/0
 17600 ;;		Unchanged: 0/0
 17601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17602 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17603 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17605 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17606 ;;Total ram usage:        9 bytes
 17607 ;; Hardware stack levels used:    1
 17608 ;; Hardware stack levels required when called:   12
 17609 ;; This function calls:
 17610 ;;		___lwdiv
 17611 ;;		___lwmod
 17612 ;; This function is called by:
 17613 ;;		_Term_MainSm
 17614 ;;		_itoa
 17615 ;; This function uses a non-reentrant model
 17616 ;;
 17617                           
 17618                           	psect	text72
 17619  004586                     __ptext72:
 17620                           	opt stack 0
 17621  004586                     _utoa:
 17622                           	opt stack 14
 17623                           
 17624                           ;incstack = 0
 17625  004586  C08C  F090         	movff	utoa@val,utoa@v
 17626  00458A  C08D  F091         	movff	utoa@val+1,utoa@v+1
 17627  00458E  C090  F083         	movff	utoa@v,___lwdiv@dividend
 17628  004592  C091  F084         	movff	utoa@v+1,___lwdiv@dividend+1
 17629  004596  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17630  00459A  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17631  00459E  ECE6  F02D         	call	___lwdiv	;wreg free
 17632  0045A2  C083  F090         	movff	?___lwdiv,utoa@v
 17633  0045A6  C084  F091         	movff	?___lwdiv+1,utoa@v+1
 17634  0045AA  0100               	movlb	0	; () banked
 17635  0045AC  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17636  0045AE  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17637                           
 17638                           ; BSR set to: 0
 17639  0045B0  5190               	movf	utoa@v& (0+255),w,b
 17640  0045B2  1191               	iorwf	(utoa@v+1)& (0+255),w,b
 17641  0045B4  A4D8               	btfss	status,2,c
 17642  0045B6  D7EB               	goto	l3265
 17643                           
 17644                           ; BSR set to: 0
 17645                           
 17646                           ; BSR set to: 0
 17647  0045B8  C08A  FFD9         	movff	utoa@buf,fsr2l
 17648  0045BC  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17649  0045C0  0E00               	movlw	0
 17650  0045C2  6EDF               	movwf	indf2,c
 17651                           
 17652                           ; BSR set to: 0
 17653  0045C4  078A               	decf	utoa@buf& (0+255),f,b
 17654  0045C6  A0D8               	btfss	status,0,c
 17655  0045C8  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17656  0045CA                     
 17657                           ; BSR set to: 0
 17658                           
 17659                           ; BSR set to: 0
 17660  0045CA  C08C  F07D         	movff	utoa@val,___lwmod@dividend
 17661  0045CE  C08D  F07E         	movff	utoa@val+1,___lwmod@dividend+1
 17662  0045D2  C08E  F07F         	movff	utoa@base,___lwmod@divisor
 17663  0045D6  C08F  F080         	movff	utoa@base+1,___lwmod@divisor+1
 17664  0045DA  EC6C  F030         	call	___lwmod	;wreg free
 17665  0045DE  0100               	movlb	0	; () banked
 17666  0045E0  517D               	movf	?___lwmod& (0+255),w,b
 17667  0045E2  6F92               	movwf	utoa@c& (0+255),b
 17668                           
 17669                           ; BSR set to: 0
 17670  0045E4  C08C  F083         	movff	utoa@val,___lwdiv@dividend
 17671  0045E8  C08D  F084         	movff	utoa@val+1,___lwdiv@dividend+1
 17672  0045EC  C08E  F085         	movff	utoa@base,___lwdiv@divisor
 17673  0045F0  C08F  F086         	movff	utoa@base+1,___lwdiv@divisor+1
 17674  0045F4  ECE6  F02D         	call	___lwdiv	;wreg free
 17675  0045F8  C083  F08C         	movff	?___lwdiv,utoa@val
 17676  0045FC  C084  F08D         	movff	?___lwdiv+1,utoa@val+1
 17677  004600  0E09               	movlw	9
 17678  004602  0100               	movlb	0	; () banked
 17679  004604  6592               	cpfsgt	utoa@c& (0+255),b
 17680  004606  D002               	goto	l3268
 17681                           
 17682                           ; BSR set to: 0
 17683  004608  0E07               	movlw	7
 17684  00460A  2792               	addwf	utoa@c& (0+255),f,b
 17685  00460C                     l3268:
 17686                           
 17687                           ; BSR set to: 0
 17688  00460C  0E30               	movlw	48
 17689  00460E  2792               	addwf	utoa@c& (0+255),f,b
 17690                           
 17691                           ; BSR set to: 0
 17692  004610  C08A  FFD9         	movff	utoa@buf,fsr2l
 17693  004614  C08B  FFDA         	movff	utoa@buf+1,fsr2h
 17694  004618  C092  FFDF         	movff	utoa@c,indf2
 17695                           
 17696                           ; BSR set to: 0
 17697  00461C  078A               	decf	utoa@buf& (0+255),f,b
 17698  00461E  A0D8               	btfss	status,0,c
 17699  004620  078B               	decf	(utoa@buf+1)& (0+255),f,b
 17700                           
 17701                           ; BSR set to: 0
 17702  004622  518C               	movf	utoa@val& (0+255),w,b
 17703  004624  118D               	iorwf	(utoa@val+1)& (0+255),w,b
 17704  004626  A4D8               	btfss	status,2,c
 17705  004628  D7D0               	goto	l3267
 17706                           
 17707                           ; BSR set to: 0
 17708                           ;	Return value of _utoa is never used
 17709                           
 17710                           ; BSR set to: 0
 17711  00462A  4B8A               	infsnz	utoa@buf& (0+255),f,b
 17712  00462C  2B8B               	incf	(utoa@buf+1)& (0+255),f,b
 17713  00462E  0012               	return	
 17714  004630                     __end_of_utoa:
 17715                           	opt stack 0
 17716                           tosu	equ	0xFFF
 17717                           tosh	equ	0xFFE
 17718                           tosl	equ	0xFFD
 17719                           pclath	equ	0xFFA
 17720                           tblptru	equ	0xFF8
 17721                           tblptrh	equ	0xFF7
 17722                           tblptrl	equ	0xFF6
 17723                           tablat	equ	0xFF5
 17724                           prodh	equ	0xFF4
 17725                           prodl	equ	0xFF3
 17726                           intcon	equ	0xFF2
 17727                           intcon2	equ	0xFF1
 17728                           intcon3	equ	0xFF0
 17729                           indf0	equ	0xFEF
 17730                           postinc0	equ	0xFEE
 17731                           plusw0	equ	0xFEB
 17732                           fsr0h	equ	0xFEA
 17733                           fsr0l	equ	0xFE9
 17734                           wreg	equ	0xFE8
 17735                           indf1	equ	0xFE7
 17736                           postinc1	equ	0xFE6
 17737                           postdec1	equ	0xFE5
 17738                           fsr1h	equ	0xFE2
 17739                           fsr1l	equ	0xFE1
 17740                           indf2	equ	0xFDF
 17741                           postinc2	equ	0xFDE
 17742                           postdec2	equ	0xFDD
 17743                           plusw2	equ	0xFDB
 17744                           fsr2h	equ	0xFDA
 17745                           fsr2l	equ	0xFD9
 17746                           status	equ	0xFD8
 17747                           
 17748 ;; *************** function ___lwmod *****************
 17749 ;; Defined at:
 17750 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;  dividend        2   29[BANK0 ] unsigned int 
 17753 ;;  divisor         2   31[BANK0 ] unsigned int 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  counter         1   33[BANK0 ] unsigned char 
 17756 ;; Return value:  Size  Location     Type
 17757 ;;                  2   29[BANK0 ] unsigned int 
 17758 ;; Registers used:
 17759 ;;		wreg, status,2, status,0
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17768 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17769 ;;Total ram usage:        5 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; Hardware stack levels required when called:   11
 17772 ;; This function calls:
 17773 ;;		Nothing
 17774 ;; This function is called by:
 17775 ;;		_utoa
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           	psect	text73
 17780  0060D8                     __ptext73:
 17781                           	opt stack 0
 17782  0060D8                     ___lwmod:
 17783                           	opt stack 14
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;incstack = 0
 17787  0060D8  0100               	movlb	0	; () banked
 17788  0060DA  517F               	movf	___lwmod@divisor& (0+255),w,b
 17789  0060DC  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17790  0060DE  B4D8               	btfsc	status,2,c
 17791  0060E0  D018               	goto	l3363
 17792                           
 17793                           ; BSR set to: 0
 17794  0060E2  0E01               	movlw	1
 17795  0060E4  6F81               	movwf	___lwmod@counter& (0+255),b
 17796  0060E6  D004               	goto	l3358
 17797  0060E8                     
 17798                           ; BSR set to: 0
 17799                           
 17800                           ; BSR set to: 0
 17801  0060E8  90D8               	bcf	status,0,c
 17802  0060EA  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17803  0060EC  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17804  0060EE  2B81               	incf	___lwmod@counter& (0+255),f,b
 17805  0060F0                     l3358:
 17806                           
 17807                           ; BSR set to: 0
 17808                           
 17809                           ; BSR set to: 0
 17810  0060F0  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17811  0060F2  D7FA               	goto	l3359
 17812  0060F4                     u12110:
 17813                           
 17814                           ; BSR set to: 0
 17815                           
 17816                           ; BSR set to: 0
 17817                           
 17818                           ; BSR set to: 0
 17819  0060F4  517F               	movf	___lwmod@divisor& (0+255),w,b
 17820  0060F6  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17821  0060F8  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17822  0060FA  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17823  0060FC  A0D8               	btfss	status,0,c
 17824  0060FE  D004               	goto	l3362
 17825                           
 17826                           ; BSR set to: 0
 17827  006100  517F               	movf	___lwmod@divisor& (0+255),w,b
 17828  006102  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17829  006104  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17830  006106  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17831  006108                     l3362:
 17832                           
 17833                           ; BSR set to: 0
 17834                           
 17835                           ; BSR set to: 0
 17836  006108  90D8               	bcf	status,0,c
 17837  00610A  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17838  00610C  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17839                           
 17840                           ; BSR set to: 0
 17841  00610E  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17842  006110  D7F1               	goto	u12110
 17843  006112                     l3363:
 17844                           
 17845                           ; BSR set to: 0
 17846                           
 17847                           ; BSR set to: 0
 17848  006112  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17849  006116  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17850                           
 17851                           ; BSR set to: 0
 17852  00611A  0012               	return		;funcret
 17853  00611C                     __end_of___lwmod:
 17854                           	opt stack 0
 17855                           tosu	equ	0xFFF
 17856                           tosh	equ	0xFFE
 17857                           tosl	equ	0xFFD
 17858                           pclath	equ	0xFFA
 17859                           tblptru	equ	0xFF8
 17860                           tblptrh	equ	0xFF7
 17861                           tblptrl	equ	0xFF6
 17862                           tablat	equ	0xFF5
 17863                           prodh	equ	0xFF4
 17864                           prodl	equ	0xFF3
 17865                           intcon	equ	0xFF2
 17866                           intcon2	equ	0xFF1
 17867                           intcon3	equ	0xFF0
 17868                           indf0	equ	0xFEF
 17869                           postinc0	equ	0xFEE
 17870                           plusw0	equ	0xFEB
 17871                           fsr0h	equ	0xFEA
 17872                           fsr0l	equ	0xFE9
 17873                           wreg	equ	0xFE8
 17874                           indf1	equ	0xFE7
 17875                           postinc1	equ	0xFE6
 17876                           postdec1	equ	0xFE5
 17877                           fsr1h	equ	0xFE2
 17878                           fsr1l	equ	0xFE1
 17879                           indf2	equ	0xFDF
 17880                           postinc2	equ	0xFDE
 17881                           postdec2	equ	0xFDD
 17882                           plusw2	equ	0xFDB
 17883                           fsr2h	equ	0xFDA
 17884                           fsr2l	equ	0xFD9
 17885                           status	equ	0xFD8
 17886                           
 17887 ;; *************** function _getsUSBUSART *****************
 17888 ;; Defined at:
 17889 ;;		line 488 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 17890 ;; Parameters:    Size  Location     Type
 17891 ;;  buffer          2   36[BANK0 ] PTR unsigned char 
 17892 ;;		 -> Terminal@UsbRxBuffer(200), GsmGprsTerminal@UsbBuffer(200), 
 17893 ;;  len             1   38[BANK0 ] unsigned char 
 17894 ;; Auto vars:     Size  Location     Type
 17895 ;;		None
 17896 ;; Return value:  Size  Location     Type
 17897 ;;                  1    wreg      unsigned char 
 17898 ;; Registers used:
 17899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17900 ;; Tracked objects:
 17901 ;;		On entry : 0/0
 17902 ;;		On exit  : 0/0
 17903 ;;		Unchanged: 0/0
 17904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17905 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17908 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17909 ;;Total ram usage:        4 bytes
 17910 ;; Hardware stack levels used:    1
 17911 ;; Hardware stack levels required when called:   12
 17912 ;; This function calls:
 17913 ;;		_USBTransferOnePacket
 17914 ;; This function is called by:
 17915 ;;		_Terminal
 17916 ;;		_GsmGprsTerminal
 17917 ;; This function uses a non-reentrant model
 17918 ;;
 17919                           
 17920                           	psect	text74
 17921  004BD2                     __ptext74:
 17922                           	opt stack 0
 17923  004BD2                     _getsUSBUSART:
 17924                           	opt stack 13
 17925                           
 17926                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;incstack = 0
 17930  004BD2  0E00               	movlw	0
 17931  004BD4  0100               	movlb	0	; () banked
 17932  004BD6  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17933                           
 17934                           ; BSR set to: 0
 17935                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 17936  004BD8  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17937  004BDA  11BD               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 17938  004BDC  B4D8               	btfsc	status,2,c
 17939  004BDE  D006               	goto	u12840
 17940                           
 17941                           ; BSR set to: 0
 17942  004BE0  C0BC  FFD9         	movff	_CDCDataOutHandle,fsr2l
 17943  004BE4  C0BD  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 17944  004BE8  BEDF               	btfsc	indf2,7,c
 17945  004BEA  D03B               	goto	l1924
 17946  004BEC                     u12840:
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;usb_device_cdc.c: 493: {
 17950                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 17951                           
 17952                           ; BSR set to: 0
 17953  004BEC  EE20 F001          	lfsr	2,1
 17954  004BF0  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17955  004BF2  26D9               	addwf	fsr2l,f,c
 17956  004BF4  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17957  004BF6  22DA               	addwfc	fsr2h,f,c
 17958  004BF8  5186               	movf	getsUSBUSART@len& (0+255),w,b
 17959  004BFA  5CDE               	subwf	postinc2,w,c
 17960  004BFC  B0D8               	btfsc	status,0,c
 17961  004BFE  D008               	goto	l1927
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 17965  004C00  EE20 F001          	lfsr	2,1
 17966  004C04  51BC               	movf	_CDCDataOutHandle& (0+255),w,b
 17967  004C06  26D9               	addwf	fsr2l,f,c
 17968  004C08  51BD               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 17969  004C0A  22DA               	addwfc	fsr2h,f,c
 17970  004C0C  50DF               	movf	indf2,w,c
 17971  004C0E  6F86               	movwf	getsUSBUSART@len& (0+255),b
 17972  004C10                     l1927:
 17973                           
 17974                           ; BSR set to: 0
 17975                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 17976                           
 17977                           ; BSR set to: 0
 17978  004C10  0E00               	movlw	0
 17979  004C12  6FC9               	movwf	_cdc_rx_len& (0+255),b
 17980  004C14  D013               	goto	l1928
 17981  004C16                     
 17982                           ; BSR set to: 0
 17983                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 17984                           
 17985                           ; BSR set to: 0
 17986  004C16  51C9               	movf	_cdc_rx_len& (0+255),w,b
 17987  004C18  0D01               	mullw	1
 17988  004C1A  0E00               	movlw	low _cdc_data_rx
 17989  004C1C  24F3               	addwf	prodl,w,c
 17990  004C1E  6ED9               	movwf	fsr2l,c
 17991  004C20  0E05               	movlw	high _cdc_data_rx
 17992  004C22  20F4               	addwfc	prodh,w,c
 17993  004C24  6EDA               	movwf	fsr2h,c
 17994  004C26  51C9               	movf	_cdc_rx_len& (0+255),w,b
 17995  004C28  0D01               	mullw	1
 17996  004C2A  50F3               	movf	prodl,w,c
 17997  004C2C  2584               	addwf	getsUSBUSART@buffer& (0+255),w,b
 17998  004C2E  6EE1               	movwf	fsr1l,c
 17999  004C30  50F4               	movf	prodh,w,c
 18000  004C32  2185               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 18001  004C34  6EE2               	movwf	fsr1h,c
 18002  004C36  CFDF FFE7          	movff	indf2,indf1
 18003                           
 18004                           ; BSR set to: 0
 18005  004C3A  2BC9               	incf	_cdc_rx_len& (0+255),f,b
 18006  004C3C                     l1928:
 18007                           
 18008                           ; BSR set to: 0
 18009                           
 18010                           ; BSR set to: 0
 18011  004C3C  5186               	movf	getsUSBUSART@len& (0+255),w,b
 18012  004C3E  5DC9               	subwf	_cdc_rx_len& (0+255),w,b
 18013  004C40  A0D8               	btfss	status,0,c
 18014  004C42  D7E9               	goto	l1929
 18015                           
 18016                           ; BSR set to: 0
 18017                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18018                           
 18019                           ; BSR set to: 0
 18020  004C44  0E00               	movlw	0
 18021  004C46  6F7D               	movwf	USBTransferOnePacket@dir& (0+255),b
 18022  004C48  0E00               	movlw	low _cdc_data_rx
 18023  004C4A  6F7E               	movwf	USBTransferOnePacket@data& (0+255),b
 18024  004C4C  0E05               	movlw	high _cdc_data_rx
 18025  004C4E  6F7F               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 18026  004C50  0E40               	movlw	64
 18027  004C52  6F80               	movwf	USBTransferOnePacket@len& (0+255),b
 18028  004C54  0E02               	movlw	2
 18029  004C56  EC05  F021         	call	_USBTransferOnePacket
 18030  004C5A  C07D  F0BC         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 18031  004C5E  C07E  F0BD         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18032  004C62                     l1924:
 18033                           
 18034                           ;usb_device_cdc.c: 513: }
 18035                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 18036  004C62  0100               	movlb	0	; () banked
 18037  004C64  51C9               	movf	_cdc_rx_len& (0+255),w,b
 18038  004C66  0012               	return	
 18039  004C68                     __end_of_getsUSBUSART:
 18040                           	opt stack 0
 18041                           tosu	equ	0xFFF
 18042                           tosh	equ	0xFFE
 18043                           tosl	equ	0xFFD
 18044                           pclath	equ	0xFFA
 18045                           tblptru	equ	0xFF8
 18046                           tblptrh	equ	0xFF7
 18047                           tblptrl	equ	0xFF6
 18048                           tablat	equ	0xFF5
 18049                           prodh	equ	0xFF4
 18050                           prodl	equ	0xFF3
 18051                           intcon	equ	0xFF2
 18052                           intcon2	equ	0xFF1
 18053                           intcon3	equ	0xFF0
 18054                           indf0	equ	0xFEF
 18055                           postinc0	equ	0xFEE
 18056                           plusw0	equ	0xFEB
 18057                           fsr0h	equ	0xFEA
 18058                           fsr0l	equ	0xFE9
 18059                           wreg	equ	0xFE8
 18060                           indf1	equ	0xFE7
 18061                           postinc1	equ	0xFE6
 18062                           postdec1	equ	0xFE5
 18063                           fsr1h	equ	0xFE2
 18064                           fsr1l	equ	0xFE1
 18065                           indf2	equ	0xFDF
 18066                           postinc2	equ	0xFDE
 18067                           postdec2	equ	0xFDD
 18068                           plusw2	equ	0xFDB
 18069                           fsr2h	equ	0xFDA
 18070                           fsr2l	equ	0xFD9
 18071                           status	equ	0xFD8
 18072                           
 18073 ;; *************** function _USBTransferOnePacket *****************
 18074 ;; Defined at:
 18075 ;;		line 1013 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 18076 ;; Parameters:    Size  Location     Type
 18077 ;;  ep              1    wreg     unsigned char 
 18078 ;;  dir             1   29[BANK0 ] unsigned char 
 18079 ;;  data            2   30[BANK0 ] PTR unsigned char 
 18080 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18081 ;;  len             1   32[BANK0 ] unsigned char 
 18082 ;; Auto vars:     Size  Location     Type
 18083 ;;  ep              1   33[BANK0 ] unsigned char 
 18084 ;;  handle          2   34[BANK0 ] PTR volatile struct __BD
 18085 ;;		 -> NULL(0), BDT(48), 
 18086 ;; Return value:  Size  Location     Type
 18087 ;;                  2   29[BANK0 ] PTR void 
 18088 ;; Registers used:
 18089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18090 ;; Tracked objects:
 18091 ;;		On entry : 0/0
 18092 ;;		On exit  : 0/0
 18093 ;;		Unchanged: 0/0
 18094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18096 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18098 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18099 ;;Total ram usage:        7 bytes
 18100 ;; Hardware stack levels used:    1
 18101 ;; Hardware stack levels required when called:   11
 18102 ;; This function calls:
 18103 ;;		Nothing
 18104 ;; This function is called by:
 18105 ;;		_CDCInitEP
 18106 ;;		_getsUSBUSART
 18107 ;;		_CDCTxService
 18108 ;;		_USBCDCEventHandler
 18109 ;; This function uses a non-reentrant model
 18110 ;;
 18111                           
 18112                           	psect	text75
 18113  00420A                     __ptext75:
 18114                           	opt stack 0
 18115  00420A                     _USBTransferOnePacket:
 18116                           	opt stack 13
 18117                           
 18118                           ; BSR set to: 0
 18119                           ;incstack = 0
 18120                           ;USBTransferOnePacket@ep stored from wreg
 18121  00420A  0100               	movlb	0	; () banked
 18122  00420C  6F81               	movwf	USBTransferOnePacket@ep& (0+255),b
 18123                           
 18124                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 18125                           ;usb_device.c: 1018: if(dir != 0)
 18126  00420E  0100               	movlb	0	; () banked
 18127  004210  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18128  004212  B4D8               	btfsc	status,2,c
 18129  004214  D007               	goto	l1648
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;usb_device.c: 1019: {
 18133                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 18134  004216  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18135  004218  0D02               	mullw	2
 18136  00421A  0EB6               	movlw	low _pBDTEntryIn
 18137  00421C  24F3               	addwf	prodl,w,c
 18138  00421E  6ED9               	movwf	fsr2l,c
 18139  004220  0E00               	movlw	high _pBDTEntryIn
 18140  004222  D006               	goto	L16
 18141  004224                     l1648:
 18142                           
 18143                           ; BSR set to: 0
 18144                           ;usb_device.c: 1023: else
 18145                           ;usb_device.c: 1024: {
 18146                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 18147                           
 18148                           ; BSR set to: 0
 18149  004224  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18150  004226  0D02               	mullw	2
 18151  004228  0E06               	movlw	low _pBDTEntryOut
 18152  00422A  24F3               	addwf	prodl,w,c
 18153  00422C  6ED9               	movwf	fsr2l,c
 18154  00422E  0E03               	movlw	high _pBDTEntryOut
 18155  004230                     L16:
 18156  004230  20F4               	addwfc	prodh,w,c
 18157  004232  6EDA               	movwf	fsr2h,c
 18158  004234  CFDE F082          	movff	postinc2,USBTransferOnePacket@handle
 18159  004238  CFDD F083          	movff	postdec2,USBTransferOnePacket@handle+1
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;usb_device.c: 1027: }
 18163                           ;usb_device.c: 1031: if(handle == 0)
 18164                           
 18165                           ; BSR set to: 0
 18166  00423C  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18167  00423E  1183               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18168  004240  A4D8               	btfss	status,2,c
 18169  004242  D005               	goto	l1650
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;usb_device.c: 1032: {
 18173                           ;usb_device.c: 1033: return 0;
 18174  004244  0E00               	movlw	0
 18175  004246  6F7D               	movwf	?_USBTransferOnePacket& (0+255),b
 18176  004248  0E00               	movlw	0
 18177  00424A  6F7E               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 18178                           
 18179                           ; BSR set to: 0
 18180  00424C  0012               	return	
 18181  00424E                     l1650:
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;usb_device.c: 1034: }
 18185                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 18186                           
 18187                           ; BSR set to: 0
 18188  00424E  EE20 F002          	lfsr	2,2
 18189  004252  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18190  004254  26D9               	addwf	fsr2l,f,c
 18191  004256  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18192  004258  22DA               	addwfc	fsr2h,f,c
 18193  00425A  C07E  FFDE         	movff	USBTransferOnePacket@data,postinc2
 18194  00425E  C07F  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 18195                           
 18196                           ;usb_device.c: 1048: handle->CNT = len;
 18197  004262  EE20 F001          	lfsr	2,1
 18198  004266  5182               	movf	USBTransferOnePacket@handle& (0+255),w,b
 18199  004268  26D9               	addwf	fsr2l,f,c
 18200  00426A  5183               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 18201  00426C  22DA               	addwfc	fsr2h,f,c
 18202  00426E  C080  FFDF         	movff	USBTransferOnePacket@len,indf2
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 18206  004272  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18207  004276  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18208  00427A  0E40               	movlw	64
 18209  00427C  16DF               	andwf	indf2,f,c
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 18213  00427E  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18214  004282  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18215  004286  0E00               	movlw	0
 18216  004288  86DB               	bsf	plusw2,3,c
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 18220  00428A  C082  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 18221  00428E  C083  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 18222  004292  0E00               	movlw	0
 18223  004294  8EDB               	bsf	plusw2,7,c
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;usb_device.c: 1054: if(dir != 0)
 18227  004296  517D               	movf	USBTransferOnePacket@dir& (0+255),w,b
 18228  004298  B4D8               	btfsc	status,2,c
 18229  00429A  D007               	goto	l1652
 18230                           
 18231                           ; BSR set to: 0
 18232                           ;usb_device.c: 1055: {
 18233                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18234  00429C  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18235  00429E  0D02               	mullw	2
 18236  0042A0  0EB6               	movlw	low _pBDTEntryIn
 18237  0042A2  24F3               	addwf	prodl,w,c
 18238  0042A4  6ED9               	movwf	fsr2l,c
 18239  0042A6  0E00               	movlw	high _pBDTEntryIn
 18240  0042A8  D006               	goto	L17
 18241  0042AA                     l1652:
 18242                           
 18243                           ; BSR set to: 0
 18244                           ;usb_device.c: 1059: else
 18245                           ;usb_device.c: 1060: {
 18246                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18247                           
 18248                           ; BSR set to: 0
 18249  0042AA  5181               	movf	USBTransferOnePacket@ep& (0+255),w,b
 18250  0042AC  0D02               	mullw	2
 18251  0042AE  0E06               	movlw	low _pBDTEntryOut
 18252  0042B0  24F3               	addwf	prodl,w,c
 18253  0042B2  6ED9               	movwf	fsr2l,c
 18254  0042B4  0E03               	movlw	high _pBDTEntryOut
 18255  0042B6                     L17:
 18256  0042B6  20F4               	addwfc	prodh,w,c
 18257  0042B8  6EDA               	movwf	fsr2h,c
 18258  0042BA  0E04               	movlw	4
 18259  0042BC  1ADF               	xorwf	indf2,f,c
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;usb_device.c: 1063: }
 18263                           ;usb_device.c: 1064: return (void*)handle;
 18264                           
 18265                           ; BSR set to: 0
 18266  0042BE  C082  F07D         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 18267  0042C2  C083  F07E         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 18268  0042C6  0012               	return	
 18269  0042C8                     __end_of_USBTransferOnePacket:
 18270                           	opt stack 0
 18271                           tosu	equ	0xFFF
 18272                           tosh	equ	0xFFE
 18273                           tosl	equ	0xFFD
 18274                           pclath	equ	0xFFA
 18275                           tblptru	equ	0xFF8
 18276                           tblptrh	equ	0xFF7
 18277                           tblptrl	equ	0xFF6
 18278                           tablat	equ	0xFF5
 18279                           prodh	equ	0xFF4
 18280                           prodl	equ	0xFF3
 18281                           intcon	equ	0xFF2
 18282                           intcon2	equ	0xFF1
 18283                           intcon3	equ	0xFF0
 18284                           indf0	equ	0xFEF
 18285                           postinc0	equ	0xFEE
 18286                           plusw0	equ	0xFEB
 18287                           fsr0h	equ	0xFEA
 18288                           fsr0l	equ	0xFE9
 18289                           wreg	equ	0xFE8
 18290                           indf1	equ	0xFE7
 18291                           postinc1	equ	0xFE6
 18292                           postdec1	equ	0xFE5
 18293                           fsr1h	equ	0xFE2
 18294                           fsr1l	equ	0xFE1
 18295                           indf2	equ	0xFDF
 18296                           postinc2	equ	0xFDE
 18297                           postdec2	equ	0xFDD
 18298                           plusw2	equ	0xFDB
 18299                           fsr2h	equ	0xFDA
 18300                           fsr2l	equ	0xFD9
 18301                           status	equ	0xFD8
 18302                           
 18303 ;; *************** function _atoi *****************
 18304 ;; Defined at:
 18305 ;;		line 5 in file "/opt/microchip/xc8/v1.45/sources/common/atoi.c"
 18306 ;; Parameters:    Size  Location     Type
 18307 ;;  s               2   35[BANK0 ] PTR const unsigned char 
 18308 ;;		 -> Terminal@Len(4), 
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;  a               2   40[BANK0 ] int 
 18311 ;;  sign            1   39[BANK0 ] unsigned char 
 18312 ;; Return value:  Size  Location     Type
 18313 ;;                  2   35[BANK0 ] int 
 18314 ;; Registers used:
 18315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18316 ;; Tracked objects:
 18317 ;;		On entry : 0/0
 18318 ;;		On exit  : 0/0
 18319 ;;		Unchanged: 0/0
 18320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18324 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18325 ;;Total ram usage:        7 bytes
 18326 ;; Hardware stack levels used:    1
 18327 ;; Hardware stack levels required when called:   12
 18328 ;; This function calls:
 18329 ;;		___wmul
 18330 ;;		_isdigit
 18331 ;; This function is called by:
 18332 ;;		_Terminal
 18333 ;; This function uses a non-reentrant model
 18334 ;;
 18335                           
 18336                           	psect	text76
 18337  00387E                     __ptext76:
 18338                           	opt stack 0
 18339  00387E                     _atoi:
 18340                           	opt stack 13
 18341                           
 18342                           ; BSR set to: 0
 18343                           ;incstack = 0
 18344  00387E  D003               	goto	l3074
 18345  003880  0100               	movlb	0	; () banked
 18346  003882  4B83               	infsnz	atoi@s& (0+255),f,b
 18347  003884  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18348  003886                     l3074:
 18349                           
 18350                           ; BSR set to: 0
 18351  003886  C083  FFD9         	movff	atoi@s,fsr2l
 18352  00388A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18353  00388E  0E20               	movlw	32
 18354  003890  18DE               	xorwf	postinc2,w,c
 18355  003892  B4D8               	btfsc	status,2,c
 18356  003894  D7F5               	goto	l3075
 18357  003896  C083  FFD9         	movff	atoi@s,fsr2l
 18358  00389A  C084  FFDA         	movff	atoi@s+1,fsr2h
 18359  00389E  0E09               	movlw	9
 18360  0038A0  18DE               	xorwf	postinc2,w,c
 18361  0038A2  B4D8               	btfsc	status,2,c
 18362  0038A4  D7ED               	goto	l3075
 18363  0038A6  0E00               	movlw	0
 18364  0038A8  0100               	movlb	0	; () banked
 18365  0038AA  6F89               	movwf	(atoi@a+1)& (0+255),b
 18366  0038AC  0E00               	movlw	0
 18367  0038AE  6F88               	movwf	atoi@a& (0+255),b
 18368  0038B0  0E00               	movlw	0
 18369  0038B2  6F87               	movwf	atoi@sign& (0+255),b
 18370                           
 18371                           ; BSR set to: 0
 18372  0038B4  C083  FFD9         	movff	atoi@s,fsr2l
 18373  0038B8  C084  FFDA         	movff	atoi@s+1,fsr2h
 18374  0038BC  0E2D               	movlw	45
 18375  0038BE  18DE               	xorwf	postinc2,w,c
 18376  0038C0  A4D8               	btfss	status,2,c
 18377  0038C2  D002               	goto	l3077
 18378                           
 18379                           ; BSR set to: 0
 18380  0038C4  2B87               	incf	atoi@sign& (0+255),f,b
 18381  0038C6  D026               	goto	l14007
 18382  0038C8                     l3077:
 18383                           
 18384                           ; BSR set to: 0
 18385                           
 18386                           ; BSR set to: 0
 18387  0038C8  C083  FFD9         	movff	atoi@s,fsr2l
 18388  0038CC  C084  FFDA         	movff	atoi@s+1,fsr2h
 18389  0038D0  0E2B               	movlw	43
 18390  0038D2  18DE               	xorwf	postinc2,w,c
 18391  0038D4  A4D8               	btfss	status,2,c
 18392  0038D6  D020               	goto	l3080
 18393  0038D8  D01D               	goto	l14007
 18394  0038DA                     
 18395                           ; BSR set to: 0
 18396  0038DA  C088  F07D         	movff	atoi@a,___wmul@multiplier
 18397  0038DE  C089  F07E         	movff	atoi@a+1,___wmul@multiplier+1
 18398  0038E2  0E00               	movlw	0
 18399  0038E4  0100               	movlb	0	; () banked
 18400  0038E6  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18401  0038E8  0E0A               	movlw	10
 18402  0038EA  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 18403  0038EC  EC2E  F033         	call	___wmul	;wreg free
 18404  0038F0  C083  FFD9         	movff	atoi@s,fsr2l
 18405  0038F4  C084  FFDA         	movff	atoi@s+1,fsr2h
 18406  0038F8  50DF               	movf	indf2,w,c
 18407  0038FA  0100               	movlb	0	; () banked
 18408  0038FC  6F85               	movwf	??_atoi& (0+255),b
 18409  0038FE  6B86               	clrf	(??_atoi+1)& (0+255),b
 18410  003900  517D               	movf	?___wmul& (0+255),w,b
 18411  003902  2785               	addwf	??_atoi& (0+255),f,b
 18412  003904  517E               	movf	(?___wmul+1)& (0+255),w,b
 18413  003906  2386               	addwfc	(??_atoi+1)& (0+255),f,b
 18414  003908  0ED0               	movlw	208
 18415  00390A  2585               	addwf	??_atoi& (0+255),w,b
 18416  00390C  6F88               	movwf	atoi@a& (0+255),b
 18417  00390E  0EFF               	movlw	255
 18418  003910  2186               	addwfc	(??_atoi+1)& (0+255),w,b
 18419  003912  6F89               	movwf	(atoi@a+1)& (0+255),b
 18420  003914                     l14007:
 18421                           
 18422                           ; BSR set to: 0
 18423  003914  4B83               	infsnz	atoi@s& (0+255),f,b
 18424  003916  2B84               	incf	(atoi@s+1)& (0+255),f,b
 18425  003918                     l3080:
 18426                           
 18427                           ; BSR set to: 0
 18428                           
 18429                           ; BSR set to: 0
 18430  003918  C083  FFD9         	movff	atoi@s,fsr2l
 18431  00391C  C084  FFDA         	movff	atoi@s+1,fsr2h
 18432  003920  50DF               	movf	indf2,w,c
 18433  003922  ECE1  F033         	call	_isdigit
 18434  003926  B0D8               	btfsc	status,0,c
 18435  003928  D7D8               	goto	l3081
 18436  00392A  0100               	movlb	0	; () banked
 18437  00392C  5187               	movf	atoi@sign& (0+255),w,b
 18438  00392E  B4D8               	btfsc	status,2,c
 18439  003930  D00D               	goto	l3083
 18440                           
 18441                           ; BSR set to: 0
 18442  003932  C088  F085         	movff	atoi@a,??_atoi
 18443  003936  C089  F086         	movff	atoi@a+1,??_atoi+1
 18444  00393A  1F85               	comf	??_atoi& (0+255),f,b
 18445  00393C  1F86               	comf	(??_atoi+1)& (0+255),f,b
 18446  00393E  4B85               	infsnz	??_atoi& (0+255),f,b
 18447  003940  2B86               	incf	(??_atoi+1)& (0+255),f,b
 18448  003942  C085  F083         	movff	??_atoi,?_atoi
 18449  003946  C086  F084         	movff	??_atoi+1,?_atoi+1
 18450  00394A  0012               	return	
 18451  00394C                     l3083:
 18452                           
 18453                           ; BSR set to: 0
 18454  00394C  C088  F083         	movff	atoi@a,?_atoi
 18455  003950  C089  F084         	movff	atoi@a+1,?_atoi+1
 18456                           
 18457                           ; BSR set to: 0
 18458  003954  0012               	return		;funcret
 18459  003956                     __end_of_atoi:
 18460                           	opt stack 0
 18461                           tosu	equ	0xFFF
 18462                           tosh	equ	0xFFE
 18463                           tosl	equ	0xFFD
 18464                           pclath	equ	0xFFA
 18465                           tblptru	equ	0xFF8
 18466                           tblptrh	equ	0xFF7
 18467                           tblptrl	equ	0xFF6
 18468                           tablat	equ	0xFF5
 18469                           prodh	equ	0xFF4
 18470                           prodl	equ	0xFF3
 18471                           intcon	equ	0xFF2
 18472                           intcon2	equ	0xFF1
 18473                           intcon3	equ	0xFF0
 18474                           indf0	equ	0xFEF
 18475                           postinc0	equ	0xFEE
 18476                           plusw0	equ	0xFEB
 18477                           fsr0h	equ	0xFEA
 18478                           fsr0l	equ	0xFE9
 18479                           wreg	equ	0xFE8
 18480                           indf1	equ	0xFE7
 18481                           postinc1	equ	0xFE6
 18482                           postdec1	equ	0xFE5
 18483                           fsr1h	equ	0xFE2
 18484                           fsr1l	equ	0xFE1
 18485                           indf2	equ	0xFDF
 18486                           postinc2	equ	0xFDE
 18487                           postdec2	equ	0xFDD
 18488                           plusw2	equ	0xFDB
 18489                           fsr2h	equ	0xFDA
 18490                           fsr2l	equ	0xFD9
 18491                           status	equ	0xFD8
 18492                           
 18493 ;; *************** function _isdigit *****************
 18494 ;; Defined at:
 18495 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
 18496 ;; Parameters:    Size  Location     Type
 18497 ;;  c               1    wreg     unsigned char 
 18498 ;; Auto vars:     Size  Location     Type
 18499 ;;  c               1   31[BANK0 ] unsigned char 
 18500 ;; Return value:  Size  Location     Type
 18501 ;;		None               void
 18502 ;; Registers used:
 18503 ;;		wreg, status,2, status,0
 18504 ;; Tracked objects:
 18505 ;;		On entry : 0/0
 18506 ;;		On exit  : 0/0
 18507 ;;		Unchanged: 0/0
 18508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18512 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18513 ;;Total ram usage:        3 bytes
 18514 ;; Hardware stack levels used:    1
 18515 ;; Hardware stack levels required when called:   11
 18516 ;; This function calls:
 18517 ;;		Nothing
 18518 ;; This function is called by:
 18519 ;;		_atoi
 18520 ;;		_strtol
 18521 ;;		_xtoi
 18522 ;;		_isxdigit
 18523 ;; This function uses a non-reentrant model
 18524 ;;
 18525                           
 18526                           	psect	text77
 18527  0067C2                     __ptext77:
 18528                           	opt stack 0
 18529  0067C2                     _isdigit:
 18530                           	opt stack 12
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;incstack = 0
 18534                           ;isdigit@c stored from wreg
 18535  0067C2  0100               	movlb	0	; () banked
 18536  0067C4  6F7F               	movwf	isdigit@c& (0+255),b
 18537  0067C6  0E00               	movlw	0
 18538  0067C8  0100               	movlb	0	; () banked
 18539  0067CA  6F7E               	movwf	_isdigit$6418& (0+255),b
 18540                           
 18541                           ; BSR set to: 0
 18542  0067CC  0E3A               	movlw	58
 18543  0067CE  617F               	cpfslt	isdigit@c& (0+255),b
 18544  0067D0  D005               	goto	l3255
 18545                           
 18546                           ; BSR set to: 0
 18547  0067D2  0E2F               	movlw	47
 18548  0067D4  657F               	cpfsgt	isdigit@c& (0+255),b
 18549  0067D6  D002               	goto	l3255
 18550                           
 18551                           ; BSR set to: 0
 18552  0067D8  0E01               	movlw	1
 18553  0067DA  6F7E               	movwf	_isdigit$6418& (0+255),b
 18554  0067DC                     l3255:
 18555                           
 18556                           ; BSR set to: 0
 18557                           
 18558                           ; BSR set to: 0
 18559  0067DC  C07E  F07D         	movff	_isdigit$6418,??_isdigit
 18560  0067E0  317D               	rrcf	??_isdigit& (0+255),w,b
 18561  0067E2  0012               	return	
 18562  0067E4                     __end_of_isdigit:
 18563                           	opt stack 0
 18564                           tosu	equ	0xFFF
 18565                           tosh	equ	0xFFE
 18566                           tosl	equ	0xFFD
 18567                           pclath	equ	0xFFA
 18568                           tblptru	equ	0xFF8
 18569                           tblptrh	equ	0xFF7
 18570                           tblptrl	equ	0xFF6
 18571                           tablat	equ	0xFF5
 18572                           prodh	equ	0xFF4
 18573                           prodl	equ	0xFF3
 18574                           intcon	equ	0xFF2
 18575                           intcon2	equ	0xFF1
 18576                           intcon3	equ	0xFF0
 18577                           indf0	equ	0xFEF
 18578                           postinc0	equ	0xFEE
 18579                           plusw0	equ	0xFEB
 18580                           fsr0h	equ	0xFEA
 18581                           fsr0l	equ	0xFE9
 18582                           wreg	equ	0xFE8
 18583                           indf1	equ	0xFE7
 18584                           postinc1	equ	0xFE6
 18585                           postdec1	equ	0xFE5
 18586                           fsr1h	equ	0xFE2
 18587                           fsr1l	equ	0xFE1
 18588                           indf2	equ	0xFDF
 18589                           postinc2	equ	0xFDE
 18590                           postdec2	equ	0xFDD
 18591                           plusw2	equ	0xFDB
 18592                           fsr2h	equ	0xFDA
 18593                           fsr2l	equ	0xFD9
 18594                           status	equ	0xFD8
 18595                           
 18596 ;; *************** function _Rtcm_SetRtccDate *****************
 18597 ;; Defined at:
 18598 ;;		line 176 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18599 ;; Parameters:    Size  Location     Type
 18600 ;;  Date            8   41[BANK0 ] struct _RtccDateType
 18601 ;; Auto vars:     Size  Location     Type
 18602 ;;		None
 18603 ;; Return value:  Size  Location     Type
 18604 ;;                  1    wreg      void 
 18605 ;; Registers used:
 18606 ;;		wreg, status,2, status,0, cstack
 18607 ;; Tracked objects:
 18608 ;;		On entry : 0/0
 18609 ;;		On exit  : 0/0
 18610 ;;		Unchanged: 0/0
 18611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18612 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18615 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18616 ;;Total ram usage:        8 bytes
 18617 ;; Hardware stack levels used:    1
 18618 ;; Hardware stack levels required when called:   13
 18619 ;; This function calls:
 18620 ;;		_Rtcc_LockRtc
 18621 ;;		_Rtcc_SetRtccValue
 18622 ;;		_Rtcc_UnlockRtc
 18623 ;; This function is called by:
 18624 ;;		_Rtcm_MainTask
 18625 ;; This function uses a non-reentrant model
 18626 ;;
 18627                           
 18628                           	psect	text78
 18629  005AD0                     __ptext78:
 18630                           	opt stack 0
 18631  005AD0                     _Rtcm_SetRtccDate:
 18632                           	opt stack 14
 18633                           
 18634                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;incstack = 0
 18638  005AD0  EC25  F035         	call	_Rtcc_UnlockRtc	;wreg free
 18639                           
 18640                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 18641  005AD4  0100               	movlb	0	; () banked
 18642  005AD6  5189               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 18643  005AD8  0F30               	addlw	48
 18644  005ADA  6F85               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 18645  005ADC  0E00               	movlw	0
 18646  005ADE  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18647                           
 18648                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 18649  005AE2  C08B  F085         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 18650  005AE6  0E01               	movlw	1
 18651  005AE8  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18652                           
 18653                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 18654  005AEC  C08C  F085         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 18655  005AF0  0E02               	movlw	2
 18656  005AF2  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18657                           
 18658                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 18659  005AF6  C08D  F085         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 18660  005AFA  0E03               	movlw	3
 18661  005AFC  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18662                           
 18663                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 18664  005B00  C08E  F085         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 18665  005B04  0E04               	movlw	4
 18666  005B06  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18667                           
 18668                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 18669  005B0A  C08F  F085         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 18670  005B0E  0E05               	movlw	5
 18671  005B10  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18672                           
 18673                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 18674  005B14  C090  F085         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 18675  005B18  0E06               	movlw	6
 18676  005B1A  ECF7  F00A         	call	_Rtcc_SetRtccValue
 18677                           
 18678                           ;rtcm.c: 191: Rtcc_LockRtc();
 18679  005B1E  EC2D  F035         	call	_Rtcc_LockRtc	;wreg free
 18680  005B22  0012               	return		;funcret
 18681  005B24                     __end_of_Rtcm_SetRtccDate:
 18682                           	opt stack 0
 18683                           tosu	equ	0xFFF
 18684                           tosh	equ	0xFFE
 18685                           tosl	equ	0xFFD
 18686                           pclath	equ	0xFFA
 18687                           tblptru	equ	0xFF8
 18688                           tblptrh	equ	0xFF7
 18689                           tblptrl	equ	0xFF6
 18690                           tablat	equ	0xFF5
 18691                           prodh	equ	0xFF4
 18692                           prodl	equ	0xFF3
 18693                           intcon	equ	0xFF2
 18694                           intcon2	equ	0xFF1
 18695                           intcon3	equ	0xFF0
 18696                           indf0	equ	0xFEF
 18697                           postinc0	equ	0xFEE
 18698                           plusw0	equ	0xFEB
 18699                           fsr0h	equ	0xFEA
 18700                           fsr0l	equ	0xFE9
 18701                           wreg	equ	0xFE8
 18702                           indf1	equ	0xFE7
 18703                           postinc1	equ	0xFE6
 18704                           postdec1	equ	0xFE5
 18705                           fsr1h	equ	0xFE2
 18706                           fsr1l	equ	0xFE1
 18707                           indf2	equ	0xFDF
 18708                           postinc2	equ	0xFDE
 18709                           postdec2	equ	0xFDD
 18710                           plusw2	equ	0xFDB
 18711                           fsr2h	equ	0xFDA
 18712                           fsr2l	equ	0xFD9
 18713                           status	equ	0xFD8
 18714                           
 18715 ;; *************** function _Rtcc_UnlockRtc *****************
 18716 ;; Defined at:
 18717 ;;		line 163 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18718 ;; Parameters:    Size  Location     Type
 18719 ;;		None
 18720 ;; Auto vars:     Size  Location     Type
 18721 ;;		None
 18722 ;; Return value:  Size  Location     Type
 18723 ;;                  1    wreg      void 
 18724 ;; Registers used:
 18725 ;;		None
 18726 ;; Tracked objects:
 18727 ;;		On entry : 0/0
 18728 ;;		On exit  : 0/0
 18729 ;;		Unchanged: 0/0
 18730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18735 ;;Total ram usage:        0 bytes
 18736 ;; Hardware stack levels used:    1
 18737 ;; Hardware stack levels required when called:   11
 18738 ;; This function calls:
 18739 ;;		Nothing
 18740 ;; This function is called by:
 18741 ;;		_Rtcm_MainTask
 18742 ;;		_Rtcm_SetRtccDate
 18743 ;;		_Rtcm_SetRtccAlarm
 18744 ;; This function uses a non-reentrant model
 18745 ;;
 18746                           
 18747                           	psect	text79
 18748  006A4A                     __ptext79:
 18749                           	opt stack 0
 18750  006A4A                     _Rtcc_UnlockRtc:
 18751                           	opt stack 15
 18752                           
 18753                           ;incstack = 0
 18754  006A4A  010F               	movlb	15	;# 
 18755  006A4C  0E55               	movlw	85	;# 
 18756  006A4E  6EA7               	movwf	4007,c	;# 
 18757  006A50  0EAA               	movlw	170	;# 
 18758  006A52  6EA7               	movwf	4007,c	;# 
 18759                           
 18760                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 18761  006A54  010F               	movlb	15	; () banked
 18762  006A56  8B3F               	bsf	63,5,b	;volatile
 18763                           
 18764                           ; BSR set to: 15
 18765  006A58  0012               	return		;funcret
 18766  006A5A                     __end_of_Rtcc_UnlockRtc:
 18767                           	opt stack 0
 18768                           tosu	equ	0xFFF
 18769                           tosh	equ	0xFFE
 18770                           tosl	equ	0xFFD
 18771                           pclath	equ	0xFFA
 18772                           tblptru	equ	0xFF8
 18773                           tblptrh	equ	0xFF7
 18774                           tblptrl	equ	0xFF6
 18775                           tablat	equ	0xFF5
 18776                           prodh	equ	0xFF4
 18777                           prodl	equ	0xFF3
 18778                           intcon	equ	0xFF2
 18779                           intcon2	equ	0xFF1
 18780                           intcon3	equ	0xFF0
 18781                           indf0	equ	0xFEF
 18782                           postinc0	equ	0xFEE
 18783                           plusw0	equ	0xFEB
 18784                           fsr0h	equ	0xFEA
 18785                           fsr0l	equ	0xFE9
 18786                           wreg	equ	0xFE8
 18787                           indf1	equ	0xFE7
 18788                           postinc1	equ	0xFE6
 18789                           postdec1	equ	0xFE5
 18790                           fsr1h	equ	0xFE2
 18791                           fsr1l	equ	0xFE1
 18792                           indf2	equ	0xFDF
 18793                           postinc2	equ	0xFDE
 18794                           postdec2	equ	0xFDD
 18795                           plusw2	equ	0xFDB
 18796                           fsr2h	equ	0xFDA
 18797                           fsr2l	equ	0xFD9
 18798                           status	equ	0xFD8
 18799                           
 18800 ;; *************** function _Rtcc_SetRtccValue *****************
 18801 ;; Defined at:
 18802 ;;		line 383 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18803 ;; Parameters:    Size  Location     Type
 18804 ;;  RtccPtrVal      1    wreg     enum E7757
 18805 ;;  Value           1   37[BANK0 ] unsigned char 
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;  RtccPtrVal      1   40[BANK0 ] enum E7757
 18808 ;; Return value:  Size  Location     Type
 18809 ;;                  1    wreg      void 
 18810 ;; Registers used:
 18811 ;;		wreg, status,2, status,0, cstack
 18812 ;; Tracked objects:
 18813 ;;		On entry : 0/0
 18814 ;;		On exit  : 0/0
 18815 ;;		Unchanged: 0/0
 18816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18817 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18820 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18821 ;;Total ram usage:        4 bytes
 18822 ;; Hardware stack levels used:    1
 18823 ;; Hardware stack levels required when called:   12
 18824 ;; This function calls:
 18825 ;;		___awdiv
 18826 ;;		___awmod
 18827 ;; This function is called by:
 18828 ;;		_Rtcm_SetRtccDate
 18829 ;; This function uses a non-reentrant model
 18830 ;;
 18831                           
 18832                           	psect	text80
 18833  0015EE                     __ptext80:
 18834                           	opt stack 0
 18835  0015EE                     _Rtcc_SetRtccValue:
 18836                           	opt stack 14
 18837                           
 18838                           ; BSR set to: 15
 18839                           ;incstack = 0
 18840                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 18841  0015EE  0100               	movlb	0	; () banked
 18842  0015F0  6F88               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 18843                           
 18844                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 18845  0015F2  D0FC               	goto	l441
 18846  0015F4                     l442:
 18847                           
 18848                           ; BSR set to: 0
 18849                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 18850  0015F4  010F               	movlb	15	; () banked
 18851  0015F6  833F               	bsf	63,1,b	;volatile
 18852                           
 18853                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 18854  0015F8  813F               	bsf	63,0,b	;volatile
 18855                           
 18856                           ; BSR set to: 15
 18857                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18858  0015FA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18859  0015FE  0100               	movlb	0	; () banked
 18860  001600  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18861  001602  0E00               	movlw	0
 18862  001604  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18863  001606  0E0A               	movlw	10
 18864  001608  6F7F               	movwf	___awmod@divisor& (0+255),b
 18865  00160A  EC81  F029         	call	___awmod	;wreg free
 18866  00160E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18867  001612  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18868  001616  0E0F               	movlw	15
 18869  001618  0100               	movlb	0	; () banked
 18870  00161A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18871  00161C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18872  001620  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18873  001622  0E00               	movlw	0
 18874  001624  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18875  001626  0E0A               	movlw	10
 18876  001628  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18877  00162A  ECBB  F028         	call	___awdiv	;wreg free
 18878  00162E  0100               	movlb	0	; () banked
 18879  001630  397D               	swapf	?___awdiv& (0+255),w,b
 18880  001632  0BF0               	andlw	240
 18881  001634  0BF0               	andlw	240
 18882  001636  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18883  001638  6E98               	movwf	3992,c	;volatile
 18884                           
 18885                           ;rtcc_drv.c: 393: break;
 18886  00163A  0012               	return	
 18887  00163C                     l444:
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 18891  00163C  010F               	movlb	15	; () banked
 18892  00163E  833F               	bsf	63,1,b	;volatile
 18893                           
 18894                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 18895  001640  913F               	bcf	63,0,b	;volatile
 18896                           
 18897                           ; BSR set to: 15
 18898                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18899  001642  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18900  001646  0100               	movlb	0	; () banked
 18901  001648  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18902  00164A  0E00               	movlw	0
 18903  00164C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18904  00164E  0E0A               	movlw	10
 18905  001650  6F7F               	movwf	___awmod@divisor& (0+255),b
 18906  001652  EC81  F029         	call	___awmod	;wreg free
 18907  001656  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18908  00165A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18909  00165E  0E0F               	movlw	15
 18910  001660  0100               	movlb	0	; () banked
 18911  001662  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18912  001664  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18913  001668  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18914  00166A  0E00               	movlw	0
 18915  00166C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18916  00166E  0E0A               	movlw	10
 18917  001670  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18918  001672  ECBB  F028         	call	___awdiv	;wreg free
 18919  001676  0100               	movlb	0	; () banked
 18920  001678  397D               	swapf	?___awdiv& (0+255),w,b
 18921  00167A  0BF0               	andlw	240
 18922  00167C  0BF0               	andlw	240
 18923  00167E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18924  001680  6E99               	movwf	3993,c	;volatile
 18925                           
 18926                           ;rtcc_drv.c: 401: break;
 18927  001682  0012               	return	
 18928  001684                     l445:
 18929                           
 18930                           ; BSR set to: 0
 18931                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 18932  001684  010F               	movlb	15	; () banked
 18933  001686  833F               	bsf	63,1,b	;volatile
 18934                           
 18935                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 18936  001688  913F               	bcf	63,0,b	;volatile
 18937                           
 18938                           ; BSR set to: 15
 18939                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18940  00168A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18941  00168E  0100               	movlb	0	; () banked
 18942  001690  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18943  001692  0E00               	movlw	0
 18944  001694  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18945  001696  0E0A               	movlw	10
 18946  001698  6F7F               	movwf	___awmod@divisor& (0+255),b
 18947  00169A  EC81  F029         	call	___awmod	;wreg free
 18948  00169E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18949  0016A2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18950  0016A6  0E0F               	movlw	15
 18951  0016A8  0100               	movlb	0	; () banked
 18952  0016AA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18953  0016AC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18954  0016B0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18955  0016B2  0E00               	movlw	0
 18956  0016B4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18957  0016B6  0E0A               	movlw	10
 18958  0016B8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 18959  0016BA  ECBB  F028         	call	___awdiv	;wreg free
 18960  0016BE  0100               	movlb	0	; () banked
 18961  0016C0  397D               	swapf	?___awdiv& (0+255),w,b
 18962  0016C2  0BF0               	andlw	240
 18963  0016C4  0BF0               	andlw	240
 18964  0016C6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18965  0016C8  6E98               	movwf	3992,c	;volatile
 18966                           
 18967                           ;rtcc_drv.c: 409: break;
 18968  0016CA  0012               	return	
 18969  0016CC                     l446:
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 18973  0016CC  010F               	movlb	15	; () banked
 18974  0016CE  933F               	bcf	63,1,b	;volatile
 18975                           
 18976                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 18977  0016D0  813F               	bsf	63,0,b	;volatile
 18978                           
 18979                           ; BSR set to: 15
 18980                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18981  0016D2  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18982  0016D6  0100               	movlb	0	; () banked
 18983  0016D8  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 18984  0016DA  0E00               	movlw	0
 18985  0016DC  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 18986  0016DE  0E0A               	movlw	10
 18987  0016E0  6F7F               	movwf	___awmod@divisor& (0+255),b
 18988  0016E2  EC81  F029         	call	___awmod	;wreg free
 18989  0016E6  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 18990  0016EA  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18991  0016EE  0E0F               	movlw	15
 18992  0016F0  0100               	movlb	0	; () banked
 18993  0016F2  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18994  0016F4  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18995  0016F8  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 18996  0016FA  0E00               	movlw	0
 18997  0016FC  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 18998  0016FE  0E0A               	movlw	10
 18999  001700  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19000  001702  ECBB  F028         	call	___awdiv	;wreg free
 19001  001706  0100               	movlb	0	; () banked
 19002  001708  397D               	swapf	?___awdiv& (0+255),w,b
 19003  00170A  0BF0               	andlw	240
 19004  00170C  0BF0               	andlw	240
 19005  00170E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19006  001710  6E99               	movwf	3993,c	;volatile
 19007                           
 19008                           ;rtcc_drv.c: 417: break;
 19009  001712  0012               	return	
 19010  001714                     l447:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 19014  001714  010F               	movlb	15	; () banked
 19015  001716  933F               	bcf	63,1,b	;volatile
 19016                           
 19017                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 19018  001718  813F               	bsf	63,0,b	;volatile
 19019                           
 19020                           ; BSR set to: 15
 19021                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19022  00171A  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19023  00171E  0100               	movlb	0	; () banked
 19024  001720  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19025  001722  0E00               	movlw	0
 19026  001724  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19027  001726  0E0A               	movlw	10
 19028  001728  6F7F               	movwf	___awmod@divisor& (0+255),b
 19029  00172A  EC81  F029         	call	___awmod	;wreg free
 19030  00172E  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19031  001732  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19032  001736  0E0F               	movlw	15
 19033  001738  0100               	movlb	0	; () banked
 19034  00173A  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19035  00173C  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19036  001740  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19037  001742  0E00               	movlw	0
 19038  001744  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19039  001746  0E0A               	movlw	10
 19040  001748  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19041  00174A  ECBB  F028         	call	___awdiv	;wreg free
 19042  00174E  0100               	movlb	0	; () banked
 19043  001750  397D               	swapf	?___awdiv& (0+255),w,b
 19044  001752  0BF0               	andlw	240
 19045  001754  0BF0               	andlw	240
 19046  001756  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19047  001758  6E98               	movwf	3992,c	;volatile
 19048                           
 19049                           ;rtcc_drv.c: 425: break;
 19050  00175A  0012               	return	
 19051  00175C                     l448:
 19052                           
 19053                           ; BSR set to: 0
 19054                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 19055  00175C  010F               	movlb	15	; () banked
 19056  00175E  933F               	bcf	63,1,b	;volatile
 19057                           
 19058                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 19059  001760  913F               	bcf	63,0,b	;volatile
 19060                           
 19061                           ; BSR set to: 15
 19062                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19063  001762  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19064  001766  0100               	movlb	0	; () banked
 19065  001768  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19066  00176A  0E00               	movlw	0
 19067  00176C  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19068  00176E  0E0A               	movlw	10
 19069  001770  6F7F               	movwf	___awmod@divisor& (0+255),b
 19070  001772  EC81  F029         	call	___awmod	;wreg free
 19071  001776  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19072  00177A  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19073  00177E  0E0F               	movlw	15
 19074  001780  0100               	movlb	0	; () banked
 19075  001782  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19076  001784  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19077  001788  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19078  00178A  0E00               	movlw	0
 19079  00178C  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19080  00178E  0E0A               	movlw	10
 19081  001790  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19082  001792  ECBB  F028         	call	___awdiv	;wreg free
 19083  001796  0100               	movlb	0	; () banked
 19084  001798  397D               	swapf	?___awdiv& (0+255),w,b
 19085  00179A  0BF0               	andlw	240
 19086  00179C  0BF0               	andlw	240
 19087  00179E  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19088  0017A0  6E99               	movwf	3993,c	;volatile
 19089                           
 19090                           ;rtcc_drv.c: 433: break;
 19091  0017A2  0012               	return	
 19092  0017A4                     l449:
 19093                           
 19094                           ; BSR set to: 0
 19095                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 19096  0017A4  010F               	movlb	15	; () banked
 19097  0017A6  933F               	bcf	63,1,b	;volatile
 19098                           
 19099                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 19100  0017A8  913F               	bcf	63,0,b	;volatile
 19101                           
 19102                           ; BSR set to: 15
 19103                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 19104  0017AA  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 19105  0017AE  0100               	movlb	0	; () banked
 19106  0017B0  6B7E               	clrf	(___awmod@dividend+1)& (0+255),b
 19107  0017B2  0E00               	movlw	0
 19108  0017B4  6F80               	movwf	(___awmod@divisor+1)& (0+255),b
 19109  0017B6  0E0A               	movlw	10
 19110  0017B8  6F7F               	movwf	___awmod@divisor& (0+255),b
 19111  0017BA  EC81  F029         	call	___awmod	;wreg free
 19112  0017BE  C07D  F086         	movff	?___awmod,??_Rtcc_SetRtccValue
 19113  0017C2  C07E  F087         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 19114  0017C6  0E0F               	movlw	15
 19115  0017C8  0100               	movlb	0	; () banked
 19116  0017CA  1786               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 19117  0017CC  C085  F07D         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 19118  0017D0  6B7E               	clrf	(___awdiv@dividend+1)& (0+255),b
 19119  0017D2  0E00               	movlw	0
 19120  0017D4  6F80               	movwf	(___awdiv@divisor+1)& (0+255),b
 19121  0017D6  0E0A               	movlw	10
 19122  0017D8  6F7F               	movwf	___awdiv@divisor& (0+255),b
 19123  0017DA  ECBB  F028         	call	___awdiv	;wreg free
 19124  0017DE  0100               	movlb	0	; () banked
 19125  0017E0  397D               	swapf	?___awdiv& (0+255),w,b
 19126  0017E2  0BF0               	andlw	240
 19127  0017E4  0BF0               	andlw	240
 19128  0017E6  1186               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 19129  0017E8  6E98               	movwf	3992,c	;volatile
 19130                           
 19131                           ; BSR set to: 0
 19132                           ;rtcc_drv.c: 445: }
 19133                           
 19134                           ; BSR set to: 0
 19135                           ;rtcc_drv.c: 444: break;
 19136                           
 19137                           ;rtcc_drv.c: 443: default:
 19138                           
 19139                           ;rtcc_drv.c: 441: break;
 19140  0017EA  0012               	return	
 19141  0017EC                     l441:
 19142                           
 19143                           ; BSR set to: 0
 19144  0017EC  0100               	movlb	0	; () banked
 19145  0017EE  5188               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 19146                           
 19147                           ; Switch size 1, requested type "space"
 19148                           ; Number of cases is 7, Range of values is 0 to 6
 19149                           ; switch strategies available:
 19150                           ; Name         Instructions Cycles
 19151                           ; simple_byte           22    12 (average)
 19152                           ;	Chosen strategy is simple_byte
 19153  0017F0  0A00               	xorlw	0	; case 0
 19154  0017F2  B4D8               	btfsc	status,2,c
 19155  0017F4  D6FF               	goto	l442
 19156  0017F6  0A01               	xorlw	1	; case 1
 19157  0017F8  B4D8               	btfsc	status,2,c
 19158  0017FA  D720               	goto	l444
 19159  0017FC  0A03               	xorlw	3	; case 2
 19160  0017FE  B4D8               	btfsc	status,2,c
 19161  001800  D741               	goto	l445
 19162  001802  0A01               	xorlw	1	; case 3
 19163  001804  B4D8               	btfsc	status,2,c
 19164  001806  D762               	goto	l446
 19165  001808  0A07               	xorlw	7	; case 4
 19166  00180A  B4D8               	btfsc	status,2,c
 19167  00180C  D783               	goto	l447
 19168  00180E  0A01               	xorlw	1	; case 5
 19169  001810  B4D8               	btfsc	status,2,c
 19170  001812  D7A4               	goto	l448
 19171  001814  0A03               	xorlw	3	; case 6
 19172  001816  A4D8               	btfss	status,2,c
 19173  001818  0012               	return	
 19174  00181A  D7C4               	goto	l449
 19175  00181C                     __end_of_Rtcc_SetRtccValue:
 19176                           	opt stack 0
 19177                           tosu	equ	0xFFF
 19178                           tosh	equ	0xFFE
 19179                           tosl	equ	0xFFD
 19180                           pclath	equ	0xFFA
 19181                           tblptru	equ	0xFF8
 19182                           tblptrh	equ	0xFF7
 19183                           tblptrl	equ	0xFF6
 19184                           tablat	equ	0xFF5
 19185                           prodh	equ	0xFF4
 19186                           prodl	equ	0xFF3
 19187                           intcon	equ	0xFF2
 19188                           intcon2	equ	0xFF1
 19189                           intcon3	equ	0xFF0
 19190                           indf0	equ	0xFEF
 19191                           postinc0	equ	0xFEE
 19192                           plusw0	equ	0xFEB
 19193                           fsr0h	equ	0xFEA
 19194                           fsr0l	equ	0xFE9
 19195                           wreg	equ	0xFE8
 19196                           indf1	equ	0xFE7
 19197                           postinc1	equ	0xFE6
 19198                           postdec1	equ	0xFE5
 19199                           fsr1h	equ	0xFE2
 19200                           fsr1l	equ	0xFE1
 19201                           indf2	equ	0xFDF
 19202                           postinc2	equ	0xFDE
 19203                           postdec2	equ	0xFDD
 19204                           plusw2	equ	0xFDB
 19205                           fsr2h	equ	0xFDA
 19206                           fsr2l	equ	0xFD9
 19207                           status	equ	0xFD8
 19208                           
 19209 ;; *************** function ___awmod *****************
 19210 ;; Defined at:
 19211 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
 19212 ;; Parameters:    Size  Location     Type
 19213 ;;  dividend        2   29[BANK0 ] int 
 19214 ;;  divisor         2   31[BANK0 ] int 
 19215 ;; Auto vars:     Size  Location     Type
 19216 ;;  sign            1   34[BANK0 ] unsigned char 
 19217 ;;  counter         1   33[BANK0 ] unsigned char 
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  2   29[BANK0 ] int 
 19220 ;; Registers used:
 19221 ;;		wreg, status,2, status,0
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19230 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19231 ;;Total ram usage:        6 bytes
 19232 ;; Hardware stack levels used:    1
 19233 ;; Hardware stack levels required when called:   11
 19234 ;; This function calls:
 19235 ;;		Nothing
 19236 ;; This function is called by:
 19237 ;;		_Rtcc_SetRtccValue
 19238 ;;		_Rtcc_SetRtccAlarm
 19239 ;; This function uses a non-reentrant model
 19240 ;;
 19241                           
 19242                           	psect	text81
 19243  005302                     __ptext81:
 19244                           	opt stack 0
 19245  005302                     ___awmod:
 19246                           	opt stack 14
 19247                           
 19248                           ; BSR set to: 0
 19249                           ;incstack = 0
 19250  005302  0E00               	movlw	0
 19251  005304  0100               	movlb	0	; () banked
 19252  005306  6F82               	movwf	___awmod@sign& (0+255),b
 19253                           
 19254                           ; BSR set to: 0
 19255  005308  AF7E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 19256  00530A  D006               	goto	l3106
 19257                           
 19258                           ; BSR set to: 0
 19259  00530C  6D7D               	negf	___awmod@dividend& (0+255),b
 19260  00530E  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19261  005310  B0D8               	btfsc	status,0,c
 19262  005312  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19263                           
 19264                           ; BSR set to: 0
 19265  005314  0E01               	movlw	1
 19266  005316  6F82               	movwf	___awmod@sign& (0+255),b
 19267  005318                     l3106:
 19268                           
 19269                           ; BSR set to: 0
 19270                           
 19271                           ; BSR set to: 0
 19272  005318  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19273  00531A  D004               	goto	l3107
 19274                           
 19275                           ; BSR set to: 0
 19276  00531C  6D7F               	negf	___awmod@divisor& (0+255),b
 19277  00531E  1F80               	comf	(___awmod@divisor+1)& (0+255),f,b
 19278  005320  B0D8               	btfsc	status,0,c
 19279  005322  2B80               	incf	(___awmod@divisor+1)& (0+255),f,b
 19280  005324                     l3107:
 19281                           
 19282                           ; BSR set to: 0
 19283                           
 19284                           ; BSR set to: 0
 19285  005324  517F               	movf	___awmod@divisor& (0+255),w,b
 19286  005326  1180               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 19287  005328  B4D8               	btfsc	status,2,c
 19288  00532A  D018               	goto	l3114
 19289                           
 19290                           ; BSR set to: 0
 19291  00532C  0E01               	movlw	1
 19292  00532E  6F81               	movwf	___awmod@counter& (0+255),b
 19293  005330  D004               	goto	l3109
 19294  005332                     
 19295                           ; BSR set to: 0
 19296                           
 19297                           ; BSR set to: 0
 19298  005332  90D8               	bcf	status,0,c
 19299  005334  377F               	rlcf	___awmod@divisor& (0+255),f,b
 19300  005336  3780               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19301  005338  2B81               	incf	___awmod@counter& (0+255),f,b
 19302  00533A                     l3109:
 19303                           
 19304                           ; BSR set to: 0
 19305                           
 19306                           ; BSR set to: 0
 19307  00533A  AF80               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19308  00533C  D7FA               	goto	l3110
 19309  00533E                     u13390:
 19310                           
 19311                           ; BSR set to: 0
 19312                           
 19313                           ; BSR set to: 0
 19314                           
 19315                           ; BSR set to: 0
 19316  00533E  517F               	movf	___awmod@divisor& (0+255),w,b
 19317  005340  5D7D               	subwf	___awmod@dividend& (0+255),w,b
 19318  005342  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19319  005344  597E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19320  005346  A0D8               	btfss	status,0,c
 19321  005348  D004               	goto	l3113
 19322                           
 19323                           ; BSR set to: 0
 19324  00534A  517F               	movf	___awmod@divisor& (0+255),w,b
 19325  00534C  5F7D               	subwf	___awmod@dividend& (0+255),f,b
 19326  00534E  5180               	movf	(___awmod@divisor+1)& (0+255),w,b
 19327  005350  5B7E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19328  005352                     l3113:
 19329                           
 19330                           ; BSR set to: 0
 19331                           
 19332                           ; BSR set to: 0
 19333  005352  90D8               	bcf	status,0,c
 19334  005354  3380               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19335  005356  337F               	rrcf	___awmod@divisor& (0+255),f,b
 19336                           
 19337                           ; BSR set to: 0
 19338  005358  2F81               	decfsz	___awmod@counter& (0+255),f,b
 19339  00535A  D7F1               	goto	u13390
 19340  00535C                     l3114:
 19341                           
 19342                           ; BSR set to: 0
 19343                           
 19344                           ; BSR set to: 0
 19345                           
 19346                           ; BSR set to: 0
 19347  00535C  5182               	movf	___awmod@sign& (0+255),w,b
 19348  00535E  B4D8               	btfsc	status,2,c
 19349  005360  D004               	goto	l3115
 19350                           
 19351                           ; BSR set to: 0
 19352  005362  6D7D               	negf	___awmod@dividend& (0+255),b
 19353  005364  1F7E               	comf	(___awmod@dividend+1)& (0+255),f,b
 19354  005366  B0D8               	btfsc	status,0,c
 19355  005368  2B7E               	incf	(___awmod@dividend+1)& (0+255),f,b
 19356  00536A                     l3115:
 19357                           
 19358                           ; BSR set to: 0
 19359                           
 19360                           ; BSR set to: 0
 19361  00536A  C07D  F07D         	movff	___awmod@dividend,?___awmod
 19362  00536E  C07E  F07E         	movff	___awmod@dividend+1,?___awmod+1
 19363  005372  0012               	return	
 19364  005374                     __end_of___awmod:
 19365                           	opt stack 0
 19366                           tosu	equ	0xFFF
 19367                           tosh	equ	0xFFE
 19368                           tosl	equ	0xFFD
 19369                           pclath	equ	0xFFA
 19370                           tblptru	equ	0xFF8
 19371                           tblptrh	equ	0xFF7
 19372                           tblptrl	equ	0xFF6
 19373                           tablat	equ	0xFF5
 19374                           prodh	equ	0xFF4
 19375                           prodl	equ	0xFF3
 19376                           intcon	equ	0xFF2
 19377                           intcon2	equ	0xFF1
 19378                           intcon3	equ	0xFF0
 19379                           indf0	equ	0xFEF
 19380                           postinc0	equ	0xFEE
 19381                           plusw0	equ	0xFEB
 19382                           fsr0h	equ	0xFEA
 19383                           fsr0l	equ	0xFE9
 19384                           wreg	equ	0xFE8
 19385                           indf1	equ	0xFE7
 19386                           postinc1	equ	0xFE6
 19387                           postdec1	equ	0xFE5
 19388                           fsr1h	equ	0xFE2
 19389                           fsr1l	equ	0xFE1
 19390                           indf2	equ	0xFDF
 19391                           postinc2	equ	0xFDE
 19392                           postdec2	equ	0xFDD
 19393                           plusw2	equ	0xFDB
 19394                           fsr2h	equ	0xFDA
 19395                           fsr2l	equ	0xFD9
 19396                           status	equ	0xFD8
 19397                           
 19398 ;; *************** function ___awdiv *****************
 19399 ;; Defined at:
 19400 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
 19401 ;; Parameters:    Size  Location     Type
 19402 ;;  dividend        2   29[BANK0 ] int 
 19403 ;;  divisor         2   31[BANK0 ] int 
 19404 ;; Auto vars:     Size  Location     Type
 19405 ;;  quotient        2   35[BANK0 ] int 
 19406 ;;  sign            1   34[BANK0 ] unsigned char 
 19407 ;;  counter         1   33[BANK0 ] unsigned char 
 19408 ;; Return value:  Size  Location     Type
 19409 ;;                  2   29[BANK0 ] int 
 19410 ;; Registers used:
 19411 ;;		wreg, status,2, status,0
 19412 ;; Tracked objects:
 19413 ;;		On entry : 0/0
 19414 ;;		On exit  : 0/0
 19415 ;;		Unchanged: 0/0
 19416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19418 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19420 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19421 ;;Total ram usage:        8 bytes
 19422 ;; Hardware stack levels used:    1
 19423 ;; Hardware stack levels required when called:   11
 19424 ;; This function calls:
 19425 ;;		Nothing
 19426 ;; This function is called by:
 19427 ;;		_Rtcc_SetRtccValue
 19428 ;;		_Rtcc_SetRtccAlarm
 19429 ;; This function uses a non-reentrant model
 19430 ;;
 19431                           
 19432                           	psect	text82
 19433  005176                     __ptext82:
 19434                           	opt stack 0
 19435  005176                     ___awdiv:
 19436                           	opt stack 14
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;incstack = 0
 19440  005176  0E00               	movlw	0
 19441  005178  0100               	movlb	0	; () banked
 19442  00517A  6F82               	movwf	___awdiv@sign& (0+255),b
 19443                           
 19444                           ; BSR set to: 0
 19445  00517C  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19446  00517E  D006               	goto	l3093
 19447                           
 19448                           ; BSR set to: 0
 19449  005180  6D7F               	negf	___awdiv@divisor& (0+255),b
 19450  005182  1F80               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19451  005184  B0D8               	btfsc	status,0,c
 19452  005186  2B80               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19453                           
 19454                           ; BSR set to: 0
 19455  005188  0E01               	movlw	1
 19456  00518A  6F82               	movwf	___awdiv@sign& (0+255),b
 19457  00518C                     l3093:
 19458                           
 19459                           ; BSR set to: 0
 19460                           
 19461                           ; BSR set to: 0
 19462  00518C  AF7E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 19463  00518E  D006               	goto	l3094
 19464                           
 19465                           ; BSR set to: 0
 19466  005190  6D7D               	negf	___awdiv@dividend& (0+255),b
 19467  005192  1F7E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19468  005194  B0D8               	btfsc	status,0,c
 19469  005196  2B7E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19470                           
 19471                           ; BSR set to: 0
 19472  005198  0E01               	movlw	1
 19473  00519A  1B82               	xorwf	___awdiv@sign& (0+255),f,b
 19474  00519C                     l3094:
 19475                           
 19476                           ; BSR set to: 0
 19477                           
 19478                           ; BSR set to: 0
 19479  00519C  0E00               	movlw	0
 19480  00519E  6F84               	movwf	(___awdiv@quotient+1)& (0+255),b
 19481  0051A0  0E00               	movlw	0
 19482  0051A2  6F83               	movwf	___awdiv@quotient& (0+255),b
 19483                           
 19484                           ; BSR set to: 0
 19485  0051A4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19486  0051A6  1180               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 19487  0051A8  B4D8               	btfsc	status,2,c
 19488  0051AA  D01C               	goto	l3101
 19489                           
 19490                           ; BSR set to: 0
 19491  0051AC  0E01               	movlw	1
 19492  0051AE  6F81               	movwf	___awdiv@counter& (0+255),b
 19493  0051B0  D004               	goto	l3096
 19494  0051B2                     
 19495                           ; BSR set to: 0
 19496                           
 19497                           ; BSR set to: 0
 19498  0051B2  90D8               	bcf	status,0,c
 19499  0051B4  377F               	rlcf	___awdiv@divisor& (0+255),f,b
 19500  0051B6  3780               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19501  0051B8  2B81               	incf	___awdiv@counter& (0+255),f,b
 19502  0051BA                     l3096:
 19503                           
 19504                           ; BSR set to: 0
 19505                           
 19506                           ; BSR set to: 0
 19507  0051BA  AF80               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19508  0051BC  D7FA               	goto	l3097
 19509  0051BE                     u13330:
 19510                           
 19511                           ; BSR set to: 0
 19512                           
 19513                           ; BSR set to: 0
 19514                           
 19515                           ; BSR set to: 0
 19516  0051BE  90D8               	bcf	status,0,c
 19517  0051C0  3783               	rlcf	___awdiv@quotient& (0+255),f,b
 19518  0051C2  3784               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19519                           
 19520                           ; BSR set to: 0
 19521  0051C4  517F               	movf	___awdiv@divisor& (0+255),w,b
 19522  0051C6  5D7D               	subwf	___awdiv@dividend& (0+255),w,b
 19523  0051C8  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19524  0051CA  597E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19525  0051CC  A0D8               	btfss	status,0,c
 19526  0051CE  D005               	goto	l3100
 19527                           
 19528                           ; BSR set to: 0
 19529  0051D0  517F               	movf	___awdiv@divisor& (0+255),w,b
 19530  0051D2  5F7D               	subwf	___awdiv@dividend& (0+255),f,b
 19531  0051D4  5180               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19532  0051D6  5B7E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19533                           
 19534                           ; BSR set to: 0
 19535  0051D8  8183               	bsf	___awdiv@quotient& (0+255),0,b
 19536  0051DA                     l3100:
 19537                           
 19538                           ; BSR set to: 0
 19539                           
 19540                           ; BSR set to: 0
 19541  0051DA  90D8               	bcf	status,0,c
 19542  0051DC  3380               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19543  0051DE  337F               	rrcf	___awdiv@divisor& (0+255),f,b
 19544                           
 19545                           ; BSR set to: 0
 19546  0051E0  2F81               	decfsz	___awdiv@counter& (0+255),f,b
 19547  0051E2  D7ED               	goto	u13330
 19548  0051E4                     l3101:
 19549                           
 19550                           ; BSR set to: 0
 19551                           
 19552                           ; BSR set to: 0
 19553                           
 19554                           ; BSR set to: 0
 19555  0051E4  5182               	movf	___awdiv@sign& (0+255),w,b
 19556  0051E6  B4D8               	btfsc	status,2,c
 19557  0051E8  D004               	goto	l3102
 19558                           
 19559                           ; BSR set to: 0
 19560  0051EA  6D83               	negf	___awdiv@quotient& (0+255),b
 19561  0051EC  1F84               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19562  0051EE  B0D8               	btfsc	status,0,c
 19563  0051F0  2B84               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19564  0051F2                     l3102:
 19565                           
 19566                           ; BSR set to: 0
 19567                           
 19568                           ; BSR set to: 0
 19569  0051F2  C083  F07D         	movff	___awdiv@quotient,?___awdiv
 19570  0051F6  C084  F07E         	movff	___awdiv@quotient+1,?___awdiv+1
 19571  0051FA  0012               	return	
 19572  0051FC                     __end_of___awdiv:
 19573                           	opt stack 0
 19574                           tosu	equ	0xFFF
 19575                           tosh	equ	0xFFE
 19576                           tosl	equ	0xFFD
 19577                           pclath	equ	0xFFA
 19578                           tblptru	equ	0xFF8
 19579                           tblptrh	equ	0xFF7
 19580                           tblptrl	equ	0xFF6
 19581                           tablat	equ	0xFF5
 19582                           prodh	equ	0xFF4
 19583                           prodl	equ	0xFF3
 19584                           intcon	equ	0xFF2
 19585                           intcon2	equ	0xFF1
 19586                           intcon3	equ	0xFF0
 19587                           indf0	equ	0xFEF
 19588                           postinc0	equ	0xFEE
 19589                           plusw0	equ	0xFEB
 19590                           fsr0h	equ	0xFEA
 19591                           fsr0l	equ	0xFE9
 19592                           wreg	equ	0xFE8
 19593                           indf1	equ	0xFE7
 19594                           postinc1	equ	0xFE6
 19595                           postdec1	equ	0xFE5
 19596                           fsr1h	equ	0xFE2
 19597                           fsr1l	equ	0xFE1
 19598                           indf2	equ	0xFDF
 19599                           postinc2	equ	0xFDE
 19600                           postdec2	equ	0xFDD
 19601                           plusw2	equ	0xFDB
 19602                           fsr2h	equ	0xFDA
 19603                           fsr2l	equ	0xFD9
 19604                           status	equ	0xFD8
 19605                           
 19606 ;; *************** function _Rtcc_LockRtc *****************
 19607 ;; Defined at:
 19608 ;;		line 183 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19609 ;; Parameters:    Size  Location     Type
 19610 ;;		None
 19611 ;; Auto vars:     Size  Location     Type
 19612 ;;		None
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  1    wreg      void 
 19615 ;; Registers used:
 19616 ;;		None
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19626 ;;Total ram usage:        0 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:   11
 19629 ;; This function calls:
 19630 ;;		Nothing
 19631 ;; This function is called by:
 19632 ;;		_Rtcm_MainTask
 19633 ;;		_Rtcm_SetRtccDate
 19634 ;;		_Rtcm_SetRtccAlarm
 19635 ;; This function uses a non-reentrant model
 19636 ;;
 19637                           
 19638                           	psect	text83
 19639  006A5A                     __ptext83:
 19640                           	opt stack 0
 19641  006A5A                     _Rtcc_LockRtc:
 19642                           	opt stack 15
 19643                           
 19644                           ; BSR set to: 0
 19645                           ;incstack = 0
 19646  006A5A  010F               	movlb	15	;# 
 19647  006A5C  0E55               	movlw	85	;# 
 19648  006A5E  6EA7               	movwf	4007,c	;# 
 19649  006A60  0EAA               	movlw	170	;# 
 19650  006A62  6EA7               	movwf	4007,c	;# 
 19651                           
 19652                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 19653  006A64  010F               	movlb	15	; () banked
 19654  006A66  9B3F               	bcf	63,5,b	;volatile
 19655                           
 19656                           ; BSR set to: 15
 19657  006A68  0012               	return		;funcret
 19658  006A6A                     __end_of_Rtcc_LockRtc:
 19659                           	opt stack 0
 19660                           tosu	equ	0xFFF
 19661                           tosh	equ	0xFFE
 19662                           tosl	equ	0xFFD
 19663                           pclath	equ	0xFFA
 19664                           tblptru	equ	0xFF8
 19665                           tblptrh	equ	0xFF7
 19666                           tblptrl	equ	0xFF6
 19667                           tablat	equ	0xFF5
 19668                           prodh	equ	0xFF4
 19669                           prodl	equ	0xFF3
 19670                           intcon	equ	0xFF2
 19671                           intcon2	equ	0xFF1
 19672                           intcon3	equ	0xFF0
 19673                           indf0	equ	0xFEF
 19674                           postinc0	equ	0xFEE
 19675                           plusw0	equ	0xFEB
 19676                           fsr0h	equ	0xFEA
 19677                           fsr0l	equ	0xFE9
 19678                           wreg	equ	0xFE8
 19679                           indf1	equ	0xFE7
 19680                           postinc1	equ	0xFE6
 19681                           postdec1	equ	0xFE5
 19682                           fsr1h	equ	0xFE2
 19683                           fsr1l	equ	0xFE1
 19684                           indf2	equ	0xFDF
 19685                           postinc2	equ	0xFDE
 19686                           postdec2	equ	0xFDD
 19687                           plusw2	equ	0xFDB
 19688                           fsr2h	equ	0xFDA
 19689                           fsr2l	equ	0xFD9
 19690                           status	equ	0xFD8
 19691                           
 19692 ;; *************** function _Rtcm_GetRtccDate *****************
 19693 ;; Defined at:
 19694 ;;		line 202 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 19695 ;; Parameters:    Size  Location     Type
 19696 ;;		None
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;  LocalDate       8   42[BANK0 ] struct _RtccDateType
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  8   33[BANK0 ] struct _RtccDateType
 19701 ;; Registers used:
 19702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19708 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19709 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19711 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19712 ;;Total ram usage:       17 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:   12
 19715 ;; This function calls:
 19716 ;;		_Rtcc_GetRtccValue
 19717 ;; This function is called by:
 19718 ;;		_Rtcm_MainTask
 19719 ;; This function uses a non-reentrant model
 19720 ;;
 19721                           
 19722                           	psect	text84
 19723  0056D6                     __ptext84:
 19724                           	opt stack 0
 19725  0056D6                     _Rtcm_GetRtccDate:
 19726                           	opt stack 15
 19727                           
 19728                           ;rtcm.c: 204: RtccDateType LocalDate;
 19729                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 19730                           
 19731                           ; BSR set to: 15
 19732                           ;incstack = 0
 19733  0056D6  0E00               	movlw	0
 19734  0056D8  EC7E  F026         	call	_Rtcc_GetRtccValue
 19735  0056DC  0100               	movlb	0	; () banked
 19736  0056DE  6F89               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 19737  0056E0  0ED0               	movlw	208
 19738  0056E2  2589               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 19739  0056E4  6F8A               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 19740  0056E6  6B8B               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 19741  0056E8  0E07               	movlw	7
 19742  0056EA  238B               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 19743                           
 19744                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 19745  0056EC  0E01               	movlw	1
 19746  0056EE  EC7E  F026         	call	_Rtcc_GetRtccValue
 19747  0056F2  0100               	movlb	0	; () banked
 19748  0056F4  6F8C               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 19749                           
 19750                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 19751  0056F6  0E02               	movlw	2
 19752  0056F8  EC7E  F026         	call	_Rtcc_GetRtccValue
 19753  0056FC  0100               	movlb	0	; () banked
 19754  0056FE  6F8D               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 19755                           
 19756                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 19757  005700  0E03               	movlw	3
 19758  005702  EC7E  F026         	call	_Rtcc_GetRtccValue
 19759  005706  0100               	movlb	0	; () banked
 19760  005708  6F8E               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 19761                           
 19762                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 19763  00570A  0E04               	movlw	4
 19764  00570C  EC7E  F026         	call	_Rtcc_GetRtccValue
 19765  005710  0100               	movlb	0	; () banked
 19766  005712  6F8F               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 19767                           
 19768                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 19769  005714  0E05               	movlw	5
 19770  005716  EC7E  F026         	call	_Rtcc_GetRtccValue
 19771  00571A  0100               	movlb	0	; () banked
 19772  00571C  6F90               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 19773                           
 19774                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 19775  00571E  0E06               	movlw	6
 19776  005720  EC7E  F026         	call	_Rtcc_GetRtccValue
 19777  005724  0100               	movlb	0	; () banked
 19778  005726  6F91               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;rtcm.c: 216: return LocalDate;
 19782  005728  EE20  F08A         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 19783  00572C  EE00  F081         	lfsr	0,?_Rtcm_GetRtccDate
 19784  005730  0E07               	movlw	7
 19785  005732                     u15781:
 19786  005732  CFDB FFEB          	movff	plusw2,plusw0
 19787  005736  06E8               	decf	wreg,f,c
 19788  005738  E2FC               	bc	u15781
 19789  00573A  0012               	return	
 19790  00573C                     __end_of_Rtcm_GetRtccDate:
 19791                           	opt stack 0
 19792                           tosu	equ	0xFFF
 19793                           tosh	equ	0xFFE
 19794                           tosl	equ	0xFFD
 19795                           pclath	equ	0xFFA
 19796                           tblptru	equ	0xFF8
 19797                           tblptrh	equ	0xFF7
 19798                           tblptrl	equ	0xFF6
 19799                           tablat	equ	0xFF5
 19800                           prodh	equ	0xFF4
 19801                           prodl	equ	0xFF3
 19802                           intcon	equ	0xFF2
 19803                           intcon2	equ	0xFF1
 19804                           intcon3	equ	0xFF0
 19805                           indf0	equ	0xFEF
 19806                           postinc0	equ	0xFEE
 19807                           plusw0	equ	0xFEB
 19808                           fsr0h	equ	0xFEA
 19809                           fsr0l	equ	0xFE9
 19810                           wreg	equ	0xFE8
 19811                           indf1	equ	0xFE7
 19812                           postinc1	equ	0xFE6
 19813                           postdec1	equ	0xFE5
 19814                           fsr1h	equ	0xFE2
 19815                           fsr1l	equ	0xFE1
 19816                           indf2	equ	0xFDF
 19817                           postinc2	equ	0xFDE
 19818                           postdec2	equ	0xFDD
 19819                           plusw2	equ	0xFDB
 19820                           fsr2h	equ	0xFDA
 19821                           fsr2l	equ	0xFD9
 19822                           status	equ	0xFD8
 19823                           
 19824 ;; *************** function _Rtcc_GetRtccValue *****************
 19825 ;; Defined at:
 19826 ;;		line 205 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19827 ;; Parameters:    Size  Location     Type
 19828 ;;  RtccPtrVal      1    wreg     enum E7757
 19829 ;; Auto vars:     Size  Location     Type
 19830 ;;  RtccPtrVal      1   30[BANK0 ] enum E7757
 19831 ;;  RegValue        1   32[BANK0 ] unsigned char 
 19832 ;;  RetValue        1   31[BANK0 ] unsigned char 
 19833 ;; Return value:  Size  Location     Type
 19834 ;;                  1    wreg      unsigned char 
 19835 ;; Registers used:
 19836 ;;		wreg, status,2, status,0, prodl, prodh
 19837 ;; Tracked objects:
 19838 ;;		On entry : 0/0
 19839 ;;		On exit  : 0/0
 19840 ;;		Unchanged: 0/0
 19841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19843 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19846 ;;Total ram usage:        4 bytes
 19847 ;; Hardware stack levels used:    1
 19848 ;; Hardware stack levels required when called:   11
 19849 ;; This function calls:
 19850 ;;		Nothing
 19851 ;; This function is called by:
 19852 ;;		_Rtcm_GetRtccDate
 19853 ;; This function uses a non-reentrant model
 19854 ;;
 19855                           
 19856                           	psect	text85
 19857  004CFC                     __ptext85:
 19858                           	opt stack 0
 19859  004CFC                     _Rtcc_GetRtccValue:
 19860                           	opt stack 15
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;incstack = 0
 19864                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 19865  004CFC  0100               	movlb	0	; () banked
 19866  004CFE  6F7E               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 19867                           
 19868                           ;rtcc_drv.c: 208: UINT8 RegValue;
 19869                           ;rtcc_drv.c: 209: UINT8 RetValue;
 19870                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 19871  004D00  D02D               	goto	l416
 19872  004D02                     l417:
 19873                           
 19874                           ; BSR set to: 0
 19875                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 19876  004D02  010F               	movlb	15	; () banked
 19877  004D04  833F               	bsf	63,1,b	;volatile
 19878  004D06                     
 19879                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 19880  004D06  813F               	bsf	63,0,b	;volatile
 19881  004D08  D01C               	goto	L18
 19882  004D0A                     l419:
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 19886  004D0A  010F               	movlb	15	; () banked
 19887  004D0C  833F               	bsf	63,1,b	;volatile
 19888  004D0E  D01E               	goto	L19
 19889  004D10                     l420:
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 19893  004D10  010F               	movlb	15	; () banked
 19894  004D12  833F               	bsf	63,1,b	;volatile
 19895  004D14  D021               	goto	L22
 19896  004D16                     l14439:
 19897                           
 19898                           ; BSR set to: 15
 19899                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 19900  004D16  C080  F07D         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 19901  004D1A  0E0F               	movlw	15
 19902  004D1C  0100               	movlb	0	; () banked
 19903  004D1E  177D               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 19904  004D20  3980               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 19905  004D22  0B0F               	andlw	15
 19906  004D24  0B0F               	andlw	15
 19907  004D26  0D0A               	mullw	10
 19908  004D28  50F3               	movf	prodl,w,c
 19909  004D2A  257D               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 19910  004D2C  6F7F               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 19911                           
 19912                           ;rtcc_drv.c: 241: break;
 19913  004D2E  D02D               	goto	l418
 19914  004D30                     l421:
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 19918  004D30  010F               	movlb	15	; () banked
 19919  004D32  933F               	bcf	63,1,b	;volatile
 19920                           
 19921                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 19922  004D34  813F               	bsf	63,0,b	;volatile
 19923                           
 19924                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 19925  004D36  CF99 F07F          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 19926                           
 19927                           ;rtcc_drv.c: 249: break;
 19928  004D3A  D027               	goto	l418
 19929  004D3C                     l422:
 19930                           
 19931                           ; BSR set to: 0
 19932                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 19933  004D3C  010F               	movlb	15	; () banked
 19934  004D3E  933F               	bcf	63,1,b	;volatile
 19935  004D40  D7E2               	goto	L20
 19936  004D42                     L18:
 19937                           
 19938                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 19939  004D42  CF98 F080          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 19940  004D46  D7E7               	goto	l14439
 19941  004D48                     l423:
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 19945  004D48  010F               	movlb	15	; () banked
 19946  004D4A  933F               	bcf	63,1,b	;volatile
 19947  004D4C                     L19:
 19948                           
 19949                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 19950  004D4C  913F               	bcf	63,0,b	;volatile
 19951                           
 19952                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 19953  004D4E  CF99 F080          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 19954  004D52  D7E1               	goto	l14439
 19955  004D54                     l424:
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 19959  004D54  010F               	movlb	15	; () banked
 19960  004D56  933F               	bcf	63,1,b	;volatile
 19961  004D58                     L22:
 19962                           
 19963                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 19964  004D58  913F               	bcf	63,0,b	;volatile
 19965  004D5A  D7F3               	goto	L18
 19966  004D5C                     l416:
 19967                           
 19968                           ; BSR set to: 0
 19969  004D5C  0100               	movlb	0	; () banked
 19970  004D5E  517E               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 19971                           
 19972                           ; Switch size 1, requested type "space"
 19973                           ; Number of cases is 7, Range of values is 0 to 6
 19974                           ; switch strategies available:
 19975                           ; Name         Instructions Cycles
 19976                           ; simple_byte           22    12 (average)
 19977                           ;	Chosen strategy is simple_byte
 19978  004D60  0A00               	xorlw	0	; case 0
 19979  004D62  B4D8               	btfsc	status,2,c
 19980  004D64  D7CE               	goto	l417
 19981  004D66  0A01               	xorlw	1	; case 1
 19982  004D68  B4D8               	btfsc	status,2,c
 19983  004D6A  D7CF               	goto	l419
 19984  004D6C  0A03               	xorlw	3	; case 2
 19985  004D6E  B4D8               	btfsc	status,2,c
 19986  004D70  D7CF               	goto	l420
 19987  004D72  0A01               	xorlw	1	; case 3
 19988  004D74  B4D8               	btfsc	status,2,c
 19989  004D76  D7DC               	goto	l421
 19990  004D78  0A07               	xorlw	7	; case 4
 19991  004D7A  B4D8               	btfsc	status,2,c
 19992  004D7C  D7DF               	goto	l422
 19993  004D7E  0A01               	xorlw	1	; case 5
 19994  004D80  B4D8               	btfsc	status,2,c
 19995  004D82  D7E2               	goto	l423
 19996  004D84  0A03               	xorlw	3	; case 6
 19997  004D86  B4D8               	btfsc	status,2,c
 19998  004D88  D7E5               	goto	l424
 19999  004D8A                     l418:
 20000                           
 20001                           ;rtcc_drv.c: 286: return RetValue;
 20002                           
 20003                           ; BSR set to: 0
 20004  004D8A  0100               	movlb	0	; () banked
 20005  004D8C  517F               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 20006  004D8E  0012               	return	
 20007  004D90                     __end_of_Rtcc_GetRtccValue:
 20008                           	opt stack 0
 20009                           tosu	equ	0xFFF
 20010                           tosh	equ	0xFFE
 20011                           tosl	equ	0xFFD
 20012                           pclath	equ	0xFFA
 20013                           tblptru	equ	0xFF8
 20014                           tblptrh	equ	0xFF7
 20015                           tblptrl	equ	0xFF6
 20016                           tablat	equ	0xFF5
 20017                           prodh	equ	0xFF4
 20018                           prodl	equ	0xFF3
 20019                           intcon	equ	0xFF2
 20020                           intcon2	equ	0xFF1
 20021                           intcon3	equ	0xFF0
 20022                           indf0	equ	0xFEF
 20023                           postinc0	equ	0xFEE
 20024                           plusw0	equ	0xFEB
 20025                           fsr0h	equ	0xFEA
 20026                           fsr0l	equ	0xFE9
 20027                           wreg	equ	0xFE8
 20028                           indf1	equ	0xFE7
 20029                           postinc1	equ	0xFE6
 20030                           postdec1	equ	0xFE5
 20031                           fsr1h	equ	0xFE2
 20032                           fsr1l	equ	0xFE1
 20033                           indf2	equ	0xFDF
 20034                           postinc2	equ	0xFDE
 20035                           postdec2	equ	0xFDD
 20036                           plusw2	equ	0xFDB
 20037                           fsr2h	equ	0xFDA
 20038                           fsr2l	equ	0xFD9
 20039                           status	equ	0xFD8
 20040                           
 20041 ;; *************** function _Rtcc_SetRtcStatus *****************
 20042 ;; Defined at:
 20043 ;;		line 149 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;  Status          1    wreg     unsigned char 
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;  Status          1   29[BANK0 ] unsigned char 
 20048 ;; Return value:  Size  Location     Type
 20049 ;;                  1    wreg      void 
 20050 ;; Registers used:
 20051 ;;		wreg
 20052 ;; Tracked objects:
 20053 ;;		On entry : 0/0
 20054 ;;		On exit  : 0/0
 20055 ;;		Unchanged: 0/0
 20056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20060 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20061 ;;Total ram usage:        1 bytes
 20062 ;; Hardware stack levels used:    1
 20063 ;; Hardware stack levels required when called:   11
 20064 ;; This function calls:
 20065 ;;		Nothing
 20066 ;; This function is called by:
 20067 ;;		_Rtcm_MainTask
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           	psect	text86
 20072  0069A8                     __ptext86:
 20073                           	opt stack 0
 20074  0069A8                     _Rtcc_SetRtcStatus:
 20075                           	opt stack 16
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;incstack = 0
 20079                           ;Rtcc_SetRtcStatus@Status stored from wreg
 20080  0069A8  0100               	movlb	0	; () banked
 20081  0069AA  6F7D               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 20082                           
 20083                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 20084  0069AC  0100               	movlb	0	; () banked
 20085  0069AE  B17D               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 20086  0069B0  D003               	bra	u14715
 20087  0069B2  010F               	movlb	15	; () banked
 20088  0069B4  9F3F               	bcf	63,7,b	;volatile
 20089  0069B6  D002               	bra	u14716
 20090  0069B8                     u14715:
 20091  0069B8  010F               	movlb	15	; () banked
 20092  0069BA  8F3F               	bsf	63,7,b	;volatile
 20093  0069BC                     u14716:
 20094                           
 20095                           ; BSR set to: 15
 20096  0069BC  0012               	return		;funcret
 20097  0069BE                     __end_of_Rtcc_SetRtcStatus:
 20098                           	opt stack 0
 20099                           tosu	equ	0xFFF
 20100                           tosh	equ	0xFFE
 20101                           tosl	equ	0xFFD
 20102                           pclath	equ	0xFFA
 20103                           tblptru	equ	0xFF8
 20104                           tblptrh	equ	0xFF7
 20105                           tblptrl	equ	0xFF6
 20106                           tablat	equ	0xFF5
 20107                           prodh	equ	0xFF4
 20108                           prodl	equ	0xFF3
 20109                           intcon	equ	0xFF2
 20110                           intcon2	equ	0xFF1
 20111                           intcon3	equ	0xFF0
 20112                           indf0	equ	0xFEF
 20113                           postinc0	equ	0xFEE
 20114                           plusw0	equ	0xFEB
 20115                           fsr0h	equ	0xFEA
 20116                           fsr0l	equ	0xFE9
 20117                           wreg	equ	0xFE8
 20118                           indf1	equ	0xFE7
 20119                           postinc1	equ	0xFE6
 20120                           postdec1	equ	0xFE5
 20121                           fsr1h	equ	0xFE2
 20122                           fsr1l	equ	0xFE1
 20123                           indf2	equ	0xFDF
 20124                           postinc2	equ	0xFDE
 20125                           postdec2	equ	0xFDD
 20126                           plusw2	equ	0xFDB
 20127                           fsr2h	equ	0xFDA
 20128                           fsr2l	equ	0xFD9
 20129                           status	equ	0xFD8
 20130                           
 20131 ;; *************** function _Rtcc_RtcConfig *****************
 20132 ;; Defined at:
 20133 ;;		line 106 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20134 ;; Parameters:    Size  Location     Type
 20135 ;;  RtcConfig       2   30[BANK0 ] PTR struct _RtccConfigTy
 20136 ;;		 -> RtcConfig(4), 
 20137 ;; Auto vars:     Size  Location     Type
 20138 ;;		None
 20139 ;; Return value:  Size  Location     Type
 20140 ;;                  1    wreg      void 
 20141 ;; Registers used:
 20142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20151 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20152 ;;Total ram usage:        3 bytes
 20153 ;; Hardware stack levels used:    1
 20154 ;; Hardware stack levels required when called:   12
 20155 ;; This function calls:
 20156 ;;		_RtccIrqInit
 20157 ;; This function is called by:
 20158 ;;		_Rtcm_MainTask
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           
 20162                           	psect	text87
 20163  0048CA                     __ptext87:
 20164                           	opt stack 0
 20165  0048CA                     _Rtcc_RtcConfig:
 20166                           	opt stack 15
 20167                           
 20168                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 20169                           
 20170                           ; BSR set to: 15
 20171                           ;incstack = 0
 20172  0048CA  C07E  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 20173  0048CE  C07F  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 20174  0048D2  50DF               	movf	indf2,w,c
 20175  0048D4  0100               	movlb	0	; () banked
 20176  0048D6  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20177  0048D8  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20178  0048DA  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20179  0048DC  010F               	movlb	15	; () banked
 20180  0048DE  513F               	movf	63,w,b	;volatile
 20181  0048E0  0100               	movlb	0	; () banked
 20182  0048E2  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20183  0048E4  0BFB               	andlw	-5
 20184  0048E6  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20185  0048E8  010F               	movlb	15	; () banked
 20186  0048EA  6F3F               	movwf	63,b	;volatile
 20187                           
 20188                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 20189  0048EC  0100               	movlb	0	; () banked
 20190  0048EE  EE20 F001          	lfsr	2,1
 20191  0048F2  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20192  0048F4  26D9               	addwf	fsr2l,f,c
 20193  0048F6  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20194  0048F8  22DA               	addwfc	fsr2h,f,c
 20195  0048FA  50DF               	movf	indf2,w,c
 20196  0048FC  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20197  0048FE  0E01               	movlw	1
 20198  004900  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20199  004902  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20200  004904  010F               	movlb	15	; () banked
 20201  004906  513C               	movf	60,w,b	;volatile
 20202  004908  0100               	movlb	0	; () banked
 20203  00490A  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20204  00490C  0BFD               	andlw	-3
 20205  00490E  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20206  004910  010F               	movlb	15	; () banked
 20207  004912  6F3C               	movwf	60,b	;volatile
 20208                           
 20209                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 20210  004914  0100               	movlb	0	; () banked
 20211  004916  EE20 F001          	lfsr	2,1
 20212  00491A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20213  00491C  26D9               	addwf	fsr2l,f,c
 20214  00491E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20215  004920  22DA               	addwfc	fsr2h,f,c
 20216  004922  50DF               	movf	indf2,w,c
 20217  004924  6F80               	movwf	??_Rtcc_RtcConfig& (0+255),b
 20218  004926  90D8               	bcf	status,0,c
 20219  004928  3380               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 20220  00492A  0E01               	movlw	1
 20221  00492C  1780               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 20222  00492E  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20223  004930  4780               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 20224  004932  010F               	movlb	15	; () banked
 20225  004934  513C               	movf	60,w,b	;volatile
 20226  004936  0100               	movlb	0	; () banked
 20227  004938  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20228  00493A  0BFB               	andlw	-5
 20229  00493C  1980               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 20230  00493E  010F               	movlb	15	; () banked
 20231  004940  6F3C               	movwf	60,b	;volatile
 20232                           
 20233                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 20234  004942  0100               	movlb	0	; () banked
 20235  004944  EE20 F002          	lfsr	2,2
 20236  004948  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20237  00494A  26D9               	addwf	fsr2l,f,c
 20238  00494C  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20239  00494E  22DA               	addwfc	fsr2h,f,c
 20240  004950  04DE               	decf	postinc2,w,c
 20241  004952  A4D8               	btfss	status,2,c
 20242  004954  0012               	return	
 20243                           
 20244                           ; BSR set to: 0
 20245                           ;rtcc_drv.c: 115: {
 20246                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 20247  004956  EE20 F003          	lfsr	2,3
 20248  00495A  517E               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 20249  00495C  26D9               	addwf	fsr2l,f,c
 20250  00495E  517F               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 20251  004960  22DA               	addwfc	fsr2h,f,c
 20252  004962  50DF               	movf	indf2,w,c
 20253  004964  ECDF  F034         	call	_RtccIrqInit
 20254  004968  0012               	return	
 20255  00496A                     __end_of_Rtcc_RtcConfig:
 20256                           	opt stack 0
 20257                           tosu	equ	0xFFF
 20258                           tosh	equ	0xFFE
 20259                           tosl	equ	0xFFD
 20260                           pclath	equ	0xFFA
 20261                           tblptru	equ	0xFF8
 20262                           tblptrh	equ	0xFF7
 20263                           tblptrl	equ	0xFF6
 20264                           tablat	equ	0xFF5
 20265                           prodh	equ	0xFF4
 20266                           prodl	equ	0xFF3
 20267                           intcon	equ	0xFF2
 20268                           intcon2	equ	0xFF1
 20269                           intcon3	equ	0xFF0
 20270                           indf0	equ	0xFEF
 20271                           postinc0	equ	0xFEE
 20272                           plusw0	equ	0xFEB
 20273                           fsr0h	equ	0xFEA
 20274                           fsr0l	equ	0xFE9
 20275                           wreg	equ	0xFE8
 20276                           indf1	equ	0xFE7
 20277                           postinc1	equ	0xFE6
 20278                           postdec1	equ	0xFE5
 20279                           fsr1h	equ	0xFE2
 20280                           fsr1l	equ	0xFE1
 20281                           indf2	equ	0xFDF
 20282                           postinc2	equ	0xFDE
 20283                           postdec2	equ	0xFDD
 20284                           plusw2	equ	0xFDB
 20285                           fsr2h	equ	0xFDA
 20286                           fsr2l	equ	0xFD9
 20287                           status	equ	0xFD8
 20288                           
 20289 ;; *************** function _RtccIrqInit *****************
 20290 ;; Defined at:
 20291 ;;		line 84 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;  Priority        1    wreg     enum E7716
 20294 ;; Auto vars:     Size  Location     Type
 20295 ;;  Priority        1   29[BANK0 ] enum E7716
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1    wreg      void 
 20298 ;; Registers used:
 20299 ;;		wreg
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/0
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20308 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20309 ;;Total ram usage:        1 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:   11
 20312 ;; This function calls:
 20313 ;;		Nothing
 20314 ;; This function is called by:
 20315 ;;		_Rtcc_RtcConfig
 20316 ;; This function uses a non-reentrant model
 20317 ;;
 20318                           
 20319                           	psect	text88
 20320  0069BE                     __ptext88:
 20321                           	opt stack 0
 20322  0069BE                     _RtccIrqInit:
 20323                           	opt stack 15
 20324                           
 20325                           ;incstack = 0
 20326                           ;RtccIrqInit@Priority stored from wreg
 20327  0069BE  0100               	movlb	0	; () banked
 20328  0069C0  6F7D               	movwf	RtccIrqInit@Priority& (0+255),b
 20329                           
 20330                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 20331  0069C2  90A4               	bcf	4004,0,c	;volatile
 20332                           
 20333                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 20334  0069C4  0100               	movlb	0	; () banked
 20335  0069C6  B17D               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 20336  0069C8  D002               	bra	u13545
 20337  0069CA  90A5               	bcf	4005,0,c	;volatile
 20338  0069CC  D001               	bra	u13546
 20339  0069CE                     u13545:
 20340  0069CE  80A5               	bsf	4005,0,c	;volatile
 20341  0069D0                     u13546:
 20342                           
 20343                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 20344  0069D0  80A3               	bsf	4003,0,c	;volatile
 20345  0069D2  0012               	return		;funcret
 20346  0069D4                     __end_of_RtccIrqInit:
 20347                           	opt stack 0
 20348                           tosu	equ	0xFFF
 20349                           tosh	equ	0xFFE
 20350                           tosl	equ	0xFFD
 20351                           pclath	equ	0xFFA
 20352                           tblptru	equ	0xFF8
 20353                           tblptrh	equ	0xFF7
 20354                           tblptrl	equ	0xFF6
 20355                           tablat	equ	0xFF5
 20356                           prodh	equ	0xFF4
 20357                           prodl	equ	0xFF3
 20358                           intcon	equ	0xFF2
 20359                           intcon2	equ	0xFF1
 20360                           intcon3	equ	0xFF0
 20361                           indf0	equ	0xFEF
 20362                           postinc0	equ	0xFEE
 20363                           plusw0	equ	0xFEB
 20364                           fsr0h	equ	0xFEA
 20365                           fsr0l	equ	0xFE9
 20366                           wreg	equ	0xFE8
 20367                           indf1	equ	0xFE7
 20368                           postinc1	equ	0xFE6
 20369                           postdec1	equ	0xFE5
 20370                           fsr1h	equ	0xFE2
 20371                           fsr1l	equ	0xFE1
 20372                           indf2	equ	0xFDF
 20373                           postinc2	equ	0xFDE
 20374                           postdec2	equ	0xFDD
 20375                           plusw2	equ	0xFDB
 20376                           fsr2h	equ	0xFDA
 20377                           fsr2l	equ	0xFD9
 20378                           status	equ	0xFD8
 20379                           
 20380 ;; *************** function _Rtcc_AlarmConfig *****************
 20381 ;; Defined at:
 20382 ;;		line 129 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 20383 ;; Parameters:    Size  Location     Type
 20384 ;;  AlarmConfig     2   29[BANK0 ] PTR struct _RtccAlarmCon
 20385 ;;		 -> AlCfg(4), 
 20386 ;; Auto vars:     Size  Location     Type
 20387 ;;		None
 20388 ;; Return value:  Size  Location     Type
 20389 ;;                  1    wreg      void 
 20390 ;; Registers used:
 20391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20392 ;; Tracked objects:
 20393 ;;		On entry : 0/0
 20394 ;;		On exit  : 0/0
 20395 ;;		Unchanged: 0/0
 20396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20399 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20400 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20401 ;;Total ram usage:        3 bytes
 20402 ;; Hardware stack levels used:    1
 20403 ;; Hardware stack levels required when called:   11
 20404 ;; This function calls:
 20405 ;;		Nothing
 20406 ;; This function is called by:
 20407 ;;		_Rtcm_MainTask
 20408 ;; This function uses a non-reentrant model
 20409 ;;
 20410                           
 20411                           	psect	text89
 20412  005530                     __ptext89:
 20413                           	opt stack 0
 20414  005530                     _Rtcc_AlarmConfig:
 20415                           	opt stack 16
 20416                           
 20417                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 20418                           
 20419                           ;incstack = 0
 20420  005530  C07D  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 20421  005534  C07E  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 20422  005538  50DF               	movf	indf2,w,c
 20423  00553A  0100               	movlb	0	; () banked
 20424  00553C  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20425  00553E  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20426  005540  337F               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 20427  005542  5091               	movf	3985,w,c	;volatile
 20428  005544  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20429  005546  0B7F               	andlw	-129
 20430  005548  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20431  00554A  6E91               	movwf	3985,c	;volatile
 20432                           
 20433                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 20434  00554C  EE20 F001          	lfsr	2,1
 20435  005550  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20436  005552  26D9               	addwf	fsr2l,f,c
 20437  005554  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20438  005556  22DA               	addwfc	fsr2h,f,c
 20439  005558  50DF               	movf	indf2,w,c
 20440  00555A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20441  00555C  3B7F               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 20442  00555E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20443  005560  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20444  005562  5091               	movf	3985,w,c	;volatile
 20445  005564  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20446  005566  0BBF               	andlw	-65
 20447  005568  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20448  00556A  6E91               	movwf	3985,c	;volatile
 20449                           
 20450                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 20451  00556C  EE20 F002          	lfsr	2,2
 20452  005570  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20453  005572  26D9               	addwf	fsr2l,f,c
 20454  005574  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20455  005576  22DA               	addwfc	fsr2h,f,c
 20456  005578  50DF               	movf	indf2,w,c
 20457  00557A  6F7F               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 20458  00557C  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20459  00557E  477F               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 20460  005580  5091               	movf	3985,w,c	;volatile
 20461  005582  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20462  005584  0BC3               	andlw	-61
 20463  005586  197F               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 20464  005588  6E91               	movwf	3985,c	;volatile
 20465                           
 20466                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 20467  00558A  EE20 F003          	lfsr	2,3
 20468  00558E  517D               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 20469  005590  26D9               	addwf	fsr2l,f,c
 20470  005592  517E               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 20471  005594  22DA               	addwfc	fsr2h,f,c
 20472  005596  50DF               	movf	indf2,w,c
 20473  005598  6E90               	movwf	3984,c	;volatile
 20474                           
 20475                           ; BSR set to: 0
 20476  00559A  0012               	return		;funcret
 20477  00559C                     __end_of_Rtcc_AlarmConfig:
 20478                           	opt stack 0
 20479                           tosu	equ	0xFFF
 20480                           tosh	equ	0xFFE
 20481                           tosl	equ	0xFFD
 20482                           pclath	equ	0xFFA
 20483                           tblptru	equ	0xFF8
 20484                           tblptrh	equ	0xFF7
 20485                           tblptrl	equ	0xFF6
 20486                           tablat	equ	0xFF5
 20487                           prodh	equ	0xFF4
 20488                           prodl	equ	0xFF3
 20489                           intcon	equ	0xFF2
 20490                           intcon2	equ	0xFF1
 20491                           intcon3	equ	0xFF0
 20492                           indf0	equ	0xFEF
 20493                           postinc0	equ	0xFEE
 20494                           plusw0	equ	0xFEB
 20495                           fsr0h	equ	0xFEA
 20496                           fsr0l	equ	0xFE9
 20497                           wreg	equ	0xFE8
 20498                           indf1	equ	0xFE7
 20499                           postinc1	equ	0xFE6
 20500                           postdec1	equ	0xFE5
 20501                           fsr1h	equ	0xFE2
 20502                           fsr1l	equ	0xFE1
 20503                           indf2	equ	0xFDF
 20504                           postinc2	equ	0xFDE
 20505                           postdec2	equ	0xFDD
 20506                           plusw2	equ	0xFDB
 20507                           fsr2h	equ	0xFDA
 20508                           fsr2l	equ	0xFD9
 20509                           status	equ	0xFD8
 20510                           
 20511 ;; *************** function _triggerCmdFsm *****************
 20512 ;; Defined at:
 20513 ;;		line 83 in file "../Source/c/04_App/app_triggerCmd.c"
 20514 ;; Parameters:    Size  Location     Type
 20515 ;;  receivedNumb    2   41[BANK0 ] PTR unsigned char 
 20516 ;;		 -> receivedNumber(13), 
 20517 ;; Auto vars:     Size  Location     Type
 20518 ;;  numberInMemo    1   44[BANK0 ] unsigned char 
 20519 ;;  isComplete      1   43[BANK0 ] unsigned char 
 20520 ;; Return value:  Size  Location     Type
 20521 ;;                  1    wreg      unsigned char 
 20522 ;; Registers used:
 20523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20524 ;; Tracked objects:
 20525 ;;		On entry : 0/0
 20526 ;;		On exit  : 0/0
 20527 ;;		Unchanged: 0/0
 20528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20533 ;;Total ram usage:        4 bytes
 20534 ;; Hardware stack levels used:    1
 20535 ;; Hardware stack levels required when called:   14
 20536 ;; This function calls:
 20537 ;;		_triggerRelay
 20538 ;; This function is called by:
 20539 ;;		_MyApp_Task
 20540 ;; This function uses a non-reentrant model
 20541 ;;
 20542                           
 20543                           	psect	text90
 20544  00559C                     __ptext90:
 20545                           	opt stack 0
 20546  00559C                     _triggerCmdFsm:
 20547                           	opt stack 13
 20548                           
 20549                           ;app_triggerCmd.c: 85: static triggerFsmStates currentState = TRIGGER_FSM_CHECK_NUMBER;
 20550                           ;app_triggerCmd.c: 86: bool isComplete = 0;
 20551                           
 20552                           ; BSR set to: 0
 20553                           ;incstack = 0
 20554  00559C  0E00               	movlw	0
 20555  00559E  0100               	movlb	0	; () banked
 20556  0055A0  6F8B               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20557                           
 20558                           ;app_triggerCmd.c: 87: uint8_t numberInMemory = 1;
 20559  0055A2  0E01               	movlw	1
 20560  0055A4  6F8C               	movwf	triggerCmdFsm@numberInMemory& (0+255),b
 20561                           
 20562                           ;app_triggerCmd.c: 89: switch (currentState)
 20563  0055A6  D01F               	goto	l2879
 20564  0055A8                     
 20565                           ;app_triggerCmd.c: 94: if (numberInMemory == 1)
 20566                           
 20567                           ; BSR set to: 0
 20568  0055A8  0100               	movlb	0	; () banked
 20569  0055AA  058C               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20570  0055AC  A4D8               	btfss	status,2,c
 20571  0055AE  D002               	goto	l2881
 20572  0055B0                     u16080:
 20573                           
 20574                           ; BSR set to: 0
 20575                           ;app_triggerCmd.c: 95: {
 20576                           ;app_triggerCmd.c: 96: currentState = TRIGGER_FSM_COMPLETE;
 20577  0055B0  0E03               	movlw	3
 20578  0055B2  D016               	goto	L26
 20579  0055B4                     l2881:
 20580                           
 20581                           ;app_triggerCmd.c: 98: else if (numberInMemory != 0 && numberInMemory != 1)
 20582                           
 20583                           ; BSR set to: 1
 20584  0055B4  0100               	movlb	0	; () banked
 20585  0055B6  518C               	movf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20586  0055B8  B4D8               	btfsc	status,2,c
 20587  0055BA  D023               	goto	l2884
 20588                           
 20589                           ; BSR set to: 0
 20590  0055BC  058C               	decf	triggerCmdFsm@numberInMemory& (0+255),w,b
 20591  0055BE  B4D8               	btfsc	status,2,c
 20592  0055C0  D020               	goto	l2884
 20593                           
 20594                           ; BSR set to: 0
 20595                           ;app_triggerCmd.c: 99: {
 20596                           ;app_triggerCmd.c: 100: currentState = TRIGGER_FSM_ACTIVATE_RELAY;
 20597  0055C2  0E01               	movlw	1
 20598  0055C4  D00D               	goto	L26
 20599  0055C6                     
 20600                           ; BSR set to: 1
 20601                           ;app_triggerCmd.c: 105: triggerRelay(1);
 20602                           
 20603                           ; BSR set to: 1
 20604  0055C6  0E01               	movlw	1
 20605  0055C8  ECC3  F031         	call	_triggerRelay
 20606                           
 20607                           ;app_triggerCmd.c: 106: currentState = TRIGGER_FSM_DEACTIVATE_RELAY;
 20608  0055CC  0E02               	movlw	2
 20609  0055CE  D008               	goto	L26
 20610  0055D0                     
 20611                           ; BSR set to: 1
 20612                           ;app_triggerCmd.c: 111: triggerRelay(0);
 20613                           
 20614                           ; BSR set to: 1
 20615  0055D0  0E00               	movlw	0
 20616  0055D2  ECC3  F031         	call	_triggerRelay
 20617  0055D6  D7EC               	goto	u16080
 20618  0055D8                     
 20619                           ; BSR set to: 1
 20620                           ;app_triggerCmd.c: 116: isComplete = 1;
 20621                           
 20622                           ; BSR set to: 1
 20623  0055D8  0E01               	movlw	1
 20624  0055DA  0100               	movlb	0	; () banked
 20625  0055DC  6F8B               	movwf	triggerCmdFsm@isComplete& (0+255),b
 20626                           
 20627                           ;app_triggerCmd.c: 117: currentState = TRIGGER_FSM_CHECK_NUMBER;
 20628  0055DE  0E00               	movlw	0
 20629  0055E0                     L26:
 20630  0055E0  0101               	movlb	1	; () banked
 20631  0055E2  6FD3               	movwf	triggerCmdFsm@currentState& (0+255),b
 20632                           
 20633                           ; BSR set to: 1
 20634                           ;app_triggerCmd.c: 122: }
 20635                           
 20636                           ; BSR set to: 1
 20637                           ;app_triggerCmd.c: 121: break;
 20638                           
 20639                           ;app_triggerCmd.c: 120: default:
 20640                           
 20641                           ;app_triggerCmd.c: 118: break;
 20642  0055E4  D00E               	goto	l2884
 20643  0055E6                     l2879:
 20644                           
 20645                           ; BSR set to: 1
 20646  0055E6  0101               	movlb	1	; () banked
 20647  0055E8  51D3               	movf	triggerCmdFsm@currentState& (0+255),w,b
 20648                           
 20649                           ; Switch size 1, requested type "space"
 20650                           ; Number of cases is 4, Range of values is 0 to 3
 20651                           ; switch strategies available:
 20652                           ; Name         Instructions Cycles
 20653                           ; simple_byte           13     7 (average)
 20654                           ;	Chosen strategy is simple_byte
 20655  0055EA  0A00               	xorlw	0	; case 0
 20656  0055EC  B4D8               	btfsc	status,2,c
 20657  0055EE  D7DC               	goto	l2880
 20658  0055F0  0A01               	xorlw	1	; case 1
 20659  0055F2  B4D8               	btfsc	status,2,c
 20660  0055F4  D7E8               	goto	l2885
 20661  0055F6  0A03               	xorlw	3	; case 2
 20662  0055F8  B4D8               	btfsc	status,2,c
 20663  0055FA  D7EA               	goto	l2886
 20664  0055FC  0A01               	xorlw	1	; case 3
 20665  0055FE  B4D8               	btfsc	status,2,c
 20666  005600  D7EB               	goto	l2887
 20667  005602                     l2884:
 20668                           
 20669                           ;app_triggerCmd.c: 123: return isComplete;
 20670                           
 20671                           ; BSR set to: 1
 20672  005602  0100               	movlb	0	; () banked
 20673  005604  518B               	movf	triggerCmdFsm@isComplete& (0+255),w,b
 20674  005606  0012               	return	
 20675  005608                     __end_of_triggerCmdFsm:
 20676                           	opt stack 0
 20677                           tosu	equ	0xFFF
 20678                           tosh	equ	0xFFE
 20679                           tosl	equ	0xFFD
 20680                           pclath	equ	0xFFA
 20681                           tblptru	equ	0xFF8
 20682                           tblptrh	equ	0xFF7
 20683                           tblptrl	equ	0xFF6
 20684                           tablat	equ	0xFF5
 20685                           prodh	equ	0xFF4
 20686                           prodl	equ	0xFF3
 20687                           intcon	equ	0xFF2
 20688                           intcon2	equ	0xFF1
 20689                           intcon3	equ	0xFF0
 20690                           indf0	equ	0xFEF
 20691                           postinc0	equ	0xFEE
 20692                           plusw0	equ	0xFEB
 20693                           fsr0h	equ	0xFEA
 20694                           fsr0l	equ	0xFE9
 20695                           wreg	equ	0xFE8
 20696                           indf1	equ	0xFE7
 20697                           postinc1	equ	0xFE6
 20698                           postdec1	equ	0xFE5
 20699                           fsr1h	equ	0xFE2
 20700                           fsr1l	equ	0xFE1
 20701                           indf2	equ	0xFDF
 20702                           postinc2	equ	0xFDE
 20703                           postdec2	equ	0xFDD
 20704                           plusw2	equ	0xFDB
 20705                           fsr2h	equ	0xFDA
 20706                           fsr2l	equ	0xFD9
 20707                           status	equ	0xFD8
 20708                           
 20709 ;; *************** function _triggerRelay *****************
 20710 ;; Defined at:
 20711 ;;		line 64 in file "../Source/c/04_App/app_triggerCmd.c"
 20712 ;; Parameters:    Size  Location     Type
 20713 ;;  isRelayOn       1    wreg     unsigned char 
 20714 ;; Auto vars:     Size  Location     Type
 20715 ;;  isRelayOn       1   38[BANK0 ] unsigned char 
 20716 ;;  txBuffer        2   39[BANK0 ] unsigned char [2]
 20717 ;;  res             1   37[BANK0 ] unsigned char 
 20718 ;; Return value:  Size  Location     Type
 20719 ;;                  1    wreg      unsigned char 
 20720 ;; Registers used:
 20721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20722 ;; Tracked objects:
 20723 ;;		On entry : 0/0
 20724 ;;		On exit  : 0/0
 20725 ;;		Unchanged: 0/0
 20726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20728 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20731 ;;Total ram usage:        4 bytes
 20732 ;; Hardware stack levels used:    1
 20733 ;; Hardware stack levels required when called:   13
 20734 ;; This function calls:
 20735 ;;		_I2cSlv_SendI2cMsg
 20736 ;; This function is called by:
 20737 ;;		_triggerCmdFsm
 20738 ;; This function uses a non-reentrant model
 20739 ;;
 20740                           
 20741                           	psect	text91
 20742  006386                     __ptext91:
 20743                           	opt stack 0
 20744  006386                     _triggerRelay:
 20745                           	opt stack 13
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;incstack = 0
 20749                           ;triggerRelay@isRelayOn stored from wreg
 20750  006386  0100               	movlb	0	; () banked
 20751  006388  6F86               	movwf	triggerRelay@isRelayOn& (0+255),b
 20752                           
 20753                           ;app_triggerCmd.c: 66: uint8_t txBuffer[2] = {0x50, 0x00};
 20754  00638A  C3D2  F087         	movff	triggerRelay@F9012,triggerRelay@txBuffer
 20755  00638E  C3D3  F088         	movff	triggerRelay@F9012+1,triggerRelay@txBuffer+1
 20756                           
 20757                           ;app_triggerCmd.c: 67: uint8_t res = 0u;
 20758  006392  0E00               	movlw	0
 20759  006394  0100               	movlb	0	; () banked
 20760  006396  6F85               	movwf	triggerRelay@res& (0+255),b
 20761                           
 20762                           ; BSR set to: 0
 20763                           ;app_triggerCmd.c: 68: if (isRelayOn)
 20764  006398  5186               	movf	triggerRelay@isRelayOn& (0+255),w,b
 20765  00639A  B4D8               	btfsc	status,2,c
 20766  00639C  D002               	goto	l2873
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;app_triggerCmd.c: 69: {
 20770                           ;app_triggerCmd.c: 70: txBuffer[1] = 0x01;
 20771  00639E  0E01               	movlw	1
 20772  0063A0  6F88               	movwf	(triggerRelay@txBuffer+1)& (0+255),b
 20773  0063A2                     l2873:
 20774                           
 20775                           ; BSR set to: 0
 20776                           ;app_triggerCmd.c: 71: }
 20777                           ;app_triggerCmd.c: 72: res = I2cSlv_SendI2cMsg(txBuffer, 1, 2);
 20778                           
 20779                           ; BSR set to: 0
 20780  0063A2  0E87               	movlw	low triggerRelay@txBuffer
 20781  0063A4  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 20782  0063A6  0E00               	movlw	high triggerRelay@txBuffer
 20783  0063A8  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 20784  0063AA  0E01               	movlw	1
 20785  0063AC  6F82               	movwf	I2cSlv_SendI2cMsg@SlaveAddr& (0+255),b
 20786  0063AE  0E02               	movlw	2
 20787  0063B0  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 20788  0063B2  EC0F  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 20789  0063B6  0100               	movlb	0	; () banked
 20790  0063B8  6F85               	movwf	triggerRelay@res& (0+255),b
 20791  0063BA  0012               	return	
 20792  0063BC                     __end_of_triggerRelay:
 20793                           	opt stack 0
 20794                           tosu	equ	0xFFF
 20795                           tosh	equ	0xFFE
 20796                           tosl	equ	0xFFD
 20797                           pclath	equ	0xFFA
 20798                           tblptru	equ	0xFF8
 20799                           tblptrh	equ	0xFF7
 20800                           tblptrl	equ	0xFF6
 20801                           tablat	equ	0xFF5
 20802                           prodh	equ	0xFF4
 20803                           prodl	equ	0xFF3
 20804                           intcon	equ	0xFF2
 20805                           intcon2	equ	0xFF1
 20806                           intcon3	equ	0xFF0
 20807                           indf0	equ	0xFEF
 20808                           postinc0	equ	0xFEE
 20809                           plusw0	equ	0xFEB
 20810                           fsr0h	equ	0xFEA
 20811                           fsr0l	equ	0xFE9
 20812                           wreg	equ	0xFE8
 20813                           indf1	equ	0xFE7
 20814                           postinc1	equ	0xFE6
 20815                           postdec1	equ	0xFE5
 20816                           fsr1h	equ	0xFE2
 20817                           fsr1l	equ	0xFE1
 20818                           indf2	equ	0xFDF
 20819                           postinc2	equ	0xFDE
 20820                           postdec2	equ	0xFDD
 20821                           plusw2	equ	0xFDB
 20822                           fsr2h	equ	0xFDA
 20823                           fsr2l	equ	0xFD9
 20824                           status	equ	0xFD8
 20825                           
 20826 ;; *************** function _initFsm *****************
 20827 ;; Defined at:
 20828 ;;		line 224 in file "../Source/c/04_App/app_init.c"
 20829 ;; Parameters:    Size  Location     Type
 20830 ;;		None
 20831 ;; Auto vars:     Size  Location     Type
 20832 ;;  isInitialize    1    3[BANK1 ] unsigned char 
 20833 ;; Return value:  Size  Location     Type
 20834 ;;                  1    wreg      unsigned char 
 20835 ;; Registers used:
 20836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20837 ;; Tracked objects:
 20838 ;;		On entry : 0/0
 20839 ;;		On exit  : 0/0
 20840 ;;		Unchanged: 0/0
 20841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20843 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20845 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20846 ;;Total ram usage:        1 bytes
 20847 ;; Hardware stack levels used:    1
 20848 ;; Hardware stack levels required when called:   18
 20849 ;; This function calls:
 20850 ;;		_GetCallerNumber
 20851 ;;		_Led_SetLedStatus
 20852 ;;		_initEeprom
 20853 ;;		_initGprsModem
 20854 ;;		_saveNumberInMemory
 20855 ;;		_savePreamble
 20856 ;;		_waitSetupCall
 20857 ;; This function is called by:
 20858 ;;		_MyApp_Task
 20859 ;; This function uses a non-reentrant model
 20860 ;;
 20861                           
 20862                           	psect	text92
 20863  004630                     __ptext92:
 20864                           	opt stack 0
 20865  004630                     _initFsm:
 20866                           	opt stack 9
 20867                           
 20868                           ;app_init.c: 226: static initFsmStates currentState = INIT_FSM_MODEM;
 20869                           ;app_init.c: 227: bool isInitialized = 0;
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;incstack = 0
 20873  004630  0E00               	movlw	0
 20874  004632  0101               	movlb	1	; () banked
 20875  004634  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20876                           
 20877                           ;app_init.c: 229: switch (currentState)
 20878  004636  D03D               	goto	l2695
 20879  004638                     
 20880                           ; BSR set to: 1
 20881                           ;app_init.c: 232: if (initGprsModem())
 20882                           
 20883                           ; BSR set to: 1
 20884  004638  ECC8  F026         	call	_initGprsModem	;wreg free
 20885  00463C  0900               	iorlw	0
 20886  00463E  B4D8               	btfsc	status,2,c
 20887  004640  D048               	goto	l2698
 20888                           
 20889                           ;app_init.c: 233: {
 20890                           ;app_init.c: 234: currentState = INIT_FSM_EEPROM;
 20891  004642  0E01               	movlw	1
 20892  004644  D027               	goto	L30
 20893  004646                     
 20894                           ; BSR set to: 1
 20895                           ;app_init.c: 239: if (initEeprom())
 20896                           
 20897                           ; BSR set to: 1
 20898  004646  EC30  F028         	call	_initEeprom	;wreg free
 20899  00464A  0900               	iorlw	0
 20900  00464C  B4D8               	btfsc	status,2,c
 20901  00464E  D041               	goto	l2698
 20902                           
 20903                           ;app_init.c: 240: {
 20904                           ;app_init.c: 241: currentState = INIT_FSM_WAIT_CMD;
 20905  004650  0E02               	movlw	2
 20906  004652  0101               	movlb	1	; () banked
 20907  004654  6FD6               	movwf	initFsm@currentState& (0+255),b
 20908                           
 20909                           ;app_init.c: 242: setupCallTicks = 0;
 20910  004656  0E00               	movlw	0
 20911  004658  0103               	movlb	3	; () banked
 20912  00465A  6FC3               	movwf	(_setupCallTicks+1)& (0+255),b
 20913  00465C  0E00               	movlw	0
 20914  00465E  6FC2               	movwf	_setupCallTicks& (0+255),b
 20915                           
 20916                           ; BSR set to: 3
 20917                           ;app_init.c: 243: }
 20918                           ;app_init.c: 244: break;
 20919  004660  D038               	goto	l2698
 20920  004662                     
 20921                           ;app_init.c: 247: if (isMemoryEmpty)
 20922                           
 20923                           ; BSR set to: 3
 20924  004662  0101               	movlb	1	; () banked
 20925  004664  51FE               	movf	_isMemoryEmpty& (0+255),w,b
 20926  004666  B4D8               	btfsc	status,2,c
 20927  004668  D010               	goto	l2702
 20928                           
 20929                           ; BSR set to: 1
 20930                           ;app_init.c: 248: {
 20931                           ;app_init.c: 249: if (waitSetupCall())
 20932  00466A  ECDA  F02E         	call	_waitSetupCall	;wreg free
 20933  00466E  0900               	iorlw	0
 20934  004670  B4D8               	btfsc	status,2,c
 20935  004672  D02F               	goto	l2698
 20936                           
 20937                           ;app_init.c: 250: {
 20938                           ;app_init.c: 251: saveNumberInMemory(16, GetCallerNumber());
 20939  004674  ECDE  F031         	call	_GetCallerNumber	;wreg free
 20940  004678  C083  F096         	movff	?_GetCallerNumber,saveNumberInMemory@phoneNumber
 20941  00467C  C084  F097         	movff	?_GetCallerNumber+1,saveNumberInMemory@phoneNumber+1
 20942  004680  0E10               	movlw	16
 20943  004682  ECA3  F034         	call	_saveNumberInMemory
 20944                           
 20945                           ;app_init.c: 252: currentState = INIT_FSM_PREAMBLE;
 20946  004686  0E03               	movlw	3
 20947  004688  D005               	goto	L30
 20948  00468A                     l2702:
 20949                           
 20950                           ; BSR set to: 1
 20951                           ;app_init.c: 256: else
 20952                           ;app_init.c: 257: {
 20953                           ;app_init.c: 258: currentState = INIT_FSM_COMPLETE;
 20954                           
 20955                           ; BSR set to: 1
 20956  00468A  0E04               	movlw	4
 20957  00468C  D004               	goto	L29
 20958  00468E                     
 20959                           ; BSR set to: 1
 20960                           ;app_init.c: 263: savePreamble();
 20961                           
 20962                           ; BSR set to: 1
 20963  00468E  EC96  F034         	call	_savePreamble	;wreg free
 20964                           
 20965                           ;app_init.c: 264: currentState = INIT_FSM_COMPLETE;
 20966  004692  0E04               	movlw	4
 20967  004694                     L30:
 20968  004694  0101               	movlb	1	; () banked
 20969  004696                     L29:
 20970  004696  6FD6               	movwf	initFsm@currentState& (0+255),b
 20971                           
 20972                           ;app_init.c: 265: break;
 20973  004698  D01C               	goto	l2698
 20974  00469A                     
 20975                           ; BSR set to: 1
 20976                           ;app_init.c: 268: Led_SetLedStatus(1u, LED_STS_ON);
 20977                           
 20978                           ; BSR set to: 1
 20979  00469A  0E01               	movlw	1
 20980  00469C  0100               	movlb	0	; () banked
 20981  00469E  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 20982  0046A0  0E01               	movlw	1
 20983  0046A2  ECA8  F032         	call	_Led_SetLedStatus
 20984                           
 20985                           ;app_init.c: 269: currentState = INIT_FSM_MODEM;
 20986  0046A6  0E00               	movlw	0
 20987  0046A8  0101               	movlb	1	; () banked
 20988  0046AA  6FD6               	movwf	initFsm@currentState& (0+255),b
 20989                           
 20990                           ; BSR set to: 1
 20991                           ;app_init.c: 270: isInitialized = 1;
 20992  0046AC  0E01               	movlw	1
 20993  0046AE  6F03               	movwf	initFsm@isInitialized& (0+255),b
 20994                           
 20995                           ; BSR set to: 1
 20996                           ;app_init.c: 275: }
 20997                           
 20998                           ; BSR set to: 1
 20999                           ;app_init.c: 274: break;
 21000                           
 21001                           ;app_init.c: 273: default:
 21002                           
 21003                           ;app_init.c: 271: break;
 21004  0046B0  D010               	goto	l2698
 21005  0046B2                     l2695:
 21006                           
 21007                           ; BSR set to: 1
 21008                           
 21009                           ; BSR set to: 1
 21010  0046B2  51D6               	movf	initFsm@currentState& (0+255),w,b
 21011                           
 21012                           ; Switch size 1, requested type "space"
 21013                           ; Number of cases is 5, Range of values is 0 to 4
 21014                           ; switch strategies available:
 21015                           ; Name         Instructions Cycles
 21016                           ; simple_byte           16     9 (average)
 21017                           ;	Chosen strategy is simple_byte
 21018  0046B4  0A00               	xorlw	0	; case 0
 21019  0046B6  B4D8               	btfsc	status,2,c
 21020  0046B8  D7BF               	goto	l2696
 21021  0046BA  0A01               	xorlw	1	; case 1
 21022  0046BC  B4D8               	btfsc	status,2,c
 21023  0046BE  D7C3               	goto	l2699
 21024  0046C0  0A03               	xorlw	3	; case 2
 21025  0046C2  B4D8               	btfsc	status,2,c
 21026  0046C4  D7CE               	goto	l2701
 21027  0046C6  0A01               	xorlw	1	; case 3
 21028  0046C8  B4D8               	btfsc	status,2,c
 21029  0046CA  D7E1               	goto	l2705
 21030  0046CC  0A07               	xorlw	7	; case 4
 21031  0046CE  B4D8               	btfsc	status,2,c
 21032  0046D0  D7E4               	goto	l2706
 21033  0046D2                     l2698:
 21034                           
 21035                           ;app_init.c: 276: return isInitialized;
 21036                           
 21037                           ; BSR set to: 1
 21038  0046D2  0101               	movlb	1	; () banked
 21039  0046D4  5103               	movf	initFsm@isInitialized& (0+255),w,b
 21040  0046D6  0012               	return	
 21041  0046D8                     __end_of_initFsm:
 21042                           	opt stack 0
 21043                           tosu	equ	0xFFF
 21044                           tosh	equ	0xFFE
 21045                           tosl	equ	0xFFD
 21046                           pclath	equ	0xFFA
 21047                           tblptru	equ	0xFF8
 21048                           tblptrh	equ	0xFF7
 21049                           tblptrl	equ	0xFF6
 21050                           tablat	equ	0xFF5
 21051                           prodh	equ	0xFF4
 21052                           prodl	equ	0xFF3
 21053                           intcon	equ	0xFF2
 21054                           intcon2	equ	0xFF1
 21055                           intcon3	equ	0xFF0
 21056                           indf0	equ	0xFEF
 21057                           postinc0	equ	0xFEE
 21058                           plusw0	equ	0xFEB
 21059                           fsr0h	equ	0xFEA
 21060                           fsr0l	equ	0xFE9
 21061                           wreg	equ	0xFE8
 21062                           indf1	equ	0xFE7
 21063                           postinc1	equ	0xFE6
 21064                           postdec1	equ	0xFE5
 21065                           fsr1h	equ	0xFE2
 21066                           fsr1l	equ	0xFE1
 21067                           indf2	equ	0xFDF
 21068                           postinc2	equ	0xFDE
 21069                           postdec2	equ	0xFDD
 21070                           plusw2	equ	0xFDB
 21071                           fsr2h	equ	0xFDA
 21072                           fsr2l	equ	0xFD9
 21073                           status	equ	0xFD8
 21074                           
 21075 ;; *************** function _waitSetupCall *****************
 21076 ;; Defined at:
 21077 ;;		line 194 in file "../Source/c/04_App/app_init.c"
 21078 ;; Parameters:    Size  Location     Type
 21079 ;;		None
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;  isCallArrive    1   51[BANK0 ] unsigned char 
 21082 ;; Return value:  Size  Location     Type
 21083 ;;                  1    wreg      unsigned char 
 21084 ;; Registers used:
 21085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21086 ;; Tracked objects:
 21087 ;;		On entry : 0/0
 21088 ;;		On exit  : 0/0
 21089 ;;		Unchanged: 0/0
 21090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21095 ;;Total ram usage:        1 bytes
 21096 ;; Hardware stack levels used:    1
 21097 ;; Hardware stack levels required when called:   15
 21098 ;; This function calls:
 21099 ;;		_Led_SetLedStatus
 21100 ;;		_getSetupCall
 21101 ;;		_secondsAppTimer
 21102 ;; This function is called by:
 21103 ;;		_initFsm
 21104 ;; This function uses a non-reentrant model
 21105 ;;
 21106                           
 21107                           	psect	text93
 21108  005DB4                     __ptext93:
 21109                           	opt stack 0
 21110  005DB4                     _waitSetupCall:
 21111                           	opt stack 11
 21112                           
 21113                           ;app_init.c: 196: bool isCallArrived = 0;
 21114                           
 21115                           ; BSR set to: 1
 21116                           ;incstack = 0
 21117  005DB4  0E00               	movlw	0
 21118  005DB6  0100               	movlb	0	; () banked
 21119  005DB8  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21120                           
 21121                           ; BSR set to: 0
 21122                           ;app_init.c: 197: if (!secondsAppTimer(30, &setupCallTicks, 0))
 21123  005DBA  0EC2               	movlw	low _setupCallTicks
 21124  005DBC  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21125  005DBE  0E03               	movlw	high _setupCallTicks
 21126  005DC0  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21127  005DC2  0E00               	movlw	0
 21128  005DC4  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21129  005DC6  0E1E               	movlw	30
 21130  005DC8  EC14  F024         	call	_secondsAppTimer
 21131  005DCC  0900               	iorlw	0
 21132  005DCE  A4D8               	btfss	status,2,c
 21133  005DD0  D00F               	goto	l2684
 21134                           
 21135                           ;app_init.c: 198: {
 21136                           ;app_init.c: 199: Led_SetLedStatus(1u, LED_STS_BLINK);
 21137  005DD2  0E03               	movlw	3
 21138  005DD4  0100               	movlb	0	; () banked
 21139  005DD6  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21140  005DD8  0E01               	movlw	1
 21141  005DDA  ECA8  F032         	call	_Led_SetLedStatus
 21142                           
 21143                           ;app_init.c: 200: if (getSetupCall())
 21144  005DDE  EC13  F034         	call	_getSetupCall	;wreg free
 21145  005DE2  0900               	iorlw	0
 21146  005DE4  B4D8               	btfsc	status,2,c
 21147  005DE6  D00A               	goto	l2686
 21148                           
 21149                           ;app_init.c: 201: {
 21150                           ;app_init.c: 202: isCallArrived = 1;
 21151  005DE8  0E01               	movlw	1
 21152  005DEA  0100               	movlb	0	; () banked
 21153  005DEC  6F93               	movwf	waitSetupCall@isCallArrived& (0+255),b
 21154                           
 21155                           ; BSR set to: 0
 21156                           ;app_init.c: 203: }
 21157                           ;app_init.c: 204: }
 21158  005DEE  D006               	goto	l2686
 21159  005DF0                     l2684:
 21160                           
 21161                           ;app_init.c: 205: else
 21162                           ;app_init.c: 206: {
 21163                           ;app_init.c: 207: Led_SetLedStatus(1u, LED_STS_ON);
 21164                           
 21165                           ; BSR set to: 0
 21166  005DF0  0E01               	movlw	1
 21167  005DF2  0100               	movlb	0	; () banked
 21168  005DF4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 21169  005DF6  0E01               	movlw	1
 21170  005DF8  ECA8  F032         	call	_Led_SetLedStatus
 21171  005DFC                     l2686:
 21172                           
 21173                           ;app_init.c: 208: }
 21174                           ;app_init.c: 209: return isCallArrived;
 21175  005DFC  0100               	movlb	0	; () banked
 21176  005DFE  5193               	movf	waitSetupCall@isCallArrived& (0+255),w,b
 21177  005E00  0012               	return	
 21178  005E02                     __end_of_waitSetupCall:
 21179                           	opt stack 0
 21180                           tosu	equ	0xFFF
 21181                           tosh	equ	0xFFE
 21182                           tosl	equ	0xFFD
 21183                           pclath	equ	0xFFA
 21184                           tblptru	equ	0xFF8
 21185                           tblptrh	equ	0xFF7
 21186                           tblptrl	equ	0xFF6
 21187                           tablat	equ	0xFF5
 21188                           prodh	equ	0xFF4
 21189                           prodl	equ	0xFF3
 21190                           intcon	equ	0xFF2
 21191                           intcon2	equ	0xFF1
 21192                           intcon3	equ	0xFF0
 21193                           indf0	equ	0xFEF
 21194                           postinc0	equ	0xFEE
 21195                           plusw0	equ	0xFEB
 21196                           fsr0h	equ	0xFEA
 21197                           fsr0l	equ	0xFE9
 21198                           wreg	equ	0xFE8
 21199                           indf1	equ	0xFE7
 21200                           postinc1	equ	0xFE6
 21201                           postdec1	equ	0xFE5
 21202                           fsr1h	equ	0xFE2
 21203                           fsr1l	equ	0xFE1
 21204                           indf2	equ	0xFDF
 21205                           postinc2	equ	0xFDE
 21206                           postdec2	equ	0xFDD
 21207                           plusw2	equ	0xFDB
 21208                           fsr2h	equ	0xFDA
 21209                           fsr2l	equ	0xFD9
 21210                           status	equ	0xFD8
 21211                           
 21212 ;; *************** function _getSetupCall *****************
 21213 ;; Defined at:
 21214 ;;		line 178 in file "../Source/c/04_App/app_init.c"
 21215 ;; Parameters:    Size  Location     Type
 21216 ;;		None
 21217 ;; Auto vars:     Size  Location     Type
 21218 ;;  isCalledRece    1   35[BANK0 ] unsigned char 
 21219 ;; Return value:  Size  Location     Type
 21220 ;;                  1    wreg      unsigned char 
 21221 ;; Registers used:
 21222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21223 ;; Tracked objects:
 21224 ;;		On entry : 0/0
 21225 ;;		On exit  : 0/0
 21226 ;;		Unchanged: 0/0
 21227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21229 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21231 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21232 ;;Total ram usage:        1 bytes
 21233 ;; Hardware stack levels used:    1
 21234 ;; Hardware stack levels required when called:   14
 21235 ;; This function calls:
 21236 ;;		_Mdm_HangPhoneCall
 21237 ;;		_Mdm_IsRinging
 21238 ;; This function is called by:
 21239 ;;		_waitSetupCall
 21240 ;; This function uses a non-reentrant model
 21241 ;;
 21242                           
 21243                           	psect	text94
 21244  006826                     __ptext94:
 21245                           	opt stack 0
 21246  006826                     _getSetupCall:
 21247                           	opt stack 11
 21248                           
 21249                           ;app_init.c: 180: bool isCalledReceived = 0;
 21250                           
 21251                           ; BSR set to: 0
 21252                           ;incstack = 0
 21253  006826  0E00               	movlw	0
 21254  006828  0100               	movlb	0	; () banked
 21255  00682A  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21256                           
 21257                           ; BSR set to: 0
 21258                           ;app_init.c: 182: if (Mdm_IsRinging())
 21259  00682C  EC79  F033         	call	_Mdm_IsRinging	;wreg free
 21260  006830  0900               	iorlw	0
 21261  006832  B4D8               	btfsc	status,2,c
 21262  006834  D005               	goto	l2680
 21263                           
 21264                           ;app_init.c: 183: {
 21265                           ;app_init.c: 184: Mdm_HangPhoneCall();
 21266  006836  EC13  F035         	call	_Mdm_HangPhoneCall	;wreg free
 21267                           
 21268                           ;app_init.c: 185: isCalledReceived = 1;
 21269  00683A  0E01               	movlw	1
 21270  00683C  0100               	movlb	0	; () banked
 21271  00683E  6F83               	movwf	getSetupCall@isCalledReceived& (0+255),b
 21272  006840                     l2680:
 21273                           
 21274                           ;app_init.c: 186: }
 21275                           ;app_init.c: 187: return isCalledReceived;
 21276                           
 21277                           ; BSR set to: 0
 21278  006840  0100               	movlb	0	; () banked
 21279  006842  5183               	movf	getSetupCall@isCalledReceived& (0+255),w,b
 21280  006844  0012               	return	
 21281  006846                     __end_of_getSetupCall:
 21282                           	opt stack 0
 21283                           tosu	equ	0xFFF
 21284                           tosh	equ	0xFFE
 21285                           tosl	equ	0xFFD
 21286                           pclath	equ	0xFFA
 21287                           tblptru	equ	0xFF8
 21288                           tblptrh	equ	0xFF7
 21289                           tblptrl	equ	0xFF6
 21290                           tablat	equ	0xFF5
 21291                           prodh	equ	0xFF4
 21292                           prodl	equ	0xFF3
 21293                           intcon	equ	0xFF2
 21294                           intcon2	equ	0xFF1
 21295                           intcon3	equ	0xFF0
 21296                           indf0	equ	0xFEF
 21297                           postinc0	equ	0xFEE
 21298                           plusw0	equ	0xFEB
 21299                           fsr0h	equ	0xFEA
 21300                           fsr0l	equ	0xFE9
 21301                           wreg	equ	0xFE8
 21302                           indf1	equ	0xFE7
 21303                           postinc1	equ	0xFE6
 21304                           postdec1	equ	0xFE5
 21305                           fsr1h	equ	0xFE2
 21306                           fsr1l	equ	0xFE1
 21307                           indf2	equ	0xFDF
 21308                           postinc2	equ	0xFDE
 21309                           postdec2	equ	0xFDD
 21310                           plusw2	equ	0xFDB
 21311                           fsr2h	equ	0xFDA
 21312                           fsr2l	equ	0xFD9
 21313                           status	equ	0xFD8
 21314                           
 21315 ;; *************** function _savePreamble *****************
 21316 ;; Defined at:
 21317 ;;		line 212 in file "../Source/c/04_App/app_init.c"
 21318 ;; Parameters:    Size  Location     Type
 21319 ;;		None
 21320 ;; Auto vars:     Size  Location     Type
 21321 ;;		None
 21322 ;; Return value:  Size  Location     Type
 21323 ;;                  1    wreg      void 
 21324 ;; Registers used:
 21325 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21326 ;; Tracked objects:
 21327 ;;		On entry : 0/0
 21328 ;;		On exit  : 0/0
 21329 ;;		Unchanged: 0/0
 21330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21335 ;;Total ram usage:        0 bytes
 21336 ;; Hardware stack levels used:    1
 21337 ;; Hardware stack levels required when called:   14
 21338 ;; This function calls:
 21339 ;;		_Eeprom_Write
 21340 ;;		_initPreamble
 21341 ;; This function is called by:
 21342 ;;		_initFsm
 21343 ;; This function uses a non-reentrant model
 21344 ;;
 21345                           
 21346                           	psect	text95
 21347  00692C                     __ptext95:
 21348                           	opt stack 0
 21349  00692C                     _savePreamble:
 21350                           	opt stack 12
 21351                           
 21352                           ;app_init.c: 214: Eeprom_Write(0, initPreamble(), 4);
 21353                           
 21354                           ; BSR set to: 0
 21355                           ;incstack = 0
 21356  00692C  EC51  F034         	call	_initPreamble	;wreg free
 21357  006930  C07D  F08F         	movff	?_initPreamble,Eeprom_Write@WriteBuffer
 21358  006934  C07E  F090         	movff	?_initPreamble+1,Eeprom_Write@WriteBuffer+1
 21359  006938  0E04               	movlw	4
 21360  00693A  0100               	movlb	0	; () banked
 21361  00693C  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 21362  00693E  0E00               	movlw	0
 21363  006940  EC10  F02E         	call	_Eeprom_Write
 21364  006944  0012               	return		;funcret
 21365  006946                     __end_of_savePreamble:
 21366                           	opt stack 0
 21367                           tosu	equ	0xFFF
 21368                           tosh	equ	0xFFE
 21369                           tosl	equ	0xFFD
 21370                           pclath	equ	0xFFA
 21371                           tblptru	equ	0xFF8
 21372                           tblptrh	equ	0xFF7
 21373                           tblptrl	equ	0xFF6
 21374                           tablat	equ	0xFF5
 21375                           prodh	equ	0xFF4
 21376                           prodl	equ	0xFF3
 21377                           intcon	equ	0xFF2
 21378                           intcon2	equ	0xFF1
 21379                           intcon3	equ	0xFF0
 21380                           indf0	equ	0xFEF
 21381                           postinc0	equ	0xFEE
 21382                           plusw0	equ	0xFEB
 21383                           fsr0h	equ	0xFEA
 21384                           fsr0l	equ	0xFE9
 21385                           wreg	equ	0xFE8
 21386                           indf1	equ	0xFE7
 21387                           postinc1	equ	0xFE6
 21388                           postdec1	equ	0xFE5
 21389                           fsr1h	equ	0xFE2
 21390                           fsr1l	equ	0xFE1
 21391                           indf2	equ	0xFDF
 21392                           postinc2	equ	0xFDE
 21393                           postdec2	equ	0xFDD
 21394                           plusw2	equ	0xFDB
 21395                           fsr2h	equ	0xFDA
 21396                           fsr2l	equ	0xFD9
 21397                           status	equ	0xFD8
 21398                           
 21399 ;; *************** function _initPreamble *****************
 21400 ;; Defined at:
 21401 ;;		line 284 in file "../Source/c/04_App/app_init.c"
 21402 ;; Parameters:    Size  Location     Type
 21403 ;;		None
 21404 ;; Auto vars:     Size  Location     Type
 21405 ;;		None
 21406 ;; Return value:  Size  Location     Type
 21407 ;;                  2   29[BANK0 ] PTR unsigned char 
 21408 ;; Registers used:
 21409 ;;		wreg, status,2, status,0
 21410 ;; Tracked objects:
 21411 ;;		On entry : 0/0
 21412 ;;		On exit  : 0/0
 21413 ;;		Unchanged: 0/0
 21414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21419 ;;Total ram usage:        2 bytes
 21420 ;; Hardware stack levels used:    1
 21421 ;; Hardware stack levels required when called:   11
 21422 ;; This function calls:
 21423 ;;		Nothing
 21424 ;; This function is called by:
 21425 ;;		_savePreamble
 21426 ;; This function uses a non-reentrant model
 21427 ;;
 21428                           
 21429                           	psect	text96
 21430  0068A2                     __ptext96:
 21431                           	opt stack 0
 21432  0068A2                     _initPreamble:
 21433                           	opt stack 14
 21434                           
 21435                           ;app_init.c: 286: memoryPreamble[0] = 'U';
 21436                           
 21437                           ;incstack = 0
 21438  0068A2  0E55               	movlw	85
 21439  0068A4  0103               	movlb	3	; () banked
 21440  0068A6  6FAC               	movwf	_memoryPreamble& (0+255),b
 21441                           
 21442                           ;app_init.c: 287: memoryPreamble[1] = 'S';
 21443  0068A8  0E53               	movlw	83
 21444  0068AA  6FAD               	movwf	(_memoryPreamble+1)& (0+255),b
 21445                           
 21446                           ;app_init.c: 288: memoryPreamble[2] = 'I';
 21447  0068AC  0E49               	movlw	73
 21448  0068AE  6FAE               	movwf	(_memoryPreamble+2)& (0+255),b
 21449                           
 21450                           ;app_init.c: 289: memoryPreamble[3] = 'M';
 21451  0068B0  0E4D               	movlw	77
 21452  0068B2  6FAF               	movwf	(_memoryPreamble+3)& (0+255),b
 21453                           
 21454                           ; BSR set to: 3
 21455                           ;app_init.c: 290: return memoryPreamble;
 21456  0068B4  0EAC               	movlw	low _memoryPreamble
 21457  0068B6  0100               	movlb	0	; () banked
 21458  0068B8  6F7D               	movwf	?_initPreamble& (0+255),b
 21459  0068BA  0E03               	movlw	high _memoryPreamble
 21460  0068BC  6F7E               	movwf	(?_initPreamble+1)& (0+255),b
 21461  0068BE  0012               	return	
 21462  0068C0                     __end_of_initPreamble:
 21463                           	opt stack 0
 21464                           tosu	equ	0xFFF
 21465                           tosh	equ	0xFFE
 21466                           tosl	equ	0xFFD
 21467                           pclath	equ	0xFFA
 21468                           tblptru	equ	0xFF8
 21469                           tblptrh	equ	0xFF7
 21470                           tblptrl	equ	0xFF6
 21471                           tablat	equ	0xFF5
 21472                           prodh	equ	0xFF4
 21473                           prodl	equ	0xFF3
 21474                           intcon	equ	0xFF2
 21475                           intcon2	equ	0xFF1
 21476                           intcon3	equ	0xFF0
 21477                           indf0	equ	0xFEF
 21478                           postinc0	equ	0xFEE
 21479                           plusw0	equ	0xFEB
 21480                           fsr0h	equ	0xFEA
 21481                           fsr0l	equ	0xFE9
 21482                           wreg	equ	0xFE8
 21483                           indf1	equ	0xFE7
 21484                           postinc1	equ	0xFE6
 21485                           postdec1	equ	0xFE5
 21486                           fsr1h	equ	0xFE2
 21487                           fsr1l	equ	0xFE1
 21488                           indf2	equ	0xFDF
 21489                           postinc2	equ	0xFDE
 21490                           postdec2	equ	0xFDD
 21491                           plusw2	equ	0xFDB
 21492                           fsr2h	equ	0xFDA
 21493                           fsr2l	equ	0xFD9
 21494                           status	equ	0xFD8
 21495                           
 21496 ;; *************** function _initGprsModem *****************
 21497 ;; Defined at:
 21498 ;;		line 86 in file "../Source/c/04_App/app_init.c"
 21499 ;; Parameters:    Size  Location     Type
 21500 ;;		None
 21501 ;; Auto vars:     Size  Location     Type
 21502 ;;  isInitialize    1   57[BANK0 ] unsigned char 
 21503 ;; Return value:  Size  Location     Type
 21504 ;;                  1    wreg      unsigned char 
 21505 ;; Registers used:
 21506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21507 ;; Tracked objects:
 21508 ;;		On entry : 0/0
 21509 ;;		On exit  : 0/0
 21510 ;;		Unchanged: 0/0
 21511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21515 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21516 ;;Total ram usage:        1 bytes
 21517 ;; Hardware stack levels used:    1
 21518 ;; Hardware stack levels required when called:   14
 21519 ;; This function calls:
 21520 ;;		_Mdm_SetSmsFormat
 21521 ;;		_Uart_WriteConstString
 21522 ;;		_secondsAppTimer
 21523 ;; This function is called by:
 21524 ;;		_initFsm
 21525 ;; This function uses a non-reentrant model
 21526 ;;
 21527                           
 21528                           	psect	text97
 21529  004D90                     __ptext97:
 21530                           	opt stack 0
 21531  004D90                     _initGprsModem:
 21532                           	opt stack 12
 21533                           
 21534                           ;app_init.c: 88: static uint16_t modemCounter = 0;
 21535                           ;app_init.c: 89: static modemStates currentState = MODEM_INIT;
 21536                           ;app_init.c: 90: bool isInitialized = 0;
 21537                           
 21538                           ; BSR set to: 0
 21539                           ;incstack = 0
 21540  004D90  0E00               	movlw	0
 21541  004D92  0100               	movlb	0	; () banked
 21542  004D94  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21543                           
 21544                           ;app_init.c: 92: switch(currentState)
 21545  004D96  D035               	goto	l2652
 21546  004D98                     
 21547                           ;app_init.c: 95: if (MdmStatus == ModemConfigured || MdmStatus == ModemOn)
 21548                           
 21549                           ; BSR set to: 0
 21550  004D98  0E03               	movlw	3
 21551  004D9A  0100               	movlb	0	; () banked
 21552  004D9C  19D2               	xorwf	_MdmStatus& (0+255),w,b
 21553  004D9E  B4D8               	btfsc	status,2,c
 21554  004DA0  D003               	goto	u14420
 21555                           
 21556                           ; BSR set to: 0
 21557  004DA2  05D2               	decf	_MdmStatus& (0+255),w,b
 21558  004DA4  A4D8               	btfss	status,2,c
 21559  004DA6  D03B               	goto	l2658
 21560  004DA8                     u14420:
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;app_init.c: 96: {
 21564                           ;app_init.c: 97: if (secondsAppTimer(5, &modemCounter, 0))
 21565                           
 21566                           ; BSR set to: 0
 21567  004DA8  0EC0               	movlw	low initGprsModem@modemCounter
 21568  004DAA  6F8A               	movwf	secondsAppTimer@counter& (0+255),b
 21569  004DAC  0E03               	movlw	high initGprsModem@modemCounter
 21570  004DAE  6F8B               	movwf	(secondsAppTimer@counter+1)& (0+255),b
 21571  004DB0  0E00               	movlw	0
 21572  004DB2  6F8C               	movwf	secondsAppTimer@isCyclic& (0+255),b
 21573  004DB4  0E05               	movlw	5
 21574  004DB6  EC14  F024         	call	_secondsAppTimer
 21575  004DBA  0900               	iorlw	0
 21576  004DBC  B4D8               	btfsc	status,2,c
 21577  004DBE  D02F               	goto	l2658
 21578                           
 21579                           ;app_init.c: 98: {
 21580                           ;app_init.c: 99: Mdm_SetSmsFormat(1);
 21581  004DC0  0E01               	movlw	1
 21582  004DC2  ECB2  F02E         	call	_Mdm_SetSmsFormat
 21583                           
 21584                           ;app_init.c: 100: currentState = MODEM_DELETE_SMS;
 21585  004DC6  0E01               	movlw	1
 21586  004DC8  D013               	goto	L32
 21587  004DCA                     
 21588                           ; BSR set to: 1
 21589                           ;app_init.c: 106: Uart_WriteConstString(1,"AT+CMGDA=DEL ALL\r\n");
 21590                           
 21591                           ; BSR set to: 1
 21592  004DCA  0EFA               	movlw	low STR_30
 21593  004DCC  0100               	movlb	0	; () banked
 21594  004DCE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21595  004DD0  0EFE               	movlw	high STR_30
 21596  004DD2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21597  004DD4  0E01               	movlw	1
 21598  004DD6  EC8E  F030         	call	_Uart_WriteConstString
 21599                           
 21600                           ;app_init.c: 107: currentState = MODEM_SET_CALLER_ID;
 21601  004DDA  0E02               	movlw	2
 21602  004DDC  D009               	goto	L32
 21603  004DDE                     
 21604                           ; BSR set to: 1
 21605                           ;app_init.c: 111: Uart_WriteConstString(1,"AT+CLIP=1\r\n");
 21606                           
 21607                           ; BSR set to: 1
 21608  004DDE  0EAA               	movlw	low STR_31
 21609  004DE0  0100               	movlb	0	; () banked
 21610  004DE2  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 21611  004DE4  0EFF               	movlw	high STR_31
 21612  004DE6  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 21613  004DE8  0E01               	movlw	1
 21614  004DEA  EC8E  F030         	call	_Uart_WriteConstString
 21615                           
 21616                           ;app_init.c: 112: currentState = MODEM_INIT_COMPLETE;
 21617  004DEE  0E03               	movlw	3
 21618  004DF0                     L32:
 21619  004DF0  0101               	movlb	1	; () banked
 21620  004DF2  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21621                           
 21622                           ;app_init.c: 113: break;
 21623  004DF4  D014               	goto	l2658
 21624  004DF6                     
 21625                           ; BSR set to: 1
 21626                           ;app_init.c: 116: currentState = MODEM_INIT;
 21627                           
 21628                           ; BSR set to: 1
 21629  004DF6  0E00               	movlw	0
 21630  004DF8  6FD8               	movwf	initGprsModem@currentState& (0+255),b
 21631                           
 21632                           ;app_init.c: 117: isInitialized = 1;
 21633  004DFA  0E01               	movlw	1
 21634  004DFC  0100               	movlb	0	; () banked
 21635  004DFE  6F99               	movwf	initGprsModem@isInitialized& (0+255),b
 21636                           
 21637                           ; BSR set to: 0
 21638                           ;app_init.c: 122: }
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;app_init.c: 121: break;
 21642                           
 21643                           ;app_init.c: 120: default:
 21644                           
 21645                           ;app_init.c: 118: break;
 21646  004E00  D00E               	goto	l2658
 21647  004E02                     l2652:
 21648                           
 21649                           ; BSR set to: 0
 21650                           
 21651                           ; BSR set to: 0
 21652  004E02  0101               	movlb	1	; () banked
 21653  004E04  51D8               	movf	initGprsModem@currentState& (0+255),w,b
 21654                           
 21655                           ; Switch size 1, requested type "space"
 21656                           ; Number of cases is 4, Range of values is 0 to 3
 21657                           ; switch strategies available:
 21658                           ; Name         Instructions Cycles
 21659                           ; simple_byte           13     7 (average)
 21660                           ;	Chosen strategy is simple_byte
 21661  004E06  0A00               	xorlw	0	; case 0
 21662  004E08  B4D8               	btfsc	status,2,c
 21663  004E0A  D7C6               	goto	l2653
 21664  004E0C  0A01               	xorlw	1	; case 1
 21665  004E0E  B4D8               	btfsc	status,2,c
 21666  004E10  D7DC               	goto	l2659
 21667  004E12  0A03               	xorlw	3	; case 2
 21668  004E14  B4D8               	btfsc	status,2,c
 21669  004E16  D7E3               	goto	l2660
 21670  004E18  0A01               	xorlw	1	; case 3
 21671  004E1A  B4D8               	btfsc	status,2,c
 21672  004E1C  D7EC               	goto	l2661
 21673  004E1E                     l2658:
 21674                           
 21675                           ;app_init.c: 123: return isInitialized;
 21676                           
 21677                           ; BSR set to: 1
 21678  004E1E  0100               	movlb	0	; () banked
 21679  004E20  5199               	movf	initGprsModem@isInitialized& (0+255),w,b
 21680  004E22  0012               	return	
 21681  004E24                     __end_of_initGprsModem:
 21682                           	opt stack 0
 21683                           tosu	equ	0xFFF
 21684                           tosh	equ	0xFFE
 21685                           tosl	equ	0xFFD
 21686                           pclath	equ	0xFFA
 21687                           tblptru	equ	0xFF8
 21688                           tblptrh	equ	0xFF7
 21689                           tblptrl	equ	0xFF6
 21690                           tablat	equ	0xFF5
 21691                           prodh	equ	0xFF4
 21692                           prodl	equ	0xFF3
 21693                           intcon	equ	0xFF2
 21694                           intcon2	equ	0xFF1
 21695                           intcon3	equ	0xFF0
 21696                           indf0	equ	0xFEF
 21697                           postinc0	equ	0xFEE
 21698                           plusw0	equ	0xFEB
 21699                           fsr0h	equ	0xFEA
 21700                           fsr0l	equ	0xFE9
 21701                           wreg	equ	0xFE8
 21702                           indf1	equ	0xFE7
 21703                           postinc1	equ	0xFE6
 21704                           postdec1	equ	0xFE5
 21705                           fsr1h	equ	0xFE2
 21706                           fsr1l	equ	0xFE1
 21707                           indf2	equ	0xFDF
 21708                           postinc2	equ	0xFDE
 21709                           postdec2	equ	0xFDD
 21710                           plusw2	equ	0xFDB
 21711                           fsr2h	equ	0xFDA
 21712                           fsr2l	equ	0xFD9
 21713                           status	equ	0xFD8
 21714                           
 21715 ;; *************** function _secondsAppTimer *****************
 21716 ;; Defined at:
 21717 ;;		line 67 in file "../Source/c/04_App/app_utils.c"
 21718 ;; Parameters:    Size  Location     Type
 21719 ;;  seconds         1    wreg     unsigned char 
 21720 ;;  counter         2   42[BANK0 ] PTR unsigned int 
 21721 ;;		 -> setupCallTicks(2), initGprsModem@modemCounter(2), 
 21722 ;;  isCyclic        1   44[BANK0 ] unsigned char 
 21723 ;; Auto vars:     Size  Location     Type
 21724 ;;  seconds         1   47[BANK0 ] unsigned char 
 21725 ;;  destinationT    2   49[BANK0 ] unsigned int 
 21726 ;;  isExpired       1   48[BANK0 ] unsigned char 
 21727 ;; Return value:  Size  Location     Type
 21728 ;;                  1    wreg      unsigned char 
 21729 ;; Registers used:
 21730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21731 ;; Tracked objects:
 21732 ;;		On entry : 0/0
 21733 ;;		On exit  : 0/0
 21734 ;;		Unchanged: 0/0
 21735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21736 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21737 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21739 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21740 ;;Total ram usage:        9 bytes
 21741 ;; Hardware stack levels used:    1
 21742 ;; Hardware stack levels required when called:   12
 21743 ;; This function calls:
 21744 ;;		___lwdiv
 21745 ;;		___wmul
 21746 ;; This function is called by:
 21747 ;;		_initGprsModem
 21748 ;;		_waitSetupCall
 21749 ;;		_blinkForSeconds
 21750 ;; This function uses a non-reentrant model
 21751 ;;
 21752                           
 21753                           	psect	text98
 21754  004828                     __ptext98:
 21755                           	opt stack 0
 21756  004828                     _secondsAppTimer:
 21757                           	opt stack 13
 21758                           
 21759                           ; BSR set to: 0
 21760                           ;incstack = 0
 21761                           ;secondsAppTimer@seconds stored from wreg
 21762  004828  0100               	movlb	0	; () banked
 21763  00482A  6F8F               	movwf	secondsAppTimer@seconds& (0+255),b
 21764                           
 21765                           ;app_utils.c: 69: bool isExpired = 1;
 21766  00482C  0E01               	movlw	1
 21767  00482E  0100               	movlb	0	; () banked
 21768  004830  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21769                           
 21770                           ; BSR set to: 0
 21771                           ;app_utils.c: 70: uint16_t destinationTicks = (uint16_t) (seconds * 1000) / ((UINT16)(10
      +                          0));
 21772  004832  C08F  F07D         	movff	secondsAppTimer@seconds,___wmul@multiplier
 21773  004836  6B7E               	clrf	(___wmul@multiplier+1)& (0+255),b
 21774  004838  0E03               	movlw	3
 21775  00483A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21776  00483C  0EE8               	movlw	232
 21777  00483E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 21778  004840  EC2E  F033         	call	___wmul	;wreg free
 21779  004844  C07D  F083         	movff	?___wmul,___lwdiv@dividend
 21780  004848  C07E  F084         	movff	?___wmul+1,___lwdiv@dividend+1
 21781  00484C  0E00               	movlw	0
 21782  00484E  0100               	movlb	0	; () banked
 21783  004850  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 21784  004852  0E64               	movlw	100
 21785  004854  6F85               	movwf	___lwdiv@divisor& (0+255),b
 21786  004856  ECE6  F02D         	call	___lwdiv	;wreg free
 21787  00485A  C083  F091         	movff	?___lwdiv,secondsAppTimer@destinationTicks
 21788  00485E  C084  F092         	movff	?___lwdiv+1,secondsAppTimer@destinationTicks+1
 21789                           
 21790                           ;app_utils.c: 72: if (*counter < destinationTicks)
 21791  004862  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21792  004866  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21793  00486A  0100               	movlb	0	; () banked
 21794  00486C  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21795  00486E  5CDE               	subwf	postinc2,w,c
 21796  004870  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21797  004872  58DE               	subwfb	postinc2,w,c
 21798  004874  B0D8               	btfsc	status,0,c
 21799  004876  D009               	goto	l2728
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;app_utils.c: 73: {
 21803                           ;app_utils.c: 74: *counter += 1;
 21804  004878  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21805  00487C  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21806  004880  2ADE               	incf	postinc2,f,c
 21807  004882  0E00               	movlw	0
 21808  004884  22DD               	addwfc	postdec2,f,c
 21809                           
 21810                           ; BSR set to: 0
 21811                           ;app_utils.c: 75: isExpired = 0;
 21812  004886  0E00               	movlw	0
 21813  004888  6F90               	movwf	secondsAppTimer@isExpired& (0+255),b
 21814  00488A                     l2728:
 21815                           
 21816                           ; BSR set to: 0
 21817                           ;app_utils.c: 76: }
 21818                           ;app_utils.c: 77: if (*counter == destinationTicks)
 21819                           
 21820                           ; BSR set to: 0
 21821  00488A  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21822  00488E  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21823  004892  5191               	movf	secondsAppTimer@destinationTicks& (0+255),w,b
 21824  004894  18DE               	xorwf	postinc2,w,c
 21825  004896  E117               	bnz	l14183
 21826  004898  5192               	movf	(secondsAppTimer@destinationTicks+1)& (0+255),w,b
 21827  00489A  18DE               	xorwf	postinc2,w,c
 21828  00489C  A4D8               	btfss	status,2,c
 21829  00489E  D013               	goto	l2731
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;app_utils.c: 78: {
 21833                           ;app_utils.c: 79: if (isCyclic)
 21834  0048A0  518C               	movf	secondsAppTimer@isCyclic& (0+255),w,b
 21835  0048A2  B4D8               	btfsc	status,2,c
 21836  0048A4  D008               	goto	l2730
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;app_utils.c: 80: {
 21840                           ;app_utils.c: 81: *counter = 0;
 21841  0048A6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21842  0048AA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21843  0048AE  0E00               	movlw	0
 21844  0048B0  6EDE               	movwf	postinc2,c
 21845  0048B2  0E00               	movlw	0
 21846  0048B4  D007               	goto	L33
 21847  0048B6                     l2730:
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;app_utils.c: 83: else
 21851                           ;app_utils.c: 84: {
 21852                           ;app_utils.c: 85: *counter = 0xFFFF;
 21853                           
 21854                           ; BSR set to: 0
 21855  0048B6  C08A  FFD9         	movff	secondsAppTimer@counter,fsr2l
 21856  0048BA  C08B  FFDA         	movff	secondsAppTimer@counter+1,fsr2h
 21857  0048BE  0EFF               	movlw	255
 21858  0048C0  6EDE               	movwf	postinc2,c
 21859  0048C2  0EFF               	movlw	255
 21860  0048C4                     L33:
 21861  0048C4  6EDD               	movwf	postdec2,c
 21862  0048C6                     l2731:
 21863  0048C6                     l14183:
 21864                           
 21865                           ; BSR set to: 0
 21866                           ;app_utils.c: 86: }
 21867                           ;app_utils.c: 87: }
 21868                           ;app_utils.c: 88: return isExpired;
 21869  0048C6  5190               	movf	secondsAppTimer@isExpired& (0+255),w,b
 21870  0048C8  0012               	return	
 21871  0048CA                     __end_of_secondsAppTimer:
 21872                           	opt stack 0
 21873                           tosu	equ	0xFFF
 21874                           tosh	equ	0xFFE
 21875                           tosl	equ	0xFFD
 21876                           pclath	equ	0xFFA
 21877                           tblptru	equ	0xFF8
 21878                           tblptrh	equ	0xFF7
 21879                           tblptrl	equ	0xFF6
 21880                           tablat	equ	0xFF5
 21881                           prodh	equ	0xFF4
 21882                           prodl	equ	0xFF3
 21883                           intcon	equ	0xFF2
 21884                           intcon2	equ	0xFF1
 21885                           intcon3	equ	0xFF0
 21886                           indf0	equ	0xFEF
 21887                           postinc0	equ	0xFEE
 21888                           plusw0	equ	0xFEB
 21889                           fsr0h	equ	0xFEA
 21890                           fsr0l	equ	0xFE9
 21891                           wreg	equ	0xFE8
 21892                           indf1	equ	0xFE7
 21893                           postinc1	equ	0xFE6
 21894                           postdec1	equ	0xFE5
 21895                           fsr1h	equ	0xFE2
 21896                           fsr1l	equ	0xFE1
 21897                           indf2	equ	0xFDF
 21898                           postinc2	equ	0xFDE
 21899                           postdec2	equ	0xFDD
 21900                           plusw2	equ	0xFDB
 21901                           fsr2h	equ	0xFDA
 21902                           fsr2l	equ	0xFD9
 21903                           status	equ	0xFD8
 21904                           
 21905 ;; *************** function _Mdm_SetSmsFormat *****************
 21906 ;; Defined at:
 21907 ;;		line 837 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 21908 ;; Parameters:    Size  Location     Type
 21909 ;;  TextFormat      1    wreg     unsigned char 
 21910 ;; Auto vars:     Size  Location     Type
 21911 ;;  TextFormat      1   56[BANK0 ] unsigned char 
 21912 ;;  UartMessage    20   36[BANK0 ] unsigned char [20]
 21913 ;;  Index           1   35[BANK0 ] unsigned char 
 21914 ;; Return value:  Size  Location     Type
 21915 ;;                  1    wreg      void 
 21916 ;; Registers used:
 21917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21918 ;; Tracked objects:
 21919 ;;		On entry : 0/0
 21920 ;;		On exit  : 0/0
 21921 ;;		Unchanged: 0/0
 21922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21924 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21926 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21927 ;;Total ram usage:       22 bytes
 21928 ;; Hardware stack levels used:    1
 21929 ;; Hardware stack levels required when called:   13
 21930 ;; This function calls:
 21931 ;;		_Uart_WriteString
 21932 ;; This function is called by:
 21933 ;;		_initGprsModem
 21934 ;; This function uses a non-reentrant model
 21935 ;;
 21936                           
 21937                           	psect	text99
 21938  005D64                     __ptext99:
 21939                           	opt stack 0
 21940  005D64                     _Mdm_SetSmsFormat:
 21941                           	opt stack 12
 21942                           
 21943                           ; BSR set to: 0
 21944                           ;incstack = 0
 21945                           ;Mdm_SetSmsFormat@TextFormat stored from wreg
 21946  005D64  0100               	movlb	0	; () banked
 21947  005D66  6F98               	movwf	Mdm_SetSmsFormat@TextFormat& (0+255),b
 21948                           
 21949                           ;mdm_gsm_gprs.c: 839: UINT8 UartMessage[20];
 21950                           ;mdm_gsm_gprs.c: 840: UINT8 Index = 0;
 21951  005D68  0E00               	movlw	0
 21952  005D6A  0100               	movlb	0	; () banked
 21953  005D6C  6F83               	movwf	Mdm_SetSmsFormat@Index& (0+255),b
 21954                           
 21955                           ;mdm_gsm_gprs.c: 843: UartMessage[0] = 'A';
 21956  005D6E  0E41               	movlw	65
 21957  005D70  6F84               	movwf	Mdm_SetSmsFormat@UartMessage& (0+255),b
 21958                           
 21959                           ;mdm_gsm_gprs.c: 844: UartMessage[1] = 'T';
 21960  005D72  0E54               	movlw	84
 21961  005D74  6F85               	movwf	(Mdm_SetSmsFormat@UartMessage+1)& (0+255),b
 21962                           
 21963                           ;mdm_gsm_gprs.c: 845: UartMessage[2] = '+';
 21964  005D76  0E2B               	movlw	43
 21965  005D78  6F86               	movwf	(Mdm_SetSmsFormat@UartMessage+2)& (0+255),b
 21966                           
 21967                           ;mdm_gsm_gprs.c: 846: UartMessage[3] = 'C';
 21968  005D7A  0E43               	movlw	67
 21969  005D7C  6F87               	movwf	(Mdm_SetSmsFormat@UartMessage+3)& (0+255),b
 21970                           
 21971                           ;mdm_gsm_gprs.c: 847: UartMessage[4] = 'M';
 21972  005D7E  0E4D               	movlw	77
 21973  005D80  6F88               	movwf	(Mdm_SetSmsFormat@UartMessage+4)& (0+255),b
 21974                           
 21975                           ;mdm_gsm_gprs.c: 848: UartMessage[5] = 'G';
 21976  005D82  0E47               	movlw	71
 21977  005D84  6F89               	movwf	(Mdm_SetSmsFormat@UartMessage+5)& (0+255),b
 21978                           
 21979                           ;mdm_gsm_gprs.c: 849: UartMessage[6] = 'F';
 21980  005D86  0E46               	movlw	70
 21981  005D88  6F8A               	movwf	(Mdm_SetSmsFormat@UartMessage+6)& (0+255),b
 21982                           
 21983                           ;mdm_gsm_gprs.c: 850: UartMessage[7] = '=';
 21984  005D8A  0E3D               	movlw	61
 21985  005D8C  6F8B               	movwf	(Mdm_SetSmsFormat@UartMessage+7)& (0+255),b
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;mdm_gsm_gprs.c: 853: if (TextFormat == 1u)
 21989  005D8E  0598               	decf	Mdm_SetSmsFormat@TextFormat& (0+255),w,b
 21990  005D90  A4D8               	btfss	status,2,c
 21991  005D92  D002               	goto	l1121
 21992                           
 21993                           ; BSR set to: 0
 21994                           ;mdm_gsm_gprs.c: 854: {
 21995                           ;mdm_gsm_gprs.c: 855: UartMessage[8] = '1';
 21996  005D94  0E31               	movlw	49
 21997  005D96  D001               	goto	L34
 21998  005D98                     l1121:
 21999                           
 22000                           ; BSR set to: 0
 22001                           ;mdm_gsm_gprs.c: 857: else
 22002                           ;mdm_gsm_gprs.c: 858: {
 22003                           ;mdm_gsm_gprs.c: 859: UartMessage[8] = '0';
 22004                           
 22005                           ; BSR set to: 0
 22006  005D98  0E30               	movlw	48
 22007  005D9A                     L34:
 22008  005D9A  6F8C               	movwf	(Mdm_SetSmsFormat@UartMessage+8)& (0+255),b
 22009                           
 22010                           ; BSR set to: 0
 22011                           ;mdm_gsm_gprs.c: 860: }
 22012                           ;mdm_gsm_gprs.c: 862: UartMessage[9] = '\r';
 22013  005D9C  0E0D               	movlw	13
 22014  005D9E  6F8D               	movwf	(Mdm_SetSmsFormat@UartMessage+9)& (0+255),b
 22015                           
 22016                           ;mdm_gsm_gprs.c: 863: UartMessage[10] = (0);
 22017  005DA0  0E00               	movlw	0
 22018  005DA2  6F8E               	movwf	(Mdm_SetSmsFormat@UartMessage+10)& (0+255),b
 22019                           
 22020                           ; BSR set to: 0
 22021                           ;mdm_gsm_gprs.c: 866: Uart_WriteString(1, UartMessage);
 22022  005DA4  0E84               	movlw	low Mdm_SetSmsFormat@UartMessage
 22023  005DA6  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 22024  005DA8  0E00               	movlw	high Mdm_SetSmsFormat@UartMessage
 22025  005DAA  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 22026  005DAC  0E01               	movlw	1
 22027  005DAE  EC2E  F031         	call	_Uart_WriteString
 22028  005DB2  0012               	return		;funcret
 22029  005DB4                     __end_of_Mdm_SetSmsFormat:
 22030                           	opt stack 0
 22031                           tosu	equ	0xFFF
 22032                           tosh	equ	0xFFE
 22033                           tosl	equ	0xFFD
 22034                           pclath	equ	0xFFA
 22035                           tblptru	equ	0xFF8
 22036                           tblptrh	equ	0xFF7
 22037                           tblptrl	equ	0xFF6
 22038                           tablat	equ	0xFF5
 22039                           prodh	equ	0xFF4
 22040                           prodl	equ	0xFF3
 22041                           intcon	equ	0xFF2
 22042                           intcon2	equ	0xFF1
 22043                           intcon3	equ	0xFF0
 22044                           indf0	equ	0xFEF
 22045                           postinc0	equ	0xFEE
 22046                           plusw0	equ	0xFEB
 22047                           fsr0h	equ	0xFEA
 22048                           fsr0l	equ	0xFE9
 22049                           wreg	equ	0xFE8
 22050                           indf1	equ	0xFE7
 22051                           postinc1	equ	0xFE6
 22052                           postdec1	equ	0xFE5
 22053                           fsr1h	equ	0xFE2
 22054                           fsr1l	equ	0xFE1
 22055                           indf2	equ	0xFDF
 22056                           postinc2	equ	0xFDE
 22057                           postdec2	equ	0xFDD
 22058                           plusw2	equ	0xFDB
 22059                           fsr2h	equ	0xFDA
 22060                           fsr2l	equ	0xFD9
 22061                           status	equ	0xFD8
 22062                           
 22063 ;; *************** function _initEeprom *****************
 22064 ;; Defined at:
 22065 ;;		line 130 in file "../Source/c/04_App/app_init.c"
 22066 ;; Parameters:    Size  Location     Type
 22067 ;;		None
 22068 ;; Auto vars:     Size  Location     Type
 22069 ;;  isInitialize    1    2[BANK1 ] unsigned char 
 22070 ;;  memoryOpResu    1    1[BANK1 ] enum E8246
 22071 ;;  addressToRea    1    0[BANK1 ] const unsigned char 
 22072 ;; Return value:  Size  Location     Type
 22073 ;;                  1    wreg      unsigned char 
 22074 ;; Registers used:
 22075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22076 ;; Tracked objects:
 22077 ;;		On entry : 0/0
 22078 ;;		On exit  : 0/0
 22079 ;;		Unchanged: 0/0
 22080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22082 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22084 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22085 ;;Total ram usage:        3 bytes
 22086 ;; Hardware stack levels used:    1
 22087 ;; Hardware stack levels required when called:   17
 22088 ;; This function calls:
 22089 ;;		_Eeprom_Read
 22090 ;; This function is called by:
 22091 ;;		_initFsm
 22092 ;; This function uses a non-reentrant model
 22093 ;;
 22094                           
 22095                           	psect	text100
 22096  005060                     __ptext100:
 22097                           	opt stack 0
 22098  005060                     _initEeprom:
 22099                           	opt stack 9
 22100                           
 22101                           ;app_init.c: 132: const uint8_t addressToRead = 0;
 22102                           
 22103                           ;incstack = 0
 22104  005060  0E00               	movlw	0
 22105  005062  0101               	movlb	1	; () banked
 22106  005064  6F00               	movwf	initEeprom@addressToRead& (0+255),b
 22107                           
 22108                           ;app_init.c: 133: static eepromStates currentState = EEPROM_INIT;
 22109                           ;app_init.c: 134: EepromStsType memoryOpResult = OP_PENDING;
 22110  005066  0E02               	movlw	2
 22111  005068  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22112                           
 22113                           ;app_init.c: 135: bool isInitialized = 0;
 22114  00506A  0E00               	movlw	0
 22115  00506C  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22116                           
 22117                           ;app_init.c: 137: switch (currentState)
 22118  00506E  D032               	goto	l2668
 22119  005070                     
 22120                           ; BSR set to: 1
 22121                           ;app_init.c: 140: memoryOpResult = Eeprom_Read(0, memoryPreamble, 4);
 22122                           
 22123                           ; BSR set to: 1
 22124  005070  0EAC               	movlw	low _memoryPreamble
 22125  005072  0100               	movlb	0	; () banked
 22126  005074  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 22127  005076  0E03               	movlw	high _memoryPreamble
 22128  005078  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 22129  00507A  0E04               	movlw	4
 22130  00507C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 22131  00507E  0E00               	movlw	0
 22132  005080  EC92  F02D         	call	_Eeprom_Read
 22133  005084  0101               	movlb	1	; () banked
 22134  005086  6F01               	movwf	initEeprom@memoryOpResult& (0+255),b
 22135                           
 22136                           ; BSR set to: 1
 22137                           ;app_init.c: 141: if (memoryOpResult != OP_PENDING)
 22138  005088  0E02               	movlw	2
 22139  00508A  1901               	xorwf	initEeprom@memoryOpResult& (0+255),w,b
 22140  00508C  B4D8               	btfsc	status,2,c
 22141  00508E  D02C               	goto	l2673
 22142                           
 22143                           ; BSR set to: 1
 22144                           ;app_init.c: 142: {
 22145                           ;app_init.c: 143: if (memoryPreamble[0] == 'U' &&
 22146                           ;app_init.c: 144: memoryPreamble[1] == 'S' &&
 22147                           ;app_init.c: 145: memoryPreamble[2] == 'I' &&
 22148                           ;app_init.c: 146: memoryPreamble[3] == 'M')
 22149  005090  0E55               	movlw	85
 22150  005092  0103               	movlb	3	; () banked
 22151  005094  19AC               	xorwf	_memoryPreamble& (0+255),w,b
 22152  005096  A4D8               	btfss	status,2,c
 22153  005098  D00E               	goto	l2671
 22154                           
 22155                           ; BSR set to: 3
 22156  00509A  0E53               	movlw	83
 22157  00509C  19AD               	xorwf	(_memoryPreamble+1)& (0+255),w,b
 22158  00509E  A4D8               	btfss	status,2,c
 22159  0050A0  D00A               	goto	l2671
 22160                           
 22161                           ; BSR set to: 3
 22162  0050A2  0E49               	movlw	73
 22163  0050A4  19AE               	xorwf	(_memoryPreamble+2)& (0+255),w,b
 22164  0050A6  A4D8               	btfss	status,2,c
 22165  0050A8  D006               	goto	l2671
 22166                           
 22167                           ; BSR set to: 3
 22168  0050AA  0E4D               	movlw	77
 22169  0050AC  19AF               	xorwf	(_memoryPreamble+3)& (0+255),w,b
 22170  0050AE  A4D8               	btfss	status,2,c
 22171  0050B0  D002               	goto	l2671
 22172                           
 22173                           ; BSR set to: 3
 22174                           ;app_init.c: 147: {
 22175                           ;app_init.c: 148: currentState = EEPROM_NOT_EMPTY;
 22176  0050B2  0E02               	movlw	2
 22177  0050B4  D001               	goto	L35
 22178  0050B6                     l2671:
 22179                           
 22180                           ;app_init.c: 150: else
 22181                           ;app_init.c: 151: {
 22182                           ;app_init.c: 152: currentState = EEPROM_EMPTY;
 22183                           
 22184                           ; BSR set to: 1
 22185  0050B6  0E01               	movlw	1
 22186  0050B8                     L35:
 22187  0050B8  0101               	movlb	1	; () banked
 22188  0050BA  D003               	goto	L36
 22189  0050BC                     
 22190                           ; BSR set to: 1
 22191                           ;app_init.c: 158: isInitialized = 1;
 22192                           
 22193                           ; BSR set to: 1
 22194  0050BC  0E01               	movlw	1
 22195  0050BE  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22196                           
 22197                           ;app_init.c: 159: currentState = EEPROM_INIT;
 22198  0050C0  0E00               	movlw	0
 22199  0050C2                     L36:
 22200  0050C2  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22201                           
 22202                           ;app_init.c: 160: break;
 22203  0050C4  D011               	goto	l2673
 22204  0050C6                     
 22205                           ; BSR set to: 1
 22206                           ;app_init.c: 163: currentState = EEPROM_INIT;
 22207                           
 22208                           ; BSR set to: 1
 22209  0050C6  0E00               	movlw	0
 22210  0050C8  6FD7               	movwf	initEeprom@currentState& (0+255),b
 22211                           
 22212                           ;app_init.c: 164: isInitialized = 1;
 22213  0050CA  0E01               	movlw	1
 22214  0050CC  6F02               	movwf	initEeprom@isInitialized& (0+255),b
 22215                           
 22216                           ;app_init.c: 165: isMemoryEmpty = 0;
 22217  0050CE  0E00               	movlw	0
 22218  0050D0  6FFE               	movwf	_isMemoryEmpty& (0+255),b
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;app_init.c: 170: }
 22222                           
 22223                           ; BSR set to: 1
 22224                           ;app_init.c: 169: break;
 22225                           
 22226                           ;app_init.c: 168: default:
 22227                           
 22228                           ;app_init.c: 166: break;
 22229  0050D2  D00A               	goto	l2673
 22230  0050D4                     l2668:
 22231                           
 22232                           ; BSR set to: 1
 22233                           
 22234                           ; BSR set to: 1
 22235  0050D4  51D7               	movf	initEeprom@currentState& (0+255),w,b
 22236                           
 22237                           ; Switch size 1, requested type "space"
 22238                           ; Number of cases is 3, Range of values is 0 to 2
 22239                           ; switch strategies available:
 22240                           ; Name         Instructions Cycles
 22241                           ; simple_byte           10     6 (average)
 22242                           ;	Chosen strategy is simple_byte
 22243  0050D6  0A00               	xorlw	0	; case 0
 22244  0050D8  B4D8               	btfsc	status,2,c
 22245  0050DA  D7CA               	goto	l2669
 22246  0050DC  0A01               	xorlw	1	; case 1
 22247  0050DE  B4D8               	btfsc	status,2,c
 22248  0050E0  D7ED               	goto	l2674
 22249  0050E2  0A03               	xorlw	3	; case 2
 22250  0050E4  B4D8               	btfsc	status,2,c
 22251  0050E6  D7EF               	goto	l2675
 22252  0050E8                     l2673:
 22253                           
 22254                           ; BSR set to: 1
 22255                           ;app_init.c: 171: return isInitialized;
 22256                           
 22257                           ; BSR set to: 1
 22258  0050E8  5102               	movf	initEeprom@isInitialized& (0+255),w,b
 22259  0050EA  0012               	return	
 22260  0050EC                     __end_of_initEeprom:
 22261                           	opt stack 0
 22262                           tosu	equ	0xFFF
 22263                           tosh	equ	0xFFE
 22264                           tosl	equ	0xFFD
 22265                           pclath	equ	0xFFA
 22266                           tblptru	equ	0xFF8
 22267                           tblptrh	equ	0xFF7
 22268                           tblptrl	equ	0xFF6
 22269                           tablat	equ	0xFF5
 22270                           prodh	equ	0xFF4
 22271                           prodl	equ	0xFF3
 22272                           intcon	equ	0xFF2
 22273                           intcon2	equ	0xFF1
 22274                           intcon3	equ	0xFF0
 22275                           indf0	equ	0xFEF
 22276                           postinc0	equ	0xFEE
 22277                           plusw0	equ	0xFEB
 22278                           fsr0h	equ	0xFEA
 22279                           fsr0l	equ	0xFE9
 22280                           wreg	equ	0xFE8
 22281                           indf1	equ	0xFE7
 22282                           postinc1	equ	0xFE6
 22283                           postdec1	equ	0xFE5
 22284                           fsr1h	equ	0xFE2
 22285                           fsr1l	equ	0xFE1
 22286                           indf2	equ	0xFDF
 22287                           postinc2	equ	0xFDE
 22288                           postdec2	equ	0xFDD
 22289                           plusw2	equ	0xFDB
 22290                           fsr2h	equ	0xFDA
 22291                           fsr2l	equ	0xFD9
 22292                           status	equ	0xFD8
 22293                           
 22294 ;; *************** function _detectCmd *****************
 22295 ;; Defined at:
 22296 ;;		line 114 in file "../Source/c/04_App/app.c"
 22297 ;; Parameters:    Size  Location     Type
 22298 ;;		None
 22299 ;; Auto vars:     Size  Location     Type
 22300 ;;  currentState    1   53[BANK0 ] enum E9012
 22301 ;; Return value:  Size  Location     Type
 22302 ;;                  1    wreg      enum E9012
 22303 ;; Registers used:
 22304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22305 ;; Tracked objects:
 22306 ;;		On entry : 0/0
 22307 ;;		On exit  : 0/0
 22308 ;;		Unchanged: 0/0
 22309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22314 ;;Total ram usage:        1 bytes
 22315 ;; Hardware stack levels used:    1
 22316 ;; Hardware stack levels required when called:   14
 22317 ;; This function calls:
 22318 ;;		_GetCallerNumber
 22319 ;;		_GetLastInteractionNumber
 22320 ;;		_Mdm_GetSmsData
 22321 ;;		_Mdm_HangPhoneCall
 22322 ;;		_Mdm_IsRinging
 22323 ;;		_Mdm_IsSmsReceived
 22324 ;;		_Mdm_RequestSmsData
 22325 ;;		_StringCopy
 22326 ;;		_Uart_WriteConstString
 22327 ;;		_parseCommand
 22328 ;; This function is called by:
 22329 ;;		_MyApp_Task
 22330 ;; This function uses a non-reentrant model
 22331 ;;
 22332                           
 22333                           	psect	text101
 22334  004A08                     __ptext101:
 22335                           	opt stack 0
 22336  004A08                     _detectCmd:
 22337                           	opt stack 13
 22338                           
 22339                           ;app.c: 116: gateFsmStates currentState = GATE_WAIT_EVENT;
 22340                           
 22341                           ; BSR set to: 1
 22342                           ;incstack = 0
 22343  004A08  0E01               	movlw	1
 22344  004A0A  0100               	movlb	0	; () banked
 22345  004A0C  6F95               	movwf	detectCmd@currentState& (0+255),b
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;app.c: 117: if (Mdm_IsSmsReceived())
 22349  004A0E  EC67  F033         	call	_Mdm_IsSmsReceived	;wreg free
 22350  004A12  0900               	iorlw	0
 22351  004A14  A4D8               	btfss	status,2,c
 22352                           
 22353                           ;app.c: 118: {
 22354                           ;app.c: 119: Mdm_RequestSmsData();
 22355  004A16  EC35  F035         	call	_Mdm_RequestSmsData	;wreg free
 22356                           
 22357                           ;app.c: 120: }
 22358                           ;app.c: 121: if (Mdm_GetSmsData(smsText) == SmsDataReady)
 22359  004A1A  0E93               	movlw	low _smsText
 22360  004A1C  0100               	movlb	0	; () banked
 22361  004A1E  6F8F               	movwf	Mdm_GetSmsData@MessageText& (0+255),b
 22362  004A20  0E04               	movlw	high _smsText
 22363  004A22  6F90               	movwf	(Mdm_GetSmsData@MessageText+1)& (0+255),b
 22364  004A24  EC04  F02B         	call	_Mdm_GetSmsData	;wreg free
 22365  004A28  06E8               	decf	wreg,f,c
 22366  004A2A  A4D8               	btfss	status,2,c
 22367  004A2C  D01D               	goto	l2583
 22368                           
 22369                           ;app.c: 122: {
 22370                           ;app.c: 123: Uart_WriteConstString(1,"AT+CMGD=1,0\r\n");
 22371  004A2E  0E2F               	movlw	low STR_29
 22372  004A30  0100               	movlb	0	; () banked
 22373  004A32  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 22374  004A34  0EFF               	movlw	high STR_29
 22375  004A36  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 22376  004A38  0E01               	movlw	1
 22377  004A3A  EC8E  F030         	call	_Uart_WriteConstString
 22378                           
 22379                           ;app.c: 124: currentState = parseCommand();
 22380  004A3E  ECA4  F017         	call	_parseCommand	;wreg free
 22381  004A42  0100               	movlb	0	; () banked
 22382  004A44  6F95               	movwf	detectCmd@currentState& (0+255),b
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;app.c: 125: StringCopy(GetLastInteractionNumber(), receivedNumber, ((UINT8)(13)));
 22386  004A46  EC61  F035         	call	_GetLastInteractionNumber	;wreg free
 22387  004A4A  C07D  F085         	movff	?_GetLastInteractionNumber,StringCopy@SourceStr
 22388  004A4E  C07E  F086         	movff	?_GetLastInteractionNumber+1,StringCopy@SourceStr+1
 22389  004A52  0E31               	movlw	low _receivedNumber
 22390  004A54  0100               	movlb	0	; () banked
 22391  004A56  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22392  004A58  0E03               	movlw	high _receivedNumber
 22393  004A5A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22394  004A5C  0E00               	movlw	0
 22395  004A5E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22396  004A60  0E0D               	movlw	13
 22397  004A62  6F89               	movwf	StringCopy@Len& (0+255),b
 22398  004A64  ECD1  F02B         	call	_StringCopy	;wreg free
 22399  004A68                     l2583:
 22400                           
 22401                           ;app.c: 126: }
 22402                           ;app.c: 127: if (Mdm_IsRinging())
 22403  004A68  EC79  F033         	call	_Mdm_IsRinging	;wreg free
 22404  004A6C  0900               	iorlw	0
 22405  004A6E  B4D8               	btfsc	status,2,c
 22406  004A70  D016               	goto	l2584
 22407                           
 22408                           ;app.c: 128: {
 22409                           ;app.c: 129: Mdm_HangPhoneCall();
 22410  004A72  EC13  F035         	call	_Mdm_HangPhoneCall	;wreg free
 22411                           
 22412                           ;app.c: 130: currentState = GATE_TRIGGER_CMD;
 22413  004A76  0E04               	movlw	4
 22414  004A78  0100               	movlb	0	; () banked
 22415  004A7A  6F95               	movwf	detectCmd@currentState& (0+255),b
 22416                           
 22417                           ; BSR set to: 0
 22418                           ;app.c: 131: StringCopy(GetCallerNumber(), receivedNumber, ((UINT8)(13)));
 22419  004A7C  ECDE  F031         	call	_GetCallerNumber	;wreg free
 22420  004A80  C083  F085         	movff	?_GetCallerNumber,StringCopy@SourceStr
 22421  004A84  C084  F086         	movff	?_GetCallerNumber+1,StringCopy@SourceStr+1
 22422  004A88  0E31               	movlw	low _receivedNumber
 22423  004A8A  0100               	movlb	0	; () banked
 22424  004A8C  6F87               	movwf	StringCopy@DestStr& (0+255),b
 22425  004A8E  0E03               	movlw	high _receivedNumber
 22426  004A90  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 22427  004A92  0E00               	movlw	0
 22428  004A94  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 22429  004A96  0E0D               	movlw	13
 22430  004A98  6F89               	movwf	StringCopy@Len& (0+255),b
 22431  004A9A  ECD1  F02B         	call	_StringCopy	;wreg free
 22432  004A9E                     l2584:
 22433                           
 22434                           ;app.c: 132: }
 22435                           ;app.c: 133: return currentState;
 22436  004A9E  0100               	movlb	0	; () banked
 22437  004AA0  5195               	movf	detectCmd@currentState& (0+255),w,b
 22438  004AA2  0012               	return	
 22439  004AA4                     __end_of_detectCmd:
 22440                           	opt stack 0
 22441                           tosu	equ	0xFFF
 22442                           tosh	equ	0xFFE
 22443                           tosl	equ	0xFFD
 22444                           pclath	equ	0xFFA
 22445                           tblptru	equ	0xFF8
 22446                           tblptrh	equ	0xFF7
 22447                           tblptrl	equ	0xFF6
 22448                           tablat	equ	0xFF5
 22449                           prodh	equ	0xFF4
 22450                           prodl	equ	0xFF3
 22451                           intcon	equ	0xFF2
 22452                           intcon2	equ	0xFF1
 22453                           intcon3	equ	0xFF0
 22454                           indf0	equ	0xFEF
 22455                           postinc0	equ	0xFEE
 22456                           plusw0	equ	0xFEB
 22457                           fsr0h	equ	0xFEA
 22458                           fsr0l	equ	0xFE9
 22459                           wreg	equ	0xFE8
 22460                           indf1	equ	0xFE7
 22461                           postinc1	equ	0xFE6
 22462                           postdec1	equ	0xFE5
 22463                           fsr1h	equ	0xFE2
 22464                           fsr1l	equ	0xFE1
 22465                           indf2	equ	0xFDF
 22466                           postinc2	equ	0xFDE
 22467                           postdec2	equ	0xFDD
 22468                           plusw2	equ	0xFDB
 22469                           fsr2h	equ	0xFDA
 22470                           fsr2l	equ	0xFD9
 22471                           status	equ	0xFD8
 22472                           
 22473 ;; *************** function _parseCommand *****************
 22474 ;; Defined at:
 22475 ;;		line 74 in file "../Source/c/04_App/app.c"
 22476 ;; Parameters:    Size  Location     Type
 22477 ;;		None
 22478 ;; Auto vars:     Size  Location     Type
 22479 ;;  resetCmd        4   48[BANK0 ] const unsigned char [4]
 22480 ;;  deleteNumber    4   44[BANK0 ] const unsigned char [4]
 22481 ;;  addNumberCmd    4   40[BANK0 ] const unsigned char [4]
 22482 ;;  state           1   52[BANK0 ] enum E9012
 22483 ;; Return value:  Size  Location     Type
 22484 ;;                  1    wreg      enum E9012
 22485 ;; Registers used:
 22486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22487 ;; Tracked objects:
 22488 ;;		On entry : 0/0
 22489 ;;		On exit  : 0/0
 22490 ;;		Unchanged: 0/0
 22491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22493 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22495 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22496 ;;Total ram usage:       13 bytes
 22497 ;; Hardware stack levels used:    1
 22498 ;; Hardware stack levels required when called:   12
 22499 ;; This function calls:
 22500 ;;		_StringCompare
 22501 ;;		_isNumberValid
 22502 ;; This function is called by:
 22503 ;;		_detectCmd
 22504 ;; This function uses a non-reentrant model
 22505 ;;
 22506                           
 22507                           	psect	text102
 22508  002F48                     __ptext102:
 22509                           	opt stack 0
 22510  002F48                     _parseCommand:
 22511                           	opt stack 14
 22512                           
 22513                           ;app.c: 76: const uint8_t addNumberCmd[] = {'A', 'D', 'D', ';'};
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;incstack = 0
 22517  002F48  0E2A               	movlw	low parseCommand@F9026
 22518  002F4A  6EF6               	movwf	tblptrl,c
 22519  002F4C                     	if	1	;There is more than 1 active tblptr byte
 22520  002F4C  0EFC               	movlw	high parseCommand@F9026
 22521  002F4E  6EF7               	movwf	tblptrh,c
 22522  002F50                     	endif
 22523  002F50                     	if	0	;There are less than 3 active tblptr bytes
 22524  002F50                     	endif
 22525  002F50  0009               	tblrd		*+
 22526  002F52  CFF5 F088          	movff	tablat,parseCommand@addNumberCmd
 22527  002F56  0009               	tblrd		*+
 22528  002F58  CFF5 F089          	movff	tablat,parseCommand@addNumberCmd+1
 22529  002F5C  0009               	tblrd		*+
 22530  002F5E  CFF5 F08A          	movff	tablat,parseCommand@addNumberCmd+2
 22531  002F62  000A               	tblrd		*-
 22532  002F64  CFF5 F08B          	movff	tablat,parseCommand@addNumberCmd+3
 22533                           
 22534                           ;app.c: 77: const uint8_t deleteNumberCmd[] = {'D', 'E', 'L', ';'};
 22535  002F68  0E26               	movlw	low parseCommand@F9028
 22536  002F6A  6EF6               	movwf	tblptrl,c
 22537  002F6C                     	if	1	;There is more than 1 active tblptr byte
 22538  002F6C  0EFC               	movlw	high parseCommand@F9028
 22539  002F6E  6EF7               	movwf	tblptrh,c
 22540  002F70                     	endif
 22541  002F70                     	if	0	;There are less than 3 active tblptr bytes
 22542  002F70                     	endif
 22543  002F70  0009               	tblrd		*+
 22544  002F72  CFF5 F08C          	movff	tablat,parseCommand@deleteNumberCmd
 22545  002F76  0009               	tblrd		*+
 22546  002F78  CFF5 F08D          	movff	tablat,parseCommand@deleteNumberCmd+1
 22547  002F7C  0009               	tblrd		*+
 22548  002F7E  CFF5 F08E          	movff	tablat,parseCommand@deleteNumberCmd+2
 22549  002F82  000A               	tblrd		*-
 22550  002F84  CFF5 F08F          	movff	tablat,parseCommand@deleteNumberCmd+3
 22551                           
 22552                           ;app.c: 78: const uint8_t resetCmd[] = {'R', 'E', 'S', ';'};
 22553  002F88  0E22               	movlw	low parseCommand@F9030
 22554  002F8A  6EF6               	movwf	tblptrl,c
 22555  002F8C                     	if	1	;There is more than 1 active tblptr byte
 22556  002F8C  0EFC               	movlw	high parseCommand@F9030
 22557  002F8E  6EF7               	movwf	tblptrh,c
 22558  002F90                     	endif
 22559  002F90                     	if	0	;There are less than 3 active tblptr bytes
 22560  002F90                     	endif
 22561  002F90  0009               	tblrd		*+
 22562  002F92  CFF5 F090          	movff	tablat,parseCommand@resetCmd
 22563  002F96  0009               	tblrd		*+
 22564  002F98  CFF5 F091          	movff	tablat,parseCommand@resetCmd+1
 22565  002F9C  0009               	tblrd		*+
 22566  002F9E  CFF5 F092          	movff	tablat,parseCommand@resetCmd+2
 22567  002FA2  000A               	tblrd		*-
 22568  002FA4  CFF5 F093          	movff	tablat,parseCommand@resetCmd+3
 22569                           
 22570                           ;app.c: 79: gateFsmStates state = GATE_WAIT_EVENT;
 22571  002FA8  0E01               	movlw	1
 22572  002FAA  0100               	movlb	0	; () banked
 22573  002FAC  6F94               	movwf	parseCommand@state& (0+255),b
 22574                           
 22575                           ; BSR set to: 0
 22576                           ;app.c: 81: if (StringCompare(smsText, addNumberCmd, sizeof(addNumberCmd)))
 22577  002FAE  0E93               	movlw	low _smsText
 22578  002FB0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22579  002FB2  0E04               	movlw	high _smsText
 22580  002FB4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22581  002FB6  0E88               	movlw	low parseCommand@addNumberCmd
 22582  002FB8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22583  002FBA  0E00               	movlw	high parseCommand@addNumberCmd
 22584  002FBC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22585  002FBE  0E00               	movlw	0
 22586  002FC0  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22587  002FC2  0E04               	movlw	4
 22588  002FC4  6F81               	movwf	StringCompare@Len& (0+255),b
 22589  002FC6  EC39  F02E         	call	_StringCompare	;wreg free
 22590  002FCA  0900               	iorlw	0
 22591  002FCC  B4D8               	btfsc	status,2,c
 22592  002FCE  D00E               	goto	l2569
 22593                           
 22594                           ;app.c: 82: {
 22595                           ;app.c: 83: if (!isNumberValid(smsText + 4))
 22596  002FD0  0E97               	movlw	low (_smsText+4)
 22597  002FD2  0100               	movlb	0	; () banked
 22598  002FD4  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22599  002FD6  0E04               	movlw	high (_smsText+4)
 22600  002FD8  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22601  002FDA  EC9E  F02B         	call	_isNumberValid	;wreg free
 22602  002FDE  0900               	iorlw	0
 22603  002FE0  A4D8               	btfss	status,2,c
 22604  002FE2  D002               	goto	l2570
 22605  002FE4                     u14370:
 22606                           
 22607                           ;app.c: 84: {
 22608                           ;app.c: 85: state = GATE_WAIT_EVENT;
 22609  002FE4  0E01               	movlw	1
 22610  002FE6  D033               	goto	L40
 22611  002FE8                     l2570:
 22612                           
 22613                           ;app.c: 87: else
 22614                           ;app.c: 88: {
 22615                           ;app.c: 89: state = GATE_ADD_CMD;
 22616                           
 22617                           ; BSR set to: 0
 22618  002FE8  0E02               	movlw	2
 22619  002FEA  D031               	goto	L40
 22620  002FEC                     l2569:
 22621                           
 22622                           ;app.c: 92: else if (StringCompare(smsText, deleteNumberCmd, sizeof(deleteNumberCmd)))
 22623                           
 22624                           ; BSR set to: 0
 22625  002FEC  0E93               	movlw	low _smsText
 22626  002FEE  0100               	movlb	0	; () banked
 22627  002FF0  6F7D               	movwf	StringCompare@String1& (0+255),b
 22628  002FF2  0E04               	movlw	high _smsText
 22629  002FF4  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22630  002FF6  0E8C               	movlw	low parseCommand@deleteNumberCmd
 22631  002FF8  6F7F               	movwf	StringCompare@String2& (0+255),b
 22632  002FFA  0E00               	movlw	high parseCommand@deleteNumberCmd
 22633  002FFC  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22634  002FFE  0E00               	movlw	0
 22635  003000  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22636  003002  0E04               	movlw	4
 22637  003004  6F81               	movwf	StringCompare@Len& (0+255),b
 22638  003006  EC39  F02E         	call	_StringCompare	;wreg free
 22639  00300A  0900               	iorlw	0
 22640  00300C  B4D8               	btfsc	status,2,c
 22641  00300E  D00C               	goto	l2573
 22642                           
 22643                           ;app.c: 93: {
 22644                           ;app.c: 94: if (!isNumberValid(smsText + 4))
 22645  003010  0E97               	movlw	low (_smsText+4)
 22646  003012  0100               	movlb	0	; () banked
 22647  003014  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 22648  003016  0E04               	movlw	high (_smsText+4)
 22649  003018  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 22650  00301A  EC9E  F02B         	call	_isNumberValid	;wreg free
 22651  00301E  0900               	iorlw	0
 22652  003020  B4D8               	btfsc	status,2,c
 22653  003022  D7E0               	goto	u14370
 22654                           
 22655                           ;app.c: 98: else
 22656                           ;app.c: 99: {
 22657                           ;app.c: 100: state = GATE_DEL_CMD;
 22658                           
 22659                           ; BSR set to: 0
 22660                           
 22661                           ;app.c: 97: }
 22662                           
 22663                           ;app.c: 95: {
 22664                           ;app.c: 96: state = GATE_WAIT_EVENT;
 22665  003024  0E03               	movlw	3
 22666  003026  D013               	goto	L40
 22667  003028                     l2573:
 22668                           
 22669                           ;app.c: 103: else if (StringCompare(smsText, resetCmd, sizeof(resetCmd)))
 22670                           
 22671                           ; BSR set to: 0
 22672  003028  0E93               	movlw	low _smsText
 22673  00302A  0100               	movlb	0	; () banked
 22674  00302C  6F7D               	movwf	StringCompare@String1& (0+255),b
 22675  00302E  0E04               	movlw	high _smsText
 22676  003030  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 22677  003032  0E90               	movlw	low parseCommand@resetCmd
 22678  003034  6F7F               	movwf	StringCompare@String2& (0+255),b
 22679  003036  0E00               	movlw	high parseCommand@resetCmd
 22680  003038  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 22681  00303A  0E00               	movlw	0
 22682  00303C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 22683  00303E  0E04               	movlw	4
 22684  003040  6F81               	movwf	StringCompare@Len& (0+255),b
 22685  003042  EC39  F02E         	call	_StringCompare	;wreg free
 22686  003046  0900               	iorlw	0
 22687  003048  B4D8               	btfsc	status,2,c
 22688  00304A  D003               	goto	l2577
 22689                           
 22690                           ;app.c: 104: {
 22691                           ;app.c: 105: state = GATE_RESET;
 22692  00304C  0E05               	movlw	5
 22693  00304E                     L40:
 22694  00304E  0100               	movlb	0	; () banked
 22695  003050  6F94               	movwf	parseCommand@state& (0+255),b
 22696  003052                     l2577:
 22697                           
 22698                           ;app.c: 110: }
 22699                           ;app.c: 111: return state;
 22700                           
 22701                           ; BSR set to: 0
 22702                           
 22703                           ; BSR set to: 0
 22704                           
 22705                           ; BSR set to: 0
 22706                           
 22707                           ;app.c: 107: else
 22708                           ;app.c: 108: {
 22709                           
 22710                           ; BSR set to: 0
 22711  003052  0100               	movlb	0	; () banked
 22712  003054  5194               	movf	parseCommand@state& (0+255),w,b
 22713  003056  0012               	return	
 22714  003058                     __end_of_parseCommand:
 22715                           	opt stack 0
 22716                           tosu	equ	0xFFF
 22717                           tosh	equ	0xFFE
 22718                           tosl	equ	0xFFD
 22719                           pclath	equ	0xFFA
 22720                           tblptru	equ	0xFF8
 22721                           tblptrh	equ	0xFF7
 22722                           tblptrl	equ	0xFF6
 22723                           tablat	equ	0xFF5
 22724                           prodh	equ	0xFF4
 22725                           prodl	equ	0xFF3
 22726                           intcon	equ	0xFF2
 22727                           intcon2	equ	0xFF1
 22728                           intcon3	equ	0xFF0
 22729                           indf0	equ	0xFEF
 22730                           postinc0	equ	0xFEE
 22731                           plusw0	equ	0xFEB
 22732                           fsr0h	equ	0xFEA
 22733                           fsr0l	equ	0xFE9
 22734                           wreg	equ	0xFE8
 22735                           indf1	equ	0xFE7
 22736                           postinc1	equ	0xFE6
 22737                           postdec1	equ	0xFE5
 22738                           fsr1h	equ	0xFE2
 22739                           fsr1l	equ	0xFE1
 22740                           indf2	equ	0xFDF
 22741                           postinc2	equ	0xFDE
 22742                           postdec2	equ	0xFDD
 22743                           plusw2	equ	0xFDB
 22744                           fsr2h	equ	0xFDA
 22745                           fsr2l	equ	0xFD9
 22746                           status	equ	0xFD8
 22747                           
 22748 ;; *************** function _Mdm_RequestSmsData *****************
 22749 ;; Defined at:
 22750 ;;		line 877 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22751 ;; Parameters:    Size  Location     Type
 22752 ;;		None
 22753 ;; Auto vars:     Size  Location     Type
 22754 ;;		None
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  1    wreg      void 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22768 ;;Total ram usage:        0 bytes
 22769 ;; Hardware stack levels used:    1
 22770 ;; Hardware stack levels required when called:   12
 22771 ;; This function calls:
 22772 ;;		_GenerateEvt
 22773 ;; This function is called by:
 22774 ;;		_detectCmd
 22775 ;; This function uses a non-reentrant model
 22776 ;;
 22777                           
 22778                           	psect	text103
 22779  006A6A                     __ptext103:
 22780                           	opt stack 0
 22781  006A6A                     _Mdm_RequestSmsData:
 22782                           	opt stack 14
 22783                           
 22784                           ;mdm_gsm_gprs.c: 880: GenerateEvt(&GetSmsText);
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;incstack = 0
 22788  006A6A  0EDD               	movlw	low _GetSmsText
 22789  006A6C  0100               	movlb	0	; () banked
 22790  006A6E  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 22791  006A70  0E00               	movlw	high _GetSmsText
 22792  006A72  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22793  006A74  ECC8  F034         	call	_GenerateEvt	;wreg free
 22794  006A78  0012               	return		;funcret
 22795  006A7A                     __end_of_Mdm_RequestSmsData:
 22796                           	opt stack 0
 22797                           tosu	equ	0xFFF
 22798                           tosh	equ	0xFFE
 22799                           tosl	equ	0xFFD
 22800                           pclath	equ	0xFFA
 22801                           tblptru	equ	0xFF8
 22802                           tblptrh	equ	0xFF7
 22803                           tblptrl	equ	0xFF6
 22804                           tablat	equ	0xFF5
 22805                           prodh	equ	0xFF4
 22806                           prodl	equ	0xFF3
 22807                           intcon	equ	0xFF2
 22808                           intcon2	equ	0xFF1
 22809                           intcon3	equ	0xFF0
 22810                           indf0	equ	0xFEF
 22811                           postinc0	equ	0xFEE
 22812                           plusw0	equ	0xFEB
 22813                           fsr0h	equ	0xFEA
 22814                           fsr0l	equ	0xFE9
 22815                           wreg	equ	0xFE8
 22816                           indf1	equ	0xFE7
 22817                           postinc1	equ	0xFE6
 22818                           postdec1	equ	0xFE5
 22819                           fsr1h	equ	0xFE2
 22820                           fsr1l	equ	0xFE1
 22821                           indf2	equ	0xFDF
 22822                           postinc2	equ	0xFDE
 22823                           postdec2	equ	0xFDD
 22824                           plusw2	equ	0xFDB
 22825                           fsr2h	equ	0xFDA
 22826                           fsr2l	equ	0xFD9
 22827                           status	equ	0xFD8
 22828                           
 22829 ;; *************** function _Mdm_IsSmsReceived *****************
 22830 ;; Defined at:
 22831 ;;		line 941 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22832 ;; Parameters:    Size  Location     Type
 22833 ;;		None
 22834 ;; Auto vars:     Size  Location     Type
 22835 ;;  Ret             1   33[BANK0 ] enum E8930
 22836 ;; Return value:  Size  Location     Type
 22837 ;;                  1    wreg      enum E8930
 22838 ;; Registers used:
 22839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22840 ;; Tracked objects:
 22841 ;;		On entry : 0/0
 22842 ;;		On exit  : 0/0
 22843 ;;		Unchanged: 0/0
 22844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22848 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22849 ;;Total ram usage:        1 bytes
 22850 ;; Hardware stack levels used:    1
 22851 ;; Hardware stack levels required when called:   12
 22852 ;; This function calls:
 22853 ;;		_ReceiveEvt
 22854 ;; This function is called by:
 22855 ;;		_detectCmd
 22856 ;; This function uses a non-reentrant model
 22857 ;;
 22858                           
 22859                           	psect	text104
 22860  0066CE                     __ptext104:
 22861                           	opt stack 0
 22862  0066CE                     _Mdm_IsSmsReceived:
 22863                           	opt stack 14
 22864                           
 22865                           ;mdm_gsm_gprs.c: 943: SmsRxStsType Ret = SmsNotReceived;
 22866                           
 22867                           ;incstack = 0
 22868  0066CE  0E00               	movlw	0
 22869  0066D0  0100               	movlb	0	; () banked
 22870  0066D2  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22871                           
 22872                           ; BSR set to: 0
 22873                           ;mdm_gsm_gprs.c: 946: if (ReceiveEvt(&SmsEvent))
 22874  0066D4  0EDE               	movlw	low _SmsEvent
 22875  0066D6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22876  0066D8  0E00               	movlw	high _SmsEvent
 22877  0066DA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22878  0066DC  ECD7  F032         	call	_ReceiveEvt	;wreg free
 22879  0066E0  0900               	iorlw	0
 22880  0066E2  B4D8               	btfsc	status,2,c
 22881  0066E4  D003               	goto	l1136
 22882                           
 22883                           ;mdm_gsm_gprs.c: 947: {
 22884                           ;mdm_gsm_gprs.c: 948: Ret = SmsReceived;
 22885  0066E6  0E01               	movlw	1
 22886  0066E8  0100               	movlb	0	; () banked
 22887  0066EA  6F81               	movwf	Mdm_IsSmsReceived@Ret& (0+255),b
 22888  0066EC                     l1136:
 22889                           
 22890                           ;mdm_gsm_gprs.c: 949: }
 22891                           ;mdm_gsm_gprs.c: 951: return Ret;
 22892  0066EC  0100               	movlb	0	; () banked
 22893  0066EE  5181               	movf	Mdm_IsSmsReceived@Ret& (0+255),w,b
 22894  0066F0  0012               	return	
 22895  0066F2                     __end_of_Mdm_IsSmsReceived:
 22896                           	opt stack 0
 22897                           tosu	equ	0xFFF
 22898                           tosh	equ	0xFFE
 22899                           tosl	equ	0xFFD
 22900                           pclath	equ	0xFFA
 22901                           tblptru	equ	0xFF8
 22902                           tblptrh	equ	0xFF7
 22903                           tblptrl	equ	0xFF6
 22904                           tablat	equ	0xFF5
 22905                           prodh	equ	0xFF4
 22906                           prodl	equ	0xFF3
 22907                           intcon	equ	0xFF2
 22908                           intcon2	equ	0xFF1
 22909                           intcon3	equ	0xFF0
 22910                           indf0	equ	0xFEF
 22911                           postinc0	equ	0xFEE
 22912                           plusw0	equ	0xFEB
 22913                           fsr0h	equ	0xFEA
 22914                           fsr0l	equ	0xFE9
 22915                           wreg	equ	0xFE8
 22916                           indf1	equ	0xFE7
 22917                           postinc1	equ	0xFE6
 22918                           postdec1	equ	0xFE5
 22919                           fsr1h	equ	0xFE2
 22920                           fsr1l	equ	0xFE1
 22921                           indf2	equ	0xFDF
 22922                           postinc2	equ	0xFDE
 22923                           postdec2	equ	0xFDD
 22924                           plusw2	equ	0xFDB
 22925                           fsr2h	equ	0xFDA
 22926                           fsr2l	equ	0xFD9
 22927                           status	equ	0xFD8
 22928                           
 22929 ;; *************** function _Mdm_IsRinging *****************
 22930 ;; Defined at:
 22931 ;;		line 1024 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 22932 ;; Parameters:    Size  Location     Type
 22933 ;;		None
 22934 ;; Auto vars:     Size  Location     Type
 22935 ;;  Ret             1   33[BANK0 ] enum E8926
 22936 ;; Return value:  Size  Location     Type
 22937 ;;                  1    wreg      enum E8926
 22938 ;; Registers used:
 22939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22940 ;; Tracked objects:
 22941 ;;		On entry : 0/0
 22942 ;;		On exit  : 0/0
 22943 ;;		Unchanged: 0/0
 22944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22949 ;;Total ram usage:        1 bytes
 22950 ;; Hardware stack levels used:    1
 22951 ;; Hardware stack levels required when called:   12
 22952 ;; This function calls:
 22953 ;;		_ReceiveEvt
 22954 ;; This function is called by:
 22955 ;;		_detectCmd
 22956 ;;		_getSetupCall
 22957 ;; This function uses a non-reentrant model
 22958 ;;
 22959                           
 22960                           	psect	text105
 22961  0066F2                     __ptext105:
 22962                           	opt stack 0
 22963  0066F2                     _Mdm_IsRinging:
 22964                           	opt stack 12
 22965                           
 22966                           ;mdm_gsm_gprs.c: 1026: RingStsType Ret = PhoneNotRinging;
 22967                           
 22968                           ; BSR set to: 0
 22969                           ;incstack = 0
 22970  0066F2  0E00               	movlw	0
 22971  0066F4  0100               	movlb	0	; () banked
 22972  0066F6  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22973                           
 22974                           ; BSR set to: 0
 22975                           ;mdm_gsm_gprs.c: 1029: if (ReceiveEvt(&RingEvent))
 22976  0066F8  0EE0               	movlw	low _RingEvent
 22977  0066FA  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 22978  0066FC  0E00               	movlw	high _RingEvent
 22979  0066FE  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22980  006700  ECD7  F032         	call	_ReceiveEvt	;wreg free
 22981  006704  0900               	iorlw	0
 22982  006706  B4D8               	btfsc	status,2,c
 22983  006708  D003               	goto	l1152
 22984                           
 22985                           ;mdm_gsm_gprs.c: 1030: {
 22986                           ;mdm_gsm_gprs.c: 1031: Ret = PhoneRinging;
 22987  00670A  0E01               	movlw	1
 22988  00670C  0100               	movlb	0	; () banked
 22989  00670E  6F81               	movwf	Mdm_IsRinging@Ret& (0+255),b
 22990  006710                     l1152:
 22991                           
 22992                           ;mdm_gsm_gprs.c: 1032: }
 22993                           ;mdm_gsm_gprs.c: 1034: return Ret;
 22994  006710  0100               	movlb	0	; () banked
 22995  006712  5181               	movf	Mdm_IsRinging@Ret& (0+255),w,b
 22996  006714  0012               	return	
 22997  006716                     __end_of_Mdm_IsRinging:
 22998                           	opt stack 0
 22999                           tosu	equ	0xFFF
 23000                           tosh	equ	0xFFE
 23001                           tosl	equ	0xFFD
 23002                           pclath	equ	0xFFA
 23003                           tblptru	equ	0xFF8
 23004                           tblptrh	equ	0xFF7
 23005                           tblptrl	equ	0xFF6
 23006                           tablat	equ	0xFF5
 23007                           prodh	equ	0xFF4
 23008                           prodl	equ	0xFF3
 23009                           intcon	equ	0xFF2
 23010                           intcon2	equ	0xFF1
 23011                           intcon3	equ	0xFF0
 23012                           indf0	equ	0xFEF
 23013                           postinc0	equ	0xFEE
 23014                           plusw0	equ	0xFEB
 23015                           fsr0h	equ	0xFEA
 23016                           fsr0l	equ	0xFE9
 23017                           wreg	equ	0xFE8
 23018                           indf1	equ	0xFE7
 23019                           postinc1	equ	0xFE6
 23020                           postdec1	equ	0xFE5
 23021                           fsr1h	equ	0xFE2
 23022                           fsr1l	equ	0xFE1
 23023                           indf2	equ	0xFDF
 23024                           postinc2	equ	0xFDE
 23025                           postdec2	equ	0xFDD
 23026                           plusw2	equ	0xFDB
 23027                           fsr2h	equ	0xFDA
 23028                           fsr2l	equ	0xFD9
 23029                           status	equ	0xFD8
 23030                           
 23031 ;; *************** function _Mdm_HangPhoneCall *****************
 23032 ;; Defined at:
 23033 ;;		line 996 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23034 ;; Parameters:    Size  Location     Type
 23035 ;;		None
 23036 ;; Auto vars:     Size  Location     Type
 23037 ;;		None
 23038 ;; Return value:  Size  Location     Type
 23039 ;;                  1    wreg      void 
 23040 ;; Registers used:
 23041 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23042 ;; Tracked objects:
 23043 ;;		On entry : 0/0
 23044 ;;		On exit  : 0/0
 23045 ;;		Unchanged: 0/0
 23046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23051 ;;Total ram usage:        0 bytes
 23052 ;; Hardware stack levels used:    1
 23053 ;; Hardware stack levels required when called:   13
 23054 ;; This function calls:
 23055 ;;		_Uart_WriteConstString
 23056 ;; This function is called by:
 23057 ;;		_detectCmd
 23058 ;;		_getSetupCall
 23059 ;; This function uses a non-reentrant model
 23060 ;;
 23061                           
 23062                           	psect	text106
 23063  006A26                     __ptext106:
 23064                           	opt stack 0
 23065  006A26                     _Mdm_HangPhoneCall:
 23066                           	opt stack 11
 23067                           
 23068                           ;mdm_gsm_gprs.c: 999: Uart_WriteConstString(1, "ATH\r");
 23069                           
 23070                           ; BSR set to: 0
 23071                           ;incstack = 0
 23072  006A26  0EF0               	movlw	low STR_6
 23073  006A28  0100               	movlb	0	; () banked
 23074  006A2A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 23075  006A2C  0EFF               	movlw	high STR_6
 23076  006A2E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 23077  006A30  0E01               	movlw	1
 23078  006A32  EC8E  F030         	call	_Uart_WriteConstString
 23079  006A36  0012               	return		;funcret
 23080  006A38                     __end_of_Mdm_HangPhoneCall:
 23081                           	opt stack 0
 23082                           tosu	equ	0xFFF
 23083                           tosh	equ	0xFFE
 23084                           tosl	equ	0xFFD
 23085                           pclath	equ	0xFFA
 23086                           tblptru	equ	0xFF8
 23087                           tblptrh	equ	0xFF7
 23088                           tblptrl	equ	0xFF6
 23089                           tablat	equ	0xFF5
 23090                           prodh	equ	0xFF4
 23091                           prodl	equ	0xFF3
 23092                           intcon	equ	0xFF2
 23093                           intcon2	equ	0xFF1
 23094                           intcon3	equ	0xFF0
 23095                           indf0	equ	0xFEF
 23096                           postinc0	equ	0xFEE
 23097                           plusw0	equ	0xFEB
 23098                           fsr0h	equ	0xFEA
 23099                           fsr0l	equ	0xFE9
 23100                           wreg	equ	0xFE8
 23101                           indf1	equ	0xFE7
 23102                           postinc1	equ	0xFE6
 23103                           postdec1	equ	0xFE5
 23104                           fsr1h	equ	0xFE2
 23105                           fsr1l	equ	0xFE1
 23106                           indf2	equ	0xFDF
 23107                           postinc2	equ	0xFDE
 23108                           postdec2	equ	0xFDD
 23109                           plusw2	equ	0xFDB
 23110                           fsr2h	equ	0xFDA
 23111                           fsr2l	equ	0xFD9
 23112                           status	equ	0xFD8
 23113                           
 23114 ;; *************** function _Mdm_GetSmsData *****************
 23115 ;; Defined at:
 23116 ;;		line 892 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23117 ;; Parameters:    Size  Location     Type
 23118 ;;  MessageText     2   47[BANK0 ] PTR unsigned char 
 23119 ;;		 -> smsText(20), 
 23120 ;; Auto vars:     Size  Location     Type
 23121 ;;  GetSmsStatus    1   49[BANK0 ] enum E8922
 23122 ;; Return value:  Size  Location     Type
 23123 ;;                  1    wreg      enum E8922
 23124 ;; Registers used:
 23125 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23126 ;; Tracked objects:
 23127 ;;		On entry : 0/0
 23128 ;;		On exit  : 0/0
 23129 ;;		Unchanged: 0/0
 23130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23134 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23135 ;;Total ram usage:        3 bytes
 23136 ;; Hardware stack levels used:    1
 23137 ;; Hardware stack levels required when called:   12
 23138 ;; This function calls:
 23139 ;;		_ReceiveEvt
 23140 ;;		_StringCopy
 23141 ;; This function is called by:
 23142 ;;		_detectCmd
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           
 23146                           	psect	text107
 23147  005608                     __ptext107:
 23148                           	opt stack 0
 23149  005608                     _Mdm_GetSmsData:
 23150                           	opt stack 14
 23151                           
 23152                           ;mdm_gsm_gprs.c: 894: GetSmsStatusType GetSmsStatus = SmsDataNotReady;
 23153                           
 23154                           ;incstack = 0
 23155  005608  0E00               	movlw	0
 23156  00560A  0100               	movlb	0	; () banked
 23157  00560C  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23158                           
 23159                           ; BSR set to: 0
 23160                           ;mdm_gsm_gprs.c: 897: if (ReceiveEvt(&SmsTxtReady))
 23161  00560E  0EDC               	movlw	low _SmsTxtReady
 23162  005610  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23163  005612  0E00               	movlw	high _SmsTxtReady
 23164  005614  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23165  005616  ECD7  F032         	call	_ReceiveEvt	;wreg free
 23166  00561A  0900               	iorlw	0
 23167  00561C  B4D8               	btfsc	status,2,c
 23168  00561E  D025               	goto	l1129
 23169                           
 23170                           ;mdm_gsm_gprs.c: 898: {
 23171                           ;mdm_gsm_gprs.c: 900: StringCopy(Mdm_SmsRx.MessageBuffer, MessageText, Mdm_SmsRx.TextLen
      +                           + 1);
 23172  005620  0E50               	movlw	low (_Mdm_SmsRx+80)
 23173  005622  0100               	movlb	0	; () banked
 23174  005624  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23175  005626  0E07               	movlw	high (_Mdm_SmsRx+80)
 23176  005628  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23177  00562A  C08F  F087         	movff	Mdm_GetSmsData@MessageText,StringCopy@DestStr
 23178  00562E  C090  F088         	movff	Mdm_GetSmsData@MessageText+1,StringCopy@DestStr+1
 23179  005632  0E01               	movlw	1
 23180  005634  0107               	movlb	7	; () banked
 23181  005636  2565               	addwf	(_Mdm_SmsRx+101)& (0+255),w,b
 23182  005638  0100               	movlb	0	; () banked
 23183  00563A  6F89               	movwf	StringCopy@Len& (0+255),b
 23184  00563C  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 23185  00563E  0E00               	movlw	0
 23186  005640  238A               	addwfc	(StringCopy@Len+1)& (0+255),f,b
 23187  005642  ECD1  F02B         	call	_StringCopy	;wreg free
 23188                           
 23189                           ;mdm_gsm_gprs.c: 901: StringCopy(Mdm_SmsRx.HeaderBuffer + 21, callerNumber, ((UINT8)(13)
      +                          ));
 23190  005646  0E15               	movlw	low (_Mdm_SmsRx+21)
 23191  005648  0100               	movlb	0	; () banked
 23192  00564A  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 23193  00564C  0E07               	movlw	high (_Mdm_SmsRx+21)
 23194  00564E  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23195  005650  0E3E               	movlw	low _callerNumber
 23196  005652  6F87               	movwf	StringCopy@DestStr& (0+255),b
 23197  005654  0E03               	movlw	high _callerNumber
 23198  005656  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 23199  005658  0E00               	movlw	0
 23200  00565A  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 23201  00565C  0E0D               	movlw	13
 23202  00565E  6F89               	movwf	StringCopy@Len& (0+255),b
 23203  005660  ECD1  F02B         	call	_StringCopy	;wreg free
 23204                           
 23205                           ;mdm_gsm_gprs.c: 903: GetSmsStatus = SmsDataReady;
 23206  005664  0E01               	movlw	1
 23207  005666  0100               	movlb	0	; () banked
 23208  005668  6F91               	movwf	Mdm_GetSmsData@GetSmsStatus& (0+255),b
 23209  00566A                     l1129:
 23210                           
 23211                           ;mdm_gsm_gprs.c: 904: }
 23212                           ;mdm_gsm_gprs.c: 907: return GetSmsStatus;
 23213                           
 23214                           ; BSR set to: 0
 23215  00566A  0100               	movlb	0	; () banked
 23216  00566C  5191               	movf	Mdm_GetSmsData@GetSmsStatus& (0+255),w,b
 23217  00566E  0012               	return	
 23218  005670                     __end_of_Mdm_GetSmsData:
 23219                           	opt stack 0
 23220                           tosu	equ	0xFFF
 23221                           tosh	equ	0xFFE
 23222                           tosl	equ	0xFFD
 23223                           pclath	equ	0xFFA
 23224                           tblptru	equ	0xFF8
 23225                           tblptrh	equ	0xFF7
 23226                           tblptrl	equ	0xFF6
 23227                           tablat	equ	0xFF5
 23228                           prodh	equ	0xFF4
 23229                           prodl	equ	0xFF3
 23230                           intcon	equ	0xFF2
 23231                           intcon2	equ	0xFF1
 23232                           intcon3	equ	0xFF0
 23233                           indf0	equ	0xFEF
 23234                           postinc0	equ	0xFEE
 23235                           plusw0	equ	0xFEB
 23236                           fsr0h	equ	0xFEA
 23237                           fsr0l	equ	0xFE9
 23238                           wreg	equ	0xFE8
 23239                           indf1	equ	0xFE7
 23240                           postinc1	equ	0xFE6
 23241                           postdec1	equ	0xFE5
 23242                           fsr1h	equ	0xFE2
 23243                           fsr1l	equ	0xFE1
 23244                           indf2	equ	0xFDF
 23245                           postinc2	equ	0xFDE
 23246                           postdec2	equ	0xFDD
 23247                           plusw2	equ	0xFDB
 23248                           fsr2h	equ	0xFDA
 23249                           fsr2l	equ	0xFD9
 23250                           status	equ	0xFD8
 23251                           
 23252 ;; *************** function _GetLastInteractionNumber *****************
 23253 ;; Defined at:
 23254 ;;		line 1046 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23255 ;; Parameters:    Size  Location     Type
 23256 ;;		None
 23257 ;; Auto vars:     Size  Location     Type
 23258 ;;		None
 23259 ;; Return value:  Size  Location     Type
 23260 ;;                  2   29[BANK0 ] PTR unsigned char 
 23261 ;; Registers used:
 23262 ;;		wreg, status,2, status,0
 23263 ;; Tracked objects:
 23264 ;;		On entry : 0/0
 23265 ;;		On exit  : 0/0
 23266 ;;		Unchanged: 0/0
 23267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23268 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23272 ;;Total ram usage:        2 bytes
 23273 ;; Hardware stack levels used:    1
 23274 ;; Hardware stack levels required when called:   11
 23275 ;; This function calls:
 23276 ;;		Nothing
 23277 ;; This function is called by:
 23278 ;;		_detectCmd
 23279 ;; This function uses a non-reentrant model
 23280 ;;
 23281                           
 23282                           	psect	text108
 23283  006AC2                     __ptext108:
 23284                           	opt stack 0
 23285  006AC2                     _GetLastInteractionNumber:
 23286                           	opt stack 15
 23287                           
 23288                           ;mdm_gsm_gprs.c: 1048: return callerNumber;
 23289                           
 23290                           ; BSR set to: 0
 23291                           ;incstack = 0
 23292  006AC2  0E3E               	movlw	low _callerNumber
 23293  006AC4  0100               	movlb	0	; () banked
 23294  006AC6  6F7D               	movwf	?_GetLastInteractionNumber& (0+255),b
 23295  006AC8  0E03               	movlw	high _callerNumber
 23296  006ACA  6F7E               	movwf	(?_GetLastInteractionNumber+1)& (0+255),b
 23297  006ACC  0012               	return	
 23298  006ACE                     __end_of_GetLastInteractionNumber:
 23299                           	opt stack 0
 23300                           tosu	equ	0xFFF
 23301                           tosh	equ	0xFFE
 23302                           tosl	equ	0xFFD
 23303                           pclath	equ	0xFFA
 23304                           tblptru	equ	0xFF8
 23305                           tblptrh	equ	0xFF7
 23306                           tblptrl	equ	0xFF6
 23307                           tablat	equ	0xFF5
 23308                           prodh	equ	0xFF4
 23309                           prodl	equ	0xFF3
 23310                           intcon	equ	0xFF2
 23311                           intcon2	equ	0xFF1
 23312                           intcon3	equ	0xFF0
 23313                           indf0	equ	0xFEF
 23314                           postinc0	equ	0xFEE
 23315                           plusw0	equ	0xFEB
 23316                           fsr0h	equ	0xFEA
 23317                           fsr0l	equ	0xFE9
 23318                           wreg	equ	0xFE8
 23319                           indf1	equ	0xFE7
 23320                           postinc1	equ	0xFE6
 23321                           postdec1	equ	0xFE5
 23322                           fsr1h	equ	0xFE2
 23323                           fsr1l	equ	0xFE1
 23324                           indf2	equ	0xFDF
 23325                           postinc2	equ	0xFDE
 23326                           postdec2	equ	0xFDD
 23327                           plusw2	equ	0xFDB
 23328                           fsr2h	equ	0xFDA
 23329                           fsr2l	equ	0xFD9
 23330                           status	equ	0xFD8
 23331                           
 23332 ;; *************** function _GetCallerNumber *****************
 23333 ;; Defined at:
 23334 ;;		line 1037 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 23335 ;; Parameters:    Size  Location     Type
 23336 ;;		None
 23337 ;; Auto vars:     Size  Location     Type
 23338 ;;		None
 23339 ;; Return value:  Size  Location     Type
 23340 ;;                  2   35[BANK0 ] PTR unsigned char 
 23341 ;; Registers used:
 23342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23343 ;; Tracked objects:
 23344 ;;		On entry : 0/0
 23345 ;;		On exit  : 0/0
 23346 ;;		Unchanged: 0/0
 23347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23351 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23352 ;;Total ram usage:        2 bytes
 23353 ;; Hardware stack levels used:    1
 23354 ;; Hardware stack levels required when called:   12
 23355 ;; This function calls:
 23356 ;;		_ClearBuffer
 23357 ;;		_ReceiveEvt
 23358 ;; This function is called by:
 23359 ;;		_detectCmd
 23360 ;;		_initFsm
 23361 ;; This function uses a non-reentrant model
 23362 ;;
 23363                           
 23364                           	psect	text109
 23365  0063BC                     __ptext109:
 23366                           	opt stack 0
 23367  0063BC                     _GetCallerNumber:
 23368                           	opt stack 14
 23369                           
 23370                           ;mdm_gsm_gprs.c: 1039: if (!ReceiveEvt(&ClipEvent))
 23371                           
 23372                           ; BSR set to: 0
 23373                           ;incstack = 0
 23374  0063BC  0EDF               	movlw	low _ClipEvent
 23375  0063BE  0100               	movlb	0	; () banked
 23376  0063C0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 23377  0063C2  0E00               	movlw	high _ClipEvent
 23378  0063C4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23379  0063C6  ECD7  F032         	call	_ReceiveEvt	;wreg free
 23380  0063CA  0900               	iorlw	0
 23381  0063CC  A4D8               	btfss	status,2,c
 23382  0063CE  D00B               	goto	l1156
 23383                           
 23384                           ;mdm_gsm_gprs.c: 1040: {
 23385                           ;mdm_gsm_gprs.c: 1041: ClearBuffer(callerNumber, ((UINT8)(13)));
 23386  0063D0  0E3E               	movlw	low _callerNumber
 23387  0063D2  0100               	movlb	0	; () banked
 23388  0063D4  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 23389  0063D6  0E03               	movlw	high _callerNumber
 23390  0063D8  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 23391  0063DA  0E00               	movlw	0
 23392  0063DC  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 23393  0063DE  0E0D               	movlw	13
 23394  0063E0  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 23395  0063E2  ECF9  F031         	call	_ClearBuffer	;wreg free
 23396  0063E6                     l1156:
 23397                           
 23398                           ;mdm_gsm_gprs.c: 1042: }
 23399                           ;mdm_gsm_gprs.c: 1043: return callerNumber;
 23400  0063E6  0E3E               	movlw	low _callerNumber
 23401  0063E8  0100               	movlb	0	; () banked
 23402  0063EA  6F83               	movwf	?_GetCallerNumber& (0+255),b
 23403  0063EC  0E03               	movlw	high _callerNumber
 23404  0063EE  6F84               	movwf	(?_GetCallerNumber+1)& (0+255),b
 23405  0063F0  0012               	return	
 23406  0063F2                     __end_of_GetCallerNumber:
 23407                           	opt stack 0
 23408                           tosu	equ	0xFFF
 23409                           tosh	equ	0xFFE
 23410                           tosl	equ	0xFFD
 23411                           pclath	equ	0xFFA
 23412                           tblptru	equ	0xFF8
 23413                           tblptrh	equ	0xFF7
 23414                           tblptrl	equ	0xFF6
 23415                           tablat	equ	0xFF5
 23416                           prodh	equ	0xFF4
 23417                           prodl	equ	0xFF3
 23418                           intcon	equ	0xFF2
 23419                           intcon2	equ	0xFF1
 23420                           intcon3	equ	0xFF0
 23421                           indf0	equ	0xFEF
 23422                           postinc0	equ	0xFEE
 23423                           plusw0	equ	0xFEB
 23424                           fsr0h	equ	0xFEA
 23425                           fsr0l	equ	0xFE9
 23426                           wreg	equ	0xFE8
 23427                           indf1	equ	0xFE7
 23428                           postinc1	equ	0xFE6
 23429                           postdec1	equ	0xFE5
 23430                           fsr1h	equ	0xFE2
 23431                           fsr1l	equ	0xFE1
 23432                           indf2	equ	0xFDF
 23433                           postinc2	equ	0xFDE
 23434                           postdec2	equ	0xFDD
 23435                           plusw2	equ	0xFDB
 23436                           fsr2h	equ	0xFDA
 23437                           fsr2l	equ	0xFD9
 23438                           status	equ	0xFD8
 23439                           
 23440 ;; *************** function _delCmdFsm *****************
 23441 ;; Defined at:
 23442 ;;		line 71 in file "../Source/c/04_App/app_delCmd.c"
 23443 ;; Parameters:    Size  Location     Type
 23444 ;;  receivedNumb    2   16[BANK1 ] PTR unsigned char 
 23445 ;;		 -> receivedNumber(13), 
 23446 ;;  smsText         2   18[BANK1 ] PTR unsigned char 
 23447 ;;		 -> smsText(20), 
 23448 ;; Auto vars:     Size  Location     Type
 23449 ;;  emptyNumber    13   20[BANK1 ] const unsigned char [13]
 23450 ;;  numberInMemo    1   34[BANK1 ] unsigned char 
 23451 ;;  isComplete      1   33[BANK1 ] unsigned char 
 23452 ;; Return value:  Size  Location     Type
 23453 ;;                  1    wreg      unsigned char 
 23454 ;; Registers used:
 23455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23456 ;; Tracked objects:
 23457 ;;		On entry : 0/0
 23458 ;;		On exit  : 0/0
 23459 ;;		Unchanged: 0/0
 23460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23461 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23462 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23464 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23465 ;;Total ram usage:       19 bytes
 23466 ;; Hardware stack levels used:    1
 23467 ;; Hardware stack levels required when called:   18
 23468 ;; This function calls:
 23469 ;;		_isMasterNumber
 23470 ;;		_saveNumberInMemory
 23471 ;; This function is called by:
 23472 ;;		_MyApp_Task
 23473 ;; This function uses a non-reentrant model
 23474 ;;
 23475                           
 23476                           	psect	text110
 23477  004E24                     __ptext110:
 23478                           	opt stack 0
 23479  004E24                     _delCmdFsm:
 23480                           	opt stack 9
 23481                           
 23482                           ;app_delCmd.c: 73: const uint8_t emptyNumber[((UINT8)(13))] = {0};
 23483                           
 23484                           ; BSR set to: 0
 23485                           ;incstack = 0
 23486  004E24  0E0F               	movlw	low delCmdFsm@F9013
 23487  004E26  6EF6               	movwf	tblptrl,c
 23488  004E28                     	if	1	;There is more than 1 active tblptr byte
 23489  004E28  0EFC               	movlw	high delCmdFsm@F9013
 23490  004E2A  6EF7               	movwf	tblptrh,c
 23491  004E2C                     	endif
 23492  004E2C                     	if	0	;There are less than 3 active tblptr bytes
 23493  004E2C                     	endif
 23494  004E2C  EE21  F014         	lfsr	2,delCmdFsm@emptyNumber
 23495  004E30  0E0C               	movlw	12
 23496  004E32                     u16020:
 23497  004E32  0009               	tblrd		*+
 23498  004E34  CFF5 FFDE          	movff	tablat,postinc2
 23499  004E38  06E8               	decf	wreg,f,c
 23500  004E3A  E2FB               	bc	u16020
 23501                           
 23502                           ;app_delCmd.c: 74: static delFsmStates currentState = DEL_FSM_CHECK_MASTER;
 23503                           ;app_delCmd.c: 75: bool isComplete = 0;
 23504  004E3C  0E00               	movlw	0
 23505  004E3E  0101               	movlb	1	; () banked
 23506  004E40  6F21               	movwf	delCmdFsm@isComplete& (0+255),b
 23507                           
 23508                           ; BSR set to: 1
 23509                           ;app_delCmd.c: 76: uint8_t numberInMemory = 1;
 23510  004E42  0E01               	movlw	1
 23511  004E44  6F22               	movwf	delCmdFsm@numberInMemory& (0+255),b
 23512                           
 23513                           ;app_delCmd.c: 78: switch (currentState)
 23514  004E46  D02B               	goto	l2849
 23515  004E48                     
 23516                           ; BSR set to: 1
 23517                           ;app_delCmd.c: 81: if (isMasterNumber(receivedNumber) == OP_SUCCESS)
 23518                           
 23519                           ; BSR set to: 1
 23520  004E48  C110  F100         	movff	delCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23521  004E4C  C111  F101         	movff	delCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23522  004E50  EC2B  F02A         	call	_isMasterNumber	;wreg free
 23523  004E54  0900               	iorlw	0
 23524  004E56  A4D8               	btfss	status,2,c
 23525  004E58  D01B               	goto	l16337
 23526                           
 23527                           ;app_delCmd.c: 82: {
 23528                           ;app_delCmd.c: 83: currentState = DEL_FSM_REMOVE_NUMBER;
 23529  004E5A  0E01               	movlw	1
 23530  004E5C                     L41:
 23531  004E5C  0101               	movlb	1	; () banked
 23532  004E5E  D01D               	goto	L44
 23533  004E60                     
 23534                           ; BSR set to: 1
 23535                           ;app_delCmd.c: 93: if (numberInMemory == 1)
 23536                           
 23537                           ; BSR set to: 1
 23538  004E60  0522               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23539  004E62  A4D8               	btfss	status,2,c
 23540  004E64  D002               	goto	l2855
 23541                           
 23542                           ; BSR set to: 1
 23543                           ;app_delCmd.c: 94: {
 23544                           ;app_delCmd.c: 95: currentState = DEL_FSM_COMPLETE;
 23545  004E66  0E02               	movlw	2
 23546  004E68  D018               	goto	L44
 23547  004E6A                     l2855:
 23548                           
 23549                           ; BSR set to: 1
 23550                           ;app_delCmd.c: 97: else if (numberInMemory != 0 && numberInMemory != 1 && numberInMemory
      +                           != 32)
 23551                           
 23552                           ; BSR set to: 1
 23553  004E6A  5122               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23554  004E6C  B4D8               	btfsc	status,2,c
 23555  004E6E  D021               	goto	l2853
 23556                           
 23557                           ; BSR set to: 1
 23558  004E70  0522               	decf	delCmdFsm@numberInMemory& (0+255),w,b
 23559  004E72  B4D8               	btfsc	status,2,c
 23560  004E74  D01E               	goto	l2853
 23561                           
 23562                           ; BSR set to: 1
 23563  004E76  0E20               	movlw	32
 23564  004E78  1922               	xorwf	delCmdFsm@numberInMemory& (0+255),w,b
 23565  004E7A  B4D8               	btfsc	status,2,c
 23566  004E7C  D01A               	goto	l2853
 23567                           
 23568                           ; BSR set to: 1
 23569                           ;app_delCmd.c: 98: {
 23570                           ;app_delCmd.c: 99: saveNumberInMemory(numberInMemory, emptyNumber);
 23571  004E7E  0E14               	movlw	low delCmdFsm@emptyNumber
 23572  004E80  0100               	movlb	0	; () banked
 23573  004E82  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23574  004E84  0E01               	movlw	high delCmdFsm@emptyNumber
 23575  004E86  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23576  004E88  0101               	movlb	1	; () banked
 23577  004E8A  5122               	movf	delCmdFsm@numberInMemory& (0+255),w,b
 23578  004E8C  ECA3  F034         	call	_saveNumberInMemory
 23579  004E90                     l16337:
 23580                           
 23581                           ;app_delCmd.c: 100: currentState = DEL_FSM_COMPLETE;
 23582  004E90  0E02               	movlw	2
 23583  004E92  D7E4               	goto	L41
 23584  004E94                     
 23585                           ; BSR set to: 1
 23586                           ;app_delCmd.c: 105: isComplete = 1;
 23587                           
 23588                           ; BSR set to: 1
 23589  004E94  0E01               	movlw	1
 23590  004E96  6F21               	movwf	delCmdFsm@isComplete& (0+255),b
 23591                           
 23592                           ;app_delCmd.c: 106: currentState = DEL_FSM_CHECK_MASTER;
 23593  004E98  0E00               	movlw	0
 23594  004E9A                     L44:
 23595  004E9A  6FD4               	movwf	delCmdFsm@currentState& (0+255),b
 23596                           
 23597                           ; BSR set to: 1
 23598                           ;app_delCmd.c: 111: }
 23599                           
 23600                           ; BSR set to: 1
 23601                           ;app_delCmd.c: 110: break;
 23602                           
 23603                           ;app_delCmd.c: 109: default:
 23604                           
 23605                           ;app_delCmd.c: 107: break;
 23606  004E9C  D00A               	goto	l2853
 23607  004E9E                     l2849:
 23608                           
 23609                           ; BSR set to: 1
 23610                           
 23611                           ; BSR set to: 1
 23612  004E9E  51D4               	movf	delCmdFsm@currentState& (0+255),w,b
 23613                           
 23614                           ; Switch size 1, requested type "space"
 23615                           ; Number of cases is 3, Range of values is 0 to 2
 23616                           ; switch strategies available:
 23617                           ; Name         Instructions Cycles
 23618                           ; simple_byte           10     6 (average)
 23619                           ;	Chosen strategy is simple_byte
 23620  004EA0  0A00               	xorlw	0	; case 0
 23621  004EA2  B4D8               	btfsc	status,2,c
 23622  004EA4  D7D1               	goto	l2850
 23623  004EA6  0A01               	xorlw	1	; case 1
 23624  004EA8  B4D8               	btfsc	status,2,c
 23625  004EAA  D7DA               	goto	l2854
 23626  004EAC  0A03               	xorlw	3	; case 2
 23627  004EAE  B4D8               	btfsc	status,2,c
 23628  004EB0  D7F1               	goto	l2858
 23629  004EB2                     l2853:
 23630                           
 23631                           ; BSR set to: 1
 23632                           ;app_delCmd.c: 112: return isComplete;
 23633                           
 23634                           ; BSR set to: 1
 23635  004EB2  5121               	movf	delCmdFsm@isComplete& (0+255),w,b
 23636  004EB4  0012               	return	
 23637  004EB6                     __end_of_delCmdFsm:
 23638                           	opt stack 0
 23639                           tosu	equ	0xFFF
 23640                           tosh	equ	0xFFE
 23641                           tosl	equ	0xFFD
 23642                           pclath	equ	0xFFA
 23643                           tblptru	equ	0xFF8
 23644                           tblptrh	equ	0xFF7
 23645                           tblptrl	equ	0xFF6
 23646                           tablat	equ	0xFF5
 23647                           prodh	equ	0xFF4
 23648                           prodl	equ	0xFF3
 23649                           intcon	equ	0xFF2
 23650                           intcon2	equ	0xFF1
 23651                           intcon3	equ	0xFF0
 23652                           indf0	equ	0xFEF
 23653                           postinc0	equ	0xFEE
 23654                           plusw0	equ	0xFEB
 23655                           fsr0h	equ	0xFEA
 23656                           fsr0l	equ	0xFE9
 23657                           wreg	equ	0xFE8
 23658                           indf1	equ	0xFE7
 23659                           postinc1	equ	0xFE6
 23660                           postdec1	equ	0xFE5
 23661                           fsr1h	equ	0xFE2
 23662                           fsr1l	equ	0xFE1
 23663                           indf2	equ	0xFDF
 23664                           postinc2	equ	0xFDE
 23665                           postdec2	equ	0xFDD
 23666                           plusw2	equ	0xFDB
 23667                           fsr2h	equ	0xFDA
 23668                           fsr2l	equ	0xFD9
 23669                           status	equ	0xFD8
 23670                           
 23671 ;; *************** function _addCmdFsm *****************
 23672 ;; Defined at:
 23673 ;;		line 72 in file "../Source/c/04_App/app_addCmd.c"
 23674 ;; Parameters:    Size  Location     Type
 23675 ;;  receivedNumb    2   18[BANK1 ] PTR unsigned char 
 23676 ;;		 -> receivedNumber(13), 
 23677 ;;  smsText         2   20[BANK1 ] PTR unsigned char 
 23678 ;;		 -> smsText(20), 
 23679 ;; Auto vars:     Size  Location     Type
 23680 ;;  searchNumber    1   25[BANK1 ] unsigned char 
 23681 ;;  numberInMemo    1   24[BANK1 ] unsigned char 
 23682 ;;  masterOpResu    1   23[BANK1 ] unsigned char 
 23683 ;;  isComplete      1   22[BANK1 ] unsigned char 
 23684 ;; Return value:  Size  Location     Type
 23685 ;;                  1    wreg      unsigned char 
 23686 ;; Registers used:
 23687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23688 ;; Tracked objects:
 23689 ;;		On entry : 0/0
 23690 ;;		On exit  : 0/0
 23691 ;;		Unchanged: 0/0
 23692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23693 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23694 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23696 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23697 ;;Total ram usage:        8 bytes
 23698 ;; Hardware stack levels used:    1
 23699 ;; Hardware stack levels required when called:   18
 23700 ;; This function calls:
 23701 ;;		_findEmptySpot
 23702 ;;		_isMasterNumber
 23703 ;;		_isNumberInMemory
 23704 ;;		_saveNumberInMemory
 23705 ;; This function is called by:
 23706 ;;		_MyApp_Task
 23707 ;; This function uses a non-reentrant model
 23708 ;;
 23709                           
 23710                           	psect	text111
 23711  0036C2                     __ptext111:
 23712                           	opt stack 0
 23713  0036C2                     _addCmdFsm:
 23714                           	opt stack 9
 23715                           
 23716                           ;app_addCmd.c: 74: static addFsmStates currentState = ADD_FSM_CHECK_MASTER;
 23717                           ;app_addCmd.c: 75: bool isComplete = 0;
 23718                           
 23719                           ; BSR set to: 1
 23720                           ;incstack = 0
 23721  0036C2  0E00               	movlw	0
 23722  0036C4  0101               	movlb	1	; () banked
 23723  0036C6  6F16               	movwf	addCmdFsm@isComplete& (0+255),b
 23724                           
 23725                           ;app_addCmd.c: 76: uint8_t numberInMemory = 0;
 23726  0036C8  0E00               	movlw	0
 23727  0036CA  6F18               	movwf	addCmdFsm@numberInMemory& (0+255),b
 23728                           
 23729                           ;app_addCmd.c: 77: uint8_t masterOpResult = OP_FAILED;
 23730  0036CC  0E01               	movlw	1
 23731  0036CE  6F17               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23732                           
 23733                           ;app_addCmd.c: 78: uint8_t searchNumber = OP_FAILED;
 23734  0036D0  0E01               	movlw	1
 23735  0036D2  6F19               	movwf	addCmdFsm@searchNumber& (0+255),b
 23736                           
 23737                           ;app_addCmd.c: 80: switch (currentState)
 23738  0036D4  D059               	goto	l2812
 23739  0036D6                     
 23740                           ; BSR set to: 1
 23741                           ;app_addCmd.c: 83: masterOpResult = isMasterNumber(receivedNumber);
 23742                           
 23743                           ; BSR set to: 1
 23744  0036D6  C112  F100         	movff	addCmdFsm@receivedNumber,isMasterNumber@phoneNumber
 23745  0036DA  C113  F101         	movff	addCmdFsm@receivedNumber+1,isMasterNumber@phoneNumber+1
 23746  0036DE  EC2B  F02A         	call	_isMasterNumber	;wreg free
 23747  0036E2  0101               	movlb	1	; () banked
 23748  0036E4  6F17               	movwf	addCmdFsm@masterOpResult& (0+255),b
 23749                           
 23750                           ; BSR set to: 1
 23751                           ;app_addCmd.c: 84: if (masterOpResult == OP_SUCCESS)
 23752  0036E6  5117               	movf	addCmdFsm@masterOpResult& (0+255),w,b
 23753  0036E8  A4D8               	btfss	status,2,c
 23754  0036EA  D002               	goto	l2814
 23755                           
 23756                           ; BSR set to: 1
 23757                           ;app_addCmd.c: 85: {
 23758                           ;app_addCmd.c: 86: currentState = ADD_FSM_CHECK_DUPLICATED;
 23759  0036EC  0E01               	movlw	1
 23760  0036EE  D045               	goto	L48
 23761  0036F0                     l2814:
 23762                           
 23763                           ; BSR set to: 1
 23764                           ;app_addCmd.c: 88: else if (masterOpResult == OP_FAILED)
 23765                           
 23766                           ; BSR set to: 1
 23767  0036F0  0517               	decf	addCmdFsm@masterOpResult& (0+255),w,b
 23768  0036F2  D040               	goto	L100
 23769  0036F4                     
 23770                           ; BSR set to: 1
 23771                           ;app_addCmd.c: 95: searchNumber = isNumberInMemory(smsText + 4, &numberInMemory);
 23772                           
 23773                           ; BSR set to: 1
 23774  0036F4  0E04               	movlw	4
 23775  0036F6  2514               	addwf	addCmdFsm@smsText& (0+255),w,b
 23776  0036F8  6F00               	movwf	isNumberInMemory@phoneNumber& (0+255),b
 23777  0036FA  0E00               	movlw	0
 23778  0036FC  2115               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23779  0036FE  6F01               	movwf	(isNumberInMemory@phoneNumber+1)& (0+255),b
 23780  003700  0E18               	movlw	low addCmdFsm@numberInMemory
 23781  003702  6F02               	movwf	isNumberInMemory@positionInMemory& (0+255),b
 23782  003704  0E01               	movlw	high addCmdFsm@numberInMemory
 23783  003706  6F03               	movwf	(isNumberInMemory@positionInMemory+1)& (0+255),b
 23784  003708  EC15  F022         	call	_isNumberInMemory	;wreg free
 23785  00370C  0101               	movlb	1	; () banked
 23786  00370E  6F19               	movwf	addCmdFsm@searchNumber& (0+255),b
 23787                           
 23788                           ; BSR set to: 1
 23789                           ;app_addCmd.c: 96: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23790  003710  0E04               	movlw	4
 23791  003712  1919               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23792  003714  A4D8               	btfss	status,2,c
 23793  003716  D002               	goto	l2819
 23794                           
 23795                           ; BSR set to: 1
 23796                           ;app_addCmd.c: 97: {
 23797                           ;app_addCmd.c: 98: currentState = ADD_FSM_SAVE_NEW;
 23798  003718  0E02               	movlw	2
 23799  00371A  D009               	goto	L47
 23800  00371C                     l2819:
 23801                           
 23802                           ; BSR set to: 1
 23803                           ;app_addCmd.c: 100: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 23804                           
 23805                           ; BSR set to: 1
 23806  00371C  0E03               	movlw	3
 23807  00371E  1919               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23808  003720  B4D8               	btfsc	status,2,c
 23809  003722  D004               	goto	u15980
 23810                           
 23811                           ; BSR set to: 1
 23812  003724  0E02               	movlw	2
 23813  003726  1919               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23814  003728  A4D8               	btfss	status,2,c
 23815  00372A  D002               	goto	l2821
 23816  00372C                     u15980:
 23817                           
 23818                           ; BSR set to: 1
 23819                           ;app_addCmd.c: 101: {
 23820                           ;app_addCmd.c: 102: currentState = ADD_FSM_COMPLETE;
 23821                           
 23822                           ; BSR set to: 1
 23823  00372C  0E03               	movlw	3
 23824  00372E                     L47:
 23825  00372E  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23826  003730                     l2821:
 23827                           
 23828                           ; BSR set to: 1
 23829                           ;app_addCmd.c: 106: searchNumber = findEmptySpot(&numberInMemory);
 23830                           
 23831                           ; BSR set to: 1
 23832                           
 23833                           ;app_addCmd.c: 103: }
 23834                           ;app_addCmd.c: 105: case ADD_FSM_SAVE_NEW:
 23835                           
 23836                           ; BSR set to: 1
 23837                           
 23838                           ; BSR set to: 1
 23839  003730  0E18               	movlw	low addCmdFsm@numberInMemory
 23840  003732  6F00               	movwf	findEmptySpot@positionInMemory& (0+255),b
 23841  003734  0E01               	movlw	high addCmdFsm@numberInMemory
 23842  003736  6F01               	movwf	(findEmptySpot@positionInMemory+1)& (0+255),b
 23843  003738  EC76  F028         	call	_findEmptySpot	;wreg free
 23844  00373C  0101               	movlb	1	; () banked
 23845  00373E  6F19               	movwf	addCmdFsm@searchNumber& (0+255),b
 23846                           
 23847                           ; BSR set to: 1
 23848                           ;app_addCmd.c: 107: if (searchNumber == SEARCH_FSM_NOT_FOUND)
 23849  003740  0E04               	movlw	4
 23850  003742  1919               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23851  003744  A4D8               	btfss	status,2,c
 23852  003746  D010               	goto	l2825
 23853                           
 23854                           ; BSR set to: 1
 23855                           ;app_addCmd.c: 108: {
 23856                           ;app_addCmd.c: 109: saveNumberInMemory(numberInMemory, smsText + 4);
 23857  003748  0E04               	movlw	4
 23858  00374A  2514               	addwf	addCmdFsm@smsText& (0+255),w,b
 23859  00374C  0100               	movlb	0	; () banked
 23860  00374E  6F96               	movwf	saveNumberInMemory@phoneNumber& (0+255),b
 23861  003750  0E00               	movlw	0
 23862  003752  0101               	movlb	1	; () banked
 23863  003754  2115               	addwfc	(addCmdFsm@smsText+1)& (0+255),w,b
 23864  003756  0100               	movlb	0	; () banked
 23865  003758  6F97               	movwf	(saveNumberInMemory@phoneNumber+1)& (0+255),b
 23866  00375A  0101               	movlb	1	; () banked
 23867  00375C  5118               	movf	addCmdFsm@numberInMemory& (0+255),w,b
 23868  00375E  ECA3  F034         	call	_saveNumberInMemory
 23869                           
 23870                           ;app_addCmd.c: 110: currentState = ADD_FSM_COMPLETE;
 23871  003762  0E03               	movlw	3
 23872  003764  0101               	movlb	1	; () banked
 23873  003766  D009               	goto	L48
 23874  003768                     l2825:
 23875                           
 23876                           ; BSR set to: 1
 23877                           ;app_addCmd.c: 112: else if (searchNumber == SEARCH_FSM_FOUND || searchNumber == SEARCH_
      +                          FSM_ERROR)
 23878                           
 23879                           ; BSR set to: 1
 23880  003768  0E03               	movlw	3
 23881  00376A  1919               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23882  00376C  B4D8               	btfsc	status,2,c
 23883  00376E  D004               	goto	u16010
 23884                           
 23885                           ; BSR set to: 1
 23886  003770  0E02               	movlw	2
 23887  003772  1919               	xorwf	addCmdFsm@searchNumber& (0+255),w,b
 23888  003774                     L100:
 23889  003774  A4D8               	btfss	status,2,c
 23890  003776  D015               	goto	l2817
 23891  003778                     u16010:
 23892                           
 23893                           ; BSR set to: 1
 23894                           ;app_addCmd.c: 113: {
 23895                           ;app_addCmd.c: 114: currentState = ADD_FSM_COMPLETE;
 23896                           
 23897                           ; BSR set to: 1
 23898  003778  0E03               	movlw	3
 23899  00377A                     L48:
 23900  00377A  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23901                           
 23902                           ; BSR set to: 1
 23903                           ;app_addCmd.c: 115: }
 23904                           ;app_addCmd.c: 116: break;
 23905                           
 23906                           ; BSR set to: 1
 23907  00377C  D012               	goto	l2817
 23908  00377E                     
 23909                           ; BSR set to: 1
 23910                           ;app_addCmd.c: 119: currentState = ADD_FSM_CHECK_MASTER;
 23911                           
 23912                           ; BSR set to: 1
 23913  00377E  0E00               	movlw	0
 23914  003780  6FD5               	movwf	addCmdFsm@currentState& (0+255),b
 23915                           
 23916                           ;app_addCmd.c: 120: isComplete = 1;
 23917  003782  0E01               	movlw	1
 23918  003784  6F16               	movwf	addCmdFsm@isComplete& (0+255),b
 23919                           
 23920                           ; BSR set to: 1
 23921                           ;app_addCmd.c: 125: }
 23922                           
 23923                           ; BSR set to: 1
 23924                           ;app_addCmd.c: 124: break;
 23925                           
 23926                           ;app_addCmd.c: 123: default:
 23927                           
 23928                           ;app_addCmd.c: 121: break;
 23929  003786  D00D               	goto	l2817
 23930  003788                     l2812:
 23931                           
 23932                           ; BSR set to: 1
 23933                           
 23934                           ; BSR set to: 1
 23935  003788  51D5               	movf	addCmdFsm@currentState& (0+255),w,b
 23936                           
 23937                           ; Switch size 1, requested type "space"
 23938                           ; Number of cases is 4, Range of values is 0 to 3
 23939                           ; switch strategies available:
 23940                           ; Name         Instructions Cycles
 23941                           ; simple_byte           13     7 (average)
 23942                           ;	Chosen strategy is simple_byte
 23943  00378A  0A00               	xorlw	0	; case 0
 23944  00378C  B4D8               	btfsc	status,2,c
 23945  00378E  D7A3               	goto	l2813
 23946  003790  0A01               	xorlw	1	; case 1
 23947  003792  B4D8               	btfsc	status,2,c
 23948  003794  D7AF               	goto	l2818
 23949  003796  0A03               	xorlw	3	; case 2
 23950  003798  B4D8               	btfsc	status,2,c
 23951  00379A  D7CA               	goto	l2821
 23952  00379C  0A01               	xorlw	1	; case 3
 23953  00379E  B4D8               	btfsc	status,2,c
 23954  0037A0  D7EE               	goto	l2830
 23955  0037A2                     l2817:
 23956                           
 23957                           ; BSR set to: 1
 23958                           ;app_addCmd.c: 126: return isComplete;
 23959                           
 23960                           ; BSR set to: 1
 23961  0037A2  5116               	movf	addCmdFsm@isComplete& (0+255),w,b
 23962  0037A4  0012               	return	
 23963  0037A6                     __end_of_addCmdFsm:
 23964                           	opt stack 0
 23965                           tosu	equ	0xFFF
 23966                           tosh	equ	0xFFE
 23967                           tosl	equ	0xFFD
 23968                           pclath	equ	0xFFA
 23969                           tblptru	equ	0xFF8
 23970                           tblptrh	equ	0xFF7
 23971                           tblptrl	equ	0xFF6
 23972                           tablat	equ	0xFF5
 23973                           prodh	equ	0xFF4
 23974                           prodl	equ	0xFF3
 23975                           intcon	equ	0xFF2
 23976                           intcon2	equ	0xFF1
 23977                           intcon3	equ	0xFF0
 23978                           indf0	equ	0xFEF
 23979                           postinc0	equ	0xFEE
 23980                           plusw0	equ	0xFEB
 23981                           fsr0h	equ	0xFEA
 23982                           fsr0l	equ	0xFE9
 23983                           wreg	equ	0xFE8
 23984                           indf1	equ	0xFE7
 23985                           postinc1	equ	0xFE6
 23986                           postdec1	equ	0xFE5
 23987                           fsr1h	equ	0xFE2
 23988                           fsr1l	equ	0xFE1
 23989                           indf2	equ	0xFDF
 23990                           postinc2	equ	0xFDE
 23991                           postdec2	equ	0xFDD
 23992                           plusw2	equ	0xFDB
 23993                           fsr2h	equ	0xFDA
 23994                           fsr2l	equ	0xFD9
 23995                           status	equ	0xFD8
 23996                           
 23997 ;; *************** function _saveNumberInMemory *****************
 23998 ;; Defined at:
 23999 ;;		line 116 in file "../Source/c/04_App/app_utils.c"
 24000 ;; Parameters:    Size  Location     Type
 24001 ;;  address         1    wreg     unsigned char 
 24002 ;;  phoneNumber     2   54[BANK0 ] PTR unsigned char 
 24003 ;;		 -> delCmdFsm@emptyNumber(13), smsText(20), callerNumber(13), 
 24004 ;; Auto vars:     Size  Location     Type
 24005 ;;  address         1   56[BANK0 ] unsigned char 
 24006 ;; Return value:  Size  Location     Type
 24007 ;;                  1    wreg      void 
 24008 ;; Registers used:
 24009 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24010 ;; Tracked objects:
 24011 ;;		On entry : 0/0
 24012 ;;		On exit  : 0/0
 24013 ;;		Unchanged: 0/0
 24014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24018 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24019 ;;Total ram usage:        3 bytes
 24020 ;; Hardware stack levels used:    1
 24021 ;; Hardware stack levels required when called:   14
 24022 ;; This function calls:
 24023 ;;		_Eeprom_Write
 24024 ;; This function is called by:
 24025 ;;		_initFsm
 24026 ;;		_addCmdFsm
 24027 ;;		_delCmdFsm
 24028 ;; This function uses a non-reentrant model
 24029 ;;
 24030                           
 24031                           	psect	text112
 24032  006946                     __ptext112:
 24033                           	opt stack 0
 24034  006946                     _saveNumberInMemory:
 24035                           	opt stack 12
 24036                           
 24037                           ; BSR set to: 1
 24038                           ;incstack = 0
 24039                           ;saveNumberInMemory@address stored from wreg
 24040  006946  0100               	movlb	0	; () banked
 24041  006948  6F98               	movwf	saveNumberInMemory@address& (0+255),b
 24042                           
 24043                           ;app_utils.c: 118: Eeprom_Write(address, phoneNumber, ((UINT8)(13)));
 24044  00694A  C096  F08F         	movff	saveNumberInMemory@phoneNumber,Eeprom_Write@WriteBuffer
 24045  00694E  C097  F090         	movff	saveNumberInMemory@phoneNumber+1,Eeprom_Write@WriteBuffer+1
 24046  006952  0E0D               	movlw	13
 24047  006954  0100               	movlb	0	; () banked
 24048  006956  6F91               	movwf	Eeprom_Write@DataLength& (0+255),b
 24049  006958  5198               	movf	saveNumberInMemory@address& (0+255),w,b
 24050  00695A  EC10  F02E         	call	_Eeprom_Write
 24051  00695E  0012               	return		;funcret
 24052  006960                     __end_of_saveNumberInMemory:
 24053                           	opt stack 0
 24054                           tosu	equ	0xFFF
 24055                           tosh	equ	0xFFE
 24056                           tosl	equ	0xFFD
 24057                           pclath	equ	0xFFA
 24058                           tblptru	equ	0xFF8
 24059                           tblptrh	equ	0xFF7
 24060                           tblptrl	equ	0xFF6
 24061                           tablat	equ	0xFF5
 24062                           prodh	equ	0xFF4
 24063                           prodl	equ	0xFF3
 24064                           intcon	equ	0xFF2
 24065                           intcon2	equ	0xFF1
 24066                           intcon3	equ	0xFF0
 24067                           indf0	equ	0xFEF
 24068                           postinc0	equ	0xFEE
 24069                           plusw0	equ	0xFEB
 24070                           fsr0h	equ	0xFEA
 24071                           fsr0l	equ	0xFE9
 24072                           wreg	equ	0xFE8
 24073                           indf1	equ	0xFE7
 24074                           postinc1	equ	0xFE6
 24075                           postdec1	equ	0xFE5
 24076                           fsr1h	equ	0xFE2
 24077                           fsr1l	equ	0xFE1
 24078                           indf2	equ	0xFDF
 24079                           postinc2	equ	0xFDE
 24080                           postdec2	equ	0xFDD
 24081                           plusw2	equ	0xFDB
 24082                           fsr2h	equ	0xFDA
 24083                           fsr2l	equ	0xFD9
 24084                           status	equ	0xFD8
 24085                           
 24086 ;; *************** function _Eeprom_Write *****************
 24087 ;; Defined at:
 24088 ;;		line 78 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 24089 ;; Parameters:    Size  Location     Type
 24090 ;;  MemoryAddres    1    wreg     unsigned char 
 24091 ;;  WriteBuffer     2   47[BANK0 ] PTR unsigned char 
 24092 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), callerNumber(13), 
 24093 ;;  DataLength      1   49[BANK0 ] unsigned char 
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;  MemoryAddres    1   51[BANK0 ] unsigned char 
 24096 ;;  CommandLengt    1   53[BANK0 ] const unsigned char 
 24097 ;;  SlaveAddress    1   52[BANK0 ] const unsigned char 
 24098 ;;  WriteSts        1   50[BANK0 ] unsigned char 
 24099 ;; Return value:  Size  Location     Type
 24100 ;;                  1    wreg      unsigned char 
 24101 ;; Registers used:
 24102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24103 ;; Tracked objects:
 24104 ;;		On entry : 0/0
 24105 ;;		On exit  : 0/0
 24106 ;;		Unchanged: 0/0
 24107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24108 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24109 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24111 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24112 ;;Total ram usage:        7 bytes
 24113 ;; Hardware stack levels used:    1
 24114 ;; Hardware stack levels required when called:   13
 24115 ;; This function calls:
 24116 ;;		_I2cSlv_SendI2cMsg
 24117 ;;		_StringCopy
 24118 ;; This function is called by:
 24119 ;;		_savePreamble
 24120 ;;		_saveNumberInMemory
 24121 ;; This function uses a non-reentrant model
 24122 ;;
 24123                           
 24124                           	psect	text113
 24125  005C20                     __ptext113:
 24126                           	opt stack 0
 24127  005C20                     _Eeprom_Write:
 24128                           	opt stack 12
 24129                           
 24130                           ;incstack = 0
 24131                           ;Eeprom_Write@MemoryAddress stored from wreg
 24132  005C20  0100               	movlb	0	; () banked
 24133  005C22  6F93               	movwf	Eeprom_Write@MemoryAddress& (0+255),b
 24134                           
 24135                           ;eeprom_if.c: 80: const UINT8 SlaveAddress = 0x50;
 24136  005C24  0E50               	movlw	80
 24137  005C26  0100               	movlb	0	; () banked
 24138  005C28  6F94               	movwf	Eeprom_Write@SlaveAddress& (0+255),b
 24139                           
 24140                           ; BSR set to: 0
 24141                           ;eeprom_if.c: 81: const UINT8 CommandLength = DataLength + 1;
 24142  005C2A  2991               	incf	Eeprom_Write@DataLength& (0+255),w,b
 24143  005C2C  6F95               	movwf	Eeprom_Write@CommandLength& (0+255),b
 24144                           
 24145                           ; BSR set to: 0
 24146                           ;eeprom_if.c: 82: UINT8 WriteSts = 0u;
 24147  005C2E  0E00               	movlw	0
 24148  005C30  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24149                           
 24150                           ; BSR set to: 0
 24151                           ;eeprom_if.c: 84: if (CommandLength <= 15)
 24152  005C32  0E10               	movlw	16
 24153  005C34  6195               	cpfslt	Eeprom_Write@CommandLength& (0+255),b
 24154  005C36  0012               	return	
 24155                           
 24156                           ; BSR set to: 0
 24157                           ;eeprom_if.c: 85: {
 24158                           ;eeprom_if.c: 86: EepromBuffer[0] = MemoryAddress;
 24159  005C38  C093  F4BB         	movff	Eeprom_Write@MemoryAddress,_EepromBuffer
 24160                           
 24161                           ; BSR set to: 0
 24162                           ;eeprom_if.c: 87: StringCopy(WriteBuffer, EepromBuffer + 1, DataLength);
 24163  005C3C  C08F  F085         	movff	Eeprom_Write@WriteBuffer,StringCopy@SourceStr
 24164  005C40  C090  F086         	movff	Eeprom_Write@WriteBuffer+1,StringCopy@SourceStr+1
 24165  005C44  0EBC               	movlw	low (_EepromBuffer+1)
 24166  005C46  6F87               	movwf	StringCopy@DestStr& (0+255),b
 24167  005C48  0E04               	movlw	high (_EepromBuffer+1)
 24168  005C4A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 24169  005C4C  C091  F089         	movff	Eeprom_Write@DataLength,StringCopy@Len
 24170  005C50  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 24171  005C52  ECD1  F02B         	call	_StringCopy	;wreg free
 24172                           
 24173                           ;eeprom_if.c: 89: WriteSts = I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, CommandLength
      +                          );
 24174  005C56  0EBB               	movlw	low _EepromBuffer
 24175  005C58  0100               	movlb	0	; () banked
 24176  005C5A  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 24177  005C5C  0E04               	movlw	high _EepromBuffer
 24178  005C5E  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 24179  005C60  C094  F082         	movff	Eeprom_Write@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 24180  005C64  C095  F083         	movff	Eeprom_Write@CommandLength,I2cSlv_SendI2cMsg@DataLenght
 24181  005C68  EC0F  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 24182  005C6C  0100               	movlb	0	; () banked
 24183  005C6E  6F92               	movwf	Eeprom_Write@WriteSts& (0+255),b
 24184                           
 24185                           ; BSR set to: 0
 24186  005C70  0012               	return	
 24187  005C72                     __end_of_Eeprom_Write:
 24188                           	opt stack 0
 24189                           tosu	equ	0xFFF
 24190                           tosh	equ	0xFFE
 24191                           tosl	equ	0xFFD
 24192                           pclath	equ	0xFFA
 24193                           tblptru	equ	0xFF8
 24194                           tblptrh	equ	0xFF7
 24195                           tblptrl	equ	0xFF6
 24196                           tablat	equ	0xFF5
 24197                           prodh	equ	0xFF4
 24198                           prodl	equ	0xFF3
 24199                           intcon	equ	0xFF2
 24200                           intcon2	equ	0xFF1
 24201                           intcon3	equ	0xFF0
 24202                           indf0	equ	0xFEF
 24203                           postinc0	equ	0xFEE
 24204                           plusw0	equ	0xFEB
 24205                           fsr0h	equ	0xFEA
 24206                           fsr0l	equ	0xFE9
 24207                           wreg	equ	0xFE8
 24208                           indf1	equ	0xFE7
 24209                           postinc1	equ	0xFE6
 24210                           postdec1	equ	0xFE5
 24211                           fsr1h	equ	0xFE2
 24212                           fsr1l	equ	0xFE1
 24213                           indf2	equ	0xFDF
 24214                           postinc2	equ	0xFDE
 24215                           postdec2	equ	0xFDD
 24216                           plusw2	equ	0xFDB
 24217                           fsr2h	equ	0xFDA
 24218                           fsr2l	equ	0xFD9
 24219                           status	equ	0xFD8
 24220                           
 24221 ;; *************** function _isNumberInMemory *****************
 24222 ;; Defined at:
 24223 ;;		line 143 in file "../Source/c/04_App/app_utils.c"
 24224 ;; Parameters:    Size  Location     Type
 24225 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24226 ;;		 -> smsText(20), 
 24227 ;;  positionInMe    2    2[BANK1 ] PTR unsigned char 
 24228 ;;		 -> addCmdFsm@numberInMemory(1), 
 24229 ;; Auto vars:     Size  Location     Type
 24230 ;;  readBuffer     13    4[BANK1 ] unsigned char [13]
 24231 ;;  memoryOpResu    1   17[BANK1 ] enum E8246
 24232 ;; Return value:  Size  Location     Type
 24233 ;;                  1    wreg      enum E8973
 24234 ;; Registers used:
 24235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24236 ;; Tracked objects:
 24237 ;;		On entry : 0/0
 24238 ;;		On exit  : 0/0
 24239 ;;		Unchanged: 0/0
 24240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24241 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24242 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24244 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24245 ;;Total ram usage:       18 bytes
 24246 ;; Hardware stack levels used:    1
 24247 ;; Hardware stack levels required when called:   17
 24248 ;; This function calls:
 24249 ;;		_Eeprom_Read
 24250 ;;		_StringCompare
 24251 ;;		_isNumberValid
 24252 ;; This function is called by:
 24253 ;;		_addCmdFsm
 24254 ;; This function uses a non-reentrant model
 24255 ;;
 24256                           
 24257                           	psect	text114
 24258  00442A                     __ptext114:
 24259                           	opt stack 0
 24260  00442A                     _isNumberInMemory:
 24261                           	opt stack 9
 24262                           
 24263                           ;app_utils.c: 145: static searchFsmStates currentState = SEARCH_FSM_START;
 24264                           ;app_utils.c: 146: static uint8_t currentPosition = 32;
 24265                           ;app_utils.c: 147: uint8_t readBuffer[((UINT8)(13))];
 24266                           ;app_utils.c: 148: EepromStsType memoryOpResult = OP_PENDING;
 24267                           
 24268                           ; BSR set to: 0
 24269                           ;incstack = 0
 24270  00442A  0E02               	movlw	2
 24271  00442C  0101               	movlb	1	; () banked
 24272  00442E  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24273                           
 24274                           ; BSR set to: 1
 24275                           ;app_utils.c: 150: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24276  004430  0E01               	movlw	1
 24277  004432  0100               	movlb	0	; () banked
 24278  004434  65C5               	cpfsgt	isNumberInMemory@currentState& (0+255),b
 24279  004436  D046               	goto	l2757
 24280                           
 24281                           ; BSR set to: 0
 24282                           ;app_utils.c: 151: {
 24283                           ;app_utils.c: 152: currentState = SEARCH_FSM_START;
 24284  004438  0E00               	movlw	0
 24285  00443A  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24286                           
 24287                           ;app_utils.c: 153: currentPosition = 32;
 24288  00443C  0E20               	movlw	32
 24289  00443E  6E41               	movwf	isNumberInMemory@currentPosition,c
 24290                           
 24291                           ; BSR set to: 0
 24292                           ;app_utils.c: 154: }
 24293                           ;app_utils.c: 155: if (currentPosition >= 32 * 10)
 24294  004440  D041               	goto	l2757
 24295  004442                     
 24296                           ; BSR set to: 0
 24297                           ;app_utils.c: 163: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24298                           
 24299                           ; BSR set to: 0
 24300  004442  0E04               	movlw	low isNumberInMemory@readBuffer
 24301  004444  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24302  004446  0E01               	movlw	high isNumberInMemory@readBuffer
 24303  004448  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24304  00444A  0E0D               	movlw	13
 24305  00444C  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24306  00444E  5041               	movf	isNumberInMemory@currentPosition,w,c
 24307  004450  EC92  F02D         	call	_Eeprom_Read
 24308  004454  0101               	movlb	1	; () banked
 24309  004456  6F11               	movwf	isNumberInMemory@memoryOpResult& (0+255),b
 24310                           
 24311                           ; BSR set to: 1
 24312                           ;app_utils.c: 164: if (memoryOpResult == OP_FAILED)
 24313  004458  0511               	decf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24314  00445A  A4D8               	btfss	status,2,c
 24315  00445C  D002               	goto	l2759
 24316                           
 24317                           ; BSR set to: 1
 24318                           ;app_utils.c: 165: {
 24319                           ;app_utils.c: 166: currentState = SEARCH_FSM_ERROR;
 24320  00445E  0E02               	movlw	2
 24321  004460  D005               	goto	L49
 24322  004462                     l2759:
 24323                           
 24324                           ;app_utils.c: 168: else if (memoryOpResult == OP_SUCCESS)
 24325                           
 24326                           ; BSR set to: 0
 24327  004462  0101               	movlb	1	; () banked
 24328  004464  5111               	movf	isNumberInMemory@memoryOpResult& (0+255),w,b
 24329  004466  A4D8               	btfss	status,2,c
 24330  004468  D035               	goto	l2762
 24331                           
 24332                           ; BSR set to: 1
 24333                           ;app_utils.c: 169: {
 24334                           ;app_utils.c: 170: currentState = SEARCH_FSM_CHECK_NUMBER;
 24335  00446A  0E01               	movlw	1
 24336  00446C                     L49:
 24337  00446C  0100               	movlb	0	; () banked
 24338  00446E  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24339                           
 24340                           ; BSR set to: 0
 24341                           ;app_utils.c: 171: }
 24342                           ;app_utils.c: 172: break;
 24343                           
 24344                           ; BSR set to: 0
 24345  004470  D031               	goto	l2762
 24346  004472                     
 24347                           ; BSR set to: 0
 24348                           ;app_utils.c: 175: currentState = SEARCH_FSM_NOT_FOUND;
 24349                           
 24350                           ; BSR set to: 0
 24351  004472  0E04               	movlw	4
 24352  004474  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24353                           
 24354                           ; BSR set to: 0
 24355                           ;app_utils.c: 176: if (isNumberValid(readBuffer))
 24356  004476  0E04               	movlw	low isNumberInMemory@readBuffer
 24357  004478  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24358  00447A  0E01               	movlw	high isNumberInMemory@readBuffer
 24359  00447C  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24360  00447E  EC9E  F02B         	call	_isNumberValid	;wreg free
 24361  004482  0900               	iorlw	0
 24362  004484  B4D8               	btfsc	status,2,c
 24363  004486  D01B               	goto	l2765
 24364                           
 24365                           ;app_utils.c: 177: {
 24366                           ;app_utils.c: 178: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24367  004488  C100  F07D         	movff	isNumberInMemory@phoneNumber,StringCompare@String1
 24368  00448C  C101  F07E         	movff	isNumberInMemory@phoneNumber+1,StringCompare@String1+1
 24369  004490  0E04               	movlw	low isNumberInMemory@readBuffer
 24370  004492  0100               	movlb	0	; () banked
 24371  004494  6F7F               	movwf	StringCompare@String2& (0+255),b
 24372  004496  0E01               	movlw	high isNumberInMemory@readBuffer
 24373  004498  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24374  00449A  0E00               	movlw	0
 24375  00449C  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24376  00449E  0E0D               	movlw	13
 24377  0044A0  6F81               	movwf	StringCompare@Len& (0+255),b
 24378  0044A2  EC39  F02E         	call	_StringCompare	;wreg free
 24379  0044A6  0900               	iorlw	0
 24380  0044A8  B4D8               	btfsc	status,2,c
 24381  0044AA  D009               	goto	l2765
 24382                           
 24383                           ;app_utils.c: 179: {
 24384                           ;app_utils.c: 180: *positionInMemory = currentPosition;
 24385  0044AC  C102  FFD9         	movff	isNumberInMemory@positionInMemory,fsr2l
 24386  0044B0  C103  FFDA         	movff	isNumberInMemory@positionInMemory+1,fsr2h
 24387  0044B4  C041  FFDF         	movff	isNumberInMemory@currentPosition,indf2
 24388                           
 24389                           ;app_utils.c: 181: currentState = SEARCH_FSM_FOUND;
 24390  0044B8  0E03               	movlw	3
 24391  0044BA  0100               	movlb	0	; () banked
 24392  0044BC  6FC5               	movwf	isNumberInMemory@currentState& (0+255),b
 24393  0044BE                     l2765:
 24394                           
 24395                           ;app_utils.c: 186: }
 24396                           ;app_utils.c: 187: }
 24397                           ;app_utils.c: 188: currentPosition += 32;
 24398                           
 24399                           ; BSR set to: 0
 24400                           
 24401                           ; BSR set to: 0
 24402                           
 24403                           ;app_utils.c: 183: else
 24404                           ;app_utils.c: 184: {
 24405                           
 24406                           ; BSR set to: 0
 24407  0044BE  0E20               	movlw	32
 24408  0044C0  2641               	addwf	isNumberInMemory@currentPosition,f,c
 24409                           
 24410                           ;app_utils.c: 193: }
 24411                           
 24412                           ;app_utils.c: 192: break;
 24413                           
 24414                           ;app_utils.c: 191: default:
 24415                           
 24416                           ;app_utils.c: 189: break;
 24417  0044C2  D008               	goto	l2762
 24418  0044C4                     l2757:
 24419  0044C4  0100               	movlb	0	; () banked
 24420  0044C6  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24421                           
 24422                           ; Switch size 1, requested type "space"
 24423                           ; Number of cases is 2, Range of values is 0 to 1
 24424                           ; switch strategies available:
 24425                           ; Name         Instructions Cycles
 24426                           ; simple_byte            7     4 (average)
 24427                           ;	Chosen strategy is simple_byte
 24428  0044C8  0A00               	xorlw	0	; case 0
 24429  0044CA  B4D8               	btfsc	status,2,c
 24430  0044CC  D7BA               	goto	l2758
 24431  0044CE  0A01               	xorlw	1	; case 1
 24432  0044D0  B4D8               	btfsc	status,2,c
 24433  0044D2  D7CF               	goto	l2763
 24434  0044D4                     l2762:
 24435                           
 24436                           ;app_utils.c: 194: return currentState;
 24437                           
 24438                           ; BSR set to: 0
 24439  0044D4  0100               	movlb	0	; () banked
 24440  0044D6  51C5               	movf	isNumberInMemory@currentState& (0+255),w,b
 24441  0044D8  0012               	return	
 24442  0044DA                     __end_of_isNumberInMemory:
 24443                           	opt stack 0
 24444                           tosu	equ	0xFFF
 24445                           tosh	equ	0xFFE
 24446                           tosl	equ	0xFFD
 24447                           pclath	equ	0xFFA
 24448                           tblptru	equ	0xFF8
 24449                           tblptrh	equ	0xFF7
 24450                           tblptrl	equ	0xFF6
 24451                           tablat	equ	0xFF5
 24452                           prodh	equ	0xFF4
 24453                           prodl	equ	0xFF3
 24454                           intcon	equ	0xFF2
 24455                           intcon2	equ	0xFF1
 24456                           intcon3	equ	0xFF0
 24457                           indf0	equ	0xFEF
 24458                           postinc0	equ	0xFEE
 24459                           plusw0	equ	0xFEB
 24460                           fsr0h	equ	0xFEA
 24461                           fsr0l	equ	0xFE9
 24462                           wreg	equ	0xFE8
 24463                           indf1	equ	0xFE7
 24464                           postinc1	equ	0xFE6
 24465                           postdec1	equ	0xFE5
 24466                           fsr1h	equ	0xFE2
 24467                           fsr1l	equ	0xFE1
 24468                           indf2	equ	0xFDF
 24469                           postinc2	equ	0xFDE
 24470                           postdec2	equ	0xFDD
 24471                           plusw2	equ	0xFDB
 24472                           fsr2h	equ	0xFDA
 24473                           fsr2l	equ	0xFD9
 24474                           status	equ	0xFD8
 24475                           
 24476 ;; *************** function _isMasterNumber *****************
 24477 ;; Defined at:
 24478 ;;		line 232 in file "../Source/c/04_App/app_utils.c"
 24479 ;; Parameters:    Size  Location     Type
 24480 ;;  phoneNumber     2    0[BANK1 ] PTR unsigned char 
 24481 ;;		 -> receivedNumber(13), 
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 24484 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 24485 ;; Return value:  Size  Location     Type
 24486 ;;                  1    wreg      unsigned char 
 24487 ;; Registers used:
 24488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24489 ;; Tracked objects:
 24490 ;;		On entry : 0/0
 24491 ;;		On exit  : 0/0
 24492 ;;		Unchanged: 0/0
 24493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24494 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24495 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24497 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24498 ;;Total ram usage:       16 bytes
 24499 ;; Hardware stack levels used:    1
 24500 ;; Hardware stack levels required when called:   17
 24501 ;; This function calls:
 24502 ;;		_Eeprom_Read
 24503 ;;		_StringCompare
 24504 ;;		_isNumberValid
 24505 ;; This function is called by:
 24506 ;;		_addCmdFsm
 24507 ;;		_delCmdFsm
 24508 ;; This function uses a non-reentrant model
 24509 ;;
 24510                           
 24511                           	psect	text115
 24512  005456                     __ptext115:
 24513                           	opt stack 0
 24514  005456                     _isMasterNumber:
 24515                           	opt stack 9
 24516                           
 24517                           ;app_utils.c: 234: uint8_t readBuffer[((UINT8)(13))];
 24518                           ;app_utils.c: 235: EepromStsType memoryOpResult = OP_PENDING;
 24519                           
 24520                           ; BSR set to: 0
 24521                           ;incstack = 0
 24522  005456  0E02               	movlw	2
 24523  005458  0101               	movlb	1	; () banked
 24524  00545A  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24525                           
 24526                           ; BSR set to: 1
 24527                           ;app_utils.c: 237: memoryOpResult = Eeprom_Read(16, readBuffer, ((UINT8)(13)));
 24528  00545C  0E02               	movlw	low isMasterNumber@readBuffer
 24529  00545E  0100               	movlb	0	; () banked
 24530  005460  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24531  005462  0E01               	movlw	high isMasterNumber@readBuffer
 24532  005464  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24533  005466  0E0D               	movlw	13
 24534  005468  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24535  00546A  0E10               	movlw	16
 24536  00546C  EC92  F02D         	call	_Eeprom_Read
 24537  005470  0101               	movlb	1	; () banked
 24538  005472  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24539                           
 24540                           ; BSR set to: 1
 24541                           ;app_utils.c: 238: if (memoryOpResult != OP_PENDING)
 24542  005474  0E02               	movlw	2
 24543  005476  190F               	xorwf	isMasterNumber@memoryOpResult& (0+255),w,b
 24544  005478  B4D8               	btfsc	status,2,c
 24545  00547A  D021               	goto	l2773
 24546                           
 24547                           ; BSR set to: 1
 24548                           ;app_utils.c: 239: {
 24549                           ;app_utils.c: 240: memoryOpResult = OP_FAILED;
 24550  00547C  0E01               	movlw	1
 24551  00547E  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24552                           
 24553                           ; BSR set to: 1
 24554                           ;app_utils.c: 241: if (isNumberValid(readBuffer))
 24555  005480  0E02               	movlw	low isMasterNumber@readBuffer
 24556  005482  0100               	movlb	0	; () banked
 24557  005484  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24558  005486  0E01               	movlw	high isMasterNumber@readBuffer
 24559  005488  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24560  00548A  EC9E  F02B         	call	_isNumberValid	;wreg free
 24561  00548E  0900               	iorlw	0
 24562  005490  B4D8               	btfsc	status,2,c
 24563  005492  D015               	goto	l2773
 24564                           
 24565                           ;app_utils.c: 242: {
 24566                           ;app_utils.c: 243: if (StringCompare(phoneNumber, readBuffer, ((UINT8)(13))))
 24567  005494  C100  F07D         	movff	isMasterNumber@phoneNumber,StringCompare@String1
 24568  005498  C101  F07E         	movff	isMasterNumber@phoneNumber+1,StringCompare@String1+1
 24569  00549C  0E02               	movlw	low isMasterNumber@readBuffer
 24570  00549E  0100               	movlb	0	; () banked
 24571  0054A0  6F7F               	movwf	StringCompare@String2& (0+255),b
 24572  0054A2  0E01               	movlw	high isMasterNumber@readBuffer
 24573  0054A4  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 24574  0054A6  0E00               	movlw	0
 24575  0054A8  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 24576  0054AA  0E0D               	movlw	13
 24577  0054AC  6F81               	movwf	StringCompare@Len& (0+255),b
 24578  0054AE  EC39  F02E         	call	_StringCompare	;wreg free
 24579  0054B2  0900               	iorlw	0
 24580  0054B4  B4D8               	btfsc	status,2,c
 24581  0054B6  D003               	goto	l2773
 24582                           
 24583                           ;app_utils.c: 244: {
 24584                           ;app_utils.c: 245: memoryOpResult = OP_SUCCESS;
 24585  0054B8  0E00               	movlw	0
 24586  0054BA  0101               	movlb	1	; () banked
 24587  0054BC  6F0F               	movwf	isMasterNumber@memoryOpResult& (0+255),b
 24588  0054BE                     l2773:
 24589                           
 24590                           ;app_utils.c: 246: }
 24591                           ;app_utils.c: 247: }
 24592                           ;app_utils.c: 248: }
 24593                           ;app_utils.c: 249: return memoryOpResult;
 24594                           
 24595                           ; BSR set to: 1
 24596                           
 24597                           ; BSR set to: 1
 24598  0054BE  0101               	movlb	1	; () banked
 24599  0054C0  510F               	movf	isMasterNumber@memoryOpResult& (0+255),w,b
 24600  0054C2  0012               	return	
 24601  0054C4                     __end_of_isMasterNumber:
 24602                           	opt stack 0
 24603                           tosu	equ	0xFFF
 24604                           tosh	equ	0xFFE
 24605                           tosl	equ	0xFFD
 24606                           pclath	equ	0xFFA
 24607                           tblptru	equ	0xFF8
 24608                           tblptrh	equ	0xFF7
 24609                           tblptrl	equ	0xFF6
 24610                           tablat	equ	0xFF5
 24611                           prodh	equ	0xFF4
 24612                           prodl	equ	0xFF3
 24613                           intcon	equ	0xFF2
 24614                           intcon2	equ	0xFF1
 24615                           intcon3	equ	0xFF0
 24616                           indf0	equ	0xFEF
 24617                           postinc0	equ	0xFEE
 24618                           plusw0	equ	0xFEB
 24619                           fsr0h	equ	0xFEA
 24620                           fsr0l	equ	0xFE9
 24621                           wreg	equ	0xFE8
 24622                           indf1	equ	0xFE7
 24623                           postinc1	equ	0xFE6
 24624                           postdec1	equ	0xFE5
 24625                           fsr1h	equ	0xFE2
 24626                           fsr1l	equ	0xFE1
 24627                           indf2	equ	0xFDF
 24628                           postinc2	equ	0xFDE
 24629                           postdec2	equ	0xFDD
 24630                           plusw2	equ	0xFDB
 24631                           fsr2h	equ	0xFDA
 24632                           fsr2l	equ	0xFD9
 24633                           status	equ	0xFD8
 24634                           
 24635 ;; *************** function _findEmptySpot *****************
 24636 ;; Defined at:
 24637 ;;		line 283 in file "../Source/c/04_App/app_utils.c"
 24638 ;; Parameters:    Size  Location     Type
 24639 ;;  positionInMe    2    0[BANK1 ] PTR unsigned char 
 24640 ;;		 -> addCmdFsm@numberInMemory(1), 
 24641 ;; Auto vars:     Size  Location     Type
 24642 ;;  readBuffer     13    2[BANK1 ] unsigned char [13]
 24643 ;;  memoryOpResu    1   15[BANK1 ] enum E8246
 24644 ;; Return value:  Size  Location     Type
 24645 ;;                  1    wreg      enum E8973
 24646 ;; Registers used:
 24647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24648 ;; Tracked objects:
 24649 ;;		On entry : 0/0
 24650 ;;		On exit  : 0/0
 24651 ;;		Unchanged: 0/0
 24652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24653 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24657 ;;Total ram usage:       16 bytes
 24658 ;; Hardware stack levels used:    1
 24659 ;; Hardware stack levels required when called:   17
 24660 ;; This function calls:
 24661 ;;		_Eeprom_Read
 24662 ;;		_isNumberValid
 24663 ;; This function is called by:
 24664 ;;		_addCmdFsm
 24665 ;; This function uses a non-reentrant model
 24666 ;;
 24667                           
 24668                           	psect	text116
 24669  0050EC                     __ptext116:
 24670                           	opt stack 0
 24671  0050EC                     _findEmptySpot:
 24672                           	opt stack 9
 24673                           
 24674                           ;app_utils.c: 285: static searchFsmStates currentState = SEARCH_FSM_START;
 24675                           ;app_utils.c: 286: static uint8_t currentPosition = 32;
 24676                           ;app_utils.c: 287: uint8_t readBuffer[((UINT8)(13))];
 24677                           ;app_utils.c: 288: EepromStsType memoryOpResult = OP_PENDING;
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;incstack = 0
 24681  0050EC  0E02               	movlw	2
 24682  0050EE  0101               	movlb	1	; () banked
 24683  0050F0  6F0F               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24684                           
 24685                           ; BSR set to: 1
 24686                           ;app_utils.c: 290: if (currentState > SEARCH_FSM_CHECK_NUMBER)
 24687  0050F2  0E01               	movlw	1
 24688  0050F4  0100               	movlb	0	; () banked
 24689  0050F6  65C4               	cpfsgt	findEmptySpot@currentState& (0+255),b
 24690  0050F8  D034               	goto	l2783
 24691                           
 24692                           ; BSR set to: 0
 24693                           ;app_utils.c: 291: {
 24694                           ;app_utils.c: 292: currentState = SEARCH_FSM_START;
 24695  0050FA  0E00               	movlw	0
 24696  0050FC  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24697                           
 24698                           ;app_utils.c: 293: currentPosition = 32;
 24699  0050FE  0E20               	movlw	32
 24700  005100  6E40               	movwf	findEmptySpot@currentPosition,c
 24701                           
 24702                           ; BSR set to: 0
 24703                           ;app_utils.c: 294: }
 24704                           ;app_utils.c: 295: if (currentPosition >= 32 * 10)
 24705  005102  D02F               	goto	l2783
 24706  005104                     
 24707                           ; BSR set to: 0
 24708                           ;app_utils.c: 303: memoryOpResult = Eeprom_Read(currentPosition, readBuffer, ((UINT8)(13
      +                          )));
 24709                           
 24710                           ; BSR set to: 0
 24711  005104  0E02               	movlw	low findEmptySpot@readBuffer
 24712  005106  6FA9               	movwf	Eeprom_Read@ReadBuffer& (0+255),b
 24713  005108  0E01               	movlw	high findEmptySpot@readBuffer
 24714  00510A  6FAA               	movwf	(Eeprom_Read@ReadBuffer+1)& (0+255),b
 24715  00510C  0E0D               	movlw	13
 24716  00510E  6FAB               	movwf	Eeprom_Read@DataLength& (0+255),b
 24717  005110  5040               	movf	findEmptySpot@currentPosition,w,c
 24718  005112  EC92  F02D         	call	_Eeprom_Read
 24719  005116  0101               	movlb	1	; () banked
 24720  005118  6F0F               	movwf	findEmptySpot@memoryOpResult& (0+255),b
 24721                           
 24722                           ; BSR set to: 1
 24723                           ;app_utils.c: 304: if (memoryOpResult == OP_FAILED)
 24724  00511A  050F               	decf	findEmptySpot@memoryOpResult& (0+255),w,b
 24725  00511C  A4D8               	btfss	status,2,c
 24726  00511E  D002               	goto	l2785
 24727                           
 24728                           ; BSR set to: 1
 24729                           ;app_utils.c: 305: {
 24730                           ;app_utils.c: 306: currentState = SEARCH_FSM_ERROR;
 24731  005120  0E02               	movlw	2
 24732  005122  D012               	goto	L51
 24733  005124                     l2785:
 24734                           
 24735                           ;app_utils.c: 308: else if (memoryOpResult == OP_SUCCESS)
 24736                           
 24737                           ; BSR set to: 0
 24738  005124  0101               	movlb	1	; () banked
 24739  005126  510F               	movf	findEmptySpot@memoryOpResult& (0+255),w,b
 24740  005128  A4D8               	btfss	status,2,c
 24741  00512A  D022               	goto	l2788
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;app_utils.c: 309: {
 24745                           ;app_utils.c: 310: currentState = SEARCH_FSM_CHECK_NUMBER;
 24746  00512C  0E01               	movlw	1
 24747  00512E  D00C               	goto	L51
 24748  005130                     
 24749                           ; BSR set to: 0
 24750                           ;app_utils.c: 315: if (isNumberValid(readBuffer))
 24751                           
 24752                           ; BSR set to: 0
 24753  005130  0E02               	movlw	low findEmptySpot@readBuffer
 24754  005132  6F7D               	movwf	isNumberValid@phoneNumber& (0+255),b
 24755  005134  0E01               	movlw	high findEmptySpot@readBuffer
 24756  005136  6F7E               	movwf	(isNumberValid@phoneNumber+1)& (0+255),b
 24757  005138  EC9E  F02B         	call	_isNumberValid	;wreg free
 24758  00513C  0900               	iorlw	0
 24759  00513E  B4D8               	btfsc	status,2,c
 24760  005140  D006               	goto	l2790
 24761                           
 24762                           ;app_utils.c: 316: {
 24763                           ;app_utils.c: 317: currentPosition += 32;
 24764  005142  0E20               	movlw	32
 24765  005144  2640               	addwf	findEmptySpot@currentPosition,f,c
 24766                           
 24767                           ;app_utils.c: 318: currentState = SEARCH_FSM_START;
 24768  005146  0E00               	movlw	0
 24769  005148                     L51:
 24770  005148  0100               	movlb	0	; () banked
 24771  00514A  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24772                           
 24773                           ;app_utils.c: 319: }
 24774  00514C  D011               	goto	l2788
 24775  00514E                     l2790:
 24776                           
 24777                           ;app_utils.c: 320: else
 24778                           ;app_utils.c: 321: {
 24779                           ;app_utils.c: 322: currentState = SEARCH_FSM_NOT_FOUND;
 24780                           
 24781                           ; BSR set to: 0
 24782  00514E  0E04               	movlw	4
 24783  005150  0100               	movlb	0	; () banked
 24784  005152  6FC4               	movwf	findEmptySpot@currentState& (0+255),b
 24785                           
 24786                           ; BSR set to: 0
 24787                           ;app_utils.c: 323: *positionInMemory = currentPosition;
 24788  005154  C100  FFD9         	movff	findEmptySpot@positionInMemory,fsr2l
 24789  005158  C101  FFDA         	movff	findEmptySpot@positionInMemory+1,fsr2h
 24790  00515C  C040  FFDF         	movff	findEmptySpot@currentPosition,indf2
 24791                           
 24792                           ; BSR set to: 0
 24793                           ;app_utils.c: 329: }
 24794                           
 24795                           ; BSR set to: 0
 24796                           ;app_utils.c: 328: break;
 24797                           
 24798                           ;app_utils.c: 327: default:
 24799                           
 24800                           ; BSR set to: 0
 24801                           ;app_utils.c: 324: }
 24802                           ;app_utils.c: 325: break;
 24803  005160  D007               	goto	l2788
 24804  005162                     l2783:
 24805                           
 24806                           ; BSR set to: 0
 24807                           
 24808                           ; BSR set to: 0
 24809  005162  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24810                           
 24811                           ; Switch size 1, requested type "space"
 24812                           ; Number of cases is 2, Range of values is 0 to 1
 24813                           ; switch strategies available:
 24814                           ; Name         Instructions Cycles
 24815                           ; simple_byte            7     4 (average)
 24816                           ;	Chosen strategy is simple_byte
 24817  005164  0A00               	xorlw	0	; case 0
 24818  005166  B4D8               	btfsc	status,2,c
 24819  005168  D7CD               	goto	l2784
 24820  00516A  0A01               	xorlw	1	; case 1
 24821  00516C  B4D8               	btfsc	status,2,c
 24822  00516E  D7E0               	goto	l2789
 24823  005170                     l2788:
 24824                           
 24825                           ;app_utils.c: 330: return currentState;
 24826                           
 24827                           ; BSR set to: 0
 24828  005170  0100               	movlb	0	; () banked
 24829  005172  51C4               	movf	findEmptySpot@currentState& (0+255),w,b
 24830  005174  0012               	return	
 24831  005176                     __end_of_findEmptySpot:
 24832                           	opt stack 0
 24833                           tosu	equ	0xFFF
 24834                           tosh	equ	0xFFE
 24835                           tosl	equ	0xFFD
 24836                           pclath	equ	0xFFA
 24837                           tblptru	equ	0xFF8
 24838                           tblptrh	equ	0xFF7
 24839                           tblptrl	equ	0xFF6
 24840                           tablat	equ	0xFF5
 24841                           prodh	equ	0xFF4
 24842                           prodl	equ	0xFF3
 24843                           intcon	equ	0xFF2
 24844                           intcon2	equ	0xFF1
 24845                           intcon3	equ	0xFF0
 24846                           indf0	equ	0xFEF
 24847                           postinc0	equ	0xFEE
 24848                           plusw0	equ	0xFEB
 24849                           fsr0h	equ	0xFEA
 24850                           fsr0l	equ	0xFE9
 24851                           wreg	equ	0xFE8
 24852                           indf1	equ	0xFE7
 24853                           postinc1	equ	0xFE6
 24854                           postdec1	equ	0xFE5
 24855                           fsr1h	equ	0xFE2
 24856                           fsr1l	equ	0xFE1
 24857                           indf2	equ	0xFDF
 24858                           postinc2	equ	0xFDE
 24859                           postdec2	equ	0xFDD
 24860                           plusw2	equ	0xFDB
 24861                           fsr2h	equ	0xFDA
 24862                           fsr2l	equ	0xFD9
 24863                           status	equ	0xFD8
 24864                           
 24865 ;; *************** function _isNumberValid *****************
 24866 ;; Defined at:
 24867 ;;		line 121 in file "../Source/c/04_App/app_utils.c"
 24868 ;; Parameters:    Size  Location     Type
 24869 ;;  phoneNumber     2   29[BANK0 ] PTR unsigned char 
 24870 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), smsText(20), 
 24871 ;; Auto vars:     Size  Location     Type
 24872 ;;  i               1   33[BANK0 ] unsigned char 
 24873 ;;  isNumberOk      1   32[BANK0 ] unsigned char 
 24874 ;; Return value:  Size  Location     Type
 24875 ;;                  1    wreg      unsigned char 
 24876 ;; Registers used:
 24877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24878 ;; Tracked objects:
 24879 ;;		On entry : 0/0
 24880 ;;		On exit  : 0/0
 24881 ;;		Unchanged: 0/0
 24882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24886 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24887 ;;Total ram usage:        5 bytes
 24888 ;; Hardware stack levels used:    1
 24889 ;; Hardware stack levels required when called:   11
 24890 ;; This function calls:
 24891 ;;		Nothing
 24892 ;; This function is called by:
 24893 ;;		_parseCommand
 24894 ;;		_isNumberInMemory
 24895 ;;		_isMasterNumber
 24896 ;;		_findEmptySpot
 24897 ;; This function uses a non-reentrant model
 24898 ;;
 24899                           
 24900                           	psect	text117
 24901  00573C                     __ptext117:
 24902                           	opt stack 0
 24903  00573C                     _isNumberValid:
 24904                           	opt stack 14
 24905                           
 24906                           ;app_utils.c: 123: bool isNumberOk = 0;
 24907                           
 24908                           ; BSR set to: 0
 24909                           ;incstack = 0
 24910  00573C  0E00               	movlw	0
 24911  00573E  0100               	movlb	0	; () banked
 24912  005740  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24913                           
 24914                           ;app_utils.c: 124: uint8_t i = 0;
 24915  005742  0E00               	movlw	0
 24916  005744  6F81               	movwf	isNumberValid@i& (0+255),b
 24917                           
 24918                           ; BSR set to: 0
 24919                           ;app_utils.c: 125: if (phoneNumber[0] == '+')
 24920  005746  C07D  FFD9         	movff	isNumberValid@phoneNumber,fsr2l
 24921  00574A  C07E  FFDA         	movff	isNumberValid@phoneNumber+1,fsr2h
 24922  00574E  0E2B               	movlw	43
 24923  005750  18DE               	xorwf	postinc2,w,c
 24924  005752  A4D8               	btfss	status,2,c
 24925  005754  D024               	goto	u13250
 24926                           
 24927                           ; BSR set to: 0
 24928                           ;app_utils.c: 126: {
 24929                           ;app_utils.c: 127: for (i = 1; i < ((UINT8)(13)); i++)
 24930  005756  0E01               	movlw	1
 24931  005758  6F81               	movwf	isNumberValid@i& (0+255),b
 24932  00575A                     l14145:
 24933                           
 24934                           ; BSR set to: 0
 24935  00575A  0E0C               	movlw	12
 24936  00575C  6581               	cpfsgt	isNumberValid@i& (0+255),b
 24937  00575E  D001               	goto	l2744
 24938  005760  D01E               	goto	u13250
 24939  005762                     l2744:
 24940                           
 24941                           ; BSR set to: 0
 24942                           ;app_utils.c: 128: {
 24943                           ;app_utils.c: 129: if (phoneNumber[i] >= '0' && phoneNumber[i] <= '9')
 24944                           
 24945                           ; BSR set to: 0
 24946  005762  5181               	movf	isNumberValid@i& (0+255),w,b
 24947  005764  0D01               	mullw	1
 24948  005766  50F3               	movf	prodl,w,c
 24949  005768  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24950  00576A  6ED9               	movwf	fsr2l,c
 24951  00576C  50F4               	movf	prodh,w,c
 24952  00576E  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24953  005770  6EDA               	movwf	fsr2h,c
 24954  005772  0E2F               	movlw	47
 24955  005774  64DF               	cpfsgt	indf2,c
 24956  005776  D00E               	goto	l2746
 24957                           
 24958                           ; BSR set to: 0
 24959  005778  5181               	movf	isNumberValid@i& (0+255),w,b
 24960  00577A  0D01               	mullw	1
 24961  00577C  50F3               	movf	prodl,w,c
 24962  00577E  257D               	addwf	isNumberValid@phoneNumber& (0+255),w,b
 24963  005780  6ED9               	movwf	fsr2l,c
 24964  005782  50F4               	movf	prodh,w,c
 24965  005784  217E               	addwfc	(isNumberValid@phoneNumber+1)& (0+255),w,b
 24966  005786  6EDA               	movwf	fsr2h,c
 24967  005788  0E3A               	movlw	58
 24968  00578A  60DF               	cpfslt	indf2,c
 24969  00578C  D003               	goto	l2746
 24970                           
 24971                           ; BSR set to: 0
 24972                           ;app_utils.c: 130: {
 24973                           ;app_utils.c: 131: isNumberOk = 1;
 24974  00578E  0E01               	movlw	1
 24975  005790  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24976                           
 24977                           ;app_utils.c: 132: }
 24978  005792  D003               	goto	l2747
 24979  005794                     l2746:
 24980                           
 24981                           ; BSR set to: 0
 24982                           ;app_utils.c: 133: else
 24983                           ;app_utils.c: 134: {
 24984                           ;app_utils.c: 135: isNumberOk = 0;
 24985                           
 24986                           ; BSR set to: 0
 24987  005794  0E00               	movlw	0
 24988  005796  6F80               	movwf	isNumberValid@isNumberOk& (0+255),b
 24989                           
 24990                           ;app_utils.c: 136: break;
 24991  005798  D002               	goto	u13250
 24992  00579A                     l2747:
 24993                           
 24994                           ; BSR set to: 0
 24995                           
 24996                           ; BSR set to: 0
 24997  00579A  2B81               	incf	isNumberValid@i& (0+255),f,b
 24998  00579C  D7DE               	goto	l14145
 24999  00579E                     u13250:
 25000                           
 25001                           ; BSR set to: 0
 25002                           ;app_utils.c: 137: }
 25003                           ;app_utils.c: 138: }
 25004                           ;app_utils.c: 139: }
 25005                           ;app_utils.c: 140: return isNumberOk;
 25006                           
 25007                           ; BSR set to: 0
 25008                           
 25009                           ; BSR set to: 0
 25010  00579E  5180               	movf	isNumberValid@isNumberOk& (0+255),w,b
 25011  0057A0  0012               	return	
 25012  0057A2                     __end_of_isNumberValid:
 25013                           	opt stack 0
 25014                           tosu	equ	0xFFF
 25015                           tosh	equ	0xFFE
 25016                           tosl	equ	0xFFD
 25017                           pclath	equ	0xFFA
 25018                           tblptru	equ	0xFF8
 25019                           tblptrh	equ	0xFF7
 25020                           tblptrl	equ	0xFF6
 25021                           tablat	equ	0xFF5
 25022                           prodh	equ	0xFF4
 25023                           prodl	equ	0xFF3
 25024                           intcon	equ	0xFF2
 25025                           intcon2	equ	0xFF1
 25026                           intcon3	equ	0xFF0
 25027                           indf0	equ	0xFEF
 25028                           postinc0	equ	0xFEE
 25029                           plusw0	equ	0xFEB
 25030                           fsr0h	equ	0xFEA
 25031                           fsr0l	equ	0xFE9
 25032                           wreg	equ	0xFE8
 25033                           indf1	equ	0xFE7
 25034                           postinc1	equ	0xFE6
 25035                           postdec1	equ	0xFE5
 25036                           fsr1h	equ	0xFE2
 25037                           fsr1l	equ	0xFE1
 25038                           indf2	equ	0xFDF
 25039                           postinc2	equ	0xFDE
 25040                           postdec2	equ	0xFDD
 25041                           plusw2	equ	0xFDB
 25042                           fsr2h	equ	0xFDA
 25043                           fsr2l	equ	0xFD9
 25044                           status	equ	0xFD8
 25045                           
 25046 ;; *************** function _Eeprom_Read *****************
 25047 ;; Defined at:
 25048 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 25049 ;; Parameters:    Size  Location     Type
 25050 ;;  MemoryAddres    1    wreg     unsigned char 
 25051 ;;  ReadBuffer      2   73[BANK0 ] PTR unsigned char 
 25052 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25053 ;;  DataLength      1   75[BANK0 ] unsigned char 
 25054 ;; Auto vars:     Size  Location     Type
 25055 ;;  MemoryAddres    1   76[BANK0 ] unsigned char 
 25056 ;;  QuerySts        1   79[BANK0 ] enum E8932
 25057 ;;  ReadSts         1   78[BANK0 ] enum E8958
 25058 ;;  SlaveAddress    1   77[BANK0 ] const unsigned char 
 25059 ;; Return value:  Size  Location     Type
 25060 ;;                  1    wreg      enum E8958
 25061 ;; Registers used:
 25062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25063 ;; Tracked objects:
 25064 ;;		On entry : 0/0
 25065 ;;		On exit  : 0/0
 25066 ;;		Unchanged: 0/0
 25067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25068 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25069 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25071 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25072 ;;Total ram usage:        7 bytes
 25073 ;; Hardware stack levels used:    1
 25074 ;; Hardware stack levels required when called:   16
 25075 ;; This function calls:
 25076 ;;		_I2cSlv_QueryI2cData
 25077 ;; This function is called by:
 25078 ;;		_initEeprom
 25079 ;;		_isNumberInMemory
 25080 ;;		_isMasterNumber
 25081 ;;		_findEmptySpot
 25082 ;; This function uses a non-reentrant model
 25083 ;;
 25084                           
 25085                           	psect	text118
 25086  005B24                     __ptext118:
 25087                           	opt stack 0
 25088  005B24                     _Eeprom_Read:
 25089                           	opt stack 9
 25090                           
 25091                           ; BSR set to: 0
 25092                           ;incstack = 0
 25093                           ;Eeprom_Read@MemoryAddress stored from wreg
 25094  005B24  0100               	movlb	0	; () banked
 25095  005B26  6FAC               	movwf	Eeprom_Read@MemoryAddress& (0+255),b
 25096                           
 25097                           ;eeprom_if.c: 106: const UINT8 SlaveAddress = 0x50;
 25098  005B28  0E50               	movlw	80
 25099  005B2A  0100               	movlb	0	; () banked
 25100  005B2C  6FAD               	movwf	Eeprom_Read@SlaveAddress& (0+255),b
 25101                           
 25102                           ;eeprom_if.c: 107: I2cOpStsType QuerySts = OP_IN_PROGRESS;
 25103  005B2E  0E00               	movlw	0
 25104  005B30  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25105                           
 25106                           ;eeprom_if.c: 108: EepromStsType ReadSts = OP_PENDING;
 25107  005B32  0E02               	movlw	2
 25108  005B34  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25109                           
 25110                           ; BSR set to: 0
 25111                           ;eeprom_if.c: 109: ReadAddress[0] = MemoryAddress;
 25112  005B36  C0AC  F1FB         	movff	Eeprom_Read@MemoryAddress,_ReadAddress
 25113                           
 25114                           ; BSR set to: 0
 25115                           ;eeprom_if.c: 111: QuerySts = I2cSlv_QueryI2cData(ReadAddress, 1, ReadBuffer, DataLength
      +                          , SlaveAddress);
 25116  005B3A  0EFB               	movlw	low _ReadAddress
 25117  005B3C  6FA2               	movwf	I2cSlv_QueryI2cData@TxBuffer& (0+255),b
 25118  005B3E  0E01               	movlw	high _ReadAddress
 25119  005B40  6FA3               	movwf	(I2cSlv_QueryI2cData@TxBuffer+1)& (0+255),b
 25120  005B42  0E01               	movlw	1
 25121  005B44  6FA4               	movwf	I2cSlv_QueryI2cData@TxLen& (0+255),b
 25122  005B46  C0A9  F0A5         	movff	Eeprom_Read@ReadBuffer,I2cSlv_QueryI2cData@RxBuffer
 25123  005B4A  C0AA  F0A6         	movff	Eeprom_Read@ReadBuffer+1,I2cSlv_QueryI2cData@RxBuffer+1
 25124  005B4E  C0AB  F0A7         	movff	Eeprom_Read@DataLength,I2cSlv_QueryI2cData@RxLen
 25125  005B52  C0AD  F0A8         	movff	Eeprom_Read@SlaveAddress,I2cSlv_QueryI2cData@SlaveAddr
 25126  005B56  EC15  F01D         	call	_I2cSlv_QueryI2cData	;wreg free
 25127  005B5A  0100               	movlb	0	; () banked
 25128  005B5C  6FAF               	movwf	Eeprom_Read@QuerySts& (0+255),b
 25129                           
 25130                           ; BSR set to: 0
 25131                           ;eeprom_if.c: 113: if (QuerySts == OP_COMPLETE)
 25132  005B5E  05AF               	decf	Eeprom_Read@QuerySts& (0+255),w,b
 25133  005B60  A4D8               	btfss	status,2,c
 25134  005B62  D002               	goto	l2037
 25135                           
 25136                           ; BSR set to: 0
 25137                           ;eeprom_if.c: 114: {
 25138                           ;eeprom_if.c: 115: ReadSts = OP_SUCCESS;
 25139  005B64  0E00               	movlw	0
 25140  005B66  D005               	goto	L52
 25141  005B68                     l2037:
 25142                           
 25143                           ; BSR set to: 0
 25144                           ;eeprom_if.c: 117: else if (QuerySts == OP_TIMEOUT)
 25145                           
 25146                           ; BSR set to: 0
 25147  005B68  0E02               	movlw	2
 25148  005B6A  19AF               	xorwf	Eeprom_Read@QuerySts& (0+255),w,b
 25149  005B6C  A4D8               	btfss	status,2,c
 25150  005B6E  D002               	goto	l2039
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;eeprom_if.c: 118: {
 25154                           ;eeprom_if.c: 119: ReadSts = OP_FAILED;
 25155  005B70  0E01               	movlw	1
 25156  005B72                     L52:
 25157  005B72  6FAE               	movwf	Eeprom_Read@ReadSts& (0+255),b
 25158  005B74                     l2039:
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;eeprom_if.c: 120: }
 25162                           ;eeprom_if.c: 121: return ReadSts;
 25163                           
 25164                           ; BSR set to: 0
 25165  005B74  51AE               	movf	Eeprom_Read@ReadSts& (0+255),w,b
 25166  005B76  0012               	return	
 25167  005B78                     __end_of_Eeprom_Read:
 25168                           	opt stack 0
 25169                           tosu	equ	0xFFF
 25170                           tosh	equ	0xFFE
 25171                           tosl	equ	0xFFD
 25172                           pclath	equ	0xFFA
 25173                           tblptru	equ	0xFF8
 25174                           tblptrh	equ	0xFF7
 25175                           tblptrl	equ	0xFF6
 25176                           tablat	equ	0xFF5
 25177                           prodh	equ	0xFF4
 25178                           prodl	equ	0xFF3
 25179                           intcon	equ	0xFF2
 25180                           intcon2	equ	0xFF1
 25181                           intcon3	equ	0xFF0
 25182                           indf0	equ	0xFEF
 25183                           postinc0	equ	0xFEE
 25184                           plusw0	equ	0xFEB
 25185                           fsr0h	equ	0xFEA
 25186                           fsr0l	equ	0xFE9
 25187                           wreg	equ	0xFE8
 25188                           indf1	equ	0xFE7
 25189                           postinc1	equ	0xFE6
 25190                           postdec1	equ	0xFE5
 25191                           fsr1h	equ	0xFE2
 25192                           fsr1l	equ	0xFE1
 25193                           indf2	equ	0xFDF
 25194                           postinc2	equ	0xFDE
 25195                           postdec2	equ	0xFDD
 25196                           plusw2	equ	0xFDB
 25197                           fsr2h	equ	0xFDA
 25198                           fsr2l	equ	0xFD9
 25199                           status	equ	0xFD8
 25200                           
 25201 ;; *************** function _I2cSlv_QueryI2cData *****************
 25202 ;; Defined at:
 25203 ;;		line 381 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25204 ;; Parameters:    Size  Location     Type
 25205 ;;  TxBuffer        2   66[BANK0 ] PTR unsigned char 
 25206 ;;		 -> ReadAddress(1), 
 25207 ;;  TxLen           1   68[BANK0 ] unsigned char 
 25208 ;;  RxBuffer        2   69[BANK0 ] PTR unsigned char 
 25209 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25210 ;;  RxLen           1   71[BANK0 ] unsigned char 
 25211 ;;  SlaveAddr       1   72[BANK0 ] unsigned char 
 25212 ;; Auto vars:     Size  Location     Type
 25213 ;;		None
 25214 ;; Return value:  Size  Location     Type
 25215 ;;                  1    wreg      enum E8947
 25216 ;; Registers used:
 25217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25218 ;; Tracked objects:
 25219 ;;		On entry : 0/0
 25220 ;;		On exit  : 0/0
 25221 ;;		Unchanged: 0/0
 25222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25223 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25226 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25227 ;;Total ram usage:        7 bytes
 25228 ;; Hardware stack levels used:    1
 25229 ;; Hardware stack levels required when called:   15
 25230 ;; This function calls:
 25231 ;;		_I2cSlv_I2cReadMsgSts
 25232 ;;		_I2cSlv_ReceiveI2cMsg
 25233 ;;		_I2cSlv_SendI2cMsg
 25234 ;;		_OsTmr_GetTimerStatus
 25235 ;;		_OsTmr_StartTimer
 25236 ;;		_OsTmr_Wait
 25237 ;; This function is called by:
 25238 ;;		_Eeprom_Read
 25239 ;; This function uses a non-reentrant model
 25240 ;;
 25241                           
 25242                           	psect	text119
 25243  003A2A                     __ptext119:
 25244                           	opt stack 0
 25245  003A2A                     _I2cSlv_QueryI2cData:
 25246                           	opt stack 9
 25247                           
 25248                           ;i2c_slv.c: 383: static I2cOpStateType I2cOpState = ASK_DATA;
 25249                           ;i2c_slv.c: 384: static SwTimerType QueryTimer;
 25250                           ;i2c_slv.c: 385: static SwTimerType TimeoutTimer;
 25251                           ;i2c_slv.c: 386: static I2cOpStsType Ret;
 25252                           ;i2c_slv.c: 388: switch(I2cOpState)
 25253                           
 25254                           ; BSR set to: 0
 25255                           ;incstack = 0
 25256  003A2A  D05B               	goto	l1440
 25257  003A2C                     
 25258                           ;i2c_slv.c: 392: I2cSlv_SendI2cMsg(TxBuffer, SlaveAddr, TxLen);
 25259  003A2C  C0A2  F080         	movff	I2cSlv_QueryI2cData@TxBuffer,I2cSlv_SendI2cMsg@TxBuffer
 25260  003A30  C0A3  F081         	movff	I2cSlv_QueryI2cData@TxBuffer+1,I2cSlv_SendI2cMsg@TxBuffer+1
 25261  003A34  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 25262  003A38  C0A4  F083         	movff	I2cSlv_QueryI2cData@TxLen,I2cSlv_SendI2cMsg@DataLenght
 25263  003A3C  EC0F  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 25264                           
 25265                           ;i2c_slv.c: 394: I2cOpState = REQ_DATA;
 25266  003A40  0E01               	movlw	1
 25267  003A42  0101               	movlb	1	; () banked
 25268  003A44  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25269                           
 25270                           ; BSR set to: 1
 25271                           ;i2c_slv.c: 396: Ret = OP_IN_PROGRESS;
 25272  003A46  0E00               	movlw	0
 25273  003A48  D04A               	goto	L56
 25274  003A4A                     
 25275                           ; BSR set to: 1
 25276                           ;i2c_slv.c: 401: if (OsTmr_Wait(&QueryTimer,500u) == DelayExpired)
 25277                           
 25278                           ; BSR set to: 1
 25279  003A4A  0ED5               	movlw	low I2cSlv_QueryI2cData@QueryTimer
 25280  003A4C  0100               	movlb	0	; () banked
 25281  003A4E  6F9B               	movwf	OsTmr_Wait@WaitTimer& (0+255),b
 25282  003A50  0E04               	movlw	high I2cSlv_QueryI2cData@QueryTimer
 25283  003A52  6F9C               	movwf	(OsTmr_Wait@WaitTimer+1)& (0+255),b
 25284  003A54  0EF4               	movlw	244
 25285  003A56  6F9D               	movwf	OsTmr_Wait@DelayMs& (0+255),b
 25286  003A58  0E01               	movlw	1
 25287  003A5A  6F9E               	movwf	(OsTmr_Wait@DelayMs+1)& (0+255),b
 25288  003A5C  0E00               	movlw	0
 25289  003A5E  6F9F               	movwf	(OsTmr_Wait@DelayMs+2)& (0+255),b
 25290  003A60  0E00               	movlw	0
 25291  003A62  6FA0               	movwf	(OsTmr_Wait@DelayMs+3)& (0+255),b
 25292  003A64  EC40  F029         	call	_OsTmr_Wait	;wreg free
 25293  003A68  06E8               	decf	wreg,f,c
 25294  003A6A  A4D8               	btfss	status,2,c
 25295  003A6C  D036               	goto	l1448
 25296                           
 25297                           ;i2c_slv.c: 402: {
 25298                           ;i2c_slv.c: 403: OsTmr_StartTimer(&TimeoutTimer,500u * 5u);
 25299  003A6E  0E4B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25300  003A70  0100               	movlb	0	; () banked
 25301  003A72  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 25302  003A74  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25303  003A76  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 25304  003A78  0EC4               	movlw	196
 25305  003A7A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 25306  003A7C  0E09               	movlw	9
 25307  003A7E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 25308  003A80  0E00               	movlw	0
 25309  003A82  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 25310  003A84  0E00               	movlw	0
 25311  003A86  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 25312  003A88  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 25313                           
 25314                           ;i2c_slv.c: 404: I2cSlv_ReceiveI2cMsg(RxBuffer, SlaveAddr, RxLen);
 25315  003A8C  C0A5  F080         	movff	I2cSlv_QueryI2cData@RxBuffer,I2cSlv_ReceiveI2cMsg@RxBuffer
 25316  003A90  C0A6  F081         	movff	I2cSlv_QueryI2cData@RxBuffer+1,I2cSlv_ReceiveI2cMsg@RxBuffer+1
 25317  003A94  C0A8  F082         	movff	I2cSlv_QueryI2cData@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 25318  003A98  C0A7  F083         	movff	I2cSlv_QueryI2cData@RxLen,I2cSlv_ReceiveI2cMsg@DataLenght
 25319  003A9C  ECB0  F030         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 25320                           
 25321                           ;i2c_slv.c: 405: I2cOpState = GET_DATA;
 25322  003AA0  0E02               	movlw	2
 25323  003AA2  0101               	movlb	1	; () banked
 25324  003AA4  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25325  003AA6  D019               	goto	l1448
 25326  003AA8                     
 25327                           ; BSR set to: 1
 25328                           ;i2c_slv.c: 413: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 25329                           
 25330                           ; BSR set to: 1
 25331  003AA8  ECF2  F033         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 25332  003AAC  06E8               	decf	wreg,f,c
 25333  003AAE  A4D8               	btfss	status,2,c
 25334  003AB0  D005               	goto	l1446
 25335                           
 25336                           ;i2c_slv.c: 414: {
 25337                           ;i2c_slv.c: 416: I2cOpState = ASK_DATA;
 25338  003AB2  0E00               	movlw	0
 25339  003AB4  0101               	movlb	1	; () banked
 25340  003AB6  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25341                           
 25342                           ;i2c_slv.c: 418: Ret = OP_COMPLETE;
 25343  003AB8  0E01               	movlw	1
 25344  003ABA  D011               	goto	L56
 25345  003ABC                     l1446:
 25346                           
 25347                           ;i2c_slv.c: 420: else
 25348                           ;i2c_slv.c: 421: {
 25349                           ;i2c_slv.c: 422: if (OsTmr_GetTimerStatus(&TimeoutTimer) == SwTimerExpired)
 25350                           
 25351                           ; BSR set to: 1
 25352  003ABC  0E4B               	movlw	low I2cSlv_QueryI2cData@TimeoutTimer
 25353  003ABE  0100               	movlb	0	; () banked
 25354  003AC0  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 25355  003AC2  0E03               	movlw	high I2cSlv_QueryI2cData@TimeoutTimer
 25356  003AC4  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 25357  003AC6  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25358  003ACA  06E8               	decf	wreg,f,c
 25359  003ACC  A4D8               	btfss	status,2,c
 25360  003ACE  D005               	goto	l1448
 25361                           
 25362                           ;i2c_slv.c: 423: {
 25363                           ;i2c_slv.c: 425: I2cOpState = ASK_DATA;
 25364  003AD0  0E00               	movlw	0
 25365  003AD2  0101               	movlb	1	; () banked
 25366  003AD4  6FE3               	movwf	I2cSlv_QueryI2cData@I2cOpState& (0+255),b
 25367                           
 25368                           ;i2c_slv.c: 427: Ret = OP_TIMEOUT;
 25369  003AD6  0E02               	movlw	2
 25370  003AD8  D002               	goto	L56
 25371  003ADA                     l1448:
 25372                           
 25373                           ;i2c_slv.c: 429: else
 25374                           ;i2c_slv.c: 430: {
 25375                           ;i2c_slv.c: 432: Ret = OP_IN_PROGRESS;
 25376                           
 25377                           ; BSR set to: 1
 25378  003ADA  0E00               	movlw	0
 25379  003ADC  0101               	movlb	1	; () banked
 25380  003ADE                     L56:
 25381  003ADE  6FE2               	movwf	I2cSlv_QueryI2cData@Ret& (0+255),b
 25382                           
 25383                           ; BSR set to: 1
 25384                           ;i2c_slv.c: 439: }
 25385                           
 25386                           ; BSR set to: 1
 25387                           ;i2c_slv.c: 438: break;
 25388                           
 25389                           ;i2c_slv.c: 437: default:
 25390                           
 25391                           ; BSR set to: 1
 25392                           ;i2c_slv.c: 433: }
 25393                           ;i2c_slv.c: 434: }
 25394                           ;i2c_slv.c: 435: break;
 25395                           
 25396                           ; BSR set to: 1
 25397  003AE0  D00B               	goto	l1442
 25398  003AE2                     l1440:
 25399                           
 25400                           ; BSR set to: 1
 25401  003AE2  0101               	movlb	1	; () banked
 25402  003AE4  51E3               	movf	I2cSlv_QueryI2cData@I2cOpState& (0+255),w,b
 25403                           
 25404                           ; Switch size 1, requested type "space"
 25405                           ; Number of cases is 3, Range of values is 0 to 2
 25406                           ; switch strategies available:
 25407                           ; Name         Instructions Cycles
 25408                           ; simple_byte           10     6 (average)
 25409                           ;	Chosen strategy is simple_byte
 25410  003AE6  0A00               	xorlw	0	; case 0
 25411  003AE8  B4D8               	btfsc	status,2,c
 25412  003AEA  D7A0               	goto	l1441
 25413  003AEC  0A01               	xorlw	1	; case 1
 25414  003AEE  B4D8               	btfsc	status,2,c
 25415  003AF0  D7AC               	goto	l1443
 25416  003AF2  0A03               	xorlw	3	; case 2
 25417  003AF4  B4D8               	btfsc	status,2,c
 25418  003AF6  D7D8               	goto	l1445
 25419  003AF8                     l1442:
 25420                           
 25421                           ; BSR set to: 1
 25422                           ;i2c_slv.c: 441: return Ret;
 25423                           
 25424                           ; BSR set to: 1
 25425  003AF8  51E2               	movf	I2cSlv_QueryI2cData@Ret& (0+255),w,b
 25426  003AFA  0012               	return	
 25427  003AFC                     __end_of_I2cSlv_QueryI2cData:
 25428                           	opt stack 0
 25429                           tosu	equ	0xFFF
 25430                           tosh	equ	0xFFE
 25431                           tosl	equ	0xFFD
 25432                           pclath	equ	0xFFA
 25433                           tblptru	equ	0xFF8
 25434                           tblptrh	equ	0xFF7
 25435                           tblptrl	equ	0xFF6
 25436                           tablat	equ	0xFF5
 25437                           prodh	equ	0xFF4
 25438                           prodl	equ	0xFF3
 25439                           intcon	equ	0xFF2
 25440                           intcon2	equ	0xFF1
 25441                           intcon3	equ	0xFF0
 25442                           indf0	equ	0xFEF
 25443                           postinc0	equ	0xFEE
 25444                           plusw0	equ	0xFEB
 25445                           fsr0h	equ	0xFEA
 25446                           fsr0l	equ	0xFE9
 25447                           wreg	equ	0xFE8
 25448                           indf1	equ	0xFE7
 25449                           postinc1	equ	0xFE6
 25450                           postdec1	equ	0xFE5
 25451                           fsr1h	equ	0xFE2
 25452                           fsr1l	equ	0xFE1
 25453                           indf2	equ	0xFDF
 25454                           postinc2	equ	0xFDE
 25455                           postdec2	equ	0xFDD
 25456                           plusw2	equ	0xFDB
 25457                           fsr2h	equ	0xFDA
 25458                           fsr2l	equ	0xFD9
 25459                           status	equ	0xFD8
 25460                           
 25461 ;; *************** function _OsTmr_Wait *****************
 25462 ;; Defined at:
 25463 ;;		line 154 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 25464 ;; Parameters:    Size  Location     Type
 25465 ;;  WaitTimer       2   59[BANK0 ] PTR struct _SwTimerType
 25466 ;;		 -> Terminal@SwTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 25467 ;;  DelayMs         4   61[BANK0 ] unsigned long 
 25468 ;; Auto vars:     Size  Location     Type
 25469 ;;  Ret             1   65[BANK0 ] enum E7749
 25470 ;; Return value:  Size  Location     Type
 25471 ;;                  1    wreg      enum E7749
 25472 ;; Registers used:
 25473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25474 ;; Tracked objects:
 25475 ;;		On entry : 0/0
 25476 ;;		On exit  : 0/0
 25477 ;;		Unchanged: 0/0
 25478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25482 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25483 ;;Total ram usage:        7 bytes
 25484 ;; Hardware stack levels used:    1
 25485 ;; Hardware stack levels required when called:   14
 25486 ;; This function calls:
 25487 ;;		_OsTmr_GetTimerStatus
 25488 ;;		_OsTmr_StartTimer
 25489 ;; This function is called by:
 25490 ;;		_I2cSlv_QueryI2cData
 25491 ;;		_Terminal
 25492 ;; This function uses a non-reentrant model
 25493 ;;
 25494                           
 25495                           	psect	text120
 25496  005280                     __ptext120:
 25497                           	opt stack 0
 25498  005280                     _OsTmr_Wait:
 25499                           	opt stack 11
 25500                           
 25501                           ;os_timers.c: 156: DelayStatusType Ret = DelayNotExpired;
 25502                           
 25503                           ; BSR set to: 1
 25504                           ;incstack = 0
 25505  005280  0E00               	movlw	0
 25506  005282  0100               	movlb	0	; () banked
 25507  005284  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25508                           
 25509                           ;os_timers.c: 158: switch (WaitTimer->WaitState)
 25510  005286  D02D               	goto	l855
 25511  005288                     
 25512                           ; BSR set to: 0
 25513                           ;os_timers.c: 162: OsTmr_StartTimer(WaitTimer,DelayMs);
 25514                           
 25515                           ; BSR set to: 0
 25516  005288  C09B  F081         	movff	OsTmr_Wait@WaitTimer,OsTmr_StartTimer@Timer
 25517  00528C  C09C  F082         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_StartTimer@Timer+1
 25518  005290  C09D  F083         	movff	OsTmr_Wait@DelayMs,OsTmr_StartTimer@Timeout
 25519  005294  C09E  F084         	movff	OsTmr_Wait@DelayMs+1,OsTmr_StartTimer@Timeout+1
 25520  005298  C09F  F085         	movff	OsTmr_Wait@DelayMs+2,OsTmr_StartTimer@Timeout+2
 25521  00529C  C0A0  F086         	movff	OsTmr_Wait@DelayMs+3,OsTmr_StartTimer@Timeout+3
 25522  0052A0  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 25523                           
 25524                           ;os_timers.c: 164: WaitTimer->WaitState = WtWait;
 25525  0052A4  0100               	movlb	0	; () banked
 25526  0052A6  EE20 F00A          	lfsr	2,10
 25527  0052AA  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25528  0052AC  26D9               	addwf	fsr2l,f,c
 25529  0052AE  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25530  0052B0  22DA               	addwfc	fsr2h,f,c
 25531  0052B2  0E01               	movlw	1
 25532  0052B4  6EDF               	movwf	indf2,c
 25533                           
 25534                           ;os_timers.c: 165: break;
 25535  0052B6  D022               	goto	l857
 25536  0052B8                     
 25537                           ; BSR set to: 0
 25538                           ;os_timers.c: 169: if (OsTmr_GetTimerStatus(WaitTimer) == SwTimerExpired)
 25539                           
 25540                           ; BSR set to: 0
 25541  0052B8  C09B  F095         	movff	OsTmr_Wait@WaitTimer,OsTmr_GetTimerStatus@Timer
 25542  0052BC  C09C  F096         	movff	OsTmr_Wait@WaitTimer+1,OsTmr_GetTimerStatus@Timer+1
 25543  0052C0  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 25544  0052C4  06E8               	decf	wreg,f,c
 25545  0052C6  A4D8               	btfss	status,2,c
 25546  0052C8  D019               	goto	l857
 25547                           
 25548                           ;os_timers.c: 170: {
 25549                           ;os_timers.c: 172: WaitTimer->WaitState = WtStartSwTimer;
 25550  0052CA  0100               	movlb	0	; () banked
 25551  0052CC  EE20 F00A          	lfsr	2,10
 25552  0052D0  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25553  0052D2  26D9               	addwf	fsr2l,f,c
 25554  0052D4  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25555  0052D6  22DA               	addwfc	fsr2h,f,c
 25556  0052D8  0E00               	movlw	0
 25557  0052DA  6EDF               	movwf	indf2,c
 25558                           
 25559                           ; BSR set to: 0
 25560                           ;os_timers.c: 174: Ret = DelayExpired;
 25561  0052DC  0E01               	movlw	1
 25562  0052DE  6FA1               	movwf	OsTmr_Wait@Ret& (0+255),b
 25563                           
 25564                           ; BSR set to: 0
 25565                           ;os_timers.c: 180: }
 25566                           
 25567                           ; BSR set to: 0
 25568                           ;os_timers.c: 179: break;
 25569                           
 25570                           ;os_timers.c: 178: default:
 25571                           
 25572                           ; BSR set to: 0
 25573                           ;os_timers.c: 175: }
 25574                           ;os_timers.c: 176: break;
 25575  0052E0  D00D               	goto	l857
 25576  0052E2                     l855:
 25577                           
 25578                           ; BSR set to: 0
 25579                           
 25580                           ; BSR set to: 0
 25581  0052E2  EE20 F00A          	lfsr	2,10
 25582  0052E6  519B               	movf	OsTmr_Wait@WaitTimer& (0+255),w,b
 25583  0052E8  26D9               	addwf	fsr2l,f,c
 25584  0052EA  519C               	movf	(OsTmr_Wait@WaitTimer+1)& (0+255),w,b
 25585  0052EC  22DA               	addwfc	fsr2h,f,c
 25586  0052EE  50DF               	movf	indf2,w,c
 25587                           
 25588                           ; Switch size 1, requested type "space"
 25589                           ; Number of cases is 2, Range of values is 0 to 1
 25590                           ; switch strategies available:
 25591                           ; Name         Instructions Cycles
 25592                           ; simple_byte            7     4 (average)
 25593                           ;	Chosen strategy is simple_byte
 25594  0052F0  0A00               	xorlw	0	; case 0
 25595  0052F2  B4D8               	btfsc	status,2,c
 25596  0052F4  D7C9               	goto	l856
 25597  0052F6  0A01               	xorlw	1	; case 1
 25598  0052F8  B4D8               	btfsc	status,2,c
 25599  0052FA  D7DE               	goto	l858
 25600  0052FC                     l857:
 25601                           
 25602                           ;os_timers.c: 182: return Ret;
 25603                           
 25604                           ; BSR set to: 0
 25605  0052FC  0100               	movlb	0	; () banked
 25606  0052FE  51A1               	movf	OsTmr_Wait@Ret& (0+255),w,b
 25607  005300  0012               	return	
 25608  005302                     __end_of_OsTmr_Wait:
 25609                           	opt stack 0
 25610                           tosu	equ	0xFFF
 25611                           tosh	equ	0xFFE
 25612                           tosl	equ	0xFFD
 25613                           pclath	equ	0xFFA
 25614                           tblptru	equ	0xFF8
 25615                           tblptrh	equ	0xFF7
 25616                           tblptrl	equ	0xFF6
 25617                           tablat	equ	0xFF5
 25618                           prodh	equ	0xFF4
 25619                           prodl	equ	0xFF3
 25620                           intcon	equ	0xFF2
 25621                           intcon2	equ	0xFF1
 25622                           intcon3	equ	0xFF0
 25623                           indf0	equ	0xFEF
 25624                           postinc0	equ	0xFEE
 25625                           plusw0	equ	0xFEB
 25626                           fsr0h	equ	0xFEA
 25627                           fsr0l	equ	0xFE9
 25628                           wreg	equ	0xFE8
 25629                           indf1	equ	0xFE7
 25630                           postinc1	equ	0xFE6
 25631                           postdec1	equ	0xFE5
 25632                           fsr1h	equ	0xFE2
 25633                           fsr1l	equ	0xFE1
 25634                           indf2	equ	0xFDF
 25635                           postinc2	equ	0xFDE
 25636                           postdec2	equ	0xFDD
 25637                           plusw2	equ	0xFDB
 25638                           fsr2h	equ	0xFDA
 25639                           fsr2l	equ	0xFD9
 25640                           status	equ	0xFD8
 25641                           
 25642 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 25643 ;; Defined at:
 25644 ;;		line 289 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;  RxBuffer        2   32[BANK0 ] PTR unsigned char 
 25647 ;;		 -> findEmptySpot@readBuffer(13), isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), memoryPreamble(4),
      + 
 25648 ;;		 -> Terminal@TermRxBuffer(50), 
 25649 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 25650 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 25651 ;; Auto vars:     Size  Location     Type
 25652 ;;  RxSts           1   36[BANK0 ] unsigned char 
 25653 ;; Return value:  Size  Location     Type
 25654 ;;                  1    wreg      unsigned char 
 25655 ;; Registers used:
 25656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25657 ;; Tracked objects:
 25658 ;;		On entry : 0/0
 25659 ;;		On exit  : 0/0
 25660 ;;		Unchanged: 0/0
 25661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25665 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25666 ;;Total ram usage:        5 bytes
 25667 ;; Hardware stack levels used:    1
 25668 ;; Hardware stack levels required when called:   12
 25669 ;; This function calls:
 25670 ;;		_GenerateEvt
 25671 ;; This function is called by:
 25672 ;;		_I2cSlv_QueryI2cData
 25673 ;;		_Terminal
 25674 ;; This function uses a non-reentrant model
 25675 ;;
 25676                           
 25677                           	psect	text121
 25678  006160                     __ptext121:
 25679                           	opt stack 0
 25680  006160                     _I2cSlv_ReceiveI2cMsg:
 25681                           	opt stack 13
 25682                           
 25683                           ;i2c_slv.c: 291: UINT8 RxSts = 0u;
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;incstack = 0
 25687  006160  0E00               	movlw	0
 25688  006162  0100               	movlb	0	; () banked
 25689  006164  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25690                           
 25691                           ; BSR set to: 0
 25692                           ;i2c_slv.c: 293: if (I2cComSts != RxInProgress)
 25693  006166  0E02               	movlw	2
 25694  006168  19CF               	xorwf	_I2cComSts& (0+255),w,b
 25695  00616A  B4D8               	btfsc	status,2,c
 25696  00616C  D016               	goto	l1417
 25697                           
 25698                           ; BSR set to: 0
 25699                           ;i2c_slv.c: 294: {
 25700                           ;i2c_slv.c: 296: I2cRxPacket.SlaveAddress = SlaveAddr;
 25701  00616E  C082  F39C         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 25702                           
 25703                           ; BSR set to: 0
 25704                           ;i2c_slv.c: 297: I2cRxPacket.ReadWrite = ((UINT8)(1));
 25705  006172  0E01               	movlw	1
 25706  006174  0103               	movlb	3	; () banked
 25707  006176  6F9D               	movwf	(_I2cRxPacket+1)& (0+255),b
 25708                           
 25709                           ; BSR set to: 3
 25710                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 25711  006178  C083  F3A0         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 25712                           
 25713                           ; BSR set to: 3
 25714                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 25715  00617C  C080  F39E         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 25716  006180  C081  F39F         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 25717                           
 25718                           ; BSR set to: 3
 25719                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 25720  006184  0ED8               	movlw	low _I2cReadDataEvt
 25721  006186  0100               	movlb	0	; () banked
 25722  006188  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 25723  00618A  0E00               	movlw	high _I2cReadDataEvt
 25724  00618C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25725  00618E  ECC8  F034         	call	_GenerateEvt	;wreg free
 25726                           
 25727                           ;i2c_slv.c: 304: RxSts = 1u;
 25728  006192  0E01               	movlw	1
 25729  006194  0100               	movlb	0	; () banked
 25730  006196  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25731                           
 25732                           ;i2c_slv.c: 305: }
 25733  006198  0012               	return	
 25734  00619A                     l1417:
 25735                           
 25736                           ; BSR set to: 0
 25737                           ;i2c_slv.c: 306: else
 25738                           ;i2c_slv.c: 307: {
 25739                           ;i2c_slv.c: 309: RxSts = 0u;
 25740                           
 25741                           ; BSR set to: 0
 25742  00619A  0E00               	movlw	0
 25743  00619C  6F84               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 25744                           
 25745                           ; BSR set to: 0
 25746  00619E  0012               	return	
 25747  0061A0                     __end_of_I2cSlv_ReceiveI2cMsg:
 25748                           	opt stack 0
 25749                           tosu	equ	0xFFF
 25750                           tosh	equ	0xFFE
 25751                           tosl	equ	0xFFD
 25752                           pclath	equ	0xFFA
 25753                           tblptru	equ	0xFF8
 25754                           tblptrh	equ	0xFF7
 25755                           tblptrl	equ	0xFF6
 25756                           tablat	equ	0xFF5
 25757                           prodh	equ	0xFF4
 25758                           prodl	equ	0xFF3
 25759                           intcon	equ	0xFF2
 25760                           intcon2	equ	0xFF1
 25761                           intcon3	equ	0xFF0
 25762                           indf0	equ	0xFEF
 25763                           postinc0	equ	0xFEE
 25764                           plusw0	equ	0xFEB
 25765                           fsr0h	equ	0xFEA
 25766                           fsr0l	equ	0xFE9
 25767                           wreg	equ	0xFE8
 25768                           indf1	equ	0xFE7
 25769                           postinc1	equ	0xFE6
 25770                           postdec1	equ	0xFE5
 25771                           fsr1h	equ	0xFE2
 25772                           fsr1l	equ	0xFE1
 25773                           indf2	equ	0xFDF
 25774                           postinc2	equ	0xFDE
 25775                           postdec2	equ	0xFDD
 25776                           plusw2	equ	0xFDB
 25777                           fsr2h	equ	0xFDA
 25778                           fsr2l	equ	0xFD9
 25779                           status	equ	0xFD8
 25780                           
 25781 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 25782 ;; Defined at:
 25783 ;;		line 324 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25784 ;; Parameters:    Size  Location     Type
 25785 ;;		None
 25786 ;; Auto vars:     Size  Location     Type
 25787 ;;  Result          1   33[BANK0 ] enum E8935
 25788 ;; Return value:  Size  Location     Type
 25789 ;;                  1    wreg      enum E8935
 25790 ;; Registers used:
 25791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25792 ;; Tracked objects:
 25793 ;;		On entry : 0/0
 25794 ;;		On exit  : 0/0
 25795 ;;		Unchanged: 0/0
 25796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25801 ;;Total ram usage:        1 bytes
 25802 ;; Hardware stack levels used:    1
 25803 ;; Hardware stack levels required when called:   12
 25804 ;; This function calls:
 25805 ;;		_ReceiveEvt
 25806 ;; This function is called by:
 25807 ;;		_I2cSlv_QueryI2cData
 25808 ;;		_Terminal
 25809 ;; This function uses a non-reentrant model
 25810 ;;
 25811                           
 25812                           	psect	text122
 25813  0067E4                     __ptext122:
 25814                           	opt stack 0
 25815  0067E4                     _I2cSlv_I2cReadMsgSts:
 25816                           	opt stack 13
 25817                           
 25818                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 25819                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 25820                           
 25821                           ; BSR set to: 0
 25822                           ;incstack = 0
 25823  0067E4  0EA1               	movlw	low (_I2cRxPacket+5)
 25824  0067E6  0100               	movlb	0	; () banked
 25825  0067E8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 25826  0067EA  0E03               	movlw	high (_I2cRxPacket+5)
 25827  0067EC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25828  0067EE  ECD7  F032         	call	_ReceiveEvt	;wreg free
 25829  0067F2  0900               	iorlw	0
 25830  0067F4  B4D8               	btfsc	status,2,c
 25831  0067F6  D002               	goto	l1422
 25832                           
 25833                           ;i2c_slv.c: 331: {
 25834                           ;i2c_slv.c: 332: Result = MessageReceived;
 25835  0067F8  0E01               	movlw	1
 25836  0067FA  D001               	goto	L57
 25837  0067FC                     l1422:
 25838                           
 25839                           ;i2c_slv.c: 334: else
 25840                           ;i2c_slv.c: 335: {
 25841                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 25842                           
 25843                           ; BSR set to: 0
 25844  0067FC  0E00               	movlw	0
 25845  0067FE                     L57:
 25846  0067FE  0100               	movlb	0	; () banked
 25847  006800  6F81               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 25848                           
 25849                           ; BSR set to: 0
 25850                           ;i2c_slv.c: 337: }
 25851                           ;i2c_slv.c: 339: return Result;
 25852  006802  5181               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 25853  006804  0012               	return	
 25854  006806                     __end_of_I2cSlv_I2cReadMsgSts:
 25855                           	opt stack 0
 25856                           tosu	equ	0xFFF
 25857                           tosh	equ	0xFFE
 25858                           tosl	equ	0xFFD
 25859                           pclath	equ	0xFFA
 25860                           tblptru	equ	0xFF8
 25861                           tblptrh	equ	0xFF7
 25862                           tblptrl	equ	0xFF6
 25863                           tablat	equ	0xFF5
 25864                           prodh	equ	0xFF4
 25865                           prodl	equ	0xFF3
 25866                           intcon	equ	0xFF2
 25867                           intcon2	equ	0xFF1
 25868                           intcon3	equ	0xFF0
 25869                           indf0	equ	0xFEF
 25870                           postinc0	equ	0xFEE
 25871                           plusw0	equ	0xFEB
 25872                           fsr0h	equ	0xFEA
 25873                           fsr0l	equ	0xFE9
 25874                           wreg	equ	0xFE8
 25875                           indf1	equ	0xFE7
 25876                           postinc1	equ	0xFE6
 25877                           postdec1	equ	0xFE5
 25878                           fsr1h	equ	0xFE2
 25879                           fsr1l	equ	0xFE1
 25880                           indf2	equ	0xFDF
 25881                           postinc2	equ	0xFDE
 25882                           postdec2	equ	0xFDD
 25883                           plusw2	equ	0xFDB
 25884                           fsr2h	equ	0xFDA
 25885                           fsr2l	equ	0xFD9
 25886                           status	equ	0xFD8
 25887                           
 25888 ;; *************** function _Led_SetLedBlinkTime *****************
 25889 ;; Defined at:
 25890 ;;		line 371 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 25891 ;; Parameters:    Size  Location     Type
 25892 ;;  Led             1    wreg     unsigned char 
 25893 ;;  OnTimeMs        2   29[BANK0 ] unsigned short 
 25894 ;;  OffTimeMs       2   31[BANK0 ] unsigned short 
 25895 ;; Auto vars:     Size  Location     Type
 25896 ;;  Led             1   33[BANK0 ] unsigned char 
 25897 ;; Return value:  Size  Location     Type
 25898 ;;                  1    wreg      void 
 25899 ;; Registers used:
 25900 ;;		wreg, status,2, status,0
 25901 ;; Tracked objects:
 25902 ;;		On entry : 0/0
 25903 ;;		On exit  : 0/0
 25904 ;;		Unchanged: 0/0
 25905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25909 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25910 ;;Total ram usage:        5 bytes
 25911 ;; Hardware stack levels used:    1
 25912 ;; Hardware stack levels required when called:   11
 25913 ;; This function calls:
 25914 ;;		Nothing
 25915 ;; This function is called by:
 25916 ;;		_MyApp_Task
 25917 ;; This function uses a non-reentrant model
 25918 ;;
 25919                           
 25920                           	psect	text123
 25921  005B78                     __ptext123:
 25922                           	opt stack 0
 25923  005B78                     _Led_SetLedBlinkTime:
 25924                           	opt stack 16
 25925                           
 25926                           ; BSR set to: 0
 25927                           ;incstack = 0
 25928                           ;Led_SetLedBlinkTime@Led stored from wreg
 25929  005B78  0100               	movlb	0	; () banked
 25930  005B7A  6F81               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 25931                           
 25932                           ;led.c: 374: switch (Led)
 25933  005B7C  D01B               	goto	l2150
 25934  005B7E                     l2151:
 25935                           
 25936                           ; BSR set to: 0
 25937                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 25938  005B7E  C07D  F376         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 25939  005B82  C07E  F377         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 25940                           
 25941                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 25942  005B86  C07F  F378         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 25943  005B8A  C080  F379         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 25944                           
 25945                           ;led.c: 379: break;
 25946  005B8E  0012               	return	
 25947  005B90                     l2153:
 25948                           
 25949                           ; BSR set to: 0
 25950                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 25951  005B90  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25952  005B94  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25953                           
 25954                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 25955  005B98  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25956  005B9C  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25957                           
 25958                           ;led.c: 384: break;
 25959  005BA0  0012               	return	
 25960  005BA2                     l2154:
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 25964  005BA2  C07D  F36D         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 25965  005BA6  C07E  F36E         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 25966                           
 25967                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 25968  005BAA  C07F  F36F         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 25969  005BAE  C080  F370         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 25970                           
 25971                           ; BSR set to: 0
 25972                           ;led.c: 393: }
 25973                           
 25974                           ; BSR set to: 0
 25975                           ;led.c: 392: break;
 25976                           
 25977                           ;led.c: 391: default:
 25978                           
 25979                           ;led.c: 389: break;
 25980  005BB2  0012               	return	
 25981  005BB4                     l2150:
 25982                           
 25983                           ; BSR set to: 0
 25984  005BB4  0100               	movlb	0	; () banked
 25985  005BB6  5181               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 25986                           
 25987                           ; Switch size 1, requested type "space"
 25988                           ; Number of cases is 3, Range of values is 1 to 3
 25989                           ; switch strategies available:
 25990                           ; Name         Instructions Cycles
 25991                           ; simple_byte           10     6 (average)
 25992                           ;	Chosen strategy is simple_byte
 25993  005BB8  0A01               	xorlw	1	; case 1
 25994  005BBA  B4D8               	btfsc	status,2,c
 25995  005BBC  D7E0               	goto	l2151
 25996  005BBE  0A03               	xorlw	3	; case 2
 25997  005BC0  B4D8               	btfsc	status,2,c
 25998  005BC2  D7E6               	goto	l2153
 25999  005BC4  0A01               	xorlw	1	; case 3
 26000  005BC6  A4D8               	btfss	status,2,c
 26001  005BC8  0012               	return	
 26002  005BCA  D7EB               	goto	l2154
 26003  005BCC                     __end_of_Led_SetLedBlinkTime:
 26004                           	opt stack 0
 26005                           tosu	equ	0xFFF
 26006                           tosh	equ	0xFFE
 26007                           tosl	equ	0xFFD
 26008                           pclath	equ	0xFFA
 26009                           tblptru	equ	0xFF8
 26010                           tblptrh	equ	0xFF7
 26011                           tblptrl	equ	0xFF6
 26012                           tablat	equ	0xFF5
 26013                           prodh	equ	0xFF4
 26014                           prodl	equ	0xFF3
 26015                           intcon	equ	0xFF2
 26016                           intcon2	equ	0xFF1
 26017                           intcon3	equ	0xFF0
 26018                           indf0	equ	0xFEF
 26019                           postinc0	equ	0xFEE
 26020                           plusw0	equ	0xFEB
 26021                           fsr0h	equ	0xFEA
 26022                           fsr0l	equ	0xFE9
 26023                           wreg	equ	0xFE8
 26024                           indf1	equ	0xFE7
 26025                           postinc1	equ	0xFE6
 26026                           postdec1	equ	0xFE5
 26027                           fsr1h	equ	0xFE2
 26028                           fsr1l	equ	0xFE1
 26029                           indf2	equ	0xFDF
 26030                           postinc2	equ	0xFDE
 26031                           postdec2	equ	0xFDD
 26032                           plusw2	equ	0xFDB
 26033                           fsr2h	equ	0xFDA
 26034                           fsr2l	equ	0xFD9
 26035                           status	equ	0xFD8
 26036                           
 26037 ;; *************** function _Eeprom_Reset *****************
 26038 ;; Defined at:
 26039 ;;		line 131 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/05_Eeprom/eeprom_if.c"
 26040 ;; Parameters:    Size  Location     Type
 26041 ;;		None
 26042 ;; Auto vars:     Size  Location     Type
 26043 ;;  SlaveAddress    1   37[BANK0 ] const unsigned char 
 26044 ;; Return value:  Size  Location     Type
 26045 ;;                  1    wreg      unsigned char 
 26046 ;; Registers used:
 26047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26048 ;; Tracked objects:
 26049 ;;		On entry : 0/0
 26050 ;;		On exit  : 0/0
 26051 ;;		Unchanged: 0/0
 26052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26057 ;;Total ram usage:        1 bytes
 26058 ;; Hardware stack levels used:    1
 26059 ;; Hardware stack levels required when called:   13
 26060 ;; This function calls:
 26061 ;;		_ClearBuffer
 26062 ;;		_I2cSlv_SendI2cMsg
 26063 ;; This function is called by:
 26064 ;;		_MyApp_Task
 26065 ;; This function uses a non-reentrant model
 26066 ;;
 26067                           
 26068                           	psect	text124
 26069  005F7E                     __ptext124:
 26070                           	opt stack 0
 26071  005F7E                     _Eeprom_Reset:
 26072                           	opt stack 14
 26073                           
 26074                           ;eeprom_if.c: 133: const UINT8 SlaveAddress = 0x50;
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;incstack = 0
 26078  005F7E  0E50               	movlw	80
 26079  005F80  0100               	movlb	0	; () banked
 26080  005F82  6F85               	movwf	Eeprom_Reset@SlaveAddress& (0+255),b
 26081                           
 26082                           ; BSR set to: 0
 26083                           ;eeprom_if.c: 134: static UINT8 memoryAddress = 0;
 26084                           ;eeprom_if.c: 136: EepromBuffer[0] = memoryAddress;
 26085  005F84  C0C6  F4BB         	movff	Eeprom_Reset@memoryAddress,_EepromBuffer
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;eeprom_if.c: 137: I2cSlv_SendI2cMsg(EepromBuffer, SlaveAddress, 15);
 26089  005F88  0EBB               	movlw	low _EepromBuffer
 26090  005F8A  6F80               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 26091  005F8C  0E04               	movlw	high _EepromBuffer
 26092  005F8E  6F81               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 26093  005F90  C085  F082         	movff	Eeprom_Reset@SlaveAddress,I2cSlv_SendI2cMsg@SlaveAddr
 26094  005F94  0E0F               	movlw	15
 26095  005F96  6F83               	movwf	I2cSlv_SendI2cMsg@DataLenght& (0+255),b
 26096  005F98  EC0F  F031         	call	_I2cSlv_SendI2cMsg	;wreg free
 26097                           
 26098                           ;eeprom_if.c: 139: memoryAddress += 16;
 26099  005F9C  0E10               	movlw	16
 26100  005F9E  0100               	movlb	0	; () banked
 26101  005FA0  27C6               	addwf	Eeprom_Reset@memoryAddress& (0+255),f,b
 26102                           
 26103                           ; BSR set to: 0
 26104                           ;eeprom_if.c: 140: if (memoryAddress >= 224)
 26105  005FA2  0EDF               	movlw	223
 26106  005FA4  65C6               	cpfsgt	Eeprom_Reset@memoryAddress& (0+255),b
 26107  005FA6  D00D               	goto	l2045
 26108                           
 26109                           ; BSR set to: 0
 26110                           ;eeprom_if.c: 141: {
 26111                           ;eeprom_if.c: 142: ClearBuffer(EepromBuffer, 15);
 26112  005FA8  0EBB               	movlw	low _EepromBuffer
 26113  005FAA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 26114  005FAC  0E04               	movlw	high _EepromBuffer
 26115  005FAE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 26116  005FB0  0E00               	movlw	0
 26117  005FB2  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 26118  005FB4  0E0F               	movlw	15
 26119  005FB6  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 26120  005FB8  ECF9  F031         	call	_ClearBuffer	;wreg free
 26121                           
 26122                           ;eeprom_if.c: 143: memoryAddress = 0;
 26123  005FBC  0E00               	movlw	0
 26124  005FBE  0100               	movlb	0	; () banked
 26125  005FC0  6FC6               	movwf	Eeprom_Reset@memoryAddress& (0+255),b
 26126  005FC2                     l2045:
 26127                           
 26128                           ; BSR set to: 0
 26129                           ;eeprom_if.c: 144: }
 26130                           ;eeprom_if.c: 145: return memoryAddress;
 26131                           
 26132                           ; BSR set to: 0
 26133  005FC2  51C6               	movf	Eeprom_Reset@memoryAddress& (0+255),w,b
 26134  005FC4  0012               	return	
 26135  005FC6                     __end_of_Eeprom_Reset:
 26136                           	opt stack 0
 26137                           tosu	equ	0xFFF
 26138                           tosh	equ	0xFFE
 26139                           tosl	equ	0xFFD
 26140                           pclath	equ	0xFFA
 26141                           tblptru	equ	0xFF8
 26142                           tblptrh	equ	0xFF7
 26143                           tblptrl	equ	0xFF6
 26144                           tablat	equ	0xFF5
 26145                           prodh	equ	0xFF4
 26146                           prodl	equ	0xFF3
 26147                           intcon	equ	0xFF2
 26148                           intcon2	equ	0xFF1
 26149                           intcon3	equ	0xFF0
 26150                           indf0	equ	0xFEF
 26151                           postinc0	equ	0xFEE
 26152                           plusw0	equ	0xFEB
 26153                           fsr0h	equ	0xFEA
 26154                           fsr0l	equ	0xFE9
 26155                           wreg	equ	0xFE8
 26156                           indf1	equ	0xFE7
 26157                           postinc1	equ	0xFE6
 26158                           postdec1	equ	0xFE5
 26159                           fsr1h	equ	0xFE2
 26160                           fsr1l	equ	0xFE1
 26161                           indf2	equ	0xFDF
 26162                           postinc2	equ	0xFDE
 26163                           postdec2	equ	0xFDD
 26164                           plusw2	equ	0xFDB
 26165                           fsr2h	equ	0xFDA
 26166                           fsr2l	equ	0xFD9
 26167                           status	equ	0xFD8
 26168                           
 26169 ;; *************** function _I2cSlv_SendI2cMsg *****************
 26170 ;; Defined at:
 26171 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 26172 ;; Parameters:    Size  Location     Type
 26173 ;;  TxBuffer        2   32[BANK0 ] PTR unsigned char 
 26174 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 26175 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 26176 ;;  SlaveAddr       1   34[BANK0 ] unsigned char 
 26177 ;;  DataLenght      1   35[BANK0 ] unsigned char 
 26178 ;; Auto vars:     Size  Location     Type
 26179 ;;  TxSts           1   36[BANK0 ] unsigned char 
 26180 ;; Return value:  Size  Location     Type
 26181 ;;                  1    wreg      unsigned char 
 26182 ;; Registers used:
 26183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26184 ;; Tracked objects:
 26185 ;;		On entry : 0/0
 26186 ;;		On exit  : 0/0
 26187 ;;		Unchanged: 0/0
 26188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26192 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26193 ;;Total ram usage:        5 bytes
 26194 ;; Hardware stack levels used:    1
 26195 ;; Hardware stack levels required when called:   12
 26196 ;; This function calls:
 26197 ;;		_GenerateEvt
 26198 ;; This function is called by:
 26199 ;;		_I2cSlv_QueryI2cData
 26200 ;;		_Eeprom_Write
 26201 ;;		_Eeprom_Reset
 26202 ;;		_Terminal
 26203 ;;		_triggerRelay
 26204 ;; This function uses a non-reentrant model
 26205 ;;
 26206                           
 26207                           	psect	text125
 26208  00621E                     __ptext125:
 26209                           	opt stack 0
 26210  00621E                     _I2cSlv_SendI2cMsg:
 26211                           	opt stack 13
 26212                           
 26213                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 26214                           
 26215                           ; BSR set to: 0
 26216                           ;incstack = 0
 26217  00621E  0E00               	movlw	0
 26218  006220  0100               	movlb	0	; () banked
 26219  006222  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 26223  006224  05CF               	decf	_I2cComSts& (0+255),w,b
 26224  006226  B4D8               	btfsc	status,2,c
 26225  006228  D015               	goto	l1412
 26226                           
 26227                           ; BSR set to: 0
 26228                           ;i2c_slv.c: 257: {
 26229                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 26230  00622A  C082  F3A2         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 26231                           
 26232                           ; BSR set to: 0
 26233                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 26234  00622E  0E00               	movlw	0
 26235  006230  0103               	movlb	3	; () banked
 26236  006232  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 26237                           
 26238                           ; BSR set to: 3
 26239                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 26240  006234  C083  F3A6         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 26241                           
 26242                           ; BSR set to: 3
 26243                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 26244  006238  C080  F3A4         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 26245  00623C  C081  F3A5         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 26246                           
 26247                           ; BSR set to: 3
 26248                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 26249  006240  0ED9               	movlw	low _I2cWriteDataEvt
 26250  006242  0100               	movlb	0	; () banked
 26251  006244  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26252  006246  0E00               	movlw	high _I2cWriteDataEvt
 26253  006248  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26254  00624A  ECC8  F034         	call	_GenerateEvt	;wreg free
 26255                           
 26256                           ;i2c_slv.c: 267: TxSts = 1u;
 26257  00624E  0E01               	movlw	1
 26258  006250  0100               	movlb	0	; () banked
 26259  006252  D001               	goto	L58
 26260  006254                     l1412:
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;i2c_slv.c: 269: else
 26264                           ;i2c_slv.c: 270: {
 26265                           ;i2c_slv.c: 272: TxSts = 0u;
 26266                           
 26267                           ; BSR set to: 0
 26268  006254  0E00               	movlw	0
 26269  006256                     L58:
 26270  006256  6F84               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 26271                           
 26272                           ; BSR set to: 0
 26273                           ;i2c_slv.c: 273: }
 26274                           ;i2c_slv.c: 275: return TxSts;
 26275  006258  5184               	movf	I2cSlv_SendI2cMsg@TxSts& (0+255),w,b
 26276  00625A  0012               	return	
 26277  00625C                     __end_of_I2cSlv_SendI2cMsg:
 26278                           	opt stack 0
 26279                           tosu	equ	0xFFF
 26280                           tosh	equ	0xFFE
 26281                           tosl	equ	0xFFD
 26282                           pclath	equ	0xFFA
 26283                           tblptru	equ	0xFF8
 26284                           tblptrh	equ	0xFF7
 26285                           tblptrl	equ	0xFF6
 26286                           tablat	equ	0xFF5
 26287                           prodh	equ	0xFF4
 26288                           prodl	equ	0xFF3
 26289                           intcon	equ	0xFF2
 26290                           intcon2	equ	0xFF1
 26291                           intcon3	equ	0xFF0
 26292                           indf0	equ	0xFEF
 26293                           postinc0	equ	0xFEE
 26294                           plusw0	equ	0xFEB
 26295                           fsr0h	equ	0xFEA
 26296                           fsr0l	equ	0xFE9
 26297                           wreg	equ	0xFE8
 26298                           indf1	equ	0xFE7
 26299                           postinc1	equ	0xFE6
 26300                           postdec1	equ	0xFE5
 26301                           fsr1h	equ	0xFE2
 26302                           fsr1l	equ	0xFE1
 26303                           indf2	equ	0xFDF
 26304                           postinc2	equ	0xFDE
 26305                           postdec2	equ	0xFDD
 26306                           plusw2	equ	0xFDB
 26307                           fsr2h	equ	0xFDA
 26308                           fsr2l	equ	0xFD9
 26309                           status	equ	0xFD8
 26310                           
 26311 ;; *************** function _UartSetConfig *****************
 26312 ;; Defined at:
 26313 ;;		line 190 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26314 ;; Parameters:    Size  Location     Type
 26315 ;;		None
 26316 ;; Auto vars:     Size  Location     Type
 26317 ;;		None
 26318 ;; Return value:  Size  Location     Type
 26319 ;;                  1    wreg      void 
 26320 ;; Registers used:
 26321 ;;		wreg, status,2
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/0
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26331 ;;Total ram usage:        0 bytes
 26332 ;; Hardware stack levels used:    1
 26333 ;; Hardware stack levels required when called:   11
 26334 ;; This function calls:
 26335 ;;		Nothing
 26336 ;; This function is called by:
 26337 ;;		_Mdm_MainTask
 26338 ;; This function uses a non-reentrant model
 26339 ;;
 26340                           
 26341                           	psect	text126
 26342  00591C                     __ptext126:
 26343                           	opt stack 0
 26344  00591C                     _UartSetConfig:
 26345                           	opt stack 16
 26346                           
 26347                           ;mdm_gsm_gprs.c: 192: UartConfig.UartEnable = ((UINT8)(1));
 26348                           
 26349                           ; BSR set to: 0
 26350                           ;incstack = 0
 26351  00591C  0E01               	movlw	1
 26352  00591E  0103               	movlb	3	; () banked
 26353  005920  6F1C               	movwf	_UartConfig& (0+255),b
 26354                           
 26355                           ;mdm_gsm_gprs.c: 193: UartConfig.UartMode = ((UINT8)(0));
 26356  005922  0E00               	movlw	0
 26357  005924  6F1D               	movwf	(_UartConfig+1)& (0+255),b
 26358                           
 26359                           ;mdm_gsm_gprs.c: 195: UartConfig.BaudRateMode = ((UINT8)(0));
 26360  005926  0E00               	movlw	0
 26361  005928  6F1E               	movwf	(_UartConfig+2)& (0+255),b
 26362                           
 26363                           ;mdm_gsm_gprs.c: 200: UartConfig.HighBaudMode = ((UINT8)(0));
 26364  00592A  0E00               	movlw	0
 26365  00592C  6F1F               	movwf	(_UartConfig+3)& (0+255),b
 26366                           
 26367                           ;mdm_gsm_gprs.c: 204: UartConfig.Tx9bitMode = ((UINT8)(0));
 26368  00592E  0E00               	movlw	0
 26369  005930  6F20               	movwf	(_UartConfig+4)& (0+255),b
 26370                           
 26371                           ;mdm_gsm_gprs.c: 205: UartConfig.Rx9bitMode = ((UINT8)(0));
 26372  005932  0E00               	movlw	0
 26373  005934  6F21               	movwf	(_UartConfig+5)& (0+255),b
 26374                           
 26375                           ;mdm_gsm_gprs.c: 206: UartConfig.TxEnable = ((UINT8)(1));
 26376  005936  0E01               	movlw	1
 26377  005938  6F22               	movwf	(_UartConfig+6)& (0+255),b
 26378                           
 26379                           ;mdm_gsm_gprs.c: 207: UartConfig.RxEnable = ((UINT8)(1));
 26380  00593A  0E01               	movlw	1
 26381  00593C  6F23               	movwf	(_UartConfig+7)& (0+255),b
 26382                           
 26383                           ;mdm_gsm_gprs.c: 208: UartConfig.SendBreakEnable = ((UINT8)(0));
 26384  00593E  0E00               	movlw	0
 26385  005940  6F24               	movwf	(_UartConfig+8)& (0+255),b
 26386                           
 26387                           ;mdm_gsm_gprs.c: 209: UartConfig.AutobaudEnable = ((UINT8)(0));
 26388  005942  0E00               	movlw	0
 26389  005944  6F25               	movwf	(_UartConfig+9)& (0+255),b
 26390                           
 26391                           ;mdm_gsm_gprs.c: 210: UartConfig.WakeUpEnable = ((UINT8)(0));
 26392  005946  0E00               	movlw	0
 26393  005948  6F26               	movwf	(_UartConfig+10)& (0+255),b
 26394                           
 26395                           ;mdm_gsm_gprs.c: 211: UartConfig.TxInterruptEnable = ((UINT8)(0));
 26396  00594A  0E00               	movlw	0
 26397  00594C  6F27               	movwf	(_UartConfig+11)& (0+255),b
 26398                           
 26399                           ;mdm_gsm_gprs.c: 212: UartConfig.RxInterruptEnable = ((UINT8)(1));
 26400  00594E  0E01               	movlw	1
 26401  005950  6F28               	movwf	(_UartConfig+12)& (0+255),b
 26402                           
 26403                           ;mdm_gsm_gprs.c: 213: UartConfig.McuBusClock = ((UINT32)(48000000));
 26404  005952  0E00               	movlw	0
 26405  005954  6F29               	movwf	(_UartConfig+13)& (0+255),b
 26406  005956  0E6C               	movlw	108
 26407  005958  6F2A               	movwf	(_UartConfig+14)& (0+255),b
 26408  00595A  0EDC               	movlw	220
 26409  00595C  6F2B               	movwf	(_UartConfig+15)& (0+255),b
 26410  00595E  0E02               	movlw	2
 26411  005960  6F2C               	movwf	(_UartConfig+16)& (0+255),b
 26412                           
 26413                           ;mdm_gsm_gprs.c: 215: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 26414  005962  0E80               	movlw	128
 26415  005964  6F2D               	movwf	(_UartConfig+17)& (0+255),b
 26416  005966  0E25               	movlw	37
 26417  005968  6F2E               	movwf	(_UartConfig+18)& (0+255),b
 26418  00596A  0E00               	movlw	0
 26419  00596C  6F2F               	movwf	(_UartConfig+19)& (0+255),b
 26420  00596E  0E00               	movlw	0
 26421  005970  6F30               	movwf	(_UartConfig+20)& (0+255),b
 26422                           
 26423                           ; BSR set to: 3
 26424  005972  0012               	return		;funcret
 26425  005974                     __end_of_UartSetConfig:
 26426                           	opt stack 0
 26427                           tosu	equ	0xFFF
 26428                           tosh	equ	0xFFE
 26429                           tosl	equ	0xFFD
 26430                           pclath	equ	0xFFA
 26431                           tblptru	equ	0xFF8
 26432                           tblptrh	equ	0xFF7
 26433                           tblptrl	equ	0xFF6
 26434                           tablat	equ	0xFF5
 26435                           prodh	equ	0xFF4
 26436                           prodl	equ	0xFF3
 26437                           intcon	equ	0xFF2
 26438                           intcon2	equ	0xFF1
 26439                           intcon3	equ	0xFF0
 26440                           indf0	equ	0xFEF
 26441                           postinc0	equ	0xFEE
 26442                           plusw0	equ	0xFEB
 26443                           fsr0h	equ	0xFEA
 26444                           fsr0l	equ	0xFE9
 26445                           wreg	equ	0xFE8
 26446                           indf1	equ	0xFE7
 26447                           postinc1	equ	0xFE6
 26448                           postdec1	equ	0xFE5
 26449                           fsr1h	equ	0xFE2
 26450                           fsr1l	equ	0xFE1
 26451                           indf2	equ	0xFDF
 26452                           postinc2	equ	0xFDE
 26453                           postdec2	equ	0xFDD
 26454                           plusw2	equ	0xFDB
 26455                           fsr2h	equ	0xFDA
 26456                           fsr2l	equ	0xFD9
 26457                           status	equ	0xFD8
 26458                           
 26459 ;; *************** function _TurnOnModem *****************
 26460 ;; Defined at:
 26461 ;;		line 376 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26462 ;; Parameters:    Size  Location     Type
 26463 ;;		None
 26464 ;; Auto vars:     Size  Location     Type
 26465 ;;		None
 26466 ;; Return value:  Size  Location     Type
 26467 ;;                  1    wreg      void 
 26468 ;; Registers used:
 26469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26470 ;; Tracked objects:
 26471 ;;		On entry : 0/0
 26472 ;;		On exit  : 0/0
 26473 ;;		Unchanged: 0/0
 26474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26479 ;;Total ram usage:        0 bytes
 26480 ;; Hardware stack levels used:    1
 26481 ;; Hardware stack levels required when called:   12
 26482 ;; This function calls:
 26483 ;;		_GenerateEvt
 26484 ;; This function is called by:
 26485 ;;		_Mdm_MainTask
 26486 ;; This function uses a non-reentrant model
 26487 ;;
 26488                           
 26489                           	psect	text127
 26490  005EEA                     __ptext127:
 26491                           	opt stack 0
 26492  005EEA                     _TurnOnModem:
 26493                           	opt stack 15
 26494                           
 26495                           ;mdm_gsm_gprs.c: 378: static TurnOnMdmStateType TurnOnMdmState = TurnOnDelay;
 26496                           ;mdm_gsm_gprs.c: 379: static UINT16 Counter = 0;
 26497                           ;mdm_gsm_gprs.c: 381: switch (TurnOnMdmState)
 26498                           
 26499                           ; BSR set to: 3
 26500                           ;incstack = 0
 26501  005EEA  D01B               	goto	l1009
 26502  005EEC                     
 26503                           ;mdm_gsm_gprs.c: 385: Counter++;
 26504  005EEC  0102               	movlb	2	; () banked
 26505  005EEE  4BDA               	infsnz	TurnOnModem@Counter& (0+255),f,b
 26506  005EF0  2BDB               	incf	(TurnOnModem@Counter+1)& (0+255),f,b
 26507                           
 26508                           ; BSR set to: 2
 26509                           ;mdm_gsm_gprs.c: 387: if (Counter >= (((UINT16)(3000))/((UINT16)(1))))
 26510  005EF2  0EB8               	movlw	184
 26511  005EF4  5DDA               	subwf	TurnOnModem@Counter& (0+255),w,b
 26512  005EF6  0E0B               	movlw	11
 26513  005EF8  59DB               	subwfb	(TurnOnModem@Counter+1)& (0+255),w,b
 26514  005EFA  A0D8               	btfss	status,0,c
 26515  005EFC  0012               	return	
 26516                           
 26517                           ; BSR set to: 2
 26518                           ;mdm_gsm_gprs.c: 388: {
 26519                           ;mdm_gsm_gprs.c: 390: TurnOnMdmState = TurnOnModuleReq;
 26520  005EFE  0E01               	movlw	1
 26521  005F00  0101               	movlb	1	; () banked
 26522  005F02  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26523                           
 26524                           ; BSR set to: 1
 26525                           ;mdm_gsm_gprs.c: 391: }
 26526                           ;mdm_gsm_gprs.c: 392: break;
 26527  005F04  0012               	return	
 26528  005F06                     
 26529                           ; BSR set to: 1
 26530                           ;mdm_gsm_gprs.c: 396: GenerateEvt(&MdmOnOffPulseRequest);
 26531                           
 26532                           ; BSR set to: 1
 26533  005F06  0EE2               	movlw	low _MdmOnOffPulseRequest
 26534  005F08  0100               	movlb	0	; () banked
 26535  005F0A  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 26536  005F0C  0E00               	movlw	high _MdmOnOffPulseRequest
 26537  005F0E  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 26538  005F10  ECC8  F034         	call	_GenerateEvt	;wreg free
 26539                           
 26540                           ;mdm_gsm_gprs.c: 398: MdmStatus = ModemOn;
 26541  005F14  0E01               	movlw	1
 26542  005F16  0100               	movlb	0	; () banked
 26543  005F18  6FD2               	movwf	_MdmStatus& (0+255),b
 26544                           
 26545                           ; BSR set to: 0
 26546                           ;mdm_gsm_gprs.c: 400: TurnOnMdmState = Stop;
 26547  005F1A  0E02               	movlw	2
 26548  005F1C  0101               	movlb	1	; () banked
 26549  005F1E  6FF2               	movwf	TurnOnModem@TurnOnMdmState& (0+255),b
 26550                           
 26551                           ; BSR set to: 1
 26552                           ;mdm_gsm_gprs.c: 408: }
 26553                           
 26554                           ; BSR set to: 1
 26555                           ;mdm_gsm_gprs.c: 407: break;
 26556                           
 26557                           ;mdm_gsm_gprs.c: 406: default:
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;mdm_gsm_gprs.c: 404: break;
 26561                           
 26562                           ;mdm_gsm_gprs.c: 403: case Stop:
 26563                           
 26564                           ;mdm_gsm_gprs.c: 401: break;
 26565  005F20  0012               	return	
 26566  005F22                     l1009:
 26567                           
 26568                           ; BSR set to: 1
 26569  005F22  0101               	movlb	1	; () banked
 26570  005F24  51F2               	movf	TurnOnModem@TurnOnMdmState& (0+255),w,b
 26571                           
 26572                           ; Switch size 1, requested type "space"
 26573                           ; Number of cases is 3, Range of values is 0 to 2
 26574                           ; switch strategies available:
 26575                           ; Name         Instructions Cycles
 26576                           ; simple_byte           10     6 (average)
 26577                           ;	Chosen strategy is simple_byte
 26578  005F26  0A00               	xorlw	0	; case 0
 26579  005F28  B4D8               	btfsc	status,2,c
 26580  005F2A  D7E0               	goto	l1010
 26581  005F2C  0A01               	xorlw	1	; case 1
 26582  005F2E  B4D8               	btfsc	status,2,c
 26583  005F30  D7EA               	goto	l1013
 26584  005F32  0A03               	xorlw	3	; case 2
 26585  005F34  0012               	return	
 26586  005F36                     __end_of_TurnOnModem:
 26587                           	opt stack 0
 26588                           tosu	equ	0xFFF
 26589                           tosh	equ	0xFFE
 26590                           tosl	equ	0xFFD
 26591                           pclath	equ	0xFFA
 26592                           tblptru	equ	0xFF8
 26593                           tblptrh	equ	0xFF7
 26594                           tblptrl	equ	0xFF6
 26595                           tablat	equ	0xFF5
 26596                           prodh	equ	0xFF4
 26597                           prodl	equ	0xFF3
 26598                           intcon	equ	0xFF2
 26599                           intcon2	equ	0xFF1
 26600                           intcon3	equ	0xFF0
 26601                           indf0	equ	0xFEF
 26602                           postinc0	equ	0xFEE
 26603                           plusw0	equ	0xFEB
 26604                           fsr0h	equ	0xFEA
 26605                           fsr0l	equ	0xFE9
 26606                           wreg	equ	0xFE8
 26607                           indf1	equ	0xFE7
 26608                           postinc1	equ	0xFE6
 26609                           postdec1	equ	0xFE5
 26610                           fsr1h	equ	0xFE2
 26611                           fsr1l	equ	0xFE1
 26612                           indf2	equ	0xFDF
 26613                           postinc2	equ	0xFDE
 26614                           postdec2	equ	0xFDD
 26615                           plusw2	equ	0xFDB
 26616                           fsr2h	equ	0xFDA
 26617                           fsr2l	equ	0xFD9
 26618                           status	equ	0xFD8
 26619                           
 26620 ;; *************** function _SendSmsSm *****************
 26621 ;; Defined at:
 26622 ;;		line 656 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 26623 ;; Parameters:    Size  Location     Type
 26624 ;;		None
 26625 ;; Auto vars:     Size  Location     Type
 26626 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 26627 ;; Return value:  Size  Location     Type
 26628 ;;                  1    wreg      void 
 26629 ;; Registers used:
 26630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26631 ;; Tracked objects:
 26632 ;;		On entry : 0/0
 26633 ;;		On exit  : 0/0
 26634 ;;		Unchanged: 0/0
 26635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26637 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26639 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26640 ;;Total ram usage:       52 bytes
 26641 ;; Hardware stack levels used:    1
 26642 ;; Hardware stack levels required when called:   14
 26643 ;; This function calls:
 26644 ;;		_OsTmr_GetTimerStatus
 26645 ;;		_OsTmr_StartTimer
 26646 ;;		_ReceiveEvt
 26647 ;;		_StringCopy
 26648 ;;		_Uart_WriteStringLen
 26649 ;; This function is called by:
 26650 ;;		_Mdm_MainTask
 26651 ;; This function uses a non-reentrant model
 26652 ;;
 26653                           
 26654                           	psect	text128
 26655  0019F2                     __ptext128:
 26656                           	opt stack 0
 26657  0019F2                     _SendSmsSm:
 26658                           	opt stack 13
 26659                           
 26660                           ;mdm_gsm_gprs.c: 658: static SendSms_StateType SendSms_State = SendSms_WaitEvt;
 26661                           ;mdm_gsm_gprs.c: 659: static SendSms_StateType SendSms_NextState = SendSms_WaitEvt;
 26662                           ;mdm_gsm_gprs.c: 660: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 26663                           ;mdm_gsm_gprs.c: 661: UINT8 UartMessage[50];
 26664                           ;mdm_gsm_gprs.c: 664: if (MdmStatus == ModemConfigured)
 26665                           
 26666                           ;incstack = 0
 26667  0019F2  0E03               	movlw	3
 26668  0019F4  0100               	movlb	0	; () banked
 26669  0019F6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 26670  0019F8  A4D8               	btfss	status,2,c
 26671  0019FA  0012               	return	
 26672  0019FC  D0C1               	goto	l1091
 26673  0019FE                     
 26674                           ;mdm_gsm_gprs.c: 670: if (ReceiveEvt(&SendSmsEvent))
 26675                           
 26676                           ; BSR set to: 0
 26677  0019FE  0EE1               	movlw	low _SendSmsEvent
 26678  001A00  0100               	movlb	0	; () banked
 26679  001A02  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26680  001A04  0E00               	movlw	high _SendSmsEvent
 26681  001A06  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26682  001A08  ECD7  F032         	call	_ReceiveEvt	;wreg free
 26683  001A0C  0900               	iorlw	0
 26684  001A0E  B4D8               	btfsc	status,2,c
 26685  001A10  0012               	return	
 26686                           
 26687                           ;mdm_gsm_gprs.c: 671: {
 26688                           ;mdm_gsm_gprs.c: 673: SendSms_State = SendSms_CmgsCmd;
 26689  001A12  0E01               	movlw	1
 26690  001A14  0101               	movlb	1	; () banked
 26691  001A16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26692                           
 26693                           ; BSR set to: 1
 26694                           ;mdm_gsm_gprs.c: 674: }
 26695                           ;mdm_gsm_gprs.c: 675: break;
 26696  001A18  0012               	return	
 26697  001A1A                     
 26698                           ; BSR set to: 1
 26699                           ;mdm_gsm_gprs.c: 679: StringCopy((void*)("AT+CMGS=\""),UartMessage,9);
 26700                           
 26701                           ; BSR set to: 1
 26702  001A1A  0ECE               	movlw	low STR_5
 26703  001A1C  0100               	movlb	0	; () banked
 26704  001A1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26705  001A20  0EFF               	movlw	high STR_5
 26706  001A22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26707  001A24  0E00               	movlw	low SendSmsSm@UartMessage
 26708  001A26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26709  001A28  0E01               	movlw	high SendSmsSm@UartMessage
 26710  001A2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26711  001A2C  0E00               	movlw	0
 26712  001A2E  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 26713  001A30  0E09               	movlw	9
 26714  001A32  6F89               	movwf	StringCopy@Len& (0+255),b
 26715  001A34  ECD1  F02B         	call	_StringCopy	;wreg free
 26716                           
 26717                           ;mdm_gsm_gprs.c: 681: StringCopy(PhoneNumber,&UartMessage[9],PhoneNumbLen);
 26718  001A38  0EA7               	movlw	low _PhoneNumber
 26719  001A3A  0100               	movlb	0	; () banked
 26720  001A3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26721  001A3E  0E04               	movlw	high _PhoneNumber
 26722  001A40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26723  001A42  0E09               	movlw	low (SendSmsSm@UartMessage+9)
 26724  001A44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26725  001A46  0E01               	movlw	high (SendSmsSm@UartMessage+9)
 26726  001A48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26727  001A4A  C0D3  F089         	movff	_PhoneNumbLen,StringCopy@Len
 26728  001A4E  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26729  001A50  ECD1  F02B         	call	_StringCopy	;wreg free
 26730                           
 26731                           ;mdm_gsm_gprs.c: 683: UartMessage[PhoneNumbLen + 9] = '"';
 26732  001A54  0100               	movlb	0	; () banked
 26733  001A56  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26734  001A58  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26735  001A5A  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26736  001A5C  0E09               	movlw	9
 26737  001A5E  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26738  001A60  0E00               	movlw	0
 26739  001A62  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26740  001A64  0E00               	movlw	low SendSmsSm@UartMessage
 26741  001A66  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26742  001A68  6ED9               	movwf	fsr2l,c
 26743  001A6A  0E01               	movlw	high SendSmsSm@UartMessage
 26744  001A6C  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26745  001A6E  6EDA               	movwf	fsr2h,c
 26746  001A70  0E22               	movlw	34
 26747  001A72  6EDF               	movwf	indf2,c
 26748                           
 26749                           ; BSR set to: 0
 26750                           ;mdm_gsm_gprs.c: 684: UartMessage[PhoneNumbLen + 10] = '\r';
 26751  001A74  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26752  001A76  6F9B               	movwf	??_SendSmsSm& (0+255),b
 26753  001A78  6B9C               	clrf	(??_SendSmsSm+1)& (0+255),b
 26754  001A7A  0E0A               	movlw	10
 26755  001A7C  279B               	addwf	??_SendSmsSm& (0+255),f,b
 26756  001A7E  0E00               	movlw	0
 26757  001A80  239C               	addwfc	(??_SendSmsSm+1)& (0+255),f,b
 26758  001A82  0E00               	movlw	low SendSmsSm@UartMessage
 26759  001A84  259B               	addwf	??_SendSmsSm& (0+255),w,b
 26760  001A86  6ED9               	movwf	fsr2l,c
 26761  001A88  0E01               	movlw	high SendSmsSm@UartMessage
 26762  001A8A  219C               	addwfc	(??_SendSmsSm+1)& (0+255),w,b
 26763  001A8C  6EDA               	movwf	fsr2h,c
 26764  001A8E  0E0D               	movlw	13
 26765  001A90  6EDF               	movwf	indf2,c
 26766                           
 26767                           ; BSR set to: 0
 26768                           ;mdm_gsm_gprs.c: 686: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(PhoneNumbLen + 11))
      +                          ;
 26769  001A92  0E00               	movlw	low SendSmsSm@UartMessage
 26770  001A94  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26771  001A96  0E01               	movlw	high SendSmsSm@UartMessage
 26772  001A98  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26773  001A9A  51D3               	movf	_PhoneNumbLen& (0+255),w,b
 26774  001A9C  0F0B               	addlw	11
 26775  001A9E  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26776  001AA0  0E01               	movlw	1
 26777  001AA2  ECD0  F030         	call	_Uart_WriteStringLen
 26778                           
 26779                           ;mdm_gsm_gprs.c: 688: OsTmr_StartTimer(&SwTimer,2500);
 26780  001AA6  0EEA               	movlw	low SendSmsSm@SwTimer
 26781  001AA8  0100               	movlb	0	; () banked
 26782  001AAA  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 26783  001AAC  0E03               	movlw	high SendSmsSm@SwTimer
 26784  001AAE  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 26785  001AB0  0EC4               	movlw	196
 26786  001AB2  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 26787  001AB4  0E09               	movlw	9
 26788  001AB6  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 26789  001AB8  0E00               	movlw	0
 26790  001ABA  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 26791  001ABC  0E00               	movlw	0
 26792  001ABE  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 26793  001AC0  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 26794                           
 26795                           ;mdm_gsm_gprs.c: 689: SendSms_State = SendSms_Delay;
 26796  001AC4  0E05               	movlw	5
 26797  001AC6  0101               	movlb	1	; () banked
 26798  001AC8  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26799                           
 26800                           ; BSR set to: 1
 26801                           ;mdm_gsm_gprs.c: 690: SendSms_NextState = SendSms_EnterCmd;
 26802  001ACA  0E02               	movlw	2
 26803  001ACC  6FED               	movwf	SendSmsSm@SendSms_NextState& (0+255),b
 26804                           
 26805                           ;mdm_gsm_gprs.c: 691: break;
 26806  001ACE  0012               	return	
 26807  001AD0                     
 26808                           ; BSR set to: 1
 26809                           ;mdm_gsm_gprs.c: 695: UartMessage[0] = '\n';
 26810                           
 26811                           ; BSR set to: 1
 26812  001AD0  0E0A               	movlw	10
 26813  001AD2  6F00               	movwf	SendSmsSm@UartMessage& (0+255),b
 26814                           
 26815                           ;mdm_gsm_gprs.c: 696: UartMessage[1] = '\r';
 26816  001AD4  0E0D               	movlw	13
 26817  001AD6  6F01               	movwf	(SendSmsSm@UartMessage+1)& (0+255),b
 26818                           
 26819                           ; BSR set to: 1
 26820                           ;mdm_gsm_gprs.c: 698: Uart_WriteStringLen(((UINT8)(1)), UartMessage,2);
 26821  001AD8  0E00               	movlw	low SendSmsSm@UartMessage
 26822  001ADA  0100               	movlb	0	; () banked
 26823  001ADC  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26824  001ADE  0E01               	movlw	high SendSmsSm@UartMessage
 26825  001AE0  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26826  001AE2  0E02               	movlw	2
 26827  001AE4  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26828  001AE6  0E01               	movlw	1
 26829  001AE8  ECD0  F030         	call	_Uart_WriteStringLen
 26830                           
 26831                           ;mdm_gsm_gprs.c: 700: SendSms_State = SendSms_WaitConf;
 26832  001AEC  0E03               	movlw	3
 26833  001AEE  0101               	movlb	1	; () banked
 26834  001AF0  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26835                           
 26836                           ;mdm_gsm_gprs.c: 701: break;
 26837  001AF2  0012               	return	
 26838  001AF4                     
 26839                           ; BSR set to: 1
 26840                           ;mdm_gsm_gprs.c: 705: if (ReceiveEvt(&NewStringReceived))
 26841                           
 26842                           ; BSR set to: 1
 26843  001AF4  0E3A               	movlw	low _NewStringReceived
 26844  001AF6  0100               	movlb	0	; () banked
 26845  001AF8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 26846  001AFA  0E00               	movlw	high _NewStringReceived
 26847  001AFC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 26848  001AFE  ECD7  F032         	call	_ReceiveEvt	;wreg free
 26849  001B02  0900               	iorlw	0
 26850  001B04  B4D8               	btfsc	status,2,c
 26851  001B06  0012               	return	
 26852                           
 26853                           ;mdm_gsm_gprs.c: 706: {
 26854                           ;mdm_gsm_gprs.c: 708: if (RxBuffer[0] == '>')
 26855  001B08  CC58  FFE8         	movff	_RxBuffer,wreg
 26856  001B0C  0A3E               	xorlw	62
 26857  001B0E  A4D8               	btfss	status,2,c
 26858  001B10  0012               	return	
 26859                           
 26860                           ;mdm_gsm_gprs.c: 709: {
 26861                           ;mdm_gsm_gprs.c: 711: SendSms_State = SendSms_SendSmsText;
 26862  001B12  0E04               	movlw	4
 26863  001B14  0101               	movlb	1	; () banked
 26864  001B16  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26865                           
 26866                           ; BSR set to: 1
 26867                           ;mdm_gsm_gprs.c: 712: }
 26868                           ;mdm_gsm_gprs.c: 713: }
 26869                           ;mdm_gsm_gprs.c: 714: break;
 26870                           
 26871                           ; BSR set to: 1
 26872  001B18  0012               	return	
 26873  001B1A                     
 26874                           ; BSR set to: 1
 26875                           ;mdm_gsm_gprs.c: 718: StringCopy(MessageText,UartMessage,SmsLen);
 26876                           
 26877                           ; BSR set to: 1
 26878  001B1A  0E72               	movlw	low _MessageText
 26879  001B1C  0100               	movlb	0	; () banked
 26880  001B1E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 26881  001B20  0E05               	movlw	high _MessageText
 26882  001B22  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 26883  001B24  0E00               	movlw	low SendSmsSm@UartMessage
 26884  001B26  6F87               	movwf	StringCopy@DestStr& (0+255),b
 26885  001B28  0E01               	movlw	high SendSmsSm@UartMessage
 26886  001B2A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 26887  001B2C  C0D4  F089         	movff	_SmsLen,StringCopy@Len
 26888  001B30  6B8A               	clrf	(StringCopy@Len+1)& (0+255),b
 26889  001B32  ECD1  F02B         	call	_StringCopy	;wreg free
 26890                           
 26891                           ;mdm_gsm_gprs.c: 720: UartMessage[SmsLen] = 0x1A;
 26892  001B36  0100               	movlb	0	; () banked
 26893  001B38  51D4               	movf	_SmsLen& (0+255),w,b
 26894  001B3A  0D01               	mullw	1
 26895  001B3C  0E00               	movlw	low SendSmsSm@UartMessage
 26896  001B3E  24F3               	addwf	prodl,w,c
 26897  001B40  6ED9               	movwf	fsr2l,c
 26898  001B42  0E01               	movlw	high SendSmsSm@UartMessage
 26899  001B44  20F4               	addwfc	prodh,w,c
 26900  001B46  6EDA               	movwf	fsr2h,c
 26901  001B48  0E1A               	movlw	26
 26902  001B4A  6EDF               	movwf	indf2,c
 26903                           
 26904                           ; BSR set to: 0
 26905                           ;mdm_gsm_gprs.c: 722: Uart_WriteStringLen(((UINT8)(1)), UartMessage,(SmsLen + 1));
 26906  001B4C  0E00               	movlw	low SendSmsSm@UartMessage
 26907  001B4E  6F80               	movwf	Uart_WriteStringLen@StringToWrite& (0+255),b
 26908  001B50  0E01               	movlw	high SendSmsSm@UartMessage
 26909  001B52  6F81               	movwf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),b
 26910  001B54  29D4               	incf	_SmsLen& (0+255),w,b
 26911  001B56  6F82               	movwf	Uart_WriteStringLen@Len& (0+255),b
 26912  001B58  0E01               	movlw	1
 26913  001B5A  ECD0  F030         	call	_Uart_WriteStringLen
 26914                           
 26915                           ;mdm_gsm_gprs.c: 724: SendSms_State = SendSms_WaitEvt;
 26916  001B5E  0E00               	movlw	0
 26917  001B60  0101               	movlb	1	; () banked
 26918  001B62  6FEE               	movwf	SendSmsSm@SendSms_State& (0+255),b
 26919                           
 26920                           ;mdm_gsm_gprs.c: 725: break;
 26921  001B64  0012               	return	
 26922  001B66                     
 26923                           ; BSR set to: 1
 26924                           ;mdm_gsm_gprs.c: 729: if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 26925                           
 26926                           ; BSR set to: 1
 26927  001B66  0EEA               	movlw	low SendSmsSm@SwTimer
 26928  001B68  0100               	movlb	0	; () banked
 26929  001B6A  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 26930  001B6C  0E03               	movlw	high SendSmsSm@SwTimer
 26931  001B6E  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 26932  001B70  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 26933  001B74  06E8               	decf	wreg,f,c
 26934  001B76  A4D8               	btfss	status,2,c
 26935  001B78  0012               	return	
 26936                           
 26937                           ;mdm_gsm_gprs.c: 730: {
 26938                           ;mdm_gsm_gprs.c: 732: SendSms_State = SendSms_NextState;
 26939  001B7A  C1ED  F1EE         	movff	SendSmsSm@SendSms_NextState,SendSmsSm@SendSms_State
 26940                           
 26941                           ;mdm_gsm_gprs.c: 738: }
 26942                           
 26943                           ;mdm_gsm_gprs.c: 737: break;
 26944                           
 26945                           ;mdm_gsm_gprs.c: 736: default:
 26946                           
 26947                           ;mdm_gsm_gprs.c: 733: }
 26948                           ;mdm_gsm_gprs.c: 734: break;
 26949  001B7E  0012               	return	
 26950  001B80                     l1091:
 26951  001B80  0101               	movlb	1	; () banked
 26952  001B82  51EE               	movf	SendSmsSm@SendSms_State& (0+255),w,b
 26953                           
 26954                           ; Switch size 1, requested type "space"
 26955                           ; Number of cases is 6, Range of values is 0 to 5
 26956                           ; switch strategies available:
 26957                           ; Name         Instructions Cycles
 26958                           ; simple_byte           19    10 (average)
 26959                           ;	Chosen strategy is simple_byte
 26960  001B84  0A00               	xorlw	0	; case 0
 26961  001B86  B4D8               	btfsc	status,2,c
 26962  001B88  D73A               	goto	l1092
 26963  001B8A  0A01               	xorlw	1	; case 1
 26964  001B8C  B4D8               	btfsc	status,2,c
 26965  001B8E  D745               	goto	l1095
 26966  001B90  0A03               	xorlw	3	; case 2
 26967  001B92  B4D8               	btfsc	status,2,c
 26968  001B94  D79D               	goto	l1096
 26969  001B96  0A01               	xorlw	1	; case 3
 26970  001B98  B4D8               	btfsc	status,2,c
 26971  001B9A  D7AC               	goto	l1097
 26972  001B9C  0A07               	xorlw	7	; case 4
 26973  001B9E  B4D8               	btfsc	status,2,c
 26974  001BA0  D7BC               	goto	l1100
 26975  001BA2  0A01               	xorlw	1	; case 5
 26976  001BA4  A4D8               	btfss	status,2,c
 26977                           
 26978                           ; BSR set to: 1
 26979  001BA6  0012               	return	
 26980  001BA8  D7DE               	goto	l1101
 26981  001BAA                     __end_of_SendSmsSm:
 26982                           	opt stack 0
 26983                           tosu	equ	0xFFF
 26984                           tosh	equ	0xFFE
 26985                           tosl	equ	0xFFD
 26986                           pclath	equ	0xFFA
 26987                           tblptru	equ	0xFF8
 26988                           tblptrh	equ	0xFF7
 26989                           tblptrl	equ	0xFF6
 26990                           tablat	equ	0xFF5
 26991                           prodh	equ	0xFF4
 26992                           prodl	equ	0xFF3
 26993                           intcon	equ	0xFF2
 26994                           intcon2	equ	0xFF1
 26995                           intcon3	equ	0xFF0
 26996                           indf0	equ	0xFEF
 26997                           postinc0	equ	0xFEE
 26998                           plusw0	equ	0xFEB
 26999                           fsr0h	equ	0xFEA
 27000                           fsr0l	equ	0xFE9
 27001                           wreg	equ	0xFE8
 27002                           indf1	equ	0xFE7
 27003                           postinc1	equ	0xFE6
 27004                           postdec1	equ	0xFE5
 27005                           fsr1h	equ	0xFE2
 27006                           fsr1l	equ	0xFE1
 27007                           indf2	equ	0xFDF
 27008                           postinc2	equ	0xFDE
 27009                           postdec2	equ	0xFDD
 27010                           plusw2	equ	0xFDB
 27011                           fsr2h	equ	0xFDA
 27012                           fsr2l	equ	0xFD9
 27013                           status	equ	0xFD8
 27014                           
 27015 ;; *************** function _Uart_WriteStringLen *****************
 27016 ;; Defined at:
 27017 ;;		line 542 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27018 ;; Parameters:    Size  Location     Type
 27019 ;;  Module          1    wreg     unsigned char 
 27020 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 27021 ;;		 -> GsmGprsTerminal@UartBuffer(200), SendSmsSm@UartMessage(50), 
 27022 ;;  Len             1   34[BANK0 ] unsigned char 
 27023 ;; Auto vars:     Size  Location     Type
 27024 ;;  Module          1   36[BANK0 ] unsigned char 
 27025 ;;  Index           1   35[BANK0 ] unsigned char 
 27026 ;; Return value:  Size  Location     Type
 27027 ;;                  1    wreg      void 
 27028 ;; Registers used:
 27029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27030 ;; Tracked objects:
 27031 ;;		On entry : 0/0
 27032 ;;		On exit  : 0/0
 27033 ;;		Unchanged: 0/0
 27034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27035 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27036 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27038 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27039 ;;Total ram usage:        5 bytes
 27040 ;; Hardware stack levels used:    1
 27041 ;; Hardware stack levels required when called:   12
 27042 ;; This function calls:
 27043 ;;		_UartTxBufferStatus
 27044 ;;		_UartWriteByte
 27045 ;; This function is called by:
 27046 ;;		_SendSmsSm
 27047 ;;		_GsmGprsTerminal
 27048 ;; This function uses a non-reentrant model
 27049 ;;
 27050                           
 27051                           	psect	text129
 27052  0061A0                     __ptext129:
 27053                           	opt stack 0
 27054  0061A0                     _Uart_WriteStringLen:
 27055                           	opt stack 14
 27056                           
 27057                           ;incstack = 0
 27058                           ;Uart_WriteStringLen@Module stored from wreg
 27059  0061A0  0100               	movlb	0	; () banked
 27060  0061A2  6F84               	movwf	Uart_WriteStringLen@Module& (0+255),b
 27061                           
 27062                           ;uart_drv.c: 544: UINT8 Index;
 27063                           ;uart_drv.c: 546: for (Index = 0; Index < Len; Index++)
 27064  0061A4  0E00               	movlw	0
 27065  0061A6  0100               	movlb	0	; () banked
 27066  0061A8  6F83               	movwf	Uart_WriteStringLen@Index& (0+255),b
 27067  0061AA  D015               	goto	l715
 27068  0061AC                     
 27069                           ; BSR set to: 0
 27070                           ;uart_drv.c: 547: {
 27071                           ;uart_drv.c: 549: UartWriteByte(Module, *StringToWrite);
 27072                           
 27073                           ; BSR set to: 0
 27074  0061AC  C080  FFD9         	movff	Uart_WriteStringLen@StringToWrite,fsr2l
 27075  0061B0  C081  FFDA         	movff	Uart_WriteStringLen@StringToWrite+1,fsr2h
 27076  0061B4  50DF               	movf	indf2,w,c
 27077  0061B6  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 27078  0061B8  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27079  0061BA  EC23  F034         	call	_UartWriteByte
 27080                           
 27081                           ;uart_drv.c: 551: StringToWrite++;
 27082  0061BE  0100               	movlb	0	; () banked
 27083  0061C0  4B80               	infsnz	Uart_WriteStringLen@StringToWrite& (0+255),f,b
 27084  0061C2  2B81               	incf	(Uart_WriteStringLen@StringToWrite+1)& (0+255),f,b
 27085  0061C4                     
 27086                           ; BSR set to: 0
 27087                           
 27088                           ; BSR set to: 0
 27089  0061C4  0100               	movlb	0	; () banked
 27090  0061C6  5184               	movf	Uart_WriteStringLen@Module& (0+255),w,b
 27091  0061C8  EC01  F02F         	call	_UartTxBufferStatus
 27092  0061CC  06E8               	decf	wreg,f,c
 27093  0061CE  B4D8               	btfsc	status,2,c
 27094  0061D0  D7F9               	goto	l718
 27095  0061D2  0100               	movlb	0	; () banked
 27096  0061D4  2B83               	incf	Uart_WriteStringLen@Index& (0+255),f,b
 27097  0061D6                     l715:
 27098                           
 27099                           ; BSR set to: 0
 27100                           
 27101                           ; BSR set to: 0
 27102  0061D6  5182               	movf	Uart_WriteStringLen@Len& (0+255),w,b
 27103  0061D8  5D83               	subwf	Uart_WriteStringLen@Index& (0+255),w,b
 27104  0061DA  B0D8               	btfsc	status,0,c
 27105  0061DC  0012               	return	
 27106  0061DE  D7E6               	goto	l716
 27107  0061E0                     __end_of_Uart_WriteStringLen:
 27108                           	opt stack 0
 27109                           tosu	equ	0xFFF
 27110                           tosh	equ	0xFFE
 27111                           tosl	equ	0xFFD
 27112                           pclath	equ	0xFFA
 27113                           tblptru	equ	0xFF8
 27114                           tblptrh	equ	0xFF7
 27115                           tblptrl	equ	0xFF6
 27116                           tablat	equ	0xFF5
 27117                           prodh	equ	0xFF4
 27118                           prodl	equ	0xFF3
 27119                           intcon	equ	0xFF2
 27120                           intcon2	equ	0xFF1
 27121                           intcon3	equ	0xFF0
 27122                           indf0	equ	0xFEF
 27123                           postinc0	equ	0xFEE
 27124                           plusw0	equ	0xFEB
 27125                           fsr0h	equ	0xFEA
 27126                           fsr0l	equ	0xFE9
 27127                           wreg	equ	0xFE8
 27128                           indf1	equ	0xFE7
 27129                           postinc1	equ	0xFE6
 27130                           postdec1	equ	0xFE5
 27131                           fsr1h	equ	0xFE2
 27132                           fsr1l	equ	0xFE1
 27133                           indf2	equ	0xFDF
 27134                           postinc2	equ	0xFDE
 27135                           postdec2	equ	0xFDD
 27136                           plusw2	equ	0xFDB
 27137                           fsr2h	equ	0xFDA
 27138                           fsr2l	equ	0xFD9
 27139                           status	equ	0xFD8
 27140                           
 27141 ;; *************** function _ModemEvtParser *****************
 27142 ;; Defined at:
 27143 ;;		line 499 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27144 ;; Parameters:    Size  Location     Type
 27145 ;;		None
 27146 ;; Auto vars:     Size  Location     Type
 27147 ;;  CallReadyStr   10   47[BANK0 ] unsigned char [10]
 27148 ;;  SmsString       5   62[BANK0 ] unsigned char [5]
 27149 ;;  ClipString      5   57[BANK0 ] unsigned char [5]
 27150 ;;  RingString      4   67[BANK0 ] unsigned char [4]
 27151 ;;  CompareIdx      1   72[BANK0 ] unsigned char 
 27152 ;;  Match           1   71[BANK0 ] unsigned char 
 27153 ;; Return value:  Size  Location     Type
 27154 ;;                  1    wreg      void 
 27155 ;; Registers used:
 27156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27157 ;; Tracked objects:
 27158 ;;		On entry : 0/0
 27159 ;;		On exit  : 0/0
 27160 ;;		Unchanged: 0/0
 27161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27163 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27165 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27166 ;;Total ram usage:       26 bytes
 27167 ;; Hardware stack levels used:    1
 27168 ;; Hardware stack levels required when called:   12
 27169 ;; This function calls:
 27170 ;;		_GenerateEvt
 27171 ;;		_ReceiveEvt
 27172 ;;		_StringCompare
 27173 ;;		_StringCopy
 27174 ;;		_Uart_ClearRxBuffer
 27175 ;; This function is called by:
 27176 ;;		_Mdm_MainTask
 27177 ;; This function uses a non-reentrant model
 27178 ;;
 27179                           
 27180                           	psect	text130
 27181  001D30                     __ptext130:
 27182                           	opt stack 0
 27183  001D30                     _ModemEvtParser:
 27184                           	opt stack 15
 27185                           
 27186                           ;mdm_gsm_gprs.c: 501: UINT8 RingString[] = {'R','I','N','G'};
 27187                           
 27188                           ; BSR set to: 0
 27189                           ;incstack = 0
 27190  001D30  C3CE  F0A3         	movff	ModemEvtParser@F9110,ModemEvtParser@RingString
 27191  001D34  C3CF  F0A4         	movff	ModemEvtParser@F9110+1,ModemEvtParser@RingString+1
 27192  001D38  C3D0  F0A5         	movff	ModemEvtParser@F9110+2,ModemEvtParser@RingString+2
 27193  001D3C  C3D1  F0A6         	movff	ModemEvtParser@F9110+3,ModemEvtParser@RingString+3
 27194                           
 27195                           ;mdm_gsm_gprs.c: 502: UINT8 ClipString[] = {'+','C','L','I', 'P'};
 27196  001D40  EE23  F0C9         	lfsr	2,ModemEvtParser@F9112
 27197  001D44  EE10  F099         	lfsr	1,ModemEvtParser@ClipString
 27198  001D48  0E04               	movlw	4
 27199  001D4A                     u14841:
 27200  001D4A  CFDB FFE3          	movff	plusw2,plusw1
 27201  001D4E  06E8               	decf	wreg,f,c
 27202  001D50  E2FC               	bc	u14841
 27203                           
 27204                           ;mdm_gsm_gprs.c: 503: UINT8 SmsString[] = {'+','C','M','T','I'};
 27205  001D52  EE23  F0C4         	lfsr	2,ModemEvtParser@F9114
 27206  001D56  EE10  F09E         	lfsr	1,ModemEvtParser@SmsString
 27207  001D5A  0E04               	movlw	4
 27208  001D5C                     u14851:
 27209  001D5C  CFDB FFE3          	movff	plusw2,plusw1
 27210  001D60  06E8               	decf	wreg,f,c
 27211  001D62  E2FC               	bc	u14851
 27212                           
 27213                           ;mdm_gsm_gprs.c: 504: UINT8 CallReadyString[] = {'C','a','l','l',' ','R','e','a','d','y'
      +                          };
 27214  001D64  EE24  F0E0         	lfsr	2,ModemEvtParser@F9116
 27215  001D68  EE10  F08F         	lfsr	1,ModemEvtParser@CallReadyString
 27216  001D6C  0E09               	movlw	9
 27217  001D6E                     u14861:
 27218  001D6E  CFDB FFE3          	movff	plusw2,plusw1
 27219  001D72  06E8               	decf	wreg,f,c
 27220  001D74  E2FC               	bc	u14861
 27221                           
 27222                           ;mdm_gsm_gprs.c: 505: UINT8 CompareIdx = 0;
 27223  001D76  0E00               	movlw	0
 27224  001D78  0100               	movlb	0	; () banked
 27225  001D7A  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27226                           
 27227                           ; BSR set to: 0
 27228                           ;mdm_gsm_gprs.c: 506: UINT8 Match = 0;
 27229  001D7C  0E00               	movlw	0
 27230  001D7E  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;mdm_gsm_gprs.c: 509: if (ReceiveEvt(&NewMdmEvtParserRequest))
 27234  001D80  0E39               	movlw	low _NewMdmEvtParserRequest
 27235  001D82  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27236  001D84  0E00               	movlw	high _NewMdmEvtParserRequest
 27237  001D86  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27238  001D88  ECD7  F032         	call	_ReceiveEvt	;wreg free
 27239  001D8C  0900               	iorlw	0
 27240  001D8E  B4D8               	btfsc	status,2,c
 27241  001D90  0012               	return	
 27242                           
 27243                           ;mdm_gsm_gprs.c: 510: {
 27244                           ;mdm_gsm_gprs.c: 511: for (CompareIdx = 0; CompareIdx < ((UINT8)(4)); CompareIdx++)
 27245  001D92  0E00               	movlw	0
 27246  001D94  0100               	movlb	0	; () banked
 27247  001D96  6FA8               	movwf	ModemEvtParser@CompareIdx& (0+255),b
 27248  001D98                     l15455:
 27249                           
 27250                           ; BSR set to: 0
 27251  001D98  0E03               	movlw	3
 27252  001D9A  65A8               	cpfsgt	ModemEvtParser@CompareIdx& (0+255),b
 27253  001D9C  D074               	goto	l1052
 27254  001D9E  D083               	goto	u14930
 27255  001DA0                     
 27256                           ; BSR set to: 0
 27257                           ;mdm_gsm_gprs.c: 517: if (StringCompare(RingString, RxBuffer, sizeof(RingString)))
 27258                           
 27259                           ; BSR set to: 0
 27260  001DA0  0EA3               	movlw	low ModemEvtParser@RingString
 27261  001DA2  6F7D               	movwf	StringCompare@String1& (0+255),b
 27262  001DA4  0E00               	movlw	high ModemEvtParser@RingString
 27263  001DA6  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27264  001DA8  0E58               	movlw	low _RxBuffer
 27265  001DAA  6F7F               	movwf	StringCompare@String2& (0+255),b
 27266  001DAC  0E0C               	movlw	high _RxBuffer
 27267  001DAE  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27268  001DB0  0E00               	movlw	0
 27269  001DB2  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27270  001DB4  0E04               	movlw	4
 27271  001DB6  6F81               	movwf	StringCompare@Len& (0+255),b
 27272  001DB8  EC39  F02E         	call	_StringCompare	;wreg free
 27273  001DBC  0900               	iorlw	0
 27274  001DBE  B4D8               	btfsc	status,2,c
 27275  001DC0  D06F               	goto	l1055
 27276                           
 27277                           ;mdm_gsm_gprs.c: 518: {
 27278                           ;mdm_gsm_gprs.c: 520: GenerateEvt(&RingEvent);
 27279  001DC2  0EE0               	movlw	low _RingEvent
 27280  001DC4  0100               	movlb	0	; () banked
 27281  001DC6  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27282  001DC8  0E00               	movlw	high _RingEvent
 27283  001DCA  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27284  001DCC  ECC8  F034         	call	_GenerateEvt	;wreg free
 27285  001DD0  D040               	goto	l15477
 27286  001DD2                     
 27287                           ; BSR set to: 0
 27288                           ;mdm_gsm_gprs.c: 528: if (StringCompare(ClipString, RxBuffer, sizeof(ClipString)))
 27289                           
 27290                           ; BSR set to: 0
 27291  001DD2  0E99               	movlw	low ModemEvtParser@ClipString
 27292  001DD4  6F7D               	movwf	StringCompare@String1& (0+255),b
 27293  001DD6  0E00               	movlw	high ModemEvtParser@ClipString
 27294  001DD8  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27295  001DDA  0E58               	movlw	low _RxBuffer
 27296  001DDC  6F7F               	movwf	StringCompare@String2& (0+255),b
 27297  001DDE  0E0C               	movlw	high _RxBuffer
 27298  001DE0  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27299  001DE2  0E00               	movlw	0
 27300  001DE4  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27301  001DE6  0E05               	movlw	5
 27302  001DE8  6F81               	movwf	StringCompare@Len& (0+255),b
 27303  001DEA  EC39  F02E         	call	_StringCompare	;wreg free
 27304  001DEE  0900               	iorlw	0
 27305  001DF0  B4D8               	btfsc	status,2,c
 27306  001DF2  D056               	goto	l1055
 27307                           
 27308                           ;mdm_gsm_gprs.c: 529: {
 27309                           ;mdm_gsm_gprs.c: 530: StringCopy(RxBuffer + 8, callerNumber, ((UINT8)(13)));
 27310  001DF4  0E60               	movlw	low (_RxBuffer+8)
 27311  001DF6  0100               	movlb	0	; () banked
 27312  001DF8  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27313  001DFA  0E0C               	movlw	high (_RxBuffer+8)
 27314  001DFC  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27315  001DFE  0E3E               	movlw	low _callerNumber
 27316  001E00  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27317  001E02  0E03               	movlw	high _callerNumber
 27318  001E04  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27319  001E06  0E00               	movlw	0
 27320  001E08  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 27321  001E0A  0E0D               	movlw	13
 27322  001E0C  6F89               	movwf	StringCopy@Len& (0+255),b
 27323  001E0E  ECD1  F02B         	call	_StringCopy	;wreg free
 27324                           
 27325                           ;mdm_gsm_gprs.c: 532: GenerateEvt(&ClipEvent);
 27326  001E12  0EDF               	movlw	low _ClipEvent
 27327  001E14  0100               	movlb	0	; () banked
 27328  001E16  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27329  001E18  0E00               	movlw	high _ClipEvent
 27330  001E1A  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27331  001E1C  ECC8  F034         	call	_GenerateEvt	;wreg free
 27332  001E20  D018               	goto	l15477
 27333  001E22                     
 27334                           ; BSR set to: 0
 27335                           ;mdm_gsm_gprs.c: 540: if (StringCompare(SmsString, RxBuffer, sizeof(SmsString)))
 27336                           
 27337                           ; BSR set to: 0
 27338  001E22  0E9E               	movlw	low ModemEvtParser@SmsString
 27339  001E24  6F7D               	movwf	StringCompare@String1& (0+255),b
 27340  001E26  0E00               	movlw	high ModemEvtParser@SmsString
 27341  001E28  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27342  001E2A  0E58               	movlw	low _RxBuffer
 27343  001E2C  6F7F               	movwf	StringCompare@String2& (0+255),b
 27344  001E2E  0E0C               	movlw	high _RxBuffer
 27345  001E30  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27346  001E32  0E00               	movlw	0
 27347  001E34  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27348  001E36  0E05               	movlw	5
 27349  001E38  6F81               	movwf	StringCompare@Len& (0+255),b
 27350  001E3A  EC39  F02E         	call	_StringCompare	;wreg free
 27351  001E3E  0900               	iorlw	0
 27352  001E40  B4D8               	btfsc	status,2,c
 27353  001E42  D02E               	goto	l1055
 27354                           
 27355                           ;mdm_gsm_gprs.c: 541: {
 27356                           ;mdm_gsm_gprs.c: 543: GenerateEvt(&SmsEvent);
 27357  001E44  0EDE               	movlw	low _SmsEvent
 27358  001E46  0100               	movlb	0	; () banked
 27359  001E48  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27360  001E4A  0E00               	movlw	high _SmsEvent
 27361  001E4C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27362  001E4E  ECC8  F034         	call	_GenerateEvt	;wreg free
 27363  001E52                     l15477:
 27364                           
 27365                           ;mdm_gsm_gprs.c: 545: Match = 1;
 27366  001E52  0E01               	movlw	1
 27367  001E54  0100               	movlb	0	; () banked
 27368  001E56  D015               	goto	L59
 27369  001E58                     
 27370                           ; BSR set to: 0
 27371                           ;mdm_gsm_gprs.c: 551: if (StringCompare(CallReadyString, RxBuffer, sizeof(CallReadyStrin
      +                          g)))
 27372                           
 27373                           ; BSR set to: 0
 27374  001E58  0E8F               	movlw	low ModemEvtParser@CallReadyString
 27375  001E5A  6F7D               	movwf	StringCompare@String1& (0+255),b
 27376  001E5C  0E00               	movlw	high ModemEvtParser@CallReadyString
 27377  001E5E  6F7E               	movwf	(StringCompare@String1+1)& (0+255),b
 27378  001E60  0E58               	movlw	low _RxBuffer
 27379  001E62  6F7F               	movwf	StringCompare@String2& (0+255),b
 27380  001E64  0E0C               	movlw	high _RxBuffer
 27381  001E66  6F80               	movwf	(StringCompare@String2+1)& (0+255),b
 27382  001E68  0E00               	movlw	0
 27383  001E6A  6F82               	movwf	(StringCompare@Len+1)& (0+255),b
 27384  001E6C  0E0A               	movlw	10
 27385  001E6E  6F81               	movwf	StringCompare@Len& (0+255),b
 27386  001E70  EC39  F02E         	call	_StringCompare	;wreg free
 27387  001E74  0900               	iorlw	0
 27388  001E76  B4D8               	btfsc	status,2,c
 27389  001E78  D013               	goto	l1055
 27390                           
 27391                           ;mdm_gsm_gprs.c: 552: {
 27392                           ;mdm_gsm_gprs.c: 554: MdmStatus = ModemReady;
 27393  001E7A  0E02               	movlw	2
 27394  001E7C  0100               	movlb	0	; () banked
 27395  001E7E  6FD2               	movwf	_MdmStatus& (0+255),b
 27396                           
 27397                           ;mdm_gsm_gprs.c: 556: Match = 1;
 27398  001E80  0E01               	movlw	1
 27399  001E82                     L59:
 27400  001E82  6FA7               	movwf	ModemEvtParser@Match& (0+255),b
 27401                           
 27402                           ; BSR set to: 0
 27403                           ;mdm_gsm_gprs.c: 562: }
 27404                           
 27405                           ; BSR set to: 0
 27406                           ;mdm_gsm_gprs.c: 561: break;
 27407                           
 27408                           ;mdm_gsm_gprs.c: 560: default:
 27409                           
 27410                           ; BSR set to: 0
 27411                           ;mdm_gsm_gprs.c: 557: }
 27412                           ;mdm_gsm_gprs.c: 558: break;
 27413  001E84  D00D               	goto	l1055
 27414  001E86                     l1052:
 27415                           
 27416                           ; BSR set to: 0
 27417                           
 27418                           ; BSR set to: 0
 27419  001E86  51A8               	movf	ModemEvtParser@CompareIdx& (0+255),w,b
 27420                           
 27421                           ; Switch size 1, requested type "space"
 27422                           ; Number of cases is 4, Range of values is 0 to 3
 27423                           ; switch strategies available:
 27424                           ; Name         Instructions Cycles
 27425                           ; simple_byte           13     7 (average)
 27426                           ;	Chosen strategy is simple_byte
 27427  001E88  0A00               	xorlw	0	; case 0
 27428  001E8A  B4D8               	btfsc	status,2,c
 27429  001E8C  D789               	goto	l1053
 27430  001E8E  0A01               	xorlw	1	; case 1
 27431  001E90  B4D8               	btfsc	status,2,c
 27432  001E92  D7C7               	goto	l1058
 27433  001E94  0A03               	xorlw	3	; case 2
 27434  001E96  B4D8               	btfsc	status,2,c
 27435  001E98  D7DF               	goto	l1060
 27436  001E9A  0A01               	xorlw	1	; case 3
 27437  001E9C  B4D8               	btfsc	status,2,c
 27438  001E9E  D799               	goto	l1056
 27439  001EA0                     l1055:
 27440                           
 27441                           ; BSR set to: 0
 27442  001EA0  0100               	movlb	0	; () banked
 27443  001EA2  2BA8               	incf	ModemEvtParser@CompareIdx& (0+255),f,b
 27444  001EA4  D779               	goto	l15455
 27445  001EA6                     u14930:
 27446                           
 27447                           ; BSR set to: 0
 27448                           ;mdm_gsm_gprs.c: 563: }
 27449                           ;mdm_gsm_gprs.c: 566: if (Match == 1)
 27450                           
 27451                           ; BSR set to: 0
 27452  001EA6  05A7               	decf	ModemEvtParser@Match& (0+255),w,b
 27453  001EA8  A4D8               	btfss	status,2,c
 27454  001EAA  0012               	return	
 27455                           
 27456                           ; BSR set to: 0
 27457                           ;mdm_gsm_gprs.c: 567: {
 27458                           ;mdm_gsm_gprs.c: 570: Uart_ClearRxBuffer();
 27459  001EAC  EC14  F032         	call	_Uart_ClearRxBuffer	;wreg free
 27460  001EB0  0012               	return	
 27461  001EB2                     __end_of_ModemEvtParser:
 27462                           	opt stack 0
 27463                           tosu	equ	0xFFF
 27464                           tosh	equ	0xFFE
 27465                           tosl	equ	0xFFD
 27466                           pclath	equ	0xFFA
 27467                           tblptru	equ	0xFF8
 27468                           tblptrh	equ	0xFF7
 27469                           tblptrl	equ	0xFF6
 27470                           tablat	equ	0xFF5
 27471                           prodh	equ	0xFF4
 27472                           prodl	equ	0xFF3
 27473                           intcon	equ	0xFF2
 27474                           intcon2	equ	0xFF1
 27475                           intcon3	equ	0xFF0
 27476                           indf0	equ	0xFEF
 27477                           postinc0	equ	0xFEE
 27478                           plusw0	equ	0xFEB
 27479                           fsr0h	equ	0xFEA
 27480                           fsr0l	equ	0xFE9
 27481                           wreg	equ	0xFE8
 27482                           indf1	equ	0xFE7
 27483                           postinc1	equ	0xFE6
 27484                           postdec1	equ	0xFE5
 27485                           plusw1	equ	0xFE3
 27486                           fsr1h	equ	0xFE2
 27487                           fsr1l	equ	0xFE1
 27488                           indf2	equ	0xFDF
 27489                           postinc2	equ	0xFDE
 27490                           postdec2	equ	0xFDD
 27491                           plusw2	equ	0xFDB
 27492                           fsr2h	equ	0xFDA
 27493                           fsr2l	equ	0xFD9
 27494                           status	equ	0xFD8
 27495                           
 27496 ;; *************** function _Uart_ClearRxBuffer *****************
 27497 ;; Defined at:
 27498 ;;		line 565 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 27499 ;; Parameters:    Size  Location     Type
 27500 ;;		None
 27501 ;; Auto vars:     Size  Location     Type
 27502 ;;  Index           2   29[BANK0 ] unsigned short 
 27503 ;; Return value:  Size  Location     Type
 27504 ;;                  1    wreg      void 
 27505 ;; Registers used:
 27506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27507 ;; Tracked objects:
 27508 ;;		On entry : 0/0
 27509 ;;		On exit  : 0/0
 27510 ;;		Unchanged: 0/0
 27511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27513 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27515 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27516 ;;Total ram usage:        2 bytes
 27517 ;; Hardware stack levels used:    1
 27518 ;; Hardware stack levels required when called:   11
 27519 ;; This function calls:
 27520 ;;		Nothing
 27521 ;; This function is called by:
 27522 ;;		_ModemEvtParser
 27523 ;; This function uses a non-reentrant model
 27524 ;;
 27525                           
 27526                           	psect	text131
 27527  006428                     __ptext131:
 27528                           	opt stack 0
 27529  006428                     _Uart_ClearRxBuffer:
 27530                           	opt stack 15
 27531                           
 27532                           ;uart_drv.c: 567: UINT16 Index = 0;
 27533                           
 27534                           ;incstack = 0
 27535  006428  0E00               	movlw	0
 27536  00642A  0100               	movlb	0	; () banked
 27537  00642C  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27538  00642E  0E00               	movlw	0
 27539  006430  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27540                           
 27541                           ;uart_drv.c: 570: for (Index = 0; Index <= (((UINT16)(400)) - 1); Index++)
 27542  006432  0E00               	movlw	0
 27543  006434  6F7E               	movwf	(Uart_ClearRxBuffer@Index+1)& (0+255),b
 27544  006436  0E00               	movlw	0
 27545  006438  6F7D               	movwf	Uart_ClearRxBuffer@Index& (0+255),b
 27546  00643A                     l14565:
 27547                           
 27548                           ; BSR set to: 0
 27549  00643A  0E90               	movlw	144
 27550  00643C  5D7D               	subwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27551  00643E  0E01               	movlw	1
 27552  006440  597E               	subwfb	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27553  006442  B0D8               	btfsc	status,0,c
 27554  006444  0012               	return	
 27555                           
 27556                           ; BSR set to: 0
 27557                           ;uart_drv.c: 571: {
 27558                           ;uart_drv.c: 572: RxBuffer[Index] = 0;
 27559                           
 27560                           ; BSR set to: 0
 27561                           
 27562                           ; BSR set to: 0
 27563  006446  0E58               	movlw	low _RxBuffer
 27564  006448  257D               	addwf	Uart_ClearRxBuffer@Index& (0+255),w,b
 27565  00644A  6ED9               	movwf	fsr2l,c
 27566  00644C  0E0C               	movlw	high _RxBuffer
 27567  00644E  217E               	addwfc	(Uart_ClearRxBuffer@Index+1)& (0+255),w,b
 27568  006450  6EDA               	movwf	fsr2h,c
 27569  006452  0E00               	movlw	0
 27570  006454  6EDF               	movwf	indf2,c
 27571                           
 27572                           ; BSR set to: 0
 27573  006456  4B7D               	infsnz	Uart_ClearRxBuffer@Index& (0+255),f,b
 27574  006458  2B7E               	incf	(Uart_ClearRxBuffer@Index+1)& (0+255),f,b
 27575  00645A  D7EF               	goto	l14565
 27576  00645C                     __end_of_Uart_ClearRxBuffer:
 27577                           	opt stack 0
 27578                           tosu	equ	0xFFF
 27579                           tosh	equ	0xFFE
 27580                           tosl	equ	0xFFD
 27581                           pclath	equ	0xFFA
 27582                           tblptru	equ	0xFF8
 27583                           tblptrh	equ	0xFF7
 27584                           tblptrl	equ	0xFF6
 27585                           tablat	equ	0xFF5
 27586                           prodh	equ	0xFF4
 27587                           prodl	equ	0xFF3
 27588                           intcon	equ	0xFF2
 27589                           intcon2	equ	0xFF1
 27590                           intcon3	equ	0xFF0
 27591                           indf0	equ	0xFEF
 27592                           postinc0	equ	0xFEE
 27593                           plusw0	equ	0xFEB
 27594                           fsr0h	equ	0xFEA
 27595                           fsr0l	equ	0xFE9
 27596                           wreg	equ	0xFE8
 27597                           indf1	equ	0xFE7
 27598                           postinc1	equ	0xFE6
 27599                           postdec1	equ	0xFE5
 27600                           plusw1	equ	0xFE3
 27601                           fsr1h	equ	0xFE2
 27602                           fsr1l	equ	0xFE1
 27603                           indf2	equ	0xFDF
 27604                           postinc2	equ	0xFDE
 27605                           postdec2	equ	0xFDD
 27606                           plusw2	equ	0xFDB
 27607                           fsr2h	equ	0xFDA
 27608                           fsr2l	equ	0xFD9
 27609                           status	equ	0xFD8
 27610                           
 27611 ;; *************** function _StringCompare *****************
 27612 ;; Defined at:
 27613 ;;		line 75 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 27614 ;; Parameters:    Size  Location     Type
 27615 ;;  String1         2   29[BANK0 ] PTR unsigned char 
 27616 ;;		 -> receivedNumber(13), smsText(20), ModemEvtParser@CallReadyString(10), ModemEvtParser@SmsString(5), 
 27617 ;;		 -> ModemEvtParser@ClipString(5), ModemEvtParser@RingString(4), 
 27618 ;;  String2         2   31[BANK0 ] PTR unsigned char 
 27619 ;;		 -> isMasterNumber@readBuffer(13), isNumberInMemory@readBuffer(13), parseCommand@resetCmd(4), parseCommand@deleteNum
      +berCmd(4), 
 27620 ;;		 -> parseCommand@addNumberCmd(4), RxBuffer(400), 
 27621 ;;  Len             2   33[BANK0 ] unsigned short 
 27622 ;; Auto vars:     Size  Location     Type
 27623 ;;  Index           2   38[BANK0 ] unsigned short 
 27624 ;;  Result          1   37[BANK0 ] unsigned char 
 27625 ;; Return value:  Size  Location     Type
 27626 ;;                  1    wreg      unsigned char 
 27627 ;; Registers used:
 27628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27629 ;; Tracked objects:
 27630 ;;		On entry : 0/0
 27631 ;;		On exit  : 0/0
 27632 ;;		Unchanged: 0/0
 27633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27634 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27635 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27637 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27638 ;;Total ram usage:       11 bytes
 27639 ;; Hardware stack levels used:    1
 27640 ;; Hardware stack levels required when called:   11
 27641 ;; This function calls:
 27642 ;;		Nothing
 27643 ;; This function is called by:
 27644 ;;		_ModemEvtParser
 27645 ;;		_parseCommand
 27646 ;;		_isNumberInMemory
 27647 ;;		_isMasterNumber
 27648 ;; This function uses a non-reentrant model
 27649 ;;
 27650                           
 27651                           	psect	text132
 27652  005C72                     __ptext132:
 27653                           	opt stack 0
 27654  005C72                     _StringCompare:
 27655                           	opt stack 14
 27656                           
 27657                           ;sf.c: 77: UINT16 Index = 0;
 27658                           
 27659                           ; BSR set to: 0
 27660                           ;incstack = 0
 27661  005C72  0E00               	movlw	0
 27662  005C74  0100               	movlb	0	; () banked
 27663  005C76  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27664  005C78  0E00               	movlw	0
 27665  005C7A  6F86               	movwf	StringCompare@Index& (0+255),b
 27666                           
 27667                           ;sf.c: 78: UINT8 Result = 1;
 27668  005C7C  0E01               	movlw	1
 27669  005C7E  6F85               	movwf	StringCompare@Result& (0+255),b
 27670                           
 27671                           ;sf.c: 81: for (Index = 0; Index < Len; Index++)
 27672  005C80  0E00               	movlw	0
 27673  005C82  6F87               	movwf	(StringCompare@Index+1)& (0+255),b
 27674  005C84  0E00               	movlw	0
 27675  005C86  6F86               	movwf	StringCompare@Index& (0+255),b
 27676  005C88  D015               	goto	l2248
 27677  005C8A                     
 27678                           ; BSR set to: 0
 27679                           ;sf.c: 82: {
 27680                           ;sf.c: 83: if (String1[Index] != String2[Index])
 27681                           
 27682                           ; BSR set to: 0
 27683  005C8A  5186               	movf	StringCompare@Index& (0+255),w,b
 27684  005C8C  257F               	addwf	StringCompare@String2& (0+255),w,b
 27685  005C8E  6ED9               	movwf	fsr2l,c
 27686  005C90  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27687  005C92  2180               	addwfc	(StringCompare@String2+1)& (0+255),w,b
 27688  005C94  6EDA               	movwf	fsr2h,c
 27689  005C96  5186               	movf	StringCompare@Index& (0+255),w,b
 27690  005C98  257D               	addwf	StringCompare@String1& (0+255),w,b
 27691  005C9A  6EE1               	movwf	fsr1l,c
 27692  005C9C  5187               	movf	(StringCompare@Index+1)& (0+255),w,b
 27693  005C9E  217E               	addwfc	(StringCompare@String1+1)& (0+255),w,b
 27694  005CA0  6EE2               	movwf	fsr1h,c
 27695  005CA2  50DE               	movf	postinc2,w,c
 27696  005CA4  18E6               	xorwf	postinc1,w,c
 27697  005CA6  B4D8               	btfsc	status,2,c
 27698  005CA8  D003               	goto	l2250
 27699                           
 27700                           ; BSR set to: 0
 27701                           ;sf.c: 84: {
 27702                           ;sf.c: 85: Result = 0;
 27703  005CAA  0E00               	movlw	0
 27704  005CAC  6F85               	movwf	StringCompare@Result& (0+255),b
 27705                           
 27706                           ;sf.c: 86: break;
 27707  005CAE  D008               	goto	u12710
 27708  005CB0                     l2250:
 27709                           
 27710                           ; BSR set to: 0
 27711                           
 27712                           ; BSR set to: 0
 27713  005CB0  4B86               	infsnz	StringCompare@Index& (0+255),f,b
 27714  005CB2  2B87               	incf	(StringCompare@Index+1)& (0+255),f,b
 27715  005CB4                     l2248:
 27716                           
 27717                           ; BSR set to: 0
 27718                           
 27719                           ; BSR set to: 0
 27720  005CB4  5181               	movf	StringCompare@Len& (0+255),w,b
 27721  005CB6  5D86               	subwf	StringCompare@Index& (0+255),w,b
 27722  005CB8  5182               	movf	(StringCompare@Len+1)& (0+255),w,b
 27723  005CBA  5987               	subwfb	(StringCompare@Index+1)& (0+255),w,b
 27724  005CBC  A0D8               	btfss	status,0,c
 27725  005CBE  D7E5               	goto	l2249
 27726  005CC0                     u12710:
 27727                           
 27728                           ; BSR set to: 0
 27729                           ;sf.c: 87: }
 27730                           ;sf.c: 88: }
 27731                           ;sf.c: 91: return Result;
 27732                           
 27733                           ; BSR set to: 0
 27734  005CC0  5185               	movf	StringCompare@Result& (0+255),w,b
 27735  005CC2  0012               	return	
 27736  005CC4                     __end_of_StringCompare:
 27737                           	opt stack 0
 27738                           tosu	equ	0xFFF
 27739                           tosh	equ	0xFFE
 27740                           tosl	equ	0xFFD
 27741                           pclath	equ	0xFFA
 27742                           tblptru	equ	0xFF8
 27743                           tblptrh	equ	0xFF7
 27744                           tblptrl	equ	0xFF6
 27745                           tablat	equ	0xFF5
 27746                           prodh	equ	0xFF4
 27747                           prodl	equ	0xFF3
 27748                           intcon	equ	0xFF2
 27749                           intcon2	equ	0xFF1
 27750                           intcon3	equ	0xFF0
 27751                           indf0	equ	0xFEF
 27752                           postinc0	equ	0xFEE
 27753                           plusw0	equ	0xFEB
 27754                           fsr0h	equ	0xFEA
 27755                           fsr0l	equ	0xFE9
 27756                           wreg	equ	0xFE8
 27757                           indf1	equ	0xFE7
 27758                           postinc1	equ	0xFE6
 27759                           postdec1	equ	0xFE5
 27760                           plusw1	equ	0xFE3
 27761                           fsr1h	equ	0xFE2
 27762                           fsr1l	equ	0xFE1
 27763                           indf2	equ	0xFDF
 27764                           postinc2	equ	0xFDE
 27765                           postdec2	equ	0xFDD
 27766                           plusw2	equ	0xFDB
 27767                           fsr2h	equ	0xFDA
 27768                           fsr2l	equ	0xFD9
 27769                           status	equ	0xFD8
 27770                           
 27771 ;; *************** function _GetSmsSm *****************
 27772 ;; Defined at:
 27773 ;;		line 584 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 27774 ;; Parameters:    Size  Location     Type
 27775 ;;		None
 27776 ;; Auto vars:     Size  Location     Type
 27777 ;;		None
 27778 ;; Return value:  Size  Location     Type
 27779 ;;                  1    wreg      void 
 27780 ;; Registers used:
 27781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27782 ;; Tracked objects:
 27783 ;;		On entry : 0/0
 27784 ;;		On exit  : 0/0
 27785 ;;		Unchanged: 0/0
 27786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27791 ;;Total ram usage:        0 bytes
 27792 ;; Hardware stack levels used:    1
 27793 ;; Hardware stack levels required when called:   13
 27794 ;; This function calls:
 27795 ;;		_ClearBuffer
 27796 ;;		_GenerateEvt
 27797 ;;		_ReceiveEvt
 27798 ;;		_StringCopy
 27799 ;;		_Uart_WriteConstString
 27800 ;; This function is called by:
 27801 ;;		_Mdm_MainTask
 27802 ;; This function uses a non-reentrant model
 27803 ;;
 27804                           
 27805                           	psect	text133
 27806  002AA2                     __ptext133:
 27807                           	opt stack 0
 27808  002AA2                     _GetSmsSm:
 27809                           	opt stack 14
 27810                           
 27811                           ;mdm_gsm_gprs.c: 586: static GetSmsStateType GetSmsState = GetSms_CheckReq;
 27812                           ;mdm_gsm_gprs.c: 589: if (MdmStatus == ModemConfigured)
 27813                           
 27814                           ; BSR set to: 0
 27815                           ;incstack = 0
 27816  002AA2  0E03               	movlw	3
 27817  002AA4  0100               	movlb	0	; () banked
 27818  002AA6  19D2               	xorwf	_MdmStatus& (0+255),w,b
 27819  002AA8  A4D8               	btfss	status,2,c
 27820  002AAA  0012               	return	
 27821  002AAC  D084               	goto	l1070
 27822  002AAE                     
 27823                           ;mdm_gsm_gprs.c: 595: if (ReceiveEvt(&GetSmsText))
 27824                           
 27825                           ; BSR set to: 0
 27826  002AAE  0EDD               	movlw	low _GetSmsText
 27827  002AB0  0100               	movlb	0	; () banked
 27828  002AB2  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27829  002AB4  0E00               	movlw	high _GetSmsText
 27830  002AB6  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27831  002AB8  ECD7  F032         	call	_ReceiveEvt	;wreg free
 27832  002ABC  0900               	iorlw	0
 27833  002ABE  B4D8               	btfsc	status,2,c
 27834  002AC0  0012               	return	
 27835                           
 27836                           ;mdm_gsm_gprs.c: 596: {
 27837                           ;mdm_gsm_gprs.c: 598: GetSmsState = GetSms_SendAtCmd;
 27838  002AC2  0E01               	movlw	1
 27839  002AC4  0101               	movlb	1	; () banked
 27840  002AC6  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27841                           
 27842                           ; BSR set to: 1
 27843                           ;mdm_gsm_gprs.c: 599: }
 27844                           ;mdm_gsm_gprs.c: 600: break;
 27845  002AC8  0012               	return	
 27846  002ACA                     
 27847                           ; BSR set to: 1
 27848                           ;mdm_gsm_gprs.c: 604: Uart_WriteConstString(1,"AT+CMGR=1\r\n");
 27849                           
 27850                           ; BSR set to: 1
 27851  002ACA  0EC2               	movlw	low STR_4
 27852  002ACC  0100               	movlb	0	; () banked
 27853  002ACE  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 27854  002AD0  0EFF               	movlw	high STR_4
 27855  002AD2  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 27856  002AD4  0E01               	movlw	1
 27857  002AD6  EC8E  F030         	call	_Uart_WriteConstString
 27858                           
 27859                           ;mdm_gsm_gprs.c: 606: GetSmsState = GetSms_StoreHeader;
 27860  002ADA  0E02               	movlw	2
 27861  002ADC  0101               	movlb	1	; () banked
 27862  002ADE  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27863                           
 27864                           ;mdm_gsm_gprs.c: 607: break;
 27865  002AE0  0012               	return	
 27866  002AE2                     
 27867                           ; BSR set to: 1
 27868                           ;mdm_gsm_gprs.c: 611: if (ReceiveEvt(&NewStringReceived))
 27869                           
 27870                           ; BSR set to: 1
 27871  002AE2  0E3A               	movlw	low _NewStringReceived
 27872  002AE4  0100               	movlb	0	; () banked
 27873  002AE6  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27874  002AE8  0E00               	movlw	high _NewStringReceived
 27875  002AEA  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27876  002AEC  ECD7  F032         	call	_ReceiveEvt	;wreg free
 27877  002AF0  0900               	iorlw	0
 27878  002AF2  B4D8               	btfsc	status,2,c
 27879  002AF4  0012               	return	
 27880                           
 27881                           ;mdm_gsm_gprs.c: 612: {
 27882                           ;mdm_gsm_gprs.c: 613: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'C') && (RxBuffer[2] =
      +                          = 'M'))
 27883  002AF6  CC58  FFE8         	movff	_RxBuffer,wreg
 27884  002AFA  0A2B               	xorlw	43
 27885  002AFC  A4D8               	btfss	status,2,c
 27886  002AFE  0012               	return	
 27887  002B00  CC59  FFE8         	movff	_RxBuffer+1,wreg
 27888  002B04  0A43               	xorlw	67
 27889  002B06  A4D8               	btfss	status,2,c
 27890  002B08  0012               	return	
 27891  002B0A  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 27892  002B0E  0A4D               	xorlw	77
 27893  002B10  A4D8               	btfss	status,2,c
 27894  002B12  0012               	return	
 27895                           
 27896                           ;mdm_gsm_gprs.c: 614: {
 27897                           ;mdm_gsm_gprs.c: 616: ClearBuffer(Mdm_SmsRx.HeaderBuffer, sizeof(Mdm_SmsRx.HeaderBuffer)
      +                          );
 27898  002B14  0E00               	movlw	low _Mdm_SmsRx
 27899  002B16  0100               	movlb	0	; () banked
 27900  002B18  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27901  002B1A  0E07               	movlw	high _Mdm_SmsRx
 27902  002B1C  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27903  002B1E  0E00               	movlw	0
 27904  002B20  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27905  002B22  0E50               	movlw	80
 27906  002B24  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27907  002B26  ECF9  F031         	call	_ClearBuffer	;wreg free
 27908                           
 27909                           ;mdm_gsm_gprs.c: 617: StringCopy(RxBuffer,Mdm_SmsRx.HeaderBuffer,RxLen);
 27910  002B2A  0E58               	movlw	low _RxBuffer
 27911  002B2C  0100               	movlb	0	; () banked
 27912  002B2E  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27913  002B30  0E0C               	movlw	high _RxBuffer
 27914  002B32  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27915  002B34  0E00               	movlw	low _Mdm_SmsRx
 27916  002B36  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27917  002B38  0E07               	movlw	high _Mdm_SmsRx
 27918  002B3A  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27919  002B3C  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27920  002B40  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27921  002B44  ECD1  F02B         	call	_StringCopy	;wreg free
 27922                           
 27923                           ;mdm_gsm_gprs.c: 619: Mdm_SmsRx.HeadLen = RxLen;
 27924  002B48  C0C2  F764         	movff	_RxLen,_Mdm_SmsRx+100
 27925                           
 27926                           ;mdm_gsm_gprs.c: 621: GetSmsState = GetSms_StoreText;
 27927  002B4C  0E03               	movlw	3
 27928  002B4E  0101               	movlb	1	; () banked
 27929  002B50  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27930                           
 27931                           ; BSR set to: 1
 27932                           ;mdm_gsm_gprs.c: 622: }
 27933                           ;mdm_gsm_gprs.c: 623: }
 27934                           ;mdm_gsm_gprs.c: 624: break;
 27935                           
 27936                           ; BSR set to: 1
 27937  002B52  0012               	return	
 27938  002B54                     
 27939                           ; BSR set to: 1
 27940                           ;mdm_gsm_gprs.c: 628: if (ReceiveEvt(&NewStringReceived))
 27941                           
 27942                           ; BSR set to: 1
 27943  002B54  0E3A               	movlw	low _NewStringReceived
 27944  002B56  0100               	movlb	0	; () banked
 27945  002B58  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 27946  002B5A  0E00               	movlw	high _NewStringReceived
 27947  002B5C  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 27948  002B5E  ECD7  F032         	call	_ReceiveEvt	;wreg free
 27949  002B62  0900               	iorlw	0
 27950  002B64  B4D8               	btfsc	status,2,c
 27951  002B66  0012               	return	
 27952                           
 27953                           ;mdm_gsm_gprs.c: 629: {
 27954                           ;mdm_gsm_gprs.c: 631: ClearBuffer(Mdm_SmsRx.MessageBuffer, sizeof(Mdm_SmsRx.MessageBuffe
      +                          r));
 27955  002B68  0E50               	movlw	low (_Mdm_SmsRx+80)
 27956  002B6A  0100               	movlb	0	; () banked
 27957  002B6C  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 27958  002B6E  0E07               	movlw	high (_Mdm_SmsRx+80)
 27959  002B70  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 27960  002B72  0E00               	movlw	0
 27961  002B74  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 27962  002B76  0E14               	movlw	20
 27963  002B78  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 27964  002B7A  ECF9  F031         	call	_ClearBuffer	;wreg free
 27965                           
 27966                           ;mdm_gsm_gprs.c: 632: StringCopy(RxBuffer,Mdm_SmsRx.MessageBuffer,RxLen);
 27967  002B7E  0E58               	movlw	low _RxBuffer
 27968  002B80  0100               	movlb	0	; () banked
 27969  002B82  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 27970  002B84  0E0C               	movlw	high _RxBuffer
 27971  002B86  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 27972  002B88  0E50               	movlw	low (_Mdm_SmsRx+80)
 27973  002B8A  6F87               	movwf	StringCopy@DestStr& (0+255),b
 27974  002B8C  0E07               	movlw	high (_Mdm_SmsRx+80)
 27975  002B8E  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 27976  002B90  C0C2  F089         	movff	_RxLen,StringCopy@Len
 27977  002B94  C0C3  F08A         	movff	_RxLen+1,StringCopy@Len+1
 27978  002B98  ECD1  F02B         	call	_StringCopy	;wreg free
 27979                           
 27980                           ;mdm_gsm_gprs.c: 634: Mdm_SmsRx.TextLen = RxLen;
 27981  002B9C  C0C2  F765         	movff	_RxLen,_Mdm_SmsRx+101
 27982                           
 27983                           ;mdm_gsm_gprs.c: 636: GetSmsState = GetSms_CheckReq;
 27984  002BA0  0E00               	movlw	0
 27985  002BA2  0101               	movlb	1	; () banked
 27986  002BA4  6FEF               	movwf	GetSmsSm@GetSmsState& (0+255),b
 27987                           
 27988                           ; BSR set to: 1
 27989                           ;mdm_gsm_gprs.c: 638: GenerateEvt(&SmsTxtReady);
 27990  002BA6  0EDC               	movlw	low _SmsTxtReady
 27991  002BA8  0100               	movlb	0	; () banked
 27992  002BAA  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 27993  002BAC  0E00               	movlw	high _SmsTxtReady
 27994  002BAE  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 27995  002BB0  ECC8  F034         	call	_GenerateEvt	;wreg free
 27996                           
 27997                           ;mdm_gsm_gprs.c: 644: }
 27998                           
 27999                           ;mdm_gsm_gprs.c: 643: break;
 28000                           
 28001                           ;mdm_gsm_gprs.c: 642: default:
 28002                           
 28003                           ;mdm_gsm_gprs.c: 639: }
 28004                           ;mdm_gsm_gprs.c: 640: break;
 28005  002BB4  0012               	return	
 28006  002BB6                     l1070:
 28007  002BB6  0101               	movlb	1	; () banked
 28008  002BB8  51EF               	movf	GetSmsSm@GetSmsState& (0+255),w,b
 28009                           
 28010                           ; Switch size 1, requested type "space"
 28011                           ; Number of cases is 4, Range of values is 0 to 3
 28012                           ; switch strategies available:
 28013                           ; Name         Instructions Cycles
 28014                           ; simple_byte           13     7 (average)
 28015                           ;	Chosen strategy is simple_byte
 28016  002BBA  0A00               	xorlw	0	; case 0
 28017  002BBC  B4D8               	btfsc	status,2,c
 28018  002BBE  D777               	goto	l1071
 28019  002BC0  0A01               	xorlw	1	; case 1
 28020  002BC2  B4D8               	btfsc	status,2,c
 28021  002BC4  D782               	goto	l1074
 28022  002BC6  0A03               	xorlw	3	; case 2
 28023  002BC8  B4D8               	btfsc	status,2,c
 28024  002BCA  D78B               	goto	l1075
 28025  002BCC  0A01               	xorlw	1	; case 3
 28026  002BCE  A4D8               	btfss	status,2,c
 28027                           
 28028                           ; BSR set to: 1
 28029  002BD0  0012               	return	
 28030  002BD2  D7C0               	goto	l1078
 28031  002BD4                     __end_of_GetSmsSm:
 28032                           	opt stack 0
 28033                           tosu	equ	0xFFF
 28034                           tosh	equ	0xFFE
 28035                           tosl	equ	0xFFD
 28036                           pclath	equ	0xFFA
 28037                           tblptru	equ	0xFF8
 28038                           tblptrh	equ	0xFF7
 28039                           tblptrl	equ	0xFF6
 28040                           tablat	equ	0xFF5
 28041                           prodh	equ	0xFF4
 28042                           prodl	equ	0xFF3
 28043                           intcon	equ	0xFF2
 28044                           intcon2	equ	0xFF1
 28045                           intcon3	equ	0xFF0
 28046                           indf0	equ	0xFEF
 28047                           postinc0	equ	0xFEE
 28048                           plusw0	equ	0xFEB
 28049                           fsr0h	equ	0xFEA
 28050                           fsr0l	equ	0xFE9
 28051                           wreg	equ	0xFE8
 28052                           indf1	equ	0xFE7
 28053                           postinc1	equ	0xFE6
 28054                           postdec1	equ	0xFE5
 28055                           plusw1	equ	0xFE3
 28056                           fsr1h	equ	0xFE2
 28057                           fsr1l	equ	0xFE1
 28058                           indf2	equ	0xFDF
 28059                           postinc2	equ	0xFDE
 28060                           postdec2	equ	0xFDD
 28061                           plusw2	equ	0xFDB
 28062                           fsr2h	equ	0xFDA
 28063                           fsr2l	equ	0xFD9
 28064                           status	equ	0xFD8
 28065                           
 28066 ;; *************** function _ConfigureModem *****************
 28067 ;; Defined at:
 28068 ;;		line 419 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 28069 ;; Parameters:    Size  Location     Type
 28070 ;;		None
 28071 ;; Auto vars:     Size  Location     Type
 28072 ;;		None
 28073 ;; Return value:  Size  Location     Type
 28074 ;;                  1    wreg      void 
 28075 ;; Registers used:
 28076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28077 ;; Tracked objects:
 28078 ;;		On entry : 0/0
 28079 ;;		On exit  : 0/0
 28080 ;;		Unchanged: 0/0
 28081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28086 ;;Total ram usage:        0 bytes
 28087 ;; Hardware stack levels used:    1
 28088 ;; Hardware stack levels required when called:   14
 28089 ;; This function calls:
 28090 ;;		_GenerateEvt
 28091 ;;		_UartSetConfigLow
 28092 ;;		_Uart_InitUartModule
 28093 ;;		_Uart_WriteConstString
 28094 ;; This function is called by:
 28095 ;;		_Mdm_MainTask
 28096 ;; This function uses a non-reentrant model
 28097 ;;
 28098                           
 28099                           	psect	text134
 28100  003956                     __ptext134:
 28101                           	opt stack 0
 28102  003956                     _ConfigureModem:
 28103                           	opt stack 13
 28104                           
 28105                           ;mdm_gsm_gprs.c: 421: static MdmConfigStateType MdmConfigState = MdmCfg_Init;
 28106                           ;mdm_gsm_gprs.c: 422: static MdmConfigStateType NextState = MdmCfg_Init;
 28107                           ;mdm_gsm_gprs.c: 423: static UINT16 DelayValueMs = 0;
 28108                           ;mdm_gsm_gprs.c: 424: static UINT16 DelayCounter = 0;
 28109                           ;mdm_gsm_gprs.c: 426: switch (MdmConfigState)
 28110                           
 28111                           ;incstack = 0
 28112  003956  D056               	goto	l1027
 28113  003958                     
 28114                           ;mdm_gsm_gprs.c: 430: if (MdmStatus == ModemReady)
 28115  003958  0E02               	movlw	2
 28116  00395A  0100               	movlb	0	; () banked
 28117  00395C  19D2               	xorwf	_MdmStatus& (0+255),w,b
 28118  00395E  A4D8               	btfss	status,2,c
 28119  003960  0012               	return	
 28120                           
 28121                           ; BSR set to: 0
 28122                           ;mdm_gsm_gprs.c: 431: {
 28123                           ;mdm_gsm_gprs.c: 433: MdmConfigState = MdmCfg_ChangeBaud;
 28124  003962  0E01               	movlw	1
 28125  003964  0101               	movlb	1	; () banked
 28126  003966  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28127                           
 28128                           ; BSR set to: 1
 28129                           ;mdm_gsm_gprs.c: 434: }
 28130                           ;mdm_gsm_gprs.c: 435: break;
 28131  003968  0012               	return	
 28132  00396A                     
 28133                           ; BSR set to: 1
 28134                           ;mdm_gsm_gprs.c: 439: Uart_WriteConstString(1,"AT+IPR=9600\r\n");
 28135                           
 28136                           ; BSR set to: 1
 28137  00396A  0E75               	movlw	low STR_2
 28138  00396C  0100               	movlb	0	; () banked
 28139  00396E  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28140  003970  0EFF               	movlw	high STR_2
 28141  003972  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28142  003974  0E01               	movlw	1
 28143  003976  EC8E  F030         	call	_Uart_WriteConstString
 28144                           
 28145                           ;mdm_gsm_gprs.c: 441: UartSetConfigLow();
 28146  00397A  ECE6  F02C         	call	_UartSetConfigLow	;wreg free
 28147                           
 28148                           ;mdm_gsm_gprs.c: 443: Uart_InitUartModule(1,&UartConfig);
 28149  00397E  0E1C               	movlw	low _UartConfig
 28150  003980  0100               	movlb	0	; () banked
 28151  003982  6F9D               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
 28152  003984  0E03               	movlw	high _UartConfig
 28153  003986  6F9E               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
 28154  003988  0E01               	movlw	1
 28155  00398A  EC5E  F005         	call	_Uart_InitUartModule
 28156                           
 28157                           ;mdm_gsm_gprs.c: 445: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28158  00398E  0E03               	movlw	3
 28159  003990  0102               	movlb	2	; () banked
 28160  003992  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28161  003994  0EE8               	movlw	232
 28162  003996  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28163                           
 28164                           ; BSR set to: 2
 28165                           ;mdm_gsm_gprs.c: 447: NextState = MdmCfg_SetMdmEchoMode;
 28166  003998  0E02               	movlw	2
 28167  00399A  0101               	movlb	1	; () banked
 28168  00399C  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28169                           
 28170                           ; BSR set to: 1
 28171                           ;mdm_gsm_gprs.c: 448: MdmConfigState = MdmCfg_Delay;
 28172  00399E  0E04               	movlw	4
 28173  0039A0  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28174                           
 28175                           ;mdm_gsm_gprs.c: 449: break;
 28176  0039A2  0012               	return	
 28177  0039A4                     
 28178                           ; BSR set to: 1
 28179                           ;mdm_gsm_gprs.c: 453: Uart_WriteConstString(1,"ATE0\r\n");
 28180                           
 28181                           ; BSR set to: 1
 28182  0039A4  0EDF               	movlw	low STR_3
 28183  0039A6  0100               	movlb	0	; () banked
 28184  0039A8  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 28185  0039AA  0EFF               	movlw	high STR_3
 28186  0039AC  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 28187  0039AE  0E01               	movlw	1
 28188  0039B0  EC8E  F030         	call	_Uart_WriteConstString
 28189                           
 28190                           ;mdm_gsm_gprs.c: 455: DelayValueMs = (((UINT16)(1000))/((UINT16)(1)));
 28191  0039B4  0E03               	movlw	3
 28192  0039B6  0102               	movlb	2	; () banked
 28193  0039B8  6FD9               	movwf	(ConfigureModem@DelayValueMs+1)& (0+255),b
 28194  0039BA  0EE8               	movlw	232
 28195  0039BC  6FD8               	movwf	ConfigureModem@DelayValueMs& (0+255),b
 28196                           
 28197                           ; BSR set to: 2
 28198                           ;mdm_gsm_gprs.c: 457: NextState = MdmCfg_UpdateMdmSts;
 28199  0039BE  0E05               	movlw	5
 28200  0039C0  0101               	movlb	1	; () banked
 28201  0039C2  6FF0               	movwf	ConfigureModem@NextState& (0+255),b
 28202                           
 28203                           ; BSR set to: 1
 28204                           ;mdm_gsm_gprs.c: 458: MdmConfigState = MdmCfg_Delay;
 28205  0039C4  0E04               	movlw	4
 28206  0039C6  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28207                           
 28208                           ;mdm_gsm_gprs.c: 459: break;
 28209  0039C8  0012               	return	
 28210  0039CA                     
 28211                           ; BSR set to: 1
 28212                           ;mdm_gsm_gprs.c: 463: DelayCounter++;
 28213                           
 28214                           ; BSR set to: 1
 28215  0039CA  0102               	movlb	2	; () banked
 28216  0039CC  4BD6               	infsnz	ConfigureModem@DelayCounter& (0+255),f,b
 28217  0039CE  2BD7               	incf	(ConfigureModem@DelayCounter+1)& (0+255),f,b
 28218                           
 28219                           ; BSR set to: 2
 28220                           ;mdm_gsm_gprs.c: 465: if (DelayCounter >= DelayValueMs)
 28221  0039D0  51D8               	movf	ConfigureModem@DelayValueMs& (0+255),w,b
 28222  0039D2  5DD6               	subwf	ConfigureModem@DelayCounter& (0+255),w,b
 28223  0039D4  51D9               	movf	(ConfigureModem@DelayValueMs+1)& (0+255),w,b
 28224  0039D6  59D7               	subwfb	(ConfigureModem@DelayCounter+1)& (0+255),w,b
 28225  0039D8  A0D8               	btfss	status,0,c
 28226  0039DA  0012               	return	
 28227                           
 28228                           ; BSR set to: 2
 28229                           ;mdm_gsm_gprs.c: 466: {
 28230                           ;mdm_gsm_gprs.c: 468: DelayCounter = 0;
 28231  0039DC  0E00               	movlw	0
 28232  0039DE  6FD7               	movwf	(ConfigureModem@DelayCounter+1)& (0+255),b
 28233  0039E0  0E00               	movlw	0
 28234  0039E2  6FD6               	movwf	ConfigureModem@DelayCounter& (0+255),b
 28235                           
 28236                           ; BSR set to: 2
 28237                           ;mdm_gsm_gprs.c: 470: MdmConfigState = NextState;
 28238  0039E4  C1F0  F1F1         	movff	ConfigureModem@NextState,ConfigureModem@MdmConfigState
 28239                           
 28240                           ; BSR set to: 2
 28241                           ;mdm_gsm_gprs.c: 471: }
 28242                           ;mdm_gsm_gprs.c: 472: break;
 28243  0039E8  0012               	return	
 28244  0039EA                     
 28245                           ;mdm_gsm_gprs.c: 476: MdmStatus = ModemConfigured;
 28246                           
 28247                           ; BSR set to: 2
 28248  0039EA  0E03               	movlw	3
 28249  0039EC  0100               	movlb	0	; () banked
 28250  0039EE  6FD2               	movwf	_MdmStatus& (0+255),b
 28251                           
 28252                           ; BSR set to: 0
 28253                           ;mdm_gsm_gprs.c: 478: GenerateEvt(&MdmStsReady);
 28254  0039F0  0EFD               	movlw	low _MdmStsReady
 28255  0039F2  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 28256  0039F4  0E01               	movlw	high _MdmStsReady
 28257  0039F6  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 28258  0039F8  ECC8  F034         	call	_GenerateEvt	;wreg free
 28259                           
 28260                           ;mdm_gsm_gprs.c: 480: MdmConfigState = MdmCfg_Stop;
 28261  0039FC  0E06               	movlw	6
 28262  0039FE  0101               	movlb	1	; () banked
 28263  003A00  6FF1               	movwf	ConfigureModem@MdmConfigState& (0+255),b
 28264                           
 28265                           ; BSR set to: 1
 28266                           ;mdm_gsm_gprs.c: 488: }
 28267                           
 28268                           ; BSR set to: 1
 28269                           ;mdm_gsm_gprs.c: 487: break;
 28270                           
 28271                           ;mdm_gsm_gprs.c: 486: default:
 28272                           
 28273                           ; BSR set to: 1
 28274                           ;mdm_gsm_gprs.c: 484: break;
 28275                           
 28276                           ;mdm_gsm_gprs.c: 483: case MdmCfg_Stop:
 28277                           
 28278                           ;mdm_gsm_gprs.c: 481: break;
 28279  003A02  0012               	return	
 28280  003A04                     l1027:
 28281                           
 28282                           ; BSR set to: 1
 28283  003A04  0101               	movlb	1	; () banked
 28284  003A06  51F1               	movf	ConfigureModem@MdmConfigState& (0+255),w,b
 28285                           
 28286                           ; Switch size 1, requested type "space"
 28287                           ; Number of cases is 6, Range of values is 0 to 6
 28288                           ; switch strategies available:
 28289                           ; Name         Instructions Cycles
 28290                           ; simple_byte           19    10 (average)
 28291                           ;	Chosen strategy is simple_byte
 28292  003A08  0A00               	xorlw	0	; case 0
 28293  003A0A  B4D8               	btfsc	status,2,c
 28294  003A0C  D7A5               	goto	l1028
 28295  003A0E  0A01               	xorlw	1	; case 1
 28296  003A10  B4D8               	btfsc	status,2,c
 28297  003A12  D7AB               	goto	l1031
 28298  003A14  0A03               	xorlw	3	; case 2
 28299  003A16  B4D8               	btfsc	status,2,c
 28300  003A18  D7C5               	goto	l1032
 28301  003A1A  0A06               	xorlw	6	; case 4
 28302  003A1C  B4D8               	btfsc	status,2,c
 28303  003A1E  D7D5               	goto	l1033
 28304  003A20  0A01               	xorlw	1	; case 5
 28305  003A22  B4D8               	btfsc	status,2,c
 28306  003A24  D7E2               	goto	l1035
 28307  003A26  0A03               	xorlw	3	; case 6
 28308  003A28  0012               	return	
 28309  003A2A                     __end_of_ConfigureModem:
 28310                           	opt stack 0
 28311                           tosu	equ	0xFFF
 28312                           tosh	equ	0xFFE
 28313                           tosl	equ	0xFFD
 28314                           pclath	equ	0xFFA
 28315                           tblptru	equ	0xFF8
 28316                           tblptrh	equ	0xFF7
 28317                           tblptrl	equ	0xFF6
 28318                           tablat	equ	0xFF5
 28319                           prodh	equ	0xFF4
 28320                           prodl	equ	0xFF3
 28321                           intcon	equ	0xFF2
 28322                           intcon2	equ	0xFF1
 28323                           intcon3	equ	0xFF0
 28324                           indf0	equ	0xFEF
 28325                           postinc0	equ	0xFEE
 28326                           plusw0	equ	0xFEB
 28327                           fsr0h	equ	0xFEA
 28328                           fsr0l	equ	0xFE9
 28329                           wreg	equ	0xFE8
 28330                           indf1	equ	0xFE7
 28331                           postinc1	equ	0xFE6
 28332                           postdec1	equ	0xFE5
 28333                           plusw1	equ	0xFE3
 28334                           fsr1h	equ	0xFE2
 28335                           fsr1l	equ	0xFE1
 28336                           indf2	equ	0xFDF
 28337                           postinc2	equ	0xFDE
 28338                           postdec2	equ	0xFDD
 28339                           plusw2	equ	0xFDB
 28340                           fsr2h	equ	0xFDA
 28341                           fsr2l	equ	0xFD9
 28342                           status	equ	0xFD8
 28343                           
 28344 ;; *************** function _Uart_InitUartModule *****************
 28345 ;; Defined at:
 28346 ;;		line 288 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28347 ;; Parameters:    Size  Location     Type
 28348 ;;  Module          1    wreg     unsigned char 
 28349 ;;  UartConfig      2   61[BANK0 ] PTR struct _UartConfig
 28350 ;;		 -> UartConfig(21), 
 28351 ;; Auto vars:     Size  Location     Type
 28352 ;;  Module          1   65[BANK0 ] unsigned char 
 28353 ;; Return value:  Size  Location     Type
 28354 ;;                  1    wreg      void 
 28355 ;; Registers used:
 28356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28357 ;; Tracked objects:
 28358 ;;		On entry : 0/0
 28359 ;;		On exit  : 0/0
 28360 ;;		Unchanged: 0/0
 28361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28365 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28366 ;;Total ram usage:        5 bytes
 28367 ;; Hardware stack levels used:    1
 28368 ;; Hardware stack levels required when called:   13
 28369 ;; This function calls:
 28370 ;;		_SetUartBaudRate
 28371 ;; This function is called by:
 28372 ;;		_ConfigureModem
 28373 ;;		_Mdm_MainTask
 28374 ;; This function uses a non-reentrant model
 28375 ;;
 28376                           
 28377                           	psect	text135
 28378  000ABC                     __ptext135:
 28379                           	opt stack 0
 28380  000ABC                     _Uart_InitUartModule:
 28381                           	opt stack 14
 28382                           
 28383                           ;incstack = 0
 28384                           ;Uart_InitUartModule@Module stored from wreg
 28385  000ABC  0100               	movlb	0	; () banked
 28386  000ABE  6FA1               	movwf	Uart_InitUartModule@Module& (0+255),b
 28387                           
 28388                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 28389  000AC0  0100               	movlb	0	; () banked
 28390  000AC2  05A1               	decf	Uart_InitUartModule@Module& (0+255),w,b
 28391  000AC4  A4D8               	btfss	status,2,c
 28392  000AC6  D0BE               	goto	l668
 28393                           
 28394                           ; BSR set to: 0
 28395                           ;uart_drv.c: 291: {
 28396                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 28397  000AC8  9C94               	bcf	3988,6,c	;volatile
 28398                           
 28399                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 28400  000ACA  8E94               	bsf	3988,7,c	;volatile
 28401                           
 28402                           ; BSR set to: 0
 28403                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 28404  000ACC  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28405  000AD0  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28406  000AD4  0E01               	movlw	1
 28407  000AD6  ECB5  F014         	call	_SetUartBaudRate
 28408                           
 28409                           ;uart_drv.c: 302: TXSTA1 = 0x00;
 28410  000ADA  0E00               	movlw	0
 28411  000ADC  6EAD               	movwf	4013,c	;volatile
 28412                           
 28413                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28414  000ADE  0100               	movlb	0	; () banked
 28415  000AE0  EE20 F004          	lfsr	2,4
 28416  000AE4  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28417  000AE6  26D9               	addwf	fsr2l,f,c
 28418  000AE8  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28419  000AEA  22DA               	addwfc	fsr2h,f,c
 28420  000AEC  50DF               	movf	indf2,w,c
 28421  000AEE  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28422  000AF0  0E06               	movlw	6
 28423  000AF2  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28424  000AF4                     u13565:
 28425  000AF4  90D8               	bcf	status,0,c
 28426  000AF6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28427  000AF8  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28428  000AFA  D7FC               	goto	u13565
 28429  000AFC  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28430  000AFE  12AD               	iorwf	4013,f,c	;volatile
 28431                           
 28432                           ; BSR set to: 0
 28433                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28434  000B00  EE20 F006          	lfsr	2,6
 28435  000B04  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28436  000B06  26D9               	addwf	fsr2l,f,c
 28437  000B08  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28438  000B0A  22DA               	addwfc	fsr2h,f,c
 28439  000B0C  50DF               	movf	indf2,w,c
 28440  000B0E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28441  000B10  0E05               	movlw	5
 28442  000B12  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28443  000B14                     u13575:
 28444  000B14  90D8               	bcf	status,0,c
 28445  000B16  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28446  000B18  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28447  000B1A  D7FC               	goto	u13575
 28448  000B1C  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28449  000B1E  12AD               	iorwf	4013,f,c	;volatile
 28450                           
 28451                           ; BSR set to: 0
 28452                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 28453  000B20  EE20 F001          	lfsr	2,1
 28454  000B24  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28455  000B26  26D9               	addwf	fsr2l,f,c
 28456  000B28  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28457  000B2A  22DA               	addwfc	fsr2h,f,c
 28458  000B2C  50DF               	movf	indf2,w,c
 28459  000B2E  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28460  000B30  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28461  000B32  0BF0               	andlw	240
 28462  000B34  12AD               	iorwf	4013,f,c	;volatile
 28463                           
 28464                           ; BSR set to: 0
 28465                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28466  000B36  EE20 F008          	lfsr	2,8
 28467  000B3A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28468  000B3C  26D9               	addwf	fsr2l,f,c
 28469  000B3E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28470  000B40  22DA               	addwfc	fsr2h,f,c
 28471  000B42  50DF               	movf	indf2,w,c
 28472  000B44  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28473  000B46  90D8               	bcf	status,0,c
 28474  000B48  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28475  000B4A  90D8               	bcf	status,0,c
 28476  000B4C  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28477  000B4E  90D8               	bcf	status,0,c
 28478  000B50  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28479  000B52  12AD               	iorwf	4013,f,c	;volatile
 28480                           
 28481                           ; BSR set to: 0
 28482                           ;uart_drv.c: 307: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28483  000B54  EE20 F003          	lfsr	2,3
 28484  000B58  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28485  000B5A  26D9               	addwf	fsr2l,f,c
 28486  000B5C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28487  000B5E  22DA               	addwfc	fsr2h,f,c
 28488  000B60  50DF               	movf	indf2,w,c
 28489  000B62  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28490  000B64  90D8               	bcf	status,0,c
 28491  000B66  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28492  000B68  90D8               	bcf	status,0,c
 28493  000B6A  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28494  000B6C  12AD               	iorwf	4013,f,c	;volatile
 28495                           
 28496                           ; BSR set to: 0
 28497                           ;uart_drv.c: 310: RCSTA1 = 0x00;
 28498  000B6E  0E00               	movlw	0
 28499  000B70  6EAC               	movwf	4012,c	;volatile
 28500                           
 28501                           ; BSR set to: 0
 28502                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28503  000B72  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28504  000B76  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28505  000B7A  50DF               	movf	indf2,w,c
 28506  000B7C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28507  000B7E  0E00               	movlw	0
 28508  000B80  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28509  000B82  0E80               	movlw	128
 28510  000B84  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28511  000B86  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28512  000B88  12AC               	iorwf	4012,f,c	;volatile
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;uart_drv.c: 312: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28516  000B8A  EE20 F005          	lfsr	2,5
 28517  000B8E  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28518  000B90  26D9               	addwf	fsr2l,f,c
 28519  000B92  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28520  000B94  22DA               	addwfc	fsr2h,f,c
 28521  000B96  50DF               	movf	indf2,w,c
 28522  000B98  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28523  000B9A  0E06               	movlw	6
 28524  000B9C  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28525  000B9E                     u13585:
 28526  000B9E  90D8               	bcf	status,0,c
 28527  000BA0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28528  000BA2  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28529  000BA4  D7FC               	goto	u13585
 28530  000BA6  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28531  000BA8  12AC               	iorwf	4012,f,c	;volatile
 28532                           
 28533                           ; BSR set to: 0
 28534                           ;uart_drv.c: 313: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28535  000BAA  EE20 F007          	lfsr	2,7
 28536  000BAE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28537  000BB0  26D9               	addwf	fsr2l,f,c
 28538  000BB2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28539  000BB4  22DA               	addwfc	fsr2h,f,c
 28540  000BB6  50DF               	movf	indf2,w,c
 28541  000BB8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28542  000BBA  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28543  000BBC  0BF0               	andlw	240
 28544  000BBE  12AC               	iorwf	4012,f,c	;volatile
 28545                           
 28546                           ; BSR set to: 0
 28547                           ;uart_drv.c: 316: BAUDCON1 = 0x00;
 28548  000BC0  0E00               	movlw	0
 28549  000BC2  6E7E               	movwf	3966,c	;volatile
 28550                           
 28551                           ; BSR set to: 0
 28552                           ;uart_drv.c: 317: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28553  000BC4  EE20 F002          	lfsr	2,2
 28554  000BC8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28555  000BCA  26D9               	addwf	fsr2l,f,c
 28556  000BCC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28557  000BCE  22DA               	addwfc	fsr2h,f,c
 28558  000BD0  50DF               	movf	indf2,w,c
 28559  000BD2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28560  000BD4  90D8               	bcf	status,0,c
 28561  000BD6  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28562  000BD8  90D8               	bcf	status,0,c
 28563  000BDA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28564  000BDC  90D8               	bcf	status,0,c
 28565  000BDE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28566  000BE0  127E               	iorwf	3966,f,c	;volatile
 28567                           
 28568                           ; BSR set to: 0
 28569                           ;uart_drv.c: 318: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28570  000BE2  EE20 F00A          	lfsr	2,10
 28571  000BE6  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28572  000BE8  26D9               	addwf	fsr2l,f,c
 28573  000BEA  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28574  000BEC  22DA               	addwfc	fsr2h,f,c
 28575  000BEE  50DF               	movf	indf2,w,c
 28576  000BF0  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28577  000BF2  90D8               	bcf	status,0,c
 28578  000BF4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28579  000BF6  127E               	iorwf	3966,f,c	;volatile
 28580                           
 28581                           ; BSR set to: 0
 28582                           ;uart_drv.c: 319: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28583  000BF8  EE20 F009          	lfsr	2,9
 28584  000BFC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28585  000BFE  26D9               	addwf	fsr2l,f,c
 28586  000C00  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28587  000C02  22DA               	addwfc	fsr2h,f,c
 28588  000C04  50DF               	movf	indf2,w,c
 28589  000C06  127E               	iorwf	3966,f,c	;volatile
 28590                           
 28591                           ; BSR set to: 0
 28592                           ;uart_drv.c: 322: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 28593  000C08  EE20 F00B          	lfsr	2,11
 28594  000C0C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28595  000C0E  26D9               	addwf	fsr2l,f,c
 28596  000C10  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28597  000C12  22DA               	addwfc	fsr2h,f,c
 28598  000C14  50DF               	movf	indf2,w,c
 28599  000C16  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28600  000C18  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28601  000C1A  509D               	movf	3997,w,c	;volatile
 28602  000C1C  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28603  000C1E  0BEF               	andlw	-17
 28604  000C20  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28605  000C22  6E9D               	movwf	3997,c	;volatile
 28606                           
 28607                           ; BSR set to: 0
 28608                           ;uart_drv.c: 323: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 28609  000C24  EE20 F00C          	lfsr	2,12
 28610  000C28  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28611  000C2A  26D9               	addwf	fsr2l,f,c
 28612  000C2C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28613  000C2E  22DA               	addwfc	fsr2h,f,c
 28614  000C30  50DF               	movf	indf2,w,c
 28615  000C32  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28616  000C34  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28617  000C36  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28618  000C38  509D               	movf	3997,w,c	;volatile
 28619  000C3A  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28620  000C3C  0BDF               	andlw	-33
 28621  000C3E  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28622  000C40  6E9D               	movwf	3997,c	;volatile
 28623                           
 28624                           ;uart_drv.c: 326: }
 28625  000C42  0012               	return	
 28626  000C44                     l668:
 28627                           
 28628                           ; BSR set to: 0
 28629                           ;uart_drv.c: 327: else if (Module == ((UINT8)(2)))
 28630                           
 28631                           ; BSR set to: 0
 28632  000C44  0E02               	movlw	2
 28633  000C46  19A1               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 28634  000C48  A4D8               	btfss	status,2,c
 28635  000C4A  0012               	return	
 28636                           
 28637                           ; BSR set to: 0
 28638                           ;uart_drv.c: 328: {
 28639                           ;uart_drv.c: 330: TRISCbits.TRISC0 = ((UINT8)(0));
 28640  000C4C  9094               	bcf	3988,0,c	;volatile
 28641                           
 28642                           ;uart_drv.c: 331: TRISCbits.TRISC1 = ((UINT8)(1));
 28643  000C4E  8294               	bsf	3988,1,c	;volatile
 28644                           
 28645                           ; BSR set to: 0
 28646                           ;uart_drv.c: 334: SetUartBaudRate(((UINT8)(2)), UartConfig);
 28647  000C50  C09D  F096         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 28648  000C54  C09E  F097         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 28649  000C58  0E02               	movlw	2
 28650  000C5A  ECB5  F014         	call	_SetUartBaudRate
 28651                           
 28652                           ;uart_drv.c: 339: TXSTA2 = 0x00;
 28653  000C5E  0E00               	movlw	0
 28654  000C60  6EA8               	movwf	4008,c	;volatile
 28655                           
 28656                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 28657  000C62  0100               	movlb	0	; () banked
 28658  000C64  EE20 F004          	lfsr	2,4
 28659  000C68  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28660  000C6A  26D9               	addwf	fsr2l,f,c
 28661  000C6C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28662  000C6E  22DA               	addwfc	fsr2h,f,c
 28663  000C70  50DF               	movf	indf2,w,c
 28664  000C72  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28665  000C74  0E06               	movlw	6
 28666  000C76  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28667  000C78                     u13605:
 28668  000C78  90D8               	bcf	status,0,c
 28669  000C7A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28670  000C7C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28671  000C7E  D7FC               	goto	u13605
 28672  000C80  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28673  000C82  12A8               	iorwf	4008,f,c	;volatile
 28674                           
 28675                           ; BSR set to: 0
 28676                           ;uart_drv.c: 341: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 28677  000C84  EE20 F006          	lfsr	2,6
 28678  000C88  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28679  000C8A  26D9               	addwf	fsr2l,f,c
 28680  000C8C  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28681  000C8E  22DA               	addwfc	fsr2h,f,c
 28682  000C90  50DF               	movf	indf2,w,c
 28683  000C92  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28684  000C94  0E05               	movlw	5
 28685  000C96  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28686  000C98                     u13615:
 28687  000C98  90D8               	bcf	status,0,c
 28688  000C9A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28689  000C9C  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28690  000C9E  D7FC               	goto	u13615
 28691  000CA0  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28692  000CA2  12A8               	iorwf	4008,f,c	;volatile
 28693                           
 28694                           ; BSR set to: 0
 28695                           ;uart_drv.c: 342: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 28696  000CA4  EE20 F001          	lfsr	2,1
 28697  000CA8  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28698  000CAA  26D9               	addwf	fsr2l,f,c
 28699  000CAC  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28700  000CAE  22DA               	addwfc	fsr2h,f,c
 28701  000CB0  50DF               	movf	indf2,w,c
 28702  000CB2  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28703  000CB4  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28704  000CB6  0BF0               	andlw	240
 28705  000CB8  12A8               	iorwf	4008,f,c	;volatile
 28706                           
 28707                           ; BSR set to: 0
 28708                           ;uart_drv.c: 343: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 28709  000CBA  EE20 F008          	lfsr	2,8
 28710  000CBE  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28711  000CC0  26D9               	addwf	fsr2l,f,c
 28712  000CC2  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28713  000CC4  22DA               	addwfc	fsr2h,f,c
 28714  000CC6  50DF               	movf	indf2,w,c
 28715  000CC8  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28716  000CCA  90D8               	bcf	status,0,c
 28717  000CCC  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28718  000CCE  90D8               	bcf	status,0,c
 28719  000CD0  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28720  000CD2  90D8               	bcf	status,0,c
 28721  000CD4  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28722  000CD6  12A8               	iorwf	4008,f,c	;volatile
 28723                           
 28724                           ; BSR set to: 0
 28725                           ;uart_drv.c: 344: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 28726  000CD8  EE20 F003          	lfsr	2,3
 28727  000CDC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28728  000CDE  26D9               	addwf	fsr2l,f,c
 28729  000CE0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28730  000CE2  22DA               	addwfc	fsr2h,f,c
 28731  000CE4  50DF               	movf	indf2,w,c
 28732  000CE6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28733  000CE8  90D8               	bcf	status,0,c
 28734  000CEA  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28735  000CEC  90D8               	bcf	status,0,c
 28736  000CEE  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28737  000CF0  12A8               	iorwf	4008,f,c	;volatile
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;uart_drv.c: 347: RCSTA2 = 0x00;
 28741  000CF2  0E00               	movlw	0
 28742  000CF4  6E9C               	movwf	3996,c	;volatile
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;uart_drv.c: 348: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 28746  000CF6  C09D  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 28747  000CFA  C09E  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 28748  000CFE  50DF               	movf	indf2,w,c
 28749  000D00  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28750  000D02  0E00               	movlw	0
 28751  000D04  B19F               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 28752  000D06  0E80               	movlw	128
 28753  000D08  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28754  000D0A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28755  000D0C  129C               	iorwf	3996,f,c	;volatile
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;uart_drv.c: 349: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 28759  000D0E  EE20 F005          	lfsr	2,5
 28760  000D12  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28761  000D14  26D9               	addwf	fsr2l,f,c
 28762  000D16  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28763  000D18  22DA               	addwfc	fsr2h,f,c
 28764  000D1A  50DF               	movf	indf2,w,c
 28765  000D1C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28766  000D1E  0E06               	movlw	6
 28767  000D20  6FA0               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 28768  000D22                     u13625:
 28769  000D22  90D8               	bcf	status,0,c
 28770  000D24  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28771  000D26  2FA0               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 28772  000D28  D7FC               	goto	u13625
 28773  000D2A  519F               	movf	??_Uart_InitUartModule& (0+255),w,b
 28774  000D2C  129C               	iorwf	3996,f,c	;volatile
 28775                           
 28776                           ; BSR set to: 0
 28777                           ;uart_drv.c: 350: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 28778  000D2E  EE20 F007          	lfsr	2,7
 28779  000D32  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28780  000D34  26D9               	addwf	fsr2l,f,c
 28781  000D36  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28782  000D38  22DA               	addwfc	fsr2h,f,c
 28783  000D3A  50DF               	movf	indf2,w,c
 28784  000D3C  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28785  000D3E  399F               	swapf	??_Uart_InitUartModule& (0+255),w,b
 28786  000D40  0BF0               	andlw	240
 28787  000D42  129C               	iorwf	3996,f,c	;volatile
 28788                           
 28789                           ; BSR set to: 0
 28790                           ;uart_drv.c: 353: BAUDCON2 = 0x00;
 28791  000D44  0E00               	movlw	0
 28792  000D46  6E7C               	movwf	3964,c	;volatile
 28793                           
 28794                           ; BSR set to: 0
 28795                           ;uart_drv.c: 354: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 28796  000D48  EE20 F002          	lfsr	2,2
 28797  000D4C  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28798  000D4E  26D9               	addwf	fsr2l,f,c
 28799  000D50  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28800  000D52  22DA               	addwfc	fsr2h,f,c
 28801  000D54  50DF               	movf	indf2,w,c
 28802  000D56  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28803  000D58  90D8               	bcf	status,0,c
 28804  000D5A  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28805  000D5C  90D8               	bcf	status,0,c
 28806  000D5E  379F               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 28807  000D60  90D8               	bcf	status,0,c
 28808  000D62  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28809  000D64  127C               	iorwf	3964,f,c	;volatile
 28810                           
 28811                           ; BSR set to: 0
 28812                           ;uart_drv.c: 355: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 28813  000D66  EE20 F00A          	lfsr	2,10
 28814  000D6A  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28815  000D6C  26D9               	addwf	fsr2l,f,c
 28816  000D6E  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28817  000D70  22DA               	addwfc	fsr2h,f,c
 28818  000D72  50DF               	movf	indf2,w,c
 28819  000D74  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28820  000D76  90D8               	bcf	status,0,c
 28821  000D78  359F               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 28822  000D7A  127C               	iorwf	3964,f,c	;volatile
 28823                           
 28824                           ; BSR set to: 0
 28825                           ;uart_drv.c: 356: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 28826  000D7C  EE20 F009          	lfsr	2,9
 28827  000D80  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28828  000D82  26D9               	addwf	fsr2l,f,c
 28829  000D84  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28830  000D86  22DA               	addwfc	fsr2h,f,c
 28831  000D88  50DF               	movf	indf2,w,c
 28832  000D8A  127C               	iorwf	3964,f,c	;volatile
 28833                           
 28834                           ; BSR set to: 0
 28835                           ;uart_drv.c: 359: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 28836  000D8C  EE20 F00B          	lfsr	2,11
 28837  000D90  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28838  000D92  26D9               	addwf	fsr2l,f,c
 28839  000D94  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28840  000D96  22DA               	addwfc	fsr2h,f,c
 28841  000D98  50DF               	movf	indf2,w,c
 28842  000D9A  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28843  000D9C  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28844  000D9E  50A3               	movf	4003,w,c	;volatile
 28845  000DA0  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28846  000DA2  0BEF               	andlw	-17
 28847  000DA4  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28848  000DA6  6EA3               	movwf	4003,c	;volatile
 28849                           
 28850                           ; BSR set to: 0
 28851                           ;uart_drv.c: 360: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 28852  000DA8  EE20 F00C          	lfsr	2,12
 28853  000DAC  519D               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 28854  000DAE  26D9               	addwf	fsr2l,f,c
 28855  000DB0  519E               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 28856  000DB2  22DA               	addwfc	fsr2h,f,c
 28857  000DB4  50DF               	movf	indf2,w,c
 28858  000DB6  6F9F               	movwf	??_Uart_InitUartModule& (0+255),b
 28859  000DB8  3B9F               	swapf	??_Uart_InitUartModule& (0+255),f,b
 28860  000DBA  479F               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 28861  000DBC  50A3               	movf	4003,w,c	;volatile
 28862  000DBE  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28863  000DC0  0BDF               	andlw	-33
 28864  000DC2  199F               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 28865  000DC4  6EA3               	movwf	4003,c	;volatile
 28866                           
 28867                           ; BSR set to: 0
 28868  000DC6  0012               	return	
 28869  000DC8                     __end_of_Uart_InitUartModule:
 28870                           	opt stack 0
 28871                           tosu	equ	0xFFF
 28872                           tosh	equ	0xFFE
 28873                           tosl	equ	0xFFD
 28874                           pclath	equ	0xFFA
 28875                           tblptru	equ	0xFF8
 28876                           tblptrh	equ	0xFF7
 28877                           tblptrl	equ	0xFF6
 28878                           tablat	equ	0xFF5
 28879                           prodh	equ	0xFF4
 28880                           prodl	equ	0xFF3
 28881                           intcon	equ	0xFF2
 28882                           intcon2	equ	0xFF1
 28883                           intcon3	equ	0xFF0
 28884                           indf0	equ	0xFEF
 28885                           postinc0	equ	0xFEE
 28886                           plusw0	equ	0xFEB
 28887                           fsr0h	equ	0xFEA
 28888                           fsr0l	equ	0xFE9
 28889                           wreg	equ	0xFE8
 28890                           indf1	equ	0xFE7
 28891                           postinc1	equ	0xFE6
 28892                           postdec1	equ	0xFE5
 28893                           plusw1	equ	0xFE3
 28894                           fsr1h	equ	0xFE2
 28895                           fsr1l	equ	0xFE1
 28896                           indf2	equ	0xFDF
 28897                           postinc2	equ	0xFDE
 28898                           postdec2	equ	0xFDD
 28899                           plusw2	equ	0xFDB
 28900                           fsr2h	equ	0xFDA
 28901                           fsr2l	equ	0xFD9
 28902                           status	equ	0xFD8
 28903                           
 28904 ;; *************** function _SetUartBaudRate *****************
 28905 ;; Defined at:
 28906 ;;		line 121 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 28907 ;; Parameters:    Size  Location     Type
 28908 ;;  Module          1    wreg     unsigned char 
 28909 ;;  UartConfig      2   54[BANK0 ] PTR struct _UartConfig
 28910 ;;		 -> UartConfig(21), 
 28911 ;; Auto vars:     Size  Location     Type
 28912 ;;  Module          1   57[BANK0 ] unsigned char 
 28913 ;;  BaudRateRegi    2   58[BANK0 ] unsigned short 
 28914 ;;  DivisionFact    1   60[BANK0 ] unsigned char 
 28915 ;; Return value:  Size  Location     Type
 28916 ;;                  1    wreg      void 
 28917 ;; Registers used:
 28918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28919 ;; Tracked objects:
 28920 ;;		On entry : 0/0
 28921 ;;		On exit  : 0/0
 28922 ;;		Unchanged: 0/0
 28923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28925 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28927 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28928 ;;Total ram usage:        7 bytes
 28929 ;; Hardware stack levels used:    1
 28930 ;; Hardware stack levels required when called:   12
 28931 ;; This function calls:
 28932 ;;		___lldiv
 28933 ;;		___lmul
 28934 ;; This function is called by:
 28935 ;;		_Uart_InitUartModule
 28936 ;; This function uses a non-reentrant model
 28937 ;;
 28938                           
 28939                           	psect	text136
 28940  00296A                     __ptext136:
 28941                           	opt stack 0
 28942  00296A                     _SetUartBaudRate:
 28943                           	opt stack 14
 28944                           
 28945                           ; BSR set to: 0
 28946                           ;incstack = 0
 28947                           ;SetUartBaudRate@Module stored from wreg
 28948  00296A  0100               	movlb	0	; () banked
 28949  00296C  6F99               	movwf	SetUartBaudRate@Module& (0+255),b
 28950                           
 28951                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 28952  00296E  0E00               	movlw	0
 28953  002970  0100               	movlb	0	; () banked
 28954  002972  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 28955  002974  0E00               	movlw	0
 28956  002976  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 28957                           
 28958                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 28959  002978  0E00               	movlw	0
 28960  00297A  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 28961                           
 28962                           ; BSR set to: 0
 28963                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 28964  00297C  EE20 F002          	lfsr	2,2
 28965  002980  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28966  002982  26D9               	addwf	fsr2l,f,c
 28967  002984  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28968  002986  22DA               	addwfc	fsr2h,f,c
 28969  002988  50DF               	movf	indf2,w,c
 28970  00298A  A4D8               	btfss	status,2,c
 28971  00298C  D00B               	goto	l625
 28972                           
 28973                           ; BSR set to: 0
 28974  00298E  EE20 F002          	lfsr	2,2
 28975  002992  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28976  002994  26D9               	addwf	fsr2l,f,c
 28977  002996  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28978  002998  22DA               	addwfc	fsr2h,f,c
 28979  00299A  50DF               	movf	indf2,w,c
 28980  00299C  A4D8               	btfss	status,2,c
 28981  00299E  D002               	goto	l625
 28982                           
 28983                           ; BSR set to: 0
 28984                           ;uart_drv.c: 128: {
 28985                           ;uart_drv.c: 129: DivisionFactor = 64;
 28986  0029A0  0E40               	movlw	64
 28987  0029A2  D039               	goto	L61
 28988  0029A4                     l625:
 28989                           
 28990                           ; BSR set to: 0
 28991                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 28992                           
 28993                           ; BSR set to: 0
 28994  0029A4  EE20 F002          	lfsr	2,2
 28995  0029A8  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 28996  0029AA  26D9               	addwf	fsr2l,f,c
 28997  0029AC  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 28998  0029AE  22DA               	addwfc	fsr2h,f,c
 28999  0029B0  04DE               	decf	postinc2,w,c
 29000  0029B2  A4D8               	btfss	status,2,c
 29001  0029B4  D009               	goto	l627
 29002                           
 29003                           ; BSR set to: 0
 29004  0029B6  EE20 F002          	lfsr	2,2
 29005  0029BA  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29006  0029BC  26D9               	addwf	fsr2l,f,c
 29007  0029BE  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29008  0029C0  22DA               	addwfc	fsr2h,f,c
 29009  0029C2  50DF               	movf	indf2,w,c
 29010  0029C4  B4D8               	btfsc	status,2,c
 29011  0029C6  D012               	goto	u12650
 29012  0029C8                     l627:
 29013                           
 29014                           ; BSR set to: 0
 29015                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29016                           
 29017                           ; BSR set to: 0
 29018  0029C8  EE20 F002          	lfsr	2,2
 29019  0029CC  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29020  0029CE  26D9               	addwf	fsr2l,f,c
 29021  0029D0  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29022  0029D2  22DA               	addwfc	fsr2h,f,c
 29023  0029D4  50DF               	movf	indf2,w,c
 29024  0029D6  A4D8               	btfss	status,2,c
 29025  0029D8  D00B               	goto	l629
 29026                           
 29027                           ; BSR set to: 0
 29028  0029DA  EE20 F002          	lfsr	2,2
 29029  0029DE  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29030  0029E0  26D9               	addwf	fsr2l,f,c
 29031  0029E2  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29032  0029E4  22DA               	addwfc	fsr2h,f,c
 29033  0029E6  04DE               	decf	postinc2,w,c
 29034  0029E8  A4D8               	btfss	status,2,c
 29035  0029EA  D002               	goto	l629
 29036  0029EC                     u12650:
 29037                           
 29038                           ; BSR set to: 0
 29039                           ;uart_drv.c: 136: {
 29040                           ;uart_drv.c: 137: DivisionFactor = 16;
 29041  0029EC  0E10               	movlw	16
 29042  0029EE  D013               	goto	L61
 29043  0029F0                     l629:
 29044                           
 29045                           ; BSR set to: 0
 29046                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 29047                           
 29048                           ; BSR set to: 0
 29049  0029F0  EE20 F002          	lfsr	2,2
 29050  0029F4  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29051  0029F6  26D9               	addwf	fsr2l,f,c
 29052  0029F8  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29053  0029FA  22DA               	addwfc	fsr2h,f,c
 29054  0029FC  04DE               	decf	postinc2,w,c
 29055  0029FE  A4D8               	btfss	status,2,c
 29056  002A00  D00B               	goto	l631
 29057                           
 29058                           ; BSR set to: 0
 29059  002A02  EE20 F002          	lfsr	2,2
 29060  002A06  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29061  002A08  26D9               	addwf	fsr2l,f,c
 29062  002A0A  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29063  002A0C  22DA               	addwfc	fsr2h,f,c
 29064  002A0E  04DE               	decf	postinc2,w,c
 29065  002A10  A4D8               	btfss	status,2,c
 29066  002A12  D002               	goto	l631
 29067                           
 29068                           ; BSR set to: 0
 29069                           ;uart_drv.c: 140: {
 29070                           ;uart_drv.c: 141: DivisionFactor = 4;
 29071  002A14  0E04               	movlw	4
 29072  002A16                     L61:
 29073  002A16  6F9C               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 29074  002A18                     l631:
 29075                           
 29076                           ; BSR set to: 0
 29077                           ;uart_drv.c: 146: }
 29078                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 29079                           
 29080                           ; BSR set to: 0
 29081                           
 29082                           ; BSR set to: 0
 29083                           
 29084                           ; BSR set to: 0
 29085                           
 29086                           ; BSR set to: 0
 29087                           
 29088                           ;uart_drv.c: 143: else
 29089                           ;uart_drv.c: 144: {
 29090                           
 29091                           ; BSR set to: 0
 29092  002A18  EE20 F00D          	lfsr	2,13
 29093  002A1C  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29094  002A1E  26D9               	addwf	fsr2l,f,c
 29095  002A20  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29096  002A22  22DA               	addwfc	fsr2h,f,c
 29097  002A24  CFDE F089          	movff	postinc2,___lldiv@dividend
 29098  002A28  CFDE F08A          	movff	postinc2,___lldiv@dividend+1
 29099  002A2C  CFDE F08B          	movff	postinc2,___lldiv@dividend+2
 29100  002A30  CFDE F08C          	movff	postinc2,___lldiv@dividend+3
 29101  002A34  519C               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 29102  002A36  6F7D               	movwf	___lmul@multiplier& (0+255),b
 29103  002A38  6B7E               	clrf	(___lmul@multiplier+1)& (0+255),b
 29104  002A3A  6B7F               	clrf	(___lmul@multiplier+2)& (0+255),b
 29105  002A3C  6B80               	clrf	(___lmul@multiplier+3)& (0+255),b
 29106  002A3E  EE20 F011          	lfsr	2,17
 29107  002A42  5196               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 29108  002A44  26D9               	addwf	fsr2l,f,c
 29109  002A46  5197               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 29110  002A48  22DA               	addwfc	fsr2h,f,c
 29111  002A4A  CFDE F081          	movff	postinc2,___lmul@multiplicand
 29112  002A4E  CFDE F082          	movff	postinc2,___lmul@multiplicand+1
 29113  002A52  CFDE F083          	movff	postinc2,___lmul@multiplicand+2
 29114  002A56  CFDE F084          	movff	postinc2,___lmul@multiplicand+3
 29115  002A5A  ECBA  F02C         	call	___lmul	;wreg free
 29116  002A5E  C07D  F08D         	movff	?___lmul,___lldiv@divisor
 29117  002A62  C07E  F08E         	movff	?___lmul+1,___lldiv@divisor+1
 29118  002A66  C07F  F08F         	movff	?___lmul+2,___lldiv@divisor+2
 29119  002A6A  C080  F090         	movff	?___lmul+3,___lldiv@divisor+3
 29120  002A6E  ECFE  F028         	call	___lldiv	;wreg free
 29121  002A72  0EFF               	movlw	255
 29122  002A74  0100               	movlb	0	; () banked
 29123  002A76  2589               	addwf	?___lldiv& (0+255),w,b
 29124  002A78  6F9A               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 29125  002A7A  0EFF               	movlw	255
 29126  002A7C  218A               	addwfc	(?___lldiv+1)& (0+255),w,b
 29127  002A7E  6F9B               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 29128                           
 29129                           ; BSR set to: 0
 29130                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 29131  002A80  0599               	decf	SetUartBaudRate@Module& (0+255),w,b
 29132  002A82  A4D8               	btfss	status,2,c
 29133  002A84  D005               	goto	l633
 29134                           
 29135                           ; BSR set to: 0
 29136                           ;uart_drv.c: 152: {
 29137                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29138  002A86  0E00               	movlw	0
 29139  002A88  6E7F               	movwf	3967,c	;volatile
 29140                           
 29141                           ; BSR set to: 0
 29142                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29143  002A8A  C09A  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 29144                           
 29145                           ;uart_drv.c: 156: }
 29146  002A8E  0012               	return	
 29147  002A90                     l633:
 29148                           
 29149                           ; BSR set to: 0
 29150                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 29151                           
 29152                           ; BSR set to: 0
 29153  002A90  0E02               	movlw	2
 29154  002A92  1999               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 29155  002A94  A4D8               	btfss	status,2,c
 29156  002A96  0012               	return	
 29157                           
 29158                           ; BSR set to: 0
 29159                           ;uart_drv.c: 158: {
 29160                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 29161  002A98  0E00               	movlw	0
 29162  002A9A  6E7D               	movwf	3965,c	;volatile
 29163                           
 29164                           ; BSR set to: 0
 29165                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 29166  002A9C  C09A  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 29167                           
 29168                           ; BSR set to: 0
 29169  002AA0  0012               	return	
 29170  002AA2                     __end_of_SetUartBaudRate:
 29171                           	opt stack 0
 29172                           tosu	equ	0xFFF
 29173                           tosh	equ	0xFFE
 29174                           tosl	equ	0xFFD
 29175                           pclath	equ	0xFFA
 29176                           tblptru	equ	0xFF8
 29177                           tblptrh	equ	0xFF7
 29178                           tblptrl	equ	0xFF6
 29179                           tablat	equ	0xFF5
 29180                           prodh	equ	0xFF4
 29181                           prodl	equ	0xFF3
 29182                           intcon	equ	0xFF2
 29183                           intcon2	equ	0xFF1
 29184                           intcon3	equ	0xFF0
 29185                           indf0	equ	0xFEF
 29186                           postinc0	equ	0xFEE
 29187                           plusw0	equ	0xFEB
 29188                           fsr0h	equ	0xFEA
 29189                           fsr0l	equ	0xFE9
 29190                           wreg	equ	0xFE8
 29191                           indf1	equ	0xFE7
 29192                           postinc1	equ	0xFE6
 29193                           postdec1	equ	0xFE5
 29194                           plusw1	equ	0xFE3
 29195                           fsr1h	equ	0xFE2
 29196                           fsr1l	equ	0xFE1
 29197                           indf2	equ	0xFDF
 29198                           postinc2	equ	0xFDE
 29199                           postdec2	equ	0xFDD
 29200                           plusw2	equ	0xFDB
 29201                           fsr2h	equ	0xFDA
 29202                           fsr2l	equ	0xFD9
 29203                           status	equ	0xFD8
 29204                           
 29205 ;; *************** function ___lmul *****************
 29206 ;; Defined at:
 29207 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul32.c"
 29208 ;; Parameters:    Size  Location     Type
 29209 ;;  multiplier      4   29[BANK0 ] unsigned long 
 29210 ;;  multiplicand    4   33[BANK0 ] unsigned long 
 29211 ;; Auto vars:     Size  Location     Type
 29212 ;;  product         4   37[BANK0 ] unsigned long 
 29213 ;; Return value:  Size  Location     Type
 29214 ;;                  4   29[BANK0 ] unsigned long 
 29215 ;; Registers used:
 29216 ;;		wreg, status,2, status,0
 29217 ;; Tracked objects:
 29218 ;;		On entry : 0/0
 29219 ;;		On exit  : 0/0
 29220 ;;		Unchanged: 0/0
 29221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29222 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29223 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29225 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29226 ;;Total ram usage:       12 bytes
 29227 ;; Hardware stack levels used:    1
 29228 ;; Hardware stack levels required when called:   11
 29229 ;; This function calls:
 29230 ;;		Nothing
 29231 ;; This function is called by:
 29232 ;;		_Tmr_TmrBPrSet
 29233 ;;		_SetUartBaudRate
 29234 ;;		_strtol
 29235 ;; This function uses a non-reentrant model
 29236 ;;
 29237                           
 29238                           	psect	text137
 29239  005974                     __ptext137:
 29240                           	opt stack 0
 29241  005974                     ___lmul:
 29242                           	opt stack 15
 29243                           
 29244                           ; BSR set to: 0
 29245                           ;incstack = 0
 29246  005974  0E00               	movlw	0
 29247  005976  0100               	movlb	0	; () banked
 29248  005978  6F85               	movwf	___lmul@product& (0+255),b
 29249  00597A  0E00               	movlw	0
 29250  00597C  6F86               	movwf	(___lmul@product+1)& (0+255),b
 29251  00597E  0E00               	movlw	0
 29252  005980  6F87               	movwf	(___lmul@product+2)& (0+255),b
 29253  005982  0E00               	movlw	0
 29254  005984  6F88               	movwf	(___lmul@product+3)& (0+255),b
 29255  005986                     
 29256                           ; BSR set to: 0
 29257                           
 29258                           ; BSR set to: 0
 29259  005986  A17D               	btfss	___lmul@multiplier& (0+255),0,b
 29260  005988  D008               	goto	l2923
 29261                           
 29262                           ; BSR set to: 0
 29263  00598A  5181               	movf	___lmul@multiplicand& (0+255),w,b
 29264  00598C  2785               	addwf	___lmul@product& (0+255),f,b
 29265  00598E  5182               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 29266  005990  2386               	addwfc	(___lmul@product+1)& (0+255),f,b
 29267  005992  5183               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 29268  005994  2387               	addwfc	(___lmul@product+2)& (0+255),f,b
 29269  005996  5184               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29270  005998  2388               	addwfc	(___lmul@product+3)& (0+255),f,b
 29271  00599A                     l2923:
 29272                           
 29273                           ; BSR set to: 0
 29274                           
 29275                           ; BSR set to: 0
 29276  00599A  90D8               	bcf	status,0,c
 29277  00599C  3781               	rlcf	___lmul@multiplicand& (0+255),f,b
 29278  00599E  3782               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 29279  0059A0  3783               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 29280  0059A2  3784               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 29281                           
 29282                           ; BSR set to: 0
 29283  0059A4  90D8               	bcf	status,0,c
 29284  0059A6  3380               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 29285  0059A8  337F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 29286  0059AA  337E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 29287  0059AC  337D               	rrcf	___lmul@multiplier& (0+255),f,b
 29288  0059AE  517D               	movf	___lmul@multiplier& (0+255),w,b
 29289  0059B0  117E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 29290  0059B2  117F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 29291  0059B4  1180               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 29292  0059B6  A4D8               	btfss	status,2,c
 29293  0059B8  D7E6               	goto	l2922
 29294                           
 29295                           ; BSR set to: 0
 29296  0059BA  C085  F07D         	movff	___lmul@product,?___lmul
 29297  0059BE  C086  F07E         	movff	___lmul@product+1,?___lmul+1
 29298  0059C2  C087  F07F         	movff	___lmul@product+2,?___lmul+2
 29299  0059C6  C088  F080         	movff	___lmul@product+3,?___lmul+3
 29300                           
 29301                           ; BSR set to: 0
 29302  0059CA  0012               	return		;funcret
 29303  0059CC                     __end_of___lmul:
 29304                           	opt stack 0
 29305                           tosu	equ	0xFFF
 29306                           tosh	equ	0xFFE
 29307                           tosl	equ	0xFFD
 29308                           pclath	equ	0xFFA
 29309                           tblptru	equ	0xFF8
 29310                           tblptrh	equ	0xFF7
 29311                           tblptrl	equ	0xFF6
 29312                           tablat	equ	0xFF5
 29313                           prodh	equ	0xFF4
 29314                           prodl	equ	0xFF3
 29315                           intcon	equ	0xFF2
 29316                           intcon2	equ	0xFF1
 29317                           intcon3	equ	0xFF0
 29318                           indf0	equ	0xFEF
 29319                           postinc0	equ	0xFEE
 29320                           plusw0	equ	0xFEB
 29321                           fsr0h	equ	0xFEA
 29322                           fsr0l	equ	0xFE9
 29323                           wreg	equ	0xFE8
 29324                           indf1	equ	0xFE7
 29325                           postinc1	equ	0xFE6
 29326                           postdec1	equ	0xFE5
 29327                           plusw1	equ	0xFE3
 29328                           fsr1h	equ	0xFE2
 29329                           fsr1l	equ	0xFE1
 29330                           indf2	equ	0xFDF
 29331                           postinc2	equ	0xFDE
 29332                           postdec2	equ	0xFDD
 29333                           plusw2	equ	0xFDB
 29334                           fsr2h	equ	0xFDA
 29335                           fsr2l	equ	0xFD9
 29336                           status	equ	0xFD8
 29337                           
 29338 ;; *************** function _UartSetConfigLow *****************
 29339 ;; Defined at:
 29340 ;;		line 229 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29341 ;; Parameters:    Size  Location     Type
 29342 ;;		None
 29343 ;; Auto vars:     Size  Location     Type
 29344 ;;		None
 29345 ;; Return value:  Size  Location     Type
 29346 ;;                  1    wreg      void 
 29347 ;; Registers used:
 29348 ;;		wreg, status,2
 29349 ;; Tracked objects:
 29350 ;;		On entry : 0/0
 29351 ;;		On exit  : 0/0
 29352 ;;		Unchanged: 0/0
 29353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29358 ;;Total ram usage:        0 bytes
 29359 ;; Hardware stack levels used:    1
 29360 ;; Hardware stack levels required when called:   11
 29361 ;; This function calls:
 29362 ;;		Nothing
 29363 ;; This function is called by:
 29364 ;;		_ConfigureModem
 29365 ;; This function uses a non-reentrant model
 29366 ;;
 29367                           
 29368                           	psect	text138
 29369  0059CC                     __ptext138:
 29370                           	opt stack 0
 29371  0059CC                     _UartSetConfigLow:
 29372                           	opt stack 15
 29373                           
 29374                           ;mdm_gsm_gprs.c: 231: UartConfig.UartEnable = ((UINT8)(1));
 29375                           
 29376                           ; BSR set to: 0
 29377                           ;incstack = 0
 29378  0059CC  0E01               	movlw	1
 29379  0059CE  0103               	movlb	3	; () banked
 29380  0059D0  6F1C               	movwf	_UartConfig& (0+255),b
 29381                           
 29382                           ;mdm_gsm_gprs.c: 232: UartConfig.UartMode = ((UINT8)(0));
 29383  0059D2  0E00               	movlw	0
 29384  0059D4  6F1D               	movwf	(_UartConfig+1)& (0+255),b
 29385                           
 29386                           ;mdm_gsm_gprs.c: 233: UartConfig.BaudRateMode = ((UINT8)(0));
 29387  0059D6  0E00               	movlw	0
 29388  0059D8  6F1E               	movwf	(_UartConfig+2)& (0+255),b
 29389                           
 29390                           ;mdm_gsm_gprs.c: 234: UartConfig.HighBaudMode = ((UINT8)(0));
 29391  0059DA  0E00               	movlw	0
 29392  0059DC  6F1F               	movwf	(_UartConfig+3)& (0+255),b
 29393                           
 29394                           ;mdm_gsm_gprs.c: 235: UartConfig.Tx9bitMode = ((UINT8)(0));
 29395  0059DE  0E00               	movlw	0
 29396  0059E0  6F20               	movwf	(_UartConfig+4)& (0+255),b
 29397                           
 29398                           ;mdm_gsm_gprs.c: 236: UartConfig.Rx9bitMode = ((UINT8)(0));
 29399  0059E2  0E00               	movlw	0
 29400  0059E4  6F21               	movwf	(_UartConfig+5)& (0+255),b
 29401                           
 29402                           ;mdm_gsm_gprs.c: 237: UartConfig.TxEnable = ((UINT8)(1));
 29403  0059E6  0E01               	movlw	1
 29404  0059E8  6F22               	movwf	(_UartConfig+6)& (0+255),b
 29405                           
 29406                           ;mdm_gsm_gprs.c: 238: UartConfig.RxEnable = ((UINT8)(1));
 29407  0059EA  0E01               	movlw	1
 29408  0059EC  6F23               	movwf	(_UartConfig+7)& (0+255),b
 29409                           
 29410                           ;mdm_gsm_gprs.c: 239: UartConfig.SendBreakEnable = ((UINT8)(0));
 29411  0059EE  0E00               	movlw	0
 29412  0059F0  6F24               	movwf	(_UartConfig+8)& (0+255),b
 29413                           
 29414                           ;mdm_gsm_gprs.c: 240: UartConfig.AutobaudEnable = ((UINT8)(0));
 29415  0059F2  0E00               	movlw	0
 29416  0059F4  6F25               	movwf	(_UartConfig+9)& (0+255),b
 29417                           
 29418                           ;mdm_gsm_gprs.c: 241: UartConfig.WakeUpEnable = ((UINT8)(0));
 29419  0059F6  0E00               	movlw	0
 29420  0059F8  6F26               	movwf	(_UartConfig+10)& (0+255),b
 29421                           
 29422                           ;mdm_gsm_gprs.c: 242: UartConfig.TxInterruptEnable = ((UINT8)(0));
 29423  0059FA  0E00               	movlw	0
 29424  0059FC  6F27               	movwf	(_UartConfig+11)& (0+255),b
 29425                           
 29426                           ;mdm_gsm_gprs.c: 243: UartConfig.RxInterruptEnable = ((UINT8)(1));
 29427  0059FE  0E01               	movlw	1
 29428  005A00  6F28               	movwf	(_UartConfig+12)& (0+255),b
 29429                           
 29430                           ;mdm_gsm_gprs.c: 244: UartConfig.McuBusClock = ((UINT32)(48000000));
 29431  005A02  0E00               	movlw	0
 29432  005A04  6F29               	movwf	(_UartConfig+13)& (0+255),b
 29433  005A06  0E6C               	movlw	108
 29434  005A08  6F2A               	movwf	(_UartConfig+14)& (0+255),b
 29435  005A0A  0EDC               	movlw	220
 29436  005A0C  6F2B               	movwf	(_UartConfig+15)& (0+255),b
 29437  005A0E  0E02               	movlw	2
 29438  005A10  6F2C               	movwf	(_UartConfig+16)& (0+255),b
 29439                           
 29440                           ;mdm_gsm_gprs.c: 245: UartConfig.DesiredBaudRate = ((UINT32)(9600));
 29441  005A12  0E80               	movlw	128
 29442  005A14  6F2D               	movwf	(_UartConfig+17)& (0+255),b
 29443  005A16  0E25               	movlw	37
 29444  005A18  6F2E               	movwf	(_UartConfig+18)& (0+255),b
 29445  005A1A  0E00               	movlw	0
 29446  005A1C  6F2F               	movwf	(_UartConfig+19)& (0+255),b
 29447  005A1E  0E00               	movlw	0
 29448  005A20  6F30               	movwf	(_UartConfig+20)& (0+255),b
 29449                           
 29450                           ; BSR set to: 3
 29451  005A22  0012               	return		;funcret
 29452  005A24                     __end_of_UartSetConfigLow:
 29453                           	opt stack 0
 29454                           tosu	equ	0xFFF
 29455                           tosh	equ	0xFFE
 29456                           tosl	equ	0xFFD
 29457                           pclath	equ	0xFFA
 29458                           tblptru	equ	0xFF8
 29459                           tblptrh	equ	0xFF7
 29460                           tblptrl	equ	0xFF6
 29461                           tablat	equ	0xFF5
 29462                           prodh	equ	0xFF4
 29463                           prodl	equ	0xFF3
 29464                           intcon	equ	0xFF2
 29465                           intcon2	equ	0xFF1
 29466                           intcon3	equ	0xFF0
 29467                           indf0	equ	0xFEF
 29468                           postinc0	equ	0xFEE
 29469                           plusw0	equ	0xFEB
 29470                           fsr0h	equ	0xFEA
 29471                           fsr0l	equ	0xFE9
 29472                           wreg	equ	0xFE8
 29473                           indf1	equ	0xFE7
 29474                           postinc1	equ	0xFE6
 29475                           postdec1	equ	0xFE5
 29476                           plusw1	equ	0xFE3
 29477                           fsr1h	equ	0xFE2
 29478                           fsr1l	equ	0xFE1
 29479                           indf2	equ	0xFDF
 29480                           postinc2	equ	0xFDE
 29481                           postdec2	equ	0xFDD
 29482                           plusw2	equ	0xFDB
 29483                           fsr2h	equ	0xFDA
 29484                           fsr2l	equ	0xFD9
 29485                           status	equ	0xFD8
 29486                           
 29487 ;; *************** function _CheckModem *****************
 29488 ;; Defined at:
 29489 ;;		line 283 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs.c"
 29490 ;; Parameters:    Size  Location     Type
 29491 ;;		None
 29492 ;; Auto vars:     Size  Location     Type
 29493 ;;		None
 29494 ;; Return value:  Size  Location     Type
 29495 ;;                  1    wreg      void 
 29496 ;; Registers used:
 29497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29498 ;; Tracked objects:
 29499 ;;		On entry : 0/0
 29500 ;;		On exit  : 0/0
 29501 ;;		Unchanged: 0/0
 29502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29507 ;;Total ram usage:        0 bytes
 29508 ;; Hardware stack levels used:    1
 29509 ;; Hardware stack levels required when called:   14
 29510 ;; This function calls:
 29511 ;;		_GenerateEvt
 29512 ;;		_OsTmr_GetTimerStatus
 29513 ;;		_OsTmr_StartTimer
 29514 ;;		_ReceiveEvt
 29515 ;;		_Uart_WriteConstString
 29516 ;; This function is called by:
 29517 ;;		_Mdm_MainTask
 29518 ;; This function uses a non-reentrant model
 29519 ;;
 29520                           
 29521                           	psect	text139
 29522  002020                     __ptext139:
 29523                           	opt stack 0
 29524  002020                     _CheckModem:
 29525                           	opt stack 13
 29526                           
 29527                           ;mdm_gsm_gprs.c: 285: static CheckMdmStsType CheckMdmSts = MdmCh_SetInitialDelay;
 29528                           ;mdm_gsm_gprs.c: 286: static SwTimerType Timeout = { 0u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 29529                           ;mdm_gsm_gprs.c: 288: switch (CheckMdmSts)
 29530                           
 29531                           ; BSR set to: 3
 29532                           ;incstack = 0
 29533  002020  D09C               	goto	l982
 29534  002022                     
 29535                           ;mdm_gsm_gprs.c: 292: OsTmr_StartTimer(&Timeout,2000);
 29536  002022  0EF5               	movlw	low CheckModem@Timeout
 29537  002024  0100               	movlb	0	; () banked
 29538  002026  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29539  002028  0E03               	movlw	high CheckModem@Timeout
 29540  00202A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29541  00202C  0ED0               	movlw	208
 29542  00202E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29543  002030  0E07               	movlw	7
 29544  002032  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29545  002034  0E00               	movlw	0
 29546  002036  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29547  002038  0E00               	movlw	0
 29548  00203A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29549  00203C  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 29550                           
 29551                           ;mdm_gsm_gprs.c: 294: CheckMdmSts = MdmCh_InitialDelay;
 29552  002040  0E01               	movlw	1
 29553  002042  0101               	movlb	1	; () banked
 29554  002044  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29555                           
 29556                           ;mdm_gsm_gprs.c: 295: break;
 29557  002046  0012               	return	
 29558  002048                     
 29559                           ; BSR set to: 1
 29560                           ;mdm_gsm_gprs.c: 299: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29561                           
 29562                           ; BSR set to: 1
 29563  002048  0EF5               	movlw	low CheckModem@Timeout
 29564  00204A  0100               	movlb	0	; () banked
 29565  00204C  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29566  00204E  0E03               	movlw	high CheckModem@Timeout
 29567  002050  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29568  002052  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29569  002056  06E8               	decf	wreg,f,c
 29570  002058  A4D8               	btfss	status,2,c
 29571  00205A  0012               	return	
 29572                           
 29573                           ;mdm_gsm_gprs.c: 300: {
 29574                           ;mdm_gsm_gprs.c: 302: CheckMdmSts = MdmCh_SendATE1;
 29575  00205C  0E02               	movlw	2
 29576  00205E  0101               	movlb	1	; () banked
 29577  002060  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29578                           
 29579                           ; BSR set to: 1
 29580                           ;mdm_gsm_gprs.c: 303: }
 29581                           ;mdm_gsm_gprs.c: 304: break;
 29582  002062  0012               	return	
 29583  002064                     
 29584                           ; BSR set to: 1
 29585                           ;mdm_gsm_gprs.c: 308: Uart_WriteConstString(1,"AT\r\n");
 29586                           
 29587                           ; BSR set to: 1
 29588  002064  0EE6               	movlw	low STR_1
 29589  002066  0100               	movlb	0	; () banked
 29590  002068  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 29591  00206A  0EFF               	movlw	high STR_1
 29592  00206C  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 29593  00206E  0E01               	movlw	1
 29594  002070  EC8E  F030         	call	_Uart_WriteConstString
 29595                           
 29596                           ;mdm_gsm_gprs.c: 310: OsTmr_StartTimer(&Timeout,2000u);
 29597  002074  0EF5               	movlw	low CheckModem@Timeout
 29598  002076  0100               	movlb	0	; () banked
 29599  002078  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29600  00207A  0E03               	movlw	high CheckModem@Timeout
 29601  00207C  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29602  00207E  0ED0               	movlw	208
 29603  002080  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29604  002082  0E07               	movlw	7
 29605  002084  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29606  002086  0E00               	movlw	0
 29607  002088  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29608  00208A  0E00               	movlw	0
 29609  00208C  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29610  00208E  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 29611                           
 29612                           ;mdm_gsm_gprs.c: 312: CheckMdmSts = MdmCh_WaitEcho;
 29613  002092  0E03               	movlw	3
 29614  002094  0101               	movlb	1	; () banked
 29615  002096  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29616                           
 29617                           ;mdm_gsm_gprs.c: 313: break;
 29618  002098  0012               	return	
 29619  00209A                     
 29620                           ; BSR set to: 1
 29621                           ;mdm_gsm_gprs.c: 317: if (ReceiveEvt(&NewStringReceived))
 29622                           
 29623                           ; BSR set to: 1
 29624  00209A  0E3A               	movlw	low _NewStringReceived
 29625  00209C  0100               	movlb	0	; () banked
 29626  00209E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29627  0020A0  0E00               	movlw	high _NewStringReceived
 29628  0020A2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29629  0020A4  ECD7  F032         	call	_ReceiveEvt	;wreg free
 29630  0020A8  0900               	iorlw	0
 29631  0020AA  B4D8               	btfsc	status,2,c
 29632  0020AC  D030               	goto	l989
 29633                           
 29634                           ;mdm_gsm_gprs.c: 318: {
 29635                           ;mdm_gsm_gprs.c: 320: if (((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K')) || ((RxBuffer[1
      +                          ] == 'O') && (RxBuffer[2] == 'K')))
 29636  0020AE  CC58  FFE8         	movff	_RxBuffer,wreg
 29637  0020B2  0A4F               	xorlw	79
 29638  0020B4  A4D8               	btfss	status,2,c
 29639  0020B6  D005               	goto	u14760
 29640  0020B8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29641  0020BC  0A4B               	xorlw	75
 29642  0020BE  B4D8               	btfsc	status,2,c
 29643  0020C0  D00A               	goto	u14780
 29644  0020C2                     u14760:
 29645  0020C2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 29646  0020C6  0A4F               	xorlw	79
 29647  0020C8  A4D8               	btfss	status,2,c
 29648  0020CA  0012               	return	
 29649  0020CC  CC5A  FFE8         	movff	_RxBuffer+2,wreg
 29650  0020D0  0A4B               	xorlw	75
 29651  0020D2  A4D8               	btfss	status,2,c
 29652  0020D4  0012               	return	
 29653  0020D6                     u14780:
 29654                           
 29655                           ;mdm_gsm_gprs.c: 321: {
 29656                           ;mdm_gsm_gprs.c: 322: MdmStatus = ModemReady;
 29657  0020D6  0E02               	movlw	2
 29658  0020D8  0100               	movlb	0	; () banked
 29659  0020DA  6FD2               	movwf	_MdmStatus& (0+255),b
 29660                           
 29661                           ; BSR set to: 0
 29662                           ;mdm_gsm_gprs.c: 324: GenerateEvt(&MdmOnOffPulseRequest);
 29663  0020DC  0EE2               	movlw	low _MdmOnOffPulseRequest
 29664  0020DE  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 29665  0020E0  0E00               	movlw	high _MdmOnOffPulseRequest
 29666  0020E2  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 29667  0020E4  ECC8  F034         	call	_GenerateEvt	;wreg free
 29668                           
 29669                           ;mdm_gsm_gprs.c: 326: OsTmr_StartTimer(&Timeout,1000u);
 29670  0020E8  0EF5               	movlw	low CheckModem@Timeout
 29671  0020EA  0100               	movlb	0	; () banked
 29672  0020EC  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 29673  0020EE  0E03               	movlw	high CheckModem@Timeout
 29674  0020F0  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 29675  0020F2  0EE8               	movlw	232
 29676  0020F4  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 29677  0020F6  0E03               	movlw	3
 29678  0020F8  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 29679  0020FA  0E00               	movlw	0
 29680  0020FC  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 29681  0020FE  0E00               	movlw	0
 29682  002100  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 29683  002102  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 29684                           
 29685                           ;mdm_gsm_gprs.c: 328: CheckMdmSts = MdmCh_Delay;
 29686  002106  0E04               	movlw	4
 29687  002108  0101               	movlb	1	; () banked
 29688  00210A  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29689                           
 29690                           ; BSR set to: 1
 29691                           ;mdm_gsm_gprs.c: 329: }
 29692                           ;mdm_gsm_gprs.c: 330: }
 29693  00210C  0012               	return	
 29694  00210E                     l989:
 29695                           
 29696                           ;mdm_gsm_gprs.c: 331: else if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29697                           
 29698                           ; BSR set to: 1
 29699  00210E  0EF5               	movlw	low CheckModem@Timeout
 29700  002110  0100               	movlb	0	; () banked
 29701  002112  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29702  002114  0E03               	movlw	high CheckModem@Timeout
 29703  002116  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29704  002118  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29705  00211C  06E8               	decf	wreg,f,c
 29706  00211E  A4D8               	btfss	status,2,c
 29707  002120  0012               	return	
 29708                           
 29709                           ;mdm_gsm_gprs.c: 332: {
 29710                           ;mdm_gsm_gprs.c: 334: MdmStatus = ModemOff;
 29711  002122  0E00               	movlw	0
 29712  002124  0100               	movlb	0	; () banked
 29713  002126  6FD2               	movwf	_MdmStatus& (0+255),b
 29714                           
 29715                           ;mdm_gsm_gprs.c: 336: ComChecCompleted = 1u;
 29716  002128  0E01               	movlw	1
 29717  00212A  6E2A               	movwf	_ComChecCompleted,c
 29718                           
 29719                           ;mdm_gsm_gprs.c: 338: CheckMdmSts = MdmCh_Done;
 29720  00212C  0E05               	movlw	5
 29721  00212E  0101               	movlb	1	; () banked
 29722  002130  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29723                           
 29724                           ; BSR set to: 1
 29725                           ;mdm_gsm_gprs.c: 343: }
 29726                           ;mdm_gsm_gprs.c: 344: break;
 29727                           
 29728                           ; BSR set to: 1
 29729                           
 29730                           ;mdm_gsm_gprs.c: 340: else
 29731                           ;mdm_gsm_gprs.c: 341: {
 29732                           
 29733                           ; BSR set to: 1
 29734                           
 29735                           ;mdm_gsm_gprs.c: 339: }
 29736  002132  0012               	return	
 29737  002134                     
 29738                           ; BSR set to: 1
 29739                           ;mdm_gsm_gprs.c: 348: if (OsTmr_GetTimerStatus(&Timeout) == SwTimerExpired)
 29740                           
 29741                           ; BSR set to: 1
 29742  002134  0EF5               	movlw	low CheckModem@Timeout
 29743  002136  0100               	movlb	0	; () banked
 29744  002138  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 29745  00213A  0E03               	movlw	high CheckModem@Timeout
 29746  00213C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 29747  00213E  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 29748  002142  06E8               	decf	wreg,f,c
 29749  002144  A4D8               	btfss	status,2,c
 29750  002146  0012               	return	
 29751                           
 29752                           ;mdm_gsm_gprs.c: 349: {
 29753                           ;mdm_gsm_gprs.c: 351: MdmStatus = ModemOff;
 29754  002148  0E00               	movlw	0
 29755  00214A  0100               	movlb	0	; () banked
 29756  00214C  6FD2               	movwf	_MdmStatus& (0+255),b
 29757                           
 29758                           ;mdm_gsm_gprs.c: 353: ComChecCompleted = 1u;
 29759  00214E  0E01               	movlw	1
 29760  002150  6E2A               	movwf	_ComChecCompleted,c
 29761                           
 29762                           ;mdm_gsm_gprs.c: 355: CheckMdmSts = MdmCh_Done;
 29763  002152  0E05               	movlw	5
 29764  002154  0101               	movlb	1	; () banked
 29765  002156  6FF3               	movwf	CheckModem@CheckMdmSts& (0+255),b
 29766                           
 29767                           ; BSR set to: 1
 29768                           ;mdm_gsm_gprs.c: 365: }
 29769                           
 29770                           ; BSR set to: 1
 29771                           ;mdm_gsm_gprs.c: 364: break;
 29772                           
 29773                           ;mdm_gsm_gprs.c: 363: default:
 29774                           
 29775                           ; BSR set to: 1
 29776                           ;mdm_gsm_gprs.c: 361: break;
 29777                           
 29778                           ;mdm_gsm_gprs.c: 359: case MdmCh_Done:
 29779                           
 29780                           ; BSR set to: 1
 29781                           ;mdm_gsm_gprs.c: 356: }
 29782                           ;mdm_gsm_gprs.c: 357: break;
 29783  002158  0012               	return	
 29784  00215A                     l982:
 29785                           
 29786                           ; BSR set to: 1
 29787  00215A  0101               	movlb	1	; () banked
 29788  00215C  51F3               	movf	CheckModem@CheckMdmSts& (0+255),w,b
 29789                           
 29790                           ; Switch size 1, requested type "space"
 29791                           ; Number of cases is 6, Range of values is 0 to 5
 29792                           ; switch strategies available:
 29793                           ; Name         Instructions Cycles
 29794                           ; simple_byte           19    10 (average)
 29795                           ;	Chosen strategy is simple_byte
 29796  00215E  0A00               	xorlw	0	; case 0
 29797  002160  B4D8               	btfsc	status,2,c
 29798  002162  D75F               	goto	l983
 29799  002164  0A01               	xorlw	1	; case 1
 29800  002166  B4D8               	btfsc	status,2,c
 29801  002168  D76F               	goto	l985
 29802  00216A  0A03               	xorlw	3	; case 2
 29803  00216C  B4D8               	btfsc	status,2,c
 29804  00216E  D77A               	goto	l987
 29805  002170  0A01               	xorlw	1	; case 3
 29806  002172  B4D8               	btfsc	status,2,c
 29807  002174  D792               	goto	l988
 29808  002176  0A07               	xorlw	7	; case 4
 29809  002178  B4D8               	btfsc	status,2,c
 29810  00217A  D7DC               	goto	l998
 29811  00217C  0A01               	xorlw	1	; case 5
 29812  00217E  0012               	return	
 29813  002180                     __end_of_CheckModem:
 29814                           	opt stack 0
 29815                           tosu	equ	0xFFF
 29816                           tosh	equ	0xFFE
 29817                           tosl	equ	0xFFD
 29818                           pclath	equ	0xFFA
 29819                           tblptru	equ	0xFF8
 29820                           tblptrh	equ	0xFF7
 29821                           tblptrl	equ	0xFF6
 29822                           tablat	equ	0xFF5
 29823                           prodh	equ	0xFF4
 29824                           prodl	equ	0xFF3
 29825                           intcon	equ	0xFF2
 29826                           intcon2	equ	0xFF1
 29827                           intcon3	equ	0xFF0
 29828                           indf0	equ	0xFEF
 29829                           postinc0	equ	0xFEE
 29830                           plusw0	equ	0xFEB
 29831                           fsr0h	equ	0xFEA
 29832                           fsr0l	equ	0xFE9
 29833                           wreg	equ	0xFE8
 29834                           indf1	equ	0xFE7
 29835                           postinc1	equ	0xFE6
 29836                           postdec1	equ	0xFE5
 29837                           plusw1	equ	0xFE3
 29838                           fsr1h	equ	0xFE2
 29839                           fsr1l	equ	0xFE1
 29840                           indf2	equ	0xFDF
 29841                           postinc2	equ	0xFDE
 29842                           postdec2	equ	0xFDD
 29843                           plusw2	equ	0xFDB
 29844                           fsr2h	equ	0xFDA
 29845                           fsr2l	equ	0xFD9
 29846                           status	equ	0xFD8
 29847                           
 29848 ;; *************** function _MdmCntSm *****************
 29849 ;; Defined at:
 29850 ;;		line 199 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 29851 ;; Parameters:    Size  Location     Type
 29852 ;;		None
 29853 ;; Auto vars:     Size  Location     Type
 29854 ;;		None
 29855 ;; Return value:  Size  Location     Type
 29856 ;;                  1    wreg      void 
 29857 ;; Registers used:
 29858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29859 ;; Tracked objects:
 29860 ;;		On entry : 0/0
 29861 ;;		On exit  : 0/0
 29862 ;;		Unchanged: 0/0
 29863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29868 ;;Total ram usage:        0 bytes
 29869 ;; Hardware stack levels used:    1
 29870 ;; Hardware stack levels required when called:   12
 29871 ;; This function calls:
 29872 ;;		_InitModemInterface
 29873 ;;		_ReceiveEvt
 29874 ;; This function is called by:
 29875 ;;		_Mdm_DrvMainFn
 29876 ;; This function uses a non-reentrant model
 29877 ;;
 29878                           
 29879                           	psect	text140
 29880  0046D8                     __ptext140:
 29881                           	opt stack 0
 29882  0046D8                     _MdmCntSm:
 29883                           	opt stack 15
 29884                           
 29885                           ;mdm_drv.c: 201: static MdmCntStateType MdmCntState = InitModemInt;
 29886                           ;mdm_drv.c: 202: static UINT16 Counter = 0;
 29887                           ;mdm_drv.c: 204: switch (MdmCntState)
 29888                           
 29889                           ;incstack = 0
 29890  0046D8  D045               	goto	l315
 29891  0046DA                     
 29892                           ;mdm_drv.c: 208: InitModemInterface();
 29893  0046DA  EC85  F035         	call	_InitModemInterface	;wreg free
 29894                           
 29895                           ;mdm_drv.c: 210: MdmCntState = CheckRequest;
 29896  0046DE  0E01               	movlw	1
 29897  0046E0  6E2D               	movwf	MdmCntSm@MdmCntState,c
 29898                           
 29899                           ;mdm_drv.c: 211: break;
 29900  0046E2  0012               	return	
 29901  0046E4                     
 29902                           ;mdm_drv.c: 215: if (ReceiveEvt(&MdmOnOffPulseRequest))
 29903  0046E4  0EE2               	movlw	low _MdmOnOffPulseRequest
 29904  0046E6  0100               	movlb	0	; () banked
 29905  0046E8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29906  0046EA  0E00               	movlw	high _MdmOnOffPulseRequest
 29907  0046EC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29908  0046EE  ECD7  F032         	call	_ReceiveEvt	;wreg free
 29909  0046F2  0900               	iorlw	0
 29910  0046F4  B4D8               	btfsc	status,2,c
 29911  0046F6  D009               	goto	l319
 29912                           
 29913                           ;mdm_drv.c: 216: {
 29914                           ;mdm_drv.c: 218: MdmCntState = MdmOnOffPulse;
 29915  0046F8  0E02               	movlw	2
 29916  0046FA  6E2D               	movwf	MdmCntSm@MdmCntState,c
 29917                           
 29918                           ;mdm_drv.c: 220: PORTEbits.RE1 = ((UINT8)(1));
 29919  0046FC  8284               	bsf	3972,1,c	;volatile
 29920                           
 29921                           ;mdm_drv.c: 222: Counter = 0;
 29922  0046FE  0E00               	movlw	0
 29923  004700  0102               	movlb	2	; () banked
 29924  004702  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29925  004704  0E00               	movlw	0
 29926  004706  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 29927                           
 29928                           ;mdm_drv.c: 223: }
 29929  004708  0012               	return	
 29930  00470A                     l319:
 29931                           
 29932                           ;mdm_drv.c: 224: else if (ReceiveEvt(&MdmResetRequest))
 29933                           
 29934                           ; BSR set to: 2
 29935  00470A  0E3B               	movlw	low _MdmResetRequest
 29936  00470C  0100               	movlb	0	; () banked
 29937  00470E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 29938  004710  0E00               	movlw	high _MdmResetRequest
 29939  004712  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 29940  004714  ECD7  F032         	call	_ReceiveEvt	;wreg free
 29941  004718  0900               	iorlw	0
 29942  00471A  B4D8               	btfsc	status,2,c
 29943  00471C  0012               	return	
 29944                           
 29945                           ;mdm_drv.c: 225: {
 29946                           ;mdm_drv.c: 227: MdmCntState = MdmResetPulse;
 29947  00471E  0E03               	movlw	3
 29948  004720  6E2D               	movwf	MdmCntSm@MdmCntState,c
 29949                           
 29950                           ;mdm_drv.c: 229: PORTEbits.RE0 = ((UINT8)(1));
 29951  004722  8084               	bsf	3972,0,c	;volatile
 29952                           
 29953                           ;mdm_drv.c: 231: Counter = 0;
 29954  004724  0E00               	movlw	0
 29955  004726  0102               	movlb	2	; () banked
 29956  004728  6FDF               	movwf	(MdmCntSm@Counter+1)& (0+255),b
 29957  00472A  0E00               	movlw	0
 29958  00472C  6FDE               	movwf	MdmCntSm@Counter& (0+255),b
 29959                           
 29960                           ; BSR set to: 2
 29961                           ;mdm_drv.c: 236: }
 29962                           ;mdm_drv.c: 237: break;
 29963                           
 29964                           ; BSR set to: 2
 29965                           
 29966                           ;mdm_drv.c: 233: else
 29967                           ;mdm_drv.c: 234: {
 29968                           
 29969                           ; BSR set to: 2
 29970                           
 29971                           ;mdm_drv.c: 232: }
 29972  00472E  0012               	return	
 29973  004730                     
 29974                           ;mdm_drv.c: 241: Counter++;
 29975                           
 29976                           ; BSR set to: 2
 29977  004730  0102               	movlb	2	; () banked
 29978  004732  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 29979  004734  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 29980                           
 29981                           ; BSR set to: 2
 29982                           ;mdm_drv.c: 243: if (Counter >= (((UINT16)(1500))/((UINT16)(10))))
 29983  004736  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 29984  004738  E104               	bnz	u14680
 29985  00473A  0E96               	movlw	150
 29986  00473C  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 29987  00473E  A0D8               	btfss	status,0,c
 29988  004740  0012               	return	
 29989  004742                     u14680:
 29990                           
 29991                           ; BSR set to: 2
 29992                           ;mdm_drv.c: 244: {
 29993                           ;mdm_drv.c: 246: PORTEbits.RE1 = ((UINT8)(0));
 29994  004742  9284               	bcf	3972,1,c	;volatile
 29995                           
 29996                           ; BSR set to: 2
 29997                           ;mdm_drv.c: 248: MdmCntState = CheckRequest;
 29998  004744  0E01               	movlw	1
 29999  004746  6E2D               	movwf	MdmCntSm@MdmCntState,c
 30000                           
 30001                           ; BSR set to: 2
 30002                           ;mdm_drv.c: 249: }
 30003                           ;mdm_drv.c: 250: break;
 30004  004748  0012               	return	
 30005  00474A                     
 30006                           ;mdm_drv.c: 254: Counter++;
 30007                           
 30008                           ; BSR set to: 2
 30009  00474A  0102               	movlb	2	; () banked
 30010  00474C  4BDE               	infsnz	MdmCntSm@Counter& (0+255),f,b
 30011  00474E  2BDF               	incf	(MdmCntSm@Counter+1)& (0+255),f,b
 30012                           
 30013                           ; BSR set to: 2
 30014                           ;mdm_drv.c: 256: if (Counter >= (((UINT16)(100))/((UINT16)(10))))
 30015  004750  51DF               	movf	(MdmCntSm@Counter+1)& (0+255),w,b
 30016  004752  E104               	bnz	u14690
 30017  004754  0E0A               	movlw	10
 30018  004756  5DDE               	subwf	MdmCntSm@Counter& (0+255),w,b
 30019  004758  A0D8               	btfss	status,0,c
 30020  00475A  0012               	return	
 30021  00475C                     u14690:
 30022                           
 30023                           ; BSR set to: 2
 30024                           ;mdm_drv.c: 257: {
 30025                           ;mdm_drv.c: 259: PORTEbits.RE0 = ((UINT8)(0));
 30026  00475C  9084               	bcf	3972,0,c	;volatile
 30027                           
 30028                           ; BSR set to: 2
 30029                           ;mdm_drv.c: 261: MdmCntState = CheckRequest;
 30030  00475E  0E01               	movlw	1
 30031  004760  6E2D               	movwf	MdmCntSm@MdmCntState,c
 30032                           
 30033                           ; BSR set to: 2
 30034                           ;mdm_drv.c: 267: }
 30035                           
 30036                           ; BSR set to: 2
 30037                           ;mdm_drv.c: 266: break;
 30038                           
 30039                           ;mdm_drv.c: 265: default:
 30040                           
 30041                           ; BSR set to: 2
 30042                           ;mdm_drv.c: 262: }
 30043                           ;mdm_drv.c: 263: break;
 30044  004762  0012               	return	
 30045  004764                     l315:
 30046                           
 30047                           ; BSR set to: 2
 30048  004764  502D               	movf	MdmCntSm@MdmCntState,w,c
 30049                           
 30050                           ; Switch size 1, requested type "space"
 30051                           ; Number of cases is 4, Range of values is 0 to 3
 30052                           ; switch strategies available:
 30053                           ; Name         Instructions Cycles
 30054                           ; simple_byte           13     7 (average)
 30055                           ;	Chosen strategy is simple_byte
 30056  004766  0A00               	xorlw	0	; case 0
 30057  004768  B4D8               	btfsc	status,2,c
 30058  00476A  D7B7               	goto	l316
 30059  00476C  0A01               	xorlw	1	; case 1
 30060  00476E  B4D8               	btfsc	status,2,c
 30061  004770  D7B9               	goto	l318
 30062  004772  0A03               	xorlw	3	; case 2
 30063  004774  B4D8               	btfsc	status,2,c
 30064  004776  D7DC               	goto	l323
 30065  004778  0A01               	xorlw	1	; case 3
 30066  00477A  A4D8               	btfss	status,2,c
 30067  00477C  0012               	return	
 30068  00477E  D7E5               	goto	l325
 30069  004780                     __end_of_MdmCntSm:
 30070                           	opt stack 0
 30071                           tosu	equ	0xFFF
 30072                           tosh	equ	0xFFE
 30073                           tosl	equ	0xFFD
 30074                           pclath	equ	0xFFA
 30075                           tblptru	equ	0xFF8
 30076                           tblptrh	equ	0xFF7
 30077                           tblptrl	equ	0xFF6
 30078                           tablat	equ	0xFF5
 30079                           prodh	equ	0xFF4
 30080                           prodl	equ	0xFF3
 30081                           intcon	equ	0xFF2
 30082                           intcon2	equ	0xFF1
 30083                           intcon3	equ	0xFF0
 30084                           indf0	equ	0xFEF
 30085                           postinc0	equ	0xFEE
 30086                           plusw0	equ	0xFEB
 30087                           fsr0h	equ	0xFEA
 30088                           fsr0l	equ	0xFE9
 30089                           wreg	equ	0xFE8
 30090                           indf1	equ	0xFE7
 30091                           postinc1	equ	0xFE6
 30092                           postdec1	equ	0xFE5
 30093                           plusw1	equ	0xFE3
 30094                           fsr1h	equ	0xFE2
 30095                           fsr1l	equ	0xFE1
 30096                           indf2	equ	0xFDF
 30097                           postinc2	equ	0xFDE
 30098                           postdec2	equ	0xFDD
 30099                           plusw2	equ	0xFDB
 30100                           fsr2h	equ	0xFDA
 30101                           fsr2l	equ	0xFD9
 30102                           status	equ	0xFD8
 30103                           
 30104 ;; *************** function _InitModemInterface *****************
 30105 ;; Defined at:
 30106 ;;		line 102 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mdm_drv.c"
 30107 ;; Parameters:    Size  Location     Type
 30108 ;;		None
 30109 ;; Auto vars:     Size  Location     Type
 30110 ;;		None
 30111 ;; Return value:  Size  Location     Type
 30112 ;;                  1    wreg      void 
 30113 ;; Registers used:
 30114 ;;		None
 30115 ;; Tracked objects:
 30116 ;;		On entry : 0/0
 30117 ;;		On exit  : 0/0
 30118 ;;		Unchanged: 0/0
 30119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30124 ;;Total ram usage:        0 bytes
 30125 ;; Hardware stack levels used:    1
 30126 ;; Hardware stack levels required when called:   11
 30127 ;; This function calls:
 30128 ;;		Nothing
 30129 ;; This function is called by:
 30130 ;;		_MdmCntSm
 30131 ;; This function uses a non-reentrant model
 30132 ;;
 30133                           
 30134                           	psect	text141
 30135  006B0A                     __ptext141:
 30136                           	opt stack 0
 30137  006B0A                     _InitModemInterface:
 30138                           	opt stack 15
 30139                           
 30140                           ;mdm_drv.c: 105: TRISEbits.TRISE0 = ((UINT8)(0));
 30141                           
 30142                           ;incstack = 0
 30143  006B0A  9096               	bcf	3990,0,c	;volatile
 30144                           
 30145                           ;mdm_drv.c: 106: TRISEbits.TRISE1 = ((UINT8)(0));
 30146  006B0C  9296               	bcf	3990,1,c	;volatile
 30147                           
 30148                           ;mdm_drv.c: 107: TRISEbits.TRISE2 = ((UINT8)(1));
 30149  006B0E  8496               	bsf	3990,2,c	;volatile
 30150  006B10  0012               	return		;funcret
 30151  006B12                     __end_of_InitModemInterface:
 30152                           	opt stack 0
 30153                           tosu	equ	0xFFF
 30154                           tosh	equ	0xFFE
 30155                           tosl	equ	0xFFD
 30156                           pclath	equ	0xFFA
 30157                           tblptru	equ	0xFF8
 30158                           tblptrh	equ	0xFF7
 30159                           tblptrl	equ	0xFF6
 30160                           tablat	equ	0xFF5
 30161                           prodh	equ	0xFF4
 30162                           prodl	equ	0xFF3
 30163                           intcon	equ	0xFF2
 30164                           intcon2	equ	0xFF1
 30165                           intcon3	equ	0xFF0
 30166                           indf0	equ	0xFEF
 30167                           postinc0	equ	0xFEE
 30168                           plusw0	equ	0xFEB
 30169                           fsr0h	equ	0xFEA
 30170                           fsr0l	equ	0xFE9
 30171                           wreg	equ	0xFE8
 30172                           indf1	equ	0xFE7
 30173                           postinc1	equ	0xFE6
 30174                           postdec1	equ	0xFE5
 30175                           plusw1	equ	0xFE3
 30176                           fsr1h	equ	0xFE2
 30177                           fsr1l	equ	0xFE1
 30178                           indf2	equ	0xFDF
 30179                           postinc2	equ	0xFDE
 30180                           postdec2	equ	0xFDD
 30181                           plusw2	equ	0xFDB
 30182                           fsr2h	equ	0xFDA
 30183                           fsr2l	equ	0xFD9
 30184                           status	equ	0xFD8
 30185                           
 30186 ;; *************** function _InitGprsNetwork *****************
 30187 ;; Defined at:
 30188 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30189 ;; Parameters:    Size  Location     Type
 30190 ;;  Apn             2   59[BANK0 ] PTR unsigned char 
 30191 ;;		 -> NULL(0), 
 30192 ;;  ApnLen          1   61[BANK0 ] unsigned char 
 30193 ;; Auto vars:     Size  Location     Type
 30194 ;;  UartMessage    50    0[BANK1 ] unsigned char [50]
 30195 ;;  Index           1   50[BANK1 ] unsigned char 
 30196 ;; Return value:  Size  Location     Type
 30197 ;;                  1    wreg      enum E8925
 30198 ;; Registers used:
 30199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30200 ;; Tracked objects:
 30201 ;;		On entry : 0/0
 30202 ;;		On exit  : 0/0
 30203 ;;		Unchanged: 0/0
 30204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30205 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30206 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30208 ;;      Totals:         0       5      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30209 ;;Total ram usage:       56 bytes
 30210 ;; Hardware stack levels used:    1
 30211 ;; Hardware stack levels required when called:   14
 30212 ;; This function calls:
 30213 ;;		_ClearBuffer
 30214 ;;		_OsTmr_GetTimerStatus
 30215 ;;		_OsTmr_StartTimer
 30216 ;;		_ReceiveEvt
 30217 ;;		_StringCopy
 30218 ;;		_Uart_WriteConstString
 30219 ;;		_Uart_WriteString
 30220 ;; This function is called by:
 30221 ;;		_MdmHttp_MainTask
 30222 ;; This function uses a non-reentrant model
 30223 ;;
 30224                           
 30225                           	psect	text142
 30226  000DC8                     __ptext142:
 30227                           	opt stack 0
 30228  000DC8                     _InitGprsNetwork:
 30229                           	opt stack 13
 30230                           
 30231                           ;mdm_gsm_gprs_http.c: 126: static GprsNetInitType GprsNetInitState = GprsIn_Idle;
 30232                           ;mdm_gsm_gprs_http.c: 127: static GprsNetInitType GprsNetInitNextState = GprsIn_Idle;
 30233                           ;mdm_gsm_gprs_http.c: 128: static GprsOutStsType GprsInitSts = GprsSts_InProg;
 30234                           ;mdm_gsm_gprs_http.c: 129: UINT8 UartMessage[50];
 30235                           ;mdm_gsm_gprs_http.c: 130: UINT8 Index = 0;
 30236                           
 30237                           ;incstack = 0
 30238  000DC8  0E00               	movlw	0
 30239  000DCA  0101               	movlb	1	; () banked
 30240  000DCC  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30241                           
 30242                           ;mdm_gsm_gprs_http.c: 132: switch(GprsNetInitState)
 30243  000DCE  D154               	goto	l1219
 30244  000DD0                     
 30245                           ; BSR set to: 1
 30246                           ;mdm_gsm_gprs_http.c: 136: if (ReceiveEvt(&InitNetwork))
 30247                           
 30248                           ; BSR set to: 1
 30249  000DD0  0EDB               	movlw	low _InitNetwork
 30250  000DD2  0100               	movlb	0	; () banked
 30251  000DD4  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30252  000DD6  0E00               	movlw	high _InitNetwork
 30253  000DD8  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30254  000DDA  ECD7  F032         	call	_ReceiveEvt	;wreg free
 30255  000DDE  0900               	iorlw	0
 30256  000DE0  B4D8               	btfsc	status,2,c
 30257  000DE2  D166               	goto	l1222
 30258                           
 30259                           ;mdm_gsm_gprs_http.c: 137: {
 30260                           ;mdm_gsm_gprs_http.c: 139: GprsNetInitState = GprsIn_SetConType;
 30261  000DE4  0E01               	movlw	1
 30262  000DE6  D141               	goto	L102
 30263  000DE8                     
 30264                           ; BSR set to: 1
 30265                           ;mdm_gsm_gprs_http.c: 144: Uart_WriteConstString(1, "AT+SAPBR=3,1,\"Contype\",\"GPRS\"\r
      +                          ");
 30266                           
 30267                           ; BSR set to: 1
 30268  000DE8  0E89               	movlw	low STR_8
 30269  000DEA  0100               	movlb	0	; () banked
 30270  000DEC  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30271  000DEE  0EFE               	movlw	high STR_8
 30272  000DF0  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30273  000DF2  0E01               	movlw	1
 30274  000DF4  EC8E  F030         	call	_Uart_WriteConstString
 30275                           
 30276                           ;mdm_gsm_gprs_http.c: 146: GprsNetInitState = GprsIn_WaitMdmResp;
 30277  000DF8  0E07               	movlw	7
 30278  000DFA  0101               	movlb	1	; () banked
 30279  000DFC  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30280                           
 30281                           ; BSR set to: 1
 30282                           ;mdm_gsm_gprs_http.c: 147: GprsNetInitNextState = GprsIn_SetApn;
 30283  000DFE  0E02               	movlw	2
 30284  000E00  0100               	movlb	0	; () banked
 30285  000E02  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30286                           
 30287                           ; BSR set to: 0
 30288                           ;mdm_gsm_gprs_http.c: 149: OsTmr_StartTimer(&ConnTimeout,20000u);
 30289  000E04  0EF5               	movlw	low _ConnTimeout
 30290  000E06  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30291  000E08  0E02               	movlw	high _ConnTimeout
 30292  000E0A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30293  000E0C  0E20               	movlw	32
 30294  000E0E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30295  000E10  0E4E               	movlw	78
 30296  000E12  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30297  000E14  0E00               	movlw	0
 30298  000E16  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30299  000E18  0E00               	movlw	0
 30300  000E1A  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30301  000E1C  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 30302  000E20  D0C7               	goto	l15647
 30303  000E22                     
 30304                           ; BSR set to: 1
 30305                           ;mdm_gsm_gprs_http.c: 156: ClearBuffer(UartMessage, sizeof(UartMessage));
 30306                           
 30307                           ; BSR set to: 1
 30308  000E22  0E00               	movlw	low InitGprsNetwork@UartMessage
 30309  000E24  0100               	movlb	0	; () banked
 30310  000E26  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30311  000E28  0E01               	movlw	high InitGprsNetwork@UartMessage
 30312  000E2A  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30313  000E2C  0E00               	movlw	0
 30314  000E2E  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30315  000E30  0E32               	movlw	50
 30316  000E32  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30317  000E34  ECF9  F031         	call	_ClearBuffer	;wreg free
 30318                           
 30319                           ;mdm_gsm_gprs_http.c: 158: StringCopy((void*)("AT+SAPBR=3,1,\"APN\",\""),UartMessage,20)
      +                          ;
 30320  000E38  0EBD               	movlw	low STR_9
 30321  000E3A  0100               	movlb	0	; () banked
 30322  000E3C  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 30323  000E3E  0EFE               	movlw	high STR_9
 30324  000E40  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 30325  000E42  0E00               	movlw	low InitGprsNetwork@UartMessage
 30326  000E44  6F87               	movwf	StringCopy@DestStr& (0+255),b
 30327  000E46  0E01               	movlw	high InitGprsNetwork@UartMessage
 30328  000E48  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 30329  000E4A  0E00               	movlw	0
 30330  000E4C  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 30331  000E4E  0E14               	movlw	20
 30332  000E50  6F89               	movwf	StringCopy@Len& (0+255),b
 30333  000E52  ECD1  F02B         	call	_StringCopy	;wreg free
 30334                           
 30335                           ;mdm_gsm_gprs_http.c: 160: for (Index = 0; Index < ApnLen; Index++)
 30336  000E56  0E00               	movlw	0
 30337  000E58  0101               	movlb	1	; () banked
 30338  000E5A  6F32               	movwf	InitGprsNetwork@Index& (0+255),b
 30339  000E5C  D01C               	goto	l1225
 30340  000E5E                     
 30341                           ; BSR set to: 1
 30342                           ;mdm_gsm_gprs_http.c: 161: {
 30343                           ;mdm_gsm_gprs_http.c: 162: UartMessage[Index + 20] = *(Apn + Index);
 30344                           
 30345                           ; BSR set to: 1
 30346  000E5E  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30347  000E60  0D01               	mullw	1
 30348  000E62  50F3               	movf	prodl,w,c
 30349  000E64  0100               	movlb	0	; () banked
 30350  000E66  259B               	addwf	InitGprsNetwork@Apn& (0+255),w,b
 30351  000E68  6ED9               	movwf	fsr2l,c
 30352  000E6A  50F4               	movf	prodh,w,c
 30353  000E6C  219C               	addwfc	(InitGprsNetwork@Apn+1)& (0+255),w,b
 30354  000E6E  6EDA               	movwf	fsr2h,c
 30355  000E70  0101               	movlb	1	; () banked
 30356  000E72  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30357  000E74  0100               	movlb	0	; () banked
 30358  000E76  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30359  000E78  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30360  000E7A  0E14               	movlw	20
 30361  000E7C  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30362  000E7E  0E00               	movlw	0
 30363  000E80  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30364  000E82  0E00               	movlw	low InitGprsNetwork@UartMessage
 30365  000E84  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30366  000E86  6EE1               	movwf	fsr1l,c
 30367  000E88  0E01               	movlw	high InitGprsNetwork@UartMessage
 30368  000E8A  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30369  000E8C  6EE2               	movwf	fsr1h,c
 30370  000E8E  CFDF FFE7          	movff	indf2,indf1
 30371                           
 30372                           ; BSR set to: 0
 30373  000E92  0101               	movlb	1	; () banked
 30374  000E94  2B32               	incf	InitGprsNetwork@Index& (0+255),f,b
 30375  000E96                     l1225:
 30376                           
 30377                           ; BSR set to: 1
 30378                           
 30379                           ; BSR set to: 1
 30380  000E96  0100               	movlb	0	; () banked
 30381  000E98  519D               	movf	InitGprsNetwork@ApnLen& (0+255),w,b
 30382  000E9A  0101               	movlb	1	; () banked
 30383  000E9C  5D32               	subwf	InitGprsNetwork@Index& (0+255),w,b
 30384  000E9E  A0D8               	btfss	status,0,c
 30385  000EA0  D7DE               	goto	l1226
 30386                           
 30387                           ; BSR set to: 1
 30388                           ;mdm_gsm_gprs_http.c: 163: }
 30389                           ;mdm_gsm_gprs_http.c: 165: UartMessage[Index + 20] = '"';
 30390                           
 30391                           ; BSR set to: 1
 30392  000EA2  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30393  000EA4  0100               	movlb	0	; () banked
 30394  000EA6  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30395  000EA8  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30396  000EAA  0E14               	movlw	20
 30397  000EAC  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30398  000EAE  0E00               	movlw	0
 30399  000EB0  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30400  000EB2  0E00               	movlw	low InitGprsNetwork@UartMessage
 30401  000EB4  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30402  000EB6  6ED9               	movwf	fsr2l,c
 30403  000EB8  0E01               	movlw	high InitGprsNetwork@UartMessage
 30404  000EBA  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30405  000EBC  6EDA               	movwf	fsr2h,c
 30406  000EBE  0E22               	movlw	34
 30407  000EC0  6EDF               	movwf	indf2,c
 30408                           
 30409                           ;mdm_gsm_gprs_http.c: 166: UartMessage[Index + 21] = '\r';
 30410  000EC2  0101               	movlb	1	; () banked
 30411  000EC4  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30412  000EC6  0100               	movlb	0	; () banked
 30413  000EC8  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30414  000ECA  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30415  000ECC  0E15               	movlw	21
 30416  000ECE  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30417  000ED0  0E00               	movlw	0
 30418  000ED2  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30419  000ED4  0E00               	movlw	low InitGprsNetwork@UartMessage
 30420  000ED6  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30421  000ED8  6ED9               	movwf	fsr2l,c
 30422  000EDA  0E01               	movlw	high InitGprsNetwork@UartMessage
 30423  000EDC  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30424  000EDE  6EDA               	movwf	fsr2h,c
 30425  000EE0  0E0D               	movlw	13
 30426  000EE2  6EDF               	movwf	indf2,c
 30427                           
 30428                           ;mdm_gsm_gprs_http.c: 167: UartMessage[Index + 22] = (0);
 30429  000EE4  0101               	movlb	1	; () banked
 30430  000EE6  5132               	movf	InitGprsNetwork@Index& (0+255),w,b
 30431  000EE8  0100               	movlb	0	; () banked
 30432  000EEA  6F9E               	movwf	??_InitGprsNetwork& (0+255),b
 30433  000EEC  6B9F               	clrf	(??_InitGprsNetwork+1)& (0+255),b
 30434  000EEE  0E16               	movlw	22
 30435  000EF0  279E               	addwf	??_InitGprsNetwork& (0+255),f,b
 30436  000EF2  0E00               	movlw	0
 30437  000EF4  239F               	addwfc	(??_InitGprsNetwork+1)& (0+255),f,b
 30438  000EF6  0E00               	movlw	low InitGprsNetwork@UartMessage
 30439  000EF8  259E               	addwf	??_InitGprsNetwork& (0+255),w,b
 30440  000EFA  6ED9               	movwf	fsr2l,c
 30441  000EFC  0E01               	movlw	high InitGprsNetwork@UartMessage
 30442  000EFE  219F               	addwfc	(??_InitGprsNetwork+1)& (0+255),w,b
 30443  000F00  6EDA               	movwf	fsr2h,c
 30444  000F02  0E00               	movlw	0
 30445  000F04  6EDF               	movwf	indf2,c
 30446                           
 30447                           ; BSR set to: 0
 30448                           ;mdm_gsm_gprs_http.c: 169: Uart_WriteString(1, UartMessage);
 30449  000F06  0E00               	movlw	low InitGprsNetwork@UartMessage
 30450  000F08  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 30451  000F0A  0E01               	movlw	high InitGprsNetwork@UartMessage
 30452  000F0C  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 30453  000F0E  0E01               	movlw	1
 30454  000F10  EC2E  F031         	call	_Uart_WriteString
 30455                           
 30456                           ;mdm_gsm_gprs_http.c: 171: GprsNetInitState = GprsIn_WaitMdmResp;
 30457  000F14  0E07               	movlw	7
 30458  000F16  0101               	movlb	1	; () banked
 30459  000F18  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;mdm_gsm_gprs_http.c: 172: GprsNetInitNextState = GprsIn_EnGprs;
 30463  000F1A  0E03               	movlw	3
 30464  000F1C  0100               	movlb	0	; () banked
 30465  000F1E  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30466                           
 30467                           ; BSR set to: 0
 30468                           ;mdm_gsm_gprs_http.c: 174: OsTmr_StartTimer(&ConnTimeout,20000u);
 30469  000F20  0EF5               	movlw	low _ConnTimeout
 30470  000F22  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30471  000F24  0E02               	movlw	high _ConnTimeout
 30472  000F26  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30473  000F28  0E20               	movlw	32
 30474  000F2A  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30475  000F2C  0E4E               	movlw	78
 30476  000F2E  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30477  000F30  0E00               	movlw	0
 30478  000F32  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30479  000F34  0E00               	movlw	0
 30480  000F36  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30481  000F38  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 30482  000F3C  D039               	goto	l15647
 30483  000F3E                     
 30484                           ; BSR set to: 1
 30485                           ;mdm_gsm_gprs_http.c: 181: Uart_WriteConstString(1, "AT+SAPBR=1,1\r");
 30486                           
 30487                           ; BSR set to: 1
 30488  000F3E  0E4B               	movlw	low STR_10
 30489  000F40  0100               	movlb	0	; () banked
 30490  000F42  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30491  000F44  0EFF               	movlw	high STR_10
 30492  000F46  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30493  000F48  0E01               	movlw	1
 30494  000F4A  EC8E  F030         	call	_Uart_WriteConstString
 30495                           
 30496                           ;mdm_gsm_gprs_http.c: 183: GprsNetInitState = GprsIn_WaitMdmResp;
 30497  000F4E  0E07               	movlw	7
 30498  000F50  0101               	movlb	1	; () banked
 30499  000F52  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30500                           
 30501                           ; BSR set to: 1
 30502                           ;mdm_gsm_gprs_http.c: 184: GprsNetInitNextState = GprsIn_Done;
 30503  000F54  0E05               	movlw	5
 30504  000F56  0100               	movlb	0	; () banked
 30505  000F58  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30506                           
 30507                           ; BSR set to: 0
 30508                           ;mdm_gsm_gprs_http.c: 186: OsTmr_StartTimer(&ConnTimeout,20000u);
 30509  000F5A  0EF5               	movlw	low _ConnTimeout
 30510  000F5C  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30511  000F5E  0E02               	movlw	high _ConnTimeout
 30512  000F60  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30513  000F62  0E20               	movlw	32
 30514  000F64  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30515  000F66  0E4E               	movlw	78
 30516  000F68  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30517  000F6A  0E00               	movlw	0
 30518  000F6C  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30519  000F6E  0E00               	movlw	0
 30520  000F70  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30521  000F72  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 30522  000F76  D01C               	goto	l15647
 30523  000F78                     
 30524                           ; BSR set to: 1
 30525                           ;mdm_gsm_gprs_http.c: 193: Uart_WriteConstString(1, "AT+SAPBR=2,1\r");
 30526                           
 30527                           ; BSR set to: 1
 30528  000F78  0E59               	movlw	low STR_11
 30529  000F7A  0100               	movlb	0	; () banked
 30530  000F7C  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30531  000F7E  0EFF               	movlw	high STR_11
 30532  000F80  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30533  000F82  0E01               	movlw	1
 30534  000F84  EC8E  F030         	call	_Uart_WriteConstString
 30535                           
 30536                           ;mdm_gsm_gprs_http.c: 195: GprsNetInitState = GprsIn_WaitGetIp;
 30537  000F88  0E08               	movlw	8
 30538  000F8A  0101               	movlb	1	; () banked
 30539  000F8C  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30540                           
 30541                           ; BSR set to: 1
 30542                           ;mdm_gsm_gprs_http.c: 196: GprsNetInitNextState = GprsIn_Done;
 30543  000F8E  0E05               	movlw	5
 30544  000F90  0100               	movlb	0	; () banked
 30545  000F92  6FD1               	movwf	InitGprsNetwork@GprsNetInitNextState& (0+255),b
 30546                           
 30547                           ; BSR set to: 0
 30548                           ;mdm_gsm_gprs_http.c: 198: OsTmr_StartTimer(&ConnTimeout,20000u);
 30549  000F94  0EF5               	movlw	low _ConnTimeout
 30550  000F96  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30551  000F98  0E02               	movlw	high _ConnTimeout
 30552  000F9A  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30553  000F9C  0E20               	movlw	32
 30554  000F9E  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30555  000FA0  0E4E               	movlw	78
 30556  000FA2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30557  000FA4  0E00               	movlw	0
 30558  000FA6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30559  000FA8  0E00               	movlw	0
 30560  000FAA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30561  000FAC  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 30562  000FB0                     l15647:
 30563                           
 30564                           ;mdm_gsm_gprs_http.c: 200: GprsInitSts = GprsSts_InProg;
 30565  000FB0  0E01               	movlw	1
 30566  000FB2  0101               	movlb	1	; () banked
 30567  000FB4  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30568                           
 30569                           ;mdm_gsm_gprs_http.c: 201: break;
 30570  000FB6  D07C               	goto	l1222
 30571  000FB8                     
 30572                           ; BSR set to: 1
 30573                           ;mdm_gsm_gprs_http.c: 205: GprsInitSts = GprsSts_Completed;
 30574                           
 30575                           ; BSR set to: 1
 30576  000FB8  0E02               	movlw	2
 30577  000FBA  D05A               	goto	L101
 30578  000FBC                     
 30579                           ; BSR set to: 1
 30580                           ;mdm_gsm_gprs_http.c: 211: if (ReceiveEvt(&NewStringReceived))
 30581                           
 30582                           ; BSR set to: 1
 30583  000FBC  0E3A               	movlw	low _NewStringReceived
 30584  000FBE  0100               	movlb	0	; () banked
 30585  000FC0  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30586  000FC2  0E00               	movlw	high _NewStringReceived
 30587  000FC4  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30588  000FC6  ECD7  F032         	call	_ReceiveEvt	;wreg free
 30589  000FCA  0900               	iorlw	0
 30590  000FCC  B4D8               	btfsc	status,2,c
 30591  000FCE  D018               	goto	l1232
 30592                           
 30593                           ;mdm_gsm_gprs_http.c: 212: {
 30594                           ;mdm_gsm_gprs_http.c: 214: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 30595  000FD0  CC58  FFE8         	movff	_RxBuffer,wreg
 30596  000FD4  0A4F               	xorlw	79
 30597  000FD6  A4D8               	btfss	status,2,c
 30598  000FD8  D06B               	goto	l1222
 30599  000FDA  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30600  000FDE  0A4B               	xorlw	75
 30601  000FE0  A4D8               	btfss	status,2,c
 30602  000FE2  D066               	goto	l1222
 30603                           
 30604                           ;mdm_gsm_gprs_http.c: 215: {
 30605                           ;mdm_gsm_gprs_http.c: 217: GprsNetInitState = GprsNetInitNextState;
 30606  000FE4  C0D1  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30607                           
 30608                           ;mdm_gsm_gprs_http.c: 219: ClearBuffer(RxBuffer,((UINT16)(400)));
 30609  000FE8  0E58               	movlw	low _RxBuffer
 30610  000FEA  0100               	movlb	0	; () banked
 30611  000FEC  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30612  000FEE  0E0C               	movlw	high _RxBuffer
 30613  000FF0  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30614  000FF2  0E01               	movlw	1
 30615  000FF4  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30616  000FF6  0E90               	movlw	144
 30617  000FF8  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30618  000FFA  ECF9  F031         	call	_ClearBuffer	;wreg free
 30619                           
 30620                           ;mdm_gsm_gprs_http.c: 220: }
 30621                           ;mdm_gsm_gprs_http.c: 221: }
 30622  000FFE  D058               	goto	l1222
 30623  001000                     l1232:
 30624                           
 30625                           ;mdm_gsm_gprs_http.c: 222: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30626  001000  0EF5               	movlw	low _ConnTimeout
 30627  001002  0100               	movlb	0	; () banked
 30628  001004  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30629  001006  0E02               	movlw	high _ConnTimeout
 30630  001008  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30631  00100A  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30632  00100E  D029               	goto	L65
 30633  001010                     
 30634                           ; BSR set to: 1
 30635                           ;mdm_gsm_gprs_http.c: 231: if (ReceiveEvt(&NewStringReceived))
 30636                           
 30637                           ; BSR set to: 1
 30638  001010  0E3A               	movlw	low _NewStringReceived
 30639  001012  0100               	movlb	0	; () banked
 30640  001014  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30641  001016  0E00               	movlw	high _NewStringReceived
 30642  001018  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30643  00101A  ECD7  F032         	call	_ReceiveEvt	;wreg free
 30644  00101E  0900               	iorlw	0
 30645  001020  B4D8               	btfsc	status,2,c
 30646  001022  D018               	goto	l1237
 30647                           
 30648                           ;mdm_gsm_gprs_http.c: 232: {
 30649                           ;mdm_gsm_gprs_http.c: 234: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'S'))
 30650  001024  CC58  FFE8         	movff	_RxBuffer,wreg
 30651  001028  0A2B               	xorlw	43
 30652  00102A  A4D8               	btfss	status,2,c
 30653  00102C  D041               	goto	l1222
 30654  00102E  CC59  FFE8         	movff	_RxBuffer+1,wreg
 30655  001032  0A53               	xorlw	83
 30656  001034  A4D8               	btfss	status,2,c
 30657  001036  D03C               	goto	l1222
 30658                           
 30659                           ;mdm_gsm_gprs_http.c: 235: {
 30660                           ;mdm_gsm_gprs_http.c: 237: GprsNetInitState = GprsNetInitNextState;
 30661  001038  C0D1  F1E8         	movff	InitGprsNetwork@GprsNetInitNextState,InitGprsNetwork@GprsNetInitState
 30662                           
 30663                           ;mdm_gsm_gprs_http.c: 239: ClearBuffer(RxBuffer,((UINT16)(400)));
 30664  00103C  0E58               	movlw	low _RxBuffer
 30665  00103E  0100               	movlb	0	; () banked
 30666  001040  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 30667  001042  0E0C               	movlw	high _RxBuffer
 30668  001044  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 30669  001046  0E01               	movlw	1
 30670  001048  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 30671  00104A  0E90               	movlw	144
 30672  00104C  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 30673  00104E  ECF9  F031         	call	_ClearBuffer	;wreg free
 30674                           
 30675                           ;mdm_gsm_gprs_http.c: 240: }
 30676                           ;mdm_gsm_gprs_http.c: 241: }
 30677  001052  D02E               	goto	l1222
 30678  001054                     l1237:
 30679                           
 30680                           ;mdm_gsm_gprs_http.c: 242: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 30681  001054  0EF5               	movlw	low _ConnTimeout
 30682  001056  0100               	movlb	0	; () banked
 30683  001058  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 30684  00105A  0E02               	movlw	high _ConnTimeout
 30685  00105C  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 30686  00105E  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 30687  001062                     L65:
 30688  001062  06E8               	decf	wreg,f,c
 30689  001064  A4D8               	btfss	status,2,c
 30690  001066  D024               	goto	l1222
 30691                           
 30692                           ;mdm_gsm_gprs_http.c: 243: {
 30693                           ;mdm_gsm_gprs_http.c: 245: GprsNetInitState = GprsIn_Fail;
 30694  001068  0E06               	movlw	6
 30695  00106A                     L102:
 30696  00106A  0101               	movlb	1	; () banked
 30697  00106C  D003               	goto	L64
 30698  00106E                     
 30699                           ; BSR set to: 1
 30700                           ;mdm_gsm_gprs_http.c: 251: GprsInitSts = GprsSts_Failed;
 30701                           
 30702                           ; BSR set to: 1
 30703  00106E  0E03               	movlw	3
 30704  001070                     L101:
 30705  001070  6FFF               	movwf	InitGprsNetwork@GprsInitSts& (0+255),b
 30706                           
 30707                           ;mdm_gsm_gprs_http.c: 252: GprsNetInitState = GprsIn_Idle;
 30708  001072  0E00               	movlw	0
 30709  001074                     L64:
 30710  001074  6FE8               	movwf	InitGprsNetwork@GprsNetInitState& (0+255),b
 30711                           
 30712                           ; BSR set to: 1
 30713                           ;mdm_gsm_gprs_http.c: 257: }
 30714                           
 30715                           ; BSR set to: 1
 30716                           ;mdm_gsm_gprs_http.c: 256: break;
 30717                           
 30718                           ;mdm_gsm_gprs_http.c: 255: default:
 30719                           
 30720                           ;mdm_gsm_gprs_http.c: 253: break;
 30721  001076  D01C               	goto	l1222
 30722  001078                     l1219:
 30723                           
 30724                           ; BSR set to: 1
 30725                           
 30726                           ; BSR set to: 1
 30727  001078  51E8               	movf	InitGprsNetwork@GprsNetInitState& (0+255),w,b
 30728                           
 30729                           ; Switch size 1, requested type "space"
 30730                           ; Number of cases is 9, Range of values is 0 to 8
 30731                           ; switch strategies available:
 30732                           ; Name         Instructions Cycles
 30733                           ; simple_byte           28    15 (average)
 30734                           ;	Chosen strategy is simple_byte
 30735  00107A  0A00               	xorlw	0	; case 0
 30736  00107C  B4D8               	btfsc	status,2,c
 30737  00107E  D6A8               	goto	l1220
 30738  001080  0A01               	xorlw	1	; case 1
 30739  001082  B4D8               	btfsc	status,2,c
 30740  001084  D6B1               	goto	l1223
 30741  001086  0A03               	xorlw	3	; case 2
 30742  001088  B4D8               	btfsc	status,2,c
 30743  00108A  D6CB               	goto	l1224
 30744  00108C  0A01               	xorlw	1	; case 3
 30745  00108E  B4D8               	btfsc	status,2,c
 30746  001090  D756               	goto	l1228
 30747  001092  0A07               	xorlw	7	; case 4
 30748  001094  B4D8               	btfsc	status,2,c
 30749  001096  D770               	goto	l1229
 30750  001098  0A01               	xorlw	1	; case 5
 30751  00109A  B4D8               	btfsc	status,2,c
 30752  00109C  D78D               	goto	l1230
 30753  00109E  0A03               	xorlw	3	; case 6
 30754  0010A0  B4D8               	btfsc	status,2,c
 30755  0010A2  D7E5               	goto	l1241
 30756  0010A4  0A01               	xorlw	1	; case 7
 30757  0010A6  B4D8               	btfsc	status,2,c
 30758  0010A8  D789               	goto	l1231
 30759  0010AA  0A0F               	xorlw	15	; case 8
 30760  0010AC  B4D8               	btfsc	status,2,c
 30761  0010AE  D7B0               	goto	l1236
 30762  0010B0                     l1222:
 30763                           
 30764                           ;mdm_gsm_gprs_http.c: 260: return GprsInitSts;
 30765                           
 30766                           ; BSR set to: 1
 30767  0010B0  0101               	movlb	1	; () banked
 30768  0010B2  51FF               	movf	InitGprsNetwork@GprsInitSts& (0+255),w,b
 30769  0010B4  0012               	return	
 30770  0010B6                     __end_of_InitGprsNetwork:
 30771                           	opt stack 0
 30772                           tosu	equ	0xFFF
 30773                           tosh	equ	0xFFE
 30774                           tosl	equ	0xFFD
 30775                           pclath	equ	0xFFA
 30776                           tblptru	equ	0xFF8
 30777                           tblptrh	equ	0xFF7
 30778                           tblptrl	equ	0xFF6
 30779                           tablat	equ	0xFF5
 30780                           prodh	equ	0xFF4
 30781                           prodl	equ	0xFF3
 30782                           intcon	equ	0xFF2
 30783                           intcon2	equ	0xFF1
 30784                           intcon3	equ	0xFF0
 30785                           indf0	equ	0xFEF
 30786                           postinc0	equ	0xFEE
 30787                           plusw0	equ	0xFEB
 30788                           fsr0h	equ	0xFEA
 30789                           fsr0l	equ	0xFE9
 30790                           wreg	equ	0xFE8
 30791                           indf1	equ	0xFE7
 30792                           postinc1	equ	0xFE6
 30793                           postdec1	equ	0xFE5
 30794                           plusw1	equ	0xFE3
 30795                           fsr1h	equ	0xFE2
 30796                           fsr1l	equ	0xFE1
 30797                           indf2	equ	0xFDF
 30798                           postinc2	equ	0xFDE
 30799                           postdec2	equ	0xFDD
 30800                           plusw2	equ	0xFDB
 30801                           fsr2h	equ	0xFDA
 30802                           fsr2l	equ	0xFD9
 30803                           status	equ	0xFD8
 30804                           
 30805 ;; *************** function _HttpGetMethod *****************
 30806 ;; Defined at:
 30807 ;;		line 271 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/01_Mdm/mdm_gsm_gprs_http.c"
 30808 ;; Parameters:    Size  Location     Type
 30809 ;;  GetData         2   59[BANK0 ] PTR struct _HttpGetDataT
 30810 ;;		 -> HttpGetDataLocal(5), 
 30811 ;; Auto vars:     Size  Location     Type
 30812 ;;  UartMessage   200    0[BANK1 ] unsigned char [200]
 30813 ;;  Index           1  200[BANK1 ] unsigned char 
 30814 ;; Return value:  Size  Location     Type
 30815 ;;                  1    wreg      enum E8925
 30816 ;; Registers used:
 30817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30818 ;; Tracked objects:
 30819 ;;		On entry : 0/0
 30820 ;;		On exit  : 0/0
 30821 ;;		Unchanged: 0/0
 30822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;      Locals:         0       0     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30825 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30826 ;;      Totals:         0       6     201       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30827 ;;Total ram usage:      207 bytes
 30828 ;; Hardware stack levels used:    1
 30829 ;; Hardware stack levels required when called:   14
 30830 ;; This function calls:
 30831 ;;		_ClearBuffer
 30832 ;;		_OsTmr_GetTimerStatus
 30833 ;;		_OsTmr_StartTimer
 30834 ;;		_ReceiveEvt
 30835 ;;		_StringCopy
 30836 ;;		_Uart_WriteConstString
 30837 ;;		_Uart_WriteString
 30838 ;; This function is called by:
 30839 ;;		_MdmHttp_MainTask
 30840 ;; This function uses a non-reentrant model
 30841 ;;
 30842                           
 30843                           	psect	text143
 30844  0005EC                     __ptext143:
 30845                           	opt stack 0
 30846  0005EC                     _HttpGetMethod:
 30847                           	opt stack 13
 30848                           
 30849                           ;mdm_gsm_gprs_http.c: 273: static GetMethodType GetMethodState = GetM_Idle;
 30850                           ;mdm_gsm_gprs_http.c: 274: static GetMethodType GetMethodNextState = GetM_Idle;
 30851                           ;mdm_gsm_gprs_http.c: 275: static GetMethodStsType GetMOutSts = GetMOut_Idle;
 30852                           ;mdm_gsm_gprs_http.c: 276: UINT8 UartMessage[200];
 30853                           ;mdm_gsm_gprs_http.c: 277: UINT8 Index = 0;
 30854                           
 30855                           ; BSR set to: 1
 30856                           ;incstack = 0
 30857  0005EC  0E00               	movlw	0
 30858  0005EE  0101               	movlb	1	; () banked
 30859  0005F0  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 30860                           
 30861                           ;mdm_gsm_gprs_http.c: 279: switch (GetMethodState)
 30862  0005F2  D230               	goto	l1252
 30863  0005F4                     
 30864                           ; BSR set to: 1
 30865                           ;mdm_gsm_gprs_http.c: 283: if (ReceiveEvt(&GetMethod))
 30866                           
 30867                           ; BSR set to: 1
 30868  0005F4  0EDA               	movlw	low _GetMethod
 30869  0005F6  0100               	movlb	0	; () banked
 30870  0005F8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 30871  0005FA  0E00               	movlw	high _GetMethod
 30872  0005FC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 30873  0005FE  ECD7  F032         	call	_ReceiveEvt	;wreg free
 30874  000602  0900               	iorlw	0
 30875  000604  B4D8               	btfsc	status,2,c
 30876  000606  D257               	goto	l1255
 30877                           
 30878                           ;mdm_gsm_gprs_http.c: 284: {
 30879                           ;mdm_gsm_gprs_http.c: 286: GetMethodState = GetM_HttpInit;
 30880  000608  0E01               	movlw	1
 30881  00060A  D18C               	goto	L67
 30882  00060C                     
 30883                           ; BSR set to: 1
 30884                           ;mdm_gsm_gprs_http.c: 291: Uart_WriteConstString(1, "AT+HTTPINIT\r");
 30885                           
 30886                           ; BSR set to: 1
 30887  00060C  0E9D               	movlw	low STR_12
 30888  00060E  0100               	movlb	0	; () banked
 30889  000610  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30890  000612  0EFF               	movlw	high STR_12
 30891  000614  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30892  000616  0E01               	movlw	1
 30893  000618  EC8E  F030         	call	_Uart_WriteConstString
 30894                           
 30895                           ;mdm_gsm_gprs_http.c: 293: GetMethodState = GetM_WaitMdmResp;
 30896  00061C  0E0A               	movlw	10
 30897  00061E  0101               	movlb	1	; () banked
 30898  000620  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30899                           
 30900                           ; BSR set to: 1
 30901                           ;mdm_gsm_gprs_http.c: 294: GetMethodNextState = GetM_HttpSsl;
 30902  000622  0E02               	movlw	2
 30903  000624  0100               	movlb	0	; () banked
 30904  000626  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30905                           
 30906                           ; BSR set to: 0
 30907                           ;mdm_gsm_gprs_http.c: 296: OsTmr_StartTimer(&ConnTimeout,20000u);
 30908  000628  0EF5               	movlw	low _ConnTimeout
 30909  00062A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30910  00062C  0E02               	movlw	high _ConnTimeout
 30911  00062E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30912  000630  0E20               	movlw	32
 30913  000632  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30914  000634  0E4E               	movlw	78
 30915  000636  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30916  000638  0E00               	movlw	0
 30917  00063A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30918  00063C  0E00               	movlw	0
 30919  00063E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30920  000640  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 30921  000644  D1AF               	goto	l15813
 30922  000646                     
 30923                           ; BSR set to: 1
 30924                           ;mdm_gsm_gprs_http.c: 303: Uart_WriteConstString(1, "AT+HTTPSSL=1\r");
 30925                           
 30926                           ; BSR set to: 1
 30927  000646  0E67               	movlw	low STR_13
 30928  000648  0100               	movlb	0	; () banked
 30929  00064A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30930  00064C  0EFF               	movlw	high STR_13
 30931  00064E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30932  000650  0E01               	movlw	1
 30933  000652  EC8E  F030         	call	_Uart_WriteConstString
 30934                           
 30935                           ;mdm_gsm_gprs_http.c: 305: GetMethodState = GetM_WaitMdmResp;
 30936  000656  0E0A               	movlw	10
 30937  000658  0101               	movlb	1	; () banked
 30938  00065A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30939                           
 30940                           ; BSR set to: 1
 30941                           ;mdm_gsm_gprs_http.c: 306: GetMethodNextState = GetM_SetBearerProf;
 30942  00065C  0E03               	movlw	3
 30943  00065E  0100               	movlb	0	; () banked
 30944  000660  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30945                           
 30946                           ; BSR set to: 0
 30947                           ;mdm_gsm_gprs_http.c: 308: OsTmr_StartTimer(&ConnTimeout,20000u);
 30948  000662  0EF5               	movlw	low _ConnTimeout
 30949  000664  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30950  000666  0E02               	movlw	high _ConnTimeout
 30951  000668  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30952  00066A  0E20               	movlw	32
 30953  00066C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30954  00066E  0E4E               	movlw	78
 30955  000670  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30956  000672  0E00               	movlw	0
 30957  000674  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30958  000676  0E00               	movlw	0
 30959  000678  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 30960  00067A  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 30961  00067E  D192               	goto	l15813
 30962  000680                     
 30963                           ; BSR set to: 1
 30964                           ;mdm_gsm_gprs_http.c: 315: Uart_WriteConstString(1, "AT+HTTPPARA=\"CID\",1\r");
 30965                           
 30966                           ; BSR set to: 1
 30967  000680  0EA8               	movlw	low STR_14
 30968  000682  0100               	movlb	0	; () banked
 30969  000684  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 30970  000686  0EFE               	movlw	high STR_14
 30971  000688  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 30972  00068A  0E01               	movlw	1
 30973  00068C  EC8E  F030         	call	_Uart_WriteConstString
 30974                           
 30975                           ;mdm_gsm_gprs_http.c: 317: GetMethodState = GetM_WaitMdmResp;
 30976  000690  0E0A               	movlw	10
 30977  000692  0101               	movlb	1	; () banked
 30978  000694  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 30979                           
 30980                           ; BSR set to: 1
 30981                           ;mdm_gsm_gprs_http.c: 318: GetMethodNextState = GetM_SetUrlAddr;
 30982  000696  0E04               	movlw	4
 30983  000698  0100               	movlb	0	; () banked
 30984  00069A  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 30985                           
 30986                           ; BSR set to: 0
 30987                           ;mdm_gsm_gprs_http.c: 320: OsTmr_StartTimer(&ConnTimeout,20000u);
 30988  00069C  0EF5               	movlw	low _ConnTimeout
 30989  00069E  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 30990  0006A0  0E02               	movlw	high _ConnTimeout
 30991  0006A2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 30992  0006A4  0E20               	movlw	32
 30993  0006A6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 30994  0006A8  0E4E               	movlw	78
 30995  0006AA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 30996  0006AC  0E00               	movlw	0
 30997  0006AE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 30998  0006B0  0E00               	movlw	0
 30999  0006B2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31000  0006B4  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31001  0006B8  D175               	goto	l15813
 31002  0006BA                     
 31003                           ; BSR set to: 1
 31004                           ;mdm_gsm_gprs_http.c: 327: ClearBuffer(UartMessage, sizeof(UartMessage));
 31005                           
 31006                           ; BSR set to: 1
 31007  0006BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31008  0006BC  0100               	movlb	0	; () banked
 31009  0006BE  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31010  0006C0  0E01               	movlw	high HttpGetMethod@UartMessage
 31011  0006C2  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31012  0006C4  0E00               	movlw	0
 31013  0006C6  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31014  0006C8  0EC8               	movlw	200
 31015  0006CA  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31016  0006CC  ECF9  F031         	call	_ClearBuffer	;wreg free
 31017                           
 31018                           ;mdm_gsm_gprs_http.c: 329: StringCopy((void*)("AT+HTTPPARA=\"URL\",\""),UartMessage,19);
 31019  0006D0  0EE6               	movlw	low STR_15
 31020  0006D2  0100               	movlb	0	; () banked
 31021  0006D4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31022  0006D6  0EFE               	movlw	high STR_15
 31023  0006D8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31024  0006DA  0E00               	movlw	low HttpGetMethod@UartMessage
 31025  0006DC  6F87               	movwf	StringCopy@DestStr& (0+255),b
 31026  0006DE  0E01               	movlw	high HttpGetMethod@UartMessage
 31027  0006E0  6F88               	movwf	(StringCopy@DestStr+1)& (0+255),b
 31028  0006E2  0E00               	movlw	0
 31029  0006E4  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31030  0006E6  0E13               	movlw	19
 31031  0006E8  6F89               	movwf	StringCopy@Len& (0+255),b
 31032  0006EA  ECD1  F02B         	call	_StringCopy	;wreg free
 31033                           
 31034                           ;mdm_gsm_gprs_http.c: 331: for (Index = 0; Index < GetData->UrlLen; Index++)
 31035  0006EE  0E00               	movlw	0
 31036  0006F0  0101               	movlb	1	; () banked
 31037  0006F2  6FC8               	movwf	HttpGetMethod@Index& (0+255),b
 31038  0006F4  D024               	goto	l1260
 31039  0006F6                     
 31040                           ; BSR set to: 1
 31041                           ;mdm_gsm_gprs_http.c: 332: {
 31042                           ;mdm_gsm_gprs_http.c: 333: UartMessage[Index + 19] = *(GetData->Url + Index);
 31043                           
 31044                           ; BSR set to: 1
 31045  0006F6  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31046  0006F8  0D01               	mullw	1
 31047  0006FA  C09B  FFD9         	movff	HttpGetMethod@GetData,fsr2l
 31048  0006FE  C09C  FFDA         	movff	HttpGetMethod@GetData+1,fsr2h
 31049  000702  CFDE F09D          	movff	postinc2,??_HttpGetMethod
 31050  000706  CFDD F09E          	movff	postdec2,??_HttpGetMethod+1
 31051  00070A  50F3               	movf	prodl,w,c
 31052  00070C  0100               	movlb	0	; () banked
 31053  00070E  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31054  000710  6ED9               	movwf	fsr2l,c
 31055  000712  50F4               	movf	prodh,w,c
 31056  000714  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31057  000716  6EDA               	movwf	fsr2h,c
 31058  000718  0101               	movlb	1	; () banked
 31059  00071A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31060  00071C  0100               	movlb	0	; () banked
 31061  00071E  6F9F               	movwf	(??_HttpGetMethod+2)& (0+255),b
 31062  000720  6BA0               	clrf	(??_HttpGetMethod+3)& (0+255),b
 31063  000722  0E13               	movlw	19
 31064  000724  279F               	addwf	(??_HttpGetMethod+2)& (0+255),f,b
 31065  000726  0E00               	movlw	0
 31066  000728  23A0               	addwfc	(??_HttpGetMethod+3)& (0+255),f,b
 31067  00072A  0E00               	movlw	low HttpGetMethod@UartMessage
 31068  00072C  259F               	addwf	(??_HttpGetMethod+2)& (0+255),w,b
 31069  00072E  6EE1               	movwf	fsr1l,c
 31070  000730  0E01               	movlw	high HttpGetMethod@UartMessage
 31071  000732  21A0               	addwfc	(??_HttpGetMethod+3)& (0+255),w,b
 31072  000734  6EE2               	movwf	fsr1h,c
 31073  000736  CFDF FFE7          	movff	indf2,indf1
 31074                           
 31075                           ; BSR set to: 0
 31076  00073A  0101               	movlb	1	; () banked
 31077  00073C  2BC8               	incf	HttpGetMethod@Index& (0+255),f,b
 31078  00073E                     l1260:
 31079                           
 31080                           ; BSR set to: 1
 31081                           
 31082                           ; BSR set to: 1
 31083  00073E  0100               	movlb	0	; () banked
 31084  000740  EE20 F002          	lfsr	2,2
 31085  000744  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31086  000746  26D9               	addwf	fsr2l,f,c
 31087  000748  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31088  00074A  22DA               	addwfc	fsr2h,f,c
 31089  00074C  50DE               	movf	postinc2,w,c
 31090  00074E  0101               	movlb	1	; () banked
 31091  000750  5DC8               	subwf	HttpGetMethod@Index& (0+255),w,b
 31092  000752  A0D8               	btfss	status,0,c
 31093  000754  D7D0               	goto	l1261
 31094                           
 31095                           ; BSR set to: 1
 31096                           ;mdm_gsm_gprs_http.c: 334: }
 31097                           ;mdm_gsm_gprs_http.c: 336: UartMessage[Index + 19] = '"';
 31098                           
 31099                           ; BSR set to: 1
 31100  000756  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31101  000758  0100               	movlb	0	; () banked
 31102  00075A  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31103  00075C  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31104  00075E  0E13               	movlw	19
 31105  000760  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31106  000762  0E00               	movlw	0
 31107  000764  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31108  000766  0E00               	movlw	low HttpGetMethod@UartMessage
 31109  000768  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31110  00076A  6ED9               	movwf	fsr2l,c
 31111  00076C  0E01               	movlw	high HttpGetMethod@UartMessage
 31112  00076E  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31113  000770  6EDA               	movwf	fsr2h,c
 31114  000772  0E22               	movlw	34
 31115  000774  6EDF               	movwf	indf2,c
 31116                           
 31117                           ;mdm_gsm_gprs_http.c: 337: UartMessage[Index + 20] = '\r';
 31118  000776  0101               	movlb	1	; () banked
 31119  000778  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31120  00077A  0100               	movlb	0	; () banked
 31121  00077C  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31122  00077E  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31123  000780  0E14               	movlw	20
 31124  000782  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31125  000784  0E00               	movlw	0
 31126  000786  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31127  000788  0E00               	movlw	low HttpGetMethod@UartMessage
 31128  00078A  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31129  00078C  6ED9               	movwf	fsr2l,c
 31130  00078E  0E01               	movlw	high HttpGetMethod@UartMessage
 31131  000790  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31132  000792  6EDA               	movwf	fsr2h,c
 31133  000794  0E0D               	movlw	13
 31134  000796  6EDF               	movwf	indf2,c
 31135                           
 31136                           ;mdm_gsm_gprs_http.c: 338: UartMessage[Index + 21] = (0);
 31137  000798  0101               	movlb	1	; () banked
 31138  00079A  51C8               	movf	HttpGetMethod@Index& (0+255),w,b
 31139  00079C  0100               	movlb	0	; () banked
 31140  00079E  6F9D               	movwf	??_HttpGetMethod& (0+255),b
 31141  0007A0  6B9E               	clrf	(??_HttpGetMethod+1)& (0+255),b
 31142  0007A2  0E15               	movlw	21
 31143  0007A4  279D               	addwf	??_HttpGetMethod& (0+255),f,b
 31144  0007A6  0E00               	movlw	0
 31145  0007A8  239E               	addwfc	(??_HttpGetMethod+1)& (0+255),f,b
 31146  0007AA  0E00               	movlw	low HttpGetMethod@UartMessage
 31147  0007AC  259D               	addwf	??_HttpGetMethod& (0+255),w,b
 31148  0007AE  6ED9               	movwf	fsr2l,c
 31149  0007B0  0E01               	movlw	high HttpGetMethod@UartMessage
 31150  0007B2  219E               	addwfc	(??_HttpGetMethod+1)& (0+255),w,b
 31151  0007B4  6EDA               	movwf	fsr2h,c
 31152  0007B6  0E00               	movlw	0
 31153  0007B8  6EDF               	movwf	indf2,c
 31154                           
 31155                           ; BSR set to: 0
 31156                           ;mdm_gsm_gprs_http.c: 340: Uart_WriteString(1, UartMessage);
 31157  0007BA  0E00               	movlw	low HttpGetMethod@UartMessage
 31158  0007BC  6F80               	movwf	Uart_WriteString@StringToWrite& (0+255),b
 31159  0007BE  0E01               	movlw	high HttpGetMethod@UartMessage
 31160  0007C0  6F81               	movwf	(Uart_WriteString@StringToWrite+1)& (0+255),b
 31161  0007C2  0E01               	movlw	1
 31162  0007C4  EC2E  F031         	call	_Uart_WriteString
 31163                           
 31164                           ;mdm_gsm_gprs_http.c: 342: GetMethodState = GetM_WaitMdmResp;
 31165  0007C8  0E0A               	movlw	10
 31166  0007CA  0101               	movlb	1	; () banked
 31167  0007CC  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31168                           
 31169                           ; BSR set to: 1
 31170                           ;mdm_gsm_gprs_http.c: 343: GetMethodNextState = GetM_PerfGetAction;
 31171  0007CE  0E05               	movlw	5
 31172  0007D0  0100               	movlb	0	; () banked
 31173  0007D2  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31174                           
 31175                           ; BSR set to: 0
 31176                           ;mdm_gsm_gprs_http.c: 345: OsTmr_StartTimer(&ConnTimeout,20000u);
 31177  0007D4  0EF5               	movlw	low _ConnTimeout
 31178  0007D6  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31179  0007D8  0E02               	movlw	high _ConnTimeout
 31180  0007DA  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31181  0007DC  0E20               	movlw	32
 31182  0007DE  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31183  0007E0  0E4E               	movlw	78
 31184  0007E2  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31185  0007E4  0E00               	movlw	0
 31186  0007E6  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31187  0007E8  0E00               	movlw	0
 31188  0007EA  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31189  0007EC  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31190  0007F0  D0D9               	goto	l15813
 31191  0007F2                     
 31192                           ; BSR set to: 1
 31193                           ;mdm_gsm_gprs_http.c: 352: Uart_WriteConstString(1, "AT+HTTPACTION=0\r");
 31194                           
 31195                           ; BSR set to: 1
 31196  0007F2  0E1E               	movlw	low STR_16
 31197  0007F4  0100               	movlb	0	; () banked
 31198  0007F6  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31199  0007F8  0EFF               	movlw	high STR_16
 31200  0007FA  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31201  0007FC  0E01               	movlw	1
 31202  0007FE  EC8E  F030         	call	_Uart_WriteConstString
 31203                           
 31204                           ;mdm_gsm_gprs_http.c: 354: GetMethodState = GetM_WaitMdmResp;
 31205  000802  0E0A               	movlw	10
 31206  000804  0101               	movlb	1	; () banked
 31207  000806  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31208                           
 31209                           ; BSR set to: 1
 31210                           ;mdm_gsm_gprs_http.c: 355: GetMethodNextState = GetM_ReqActionConf;
 31211  000808  0E06               	movlw	6
 31212  00080A  0100               	movlb	0	; () banked
 31213  00080C  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31214                           
 31215                           ; BSR set to: 0
 31216                           ;mdm_gsm_gprs_http.c: 357: OsTmr_StartTimer(&ConnTimeout,20000u);
 31217  00080E  0EF5               	movlw	low _ConnTimeout
 31218  000810  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31219  000812  0E02               	movlw	high _ConnTimeout
 31220  000814  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31221  000816  0E20               	movlw	32
 31222  000818  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31223  00081A  0E4E               	movlw	78
 31224  00081C  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31225  00081E  0E00               	movlw	0
 31226  000820  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31227  000822  0E00               	movlw	0
 31228  000824  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31229  000826  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31230                           
 31231                           ;mdm_gsm_gprs_http.c: 358: break;
 31232  00082A  D145               	goto	l1255
 31233  00082C                     
 31234                           ;mdm_gsm_gprs_http.c: 362: GetMethodState = GetM_WaitActionConf;
 31235  00082C  0E07               	movlw	7
 31236  00082E  0101               	movlb	1	; () banked
 31237  000830  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31238                           
 31239                           ;mdm_gsm_gprs_http.c: 365: GetMethodNextState = GetM_HttpTerminate;
 31240  000832  0E09               	movlw	9
 31241  000834  0100               	movlb	0	; () banked
 31242  000836  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31243                           
 31244                           ; BSR set to: 0
 31245                           ;mdm_gsm_gprs_http.c: 370: OsTmr_StartTimer(&ConnTimeout,20000u);
 31246  000838  0EF5               	movlw	low _ConnTimeout
 31247  00083A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31248  00083C  0E02               	movlw	high _ConnTimeout
 31249  00083E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31250  000840  0E20               	movlw	32
 31251  000842  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31252  000844  0E4E               	movlw	78
 31253  000846  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31254  000848  0E00               	movlw	0
 31255  00084A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31256  00084C  0E00               	movlw	0
 31257  00084E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31258  000850  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31259                           
 31260                           ;mdm_gsm_gprs_http.c: 371: break;
 31261  000854  D130               	goto	l1255
 31262  000856                     
 31263                           ;mdm_gsm_gprs_http.c: 375: Uart_WriteConstString(1, "AT+HTTPREAD\r");
 31264  000856  0E83               	movlw	low STR_17
 31265  000858  0100               	movlb	0	; () banked
 31266  00085A  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31267  00085C  0EFF               	movlw	high STR_17
 31268  00085E  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31269  000860  0E01               	movlw	1
 31270  000862  EC8E  F030         	call	_Uart_WriteConstString
 31271                           
 31272                           ;mdm_gsm_gprs_http.c: 377: GetMethodState = GetM_ReadGetData;
 31273  000866  0E0D               	movlw	13
 31274  000868  0101               	movlb	1	; () banked
 31275  00086A  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31276                           
 31277                           ; BSR set to: 1
 31278                           ;mdm_gsm_gprs_http.c: 378: GetMethodNextState = GetM_HttpTerminate;
 31279  00086C  0E09               	movlw	9
 31280  00086E  0100               	movlb	0	; () banked
 31281  000870  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31282                           
 31283                           ; BSR set to: 0
 31284                           ;mdm_gsm_gprs_http.c: 380: OsTmr_StartTimer(&ConnTimeout,20000u);
 31285  000872  0EF5               	movlw	low _ConnTimeout
 31286  000874  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31287  000876  0E02               	movlw	high _ConnTimeout
 31288  000878  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31289  00087A  0E20               	movlw	32
 31290  00087C  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31291  00087E  0E4E               	movlw	78
 31292  000880  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31293  000882  0E00               	movlw	0
 31294  000884  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31295  000886  0E00               	movlw	0
 31296  000888  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31297  00088A  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31298  00088E  D08A               	goto	l15813
 31299  000890                     
 31300                           ; BSR set to: 1
 31301                           ;mdm_gsm_gprs_http.c: 387: Uart_WriteConstString(1, "AT+HTTPTERM\r");
 31302                           
 31303                           ; BSR set to: 1
 31304  000890  0E90               	movlw	low STR_18
 31305  000892  0100               	movlb	0	; () banked
 31306  000894  6F80               	movwf	Uart_WriteConstString@ConstStringToWrite& (0+255),b
 31307  000896  0EFF               	movlw	high STR_18
 31308  000898  6F81               	movwf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),b
 31309  00089A  0E01               	movlw	1
 31310  00089C  EC8E  F030         	call	_Uart_WriteConstString
 31311                           
 31312                           ;mdm_gsm_gprs_http.c: 389: GetMethodState = GetM_WaitMdmResp;
 31313  0008A0  0E0A               	movlw	10
 31314  0008A2  0101               	movlb	1	; () banked
 31315  0008A4  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31316                           
 31317                           ; BSR set to: 1
 31318                           ;mdm_gsm_gprs_http.c: 390: GetMethodNextState = GetM_Done;
 31319  0008A6  0E0E               	movlw	14
 31320  0008A8  0100               	movlb	0	; () banked
 31321  0008AA  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31322                           
 31323                           ; BSR set to: 0
 31324                           ;mdm_gsm_gprs_http.c: 392: OsTmr_StartTimer(&ConnTimeout,20000u);
 31325  0008AC  0EF5               	movlw	low _ConnTimeout
 31326  0008AE  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31327  0008B0  0E02               	movlw	high _ConnTimeout
 31328  0008B2  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31329  0008B4  0E20               	movlw	32
 31330  0008B6  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31331  0008B8  0E4E               	movlw	78
 31332  0008BA  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31333  0008BC  0E00               	movlw	0
 31334  0008BE  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31335  0008C0  0E00               	movlw	0
 31336  0008C2  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31337  0008C4  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31338  0008C8  D06D               	goto	l15813
 31339  0008CA                     
 31340                           ; BSR set to: 1
 31341                           ;mdm_gsm_gprs_http.c: 399: if (ReceiveEvt(&NewStringReceived))
 31342                           
 31343                           ; BSR set to: 1
 31344  0008CA  0E3A               	movlw	low _NewStringReceived
 31345  0008CC  0100               	movlb	0	; () banked
 31346  0008CE  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31347  0008D0  0E00               	movlw	high _NewStringReceived
 31348  0008D2  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31349  0008D4  ECD7  F032         	call	_ReceiveEvt	;wreg free
 31350  0008D8  0900               	iorlw	0
 31351  0008DA  B4D8               	btfsc	status,2,c
 31352  0008DC  D018               	goto	l1268
 31353                           
 31354                           ;mdm_gsm_gprs_http.c: 400: {
 31355                           ;mdm_gsm_gprs_http.c: 402: if ((RxBuffer[0] == 'O') && (RxBuffer[1] == 'K'))
 31356  0008DE  CC58  FFE8         	movff	_RxBuffer,wreg
 31357  0008E2  0A4F               	xorlw	79
 31358  0008E4  A4D8               	btfss	status,2,c
 31359  0008E6  D0E7               	goto	l1255
 31360  0008E8  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31361  0008EC  0A4B               	xorlw	75
 31362  0008EE  A4D8               	btfss	status,2,c
 31363  0008F0  D0E2               	goto	l1255
 31364                           
 31365                           ;mdm_gsm_gprs_http.c: 403: {
 31366                           ;mdm_gsm_gprs_http.c: 405: GetMethodState = GetMethodNextState;
 31367  0008F2  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31368                           
 31369                           ;mdm_gsm_gprs_http.c: 407: ClearBuffer(RxBuffer,((UINT16)(400)));
 31370  0008F6  0E58               	movlw	low _RxBuffer
 31371  0008F8  0100               	movlb	0	; () banked
 31372  0008FA  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31373  0008FC  0E0C               	movlw	high _RxBuffer
 31374  0008FE  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31375  000900  0E01               	movlw	1
 31376  000902  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31377  000904  0E90               	movlw	144
 31378  000906  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31379  000908  ECF9  F031         	call	_ClearBuffer	;wreg free
 31380                           
 31381                           ;mdm_gsm_gprs_http.c: 408: }
 31382                           ;mdm_gsm_gprs_http.c: 409: }
 31383  00090C  D0D4               	goto	l1255
 31384  00090E                     l1268:
 31385                           
 31386                           ;mdm_gsm_gprs_http.c: 410: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31387  00090E  0EF5               	movlw	low _ConnTimeout
 31388  000910  0100               	movlb	0	; () banked
 31389  000912  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31390  000914  0E02               	movlw	high _ConnTimeout
 31391  000916  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31392  000918  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31393  00091C                     L68:
 31394  00091C  06E8               	decf	wreg,f,c
 31395  00091E  A4D8               	btfss	status,2,c
 31396  000920  D0CA               	goto	l1255
 31397                           
 31398                           ;mdm_gsm_gprs_http.c: 411: {
 31399                           ;mdm_gsm_gprs_http.c: 413: GetMethodState = GetM_Fail;
 31400  000922  0E0F               	movlw	15
 31401  000924                     L67:
 31402  000924  0101               	movlb	1	; () banked
 31403  000926  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31404                           
 31405                           ; BSR set to: 1
 31406                           ;mdm_gsm_gprs_http.c: 414: }
 31407                           ;mdm_gsm_gprs_http.c: 415: break;
 31408                           
 31409                           ; BSR set to: 1
 31410  000928  D0C6               	goto	l1255
 31411  00092A                     
 31412                           ; BSR set to: 1
 31413                           ;mdm_gsm_gprs_http.c: 419: if (ReceiveEvt(&NewStringReceived))
 31414                           
 31415                           ; BSR set to: 1
 31416  00092A  0E3A               	movlw	low _NewStringReceived
 31417  00092C  0100               	movlb	0	; () banked
 31418  00092E  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31419  000930  0E00               	movlw	high _NewStringReceived
 31420  000932  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31421  000934  ECD7  F032         	call	_ReceiveEvt	;wreg free
 31422  000938  0900               	iorlw	0
 31423  00093A  B4D8               	btfsc	status,2,c
 31424  00093C  D018               	goto	l1273
 31425                           
 31426                           ;mdm_gsm_gprs_http.c: 420: {
 31427                           ;mdm_gsm_gprs_http.c: 422: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31428  00093E  CC58  FFE8         	movff	_RxBuffer,wreg
 31429  000942  0A2B               	xorlw	43
 31430  000944  A4D8               	btfss	status,2,c
 31431  000946  D0B7               	goto	l1255
 31432  000948  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31433  00094C  0A48               	xorlw	72
 31434  00094E  A4D8               	btfss	status,2,c
 31435  000950  D0B2               	goto	l1255
 31436                           
 31437                           ;mdm_gsm_gprs_http.c: 423: {
 31438                           ;mdm_gsm_gprs_http.c: 425: GetMethodState = GetMethodNextState;
 31439  000952  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31440                           
 31441                           ;mdm_gsm_gprs_http.c: 427: ClearBuffer(RxBuffer,((UINT16)(400)));
 31442  000956  0E58               	movlw	low _RxBuffer
 31443  000958  0100               	movlb	0	; () banked
 31444  00095A  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31445  00095C  0E0C               	movlw	high _RxBuffer
 31446  00095E  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31447  000960  0E01               	movlw	1
 31448  000962  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31449  000964  0E90               	movlw	144
 31450  000966  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31451  000968  ECF9  F031         	call	_ClearBuffer	;wreg free
 31452                           
 31453                           ;mdm_gsm_gprs_http.c: 428: }
 31454                           ;mdm_gsm_gprs_http.c: 429: }
 31455  00096C  D0A4               	goto	l1255
 31456  00096E                     l1273:
 31457                           
 31458                           ;mdm_gsm_gprs_http.c: 430: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31459  00096E  0EF5               	movlw	low _ConnTimeout
 31460  000970  0100               	movlb	0	; () banked
 31461  000972  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31462  000974  0E02               	movlw	high _ConnTimeout
 31463  000976  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31464  000978  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31465  00097C  D7CF               	goto	L68
 31466  00097E                     
 31467                           ; BSR set to: 1
 31468                           ;mdm_gsm_gprs_http.c: 439: GetMethodState = GetM_Wait;
 31469                           
 31470                           ; BSR set to: 1
 31471  00097E  0E0C               	movlw	12
 31472  000980  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31473                           
 31474                           ;mdm_gsm_gprs_http.c: 440: GetMethodNextState = GetM_PerfGetAction;
 31475  000982  0E05               	movlw	5
 31476  000984  0100               	movlb	0	; () banked
 31477  000986  6FD0               	movwf	HttpGetMethod@GetMethodNextState& (0+255),b
 31478                           
 31479                           ; BSR set to: 0
 31480                           ;mdm_gsm_gprs_http.c: 442: OsTmr_StartTimer(&ConnWait,1000);
 31481  000988  0EDF               	movlw	low _ConnWait
 31482  00098A  6F81               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 31483  00098C  0E03               	movlw	high _ConnWait
 31484  00098E  6F82               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 31485  000990  0EE8               	movlw	232
 31486  000992  6F83               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 31487  000994  0E03               	movlw	3
 31488  000996  6F84               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 31489  000998  0E00               	movlw	0
 31490  00099A  6F85               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 31491  00099C  0E00               	movlw	0
 31492  00099E  6F86               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 31493  0009A0  EC31  F02C         	call	_OsTmr_StartTimer	;wreg free
 31494  0009A4                     l15813:
 31495                           
 31496                           ;mdm_gsm_gprs_http.c: 444: GetMOutSts = GetMOut_InProg;
 31497  0009A4  0E01               	movlw	1
 31498  0009A6  0101               	movlb	1	; () banked
 31499  0009A8  D053               	goto	L70
 31500  0009AA                     
 31501                           ; BSR set to: 1
 31502                           ;mdm_gsm_gprs_http.c: 449: if (OsTmr_GetTimerStatus(&ConnWait) == SwTimerExpired)
 31503                           
 31504                           ; BSR set to: 1
 31505  0009AA  0EDF               	movlw	low _ConnWait
 31506  0009AC  0100               	movlb	0	; () banked
 31507  0009AE  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31508  0009B0  0E03               	movlw	high _ConnWait
 31509  0009B2  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31510  0009B4  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31511  0009B8  06E8               	decf	wreg,f,c
 31512  0009BA  A4D8               	btfss	status,2,c
 31513  0009BC  D07C               	goto	l1255
 31514                           
 31515                           ;mdm_gsm_gprs_http.c: 450: {
 31516                           ;mdm_gsm_gprs_http.c: 452: GetMethodState = GetMethodNextState;
 31517  0009BE  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31518                           
 31519                           ;mdm_gsm_gprs_http.c: 453: }
 31520                           ;mdm_gsm_gprs_http.c: 454: break;
 31521  0009C2  D079               	goto	l1255
 31522  0009C4                     
 31523                           ;mdm_gsm_gprs_http.c: 458: if (ReceiveEvt(&NewStringReceived))
 31524  0009C4  0E3A               	movlw	low _NewStringReceived
 31525  0009C6  0100               	movlb	0	; () banked
 31526  0009C8  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 31527  0009CA  0E00               	movlw	high _NewStringReceived
 31528  0009CC  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 31529  0009CE  ECD7  F032         	call	_ReceiveEvt	;wreg free
 31530  0009D2  0900               	iorlw	0
 31531  0009D4  B4D8               	btfsc	status,2,c
 31532  0009D6  D02D               	goto	l1281
 31533                           
 31534                           ;mdm_gsm_gprs_http.c: 459: {
 31535                           ;mdm_gsm_gprs_http.c: 461: if ((RxBuffer[0] == '+') && (RxBuffer[1] == 'H'))
 31536  0009D8  CC58  FFE8         	movff	_RxBuffer,wreg
 31537  0009DC  0A2B               	xorlw	43
 31538  0009DE  A4D8               	btfss	status,2,c
 31539  0009E0  D06A               	goto	l1255
 31540  0009E2  CC59  FFE8         	movff	_RxBuffer+1,wreg
 31541  0009E6  0A48               	xorlw	72
 31542  0009E8  A4D8               	btfss	status,2,c
 31543  0009EA  D065               	goto	l1255
 31544                           
 31545                           ;mdm_gsm_gprs_http.c: 462: {
 31546                           ;mdm_gsm_gprs_http.c: 464: GetMethodState = GetMethodNextState;
 31547  0009EC  C0D0  F1E7         	movff	HttpGetMethod@GetMethodNextState,HttpGetMethod@GetMethodState
 31548                           
 31549                           ;mdm_gsm_gprs_http.c: 466: StringCopy(RxBuffer,GetData->RespBuffer,((UINT16)(400)));
 31550  0009F0  0E58               	movlw	low _RxBuffer
 31551  0009F2  0100               	movlb	0	; () banked
 31552  0009F4  6F85               	movwf	StringCopy@SourceStr& (0+255),b
 31553  0009F6  0E0C               	movlw	high _RxBuffer
 31554  0009F8  6F86               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 31555  0009FA  EE20 F003          	lfsr	2,3
 31556  0009FE  519B               	movf	HttpGetMethod@GetData& (0+255),w,b
 31557  000A00  26D9               	addwf	fsr2l,f,c
 31558  000A02  519C               	movf	(HttpGetMethod@GetData+1)& (0+255),w,b
 31559  000A04  22DA               	addwfc	fsr2h,f,c
 31560  000A06  CFDE F087          	movff	postinc2,StringCopy@DestStr
 31561  000A0A  CFDD F088          	movff	postdec2,StringCopy@DestStr+1
 31562  000A0E  0E01               	movlw	1
 31563  000A10  6F8A               	movwf	(StringCopy@Len+1)& (0+255),b
 31564  000A12  0E90               	movlw	144
 31565  000A14  6F89               	movwf	StringCopy@Len& (0+255),b
 31566  000A16  ECD1  F02B         	call	_StringCopy	;wreg free
 31567                           
 31568                           ;mdm_gsm_gprs_http.c: 468: ClearBuffer(RxBuffer,((UINT16)(400)));
 31569  000A1A  0E58               	movlw	low _RxBuffer
 31570  000A1C  0100               	movlb	0	; () banked
 31571  000A1E  6F7D               	movwf	ClearBuffer@Buffer& (0+255),b
 31572  000A20  0E0C               	movlw	high _RxBuffer
 31573  000A22  6F7E               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 31574  000A24  0E01               	movlw	1
 31575  000A26  6F80               	movwf	(ClearBuffer@Len+1)& (0+255),b
 31576  000A28  0E90               	movlw	144
 31577  000A2A  6F7F               	movwf	ClearBuffer@Len& (0+255),b
 31578  000A2C  ECF9  F031         	call	_ClearBuffer	;wreg free
 31579                           
 31580                           ;mdm_gsm_gprs_http.c: 469: }
 31581                           ;mdm_gsm_gprs_http.c: 470: }
 31582  000A30  D042               	goto	l1255
 31583  000A32                     l1281:
 31584                           
 31585                           ;mdm_gsm_gprs_http.c: 471: else if (OsTmr_GetTimerStatus(&ConnTimeout) == SwTimerExpired
      +                          )
 31586  000A32  0EF5               	movlw	low _ConnTimeout
 31587  000A34  0100               	movlb	0	; () banked
 31588  000A36  6F95               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 31589  000A38  0E02               	movlw	high _ConnTimeout
 31590  000A3A  6F96               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 31591  000A3C  EC5B  F027         	call	_OsTmr_GetTimerStatus	;wreg free
 31592  000A40  D76D               	goto	L68
 31593  000A42                     
 31594                           ; BSR set to: 1
 31595                           ;mdm_gsm_gprs_http.c: 480: GetMethodState = GetM_Idle;
 31596                           
 31597                           ; BSR set to: 1
 31598  000A42  0E00               	movlw	0
 31599  000A44  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31600                           
 31601                           ;mdm_gsm_gprs_http.c: 482: GetMOutSts = GetMOut_Completed;
 31602  000A46  0E02               	movlw	2
 31603  000A48  D003               	goto	L70
 31604  000A4A                     
 31605                           ; BSR set to: 1
 31606                           ;mdm_gsm_gprs_http.c: 487: GetMethodState = GetM_Idle;
 31607                           
 31608                           ; BSR set to: 1
 31609  000A4A  0E00               	movlw	0
 31610  000A4C  6FE7               	movwf	HttpGetMethod@GetMethodState& (0+255),b
 31611                           
 31612                           ;mdm_gsm_gprs_http.c: 489: GetMOutSts = GetMOut_Failed;
 31613  000A4E  0E03               	movlw	3
 31614  000A50                     L70:
 31615  000A50  6FE6               	movwf	HttpGetMethod@GetMOutSts& (0+255),b
 31616                           
 31617                           ; BSR set to: 1
 31618                           ;mdm_gsm_gprs_http.c: 494: }
 31619                           
 31620                           ; BSR set to: 1
 31621                           ;mdm_gsm_gprs_http.c: 493: break;
 31622                           
 31623                           ;mdm_gsm_gprs_http.c: 492: default:
 31624                           
 31625                           ;mdm_gsm_gprs_http.c: 490: break;
 31626  000A52  D031               	goto	l1255
 31627  000A54                     l1252:
 31628                           
 31629                           ; BSR set to: 1
 31630                           
 31631                           ; BSR set to: 1
 31632  000A54  51E7               	movf	HttpGetMethod@GetMethodState& (0+255),w,b
 31633                           
 31634                           ; Switch size 1, requested type "space"
 31635                           ; Number of cases is 16, Range of values is 0 to 15
 31636                           ; switch strategies available:
 31637                           ; Name         Instructions Cycles
 31638                           ; simple_byte           49    25 (average)
 31639                           ;	Chosen strategy is simple_byte
 31640  000A56  0A00               	xorlw	0	; case 0
 31641  000A58  B4D8               	btfsc	status,2,c
 31642  000A5A  D5CC               	goto	l1253
 31643  000A5C  0A01               	xorlw	1	; case 1
 31644  000A5E  B4D8               	btfsc	status,2,c
 31645  000A60  D5D5               	goto	l1256
 31646  000A62  0A03               	xorlw	3	; case 2
 31647  000A64  B4D8               	btfsc	status,2,c
 31648  000A66  D5EF               	goto	l1257
 31649  000A68  0A01               	xorlw	1	; case 3
 31650  000A6A  B4D8               	btfsc	status,2,c
 31651  000A6C  D609               	goto	l1258
 31652  000A6E  0A07               	xorlw	7	; case 4
 31653  000A70  B4D8               	btfsc	status,2,c
 31654  000A72  D623               	goto	l1259
 31655  000A74  0A01               	xorlw	1	; case 5
 31656  000A76  B4D8               	btfsc	status,2,c
 31657  000A78  D6BC               	goto	l1263
 31658  000A7A  0A03               	xorlw	3	; case 6
 31659  000A7C  B4D8               	btfsc	status,2,c
 31660  000A7E  D6D6               	goto	l1264
 31661  000A80  0A01               	xorlw	1	; case 7
 31662  000A82  B4D8               	btfsc	status,2,c
 31663  000A84  D752               	goto	l1272
 31664  000A86  0A0F               	xorlw	15	; case 8
 31665  000A88  B4D8               	btfsc	status,2,c
 31666  000A8A  D6E5               	goto	l1265
 31667  000A8C  0A01               	xorlw	1	; case 9
 31668  000A8E  B4D8               	btfsc	status,2,c
 31669  000A90  D6FF               	goto	l1266
 31670  000A92  0A03               	xorlw	3	; case 10
 31671  000A94  B4D8               	btfsc	status,2,c
 31672  000A96  D719               	goto	l1267
 31673  000A98  0A01               	xorlw	1	; case 11
 31674  000A9A  B4D8               	btfsc	status,2,c
 31675  000A9C  D770               	goto	l1277
 31676  000A9E  0A07               	xorlw	7	; case 12
 31677  000AA0  B4D8               	btfsc	status,2,c
 31678  000AA2  D783               	goto	l1278
 31679  000AA4  0A01               	xorlw	1	; case 13
 31680  000AA6  B4D8               	btfsc	status,2,c
 31681  000AA8  D78D               	goto	l1280
 31682  000AAA  0A03               	xorlw	3	; case 14
 31683  000AAC  B4D8               	btfsc	status,2,c
 31684  000AAE  D7C9               	goto	l1285
 31685  000AB0  0A01               	xorlw	1	; case 15
 31686  000AB2  B4D8               	btfsc	status,2,c
 31687  000AB4  D7CA               	goto	l1286
 31688  000AB6                     l1255:
 31689                           
 31690                           ;mdm_gsm_gprs_http.c: 496: return GetMOutSts;
 31691                           
 31692                           ; BSR set to: 1
 31693  000AB6  0101               	movlb	1	; () banked
 31694  000AB8  51E6               	movf	HttpGetMethod@GetMOutSts& (0+255),w,b
 31695  000ABA  0012               	return	
 31696  000ABC                     __end_of_HttpGetMethod:
 31697                           	opt stack 0
 31698                           tosu	equ	0xFFF
 31699                           tosh	equ	0xFFE
 31700                           tosl	equ	0xFFD
 31701                           pclath	equ	0xFFA
 31702                           tblptru	equ	0xFF8
 31703                           tblptrh	equ	0xFF7
 31704                           tblptrl	equ	0xFF6
 31705                           tablat	equ	0xFF5
 31706                           prodh	equ	0xFF4
 31707                           prodl	equ	0xFF3
 31708                           intcon	equ	0xFF2
 31709                           intcon2	equ	0xFF1
 31710                           intcon3	equ	0xFF0
 31711                           indf0	equ	0xFEF
 31712                           postinc0	equ	0xFEE
 31713                           plusw0	equ	0xFEB
 31714                           fsr0h	equ	0xFEA
 31715                           fsr0l	equ	0xFE9
 31716                           wreg	equ	0xFE8
 31717                           indf1	equ	0xFE7
 31718                           postinc1	equ	0xFE6
 31719                           postdec1	equ	0xFE5
 31720                           plusw1	equ	0xFE3
 31721                           fsr1h	equ	0xFE2
 31722                           fsr1l	equ	0xFE1
 31723                           indf2	equ	0xFDF
 31724                           postinc2	equ	0xFDE
 31725                           postdec2	equ	0xFDD
 31726                           plusw2	equ	0xFDB
 31727                           fsr2h	equ	0xFDA
 31728                           fsr2l	equ	0xFD9
 31729                           status	equ	0xFD8
 31730                           
 31731 ;; *************** function _Uart_WriteString *****************
 31732 ;; Defined at:
 31733 ;;		line 518 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31734 ;; Parameters:    Size  Location     Type
 31735 ;;  Module          1    wreg     unsigned char 
 31736 ;;  StringToWrit    2   32[BANK0 ] PTR unsigned char 
 31737 ;;		 -> HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(50), Mdm_MakePhoneCall@UartMessage(25), Mdm_SetSmsFo
      +rmat@UartMessage(20), 
 31738 ;;		 -> Mdm_PinUnlock@UartMessage(13), 
 31739 ;; Auto vars:     Size  Location     Type
 31740 ;;  Module          1   34[BANK0 ] unsigned char 
 31741 ;; Return value:  Size  Location     Type
 31742 ;;                  1    wreg      void 
 31743 ;; Registers used:
 31744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31745 ;; Tracked objects:
 31746 ;;		On entry : 0/0
 31747 ;;		On exit  : 0/0
 31748 ;;		Unchanged: 0/0
 31749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31753 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31754 ;;Total ram usage:        3 bytes
 31755 ;; Hardware stack levels used:    1
 31756 ;; Hardware stack levels required when called:   12
 31757 ;; This function calls:
 31758 ;;		_UartTxBufferStatus
 31759 ;;		_UartWriteByte
 31760 ;; This function is called by:
 31761 ;;		_Mdm_SetSmsFormat
 31762 ;;		_InitGprsNetwork
 31763 ;;		_HttpGetMethod
 31764 ;;		_Mdm_PinUnlock
 31765 ;;		_Mdm_MakePhoneCall
 31766 ;; This function uses a non-reentrant model
 31767 ;;
 31768                           
 31769                           	psect	text144
 31770  00625C                     __ptext144:
 31771                           	opt stack 0
 31772  00625C                     _Uart_WriteString:
 31773                           	opt stack 12
 31774                           
 31775                           ; BSR set to: 1
 31776                           ;incstack = 0
 31777                           ;Uart_WriteString@Module stored from wreg
 31778  00625C  0100               	movlb	0	; () banked
 31779  00625E  6F82               	movwf	Uart_WriteString@Module& (0+255),b
 31780                           
 31781                           ;uart_drv.c: 521: while (*StringToWrite)
 31782  006260  D014               	goto	u12150
 31783  006262                     
 31784                           ;uart_drv.c: 522: {
 31785                           ;uart_drv.c: 524: UartWriteByte(Module, *StringToWrite);
 31786  006262  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31787  006266  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31788  00626A  50DF               	movf	indf2,w,c
 31789  00626C  0100               	movlb	0	; () banked
 31790  00626E  6F7D               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 31791  006270  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31792  006272  EC23  F034         	call	_UartWriteByte
 31793                           
 31794                           ;uart_drv.c: 526: StringToWrite++;
 31795  006276  0100               	movlb	0	; () banked
 31796  006278  4B80               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 31797  00627A  2B81               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 31798  00627C                     
 31799                           ; BSR set to: 0
 31800                           
 31801                           ; BSR set to: 0
 31802  00627C  0100               	movlb	0	; () banked
 31803  00627E  5182               	movf	Uart_WriteString@Module& (0+255),w,b
 31804  006280  EC01  F02F         	call	_UartTxBufferStatus
 31805  006284  06E8               	decf	wreg,f,c
 31806  006286  B4D8               	btfsc	status,2,c
 31807  006288  D7F9               	goto	l709
 31808  00628A                     u12150:
 31809  00628A  C080  FFD9         	movff	Uart_WriteString@StringToWrite,fsr2l
 31810  00628E  C081  FFDA         	movff	Uart_WriteString@StringToWrite+1,fsr2h
 31811  006292  50DF               	movf	indf2,w,c
 31812  006294  B4D8               	btfsc	status,2,c
 31813  006296  0012               	return	
 31814  006298  D7E4               	goto	l707
 31815  00629A                     __end_of_Uart_WriteString:
 31816                           	opt stack 0
 31817                           tosu	equ	0xFFF
 31818                           tosh	equ	0xFFE
 31819                           tosl	equ	0xFFD
 31820                           pclath	equ	0xFFA
 31821                           tblptru	equ	0xFF8
 31822                           tblptrh	equ	0xFF7
 31823                           tblptrl	equ	0xFF6
 31824                           tablat	equ	0xFF5
 31825                           prodh	equ	0xFF4
 31826                           prodl	equ	0xFF3
 31827                           intcon	equ	0xFF2
 31828                           intcon2	equ	0xFF1
 31829                           intcon3	equ	0xFF0
 31830                           indf0	equ	0xFEF
 31831                           postinc0	equ	0xFEE
 31832                           plusw0	equ	0xFEB
 31833                           fsr0h	equ	0xFEA
 31834                           fsr0l	equ	0xFE9
 31835                           wreg	equ	0xFE8
 31836                           indf1	equ	0xFE7
 31837                           postinc1	equ	0xFE6
 31838                           postdec1	equ	0xFE5
 31839                           plusw1	equ	0xFE3
 31840                           fsr1h	equ	0xFE2
 31841                           fsr1l	equ	0xFE1
 31842                           indf2	equ	0xFDF
 31843                           postinc2	equ	0xFDE
 31844                           postdec2	equ	0xFDD
 31845                           plusw2	equ	0xFDB
 31846                           fsr2h	equ	0xFDA
 31847                           fsr2l	equ	0xFD9
 31848                           status	equ	0xFD8
 31849                           
 31850 ;; *************** function _Uart_WriteConstString *****************
 31851 ;; Defined at:
 31852 ;;		line 496 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;  Module          1    wreg     unsigned char 
 31855 ;;  ConstStringT    2   32[BANK0 ] PTR const unsigned char 
 31856 ;;		 -> STR_31(12), STR_30(19), STR_29(14), STR_20(14), 
 31857 ;;		 -> STR_19(14), STR_18(13), STR_17(13), STR_16(17), 
 31858 ;;		 -> STR_14(21), STR_13(14), STR_12(13), STR_11(14), 
 31859 ;;		 -> STR_10(14), STR_8(31), STR_7(5), STR_6(5), 
 31860 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(5), 
 31861 ;; Auto vars:     Size  Location     Type
 31862 ;;  Module          1   34[BANK0 ] unsigned char 
 31863 ;; Return value:  Size  Location     Type
 31864 ;;                  1    wreg      void 
 31865 ;; Registers used:
 31866 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31867 ;; Tracked objects:
 31868 ;;		On entry : 0/0
 31869 ;;		On exit  : 0/0
 31870 ;;		Unchanged: 0/0
 31871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31875 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31876 ;;Total ram usage:        3 bytes
 31877 ;; Hardware stack levels used:    1
 31878 ;; Hardware stack levels required when called:   12
 31879 ;; This function calls:
 31880 ;;		_UartTxBufferStatus
 31881 ;;		_UartWriteByte
 31882 ;; This function is called by:
 31883 ;;		_CheckModem
 31884 ;;		_ConfigureModem
 31885 ;;		_GetSmsSm
 31886 ;;		_Mdm_HangPhoneCall
 31887 ;;		_InitGprsNetwork
 31888 ;;		_HttpGetMethod
 31889 ;;		_detectCmd
 31890 ;;		_initGprsModem
 31891 ;;		_Mdm_GetPhoneCall
 31892 ;;		_MdmHttp_SetSsl
 31893 ;; This function uses a non-reentrant model
 31894 ;;
 31895                           
 31896                           	psect	text145
 31897  00611C                     __ptext145:
 31898                           	opt stack 0
 31899  00611C                     _Uart_WriteConstString:
 31900                           	opt stack 11
 31901                           
 31902                           ;incstack = 0
 31903                           ;Uart_WriteConstString@Module stored from wreg
 31904  00611C  0100               	movlb	0	; () banked
 31905  00611E  6F82               	movwf	Uart_WriteConstString@Module& (0+255),b
 31906                           
 31907                           ;uart_drv.c: 499: while (*ConstStringToWrite)
 31908  006120  D015               	goto	u11610
 31909  006122                     
 31910                           ;uart_drv.c: 500: {
 31911                           ;uart_drv.c: 502: UartWriteByte(Module, *ConstStringToWrite);
 31912  006122  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31913  006126  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31914  00612A                     	if	0	;tblptru may be non-zero
 31915  00612A                     	endif
 31916  00612A                     	if	0	;tblptru may be non-zero
 31917  00612A                     	endif
 31918  00612A  0008               	tblrd		*
 31919  00612C  CFF5 F07D          	movff	tablat,UartWriteByte@ByteToWrite
 31920  006130  0100               	movlb	0	; () banked
 31921  006132  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31922  006134  EC23  F034         	call	_UartWriteByte
 31923                           
 31924                           ;uart_drv.c: 504: ConstStringToWrite++;
 31925  006138  0100               	movlb	0	; () banked
 31926  00613A  4B80               	infsnz	Uart_WriteConstString@ConstStringToWrite& (0+255),f,b
 31927  00613C  2B81               	incf	(Uart_WriteConstString@ConstStringToWrite+1)& (0+255),f,b
 31928  00613E                     
 31929                           ; BSR set to: 0
 31930                           
 31931                           ; BSR set to: 0
 31932  00613E  0100               	movlb	0	; () banked
 31933  006140  5182               	movf	Uart_WriteConstString@Module& (0+255),w,b
 31934  006142  EC01  F02F         	call	_UartTxBufferStatus
 31935  006146  06E8               	decf	wreg,f,c
 31936  006148  B4D8               	btfsc	status,2,c
 31937  00614A  D7F9               	goto	l700
 31938  00614C                     u11610:
 31939  00614C  C080  FFF6         	movff	Uart_WriteConstString@ConstStringToWrite,tblptrl
 31940  006150  C081  FFF7         	movff	Uart_WriteConstString@ConstStringToWrite+1,tblptrh
 31941  006154                     	if	0	;tblptru may be non-zero
 31942  006154                     	endif
 31943  006154                     	if	0	;tblptru may be non-zero
 31944  006154                     	endif
 31945  006154  0008               	tblrd		*
 31946  006156  50F5               	movf	tablat,w,c
 31947  006158  0900               	iorlw	0
 31948  00615A  B4D8               	btfsc	status,2,c
 31949  00615C  0012               	return	
 31950  00615E  D7E1               	goto	l698
 31951  006160                     __end_of_Uart_WriteConstString:
 31952                           	opt stack 0
 31953                           tosu	equ	0xFFF
 31954                           tosh	equ	0xFFE
 31955                           tosl	equ	0xFFD
 31956                           pclath	equ	0xFFA
 31957                           tblptru	equ	0xFF8
 31958                           tblptrh	equ	0xFF7
 31959                           tblptrl	equ	0xFF6
 31960                           tablat	equ	0xFF5
 31961                           prodh	equ	0xFF4
 31962                           prodl	equ	0xFF3
 31963                           intcon	equ	0xFF2
 31964                           intcon2	equ	0xFF1
 31965                           intcon3	equ	0xFF0
 31966                           indf0	equ	0xFEF
 31967                           postinc0	equ	0xFEE
 31968                           plusw0	equ	0xFEB
 31969                           fsr0h	equ	0xFEA
 31970                           fsr0l	equ	0xFE9
 31971                           wreg	equ	0xFE8
 31972                           indf1	equ	0xFE7
 31973                           postinc1	equ	0xFE6
 31974                           postdec1	equ	0xFE5
 31975                           plusw1	equ	0xFE3
 31976                           fsr1h	equ	0xFE2
 31977                           fsr1l	equ	0xFE1
 31978                           indf2	equ	0xFDF
 31979                           postinc2	equ	0xFDE
 31980                           postdec2	equ	0xFDD
 31981                           plusw2	equ	0xFDB
 31982                           fsr2h	equ	0xFDA
 31983                           fsr2l	equ	0xFD9
 31984                           status	equ	0xFD8
 31985                           
 31986 ;; *************** function _UartWriteByte *****************
 31987 ;; Defined at:
 31988 ;;		line 173 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 31989 ;; Parameters:    Size  Location     Type
 31990 ;;  Module          1    wreg     unsigned char 
 31991 ;;  ByteToWrite     1   29[BANK0 ] unsigned char 
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;  Module          1   30[BANK0 ] unsigned char 
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      void 
 31996 ;; Registers used:
 31997 ;;		wreg, status,2, status,0
 31998 ;; Tracked objects:
 31999 ;;		On entry : 0/0
 32000 ;;		On exit  : 0/0
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32003 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32007 ;;Total ram usage:        2 bytes
 32008 ;; Hardware stack levels used:    1
 32009 ;; Hardware stack levels required when called:   11
 32010 ;; This function calls:
 32011 ;;		Nothing
 32012 ;; This function is called by:
 32013 ;;		_Uart_WriteConstString
 32014 ;;		_Uart_WriteString
 32015 ;;		_Uart_WriteStringLen
 32016 ;; This function uses a non-reentrant model
 32017 ;;
 32018                           
 32019                           	psect	text146
 32020  006846                     __ptext146:
 32021                           	opt stack 0
 32022  006846                     _UartWriteByte:
 32023                           	opt stack 11
 32024                           
 32025                           ;incstack = 0
 32026                           ;UartWriteByte@Module stored from wreg
 32027  006846  0100               	movlb	0	; () banked
 32028  006848  6F7E               	movwf	UartWriteByte@Module& (0+255),b
 32029                           
 32030                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 32031  00684A  0100               	movlb	0	; () banked
 32032  00684C  057E               	decf	UartWriteByte@Module& (0+255),w,b
 32033  00684E  A4D8               	btfss	status,2,c
 32034  006850  D003               	goto	l639
 32035                           
 32036                           ; BSR set to: 0
 32037                           ;uart_drv.c: 176: {
 32038                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 32039  006852  C07D  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 32040                           
 32041                           ;uart_drv.c: 179: }
 32042  006856  0012               	return	
 32043  006858                     l639:
 32044                           
 32045                           ; BSR set to: 0
 32046                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 32047                           
 32048                           ; BSR set to: 0
 32049  006858  0E02               	movlw	2
 32050  00685A  197E               	xorwf	UartWriteByte@Module& (0+255),w,b
 32051  00685C  A4D8               	btfss	status,2,c
 32052  00685E  0012               	return	
 32053                           
 32054                           ; BSR set to: 0
 32055                           ;uart_drv.c: 181: {
 32056                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 32057  006860  C07D  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 32058                           
 32059                           ; BSR set to: 0
 32060  006864  0012               	return	
 32061  006866                     __end_of_UartWriteByte:
 32062                           	opt stack 0
 32063                           tosu	equ	0xFFF
 32064                           tosh	equ	0xFFE
 32065                           tosl	equ	0xFFD
 32066                           pclath	equ	0xFFA
 32067                           tblptru	equ	0xFF8
 32068                           tblptrh	equ	0xFF7
 32069                           tblptrl	equ	0xFF6
 32070                           tablat	equ	0xFF5
 32071                           prodh	equ	0xFF4
 32072                           prodl	equ	0xFF3
 32073                           intcon	equ	0xFF2
 32074                           intcon2	equ	0xFF1
 32075                           intcon3	equ	0xFF0
 32076                           indf0	equ	0xFEF
 32077                           postinc0	equ	0xFEE
 32078                           plusw0	equ	0xFEB
 32079                           fsr0h	equ	0xFEA
 32080                           fsr0l	equ	0xFE9
 32081                           wreg	equ	0xFE8
 32082                           indf1	equ	0xFE7
 32083                           postinc1	equ	0xFE6
 32084                           postdec1	equ	0xFE5
 32085                           plusw1	equ	0xFE3
 32086                           fsr1h	equ	0xFE2
 32087                           fsr1l	equ	0xFE1
 32088                           indf2	equ	0xFDF
 32089                           postinc2	equ	0xFDE
 32090                           postdec2	equ	0xFDD
 32091                           plusw2	equ	0xFDB
 32092                           fsr2h	equ	0xFDA
 32093                           fsr2l	equ	0xFD9
 32094                           status	equ	0xFD8
 32095                           
 32096 ;; *************** function _UartTxBufferStatus *****************
 32097 ;; Defined at:
 32098 ;;		line 223 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 32099 ;; Parameters:    Size  Location     Type
 32100 ;;  Module          1    wreg     unsigned char 
 32101 ;; Auto vars:     Size  Location     Type
 32102 ;;  Module          1   30[BANK0 ] unsigned char 
 32103 ;;  TxBufferStat    1   31[BANK0 ] enum E9037
 32104 ;; Return value:  Size  Location     Type
 32105 ;;                  1    wreg      enum E9037
 32106 ;; Registers used:
 32107 ;;		wreg, status,2, status,0
 32108 ;; Tracked objects:
 32109 ;;		On entry : 0/0
 32110 ;;		On exit  : 0/0
 32111 ;;		Unchanged: 0/0
 32112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32117 ;;Total ram usage:        3 bytes
 32118 ;; Hardware stack levels used:    1
 32119 ;; Hardware stack levels required when called:   11
 32120 ;; This function calls:
 32121 ;;		Nothing
 32122 ;; This function is called by:
 32123 ;;		_Uart_WriteConstString
 32124 ;;		_Uart_WriteString
 32125 ;;		_Uart_WriteStringLen
 32126 ;; This function uses a non-reentrant model
 32127 ;;
 32128                           
 32129                           	psect	text147
 32130  005E02                     __ptext147:
 32131                           	opt stack 0
 32132  005E02                     _UartTxBufferStatus:
 32133                           	opt stack 11
 32134                           
 32135                           ; BSR set to: 0
 32136                           ;incstack = 0
 32137                           ;UartTxBufferStatus@Module stored from wreg
 32138  005E02  0100               	movlb	0	; () banked
 32139  005E04  6F7E               	movwf	UartTxBufferStatus@Module& (0+255),b
 32140                           
 32141                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 32142  005E06  0E00               	movlw	0
 32143  005E08  0100               	movlb	0	; () banked
 32144  005E0A  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32145                           
 32146                           ; BSR set to: 0
 32147                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 32148  005E0C  057E               	decf	UartTxBufferStatus@Module& (0+255),w,b
 32149  005E0E  A4D8               	btfss	status,2,c
 32150  005E10  D00B               	goto	l651
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;uart_drv.c: 228: {
 32154                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32155  005E12  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32156  005E16  90D8               	bcf	status,0,c
 32157  005E18  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32158  005E1A  B17D               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 32159  005E1C  D002               	goto	l652
 32160  005E1E                     u11450:
 32161                           
 32162                           ; BSR set to: 0
 32163                           ;uart_drv.c: 231: {
 32164                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 32165  005E1E  0E01               	movlw	1
 32166  005E20  D014               	goto	L73
 32167  005E22                     l652:
 32168                           
 32169                           ; BSR set to: 0
 32170                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32171                           
 32172                           ; BSR set to: 0
 32173  005E22  CFAD F07D          	movff	4013,??_UartTxBufferStatus	;volatile
 32174  005E26  D00C               	goto	L103
 32175  005E28                     l651:
 32176                           
 32177                           ; BSR set to: 0
 32178                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 32179                           
 32180                           ; BSR set to: 0
 32181  005E28  0E02               	movlw	2
 32182  005E2A  197E               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 32183  005E2C  A4D8               	btfss	status,2,c
 32184  005E2E  D00E               	goto	l660
 32185                           
 32186                           ; BSR set to: 0
 32187                           ;uart_drv.c: 244: {
 32188                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 32189  005E30  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32190  005E34  90D8               	bcf	status,0,c
 32191  005E36  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32192  005E38  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32193  005E3A  D7F1               	goto	u11450
 32194                           
 32195                           ; BSR set to: 0
 32196                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 32197                           
 32198                           ; BSR set to: 0
 32199                           
 32200                           ;uart_drv.c: 249: }
 32201                           
 32202                           ; BSR set to: 0
 32203                           ;uart_drv.c: 247: {
 32204                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 32205  005E3C  CFA8 F07D          	movff	4008,??_UartTxBufferStatus	;volatile
 32206  005E40                     L103:
 32207  005E40  90D8               	bcf	status,0,c
 32208  005E42  337D               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 32209  005E44  A17D               	btfss	??_UartTxBufferStatus& (0+255),0,b
 32210  005E46  D002               	goto	l660
 32211                           
 32212                           ; BSR set to: 0
 32213                           ;uart_drv.c: 251: {
 32214                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 32215  005E48  0E02               	movlw	2
 32216  005E4A                     L73:
 32217  005E4A  6F7F               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 32218  005E4C                     l660:
 32219                           
 32220                           ; BSR set to: 0
 32221                           ;uart_drv.c: 257: }
 32222                           ;uart_drv.c: 258: }
 32223                           ;uart_drv.c: 260: return TxBufferStatus;
 32224                           
 32225                           ; BSR set to: 0
 32226                           
 32227                           ; BSR set to: 0
 32228                           
 32229                           ; BSR set to: 0
 32230                           
 32231                           ; BSR set to: 0
 32232                           
 32233                           ;uart_drv.c: 254: else
 32234                           ;uart_drv.c: 255: {
 32235                           
 32236                           ; BSR set to: 0
 32237  005E4C  517F               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 32238  005E4E  0012               	return	
 32239  005E50                     __end_of_UartTxBufferStatus:
 32240                           	opt stack 0
 32241                           tosu	equ	0xFFF
 32242                           tosh	equ	0xFFE
 32243                           tosl	equ	0xFFD
 32244                           pclath	equ	0xFFA
 32245                           tblptru	equ	0xFF8
 32246                           tblptrh	equ	0xFF7
 32247                           tblptrl	equ	0xFF6
 32248                           tablat	equ	0xFF5
 32249                           prodh	equ	0xFF4
 32250                           prodl	equ	0xFF3
 32251                           intcon	equ	0xFF2
 32252                           intcon2	equ	0xFF1
 32253                           intcon3	equ	0xFF0
 32254                           indf0	equ	0xFEF
 32255                           postinc0	equ	0xFEE
 32256                           plusw0	equ	0xFEB
 32257                           fsr0h	equ	0xFEA
 32258                           fsr0l	equ	0xFE9
 32259                           wreg	equ	0xFE8
 32260                           indf1	equ	0xFE7
 32261                           postinc1	equ	0xFE6
 32262                           postdec1	equ	0xFE5
 32263                           plusw1	equ	0xFE3
 32264                           fsr1h	equ	0xFE2
 32265                           fsr1l	equ	0xFE1
 32266                           indf2	equ	0xFDF
 32267                           postinc2	equ	0xFDE
 32268                           postdec2	equ	0xFDD
 32269                           plusw2	equ	0xFDB
 32270                           fsr2h	equ	0xFDA
 32271                           fsr2l	equ	0xFD9
 32272                           status	equ	0xFD8
 32273                           
 32274 ;; *************** function _StringCopy *****************
 32275 ;; Defined at:
 32276 ;;		line 104 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32277 ;; Parameters:    Size  Location     Type
 32278 ;;  SourceStr       2   37[BANK0 ] PTR unsigned char 
 32279 ;;		 -> delCmdFsm@emptyNumber(13), memoryPreamble(4), smsText(20), STR_15(20), 
 32280 ;;		 -> STR_9(21), MessageText(50), PhoneNumber(20), STR_5(10), 
 32281 ;;		 -> Mdm_SmsRx.HeaderBuffer(80), Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32282 ;;  DestStr         2   39[BANK0 ] PTR unsigned char 
 32283 ;;		 -> receivedNumber(13), smsText(20), EepromBuffer(15), HttpGetMethod@UartMessage(200), 
 32284 ;;		 -> InitGprsNetwork@UartMessage(50), MessageText(50), PhoneNumber(20), SendSmsSm@UartMessage(50), 
 32285 ;;		 -> Mdm_SmsRx(102), callerNumber(13), 
 32286 ;;  Len             2   41[BANK0 ] unsigned short 
 32287 ;; Auto vars:     Size  Location     Type
 32288 ;;  Index           2   45[BANK0 ] unsigned short 
 32289 ;; Return value:  Size  Location     Type
 32290 ;;                  1    wreg      void 
 32291 ;; Registers used:
 32292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32293 ;; Tracked objects:
 32294 ;;		On entry : 0/0
 32295 ;;		On exit  : 0/0
 32296 ;;		Unchanged: 0/0
 32297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32298 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32299 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32301 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32302 ;;Total ram usage:       10 bytes
 32303 ;; Hardware stack levels used:    1
 32304 ;; Hardware stack levels required when called:   11
 32305 ;; This function calls:
 32306 ;;		Nothing
 32307 ;; This function is called by:
 32308 ;;		_ModemEvtParser
 32309 ;;		_GetSmsSm
 32310 ;;		_SendSmsSm
 32311 ;;		_Mdm_GetSmsData
 32312 ;;		_InitGprsNetwork
 32313 ;;		_HttpGetMethod
 32314 ;;		_Eeprom_Write
 32315 ;;		_detectCmd
 32316 ;;		_Mdm_SendSmsData
 32317 ;; This function uses a non-reentrant model
 32318 ;;
 32319                           
 32320                           	psect	text148
 32321  0057A2                     __ptext148:
 32322                           	opt stack 0
 32323  0057A2                     _StringCopy:
 32324                           	opt stack 13
 32325                           
 32326                           ;sf.c: 106: UINT16 Index = 0;
 32327                           
 32328                           ; BSR set to: 0
 32329                           ;incstack = 0
 32330  0057A2  0E00               	movlw	0
 32331  0057A4  0100               	movlb	0	; () banked
 32332  0057A6  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32333  0057A8  0E00               	movlw	0
 32334  0057AA  6F8D               	movwf	StringCopy@Index& (0+255),b
 32335                           
 32336                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 32337  0057AC  0E00               	movlw	0
 32338  0057AE  6F8E               	movwf	(StringCopy@Index+1)& (0+255),b
 32339  0057B0  0E00               	movlw	0
 32340  0057B2  6F8D               	movwf	StringCopy@Index& (0+255),b
 32341  0057B4  D020               	goto	l2255
 32342  0057B6                     
 32343                           ; BSR set to: 0
 32344                           ;sf.c: 110: {
 32345                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 32346                           
 32347                           ; BSR set to: 0
 32348  0057B6  518D               	movf	StringCopy@Index& (0+255),w,b
 32349  0057B8  2585               	addwf	StringCopy@SourceStr& (0+255),w,b
 32350  0057BA  6F8B               	movwf	??_StringCopy& (0+255),b
 32351  0057BC  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32352  0057BE  2186               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 32353  0057C0  6F8C               	movwf	(??_StringCopy+1)& (0+255),b
 32354  0057C2  C08B  FFF6         	movff	??_StringCopy,tblptrl
 32355  0057C6  C08C  FFF7         	movff	??_StringCopy+1,tblptrh
 32356  0057CA  6AF8               	clrf	tblptru,c
 32357  0057CC  518D               	movf	StringCopy@Index& (0+255),w,b
 32358  0057CE  2587               	addwf	StringCopy@DestStr& (0+255),w,b
 32359  0057D0  6ED9               	movwf	fsr2l,c
 32360  0057D2  518E               	movf	(StringCopy@Index+1)& (0+255),w,b
 32361  0057D4  2188               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 32362  0057D6  6EDA               	movwf	fsr2h,c
 32363  0057D8  0E0E               	movlw	(high __ramtop+-1)
 32364  0057DA  64F7               	cpfsgt	tblptrh,c
 32365  0057DC  D003               	bra	u12177
 32366  0057DE  0008               	tblrd		*
 32367  0057E0  50F5               	movf	tablat,w,c
 32368  0057E2  D005               	bra	u12170
 32369  0057E4                     u12177:
 32370  0057E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 32371  0057E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 32372  0057EC  50EF               	movf	indf0,w,c
 32373  0057EE                     u12170:
 32374  0057EE  6EDF               	movwf	indf2,c
 32375  0057F0  0100               	movlb	0	; () banked
 32376  0057F2  4B8D               	infsnz	StringCopy@Index& (0+255),f,b
 32377  0057F4  2B8E               	incf	(StringCopy@Index+1)& (0+255),f,b
 32378  0057F6                     l2255:
 32379                           
 32380                           ; BSR set to: 0
 32381                           
 32382                           ; BSR set to: 0
 32383  0057F6  5189               	movf	StringCopy@Len& (0+255),w,b
 32384  0057F8  5D8D               	subwf	StringCopy@Index& (0+255),w,b
 32385  0057FA  518A               	movf	(StringCopy@Len+1)& (0+255),w,b
 32386  0057FC  598E               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 32387  0057FE  B0D8               	btfsc	status,0,c
 32388  005800  0012               	return	
 32389  005802  D7D9               	goto	l2256
 32390  005804                     __end_of_StringCopy:
 32391                           	opt stack 0
 32392                           tosu	equ	0xFFF
 32393                           tosh	equ	0xFFE
 32394                           tosl	equ	0xFFD
 32395                           pclath	equ	0xFFA
 32396                           tblptru	equ	0xFF8
 32397                           tblptrh	equ	0xFF7
 32398                           tblptrl	equ	0xFF6
 32399                           tablat	equ	0xFF5
 32400                           prodh	equ	0xFF4
 32401                           prodl	equ	0xFF3
 32402                           intcon	equ	0xFF2
 32403                           intcon2	equ	0xFF1
 32404                           intcon3	equ	0xFF0
 32405                           indf0	equ	0xFEF
 32406                           postinc0	equ	0xFEE
 32407                           plusw0	equ	0xFEB
 32408                           fsr0h	equ	0xFEA
 32409                           fsr0l	equ	0xFE9
 32410                           wreg	equ	0xFE8
 32411                           indf1	equ	0xFE7
 32412                           postinc1	equ	0xFE6
 32413                           postdec1	equ	0xFE5
 32414                           plusw1	equ	0xFE3
 32415                           fsr1h	equ	0xFE2
 32416                           fsr1l	equ	0xFE1
 32417                           indf2	equ	0xFDF
 32418                           postinc2	equ	0xFDE
 32419                           postdec2	equ	0xFDD
 32420                           plusw2	equ	0xFDB
 32421                           fsr2h	equ	0xFDA
 32422                           fsr2l	equ	0xFD9
 32423                           status	equ	0xFD8
 32424                           
 32425 ;; *************** function _OsTmr_StartTimer *****************
 32426 ;; Defined at:
 32427 ;;		line 118 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32428 ;; Parameters:    Size  Location     Type
 32429 ;;  Timer           2   33[BANK0 ] PTR struct _SwTimerType
 32430 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32431 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32432 ;;  Timeout         4   35[BANK0 ] unsigned long 
 32433 ;; Auto vars:     Size  Location     Type
 32434 ;;		None
 32435 ;; Return value:  Size  Location     Type
 32436 ;;                  1    wreg      void 
 32437 ;; Registers used:
 32438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32439 ;; Tracked objects:
 32440 ;;		On entry : 0/0
 32441 ;;		On exit  : 0/0
 32442 ;;		Unchanged: 0/0
 32443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32447 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32448 ;;Total ram usage:        6 bytes
 32449 ;; Hardware stack levels used:    1
 32450 ;; Hardware stack levels required when called:   12
 32451 ;; This function calls:
 32452 ;;		_GetOsTickCounter
 32453 ;; This function is called by:
 32454 ;;		_OsTmr_Wait
 32455 ;;		_CheckModem
 32456 ;;		_SendSmsSm
 32457 ;;		_InitGprsNetwork
 32458 ;;		_HttpGetMethod
 32459 ;;		_I2cSlv_QueryI2cData
 32460 ;;		_Term_MainSm
 32461 ;; This function uses a non-reentrant model
 32462 ;;
 32463                           
 32464                           	psect	text149
 32465  005862                     __ptext149:
 32466                           	opt stack 0
 32467  005862                     _OsTmr_StartTimer:
 32468                           	opt stack 12
 32469                           
 32470                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 32471                           
 32472                           ; BSR set to: 0
 32473                           ;incstack = 0
 32474  005862  0100               	movlb	0	; () banked
 32475  005864  EE20 F001          	lfsr	2,1
 32476  005868  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32477  00586A  26D9               	addwf	fsr2l,f,c
 32478  00586C  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32479  00586E  22DA               	addwfc	fsr2h,f,c
 32480  005870  0E00               	movlw	0
 32481  005872  6EDF               	movwf	indf2,c
 32482                           
 32483                           ; BSR set to: 0
 32484                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 32485  005874  EC1C  F035         	call	_GetOsTickCounter	;wreg free
 32486  005878  0100               	movlb	0	; () banked
 32487  00587A  EE20 F002          	lfsr	2,2
 32488  00587E  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32489  005880  26D9               	addwf	fsr2l,f,c
 32490  005882  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32491  005884  22DA               	addwfc	fsr2h,f,c
 32492  005886  C07D  FFDE         	movff	?_GetOsTickCounter,postinc2
 32493  00588A  C07E  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 32494  00588E  C07F  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 32495  005892  C080  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 32496                           
 32497                           ; BSR set to: 0
 32498                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 32499  005896  EE20 F006          	lfsr	2,6
 32500  00589A  5181               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 32501  00589C  26D9               	addwf	fsr2l,f,c
 32502  00589E  5182               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 32503  0058A0  22DA               	addwfc	fsr2h,f,c
 32504  0058A2  C083  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 32505  0058A6  C084  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 32506  0058AA  C085  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 32507  0058AE  C086  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 32508                           
 32509                           ; BSR set to: 0
 32510                           ;os_timers.c: 127: Timer->Enabled = 1u;
 32511  0058B2  C081  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 32512  0058B6  C082  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 32513  0058BA  0E01               	movlw	1
 32514  0058BC  6EDF               	movwf	indf2,c
 32515                           
 32516                           ; BSR set to: 0
 32517  0058BE  0012               	return		;funcret
 32518  0058C0                     __end_of_OsTmr_StartTimer:
 32519                           	opt stack 0
 32520                           tosu	equ	0xFFF
 32521                           tosh	equ	0xFFE
 32522                           tosl	equ	0xFFD
 32523                           pclath	equ	0xFFA
 32524                           tblptru	equ	0xFF8
 32525                           tblptrh	equ	0xFF7
 32526                           tblptrl	equ	0xFF6
 32527                           tablat	equ	0xFF5
 32528                           prodh	equ	0xFF4
 32529                           prodl	equ	0xFF3
 32530                           intcon	equ	0xFF2
 32531                           intcon2	equ	0xFF1
 32532                           intcon3	equ	0xFF0
 32533                           indf0	equ	0xFEF
 32534                           postinc0	equ	0xFEE
 32535                           plusw0	equ	0xFEB
 32536                           fsr0h	equ	0xFEA
 32537                           fsr0l	equ	0xFE9
 32538                           wreg	equ	0xFE8
 32539                           indf1	equ	0xFE7
 32540                           postinc1	equ	0xFE6
 32541                           postdec1	equ	0xFE5
 32542                           plusw1	equ	0xFE3
 32543                           fsr1h	equ	0xFE2
 32544                           fsr1l	equ	0xFE1
 32545                           indf2	equ	0xFDF
 32546                           postinc2	equ	0xFDE
 32547                           postdec2	equ	0xFDD
 32548                           plusw2	equ	0xFDB
 32549                           fsr2h	equ	0xFDA
 32550                           fsr2l	equ	0xFD9
 32551                           status	equ	0xFD8
 32552                           
 32553 ;; *************** function _OsTmr_GetTimerStatus *****************
 32554 ;; Defined at:
 32555 ;;		line 193 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32556 ;; Parameters:    Size  Location     Type
 32557 ;;  Timer           2   53[BANK0 ] PTR struct _SwTimerType
 32558 ;;		 -> Term_MainSm@TermDelay(11), Terminal@SwTimer(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@Query
      +Timer(11), 
 32559 ;;		 -> ConnWait(11), ConnTimeout(11), SendSmsSm@SwTimer(11), CheckModem@Timeout(11), 
 32560 ;; Auto vars:     Size  Location     Type
 32561 ;;		None
 32562 ;; Return value:  Size  Location     Type
 32563 ;;                  1    wreg      enum E7740
 32564 ;; Registers used:
 32565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 32566 ;; Tracked objects:
 32567 ;;		On entry : 0/0
 32568 ;;		On exit  : 0/0
 32569 ;;		Unchanged: 0/0
 32570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32575 ;;Total ram usage:        6 bytes
 32576 ;; Hardware stack levels used:    1
 32577 ;; Hardware stack levels required when called:   13
 32578 ;; This function calls:
 32579 ;;		_GetElapsedTime
 32580 ;; This function is called by:
 32581 ;;		_OsTmr_Wait
 32582 ;;		_CheckModem
 32583 ;;		_SendSmsSm
 32584 ;;		_InitGprsNetwork
 32585 ;;		_HttpGetMethod
 32586 ;;		_I2cSlv_QueryI2cData
 32587 ;;		_Term_MainSm
 32588 ;; This function uses a non-reentrant model
 32589 ;;
 32590                           
 32591                           	psect	text150
 32592  004EB6                     __ptext150:
 32593                           	opt stack 0
 32594  004EB6                     _OsTmr_GetTimerStatus:
 32595                           	opt stack 11
 32596                           
 32597                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 32598                           
 32599                           ; BSR set to: 0
 32600                           ;incstack = 0
 32601  004EB6  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32602  004EBA  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32603  004EBE  04DE               	decf	postinc2,w,c
 32604  004EC0  A4D8               	btfss	status,2,c
 32605  004EC2  D030               	goto	l864
 32606                           
 32607                           ;os_timers.c: 197: {
 32608                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 32609  004EC4  0100               	movlb	0	; () banked
 32610  004EC6  EE20 F006          	lfsr	2,6
 32611  004ECA  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32612  004ECC  26D9               	addwf	fsr2l,f,c
 32613  004ECE  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32614  004ED0  22DA               	addwfc	fsr2h,f,c
 32615  004ED2  EE10 F002          	lfsr	1,2
 32616  004ED6  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32617  004ED8  26E1               	addwf	fsr1l,f,c
 32618  004EDA  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32619  004EDC  22E2               	addwfc	fsr1h,f,c
 32620  004EDE  CFE6 F081          	movff	postinc1,GetElapsedTime@StartTime
 32621  004EE2  CFE6 F082          	movff	postinc1,GetElapsedTime@StartTime+1
 32622  004EE6  CFE6 F083          	movff	postinc1,GetElapsedTime@StartTime+2
 32623  004EEA  CFE6 F084          	movff	postinc1,GetElapsedTime@StartTime+3
 32624  004EEE  EC7A  F01F         	call	_GetElapsedTime	;wreg free
 32625  004EF2  50DE               	movf	postinc2,w,c
 32626  004EF4  0100               	movlb	0	; () banked
 32627  004EF6  5D81               	subwf	?_GetElapsedTime& (0+255),w,b
 32628  004EF8  50DE               	movf	postinc2,w,c
 32629  004EFA  5982               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 32630  004EFC  50DE               	movf	postinc2,w,c
 32631  004EFE  5983               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 32632  004F00  50DE               	movf	postinc2,w,c
 32633  004F02  5984               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 32634  004F04  A0D8               	btfss	status,0,c
 32635  004F06  D017               	goto	l867
 32636                           
 32637                           ; BSR set to: 0
 32638                           ;os_timers.c: 200: {
 32639                           ;os_timers.c: 202: Timer->Enabled = 0u;
 32640  004F08  C095  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 32641  004F0C  C096  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 32642  004F10  0E00               	movlw	0
 32643  004F12  6EDF               	movwf	indf2,c
 32644                           
 32645                           ; BSR set to: 0
 32646                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 32647  004F14  EE20 F001          	lfsr	2,1
 32648  004F18  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32649  004F1A  26D9               	addwf	fsr2l,f,c
 32650  004F1C  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32651  004F1E  22DA               	addwfc	fsr2h,f,c
 32652  004F20  0E01               	movlw	1
 32653  004F22  D008               	goto	L104
 32654  004F24                     l864:
 32655                           
 32656                           ;os_timers.c: 211: else
 32657                           ;os_timers.c: 212: {
 32658                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 32659                           
 32660                           ; BSR set to: 0
 32661  004F24  0100               	movlb	0	; () banked
 32662  004F26  EE20 F001          	lfsr	2,1
 32663  004F2A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32664  004F2C  26D9               	addwf	fsr2l,f,c
 32665  004F2E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32666  004F30  22DA               	addwfc	fsr2h,f,c
 32667  004F32  0E02               	movlw	2
 32668  004F34                     L104:
 32669  004F34  6EDF               	movwf	indf2,c
 32670  004F36                     l867:
 32671                           
 32672                           ; BSR set to: 0
 32673                           ;os_timers.c: 215: }
 32674                           ;os_timers.c: 218: return Timer->Status;
 32675  004F36  EE20 F001          	lfsr	2,1
 32676  004F3A  5195               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 32677  004F3C  26D9               	addwf	fsr2l,f,c
 32678  004F3E  5196               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 32679  004F40  22DA               	addwfc	fsr2h,f,c
 32680  004F42  50DF               	movf	indf2,w,c
 32681  004F44  0012               	return	
 32682  004F46                     __end_of_OsTmr_GetTimerStatus:
 32683                           	opt stack 0
 32684                           tosu	equ	0xFFF
 32685                           tosh	equ	0xFFE
 32686                           tosl	equ	0xFFD
 32687                           pclath	equ	0xFFA
 32688                           tblptru	equ	0xFF8
 32689                           tblptrh	equ	0xFF7
 32690                           tblptrl	equ	0xFF6
 32691                           tablat	equ	0xFF5
 32692                           prodh	equ	0xFF4
 32693                           prodl	equ	0xFF3
 32694                           intcon	equ	0xFF2
 32695                           intcon2	equ	0xFF1
 32696                           intcon3	equ	0xFF0
 32697                           indf0	equ	0xFEF
 32698                           postinc0	equ	0xFEE
 32699                           plusw0	equ	0xFEB
 32700                           fsr0h	equ	0xFEA
 32701                           fsr0l	equ	0xFE9
 32702                           wreg	equ	0xFE8
 32703                           indf1	equ	0xFE7
 32704                           postinc1	equ	0xFE6
 32705                           postdec1	equ	0xFE5
 32706                           plusw1	equ	0xFE3
 32707                           fsr1h	equ	0xFE2
 32708                           fsr1l	equ	0xFE1
 32709                           indf2	equ	0xFDF
 32710                           postinc2	equ	0xFDE
 32711                           postdec2	equ	0xFDD
 32712                           plusw2	equ	0xFDB
 32713                           fsr2h	equ	0xFDA
 32714                           fsr2l	equ	0xFD9
 32715                           status	equ	0xFD8
 32716                           
 32717 ;; *************** function _GetElapsedTime *****************
 32718 ;; Defined at:
 32719 ;;		line 84 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32720 ;; Parameters:    Size  Location     Type
 32721 ;;  StartTime       4   33[BANK0 ] unsigned long 
 32722 ;; Auto vars:     Size  Location     Type
 32723 ;;  CurrentTimes    4   49[BANK0 ] unsigned long 
 32724 ;;  TimeValue       4   45[BANK0 ] unsigned long 
 32725 ;; Return value:  Size  Location     Type
 32726 ;;                  4   33[BANK0 ] unsigned long 
 32727 ;; Registers used:
 32728 ;;		wreg, status,2, status,0, cstack
 32729 ;; Tracked objects:
 32730 ;;		On entry : 0/0
 32731 ;;		On exit  : 0/0
 32732 ;;		Unchanged: 0/0
 32733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32735 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32736 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32737 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32738 ;;Total ram usage:       20 bytes
 32739 ;; Hardware stack levels used:    1
 32740 ;; Hardware stack levels required when called:   12
 32741 ;; This function calls:
 32742 ;;		_GetOsTickCounter
 32743 ;; This function is called by:
 32744 ;;		_OsTmr_GetTimerStatus
 32745 ;;		_OsTmr_GetRemainingTime
 32746 ;; This function uses a non-reentrant model
 32747 ;;
 32748                           
 32749                           	psect	text151
 32750  003EF4                     __ptext151:
 32751                           	opt stack 0
 32752  003EF4                     _GetElapsedTime:
 32753                           	opt stack 11
 32754                           
 32755                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 32756                           ;os_timers.c: 87: UINT32 TimeValue;
 32757                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 32758                           
 32759                           ; BSR set to: 0
 32760                           ;incstack = 0
 32761  003EF4  EC1C  F035         	call	_GetOsTickCounter	;wreg free
 32762  003EF8  C07D  F091         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 32763  003EFC  C07E  F092         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 32764  003F00  C07F  F093         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 32765  003F04  C080  F094         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 32766                           
 32767                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 32768  003F08  0100               	movlb	0	; () banked
 32769  003F0A  5181               	movf	GetElapsedTime@StartTime& (0+255),w,b
 32770  003F0C  5D91               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32771  003F0E  5182               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 32772  003F10  5992               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32773  003F12  5183               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 32774  003F14  5993               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32775  003F16  5184               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 32776  003F18  5994               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32777  003F1A  A0D8               	btfss	status,0,c
 32778  003F1C  D01D               	goto	l844
 32779                           
 32780                           ; BSR set to: 0
 32781                           ;os_timers.c: 94: {
 32782                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 32783  003F1E  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32784  003F22  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32785  003F26  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32786  003F2A  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32787  003F2E  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32788  003F30  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32789  003F32  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32790  003F34  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32791  003F36  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32792  003F38  0E00               	movlw	0
 32793  003F3A  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32794  003F3C  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32795  003F3E  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32796  003F40  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32797  003F42  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32798  003F44  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32799  003F46  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32800  003F48  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32801  003F4A  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32802  003F4C  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32803  003F4E  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32804  003F50  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32805  003F52  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32806  003F54  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32807  003F56  D028               	goto	L74
 32808  003F58                     l844:
 32809                           
 32810                           ; BSR set to: 0
 32811                           ;os_timers.c: 97: else
 32812                           ;os_timers.c: 98: {
 32813                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 32814                           
 32815                           ; BSR set to: 0
 32816  003F58  C081  F085         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 32817  003F5C  C082  F086         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 32818  003F60  C083  F087         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 32819  003F64  C084  F088         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 32820  003F68  1F85               	comf	??_GetElapsedTime& (0+255),f,b
 32821  003F6A  1F86               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 32822  003F6C  1F87               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 32823  003F6E  1F88               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 32824  003F70  2B85               	incf	??_GetElapsedTime& (0+255),f,b
 32825  003F72  0E00               	movlw	0
 32826  003F74  2386               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 32827  003F76  2387               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 32828  003F78  2388               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 32829  003F7A  5191               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 32830  003F7C  2585               	addwf	??_GetElapsedTime& (0+255),w,b
 32831  003F7E  6F89               	movwf	(??_GetElapsedTime+4)& (0+255),b
 32832  003F80  5192               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 32833  003F82  2186               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 32834  003F84  6F8A               	movwf	(??_GetElapsedTime+5)& (0+255),b
 32835  003F86  5193               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 32836  003F88  2187               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 32837  003F8A  6F8B               	movwf	(??_GetElapsedTime+6)& (0+255),b
 32838  003F8C  5194               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 32839  003F8E  2188               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 32840  003F90  6F8C               	movwf	(??_GetElapsedTime+7)& (0+255),b
 32841  003F92  0EFF               	movlw	255
 32842  003F94  2589               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 32843  003F96  6F8D               	movwf	GetElapsedTime@TimeValue& (0+255),b
 32844  003F98  0EFF               	movlw	255
 32845  003F9A  218A               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 32846  003F9C  6F8E               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 32847  003F9E  0EFF               	movlw	255
 32848  003FA0  218B               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 32849  003FA2  6F8F               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 32850  003FA4  0EFF               	movlw	255
 32851  003FA6  218C               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 32852  003FA8                     L74:
 32853  003FA8  6F90               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 32854                           
 32855                           ; BSR set to: 0
 32856                           ;os_timers.c: 100: }
 32857                           ;os_timers.c: 102: return TimeValue;
 32858                           
 32859                           ; BSR set to: 0
 32860  003FAA  C08D  F081         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 32861  003FAE  C08E  F082         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 32862  003FB2  C08F  F083         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 32863  003FB6  C090  F084         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 32864  003FBA  0012               	return	
 32865  003FBC                     __end_of_GetElapsedTime:
 32866                           	opt stack 0
 32867                           tosu	equ	0xFFF
 32868                           tosh	equ	0xFFE
 32869                           tosl	equ	0xFFD
 32870                           pclath	equ	0xFFA
 32871                           tblptru	equ	0xFF8
 32872                           tblptrh	equ	0xFF7
 32873                           tblptrl	equ	0xFF6
 32874                           tablat	equ	0xFF5
 32875                           prodh	equ	0xFF4
 32876                           prodl	equ	0xFF3
 32877                           intcon	equ	0xFF2
 32878                           intcon2	equ	0xFF1
 32879                           intcon3	equ	0xFF0
 32880                           indf0	equ	0xFEF
 32881                           postinc0	equ	0xFEE
 32882                           plusw0	equ	0xFEB
 32883                           fsr0h	equ	0xFEA
 32884                           fsr0l	equ	0xFE9
 32885                           wreg	equ	0xFE8
 32886                           indf1	equ	0xFE7
 32887                           postinc1	equ	0xFE6
 32888                           postdec1	equ	0xFE5
 32889                           plusw1	equ	0xFE3
 32890                           fsr1h	equ	0xFE2
 32891                           fsr1l	equ	0xFE1
 32892                           indf2	equ	0xFDF
 32893                           postinc2	equ	0xFDE
 32894                           postdec2	equ	0xFDD
 32895                           plusw2	equ	0xFDB
 32896                           fsr2h	equ	0xFDA
 32897                           fsr2l	equ	0xFD9
 32898                           status	equ	0xFD8
 32899                           
 32900 ;; *************** function _GetOsTickCounter *****************
 32901 ;; Defined at:
 32902 ;;		line 70 in file "../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 32903 ;; Parameters:    Size  Location     Type
 32904 ;;		None
 32905 ;; Auto vars:     Size  Location     Type
 32906 ;;		None
 32907 ;; Return value:  Size  Location     Type
 32908 ;;                  4   29[BANK0 ] unsigned long 
 32909 ;; Registers used:
 32910 ;;		None
 32911 ;; Tracked objects:
 32912 ;;		On entry : 0/0
 32913 ;;		On exit  : 0/0
 32914 ;;		Unchanged: 0/0
 32915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32920 ;;Total ram usage:        4 bytes
 32921 ;; Hardware stack levels used:    1
 32922 ;; Hardware stack levels required when called:   11
 32923 ;; This function calls:
 32924 ;;		Nothing
 32925 ;; This function is called by:
 32926 ;;		_GetElapsedTime
 32927 ;;		_OsTmr_StartTimer
 32928 ;;		_OsTmr_GetElapsedTime
 32929 ;; This function uses a non-reentrant model
 32930 ;;
 32931                           
 32932                           	psect	text152
 32933  006A38                     __ptext152:
 32934                           	opt stack 0
 32935  006A38                     _GetOsTickCounter:
 32936                           	opt stack 12
 32937                           
 32938                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 32939                           
 32940                           ; BSR set to: 0
 32941                           ;incstack = 0
 32942  006A38  C314  F07D         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 32943  006A3C  C315  F07E         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 32944  006A40  C316  F07F         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 32945  006A44  C317  F080         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 32946  006A48  0012               	return		;funcret
 32947  006A4A                     __end_of_GetOsTickCounter:
 32948                           	opt stack 0
 32949                           tosu	equ	0xFFF
 32950                           tosh	equ	0xFFE
 32951                           tosl	equ	0xFFD
 32952                           pclath	equ	0xFFA
 32953                           tblptru	equ	0xFF8
 32954                           tblptrh	equ	0xFF7
 32955                           tblptrl	equ	0xFF6
 32956                           tablat	equ	0xFF5
 32957                           prodh	equ	0xFF4
 32958                           prodl	equ	0xFF3
 32959                           intcon	equ	0xFF2
 32960                           intcon2	equ	0xFF1
 32961                           intcon3	equ	0xFF0
 32962                           indf0	equ	0xFEF
 32963                           postinc0	equ	0xFEE
 32964                           plusw0	equ	0xFEB
 32965                           fsr0h	equ	0xFEA
 32966                           fsr0l	equ	0xFE9
 32967                           wreg	equ	0xFE8
 32968                           indf1	equ	0xFE7
 32969                           postinc1	equ	0xFE6
 32970                           postdec1	equ	0xFE5
 32971                           plusw1	equ	0xFE3
 32972                           fsr1h	equ	0xFE2
 32973                           fsr1l	equ	0xFE1
 32974                           indf2	equ	0xFDF
 32975                           postinc2	equ	0xFDE
 32976                           postdec2	equ	0xFDD
 32977                           plusw2	equ	0xFDB
 32978                           fsr2h	equ	0xFDA
 32979                           fsr2l	equ	0xFD9
 32980                           status	equ	0xFD8
 32981                           
 32982 ;; *************** function _ClearBuffer *****************
 32983 ;; Defined at:
 32984 ;;		line 124 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/sf.c"
 32985 ;; Parameters:    Size  Location     Type
 32986 ;;  Buffer          2   29[BANK0 ] PTR unsigned char 
 32987 ;;		 -> GsmGprsTerminal@UartBuffer(200), EepromBuffer(15), HttpGetMethod@UartMessage(200), InitGprsNetwork@UartMessage(5
      +0), 
 32988 ;;		 -> Mdm_SmsRx(102), callerNumber(13), RxBuffer(400), 
 32989 ;;  Len             2   31[BANK0 ] unsigned short 
 32990 ;; Auto vars:     Size  Location     Type
 32991 ;;  Index           2   33[BANK0 ] unsigned short 
 32992 ;; Return value:  Size  Location     Type
 32993 ;;                  1    wreg      void 
 32994 ;; Registers used:
 32995 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32996 ;; Tracked objects:
 32997 ;;		On entry : 0/0
 32998 ;;		On exit  : 0/0
 32999 ;;		Unchanged: 0/0
 33000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33002 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33004 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33005 ;;Total ram usage:        6 bytes
 33006 ;; Hardware stack levels used:    1
 33007 ;; Hardware stack levels required when called:   11
 33008 ;; This function calls:
 33009 ;;		Nothing
 33010 ;; This function is called by:
 33011 ;;		_GetSmsSm
 33012 ;;		_GetCallerNumber
 33013 ;;		_InitGprsNetwork
 33014 ;;		_HttpGetMethod
 33015 ;;		_Eeprom_Reset
 33016 ;;		_GsmGprsTerminal
 33017 ;; This function uses a non-reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text153
 33021  0063F2                     __ptext153:
 33022                           	opt stack 0
 33023  0063F2                     _ClearBuffer:
 33024                           	opt stack 14
 33025                           
 33026                           ;sf.c: 126: UINT16 Index = 0;
 33027                           
 33028                           ;incstack = 0
 33029  0063F2  0E00               	movlw	0
 33030  0063F4  0100               	movlb	0	; () banked
 33031  0063F6  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33032  0063F8  0E00               	movlw	0
 33033  0063FA  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33034                           
 33035                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 33036  0063FC  0E00               	movlw	0
 33037  0063FE  6F82               	movwf	(ClearBuffer@Index+1)& (0+255),b
 33038  006400  0E00               	movlw	0
 33039  006402  6F81               	movwf	ClearBuffer@Index& (0+255),b
 33040  006404  D00A               	goto	l2261
 33041  006406                     
 33042                           ; BSR set to: 0
 33043                           ;sf.c: 130: {
 33044                           ;sf.c: 131: *(Buffer + Index) = 0;
 33045                           
 33046                           ; BSR set to: 0
 33047  006406  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33048  006408  257D               	addwf	ClearBuffer@Buffer& (0+255),w,b
 33049  00640A  6ED9               	movwf	fsr2l,c
 33050  00640C  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33051  00640E  217E               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 33052  006410  6EDA               	movwf	fsr2h,c
 33053  006412  0E00               	movlw	0
 33054  006414  6EDF               	movwf	indf2,c
 33055                           
 33056                           ; BSR set to: 0
 33057  006416  4B81               	infsnz	ClearBuffer@Index& (0+255),f,b
 33058  006418  2B82               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 33059  00641A                     l2261:
 33060                           
 33061                           ; BSR set to: 0
 33062                           
 33063                           ; BSR set to: 0
 33064  00641A  5181               	movf	ClearBuffer@Index& (0+255),w,b
 33065  00641C  5D7F               	subwf	ClearBuffer@Len& (0+255),w,b
 33066  00641E  5182               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 33067  006420  5980               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 33068  006422  A0D8               	btfss	status,0,c
 33069  006424  0012               	return	
 33070  006426  D7EF               	goto	l2262
 33071  006428                     __end_of_ClearBuffer:
 33072                           	opt stack 0
 33073                           tosu	equ	0xFFF
 33074                           tosh	equ	0xFFE
 33075                           tosl	equ	0xFFD
 33076                           pclath	equ	0xFFA
 33077                           tblptru	equ	0xFF8
 33078                           tblptrh	equ	0xFF7
 33079                           tblptrl	equ	0xFF6
 33080                           tablat	equ	0xFF5
 33081                           prodh	equ	0xFF4
 33082                           prodl	equ	0xFF3
 33083                           intcon	equ	0xFF2
 33084                           intcon2	equ	0xFF1
 33085                           intcon3	equ	0xFF0
 33086                           indf0	equ	0xFEF
 33087                           postinc0	equ	0xFEE
 33088                           plusw0	equ	0xFEB
 33089                           fsr0h	equ	0xFEA
 33090                           fsr0l	equ	0xFE9
 33091                           wreg	equ	0xFE8
 33092                           indf1	equ	0xFE7
 33093                           postinc1	equ	0xFE6
 33094                           postdec1	equ	0xFE5
 33095                           plusw1	equ	0xFE3
 33096                           fsr1h	equ	0xFE2
 33097                           fsr1l	equ	0xFE1
 33098                           indf2	equ	0xFDF
 33099                           postinc2	equ	0xFDE
 33100                           postdec2	equ	0xFDD
 33101                           plusw2	equ	0xFDB
 33102                           fsr2h	equ	0xFDA
 33103                           fsr2l	equ	0xFD9
 33104                           status	equ	0xFD8
 33105                           
 33106 ;; *************** function _LedStateMachine *****************
 33107 ;; Defined at:
 33108 ;;		line 235 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33109 ;; Parameters:    Size  Location     Type
 33110 ;;  Led             1    wreg     unsigned char 
 33111 ;;  LedSts          2   47[BANK0 ] PTR enum E8954
 33112 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 33113 ;;  LedOut          2   49[BANK0 ] PTR unsigned char 
 33114 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 33115 ;;  LedBlink        2   51[BANK0 ] PTR struct _LedBlinkType
 33116 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33117 ;;  LedPulse        2   53[BANK0 ] PTR struct _LedPulseType
 33118 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33119 ;; Auto vars:     Size  Location     Type
 33120 ;;  Led             1   57[BANK0 ] unsigned char 
 33121 ;;  LedOutSts       1   56[BANK0 ] unsigned char 
 33122 ;; Return value:  Size  Location     Type
 33123 ;;                  1    wreg      unsigned char 
 33124 ;; Registers used:
 33125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33126 ;; Tracked objects:
 33127 ;;		On entry : 0/0
 33128 ;;		On exit  : 0/0
 33129 ;;		Unchanged: 0/0
 33130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33131 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33133 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33134 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33135 ;;Total ram usage:       11 bytes
 33136 ;; Hardware stack levels used:    1
 33137 ;; Hardware stack levels required when called:   13
 33138 ;; This function calls:
 33139 ;;		_LedBlinkStateMachine
 33140 ;;		_LedPulseStateMachine
 33141 ;;		_Led_SetLedStatus
 33142 ;; This function is called by:
 33143 ;;		_Led_MainTask
 33144 ;; This function uses a non-reentrant model
 33145 ;;
 33146                           
 33147                           	psect	text154
 33148  004780                     __ptext154:
 33149                           	opt stack 0
 33150  004780                     _LedStateMachine:
 33151                           	opt stack 14
 33152                           
 33153                           ; BSR set to: 0
 33154                           ;incstack = 0
 33155                           ;LedStateMachine@Led stored from wreg
 33156  004780  0100               	movlb	0	; () banked
 33157  004782  6F99               	movwf	LedStateMachine@Led& (0+255),b
 33158                           
 33159                           ;led.c: 238: UINT8 LedOutSts = 0u;
 33160  004784  0E00               	movlw	0
 33161  004786  0100               	movlb	0	; () banked
 33162  004788  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33163                           
 33164                           ;led.c: 241: switch (*LedSts)
 33165  00478A  D037               	goto	l2120
 33166  00478C                     
 33167                           ; BSR set to: 0
 33168                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 33169                           
 33170                           ; BSR set to: 0
 33171  00478C  0E00               	movlw	0
 33172  00478E  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33173                           
 33174                           ; BSR set to: 0
 33175                           ;led.c: 246: *LedOut = ((UINT8)(0));
 33176  004790  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33177  004794  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33178  004798  0E00               	movlw	0
 33179  00479A  D007               	goto	L75
 33180  00479C                     
 33181                           ; BSR set to: 0
 33182                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 33183                           
 33184                           ; BSR set to: 0
 33185  00479C  0E01               	movlw	1
 33186  00479E  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33187                           
 33188                           ; BSR set to: 0
 33189                           ;led.c: 252: *LedOut = ((UINT8)(1));
 33190  0047A0  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33191  0047A4  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33192  0047A8  0E01               	movlw	1
 33193  0047AA                     L75:
 33194  0047AA  6EDF               	movwf	indf2,c
 33195                           
 33196                           ;led.c: 253: break;
 33197  0047AC  D03A               	goto	l2122
 33198  0047AE                     
 33199                           ; BSR set to: 0
 33200                           ;led.c: 257: if (*LedOut == 1)
 33201                           
 33202                           ; BSR set to: 0
 33203  0047AE  C091  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 33204  0047B2  C092  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 33205  0047B6  04DE               	decf	postinc2,w,c
 33206  0047B8  A4D8               	btfss	status,2,c
 33207  0047BA  D006               	goto	l2125
 33208                           
 33209                           ; BSR set to: 0
 33210                           ;led.c: 258: {
 33211                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 33212  0047BC  0E00               	movlw	0
 33213  0047BE  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33214  0047C0  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33215  0047C2  ECA8  F032         	call	_Led_SetLedStatus
 33216                           
 33217                           ;led.c: 261: }
 33218  0047C6  D02D               	goto	l2122
 33219  0047C8                     l2125:
 33220                           
 33221                           ;led.c: 262: else
 33222                           ;led.c: 263: {
 33223                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 33224  0047C8  0E01               	movlw	1
 33225  0047CA  0100               	movlb	0	; () banked
 33226  0047CC  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33227  0047CE  5199               	movf	LedStateMachine@Led& (0+255),w,b
 33228  0047D0  ECA8  F032         	call	_Led_SetLedStatus
 33229                           
 33230                           ;led.c: 266: }
 33231                           ;led.c: 267: break;
 33232  0047D4  D026               	goto	l2122
 33233  0047D6                     
 33234                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 33235  0047D6  C093  F08A         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 33236  0047DA  C094  F08B         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 33237  0047DE  EC6E  F013         	call	_LedBlinkStateMachine	;wreg free
 33238  0047E2  D008               	goto	L76
 33239  0047E4                     
 33240                           ; BSR set to: 0
 33241                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 33242                           
 33243                           ; BSR set to: 0
 33244  0047E4  C095  F08A         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 33245  0047E8  C096  F08B         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 33246  0047EC  C099  F08C         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 33247  0047F0  EC22  F019         	call	_LedPulseStateMachine	;wreg free
 33248  0047F4                     L76:
 33249  0047F4  0100               	movlb	0	; () banked
 33250  0047F6  6F98               	movwf	LedStateMachine@LedOutSts& (0+255),b
 33251                           
 33252                           ; BSR set to: 0
 33253                           ;led.c: 281: }
 33254                           
 33255                           ; BSR set to: 0
 33256                           ;led.c: 280: break;
 33257                           
 33258                           ;led.c: 279: default:
 33259                           
 33260                           ;led.c: 277: break;
 33261  0047F8  D014               	goto	l2122
 33262  0047FA                     l2120:
 33263                           
 33264                           ; BSR set to: 0
 33265                           
 33266                           ; BSR set to: 0
 33267  0047FA  C08F  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 33268  0047FE  C090  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 33269  004802  50DF               	movf	indf2,w,c
 33270                           
 33271                           ; Switch size 1, requested type "space"
 33272                           ; Number of cases is 5, Range of values is 0 to 4
 33273                           ; switch strategies available:
 33274                           ; Name         Instructions Cycles
 33275                           ; simple_byte           16     9 (average)
 33276                           ;	Chosen strategy is simple_byte
 33277  004804  0A00               	xorlw	0	; case 0
 33278  004806  B4D8               	btfsc	status,2,c
 33279  004808  D7C1               	goto	l2121
 33280  00480A  0A01               	xorlw	1	; case 1
 33281  00480C  B4D8               	btfsc	status,2,c
 33282  00480E  D7C6               	goto	l2123
 33283  004810  0A03               	xorlw	3	; case 2
 33284  004812  B4D8               	btfsc	status,2,c
 33285  004814  D7CC               	goto	l2124
 33286  004816  0A01               	xorlw	1	; case 3
 33287  004818  B4D8               	btfsc	status,2,c
 33288  00481A  D7DD               	goto	l2127
 33289  00481C  0A07               	xorlw	7	; case 4
 33290  00481E  B4D8               	btfsc	status,2,c
 33291  004820  D7E1               	goto	l2128
 33292  004822                     l2122:
 33293                           
 33294                           ;led.c: 283: return LedOutSts;
 33295                           
 33296                           ; BSR set to: 0
 33297  004822  0100               	movlb	0	; () banked
 33298  004824  5198               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 33299  004826  0012               	return	
 33300  004828                     __end_of_LedStateMachine:
 33301                           	opt stack 0
 33302                           tosu	equ	0xFFF
 33303                           tosh	equ	0xFFE
 33304                           tosl	equ	0xFFD
 33305                           pclath	equ	0xFFA
 33306                           tblptru	equ	0xFF8
 33307                           tblptrh	equ	0xFF7
 33308                           tblptrl	equ	0xFF6
 33309                           tablat	equ	0xFF5
 33310                           prodh	equ	0xFF4
 33311                           prodl	equ	0xFF3
 33312                           intcon	equ	0xFF2
 33313                           intcon2	equ	0xFF1
 33314                           intcon3	equ	0xFF0
 33315                           indf0	equ	0xFEF
 33316                           postinc0	equ	0xFEE
 33317                           plusw0	equ	0xFEB
 33318                           fsr0h	equ	0xFEA
 33319                           fsr0l	equ	0xFE9
 33320                           wreg	equ	0xFE8
 33321                           indf1	equ	0xFE7
 33322                           postinc1	equ	0xFE6
 33323                           postdec1	equ	0xFE5
 33324                           plusw1	equ	0xFE3
 33325                           fsr1h	equ	0xFE2
 33326                           fsr1l	equ	0xFE1
 33327                           indf2	equ	0xFDF
 33328                           postinc2	equ	0xFDE
 33329                           postdec2	equ	0xFDD
 33330                           plusw2	equ	0xFDB
 33331                           fsr2h	equ	0xFDA
 33332                           fsr2l	equ	0xFD9
 33333                           status	equ	0xFD8
 33334                           
 33335 ;; *************** function _LedPulseStateMachine *****************
 33336 ;; Defined at:
 33337 ;;		line 182 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33338 ;; Parameters:    Size  Location     Type
 33339 ;;  LedPulse        2   42[BANK0 ] PTR struct _LedPulseType
 33340 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 33341 ;;  Led             1   44[BANK0 ] unsigned char 
 33342 ;; Auto vars:     Size  Location     Type
 33343 ;;		None
 33344 ;; Return value:  Size  Location     Type
 33345 ;;                  1    wreg      unsigned char 
 33346 ;; Registers used:
 33347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33348 ;; Tracked objects:
 33349 ;;		On entry : 0/0
 33350 ;;		On exit  : 0/0
 33351 ;;		Unchanged: 0/0
 33352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33353 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33356 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33357 ;;Total ram usage:        5 bytes
 33358 ;; Hardware stack levels used:    1
 33359 ;; Hardware stack levels required when called:   12
 33360 ;; This function calls:
 33361 ;;		_Led_SetLedStatus
 33362 ;;		___lwdiv
 33363 ;; This function is called by:
 33364 ;;		_LedStateMachine
 33365 ;; This function uses a non-reentrant model
 33366 ;;
 33367                           
 33368                           	psect	text155
 33369  003244                     __ptext155:
 33370                           	opt stack 0
 33371  003244                     _LedPulseStateMachine:
 33372                           	opt stack 14
 33373                           
 33374                           ;led.c: 185: switch (LedPulse->LedPulseState)
 33375                           
 33376                           ; BSR set to: 0
 33377                           ;incstack = 0
 33378  003244  D05C               	goto	l2110
 33379  003246                     
 33380                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 33381  003246  0100               	movlb	0	; () banked
 33382  003248  EE20 F001          	lfsr	2,1
 33383  00324C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33384  00324E  26D9               	addwf	fsr2l,f,c
 33385  003250  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33386  003252  22DA               	addwfc	fsr2h,f,c
 33387  003254  0E01               	movlw	1
 33388  003256  6EDF               	movwf	indf2,c
 33389                           
 33390                           ; BSR set to: 0
 33391                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 33392  003258  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33393  00325C  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33394  003260  0E01               	movlw	1
 33395  003262  D036               	goto	L77
 33396  003264                     
 33397                           ;led.c: 196: LedPulse->LedPulseCounter++;
 33398                           
 33399                           ; BSR set to: 0
 33400  003264  0100               	movlb	0	; () banked
 33401  003266  EE20 F002          	lfsr	2,2
 33402  00326A  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33403  00326C  26D9               	addwf	fsr2l,f,c
 33404  00326E  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33405  003270  22DA               	addwfc	fsr2h,f,c
 33406  003272  2ADE               	incf	postinc2,f,c
 33407  003274  0E00               	movlw	0
 33408  003276  22DD               	addwfc	postdec2,f,c
 33409                           
 33410                           ; BSR set to: 0
 33411                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 33412  003278  EE20 F004          	lfsr	2,4
 33413  00327C  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33414  00327E  26D9               	addwf	fsr2l,f,c
 33415  003280  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33416  003282  22DA               	addwfc	fsr2h,f,c
 33417  003284  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33418  003288  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33419  00328C  0E00               	movlw	0
 33420  00328E  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33421  003290  0E32               	movlw	50
 33422  003292  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33423  003294  ECE6  F02D         	call	___lwdiv	;wreg free
 33424  003298  0100               	movlb	0	; () banked
 33425  00329A  EE20 F002          	lfsr	2,2
 33426  00329E  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33427  0032A0  26D9               	addwf	fsr2l,f,c
 33428  0032A2  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33429  0032A4  22DA               	addwfc	fsr2h,f,c
 33430  0032A6  5183               	movf	?___lwdiv& (0+255),w,b
 33431  0032A8  5CDE               	subwf	postinc2,w,c
 33432  0032AA  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33433  0032AC  58DE               	subwfb	postinc2,w,c
 33434  0032AE  A0D8               	btfss	status,0,c
 33435  0032B0  D034               	goto	l2112
 33436                           
 33437                           ; BSR set to: 0
 33438                           ;led.c: 199: {
 33439                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 33440  0032B2  EE20 F002          	lfsr	2,2
 33441  0032B6  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33442  0032B8  26D9               	addwf	fsr2l,f,c
 33443  0032BA  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33444  0032BC  22DA               	addwfc	fsr2h,f,c
 33445  0032BE  0E00               	movlw	0
 33446  0032C0  6EDE               	movwf	postinc2,c
 33447  0032C2  0E00               	movlw	0
 33448  0032C4  6EDD               	movwf	postdec2,c
 33449                           
 33450                           ; BSR set to: 0
 33451                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 33452  0032C6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33453  0032CA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33454  0032CE  0E02               	movlw	2
 33455  0032D0                     L77:
 33456  0032D0  6EDF               	movwf	indf2,c
 33457                           
 33458                           ; BSR set to: 0
 33459                           ;led.c: 204: }
 33460                           ;led.c: 205: break;
 33461  0032D2  D023               	goto	l2112
 33462  0032D4                     
 33463                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 33464                           
 33465                           ; BSR set to: 0
 33466  0032D4  0100               	movlb	0	; () banked
 33467  0032D6  EE20 F001          	lfsr	2,1
 33468  0032DA  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33469  0032DC  26D9               	addwf	fsr2l,f,c
 33470  0032DE  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33471  0032E0  22DA               	addwfc	fsr2h,f,c
 33472  0032E2  0E00               	movlw	0
 33473  0032E4  6EDF               	movwf	indf2,c
 33474                           
 33475                           ; BSR set to: 0
 33476                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 33477  0032E6  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33478  0032EA  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33479  0032EE  0E00               	movlw	0
 33480  0032F0  6EDF               	movwf	indf2,c
 33481                           
 33482                           ; BSR set to: 0
 33483                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 33484  0032F2  0E00               	movlw	0
 33485  0032F4  6F7D               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 33486  0032F6  518C               	movf	LedPulseStateMachine@Led& (0+255),w,b
 33487  0032F8  ECA8  F032         	call	_Led_SetLedStatus
 33488                           
 33489                           ;led.c: 218: }
 33490                           
 33491                           ;led.c: 217: break;
 33492                           
 33493                           ;led.c: 216: default:
 33494                           
 33495                           ;led.c: 214: break;
 33496  0032FC  D00E               	goto	l2112
 33497  0032FE                     l2110:
 33498  0032FE  C08A  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 33499  003302  C08B  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 33500  003306  50DF               	movf	indf2,w,c
 33501                           
 33502                           ; Switch size 1, requested type "space"
 33503                           ; Number of cases is 3, Range of values is 0 to 2
 33504                           ; switch strategies available:
 33505                           ; Name         Instructions Cycles
 33506                           ; simple_byte           10     6 (average)
 33507                           ;	Chosen strategy is simple_byte
 33508  003308  0A00               	xorlw	0	; case 0
 33509  00330A  B4D8               	btfsc	status,2,c
 33510  00330C  D79C               	goto	l2111
 33511  00330E  0A01               	xorlw	1	; case 1
 33512  003310  B4D8               	btfsc	status,2,c
 33513  003312  D7A8               	goto	l2113
 33514  003314  0A03               	xorlw	3	; case 2
 33515  003316  B4D8               	btfsc	status,2,c
 33516  003318  D7DD               	goto	l2115
 33517  00331A                     l2112:
 33518                           
 33519                           ;led.c: 221: return (LedPulse->LedOutState);
 33520  00331A  0100               	movlb	0	; () banked
 33521  00331C  EE20 F001          	lfsr	2,1
 33522  003320  518A               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 33523  003322  26D9               	addwf	fsr2l,f,c
 33524  003324  518B               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 33525  003326  22DA               	addwfc	fsr2h,f,c
 33526  003328  50DF               	movf	indf2,w,c
 33527  00332A  0012               	return	
 33528  00332C                     __end_of_LedPulseStateMachine:
 33529                           	opt stack 0
 33530                           tosu	equ	0xFFF
 33531                           tosh	equ	0xFFE
 33532                           tosl	equ	0xFFD
 33533                           pclath	equ	0xFFA
 33534                           tblptru	equ	0xFF8
 33535                           tblptrh	equ	0xFF7
 33536                           tblptrl	equ	0xFF6
 33537                           tablat	equ	0xFF5
 33538                           prodh	equ	0xFF4
 33539                           prodl	equ	0xFF3
 33540                           intcon	equ	0xFF2
 33541                           intcon2	equ	0xFF1
 33542                           intcon3	equ	0xFF0
 33543                           indf0	equ	0xFEF
 33544                           postinc0	equ	0xFEE
 33545                           plusw0	equ	0xFEB
 33546                           fsr0h	equ	0xFEA
 33547                           fsr0l	equ	0xFE9
 33548                           wreg	equ	0xFE8
 33549                           indf1	equ	0xFE7
 33550                           postinc1	equ	0xFE6
 33551                           postdec1	equ	0xFE5
 33552                           plusw1	equ	0xFE3
 33553                           fsr1h	equ	0xFE2
 33554                           fsr1l	equ	0xFE1
 33555                           indf2	equ	0xFDF
 33556                           postinc2	equ	0xFDE
 33557                           postdec2	equ	0xFDD
 33558                           plusw2	equ	0xFDB
 33559                           fsr2h	equ	0xFDA
 33560                           fsr2l	equ	0xFD9
 33561                           status	equ	0xFD8
 33562                           
 33563 ;; *************** function _Led_SetLedStatus *****************
 33564 ;; Defined at:
 33565 ;;		line 338 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33566 ;; Parameters:    Size  Location     Type
 33567 ;;  Led             1    wreg     unsigned char 
 33568 ;;  LedSts          1   29[BANK0 ] enum E8954
 33569 ;; Auto vars:     Size  Location     Type
 33570 ;;  Led             1   30[BANK0 ] unsigned char 
 33571 ;; Return value:  Size  Location     Type
 33572 ;;                  1    wreg      void 
 33573 ;; Registers used:
 33574 ;;		wreg, status,2, status,0
 33575 ;; Tracked objects:
 33576 ;;		On entry : 0/0
 33577 ;;		On exit  : 0/0
 33578 ;;		Unchanged: 0/0
 33579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33580 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33583 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33584 ;;Total ram usage:        2 bytes
 33585 ;; Hardware stack levels used:    1
 33586 ;; Hardware stack levels required when called:   11
 33587 ;; This function calls:
 33588 ;;		Nothing
 33589 ;; This function is called by:
 33590 ;;		_LedPulseStateMachine
 33591 ;;		_LedStateMachine
 33592 ;;		_waitSetupCall
 33593 ;;		_initFsm
 33594 ;;		_blinkForSeconds
 33595 ;; This function uses a non-reentrant model
 33596 ;;
 33597                           
 33598                           	psect	text156
 33599  006550                     __ptext156:
 33600                           	opt stack 0
 33601  006550                     _Led_SetLedStatus:
 33602                           	opt stack 14
 33603                           
 33604                           ; BSR set to: 0
 33605                           ;incstack = 0
 33606                           ;Led_SetLedStatus@Led stored from wreg
 33607  006550  0100               	movlb	0	; () banked
 33608  006552  6F7E               	movwf	Led_SetLedStatus@Led& (0+255),b
 33609                           
 33610                           ;led.c: 341: switch (Led)
 33611  006554  D009               	goto	l2141
 33612  006556                     l2142:
 33613                           
 33614                           ; BSR set to: 0
 33615                           ;led.c: 344: Led1Sts = LedSts;
 33616  006556  C07D  F1FA         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 33617                           
 33618                           ;led.c: 345: break;
 33619  00655A  0012               	return	
 33620  00655C                     l2144:
 33621                           
 33622                           ; BSR set to: 0
 33623                           ;led.c: 348: Led2Sts = LedSts;
 33624  00655C  C07D  F1F8         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 33625                           
 33626                           ;led.c: 349: break;
 33627  006560  0012               	return	
 33628  006562                     l2145:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;led.c: 352: Led3Sts = LedSts;
 33632  006562  C07D  F1F6         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 33633                           
 33634                           ; BSR set to: 0
 33635                           ;led.c: 357: }
 33636                           
 33637                           ; BSR set to: 0
 33638                           ;led.c: 356: break;
 33639                           
 33640                           ;led.c: 355: default:
 33641                           
 33642                           ;led.c: 353: break;
 33643  006566  0012               	return	
 33644  006568                     l2141:
 33645                           
 33646                           ; BSR set to: 0
 33647  006568  0100               	movlb	0	; () banked
 33648  00656A  517E               	movf	Led_SetLedStatus@Led& (0+255),w,b
 33649                           
 33650                           ; Switch size 1, requested type "space"
 33651                           ; Number of cases is 3, Range of values is 1 to 3
 33652                           ; switch strategies available:
 33653                           ; Name         Instructions Cycles
 33654                           ; simple_byte           10     6 (average)
 33655                           ;	Chosen strategy is simple_byte
 33656  00656C  0A01               	xorlw	1	; case 1
 33657  00656E  B4D8               	btfsc	status,2,c
 33658  006570  D7F2               	goto	l2142
 33659  006572  0A03               	xorlw	3	; case 2
 33660  006574  B4D8               	btfsc	status,2,c
 33661  006576  D7F2               	goto	l2144
 33662  006578  0A01               	xorlw	1	; case 3
 33663  00657A  A4D8               	btfss	status,2,c
 33664  00657C  0012               	return	
 33665  00657E  D7F1               	goto	l2145
 33666  006580                     __end_of_Led_SetLedStatus:
 33667                           	opt stack 0
 33668                           tosu	equ	0xFFF
 33669                           tosh	equ	0xFFE
 33670                           tosl	equ	0xFFD
 33671                           pclath	equ	0xFFA
 33672                           tblptru	equ	0xFF8
 33673                           tblptrh	equ	0xFF7
 33674                           tblptrl	equ	0xFF6
 33675                           tablat	equ	0xFF5
 33676                           prodh	equ	0xFF4
 33677                           prodl	equ	0xFF3
 33678                           intcon	equ	0xFF2
 33679                           intcon2	equ	0xFF1
 33680                           intcon3	equ	0xFF0
 33681                           indf0	equ	0xFEF
 33682                           postinc0	equ	0xFEE
 33683                           plusw0	equ	0xFEB
 33684                           fsr0h	equ	0xFEA
 33685                           fsr0l	equ	0xFE9
 33686                           wreg	equ	0xFE8
 33687                           indf1	equ	0xFE7
 33688                           postinc1	equ	0xFE6
 33689                           postdec1	equ	0xFE5
 33690                           plusw1	equ	0xFE3
 33691                           fsr1h	equ	0xFE2
 33692                           fsr1l	equ	0xFE1
 33693                           indf2	equ	0xFDF
 33694                           postinc2	equ	0xFDE
 33695                           postdec2	equ	0xFDD
 33696                           plusw2	equ	0xFDB
 33697                           fsr2h	equ	0xFDA
 33698                           fsr2l	equ	0xFD9
 33699                           status	equ	0xFD8
 33700                           
 33701 ;; *************** function _LedBlinkStateMachine *****************
 33702 ;; Defined at:
 33703 ;;		line 125 in file "../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 33704 ;; Parameters:    Size  Location     Type
 33705 ;;  LedBlink        2   42[BANK0 ] PTR struct _LedBlinkType
 33706 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 33707 ;; Auto vars:     Size  Location     Type
 33708 ;;		None
 33709 ;; Return value:  Size  Location     Type
 33710 ;;                  1    wreg      unsigned char 
 33711 ;; Registers used:
 33712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33713 ;; Tracked objects:
 33714 ;;		On entry : 0/0
 33715 ;;		On exit  : 0/0
 33716 ;;		Unchanged: 0/0
 33717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33720 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33722 ;;Total ram usage:        4 bytes
 33723 ;; Hardware stack levels used:    1
 33724 ;; Hardware stack levels required when called:   12
 33725 ;; This function calls:
 33726 ;;		___lwdiv
 33727 ;; This function is called by:
 33728 ;;		_LedStateMachine
 33729 ;; This function uses a non-reentrant model
 33730 ;;
 33731                           
 33732                           	psect	text157
 33733  0026DC                     __ptext157:
 33734                           	opt stack 0
 33735  0026DC                     _LedBlinkStateMachine:
 33736                           	opt stack 14
 33737                           
 33738                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 33739                           
 33740                           ; BSR set to: 0
 33741                           ;incstack = 0
 33742  0026DC  D08F               	goto	l2097
 33743  0026DE                     
 33744                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 33745  0026DE  0100               	movlb	0	; () banked
 33746  0026E0  EE20 F008          	lfsr	2,8
 33747  0026E4  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33748  0026E6  26D9               	addwf	fsr2l,f,c
 33749  0026E8  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33750  0026EA  22DA               	addwfc	fsr2h,f,c
 33751  0026EC  EE10 F001          	lfsr	1,1
 33752  0026F0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33753  0026F2  26E1               	addwf	fsr1l,f,c
 33754  0026F4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33755  0026F6  22E2               	addwfc	fsr1h,f,c
 33756  0026F8  CFDF FFE7          	movff	indf2,indf1
 33757                           
 33758                           ; BSR set to: 0
 33759                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 33760  0026FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33761  002700  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33762  002704  D040               	goto	L78
 33763  002706                     
 33764                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 33765                           
 33766                           ; BSR set to: 0
 33767  002706  0100               	movlb	0	; () banked
 33768  002708  EE20 F002          	lfsr	2,2
 33769  00270C  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33770  00270E  26D9               	addwf	fsr2l,f,c
 33771  002710  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33772  002712  22DA               	addwfc	fsr2h,f,c
 33773  002714  2ADE               	incf	postinc2,f,c
 33774  002716  0E00               	movlw	0
 33775  002718  22DD               	addwfc	postdec2,f,c
 33776                           
 33777                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 33778  00271A  EE20 F001          	lfsr	2,1
 33779  00271E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33780  002720  26D9               	addwf	fsr2l,f,c
 33781  002722  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33782  002724  22DA               	addwfc	fsr2h,f,c
 33783  002726  50DF               	movf	indf2,w,c
 33784  002728  A4D8               	btfss	status,2,c
 33785  00272A  D02F               	goto	l2101
 33786                           
 33787                           ; BSR set to: 0
 33788                           ;led.c: 142: {
 33789                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 33790  00272C  EE20 F006          	lfsr	2,6
 33791  002730  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33792  002732  26D9               	addwf	fsr2l,f,c
 33793  002734  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33794  002736  22DA               	addwfc	fsr2h,f,c
 33795  002738  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33796  00273C  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33797  002740  0E00               	movlw	0
 33798  002742  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33799  002744  0E32               	movlw	50
 33800  002746  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33801  002748  ECE6  F02D         	call	___lwdiv	;wreg free
 33802  00274C  0100               	movlb	0	; () banked
 33803  00274E  EE20 F002          	lfsr	2,2
 33804  002752  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33805  002754  26D9               	addwf	fsr2l,f,c
 33806  002756  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33807  002758  22DA               	addwfc	fsr2h,f,c
 33808  00275A  5183               	movf	?___lwdiv& (0+255),w,b
 33809  00275C  5CDE               	subwf	postinc2,w,c
 33810  00275E  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33811  002760  58DE               	subwfb	postinc2,w,c
 33812  002762  A0D8               	btfss	status,0,c
 33813  002764  D056               	goto	l2099
 33814                           
 33815                           ; BSR set to: 0
 33816                           ;led.c: 145: {
 33817                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 33818  002766  EE20 F002          	lfsr	2,2
 33819  00276A  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33820  00276C  26D9               	addwf	fsr2l,f,c
 33821  00276E  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33822  002770  22DA               	addwfc	fsr2h,f,c
 33823  002772  0E00               	movlw	0
 33824  002774  6EDE               	movwf	postinc2,c
 33825  002776  0E00               	movlw	0
 33826  002778  6EDD               	movwf	postdec2,c
 33827                           
 33828                           ;led.c: 149: LedBlink->LedOutState = OnState;
 33829  00277A  EE20 F001          	lfsr	2,1
 33830  00277E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33831  002780  26D9               	addwf	fsr2l,f,c
 33832  002782  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33833  002784  22DA               	addwfc	fsr2h,f,c
 33834  002786                     L78:
 33835  002786  0E01               	movlw	1
 33836  002788  D037               	goto	L79
 33837  00278A                     l2101:
 33838                           
 33839                           ; BSR set to: 0
 33840                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 33841                           
 33842                           ; BSR set to: 0
 33843  00278A  EE20 F001          	lfsr	2,1
 33844  00278E  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33845  002790  26D9               	addwf	fsr2l,f,c
 33846  002792  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33847  002794  22DA               	addwfc	fsr2h,f,c
 33848  002796  04DE               	decf	postinc2,w,c
 33849  002798  A4D8               	btfss	status,2,c
 33850  00279A  D03B               	goto	l2099
 33851                           
 33852                           ; BSR set to: 0
 33853                           ;led.c: 153: {
 33854                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 33855  00279C  EE20 F004          	lfsr	2,4
 33856  0027A0  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33857  0027A2  26D9               	addwf	fsr2l,f,c
 33858  0027A4  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33859  0027A6  22DA               	addwfc	fsr2h,f,c
 33860  0027A8  CFDE F083          	movff	postinc2,___lwdiv@dividend
 33861  0027AC  CFDD F084          	movff	postdec2,___lwdiv@dividend+1
 33862  0027B0  0E00               	movlw	0
 33863  0027B2  6F86               	movwf	(___lwdiv@divisor+1)& (0+255),b
 33864  0027B4  0E32               	movlw	50
 33865  0027B6  6F85               	movwf	___lwdiv@divisor& (0+255),b
 33866  0027B8  ECE6  F02D         	call	___lwdiv	;wreg free
 33867  0027BC  0100               	movlb	0	; () banked
 33868  0027BE  EE20 F002          	lfsr	2,2
 33869  0027C2  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33870  0027C4  26D9               	addwf	fsr2l,f,c
 33871  0027C6  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33872  0027C8  22DA               	addwfc	fsr2h,f,c
 33873  0027CA  5183               	movf	?___lwdiv& (0+255),w,b
 33874  0027CC  5CDE               	subwf	postinc2,w,c
 33875  0027CE  5184               	movf	(?___lwdiv+1)& (0+255),w,b
 33876  0027D0  58DE               	subwfb	postinc2,w,c
 33877  0027D2  A0D8               	btfss	status,0,c
 33878  0027D4  D01E               	goto	l2099
 33879                           
 33880                           ; BSR set to: 0
 33881                           ;led.c: 156: {
 33882                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 33883  0027D6  EE20 F002          	lfsr	2,2
 33884  0027DA  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33885  0027DC  26D9               	addwf	fsr2l,f,c
 33886  0027DE  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33887  0027E0  22DA               	addwfc	fsr2h,f,c
 33888  0027E2  0E00               	movlw	0
 33889  0027E4  6EDE               	movwf	postinc2,c
 33890  0027E6  0E00               	movlw	0
 33891  0027E8  6EDD               	movwf	postdec2,c
 33892                           
 33893                           ;led.c: 160: LedBlink->LedOutState = OffState;
 33894  0027EA  EE20 F001          	lfsr	2,1
 33895  0027EE  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33896  0027F0  26D9               	addwf	fsr2l,f,c
 33897  0027F2  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33898  0027F4  22DA               	addwfc	fsr2h,f,c
 33899  0027F6  0E00               	movlw	0
 33900  0027F8                     L79:
 33901  0027F8  6EDF               	movwf	indf2,c
 33902                           
 33903                           ; BSR set to: 0
 33904                           ;led.c: 167: }
 33905                           
 33906                           ; BSR set to: 0
 33907                           ;led.c: 166: break;
 33908                           
 33909                           ;led.c: 165: default:
 33910                           
 33911                           ; BSR set to: 0
 33912                           ;led.c: 161: }
 33913                           ;led.c: 162: }
 33914                           ;led.c: 163: break;
 33915                           
 33916                           ; BSR set to: 0
 33917                           
 33918                           ; BSR set to: 0
 33919  0027FA  D00B               	goto	l2099
 33920  0027FC                     l2097:
 33921                           
 33922                           ; BSR set to: 0
 33923  0027FC  C08A  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 33924  002800  C08B  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 33925  002804  50DF               	movf	indf2,w,c
 33926                           
 33927                           ; Switch size 1, requested type "space"
 33928                           ; Number of cases is 2, Range of values is 0 to 1
 33929                           ; switch strategies available:
 33930                           ; Name         Instructions Cycles
 33931                           ; simple_byte            7     4 (average)
 33932                           ;	Chosen strategy is simple_byte
 33933  002806  0A00               	xorlw	0	; case 0
 33934  002808  B4D8               	btfsc	status,2,c
 33935  00280A  D769               	goto	l2098
 33936  00280C  0A01               	xorlw	1	; case 1
 33937  00280E  B4D8               	btfsc	status,2,c
 33938  002810  D77A               	goto	l2100
 33939  002812                     l2099:
 33940                           
 33941                           ;led.c: 170: return (LedBlink->LedOutState);
 33942  002812  0100               	movlb	0	; () banked
 33943  002814  EE20 F001          	lfsr	2,1
 33944  002818  518A               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 33945  00281A  26D9               	addwf	fsr2l,f,c
 33946  00281C  518B               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 33947  00281E  22DA               	addwfc	fsr2h,f,c
 33948  002820  50DF               	movf	indf2,w,c
 33949  002822  0012               	return	
 33950  002824                     __end_of_LedBlinkStateMachine:
 33951                           	opt stack 0
 33952                           tosu	equ	0xFFF
 33953                           tosh	equ	0xFFE
 33954                           tosl	equ	0xFFD
 33955                           pclath	equ	0xFFA
 33956                           tblptru	equ	0xFF8
 33957                           tblptrh	equ	0xFF7
 33958                           tblptrl	equ	0xFF6
 33959                           tablat	equ	0xFF5
 33960                           prodh	equ	0xFF4
 33961                           prodl	equ	0xFF3
 33962                           intcon	equ	0xFF2
 33963                           intcon2	equ	0xFF1
 33964                           intcon3	equ	0xFF0
 33965                           indf0	equ	0xFEF
 33966                           postinc0	equ	0xFEE
 33967                           plusw0	equ	0xFEB
 33968                           fsr0h	equ	0xFEA
 33969                           fsr0l	equ	0xFE9
 33970                           wreg	equ	0xFE8
 33971                           indf1	equ	0xFE7
 33972                           postinc1	equ	0xFE6
 33973                           postdec1	equ	0xFE5
 33974                           plusw1	equ	0xFE3
 33975                           fsr1h	equ	0xFE2
 33976                           fsr1l	equ	0xFE1
 33977                           indf2	equ	0xFDF
 33978                           postinc2	equ	0xFDE
 33979                           postdec2	equ	0xFDD
 33980                           plusw2	equ	0xFDB
 33981                           fsr2h	equ	0xFDA
 33982                           fsr2l	equ	0xFD9
 33983                           status	equ	0xFD8
 33984                           
 33985 ;; *************** function ___lwdiv *****************
 33986 ;; Defined at:
 33987 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwdiv.c"
 33988 ;; Parameters:    Size  Location     Type
 33989 ;;  dividend        2   35[BANK0 ] unsigned int 
 33990 ;;  divisor         2   37[BANK0 ] unsigned int 
 33991 ;; Auto vars:     Size  Location     Type
 33992 ;;  quotient        2   40[BANK0 ] unsigned int 
 33993 ;;  counter         1   39[BANK0 ] unsigned char 
 33994 ;; Return value:  Size  Location     Type
 33995 ;;                  2   35[BANK0 ] unsigned int 
 33996 ;; Registers used:
 33997 ;;		wreg, status,2, status,0
 33998 ;; Tracked objects:
 33999 ;;		On entry : 0/0
 34000 ;;		On exit  : 0/0
 34001 ;;		Unchanged: 0/0
 34002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34004 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34006 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34007 ;;Total ram usage:        7 bytes
 34008 ;; Hardware stack levels used:    1
 34009 ;; Hardware stack levels required when called:   11
 34010 ;; This function calls:
 34011 ;;		Nothing
 34012 ;; This function is called by:
 34013 ;;		_LedBlinkStateMachine
 34014 ;;		_LedPulseStateMachine
 34015 ;;		_secondsAppTimer
 34016 ;;		_utoa
 34017 ;; This function uses a non-reentrant model
 34018 ;;
 34019                           
 34020                           	psect	text158
 34021  005BCC                     __ptext158:
 34022                           	opt stack 0
 34023  005BCC                     ___lwdiv:
 34024                           	opt stack 14
 34025                           
 34026                           ; BSR set to: 0
 34027                           ;incstack = 0
 34028  005BCC  0E00               	movlw	0
 34029  005BCE  0100               	movlb	0	; () banked
 34030  005BD0  6F89               	movwf	(___lwdiv@quotient+1)& (0+255),b
 34031  005BD2  0E00               	movlw	0
 34032  005BD4  6F88               	movwf	___lwdiv@quotient& (0+255),b
 34033                           
 34034                           ; BSR set to: 0
 34035  005BD6  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34036  005BD8  1186               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 34037  005BDA  B4D8               	btfsc	status,2,c
 34038  005BDC  D01C               	goto	l3353
 34039                           
 34040                           ; BSR set to: 0
 34041  005BDE  0E01               	movlw	1
 34042  005BE0  6F87               	movwf	___lwdiv@counter& (0+255),b
 34043  005BE2  D004               	goto	l3348
 34044  005BE4                     
 34045                           ; BSR set to: 0
 34046                           
 34047                           ; BSR set to: 0
 34048  005BE4  90D8               	bcf	status,0,c
 34049  005BE6  3785               	rlcf	___lwdiv@divisor& (0+255),f,b
 34050  005BE8  3786               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 34051  005BEA  2B87               	incf	___lwdiv@counter& (0+255),f,b
 34052  005BEC                     l3348:
 34053                           
 34054                           ; BSR set to: 0
 34055                           
 34056                           ; BSR set to: 0
 34057  005BEC  AF86               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 34058  005BEE  D7FA               	goto	l3349
 34059  005BF0                     u12080:
 34060                           
 34061                           ; BSR set to: 0
 34062                           
 34063                           ; BSR set to: 0
 34064                           
 34065                           ; BSR set to: 0
 34066  005BF0  90D8               	bcf	status,0,c
 34067  005BF2  3788               	rlcf	___lwdiv@quotient& (0+255),f,b
 34068  005BF4  3789               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 34069                           
 34070                           ; BSR set to: 0
 34071  005BF6  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34072  005BF8  5D83               	subwf	___lwdiv@dividend& (0+255),w,b
 34073  005BFA  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34074  005BFC  5984               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 34075  005BFE  A0D8               	btfss	status,0,c
 34076  005C00  D005               	goto	l3352
 34077                           
 34078                           ; BSR set to: 0
 34079  005C02  5185               	movf	___lwdiv@divisor& (0+255),w,b
 34080  005C04  5F83               	subwf	___lwdiv@dividend& (0+255),f,b
 34081  005C06  5186               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 34082  005C08  5B84               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 34083                           
 34084                           ; BSR set to: 0
 34085  005C0A  8188               	bsf	___lwdiv@quotient& (0+255),0,b
 34086  005C0C                     l3352:
 34087                           
 34088                           ; BSR set to: 0
 34089                           
 34090                           ; BSR set to: 0
 34091  005C0C  90D8               	bcf	status,0,c
 34092  005C0E  3386               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 34093  005C10  3385               	rrcf	___lwdiv@divisor& (0+255),f,b
 34094                           
 34095                           ; BSR set to: 0
 34096  005C12  2F87               	decfsz	___lwdiv@counter& (0+255),f,b
 34097  005C14  D7ED               	goto	u12080
 34098  005C16                     l3353:
 34099                           
 34100                           ; BSR set to: 0
 34101                           
 34102                           ; BSR set to: 0
 34103  005C16  C088  F083         	movff	___lwdiv@quotient,?___lwdiv
 34104  005C1A  C089  F084         	movff	___lwdiv@quotient+1,?___lwdiv+1
 34105                           
 34106                           ; BSR set to: 0
 34107  005C1E  0012               	return		;funcret
 34108  005C20                     __end_of___lwdiv:
 34109                           	opt stack 0
 34110                           tosu	equ	0xFFF
 34111                           tosh	equ	0xFFE
 34112                           tosl	equ	0xFFD
 34113                           pclath	equ	0xFFA
 34114                           tblptru	equ	0xFF8
 34115                           tblptrh	equ	0xFF7
 34116                           tblptrl	equ	0xFF6
 34117                           tablat	equ	0xFF5
 34118                           prodh	equ	0xFF4
 34119                           prodl	equ	0xFF3
 34120                           intcon	equ	0xFF2
 34121                           intcon2	equ	0xFF1
 34122                           intcon3	equ	0xFF0
 34123                           indf0	equ	0xFEF
 34124                           postinc0	equ	0xFEE
 34125                           plusw0	equ	0xFEB
 34126                           fsr0h	equ	0xFEA
 34127                           fsr0l	equ	0xFE9
 34128                           wreg	equ	0xFE8
 34129                           indf1	equ	0xFE7
 34130                           postinc1	equ	0xFE6
 34131                           postdec1	equ	0xFE5
 34132                           plusw1	equ	0xFE3
 34133                           fsr1h	equ	0xFE2
 34134                           fsr1l	equ	0xFE1
 34135                           indf2	equ	0xFDF
 34136                           postinc2	equ	0xFDE
 34137                           postdec2	equ	0xFDD
 34138                           plusw2	equ	0xFDB
 34139                           fsr2h	equ	0xFDA
 34140                           fsr2l	equ	0xFD9
 34141                           status	equ	0xFD8
 34142                           
 34143 ;; *************** function _OsAlrm_SetOsAlarm *****************
 34144 ;; Defined at:
 34145 ;;		line 77 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 34146 ;; Parameters:    Size  Location     Type
 34147 ;;  OsAlarmId       2   35[BANK0 ] unsigned short 
 34148 ;;  OsAlarmTimeo    4   37[BANK0 ] unsigned long 
 34149 ;;  AlarmCallbac    2   41[BANK0 ] PTR FTN()void 
 34150 ;;		 -> I2cDummyTx(1), 
 34151 ;; Auto vars:     Size  Location     Type
 34152 ;;		None
 34153 ;; Return value:  Size  Location     Type
 34154 ;;                  1    wreg      void 
 34155 ;; Registers used:
 34156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34157 ;; Tracked objects:
 34158 ;;		On entry : 0/0
 34159 ;;		On exit  : 0/0
 34160 ;;		Unchanged: 0/0
 34161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34165 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34166 ;;Total ram usage:        8 bytes
 34167 ;; Hardware stack levels used:    1
 34168 ;; Hardware stack levels required when called:   12
 34169 ;; This function calls:
 34170 ;;		___wmul
 34171 ;; This function is called by:
 34172 ;;		_I2cSlv_MainTask
 34173 ;; This function uses a non-reentrant model
 34174 ;;
 34175                           
 34176                           	psect	text159
 34177  003FBC                     __ptext159:
 34178                           	opt stack 0
 34179  003FBC                     _OsAlrm_SetOsAlarm:
 34180                           	opt stack 15
 34181                           
 34182                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 34183                           
 34184                           ; BSR set to: 0
 34185                           ;incstack = 0
 34186  003FBC  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34187  003FC0  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34188  003FC4  0E00               	movlw	0
 34189  003FC6  0100               	movlb	0	; () banked
 34190  003FC8  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34191  003FCA  0E0B               	movlw	11
 34192  003FCC  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34193  003FCE  EC2E  F033         	call	___wmul	;wreg free
 34194  003FD2  0E00               	movlw	low _OsAlarms
 34195  003FD4  0100               	movlb	0	; () banked
 34196  003FD6  257D               	addwf	?___wmul& (0+255),w,b
 34197  003FD8  6ED9               	movwf	fsr2l,c
 34198  003FDA  0E06               	movlw	high _OsAlarms
 34199  003FDC  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34200  003FDE  6EDA               	movwf	fsr2h,c
 34201  003FE0  0E01               	movlw	1
 34202  003FE2  6EDF               	movwf	indf2,c
 34203                           
 34204                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 34205  003FE4  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34206  003FE8  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34207  003FEC  0E00               	movlw	0
 34208  003FEE  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34209  003FF0  0E0B               	movlw	11
 34210  003FF2  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34211  003FF4  EC2E  F033         	call	___wmul	;wreg free
 34212  003FF8  0E01               	movlw	1
 34213  003FFA  0100               	movlb	0	; () banked
 34214  003FFC  277D               	addwf	?___wmul& (0+255),f,b
 34215  003FFE  0E00               	movlw	0
 34216  004000  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34217  004002  0E00               	movlw	low _OsAlarms
 34218  004004  257D               	addwf	?___wmul& (0+255),w,b
 34219  004006  6ED9               	movwf	fsr2l,c
 34220  004008  0E06               	movlw	high _OsAlarms
 34221  00400A  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34222  00400C  6EDA               	movwf	fsr2h,c
 34223  00400E  6ADE               	clrf	postinc2,c
 34224  004010  6ADE               	clrf	postinc2,c
 34225  004012  6ADE               	clrf	postinc2,c
 34226  004014  6ADD               	clrf	postdec2,c
 34227                           
 34228                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 34229  004016  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34230  00401A  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34231  00401E  0E00               	movlw	0
 34232  004020  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34233  004022  0E0B               	movlw	11
 34234  004024  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34235  004026  EC2E  F033         	call	___wmul	;wreg free
 34236  00402A  0E05               	movlw	5
 34237  00402C  0100               	movlb	0	; () banked
 34238  00402E  277D               	addwf	?___wmul& (0+255),f,b
 34239  004030  0E00               	movlw	0
 34240  004032  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34241  004034  0E00               	movlw	low _OsAlarms
 34242  004036  257D               	addwf	?___wmul& (0+255),w,b
 34243  004038  6ED9               	movwf	fsr2l,c
 34244  00403A  0E06               	movlw	high _OsAlarms
 34245  00403C  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34246  00403E  6EDA               	movwf	fsr2h,c
 34247  004040  C085  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 34248  004044  C086  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 34249  004048  C087  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 34250  00404C  C088  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 34251                           
 34252                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 34253  004050  C083  F07D         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 34254  004054  C084  F07E         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 34255  004058  0E00               	movlw	0
 34256  00405A  6F80               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34257  00405C  0E0B               	movlw	11
 34258  00405E  6F7F               	movwf	___wmul@multiplicand& (0+255),b
 34259  004060  EC2E  F033         	call	___wmul	;wreg free
 34260  004064  0E09               	movlw	9
 34261  004066  0100               	movlb	0	; () banked
 34262  004068  277D               	addwf	?___wmul& (0+255),f,b
 34263  00406A  0E00               	movlw	0
 34264  00406C  237E               	addwfc	(?___wmul+1)& (0+255),f,b
 34265  00406E  0E00               	movlw	low _OsAlarms
 34266  004070  257D               	addwf	?___wmul& (0+255),w,b
 34267  004072  6ED9               	movwf	fsr2l,c
 34268  004074  0E06               	movlw	high _OsAlarms
 34269  004076  217E               	addwfc	(?___wmul+1)& (0+255),w,b
 34270  004078  6EDA               	movwf	fsr2h,c
 34271  00407A  C089  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 34272  00407E  C08A  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 34273                           
 34274                           ; BSR set to: 0
 34275  004082  0012               	return		;funcret
 34276  004084                     __end_of_OsAlrm_SetOsAlarm:
 34277                           	opt stack 0
 34278                           tosu	equ	0xFFF
 34279                           tosh	equ	0xFFE
 34280                           tosl	equ	0xFFD
 34281                           pclath	equ	0xFFA
 34282                           tblptru	equ	0xFF8
 34283                           tblptrh	equ	0xFF7
 34284                           tblptrl	equ	0xFF6
 34285                           tablat	equ	0xFF5
 34286                           prodh	equ	0xFF4
 34287                           prodl	equ	0xFF3
 34288                           intcon	equ	0xFF2
 34289                           intcon2	equ	0xFF1
 34290                           intcon3	equ	0xFF0
 34291                           indf0	equ	0xFEF
 34292                           postinc0	equ	0xFEE
 34293                           plusw0	equ	0xFEB
 34294                           fsr0h	equ	0xFEA
 34295                           fsr0l	equ	0xFE9
 34296                           wreg	equ	0xFE8
 34297                           indf1	equ	0xFE7
 34298                           postinc1	equ	0xFE6
 34299                           postdec1	equ	0xFE5
 34300                           plusw1	equ	0xFE3
 34301                           fsr1h	equ	0xFE2
 34302                           fsr1l	equ	0xFE1
 34303                           indf2	equ	0xFDF
 34304                           postinc2	equ	0xFDE
 34305                           postdec2	equ	0xFDD
 34306                           plusw2	equ	0xFDB
 34307                           fsr2h	equ	0xFDA
 34308                           fsr2l	equ	0xFD9
 34309                           status	equ	0xFD8
 34310                           
 34311 ;; *************** function ___wmul *****************
 34312 ;; Defined at:
 34313 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 34314 ;; Parameters:    Size  Location     Type
 34315 ;;  multiplier      2   29[BANK0 ] unsigned int 
 34316 ;;  multiplicand    2   31[BANK0 ] unsigned int 
 34317 ;; Auto vars:     Size  Location     Type
 34318 ;;  product         2   33[BANK0 ] unsigned int 
 34319 ;; Return value:  Size  Location     Type
 34320 ;;                  2   29[BANK0 ] unsigned int 
 34321 ;; Registers used:
 34322 ;;		wreg, status,2, status,0, prodl, prodh
 34323 ;; Tracked objects:
 34324 ;;		On entry : 0/0
 34325 ;;		On exit  : 0/0
 34326 ;;		Unchanged: 0/0
 34327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34331 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34332 ;;Total ram usage:        6 bytes
 34333 ;; Hardware stack levels used:    1
 34334 ;; Hardware stack levels required when called:   11
 34335 ;; This function calls:
 34336 ;;		Nothing
 34337 ;; This function is called by:
 34338 ;;		_OsAlrm_SetOsAlarm
 34339 ;;		_secondsAppTimer
 34340 ;;		_atoi
 34341 ;; This function uses a non-reentrant model
 34342 ;;
 34343                           
 34344                           	psect	text160
 34345  00665C                     __ptext160:
 34346                           	opt stack 0
 34347  00665C                     ___wmul:
 34348                           	opt stack 13
 34349                           
 34350                           ; BSR set to: 0
 34351                           ;incstack = 0
 34352  00665C  0100               	movlb	0	; () banked
 34353  00665E  517D               	movf	___wmul@multiplier& (0+255),w,b
 34354  006660  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34355  006662  CFF3 F081          	movff	prodl,___wmul@product
 34356  006666  CFF4 F082          	movff	prodh,___wmul@product+1
 34357  00666A  517D               	movf	___wmul@multiplier& (0+255),w,b
 34358  00666C  0380               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34359  00666E  50F3               	movf	prodl,w,c
 34360  006670  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34361  006672  517E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34362  006674  037F               	mulwf	___wmul@multiplicand& (0+255),b
 34363  006676  50F3               	movf	prodl,w,c
 34364  006678  2782               	addwf	(___wmul@product+1)& (0+255),f,b
 34365                           
 34366                           ; BSR set to: 0
 34367  00667A  C081  F07D         	movff	___wmul@product,?___wmul
 34368  00667E  C082  F07E         	movff	___wmul@product+1,?___wmul+1
 34369  006682  0012               	return	
 34370  006684                     __end_of___wmul:
 34371                           	opt stack 0
 34372                           tosu	equ	0xFFF
 34373                           tosh	equ	0xFFE
 34374                           tosl	equ	0xFFD
 34375                           pclath	equ	0xFFA
 34376                           tblptru	equ	0xFF8
 34377                           tblptrh	equ	0xFF7
 34378                           tblptrl	equ	0xFF6
 34379                           tablat	equ	0xFF5
 34380                           prodh	equ	0xFF4
 34381                           prodl	equ	0xFF3
 34382                           intcon	equ	0xFF2
 34383                           intcon2	equ	0xFF1
 34384                           intcon3	equ	0xFF0
 34385                           indf0	equ	0xFEF
 34386                           postinc0	equ	0xFEE
 34387                           plusw0	equ	0xFEB
 34388                           fsr0h	equ	0xFEA
 34389                           fsr0l	equ	0xFE9
 34390                           wreg	equ	0xFE8
 34391                           indf1	equ	0xFE7
 34392                           postinc1	equ	0xFE6
 34393                           postdec1	equ	0xFE5
 34394                           plusw1	equ	0xFE3
 34395                           fsr1h	equ	0xFE2
 34396                           fsr1l	equ	0xFE1
 34397                           indf2	equ	0xFDF
 34398                           postinc2	equ	0xFDE
 34399                           postdec2	equ	0xFDD
 34400                           plusw2	equ	0xFDB
 34401                           fsr2h	equ	0xFDA
 34402                           fsr2l	equ	0xFD9
 34403                           status	equ	0xFD8
 34404                           
 34405 ;; *************** function _I2c_InitI2cModule *****************
 34406 ;; Defined at:
 34407 ;;		line 228 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34408 ;; Parameters:    Size  Location     Type
 34409 ;;  I2cConfig       2   66[BANK0 ] PTR struct _I2cConfig
 34410 ;;		 -> I2cConfig(10), 
 34411 ;; Auto vars:     Size  Location     Type
 34412 ;;		None
 34413 ;; Return value:  Size  Location     Type
 34414 ;;                  1    wreg      void 
 34415 ;; Registers used:
 34416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34417 ;; Tracked objects:
 34418 ;;		On entry : 0/0
 34419 ;;		On exit  : 0/0
 34420 ;;		Unchanged: 0/0
 34421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34424 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34425 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34426 ;;Total ram usage:        4 bytes
 34427 ;; Hardware stack levels used:    1
 34428 ;; Hardware stack levels required when called:   13
 34429 ;; This function calls:
 34430 ;;		_SetBaudRate
 34431 ;; This function is called by:
 34432 ;;		_I2cSlv_MainTask
 34433 ;; This function uses a non-reentrant model
 34434 ;;
 34435                           
 34436                           	psect	text161
 34437  005374                     __ptext161:
 34438                           	opt stack 0
 34439  005374                     _I2c_InitI2cModule:
 34440                           	opt stack 14
 34441                           
 34442                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 34443                           
 34444                           ; BSR set to: 0
 34445                           ;incstack = 0
 34446  005374  8295               	bsf	3989,1,c	;volatile
 34447                           
 34448                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 34449  005376  8095               	bsf	3989,0,c	;volatile
 34450                           
 34451                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 34452  005378  C0A2  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 34453  00537C  C0A3  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 34454  005380  CFDE F096          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 34455  005384  CFDE F097          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 34456  005388  CFDE F098          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 34457  00538C  CFDE F099          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 34458  005390  0100               	movlb	0	; () banked
 34459  005392  EE20 F004          	lfsr	2,4
 34460  005396  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34461  005398  26D9               	addwf	fsr2l,f,c
 34462  00539A  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34463  00539C  22DA               	addwfc	fsr2h,f,c
 34464  00539E  CFDE F09A          	movff	postinc2,SetBaudRate@McuClockHz
 34465  0053A2  CFDE F09B          	movff	postinc2,SetBaudRate@McuClockHz+1
 34466  0053A6  CFDE F09C          	movff	postinc2,SetBaudRate@McuClockHz+2
 34467  0053AA  CFDE F09D          	movff	postinc2,SetBaudRate@McuClockHz+3
 34468  0053AE  EC28  F02F         	call	_SetBaudRate	;wreg free
 34469                           
 34470                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 34471  0053B2  0100               	movlb	0	; () banked
 34472  0053B4  EE20 F008          	lfsr	2,8
 34473  0053B8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34474  0053BA  26D9               	addwf	fsr2l,f,c
 34475  0053BC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34476  0053BE  22DA               	addwfc	fsr2h,f,c
 34477  0053C0  50DF               	movf	indf2,w,c
 34478  0053C2  1272               	iorwf	3954,f,c	;volatile
 34479                           
 34480                           ; BSR set to: 0
 34481                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 34482  0053C4  EE20 F009          	lfsr	2,9
 34483  0053C8  51A2               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 34484  0053CA  26D9               	addwf	fsr2l,f,c
 34485  0053CC  51A3               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 34486  0053CE  22DA               	addwfc	fsr2h,f,c
 34487  0053D0  50DF               	movf	indf2,w,c
 34488  0053D2  6FA4               	movwf	??_I2c_InitI2cModule& (0+255),b
 34489  0053D4  0E05               	movlw	5
 34490  0053D6  6FA5               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 34491  0053D8                     u14645:
 34492  0053D8  90D8               	bcf	status,0,c
 34493  0053DA  37A4               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 34494  0053DC  2FA5               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 34495  0053DE  D7FC               	goto	u14645
 34496  0053E0  51A4               	movf	??_I2c_InitI2cModule& (0+255),w,b
 34497  0053E2  1272               	iorwf	3954,f,c	;volatile
 34498                           
 34499                           ; BSR set to: 0
 34500  0053E4  0012               	return		;funcret
 34501  0053E6                     __end_of_I2c_InitI2cModule:
 34502                           	opt stack 0
 34503                           tosu	equ	0xFFF
 34504                           tosh	equ	0xFFE
 34505                           tosl	equ	0xFFD
 34506                           pclath	equ	0xFFA
 34507                           tblptru	equ	0xFF8
 34508                           tblptrh	equ	0xFF7
 34509                           tblptrl	equ	0xFF6
 34510                           tablat	equ	0xFF5
 34511                           prodh	equ	0xFF4
 34512                           prodl	equ	0xFF3
 34513                           intcon	equ	0xFF2
 34514                           intcon2	equ	0xFF1
 34515                           intcon3	equ	0xFF0
 34516                           indf0	equ	0xFEF
 34517                           postinc0	equ	0xFEE
 34518                           plusw0	equ	0xFEB
 34519                           fsr0h	equ	0xFEA
 34520                           fsr0l	equ	0xFE9
 34521                           wreg	equ	0xFE8
 34522                           indf1	equ	0xFE7
 34523                           postinc1	equ	0xFE6
 34524                           postdec1	equ	0xFE5
 34525                           plusw1	equ	0xFE3
 34526                           fsr1h	equ	0xFE2
 34527                           fsr1l	equ	0xFE1
 34528                           indf2	equ	0xFDF
 34529                           postinc2	equ	0xFDE
 34530                           postdec2	equ	0xFDD
 34531                           plusw2	equ	0xFDB
 34532                           fsr2h	equ	0xFDA
 34533                           fsr2l	equ	0xFD9
 34534                           status	equ	0xFD8
 34535                           
 34536 ;; *************** function _SetBaudRate *****************
 34537 ;; Defined at:
 34538 ;;		line 78 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 34539 ;; Parameters:    Size  Location     Type
 34540 ;;  DesiredI2cBu    4   54[BANK0 ] unsigned long 
 34541 ;;  McuClockHz      4   58[BANK0 ] unsigned long 
 34542 ;; Auto vars:     Size  Location     Type
 34543 ;;		None
 34544 ;; Return value:  Size  Location     Type
 34545 ;;                  1    wreg      void 
 34546 ;; Registers used:
 34547 ;;		wreg, status,2, status,0, cstack
 34548 ;; Tracked objects:
 34549 ;;		On entry : 0/0
 34550 ;;		On exit  : 0/0
 34551 ;;		Unchanged: 0/0
 34552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34553 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34555 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34556 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34557 ;;Total ram usage:       12 bytes
 34558 ;; Hardware stack levels used:    1
 34559 ;; Hardware stack levels required when called:   12
 34560 ;; This function calls:
 34561 ;;		___lldiv
 34562 ;; This function is called by:
 34563 ;;		_I2c_InitI2cModule
 34564 ;; This function uses a non-reentrant model
 34565 ;;
 34566                           
 34567                           	psect	text162
 34568  005E50                     __ptext162:
 34569                           	opt stack 0
 34570  005E50                     _SetBaudRate:
 34571                           	opt stack 14
 34572                           
 34573                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 34574                           
 34575                           ; BSR set to: 0
 34576                           ;incstack = 0
 34577  005E50  C09A  F089         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 34578  005E54  C09B  F08A         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 34579  005E58  C09C  F08B         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 34580  005E5C  C09D  F08C         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 34581  005E60  C096  F09E         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 34582  005E64  C097  F09F         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 34583  005E68  C098  F0A0         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 34584  005E6C  C099  F0A1         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 34585  005E70  0E02               	movlw	2
 34586  005E72                     u13425:
 34587  005E72  90D8               	bcf	status,0,c
 34588  005E74  0100               	movlb	0	; () banked
 34589  005E76  379E               	rlcf	??_SetBaudRate& (0+255),f,b
 34590  005E78  379F               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 34591  005E7A  37A0               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 34592  005E7C  37A1               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 34593  005E7E  2EE8               	decfsz	wreg,f,c
 34594  005E80  D7F8               	goto	u13425
 34595  005E82  C09E  F08D         	movff	??_SetBaudRate,___lldiv@divisor
 34596  005E86  C09F  F08E         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 34597  005E8A  C0A0  F08F         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 34598  005E8E  C0A1  F090         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 34599  005E92  ECFE  F028         	call	___lldiv	;wreg free
 34600  005E96  0100               	movlb	0	; () banked
 34601  005E98  0589               	decf	?___lldiv& (0+255),w,b
 34602  005E9A  6E74               	movwf	3956,c	;volatile
 34603                           
 34604                           ; BSR set to: 0
 34605  005E9C  0012               	return		;funcret
 34606  005E9E                     __end_of_SetBaudRate:
 34607                           	opt stack 0
 34608                           tosu	equ	0xFFF
 34609                           tosh	equ	0xFFE
 34610                           tosl	equ	0xFFD
 34611                           pclath	equ	0xFFA
 34612                           tblptru	equ	0xFF8
 34613                           tblptrh	equ	0xFF7
 34614                           tblptrl	equ	0xFF6
 34615                           tablat	equ	0xFF5
 34616                           prodh	equ	0xFF4
 34617                           prodl	equ	0xFF3
 34618                           intcon	equ	0xFF2
 34619                           intcon2	equ	0xFF1
 34620                           intcon3	equ	0xFF0
 34621                           indf0	equ	0xFEF
 34622                           postinc0	equ	0xFEE
 34623                           plusw0	equ	0xFEB
 34624                           fsr0h	equ	0xFEA
 34625                           fsr0l	equ	0xFE9
 34626                           wreg	equ	0xFE8
 34627                           indf1	equ	0xFE7
 34628                           postinc1	equ	0xFE6
 34629                           postdec1	equ	0xFE5
 34630                           plusw1	equ	0xFE3
 34631                           fsr1h	equ	0xFE2
 34632                           fsr1l	equ	0xFE1
 34633                           indf2	equ	0xFDF
 34634                           postinc2	equ	0xFDE
 34635                           postdec2	equ	0xFDD
 34636                           plusw2	equ	0xFDB
 34637                           fsr2h	equ	0xFDA
 34638                           fsr2l	equ	0xFD9
 34639                           status	equ	0xFD8
 34640                           
 34641 ;; *************** function ___lldiv *****************
 34642 ;; Defined at:
 34643 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
 34644 ;; Parameters:    Size  Location     Type
 34645 ;;  dividend        4   41[BANK0 ] unsigned long 
 34646 ;;  divisor         4   45[BANK0 ] unsigned long 
 34647 ;; Auto vars:     Size  Location     Type
 34648 ;;  quotient        4   49[BANK0 ] unsigned long 
 34649 ;;  counter         1   53[BANK0 ] unsigned char 
 34650 ;; Return value:  Size  Location     Type
 34651 ;;                  4   41[BANK0 ] unsigned long 
 34652 ;; Registers used:
 34653 ;;		wreg, status,2, status,0
 34654 ;; Tracked objects:
 34655 ;;		On entry : 0/0
 34656 ;;		On exit  : 0/0
 34657 ;;		Unchanged: 0/0
 34658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34659 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34660 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34662 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34663 ;;Total ram usage:       13 bytes
 34664 ;; Hardware stack levels used:    1
 34665 ;; Hardware stack levels required when called:   11
 34666 ;; This function calls:
 34667 ;;		Nothing
 34668 ;; This function is called by:
 34669 ;;		_SetBaudRate
 34670 ;;		_Tmr_TmrBPrSet
 34671 ;;		_SetUartBaudRate
 34672 ;; This function uses a non-reentrant model
 34673 ;;
 34674                           
 34675                           	psect	text163
 34676  0051FC                     __ptext163:
 34677                           	opt stack 0
 34678  0051FC                     ___lldiv:
 34679                           	opt stack 15
 34680                           
 34681                           ; BSR set to: 0
 34682                           ;incstack = 0
 34683  0051FC  0E00               	movlw	0
 34684  0051FE  0100               	movlb	0	; () banked
 34685  005200  6F91               	movwf	___lldiv@quotient& (0+255),b
 34686  005202  0E00               	movlw	0
 34687  005204  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
 34688  005206  0E00               	movlw	0
 34689  005208  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
 34690  00520A  0E00               	movlw	0
 34691  00520C  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
 34692                           
 34693                           ; BSR set to: 0
 34694  00520E  518D               	movf	___lldiv@divisor& (0+255),w,b
 34695  005210  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34696  005212  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34697  005214  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34698  005216  B4D8               	btfsc	status,2,c
 34699  005218  D02A               	goto	l3300
 34700                           
 34701                           ; BSR set to: 0
 34702  00521A  0E01               	movlw	1
 34703  00521C  6F95               	movwf	___lldiv@counter& (0+255),b
 34704  00521E  D006               	goto	l3295
 34705  005220                     
 34706                           ; BSR set to: 0
 34707                           
 34708                           ; BSR set to: 0
 34709  005220  90D8               	bcf	status,0,c
 34710  005222  378D               	rlcf	___lldiv@divisor& (0+255),f,b
 34711  005224  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34712  005226  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34713  005228  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34714  00522A  2B95               	incf	___lldiv@counter& (0+255),f,b
 34715  00522C                     l3295:
 34716                           
 34717                           ; BSR set to: 0
 34718                           
 34719                           ; BSR set to: 0
 34720  00522C  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34721  00522E  D7F8               	goto	l3296
 34722  005230                     u12420:
 34723                           
 34724                           ; BSR set to: 0
 34725                           
 34726                           ; BSR set to: 0
 34727                           
 34728                           ; BSR set to: 0
 34729  005230  90D8               	bcf	status,0,c
 34730  005232  3791               	rlcf	___lldiv@quotient& (0+255),f,b
 34731  005234  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34732  005236  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34733  005238  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34734                           
 34735                           ; BSR set to: 0
 34736  00523A  518D               	movf	___lldiv@divisor& (0+255),w,b
 34737  00523C  5D89               	subwf	___lldiv@dividend& (0+255),w,b
 34738  00523E  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34739  005240  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34740  005242  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34741  005244  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34742  005246  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34743  005248  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34744  00524A  A0D8               	btfss	status,0,c
 34745  00524C  D009               	goto	l3299
 34746                           
 34747                           ; BSR set to: 0
 34748  00524E  518D               	movf	___lldiv@divisor& (0+255),w,b
 34749  005250  5F89               	subwf	___lldiv@dividend& (0+255),f,b
 34750  005252  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34751  005254  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34752  005256  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34753  005258  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34754  00525A  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34755  00525C  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34756                           
 34757                           ; BSR set to: 0
 34758  00525E  8191               	bsf	___lldiv@quotient& (0+255),0,b
 34759  005260                     l3299:
 34760                           
 34761                           ; BSR set to: 0
 34762                           
 34763                           ; BSR set to: 0
 34764  005260  90D8               	bcf	status,0,c
 34765  005262  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34766  005264  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34767  005266  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34768  005268  338D               	rrcf	___lldiv@divisor& (0+255),f,b
 34769                           
 34770                           ; BSR set to: 0
 34771  00526A  2F95               	decfsz	___lldiv@counter& (0+255),f,b
 34772  00526C  D7E1               	goto	u12420
 34773  00526E                     l3300:
 34774                           
 34775                           ; BSR set to: 0
 34776                           
 34777                           ; BSR set to: 0
 34778  00526E  C091  F089         	movff	___lldiv@quotient,?___lldiv
 34779  005272  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
 34780  005276  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
 34781  00527A  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
 34782                           
 34783                           ; BSR set to: 0
 34784  00527E  0012               	return		;funcret
 34785  005280                     __end_of___lldiv:
 34786                           	opt stack 0
 34787                           tosu	equ	0xFFF
 34788                           tosh	equ	0xFFE
 34789                           tosl	equ	0xFFD
 34790                           pclath	equ	0xFFA
 34791                           tblptru	equ	0xFF8
 34792                           tblptrh	equ	0xFF7
 34793                           tblptrl	equ	0xFF6
 34794                           tablat	equ	0xFF5
 34795                           prodh	equ	0xFF4
 34796                           prodl	equ	0xFF3
 34797                           intcon	equ	0xFF2
 34798                           intcon2	equ	0xFF1
 34799                           intcon3	equ	0xFF0
 34800                           indf0	equ	0xFEF
 34801                           postinc0	equ	0xFEE
 34802                           plusw0	equ	0xFEB
 34803                           fsr0h	equ	0xFEA
 34804                           fsr0l	equ	0xFE9
 34805                           wreg	equ	0xFE8
 34806                           indf1	equ	0xFE7
 34807                           postinc1	equ	0xFE6
 34808                           postdec1	equ	0xFE5
 34809                           plusw1	equ	0xFE3
 34810                           fsr1h	equ	0xFE2
 34811                           fsr1l	equ	0xFE1
 34812                           indf2	equ	0xFDF
 34813                           postinc2	equ	0xFDE
 34814                           postdec2	equ	0xFDD
 34815                           plusw2	equ	0xFDB
 34816                           fsr2h	equ	0xFDA
 34817                           fsr2l	equ	0xFD9
 34818                           status	equ	0xFD8
 34819                           
 34820 ;; *************** function _I2cSetConfig *****************
 34821 ;; Defined at:
 34822 ;;		line 101 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34823 ;; Parameters:    Size  Location     Type
 34824 ;;		None
 34825 ;; Auto vars:     Size  Location     Type
 34826 ;;		None
 34827 ;; Return value:  Size  Location     Type
 34828 ;;                  1    wreg      void 
 34829 ;; Registers used:
 34830 ;;		wreg, status,2
 34831 ;; Tracked objects:
 34832 ;;		On entry : 0/0
 34833 ;;		On exit  : 0/0
 34834 ;;		Unchanged: 0/0
 34835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34840 ;;Total ram usage:        0 bytes
 34841 ;; Hardware stack levels used:    1
 34842 ;; Hardware stack levels required when called:   11
 34843 ;; This function calls:
 34844 ;;		Nothing
 34845 ;; This function is called by:
 34846 ;;		_I2cSlv_MainTask
 34847 ;; This function uses a non-reentrant model
 34848 ;;
 34849                           
 34850                           	psect	text164
 34851  0065DC                     __ptext164:
 34852                           	opt stack 0
 34853  0065DC                     _I2cSetConfig:
 34854                           	opt stack 16
 34855                           
 34856                           ;i2c_slv.c: 103: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 34857                           
 34858                           ; BSR set to: 0
 34859                           ;incstack = 0
 34860  0065DC  0E80               	movlw	128
 34861  0065DE  0103               	movlb	3	; () banked
 34862  0065E0  6F56               	movwf	_I2cConfig& (0+255),b
 34863  0065E2  0E1A               	movlw	26
 34864  0065E4  6F57               	movwf	(_I2cConfig+1)& (0+255),b
 34865  0065E6  0E06               	movlw	6
 34866  0065E8  6F58               	movwf	(_I2cConfig+2)& (0+255),b
 34867  0065EA  0E00               	movlw	0
 34868  0065EC  6F59               	movwf	(_I2cConfig+3)& (0+255),b
 34869                           
 34870                           ;i2c_slv.c: 104: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 34871  0065EE  0E00               	movlw	0
 34872  0065F0  6F5A               	movwf	(_I2cConfig+4)& (0+255),b
 34873  0065F2  0E6C               	movlw	108
 34874  0065F4  6F5B               	movwf	(_I2cConfig+5)& (0+255),b
 34875  0065F6  0EDC               	movlw	220
 34876  0065F8  6F5C               	movwf	(_I2cConfig+6)& (0+255),b
 34877  0065FA  0E02               	movlw	2
 34878  0065FC  6F5D               	movwf	(_I2cConfig+7)& (0+255),b
 34879                           
 34880                           ;i2c_slv.c: 105: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 34881  0065FE  0E08               	movlw	8
 34882  006600  6F5E               	movwf	(_I2cConfig+8)& (0+255),b
 34883                           
 34884                           ;i2c_slv.c: 106: I2cConfig.EnableI2cModule = ((UINT8)(1));
 34885  006602  0E01               	movlw	1
 34886  006604  6F5F               	movwf	(_I2cConfig+9)& (0+255),b
 34887                           
 34888                           ; BSR set to: 3
 34889  006606  0012               	return		;funcret
 34890  006608                     __end_of_I2cSetConfig:
 34891                           	opt stack 0
 34892                           tosu	equ	0xFFF
 34893                           tosh	equ	0xFFE
 34894                           tosl	equ	0xFFD
 34895                           pclath	equ	0xFFA
 34896                           tblptru	equ	0xFF8
 34897                           tblptrh	equ	0xFF7
 34898                           tblptrl	equ	0xFF6
 34899                           tablat	equ	0xFF5
 34900                           prodh	equ	0xFF4
 34901                           prodl	equ	0xFF3
 34902                           intcon	equ	0xFF2
 34903                           intcon2	equ	0xFF1
 34904                           intcon3	equ	0xFF0
 34905                           indf0	equ	0xFEF
 34906                           postinc0	equ	0xFEE
 34907                           plusw0	equ	0xFEB
 34908                           fsr0h	equ	0xFEA
 34909                           fsr0l	equ	0xFE9
 34910                           wreg	equ	0xFE8
 34911                           indf1	equ	0xFE7
 34912                           postinc1	equ	0xFE6
 34913                           postdec1	equ	0xFE5
 34914                           plusw1	equ	0xFE3
 34915                           fsr1h	equ	0xFE2
 34916                           fsr1l	equ	0xFE1
 34917                           indf2	equ	0xFDF
 34918                           postinc2	equ	0xFDE
 34919                           postdec2	equ	0xFDD
 34920                           plusw2	equ	0xFDB
 34921                           fsr2h	equ	0xFDA
 34922                           fsr2l	equ	0xFD9
 34923                           status	equ	0xFD8
 34924                           
 34925 ;; *************** function _I2cSendMsgSm *****************
 34926 ;; Defined at:
 34927 ;;		line 117 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 34928 ;; Parameters:    Size  Location     Type
 34929 ;;		None
 34930 ;; Auto vars:     Size  Location     Type
 34931 ;;		None
 34932 ;; Return value:  Size  Location     Type
 34933 ;;                  1    wreg      void 
 34934 ;; Registers used:
 34935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34936 ;; Tracked objects:
 34937 ;;		On entry : 0/0
 34938 ;;		On exit  : 0/0
 34939 ;;		Unchanged: 0/0
 34940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34945 ;;Total ram usage:        0 bytes
 34946 ;; Hardware stack levels used:    1
 34947 ;; Hardware stack levels required when called:   13
 34948 ;; This function calls:
 34949 ;;		_I2c_ReadData
 34950 ;;		_I2c_WriteData
 34951 ;;		_ReceiveEvt
 34952 ;; This function is called by:
 34953 ;;		_I2cSlv_MainTask
 34954 ;; This function uses a non-reentrant model
 34955 ;;
 34956                           
 34957                           	psect	text165
 34958  004084                     __ptext165:
 34959                           	opt stack 0
 34960  004084                     _I2cSendMsgSm:
 34961                           	opt stack 14
 34962                           
 34963                           ;i2c_slv.c: 120: static I2cComStateType I2cComState = I2cComIdle;
 34964                           ;i2c_slv.c: 122: switch(I2cComState)
 34965                           
 34966                           ; BSR set to: 3
 34967                           ;incstack = 0
 34968  004084  D04F               	goto	l1382
 34969  004086                     
 34970                           ;i2c_slv.c: 126: if (ReceiveEvt(&I2cWriteDataEvt))
 34971  004086  0ED9               	movlw	low _I2cWriteDataEvt
 34972  004088  0100               	movlb	0	; () banked
 34973  00408A  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 34974  00408C  0E00               	movlw	high _I2cWriteDataEvt
 34975  00408E  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 34976  004090  ECD7  F032         	call	_ReceiveEvt	;wreg free
 34977  004094  0900               	iorlw	0
 34978  004096  B4D8               	btfsc	status,2,c
 34979  004098  D007               	goto	l1384
 34980                           
 34981                           ;i2c_slv.c: 127: {
 34982                           ;i2c_slv.c: 129: I2cComState = I2cComWriteData;
 34983  00409A  0E01               	movlw	1
 34984  00409C  0101               	movlb	1	; () banked
 34985  00409E  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 34986                           
 34987                           ;i2c_slv.c: 131: I2cComSts = TxInProgress;
 34988  0040A0  0E01               	movlw	1
 34989  0040A2  0100               	movlb	0	; () banked
 34990  0040A4  6FCF               	movwf	_I2cComSts& (0+255),b
 34991                           
 34992                           ;i2c_slv.c: 132: }
 34993  0040A6  0012               	return	
 34994  0040A8                     l1384:
 34995                           
 34996                           ;i2c_slv.c: 133: else if (ReceiveEvt(&I2cReadDataEvt))
 34997                           
 34998                           ; BSR set to: 0
 34999  0040A8  0ED8               	movlw	low _I2cReadDataEvt
 35000  0040AA  0100               	movlb	0	; () banked
 35001  0040AC  6F7D               	movwf	ReceiveEvt@Event& (0+255),b
 35002  0040AE  0E00               	movlw	high _I2cReadDataEvt
 35003  0040B0  6F7E               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 35004  0040B2  ECD7  F032         	call	_ReceiveEvt	;wreg free
 35005  0040B6  0900               	iorlw	0
 35006  0040B8  B4D8               	btfsc	status,2,c
 35007  0040BA  D007               	goto	l1386
 35008                           
 35009                           ;i2c_slv.c: 134: {
 35010                           ;i2c_slv.c: 136: I2cComState = I2cComReadData;
 35011  0040BC  0E02               	movlw	2
 35012  0040BE  0101               	movlb	1	; () banked
 35013  0040C0  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35014                           
 35015                           ;i2c_slv.c: 138: I2cComSts = RxInProgress;
 35016  0040C2  0E02               	movlw	2
 35017  0040C4  0100               	movlb	0	; () banked
 35018  0040C6  6FCF               	movwf	_I2cComSts& (0+255),b
 35019                           
 35020                           ;i2c_slv.c: 139: }
 35021  0040C8  0012               	return	
 35022  0040CA                     l1386:
 35023                           
 35024                           ;i2c_slv.c: 140: else
 35025                           ;i2c_slv.c: 141: {
 35026                           ;i2c_slv.c: 143: I2cComSts = TxRxIdle;
 35027                           
 35028                           ; BSR set to: 0
 35029  0040CA  0E00               	movlw	0
 35030  0040CC  0100               	movlb	0	; () banked
 35031  0040CE  6FCF               	movwf	_I2cComSts& (0+255),b
 35032                           
 35033                           ; BSR set to: 0
 35034                           ;i2c_slv.c: 144: }
 35035                           ;i2c_slv.c: 145: break;
 35036                           
 35037                           ; BSR set to: 0
 35038  0040D0  0012               	return	
 35039  0040D2                     
 35040                           ;i2c_slv.c: 149: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 35041                           
 35042                           ; BSR set to: 0
 35043  0040D2  0EA2               	movlw	low _I2cTxPacket
 35044  0040D4  0100               	movlb	0	; () banked
 35045  0040D6  6F7E               	movwf	I2c_WriteData@WritePacket& (0+255),b
 35046  0040D8  0E03               	movlw	high _I2cTxPacket
 35047  0040DA  6F7F               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 35048  0040DC  EC59  F00F         	call	_I2c_WriteData	;wreg free
 35049  0040E0  0900               	iorlw	0
 35050  0040E2  B4D8               	btfsc	status,2,c
 35051  0040E4  0012               	return	
 35052                           
 35053                           ;i2c_slv.c: 150: {
 35054                           ;i2c_slv.c: 152: I2cComState = I2cComWriteComplete;
 35055  0040E6  0E03               	movlw	3
 35056  0040E8  0101               	movlb	1	; () banked
 35057  0040EA  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35058                           
 35059                           ; BSR set to: 1
 35060                           ;i2c_slv.c: 153: }
 35061                           ;i2c_slv.c: 154: break;
 35062  0040EC  0012               	return	
 35063  0040EE                     
 35064                           ; BSR set to: 1
 35065                           ;i2c_slv.c: 158: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 35066                           
 35067                           ; BSR set to: 1
 35068  0040EE  0E9C               	movlw	low _I2cRxPacket
 35069  0040F0  0100               	movlb	0	; () banked
 35070  0040F2  6F80               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 35071  0040F4  0E03               	movlw	high _I2cRxPacket
 35072  0040F6  6F81               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 35073  0040F8  ECC0  F010         	call	_I2c_ReadData	;wreg free
 35074  0040FC  0900               	iorlw	0
 35075  0040FE  B4D8               	btfsc	status,2,c
 35076  004100  0012               	return	
 35077                           
 35078                           ;i2c_slv.c: 159: {
 35079                           ;i2c_slv.c: 161: I2cComState = I2cComReadComplete;
 35080  004102  0E04               	movlw	4
 35081  004104  0101               	movlb	1	; () banked
 35082  004106  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35083                           
 35084                           ; BSR set to: 1
 35085                           ;i2c_slv.c: 162: }
 35086                           ;i2c_slv.c: 164: break;
 35087  004108  0012               	return	
 35088  00410A                     
 35089                           ; BSR set to: 1
 35090                           ;i2c_slv.c: 168: I2cComState = I2cComIdle;
 35091                           
 35092                           ; BSR set to: 1
 35093  00410A  0E00               	movlw	0
 35094  00410C  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35095                           
 35096                           ;i2c_slv.c: 170: I2cComSts = TxRxIdle;
 35097  00410E  0E00               	movlw	0
 35098  004110  0100               	movlb	0	; () banked
 35099  004112  6FCF               	movwf	_I2cComSts& (0+255),b
 35100                           
 35101                           ;i2c_slv.c: 171: break;
 35102  004114  0012               	return	
 35103  004116                     
 35104                           ;i2c_slv.c: 175: I2cComState = I2cComIdle;
 35105                           
 35106                           ; BSR set to: 0
 35107  004116  0E00               	movlw	0
 35108  004118  0101               	movlb	1	; () banked
 35109  00411A  6FE4               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 35110                           
 35111                           ;i2c_slv.c: 177: I2cComSts = TxRxIdle;
 35112  00411C  0E00               	movlw	0
 35113  00411E  0100               	movlb	0	; () banked
 35114  004120  6FCF               	movwf	_I2cComSts& (0+255),b
 35115                           
 35116                           ; BSR set to: 0
 35117                           ;i2c_slv.c: 182: }
 35118                           
 35119                           ; BSR set to: 0
 35120                           ;i2c_slv.c: 181: break;
 35121                           
 35122                           ;i2c_slv.c: 180: default:
 35123                           
 35124                           ;i2c_slv.c: 178: break;
 35125  004122  0012               	return	
 35126  004124                     l1382:
 35127                           
 35128                           ; BSR set to: 0
 35129  004124  0101               	movlb	1	; () banked
 35130  004126  51E4               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 35131                           
 35132                           ; Switch size 1, requested type "space"
 35133                           ; Number of cases is 5, Range of values is 0 to 4
 35134                           ; switch strategies available:
 35135                           ; Name         Instructions Cycles
 35136                           ; simple_byte           16     9 (average)
 35137                           ;	Chosen strategy is simple_byte
 35138  004128  0A00               	xorlw	0	; case 0
 35139  00412A  B4D8               	btfsc	status,2,c
 35140  00412C  D7AC               	goto	l1383
 35141  00412E  0A01               	xorlw	1	; case 1
 35142  004130  B4D8               	btfsc	status,2,c
 35143  004132  D7CF               	goto	l1389
 35144  004134  0A03               	xorlw	3	; case 2
 35145  004136  B4D8               	btfsc	status,2,c
 35146  004138  D7DA               	goto	l1391
 35147  00413A  0A01               	xorlw	1	; case 3
 35148  00413C  B4D8               	btfsc	status,2,c
 35149  00413E  D7E5               	goto	l1393
 35150  004140  0A07               	xorlw	7	; case 4
 35151  004142  A4D8               	btfss	status,2,c
 35152  004144  0012               	return	
 35153  004146  D7E7               	goto	l1394
 35154  004148                     __end_of_I2cSendMsgSm:
 35155                           	opt stack 0
 35156                           tosu	equ	0xFFF
 35157                           tosh	equ	0xFFE
 35158                           tosl	equ	0xFFD
 35159                           pclath	equ	0xFFA
 35160                           tblptru	equ	0xFF8
 35161                           tblptrh	equ	0xFF7
 35162                           tblptrl	equ	0xFF6
 35163                           tablat	equ	0xFF5
 35164                           prodh	equ	0xFF4
 35165                           prodl	equ	0xFF3
 35166                           intcon	equ	0xFF2
 35167                           intcon2	equ	0xFF1
 35168                           intcon3	equ	0xFF0
 35169                           indf0	equ	0xFEF
 35170                           postinc0	equ	0xFEE
 35171                           plusw0	equ	0xFEB
 35172                           fsr0h	equ	0xFEA
 35173                           fsr0l	equ	0xFE9
 35174                           wreg	equ	0xFE8
 35175                           indf1	equ	0xFE7
 35176                           postinc1	equ	0xFE6
 35177                           postdec1	equ	0xFE5
 35178                           plusw1	equ	0xFE3
 35179                           fsr1h	equ	0xFE2
 35180                           fsr1l	equ	0xFE1
 35181                           indf2	equ	0xFDF
 35182                           postinc2	equ	0xFDE
 35183                           postdec2	equ	0xFDD
 35184                           plusw2	equ	0xFDB
 35185                           fsr2h	equ	0xFDA
 35186                           fsr2l	equ	0xFD9
 35187                           status	equ	0xFD8
 35188                           
 35189 ;; *************** function _ReceiveEvt *****************
 35190 ;; Defined at:
 35191 ;;		line 99 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 35192 ;; Parameters:    Size  Location     Type
 35193 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 35194 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), GetMethod(1), 
 35195 ;;		 -> InitNetwork(1), SmsTxtReady(1), GetSmsText(1), SmsEvent(1), 
 35196 ;;		 -> ClipEvent(1), RingEvent(1), SendSmsEvent(1), NewStringMdmTerminal(1), 
 35197 ;;		 -> NewMdmEvtParserRequest(1), NewStringReceived(1), MdmResetRequest(1), MdmOnOffPulseRequest(1), 
 35198 ;;		 -> ActivateRiDetection(1), 
 35199 ;; Auto vars:     Size  Location     Type
 35200 ;;  EventStatus     1   32[BANK0 ] enum E7727
 35201 ;; Return value:  Size  Location     Type
 35202 ;;                  1    wreg      enum E7699
 35203 ;; Registers used:
 35204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35205 ;; Tracked objects:
 35206 ;;		On entry : 0/0
 35207 ;;		On exit  : 0/0
 35208 ;;		Unchanged: 0/0
 35209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35213 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35214 ;;Total ram usage:        4 bytes
 35215 ;; Hardware stack levels used:    1
 35216 ;; Hardware stack levels required when called:   11
 35217 ;; This function calls:
 35218 ;;		Nothing
 35219 ;; This function is called by:
 35220 ;;		_MdmCntSm
 35221 ;;		_CheckModem
 35222 ;;		_ModemEvtParser
 35223 ;;		_GetSmsSm
 35224 ;;		_SendSmsSm
 35225 ;;		_Mdm_GetSmsData
 35226 ;;		_Mdm_IsSmsReceived
 35227 ;;		_Mdm_IsRinging
 35228 ;;		_GetCallerNumber
 35229 ;;		_InitGprsNetwork
 35230 ;;		_HttpGetMethod
 35231 ;;		_I2cSendMsgSm
 35232 ;;		_I2cSlv_I2cReadMsgSts
 35233 ;;		_RiSm
 35234 ;;		_GsmGprsTerminal
 35235 ;; This function uses a non-reentrant model
 35236 ;;
 35237                           
 35238                           	psect	text166
 35239  0065AE                     __ptext166:
 35240                           	opt stack 0
 35241  0065AE                     _ReceiveEvt:
 35242                           	opt stack 13
 35243                           
 35244                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 35245                           
 35246                           ;incstack = 0
 35247  0065AE  0E00               	movlw	0
 35248  0065B0  0100               	movlb	0	; () banked
 35249  0065B2  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35250                           
 35251                           ; BSR set to: 0
 35252                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 35253  0065B4  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35254  0065B8  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35255  0065BC  0E02               	movlw	2
 35256  0065BE  18DE               	xorwf	postinc2,w,c
 35257  0065C0  A4D8               	btfss	status,2,c
 35258  0065C2  D008               	goto	l832
 35259                           
 35260                           ; BSR set to: 0
 35261                           ;os_ser.c: 106: {
 35262                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 35263  0065C4  C07D  FFD9         	movff	ReceiveEvt@Event,fsr2l
 35264  0065C8  C07E  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 35265  0065CC  0E01               	movlw	1
 35266  0065CE  6EDF               	movwf	indf2,c
 35267                           
 35268                           ; BSR set to: 0
 35269                           ;os_ser.c: 110: EventStatus = EventReceived;
 35270  0065D0  0E01               	movlw	1
 35271  0065D2  D001               	goto	L80
 35272  0065D4                     l832:
 35273                           
 35274                           ; BSR set to: 0
 35275                           ;os_ser.c: 112: else
 35276                           ;os_ser.c: 113: {
 35277                           ;os_ser.c: 115: EventStatus = EventIdle;
 35278                           
 35279                           ; BSR set to: 0
 35280  0065D4  0E00               	movlw	0
 35281  0065D6                     L80:
 35282  0065D6  6F80               	movwf	ReceiveEvt@EventStatus& (0+255),b
 35283                           
 35284                           ; BSR set to: 0
 35285                           ;os_ser.c: 116: }
 35286                           ;os_ser.c: 119: return(EventStatus);
 35287  0065D8  5180               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 35288  0065DA  0012               	return	
 35289  0065DC                     __end_of_ReceiveEvt:
 35290                           	opt stack 0
 35291                           tosu	equ	0xFFF
 35292                           tosh	equ	0xFFE
 35293                           tosl	equ	0xFFD
 35294                           pclath	equ	0xFFA
 35295                           tblptru	equ	0xFF8
 35296                           tblptrh	equ	0xFF7
 35297                           tblptrl	equ	0xFF6
 35298                           tablat	equ	0xFF5
 35299                           prodh	equ	0xFF4
 35300                           prodl	equ	0xFF3
 35301                           intcon	equ	0xFF2
 35302                           intcon2	equ	0xFF1
 35303                           intcon3	equ	0xFF0
 35304                           indf0	equ	0xFEF
 35305                           postinc0	equ	0xFEE
 35306                           plusw0	equ	0xFEB
 35307                           fsr0h	equ	0xFEA
 35308                           fsr0l	equ	0xFE9
 35309                           wreg	equ	0xFE8
 35310                           indf1	equ	0xFE7
 35311                           postinc1	equ	0xFE6
 35312                           postdec1	equ	0xFE5
 35313                           plusw1	equ	0xFE3
 35314                           fsr1h	equ	0xFE2
 35315                           fsr1l	equ	0xFE1
 35316                           indf2	equ	0xFDF
 35317                           postinc2	equ	0xFDE
 35318                           postdec2	equ	0xFDD
 35319                           plusw2	equ	0xFDB
 35320                           fsr2h	equ	0xFDA
 35321                           fsr2l	equ	0xFD9
 35322                           status	equ	0xFD8
 35323                           
 35324 ;; *************** function _I2c_WriteData *****************
 35325 ;; Defined at:
 35326 ;;		line 252 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35327 ;; Parameters:    Size  Location     Type
 35328 ;;  WritePacket     2   30[BANK0 ] PTR struct _I2cWritePack
 35329 ;;		 -> I2cTxPacket(5), 
 35330 ;; Auto vars:     Size  Location     Type
 35331 ;;		None
 35332 ;; Return value:  Size  Location     Type
 35333 ;;                  1    wreg      enum E7740
 35334 ;; Registers used:
 35335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35336 ;; Tracked objects:
 35337 ;;		On entry : 0/0
 35338 ;;		On exit  : 0/0
 35339 ;;		Unchanged: 0/0
 35340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35343 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35344 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35345 ;;Total ram usage:        4 bytes
 35346 ;; Hardware stack levels used:    1
 35347 ;; Hardware stack levels required when called:   12
 35348 ;; This function calls:
 35349 ;;		_CheckAckStatus
 35350 ;;		_CheckTxStatus
 35351 ;;		_StartCondition
 35352 ;;		_StopCondition
 35353 ;;		_WriteByte
 35354 ;; This function is called by:
 35355 ;;		_I2cSendMsgSm
 35356 ;; This function uses a non-reentrant model
 35357 ;;
 35358                           
 35359                           	psect	text167
 35360  001EB2                     __ptext167:
 35361                           	opt stack 0
 35362  001EB2                     _I2c_WriteData:
 35363                           	opt stack 14
 35364                           
 35365                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 35366                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 35367                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 35368                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 35369                           ;i2c_drv.c: 260: switch (I2cWriteState)
 35370                           
 35371                           ; BSR set to: 0
 35372                           ;incstack = 0
 35373  001EB2  D095               	goto	l160
 35374  001EB4                     
 35375                           ;i2c_drv.c: 264: StartCondition();
 35376  001EB4  EC93  F035         	call	_StartCondition	;wreg free
 35377                           
 35378                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 35379  001EB8  0E00               	movlw	0
 35380  001EBA  6E34               	movwf	I2c_WriteData@WriteStatus,c
 35381                           
 35382                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 35383  001EBC  0E01               	movlw	1
 35384  001EBE  D084               	goto	L87
 35385  001EC0                     
 35386                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 35387  001EC0  0100               	movlb	0	; () banked
 35388  001EC2  EE20 F001          	lfsr	2,1
 35389  001EC6  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35390  001EC8  26D9               	addwf	fsr2l,f,c
 35391  001ECA  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35392  001ECC  22DA               	addwfc	fsr2h,f,c
 35393  001ECE  50DF               	movf	indf2,w,c
 35394  001ED0  6F80               	movwf	??_I2c_WriteData& (0+255),b
 35395  001ED2  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35396  001ED6  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35397  001EDA  50DF               	movf	indf2,w,c
 35398  001EDC  6F81               	movwf	(??_I2c_WriteData+1)& (0+255),b
 35399  001EDE  90D8               	bcf	status,0,c
 35400  001EE0  3581               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 35401  001EE2  1180               	iorwf	??_I2c_WriteData& (0+255),w,b
 35402  001EE4  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35403  001EE8  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35404  001EEC  6EDF               	movwf	indf2,c
 35405                           
 35406                           ; BSR set to: 0
 35407                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 35408  001EEE  C07E  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 35409  001EF2  C07F  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 35410  001EF6  50DF               	movf	indf2,w,c
 35411  001EF8  EC71  F035         	call	_WriteByte
 35412                           
 35413                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 35414  001EFC  0E02               	movlw	2
 35415  001EFE  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 35416  001F00                     
 35417                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 35418  001F00  EC7B  F035         	call	_CheckTxStatus	;wreg free
 35419  001F04  0900               	iorlw	0
 35420  001F06  A4D8               	btfss	status,2,c
 35421  001F08  D089               	goto	l162
 35422                           
 35423                           ;i2c_drv.c: 282: {
 35424                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 35425  001F0A  0E03               	movlw	3
 35426  001F0C  D01A               	goto	L89
 35427  001F0E                     
 35428                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 35429  001F0E  0100               	movlb	0	; () banked
 35430  001F10  EE20 F002          	lfsr	2,2
 35431  001F14  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35432  001F16  26D9               	addwf	fsr2l,f,c
 35433  001F18  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35434  001F1A  22DA               	addwfc	fsr2h,f,c
 35435  001F1C  CFDE F080          	movff	postinc2,??_I2c_WriteData
 35436  001F20  CFDD F081          	movff	postdec2,??_I2c_WriteData+1
 35437  001F24  C080  FFD9         	movff	??_I2c_WriteData,fsr2l
 35438  001F28  C081  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 35439  001F2C  50DF               	movf	indf2,w,c
 35440  001F2E  EC71  F035         	call	_WriteByte
 35441                           
 35442                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 35443  001F32  0E04               	movlw	4
 35444  001F34  D049               	goto	L87
 35445  001F36                     
 35446                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 35447  001F36  EC7B  F035         	call	_CheckTxStatus	;wreg free
 35448  001F3A  0900               	iorlw	0
 35449  001F3C  A4D8               	btfss	status,2,c
 35450  001F3E  D06E               	goto	l162
 35451                           
 35452                           ;i2c_drv.c: 300: {
 35453                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 35454  001F40  0E05               	movlw	5
 35455  001F42                     L89:
 35456  001F42  6E36               	movwf	I2c_WriteData@I2cNextState,c
 35457                           
 35458                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 35459  001F44  0E08               	movlw	8
 35460  001F46  D040               	goto	L87
 35461  001F48                     
 35462                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 35463  001F48  0100               	movlb	0	; () banked
 35464  001F4A  EE20 F004          	lfsr	2,4
 35465  001F4E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35466  001F50  26D9               	addwf	fsr2l,f,c
 35467  001F52  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35468  001F54  22DA               	addwfc	fsr2h,f,c
 35469  001F56  50DF               	movf	indf2,w,c
 35470  001F58  B4D8               	btfsc	status,2,c
 35471  001F5A  D010               	goto	l170
 35472                           
 35473                           ; BSR set to: 0
 35474                           ;i2c_drv.c: 310: {
 35475                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 35476  001F5C  EE20 F004          	lfsr	2,4
 35477  001F60  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35478  001F62  26D9               	addwf	fsr2l,f,c
 35479  001F64  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35480  001F66  22DA               	addwfc	fsr2h,f,c
 35481  001F68  06DF               	decf	indf2,f,c
 35482                           
 35483                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 35484  001F6A  EE20 F002          	lfsr	2,2
 35485  001F6E  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35486  001F70  26D9               	addwf	fsr2l,f,c
 35487  001F72  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35488  001F74  22DA               	addwfc	fsr2h,f,c
 35489  001F76  2ADE               	incf	postinc2,f,c
 35490  001F78  0E00               	movlw	0
 35491  001F7A  22DD               	addwfc	postdec2,f,c
 35492  001F7C                     l170:
 35493                           
 35494                           ; BSR set to: 0
 35495                           ;i2c_drv.c: 315: }
 35496                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 35497  001F7C  EE20 F004          	lfsr	2,4
 35498  001F80  517E               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 35499  001F82  26D9               	addwf	fsr2l,f,c
 35500  001F84  517F               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 35501  001F86  22DA               	addwfc	fsr2h,f,c
 35502  001F88  50DF               	movf	indf2,w,c
 35503  001F8A  A4D8               	btfss	status,2,c
 35504  001F8C  D002               	goto	l171
 35505                           
 35506                           ; BSR set to: 0
 35507                           ;i2c_drv.c: 319: {
 35508                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 35509  001F8E  0E06               	movlw	6
 35510  001F90  D01B               	goto	L87
 35511  001F92                     l171:
 35512                           
 35513                           ; BSR set to: 0
 35514                           ;i2c_drv.c: 323: else
 35515                           ;i2c_drv.c: 324: {
 35516                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 35517                           
 35518                           ; BSR set to: 0
 35519  001F92  0E03               	movlw	3
 35520  001F94  D019               	goto	L87
 35521  001F96                     
 35522                           ;i2c_drv.c: 332: StopCondition();
 35523                           
 35524                           ; BSR set to: 0
 35525  001F96  EC91  F035         	call	_StopCondition	;wreg free
 35526                           
 35527                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 35528  001F9A  0E07               	movlw	7
 35529  001F9C  D015               	goto	L87
 35530  001F9E                     
 35531                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 35532  001F9E  0E00               	movlw	0
 35533  001FA0  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 35534                           
 35535                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 35536  001FA2  0E00               	movlw	0
 35537  001FA4  6E36               	movwf	I2c_WriteData@I2cNextState,c
 35538                           
 35539                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 35540  001FA6  0E02               	movlw	2
 35541  001FA8  D018               	goto	L88
 35542  001FAA                     
 35543                           ;i2c_drv.c: 347: TentativeCounter++;
 35544  001FAA  2A35               	incf	I2c_WriteData@TentativeCounter,f,c
 35545                           
 35546                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 35547  001FAC  EC80  F035         	call	_CheckAckStatus	;wreg free
 35548  001FB0  0900               	iorlw	0
 35549  001FB2  A4D8               	btfss	status,2,c
 35550  001FB4  D005               	goto	l176
 35551                           
 35552                           ;i2c_drv.c: 350: {
 35553                           ;i2c_drv.c: 352: TentativeCounter = 0;
 35554  001FB6  0E00               	movlw	0
 35555  001FB8  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 35556                           
 35557                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 35558  001FBA  C036  F037         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 35559                           
 35560                           ;i2c_drv.c: 355: }
 35561  001FBE  D02E               	goto	l162
 35562  001FC0                     l176:
 35563                           
 35564                           ;i2c_drv.c: 356: else
 35565                           ;i2c_drv.c: 357: {
 35566                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 35567  001FC0  0E02               	movlw	2
 35568  001FC2  6435               	cpfsgt	I2c_WriteData@TentativeCounter,c
 35569  001FC4  D02B               	goto	l162
 35570                           
 35571                           ;i2c_drv.c: 360: {
 35572                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 35573  001FC6  0E09               	movlw	9
 35574  001FC8                     L87:
 35575  001FC8  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 35576                           
 35577                           ;i2c_drv.c: 363: }
 35578                           ;i2c_drv.c: 364: }
 35579                           ;i2c_drv.c: 365: break;
 35580  001FCA  D028               	goto	l162
 35581  001FCC                     
 35582                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 35583  001FCC  0E00               	movlw	0
 35584  001FCE  6E37               	movwf	I2c_WriteData@I2cWriteState,c
 35585                           
 35586                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 35587  001FD0  0E00               	movlw	0
 35588  001FD2  6E36               	movwf	I2c_WriteData@I2cNextState,c
 35589                           
 35590                           ;i2c_drv.c: 372: TentativeCounter = 0;
 35591  001FD4  0E00               	movlw	0
 35592  001FD6  6E35               	movwf	I2c_WriteData@TentativeCounter,c
 35593                           
 35594                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 35595  001FD8  0E01               	movlw	1
 35596  001FDA                     L88:
 35597  001FDA  6E34               	movwf	I2c_WriteData@WriteStatus,c
 35598                           
 35599                           ;i2c_drv.c: 379: }
 35600                           
 35601                           ;i2c_drv.c: 378: break;
 35602                           
 35603                           ;i2c_drv.c: 377: default:
 35604                           
 35605                           ;i2c_drv.c: 375: break;
 35606  001FDC  D01F               	goto	l162
 35607  001FDE                     l160:
 35608  001FDE  5037               	movf	I2c_WriteData@I2cWriteState,w,c
 35609                           
 35610                           ; Switch size 1, requested type "space"
 35611                           ; Number of cases is 10, Range of values is 0 to 9
 35612                           ; switch strategies available:
 35613                           ; Name         Instructions Cycles
 35614                           ; simple_byte           31    16 (average)
 35615                           ;	Chosen strategy is simple_byte
 35616  001FE0  0A00               	xorlw	0	; case 0
 35617  001FE2  B4D8               	btfsc	status,2,c
 35618  001FE4  D767               	goto	l161
 35619  001FE6  0A01               	xorlw	1	; case 1
 35620  001FE8  B4D8               	btfsc	status,2,c
 35621  001FEA  D76A               	goto	l163
 35622  001FEC  0A03               	xorlw	3	; case 2
 35623  001FEE  B4D8               	btfsc	status,2,c
 35624  001FF0  D787               	goto	l164
 35625  001FF2  0A01               	xorlw	1	; case 3
 35626  001FF4  B4D8               	btfsc	status,2,c
 35627  001FF6  D78B               	goto	l166
 35628  001FF8  0A07               	xorlw	7	; case 4
 35629  001FFA  B4D8               	btfsc	status,2,c
 35630  001FFC  D79C               	goto	l167
 35631  001FFE  0A01               	xorlw	1	; case 5
 35632  002000  B4D8               	btfsc	status,2,c
 35633  002002  D7A2               	goto	l169
 35634  002004  0A03               	xorlw	3	; case 6
 35635  002006  B4D8               	btfsc	status,2,c
 35636  002008  D7C6               	goto	l173
 35637  00200A  0A01               	xorlw	1	; case 7
 35638  00200C  B4D8               	btfsc	status,2,c
 35639  00200E  D7C7               	goto	l174
 35640  002010  0A0F               	xorlw	15	; case 8
 35641  002012  B4D8               	btfsc	status,2,c
 35642  002014  D7CA               	goto	l175
 35643  002016  0A01               	xorlw	1	; case 9
 35644  002018  B4D8               	btfsc	status,2,c
 35645  00201A  D7D8               	goto	l179
 35646  00201C                     l162:
 35647                           
 35648                           ;i2c_drv.c: 382: return WriteStatus;
 35649  00201C  5034               	movf	I2c_WriteData@WriteStatus,w,c
 35650  00201E  0012               	return	
 35651  002020                     __end_of_I2c_WriteData:
 35652                           	opt stack 0
 35653                           tosu	equ	0xFFF
 35654                           tosh	equ	0xFFE
 35655                           tosl	equ	0xFFD
 35656                           pclath	equ	0xFFA
 35657                           tblptru	equ	0xFF8
 35658                           tblptrh	equ	0xFF7
 35659                           tblptrl	equ	0xFF6
 35660                           tablat	equ	0xFF5
 35661                           prodh	equ	0xFF4
 35662                           prodl	equ	0xFF3
 35663                           intcon	equ	0xFF2
 35664                           intcon2	equ	0xFF1
 35665                           intcon3	equ	0xFF0
 35666                           indf0	equ	0xFEF
 35667                           postinc0	equ	0xFEE
 35668                           plusw0	equ	0xFEB
 35669                           fsr0h	equ	0xFEA
 35670                           fsr0l	equ	0xFE9
 35671                           wreg	equ	0xFE8
 35672                           indf1	equ	0xFE7
 35673                           postinc1	equ	0xFE6
 35674                           postdec1	equ	0xFE5
 35675                           plusw1	equ	0xFE3
 35676                           fsr1h	equ	0xFE2
 35677                           fsr1l	equ	0xFE1
 35678                           indf2	equ	0xFDF
 35679                           postinc2	equ	0xFDE
 35680                           postdec2	equ	0xFDD
 35681                           plusw2	equ	0xFDB
 35682                           fsr2h	equ	0xFDA
 35683                           fsr2l	equ	0xFD9
 35684                           status	equ	0xFD8
 35685                           
 35686 ;; *************** function _I2c_ReadData *****************
 35687 ;; Defined at:
 35688 ;;		line 393 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 35689 ;; Parameters:    Size  Location     Type
 35690 ;;  ReadPacket      2   32[BANK0 ] PTR struct _I2cReadPacke
 35691 ;;		 -> I2cRxPacket(6), 
 35692 ;; Auto vars:     Size  Location     Type
 35693 ;;		None
 35694 ;; Return value:  Size  Location     Type
 35695 ;;                  1    wreg      enum E7787
 35696 ;; Registers used:
 35697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35698 ;; Tracked objects:
 35699 ;;		On entry : 0/0
 35700 ;;		On exit  : 0/0
 35701 ;;		Unchanged: 0/0
 35702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35706 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35707 ;;Total ram usage:        4 bytes
 35708 ;; Hardware stack levels used:    1
 35709 ;; Hardware stack levels required when called:   12
 35710 ;; This function calls:
 35711 ;;		_CheckAckStatus
 35712 ;;		_CheckTxStatus
 35713 ;;		_EnableReceiver
 35714 ;;		_GenerateEvt
 35715 ;;		_ReadByte
 35716 ;;		_SetAckStatus
 35717 ;;		_StartCondition
 35718 ;;		_StopCondition
 35719 ;;		_WriteByte
 35720 ;; This function is called by:
 35721 ;;		_I2cSendMsgSm
 35722 ;; This function uses a non-reentrant model
 35723 ;;
 35724                           
 35725                           	psect	text168
 35726  002180                     __ptext168:
 35727                           	opt stack 0
 35728  002180                     _I2c_ReadData:
 35729                           	opt stack 14
 35730                           
 35731                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 35732                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 35733                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 35734                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 35735                           ;i2c_drv.c: 402: switch (I2cReadState)
 35736                           
 35737                           ;incstack = 0
 35738  002180  D090               	goto	l192
 35739  002182                     
 35740                           ;i2c_drv.c: 406: StartCondition();
 35741  002182  EC93  F035         	call	_StartCondition	;wreg free
 35742                           
 35743                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 35744  002186  0E00               	movlw	0
 35745  002188  6E30               	movwf	I2c_ReadData@ReadStatus,c
 35746                           
 35747                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 35748  00218A  0E01               	movlw	1
 35749  00218C  D083               	goto	L97
 35750  00218E                     
 35751                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 35752  00218E  0100               	movlb	0	; () banked
 35753  002190  EE20 F001          	lfsr	2,1
 35754  002194  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35755  002196  26D9               	addwf	fsr2l,f,c
 35756  002198  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35757  00219A  22DA               	addwfc	fsr2h,f,c
 35758  00219C  50DF               	movf	indf2,w,c
 35759  00219E  6F82               	movwf	??_I2c_ReadData& (0+255),b
 35760  0021A0  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35761  0021A4  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35762  0021A8  50DF               	movf	indf2,w,c
 35763  0021AA  6F83               	movwf	(??_I2c_ReadData+1)& (0+255),b
 35764  0021AC  90D8               	bcf	status,0,c
 35765  0021AE  3583               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 35766  0021B0  1182               	iorwf	??_I2c_ReadData& (0+255),w,b
 35767  0021B2  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35768  0021B6  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35769  0021BA  6EDF               	movwf	indf2,c
 35770                           
 35771                           ; BSR set to: 0
 35772                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 35773  0021BC  C080  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 35774  0021C0  C081  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 35775  0021C4  50DF               	movf	indf2,w,c
 35776  0021C6  EC71  F035         	call	_WriteByte
 35777                           
 35778                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 35779  0021CA  0E02               	movlw	2
 35780  0021CC  D063               	goto	L97
 35781  0021CE                     
 35782                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 35783  0021CE  EC7B  F035         	call	_CheckTxStatus	;wreg free
 35784  0021D2  0900               	iorlw	0
 35785  0021D4  A4D8               	btfss	status,2,c
 35786  0021D6  D081               	goto	l194
 35787                           
 35788                           ;i2c_drv.c: 425: {
 35789                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 35790  0021D8  0E03               	movlw	3
 35791  0021DA  D05C               	goto	L97
 35792  0021DC                     
 35793                           ;i2c_drv.c: 433: TentativeCounter++;
 35794  0021DC  2A31               	incf	I2c_ReadData@TentativeCounter,f,c
 35795                           
 35796                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 35797  0021DE  EC80  F035         	call	_CheckAckStatus	;wreg free
 35798  0021E2  0900               	iorlw	0
 35799  0021E4  A4D8               	btfss	status,2,c
 35800  0021E6  D004               	goto	l199
 35801                           
 35802                           ;i2c_drv.c: 436: {
 35803                           ;i2c_drv.c: 438: TentativeCounter = 0;
 35804  0021E8  0E00               	movlw	0
 35805  0021EA  6E31               	movwf	I2c_ReadData@TentativeCounter,c
 35806  0021EC                     
 35807                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 35808  0021EC  0E04               	movlw	4
 35809  0021EE  D052               	goto	L97
 35810  0021F0                     l199:
 35811                           
 35812                           ;i2c_drv.c: 442: else
 35813                           ;i2c_drv.c: 443: {
 35814                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 35815  0021F0  0E02               	movlw	2
 35816  0021F2  6431               	cpfsgt	I2c_ReadData@TentativeCounter,c
 35817  0021F4  D072               	goto	l194
 35818                           
 35819                           ;i2c_drv.c: 446: {
 35820                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 35821  0021F6  0E08               	movlw	8
 35822  0021F8  D04D               	goto	L97
 35823  0021FA                     
 35824                           ;i2c_drv.c: 455: EnableReceiver();
 35825  0021FA  EC95  F035         	call	_EnableReceiver	;wreg free
 35826                           
 35827                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 35828  0021FE  0E05               	movlw	5
 35829  002200  D049               	goto	L97
 35830  002202                     
 35831                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 35832  002202  EC7B  F035         	call	_CheckTxStatus	;wreg free
 35833  002206  0900               	iorlw	0
 35834  002208  A4D8               	btfss	status,2,c
 35835  00220A  D067               	goto	l194
 35836                           
 35837                           ;i2c_drv.c: 463: {
 35838                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 35839  00220C  0100               	movlb	0	; () banked
 35840  00220E  EE20 F002          	lfsr	2,2
 35841  002212  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35842  002214  26D9               	addwf	fsr2l,f,c
 35843  002216  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35844  002218  22DA               	addwfc	fsr2h,f,c
 35845  00221A  CFDE F082          	movff	postinc2,??_I2c_ReadData
 35846  00221E  CFDD F083          	movff	postdec2,??_I2c_ReadData+1
 35847  002222  C082  FFD9         	movff	??_I2c_ReadData,fsr2l
 35848  002226  C083  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 35849  00222A  EC76  F035         	call	_ReadByte	;wreg free
 35850  00222E  6EDF               	movwf	indf2,c
 35851                           
 35852                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 35853  002230  0100               	movlb	0	; () banked
 35854  002232  EE20 F002          	lfsr	2,2
 35855  002236  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35856  002238  26D9               	addwf	fsr2l,f,c
 35857  00223A  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35858  00223C  22DA               	addwfc	fsr2h,f,c
 35859  00223E  2ADE               	incf	postinc2,f,c
 35860  002240  0E00               	movlw	0
 35861  002242  22DD               	addwfc	postdec2,f,c
 35862                           
 35863                           ; BSR set to: 0
 35864                           ;i2c_drv.c: 469: DataCounter++;
 35865  002244  2A32               	incf	I2c_ReadData@DataCounter,f,c
 35866                           
 35867                           ; BSR set to: 0
 35868                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 35869  002246  0E06               	movlw	6
 35870  002248  D025               	goto	L97
 35871  00224A                     
 35872                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 35873                           
 35874                           ; BSR set to: 0
 35875  00224A  0100               	movlb	0	; () banked
 35876  00224C  EE20 F004          	lfsr	2,4
 35877  002250  5180               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 35878  002252  26D9               	addwf	fsr2l,f,c
 35879  002254  5181               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35880  002256  22DA               	addwfc	fsr2h,f,c
 35881  002258  50DE               	movf	postinc2,w,c
 35882  00225A  5C32               	subwf	I2c_ReadData@DataCounter,w,c
 35883  00225C  A0D8               	btfss	status,0,c
 35884  00225E  D008               	goto	l206
 35885                           
 35886                           ; BSR set to: 0
 35887                           ;i2c_drv.c: 478: {
 35888                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 35889  002260  0E01               	movlw	1
 35890  002262  EC00  F035         	call	_SetAckStatus
 35891                           
 35892                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 35893  002266  0E07               	movlw	7
 35894  002268  6E33               	movwf	I2c_ReadData@I2cReadState,c
 35895                           
 35896                           ;i2c_drv.c: 484: DataCounter = 0;
 35897  00226A  0E00               	movlw	0
 35898  00226C  6E32               	movwf	I2c_ReadData@DataCounter,c
 35899                           
 35900                           ;i2c_drv.c: 485: }
 35901  00226E  D035               	goto	l194
 35902  002270                     l206:
 35903                           
 35904                           ;i2c_drv.c: 486: else
 35905                           ;i2c_drv.c: 487: {
 35906                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 35907  002270  0E00               	movlw	0
 35908  002272  EC00  F035         	call	_SetAckStatus
 35909  002276  D7BA               	goto	L98
 35910  002278                     
 35911                           ;i2c_drv.c: 497: StopCondition();
 35912  002278  EC91  F035         	call	_StopCondition	;wreg free
 35913                           
 35914                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 35915  00227C  0E02               	movlw	2
 35916  00227E  6E30               	movwf	I2c_ReadData@ReadStatus,c
 35917                           
 35918                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 35919  002280  0E05               	movlw	5
 35920  002282  0100               	movlb	0	; () banked
 35921  002284  2580               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 35922  002286  6F7D               	movwf	GenerateEvt@Event& (0+255),b
 35923  002288  0E00               	movlw	0
 35924  00228A  2181               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 35925  00228C  6F7E               	movwf	(GenerateEvt@Event+1)& (0+255),b
 35926  00228E  ECC8  F034         	call	_GenerateEvt	;wreg free
 35927                           
 35928                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 35929  002292  0E00               	movlw	0
 35930  002294                     L97:
 35931  002294  6E33               	movwf	I2c_ReadData@I2cReadState,c
 35932                           
 35933                           ;i2c_drv.c: 504: break;
 35934  002296  D021               	goto	l194
 35935  002298                     
 35936                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 35937  002298  0E00               	movlw	0
 35938  00229A  6E33               	movwf	I2c_ReadData@I2cReadState,c
 35939                           
 35940                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 35941  00229C  0E01               	movlw	1
 35942  00229E  6E30               	movwf	I2c_ReadData@ReadStatus,c
 35943                           
 35944                           ;i2c_drv.c: 515: }
 35945                           
 35946                           ;i2c_drv.c: 514: break;
 35947                           
 35948                           ;i2c_drv.c: 513: default:
 35949                           
 35950                           ;i2c_drv.c: 511: break;
 35951  0022A0  D01C               	goto	l194
 35952  0022A2                     l192:
 35953  0022A2  5033               	movf	I2c_ReadData@I2cReadState,w,c
 35954                           
 35955                           ; Switch size 1, requested type "space"
 35956                           ; Number of cases is 9, Range of values is 0 to 8
 35957                           ; switch strategies available:
 35958                           ; Name         Instructions Cycles
 35959                           ; simple_byte           28    15 (average)
 35960                           ;	Chosen strategy is simple_byte
 35961  0022A4  0A00               	xorlw	0	; case 0
 35962  0022A6  B4D8               	btfsc	status,2,c
 35963  0022A8  D76C               	goto	l193
 35964  0022AA  0A01               	xorlw	1	; case 1
 35965  0022AC  B4D8               	btfsc	status,2,c
 35966  0022AE  D76F               	goto	l195
 35967  0022B0  0A03               	xorlw	3	; case 2
 35968  0022B2  B4D8               	btfsc	status,2,c
 35969  0022B4  D78C               	goto	l196
 35970  0022B6  0A01               	xorlw	1	; case 3
 35971  0022B8  B4D8               	btfsc	status,2,c
 35972  0022BA  D790               	goto	l198
 35973  0022BC  0A07               	xorlw	7	; case 4
 35974  0022BE  B4D8               	btfsc	status,2,c
 35975  0022C0  D79C               	goto	l202
 35976  0022C2  0A01               	xorlw	1	; case 5
 35977  0022C4  B4D8               	btfsc	status,2,c
 35978  0022C6  D79D               	goto	l203
 35979  0022C8  0A03               	xorlw	3	; case 6
 35980  0022CA  B4D8               	btfsc	status,2,c
 35981  0022CC  D7BE               	goto	l205
 35982  0022CE  0A01               	xorlw	1	; case 7
 35983  0022D0  B4D8               	btfsc	status,2,c
 35984  0022D2  D7D2               	goto	l208
 35985  0022D4  0A0F               	xorlw	15	; case 8
 35986  0022D6  B4D8               	btfsc	status,2,c
 35987  0022D8  D7DF               	goto	l209
 35988  0022DA                     l194:
 35989                           
 35990                           ;i2c_drv.c: 518: return ReadStatus;
 35991  0022DA  5030               	movf	I2c_ReadData@ReadStatus,w,c
 35992  0022DC  0012               	return	
 35993  0022DE                     __end_of_I2c_ReadData:
 35994                           	opt stack 0
 35995                           tosu	equ	0xFFF
 35996                           tosh	equ	0xFFE
 35997                           tosl	equ	0xFFD
 35998                           pclath	equ	0xFFA
 35999                           tblptru	equ	0xFF8
 36000                           tblptrh	equ	0xFF7
 36001                           tblptrl	equ	0xFF6
 36002                           tablat	equ	0xFF5
 36003                           prodh	equ	0xFF4
 36004                           prodl	equ	0xFF3
 36005                           intcon	equ	0xFF2
 36006                           intcon2	equ	0xFF1
 36007                           intcon3	equ	0xFF0
 36008                           indf0	equ	0xFEF
 36009                           postinc0	equ	0xFEE
 36010                           plusw0	equ	0xFEB
 36011                           fsr0h	equ	0xFEA
 36012                           fsr0l	equ	0xFE9
 36013                           wreg	equ	0xFE8
 36014                           indf1	equ	0xFE7
 36015                           postinc1	equ	0xFE6
 36016                           postdec1	equ	0xFE5
 36017                           plusw1	equ	0xFE3
 36018                           fsr1h	equ	0xFE2
 36019                           fsr1l	equ	0xFE1
 36020                           indf2	equ	0xFDF
 36021                           postinc2	equ	0xFDE
 36022                           postdec2	equ	0xFDD
 36023                           plusw2	equ	0xFDB
 36024                           fsr2h	equ	0xFDA
 36025                           fsr2l	equ	0xFD9
 36026                           status	equ	0xFD8
 36027                           
 36028 ;; *************** function _WriteByte *****************
 36029 ;; Defined at:
 36030 ;;		line 190 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36031 ;; Parameters:    Size  Location     Type
 36032 ;;  Byte            1    wreg     unsigned char 
 36033 ;; Auto vars:     Size  Location     Type
 36034 ;;  Byte            1   29[BANK0 ] unsigned char 
 36035 ;; Return value:  Size  Location     Type
 36036 ;;                  1    wreg      void 
 36037 ;; Registers used:
 36038 ;;		wreg
 36039 ;; Tracked objects:
 36040 ;;		On entry : 0/0
 36041 ;;		On exit  : 0/0
 36042 ;;		Unchanged: 0/0
 36043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36047 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36048 ;;Total ram usage:        1 bytes
 36049 ;; Hardware stack levels used:    1
 36050 ;; Hardware stack levels required when called:   11
 36051 ;; This function calls:
 36052 ;;		Nothing
 36053 ;; This function is called by:
 36054 ;;		_I2c_WriteData
 36055 ;;		_I2c_ReadData
 36056 ;; This function uses a non-reentrant model
 36057 ;;
 36058                           
 36059                           	psect	text169
 36060  006AE2                     __ptext169:
 36061                           	opt stack 0
 36062  006AE2                     _WriteByte:
 36063                           	opt stack 14
 36064                           
 36065                           ;incstack = 0
 36066                           ;WriteByte@Byte stored from wreg
 36067  006AE2  0100               	movlb	0	; () banked
 36068  006AE4  6F7D               	movwf	WriteByte@Byte& (0+255),b
 36069                           
 36070                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 36071  006AE6  C07D  FF75         	movff	WriteByte@Byte,3957	;volatile
 36072  006AEA  0012               	return		;funcret
 36073  006AEC                     __end_of_WriteByte:
 36074                           	opt stack 0
 36075                           tosu	equ	0xFFF
 36076                           tosh	equ	0xFFE
 36077                           tosl	equ	0xFFD
 36078                           pclath	equ	0xFFA
 36079                           tblptru	equ	0xFF8
 36080                           tblptrh	equ	0xFF7
 36081                           tblptrl	equ	0xFF6
 36082                           tablat	equ	0xFF5
 36083                           prodh	equ	0xFF4
 36084                           prodl	equ	0xFF3
 36085                           intcon	equ	0xFF2
 36086                           intcon2	equ	0xFF1
 36087                           intcon3	equ	0xFF0
 36088                           indf0	equ	0xFEF
 36089                           postinc0	equ	0xFEE
 36090                           plusw0	equ	0xFEB
 36091                           fsr0h	equ	0xFEA
 36092                           fsr0l	equ	0xFE9
 36093                           wreg	equ	0xFE8
 36094                           indf1	equ	0xFE7
 36095                           postinc1	equ	0xFE6
 36096                           postdec1	equ	0xFE5
 36097                           plusw1	equ	0xFE3
 36098                           fsr1h	equ	0xFE2
 36099                           fsr1l	equ	0xFE1
 36100                           indf2	equ	0xFDF
 36101                           postinc2	equ	0xFDE
 36102                           postdec2	equ	0xFDD
 36103                           plusw2	equ	0xFDB
 36104                           fsr2h	equ	0xFDA
 36105                           fsr2l	equ	0xFD9
 36106                           status	equ	0xFD8
 36107                           
 36108 ;; *************** function _StopCondition *****************
 36109 ;; Defined at:
 36110 ;;		line 120 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36111 ;; Parameters:    Size  Location     Type
 36112 ;;		None
 36113 ;; Auto vars:     Size  Location     Type
 36114 ;;		None
 36115 ;; Return value:  Size  Location     Type
 36116 ;;                  1    wreg      void 
 36117 ;; Registers used:
 36118 ;;		status,2, status,0
 36119 ;; Tracked objects:
 36120 ;;		On entry : 0/0
 36121 ;;		On exit  : 0/0
 36122 ;;		Unchanged: 0/0
 36123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36128 ;;Total ram usage:        0 bytes
 36129 ;; Hardware stack levels used:    1
 36130 ;; Hardware stack levels required when called:   11
 36131 ;; This function calls:
 36132 ;;		Nothing
 36133 ;; This function is called by:
 36134 ;;		_I2c_WriteData
 36135 ;;		_I2c_ReadData
 36136 ;; This function uses a non-reentrant model
 36137 ;;
 36138                           
 36139                           	psect	text170
 36140  006B22                     __ptext170:
 36141                           	opt stack 0
 36142  006B22                     _StopCondition:
 36143                           	opt stack 14
 36144                           
 36145                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 36146                           
 36147                           ;incstack = 0
 36148  006B22  8471               	bsf	3953,2,c	;volatile
 36149  006B24  0012               	return		;funcret
 36150  006B26                     __end_of_StopCondition:
 36151                           	opt stack 0
 36152                           tosu	equ	0xFFF
 36153                           tosh	equ	0xFFE
 36154                           tosl	equ	0xFFD
 36155                           pclath	equ	0xFFA
 36156                           tblptru	equ	0xFF8
 36157                           tblptrh	equ	0xFF7
 36158                           tblptrl	equ	0xFF6
 36159                           tablat	equ	0xFF5
 36160                           prodh	equ	0xFF4
 36161                           prodl	equ	0xFF3
 36162                           intcon	equ	0xFF2
 36163                           intcon2	equ	0xFF1
 36164                           intcon3	equ	0xFF0
 36165                           indf0	equ	0xFEF
 36166                           postinc0	equ	0xFEE
 36167                           plusw0	equ	0xFEB
 36168                           fsr0h	equ	0xFEA
 36169                           fsr0l	equ	0xFE9
 36170                           wreg	equ	0xFE8
 36171                           indf1	equ	0xFE7
 36172                           postinc1	equ	0xFE6
 36173                           postdec1	equ	0xFE5
 36174                           plusw1	equ	0xFE3
 36175                           fsr1h	equ	0xFE2
 36176                           fsr1l	equ	0xFE1
 36177                           indf2	equ	0xFDF
 36178                           postinc2	equ	0xFDE
 36179                           postdec2	equ	0xFDD
 36180                           plusw2	equ	0xFDB
 36181                           fsr2h	equ	0xFDA
 36182                           fsr2l	equ	0xFD9
 36183                           status	equ	0xFD8
 36184                           
 36185 ;; *************** function _StartCondition *****************
 36186 ;; Defined at:
 36187 ;;		line 92 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36188 ;; Parameters:    Size  Location     Type
 36189 ;;		None
 36190 ;; Auto vars:     Size  Location     Type
 36191 ;;		None
 36192 ;; Return value:  Size  Location     Type
 36193 ;;                  1    wreg      void 
 36194 ;; Registers used:
 36195 ;;		status,2, status,0
 36196 ;; Tracked objects:
 36197 ;;		On entry : 0/0
 36198 ;;		On exit  : 0/0
 36199 ;;		Unchanged: 0/0
 36200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36205 ;;Total ram usage:        0 bytes
 36206 ;; Hardware stack levels used:    1
 36207 ;; Hardware stack levels required when called:   11
 36208 ;; This function calls:
 36209 ;;		Nothing
 36210 ;; This function is called by:
 36211 ;;		_I2c_WriteData
 36212 ;;		_I2c_ReadData
 36213 ;; This function uses a non-reentrant model
 36214 ;;
 36215                           
 36216                           	psect	text171
 36217  006B26                     __ptext171:
 36218                           	opt stack 0
 36219  006B26                     _StartCondition:
 36220                           	opt stack 14
 36221                           
 36222                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 36223                           
 36224                           ;incstack = 0
 36225  006B26  8071               	bsf	3953,0,c	;volatile
 36226  006B28  0012               	return		;funcret
 36227  006B2A                     __end_of_StartCondition:
 36228                           	opt stack 0
 36229                           tosu	equ	0xFFF
 36230                           tosh	equ	0xFFE
 36231                           tosl	equ	0xFFD
 36232                           pclath	equ	0xFFA
 36233                           tblptru	equ	0xFF8
 36234                           tblptrh	equ	0xFF7
 36235                           tblptrl	equ	0xFF6
 36236                           tablat	equ	0xFF5
 36237                           prodh	equ	0xFF4
 36238                           prodl	equ	0xFF3
 36239                           intcon	equ	0xFF2
 36240                           intcon2	equ	0xFF1
 36241                           intcon3	equ	0xFF0
 36242                           indf0	equ	0xFEF
 36243                           postinc0	equ	0xFEE
 36244                           plusw0	equ	0xFEB
 36245                           fsr0h	equ	0xFEA
 36246                           fsr0l	equ	0xFE9
 36247                           wreg	equ	0xFE8
 36248                           indf1	equ	0xFE7
 36249                           postinc1	equ	0xFE6
 36250                           postdec1	equ	0xFE5
 36251                           plusw1	equ	0xFE3
 36252                           fsr1h	equ	0xFE2
 36253                           fsr1l	equ	0xFE1
 36254                           indf2	equ	0xFDF
 36255                           postinc2	equ	0xFDE
 36256                           postdec2	equ	0xFDD
 36257                           plusw2	equ	0xFDB
 36258                           fsr2h	equ	0xFDA
 36259                           fsr2l	equ	0xFD9
 36260                           status	equ	0xFD8
 36261                           
 36262 ;; *************** function _SetAckStatus *****************
 36263 ;; Defined at:
 36264 ;;		line 162 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36265 ;; Parameters:    Size  Location     Type
 36266 ;;  AckSts          1    wreg     unsigned char 
 36267 ;; Auto vars:     Size  Location     Type
 36268 ;;  AckSts          1   29[BANK0 ] unsigned char 
 36269 ;; Return value:  Size  Location     Type
 36270 ;;                  1    wreg      void 
 36271 ;; Registers used:
 36272 ;;		wreg
 36273 ;; Tracked objects:
 36274 ;;		On entry : 0/0
 36275 ;;		On exit  : 0/0
 36276 ;;		Unchanged: 0/0
 36277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36281 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36282 ;;Total ram usage:        1 bytes
 36283 ;; Hardware stack levels used:    1
 36284 ;; Hardware stack levels required when called:   11
 36285 ;; This function calls:
 36286 ;;		Nothing
 36287 ;; This function is called by:
 36288 ;;		_I2c_ReadData
 36289 ;; This function uses a non-reentrant model
 36290 ;;
 36291                           
 36292                           	psect	text172
 36293  006A00                     __ptext172:
 36294                           	opt stack 0
 36295  006A00                     _SetAckStatus:
 36296                           	opt stack 14
 36297                           
 36298                           ;incstack = 0
 36299                           ;SetAckStatus@AckSts stored from wreg
 36300  006A00  0100               	movlb	0	; () banked
 36301  006A02  6F7D               	movwf	SetAckStatus@AckSts& (0+255),b
 36302                           
 36303                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 36304  006A04  0100               	movlb	0	; () banked
 36305  006A06  B17D               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 36306  006A08  D002               	bra	u12595
 36307  006A0A  9A71               	bcf	3953,5,c	;volatile
 36308  006A0C  D001               	bra	u12596
 36309  006A0E                     u12595:
 36310  006A0E  8A71               	bsf	3953,5,c	;volatile
 36311  006A10                     u12596:
 36312                           
 36313                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 36314  006A10  8871               	bsf	3953,4,c	;volatile
 36315  006A12  0012               	return		;funcret
 36316  006A14                     __end_of_SetAckStatus:
 36317                           	opt stack 0
 36318                           tosu	equ	0xFFF
 36319                           tosh	equ	0xFFE
 36320                           tosl	equ	0xFFD
 36321                           pclath	equ	0xFFA
 36322                           tblptru	equ	0xFF8
 36323                           tblptrh	equ	0xFF7
 36324                           tblptrl	equ	0xFF6
 36325                           tablat	equ	0xFF5
 36326                           prodh	equ	0xFF4
 36327                           prodl	equ	0xFF3
 36328                           intcon	equ	0xFF2
 36329                           intcon2	equ	0xFF1
 36330                           intcon3	equ	0xFF0
 36331                           indf0	equ	0xFEF
 36332                           postinc0	equ	0xFEE
 36333                           plusw0	equ	0xFEB
 36334                           fsr0h	equ	0xFEA
 36335                           fsr0l	equ	0xFE9
 36336                           wreg	equ	0xFE8
 36337                           indf1	equ	0xFE7
 36338                           postinc1	equ	0xFE6
 36339                           postdec1	equ	0xFE5
 36340                           plusw1	equ	0xFE3
 36341                           fsr1h	equ	0xFE2
 36342                           fsr1l	equ	0xFE1
 36343                           indf2	equ	0xFDF
 36344                           postinc2	equ	0xFDE
 36345                           postdec2	equ	0xFDD
 36346                           plusw2	equ	0xFDB
 36347                           fsr2h	equ	0xFDA
 36348                           fsr2l	equ	0xFD9
 36349                           status	equ	0xFD8
 36350                           
 36351 ;; *************** function _ReadByte *****************
 36352 ;; Defined at:
 36353 ;;		line 204 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36354 ;; Parameters:    Size  Location     Type
 36355 ;;		None
 36356 ;; Auto vars:     Size  Location     Type
 36357 ;;  Byte            1   29[BANK0 ] unsigned char 
 36358 ;; Return value:  Size  Location     Type
 36359 ;;                  1    wreg      unsigned char 
 36360 ;; Registers used:
 36361 ;;		wreg, status,2
 36362 ;; Tracked objects:
 36363 ;;		On entry : 0/0
 36364 ;;		On exit  : 0/0
 36365 ;;		Unchanged: 0/0
 36366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36370 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36371 ;;Total ram usage:        1 bytes
 36372 ;; Hardware stack levels used:    1
 36373 ;; Hardware stack levels required when called:   11
 36374 ;; This function calls:
 36375 ;;		Nothing
 36376 ;; This function is called by:
 36377 ;;		_I2c_ReadData
 36378 ;; This function uses a non-reentrant model
 36379 ;;
 36380                           
 36381                           	psect	text173
 36382  006AEC                     __ptext173:
 36383                           	opt stack 0
 36384  006AEC                     _ReadByte:
 36385                           	opt stack 14
 36386                           
 36387                           ;i2c_drv.c: 207: UINT8 Byte;
 36388                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 36389                           
 36390                           ;incstack = 0
 36391  006AEC  CF75 F07D          	movff	3957,ReadByte@Byte	;volatile
 36392                           
 36393                           ;i2c_drv.c: 213: return Byte;
 36394  006AF0  0100               	movlb	0	; () banked
 36395  006AF2  517D               	movf	ReadByte@Byte& (0+255),w,b
 36396  006AF4  0012               	return	
 36397  006AF6                     __end_of_ReadByte:
 36398                           	opt stack 0
 36399                           tosu	equ	0xFFF
 36400                           tosh	equ	0xFFE
 36401                           tosl	equ	0xFFD
 36402                           pclath	equ	0xFFA
 36403                           tblptru	equ	0xFF8
 36404                           tblptrh	equ	0xFF7
 36405                           tblptrl	equ	0xFF6
 36406                           tablat	equ	0xFF5
 36407                           prodh	equ	0xFF4
 36408                           prodl	equ	0xFF3
 36409                           intcon	equ	0xFF2
 36410                           intcon2	equ	0xFF1
 36411                           intcon3	equ	0xFF0
 36412                           indf0	equ	0xFEF
 36413                           postinc0	equ	0xFEE
 36414                           plusw0	equ	0xFEB
 36415                           fsr0h	equ	0xFEA
 36416                           fsr0l	equ	0xFE9
 36417                           wreg	equ	0xFE8
 36418                           indf1	equ	0xFE7
 36419                           postinc1	equ	0xFE6
 36420                           postdec1	equ	0xFE5
 36421                           plusw1	equ	0xFE3
 36422                           fsr1h	equ	0xFE2
 36423                           fsr1l	equ	0xFE1
 36424                           indf2	equ	0xFDF
 36425                           postinc2	equ	0xFDE
 36426                           postdec2	equ	0xFDD
 36427                           plusw2	equ	0xFDB
 36428                           fsr2h	equ	0xFDA
 36429                           fsr2l	equ	0xFD9
 36430                           status	equ	0xFD8
 36431                           
 36432 ;; *************** function _GenerateEvt *****************
 36433 ;; Defined at:
 36434 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 36435 ;; Parameters:    Size  Location     Type
 36436 ;;  Event           2   29[BANK0 ] PTR struct EventStructur
 36437 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 36438 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 36439 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 36440 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 36441 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 36442 ;; Auto vars:     Size  Location     Type
 36443 ;;  EventStatus     1   31[BANK0 ] enum E7727
 36444 ;; Return value:  Size  Location     Type
 36445 ;;                  1    wreg      enum E7699
 36446 ;; Registers used:
 36447 ;;		wreg, fsr2l, fsr2h, status,2
 36448 ;; Tracked objects:
 36449 ;;		On entry : 0/0
 36450 ;;		On exit  : 0/0
 36451 ;;		Unchanged: 0/0
 36452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36456 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36457 ;;Total ram usage:        3 bytes
 36458 ;; Hardware stack levels used:    1
 36459 ;; Hardware stack levels required when called:   11
 36460 ;; This function calls:
 36461 ;;		Nothing
 36462 ;; This function is called by:
 36463 ;;		_I2c_ReadData
 36464 ;;		_CheckModem
 36465 ;;		_TurnOnModem
 36466 ;;		_ConfigureModem
 36467 ;;		_ModemEvtParser
 36468 ;;		_GetSmsSm
 36469 ;;		_Mdm_RequestSmsData
 36470 ;;		_I2cSlv_SendI2cMsg
 36471 ;;		_I2cSlv_ReceiveI2cMsg
 36472 ;;		_RiSm
 36473 ;;		_Mdm_SendSmsData
 36474 ;;		_MdmHttp_InitGprsNetwork
 36475 ;;		_MdmHttp_GetMethod
 36476 ;;		_Alarm
 36477 ;; This function uses a non-reentrant model
 36478 ;;
 36479                           
 36480                           	psect	text174
 36481  006990                     __ptext174:
 36482                           	opt stack 0
 36483  006990                     _GenerateEvt:
 36484                           	opt stack 13
 36485                           
 36486                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 36487                           
 36488                           ; BSR set to: 0
 36489                           ;incstack = 0
 36490  006990  0E00               	movlw	0
 36491  006992  0100               	movlb	0	; () banked
 36492  006994  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36493                           
 36494                           ; BSR set to: 0
 36495                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 36496  006996  C07D  FFD9         	movff	GenerateEvt@Event,fsr2l
 36497  00699A  C07E  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 36498  00699E  0E02               	movlw	2
 36499  0069A0  6EDF               	movwf	indf2,c
 36500                           
 36501                           ; BSR set to: 0
 36502                           ;os_ser.c: 83: EventStatus = EventSent;
 36503  0069A2  0E02               	movlw	2
 36504  0069A4  6F7F               	movwf	GenerateEvt@EventStatus& (0+255),b
 36505  0069A6  0012               	return	
 36506  0069A8                     __end_of_GenerateEvt:
 36507                           	opt stack 0
 36508                           tosu	equ	0xFFF
 36509                           tosh	equ	0xFFE
 36510                           tosl	equ	0xFFD
 36511                           pclath	equ	0xFFA
 36512                           tblptru	equ	0xFF8
 36513                           tblptrh	equ	0xFF7
 36514                           tblptrl	equ	0xFF6
 36515                           tablat	equ	0xFF5
 36516                           prodh	equ	0xFF4
 36517                           prodl	equ	0xFF3
 36518                           intcon	equ	0xFF2
 36519                           intcon2	equ	0xFF1
 36520                           intcon3	equ	0xFF0
 36521                           indf0	equ	0xFEF
 36522                           postinc0	equ	0xFEE
 36523                           plusw0	equ	0xFEB
 36524                           fsr0h	equ	0xFEA
 36525                           fsr0l	equ	0xFE9
 36526                           wreg	equ	0xFE8
 36527                           indf1	equ	0xFE7
 36528                           postinc1	equ	0xFE6
 36529                           postdec1	equ	0xFE5
 36530                           plusw1	equ	0xFE3
 36531                           fsr1h	equ	0xFE2
 36532                           fsr1l	equ	0xFE1
 36533                           indf2	equ	0xFDF
 36534                           postinc2	equ	0xFDE
 36535                           postdec2	equ	0xFDD
 36536                           plusw2	equ	0xFDB
 36537                           fsr2h	equ	0xFDA
 36538                           fsr2l	equ	0xFD9
 36539                           status	equ	0xFD8
 36540                           
 36541 ;; *************** function _EnableReceiver *****************
 36542 ;; Defined at:
 36543 ;;		line 177 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36544 ;; Parameters:    Size  Location     Type
 36545 ;;		None
 36546 ;; Auto vars:     Size  Location     Type
 36547 ;;		None
 36548 ;; Return value:  Size  Location     Type
 36549 ;;                  1    wreg      void 
 36550 ;; Registers used:
 36551 ;;		status,2, status,0
 36552 ;; Tracked objects:
 36553 ;;		On entry : 0/0
 36554 ;;		On exit  : 0/0
 36555 ;;		Unchanged: 0/0
 36556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36561 ;;Total ram usage:        0 bytes
 36562 ;; Hardware stack levels used:    1
 36563 ;; Hardware stack levels required when called:   11
 36564 ;; This function calls:
 36565 ;;		Nothing
 36566 ;; This function is called by:
 36567 ;;		_I2c_ReadData
 36568 ;; This function uses a non-reentrant model
 36569 ;;
 36570                           
 36571                           	psect	text175
 36572  006B2A                     __ptext175:
 36573                           	opt stack 0
 36574  006B2A                     _EnableReceiver:
 36575                           	opt stack 14
 36576                           
 36577                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 36578                           
 36579                           ; BSR set to: 0
 36580                           ;incstack = 0
 36581  006B2A  8671               	bsf	3953,3,c	;volatile
 36582  006B2C  0012               	return		;funcret
 36583  006B2E                     __end_of_EnableReceiver:
 36584                           	opt stack 0
 36585                           tosu	equ	0xFFF
 36586                           tosh	equ	0xFFE
 36587                           tosl	equ	0xFFD
 36588                           pclath	equ	0xFFA
 36589                           tblptru	equ	0xFF8
 36590                           tblptrh	equ	0xFF7
 36591                           tblptrl	equ	0xFF6
 36592                           tablat	equ	0xFF5
 36593                           prodh	equ	0xFF4
 36594                           prodl	equ	0xFF3
 36595                           intcon	equ	0xFF2
 36596                           intcon2	equ	0xFF1
 36597                           intcon3	equ	0xFF0
 36598                           indf0	equ	0xFEF
 36599                           postinc0	equ	0xFEE
 36600                           plusw0	equ	0xFEB
 36601                           fsr0h	equ	0xFEA
 36602                           fsr0l	equ	0xFE9
 36603                           wreg	equ	0xFE8
 36604                           indf1	equ	0xFE7
 36605                           postinc1	equ	0xFE6
 36606                           postdec1	equ	0xFE5
 36607                           plusw1	equ	0xFE3
 36608                           fsr1h	equ	0xFE2
 36609                           fsr1l	equ	0xFE1
 36610                           indf2	equ	0xFDF
 36611                           postinc2	equ	0xFDE
 36612                           postdec2	equ	0xFDD
 36613                           plusw2	equ	0xFDB
 36614                           fsr2h	equ	0xFDA
 36615                           fsr2l	equ	0xFD9
 36616                           status	equ	0xFD8
 36617                           
 36618 ;; *************** function _CheckTxStatus *****************
 36619 ;; Defined at:
 36620 ;;		line 148 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36621 ;; Parameters:    Size  Location     Type
 36622 ;;		None
 36623 ;; Auto vars:     Size  Location     Type
 36624 ;;		None
 36625 ;; Return value:  Size  Location     Type
 36626 ;;                  1    wreg      unsigned char 
 36627 ;; Registers used:
 36628 ;;		wreg, status,2, status,0
 36629 ;; Tracked objects:
 36630 ;;		On entry : 0/0
 36631 ;;		On exit  : 0/0
 36632 ;;		Unchanged: 0/0
 36633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36638 ;;Total ram usage:        0 bytes
 36639 ;; Hardware stack levels used:    1
 36640 ;; Hardware stack levels required when called:   11
 36641 ;; This function calls:
 36642 ;;		Nothing
 36643 ;; This function is called by:
 36644 ;;		_I2c_WriteData
 36645 ;;		_I2c_ReadData
 36646 ;; This function uses a non-reentrant model
 36647 ;;
 36648                           
 36649                           	psect	text176
 36650  006AF6                     __ptext176:
 36651                           	opt stack 0
 36652  006AF6                     _CheckTxStatus:
 36653                           	opt stack 14
 36654                           
 36655                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 36656                           
 36657                           ;incstack = 0
 36658  006AF6  4073               	rrncf	3955,w,c	;volatile
 36659  006AF8  42E8               	rrncf	wreg,f,c
 36660  006AFA  0B3F               	andlw	63
 36661  006AFC  0B01               	andlw	1
 36662  006AFE  0012               	return	
 36663  006B00                     __end_of_CheckTxStatus:
 36664                           	opt stack 0
 36665                           tosu	equ	0xFFF
 36666                           tosh	equ	0xFFE
 36667                           tosl	equ	0xFFD
 36668                           pclath	equ	0xFFA
 36669                           tblptru	equ	0xFF8
 36670                           tblptrh	equ	0xFF7
 36671                           tblptrl	equ	0xFF6
 36672                           tablat	equ	0xFF5
 36673                           prodh	equ	0xFF4
 36674                           prodl	equ	0xFF3
 36675                           intcon	equ	0xFF2
 36676                           intcon2	equ	0xFF1
 36677                           intcon3	equ	0xFF0
 36678                           indf0	equ	0xFEF
 36679                           postinc0	equ	0xFEE
 36680                           plusw0	equ	0xFEB
 36681                           fsr0h	equ	0xFEA
 36682                           fsr0l	equ	0xFE9
 36683                           wreg	equ	0xFE8
 36684                           indf1	equ	0xFE7
 36685                           postinc1	equ	0xFE6
 36686                           postdec1	equ	0xFE5
 36687                           plusw1	equ	0xFE3
 36688                           fsr1h	equ	0xFE2
 36689                           fsr1l	equ	0xFE1
 36690                           indf2	equ	0xFDF
 36691                           postinc2	equ	0xFDE
 36692                           postdec2	equ	0xFDD
 36693                           plusw2	equ	0xFDB
 36694                           fsr2h	equ	0xFDA
 36695                           fsr2l	equ	0xFD9
 36696                           status	equ	0xFD8
 36697                           
 36698 ;; *************** function _CheckAckStatus *****************
 36699 ;; Defined at:
 36700 ;;		line 134 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 36701 ;; Parameters:    Size  Location     Type
 36702 ;;		None
 36703 ;; Auto vars:     Size  Location     Type
 36704 ;;		None
 36705 ;; Return value:  Size  Location     Type
 36706 ;;                  1    wreg      unsigned char 
 36707 ;; Registers used:
 36708 ;;		wreg, status,2, status,0
 36709 ;; Tracked objects:
 36710 ;;		On entry : 0/0
 36711 ;;		On exit  : 0/0
 36712 ;;		Unchanged: 0/0
 36713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36718 ;;Total ram usage:        0 bytes
 36719 ;; Hardware stack levels used:    1
 36720 ;; Hardware stack levels required when called:   11
 36721 ;; This function calls:
 36722 ;;		Nothing
 36723 ;; This function is called by:
 36724 ;;		_I2c_WriteData
 36725 ;;		_I2c_ReadData
 36726 ;; This function uses a non-reentrant model
 36727 ;;
 36728                           
 36729                           	psect	text177
 36730  006B00                     __ptext177:
 36731                           	opt stack 0
 36732  006B00                     _CheckAckStatus:
 36733                           	opt stack 14
 36734                           
 36735                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 36736                           
 36737                           ;incstack = 0
 36738  006B00  4471               	rlncf	3953,w,c	;volatile
 36739  006B02  46E8               	rlncf	wreg,f,c
 36740  006B04  0B03               	andlw	3
 36741  006B06  0B01               	andlw	1
 36742  006B08  0012               	return	
 36743  006B0A                     __end_of_CheckAckStatus:
 36744                           	opt stack 0
 36745                           tosu	equ	0xFFF
 36746                           tosh	equ	0xFFE
 36747                           tosl	equ	0xFFD
 36748                           pclath	equ	0xFFA
 36749                           tblptru	equ	0xFF8
 36750                           tblptrh	equ	0xFF7
 36751                           tblptrl	equ	0xFF6
 36752                           tablat	equ	0xFF5
 36753                           prodh	equ	0xFF4
 36754                           prodl	equ	0xFF3
 36755                           intcon	equ	0xFF2
 36756                           intcon2	equ	0xFF1
 36757                           intcon3	equ	0xFF0
 36758                           indf0	equ	0xFEF
 36759                           postinc0	equ	0xFEE
 36760                           plusw0	equ	0xFEB
 36761                           fsr0h	equ	0xFEA
 36762                           fsr0l	equ	0xFE9
 36763                           wreg	equ	0xFE8
 36764                           indf1	equ	0xFE7
 36765                           postinc1	equ	0xFE6
 36766                           postdec1	equ	0xFE5
 36767                           plusw1	equ	0xFE3
 36768                           fsr1h	equ	0xFE2
 36769                           fsr1l	equ	0xFE1
 36770                           indf2	equ	0xFDF
 36771                           postinc2	equ	0xFDE
 36772                           postdec2	equ	0xFDD
 36773                           plusw2	equ	0xFDB
 36774                           fsr2h	equ	0xFDA
 36775                           fsr2l	equ	0xFD9
 36776                           status	equ	0xFD8
 36777                           
 36778 ;; *************** function _LowPriorityIsr *****************
 36779 ;; Defined at:
 36780 ;;		line 236 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 36781 ;; Parameters:    Size  Location     Type
 36782 ;;		None
 36783 ;; Auto vars:     Size  Location     Type
 36784 ;;		None
 36785 ;; Return value:  Size  Location     Type
 36786 ;;                  1    wreg      void 
 36787 ;; Registers used:
 36788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36789 ;; Tracked objects:
 36790 ;;		On entry : 0/0
 36791 ;;		On exit  : 0/0
 36792 ;;		Unchanged: 0/0
 36793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36796 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36797 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36798 ;;Total ram usage:       21 bytes
 36799 ;; Hardware stack levels used:    1
 36800 ;; Hardware stack levels required when called:   10
 36801 ;; This function calls:
 36802 ;;		_Tmr_Tmr2Isr
 36803 ;; This function is called by:
 36804 ;;		Interrupt level 1
 36805 ;; This function uses a non-reentrant model
 36806 ;;
 36807                           
 36808                           	psect	intcodelo
 36809  000018                     __pintcodelo:
 36810                           	opt stack 0
 36811  000018                     _LowPriorityIsr:
 36812                           	opt stack 8
 36813                           
 36814                           ;incstack = 0
 36815  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 36816  00001A  CFD8 F068          	movff	status,??_LowPriorityIsr
 36817  00001E  CFE8 F069          	movff	wreg,??_LowPriorityIsr+1
 36818  000022  CFE0 F06A          	movff	bsr,??_LowPriorityIsr+2
 36819  000026  CFFA F06B          	movff	pclath,??_LowPriorityIsr+3
 36820  00002A  CFFB F06C          	movff	pclatu,??_LowPriorityIsr+4
 36821  00002E  CFE9 F06D          	movff	fsr0l,??_LowPriorityIsr+5
 36822  000032  CFEA F06E          	movff	fsr0h,??_LowPriorityIsr+6
 36823  000036  CFE1 F06F          	movff	fsr1l,??_LowPriorityIsr+7
 36824  00003A  CFE2 F070          	movff	fsr1h,??_LowPriorityIsr+8
 36825  00003E  CFD9 F071          	movff	fsr2l,??_LowPriorityIsr+9
 36826  000042  CFDA F072          	movff	fsr2h,??_LowPriorityIsr+10
 36827  000046  CFF3 F073          	movff	prodl,??_LowPriorityIsr+11
 36828  00004A  CFF4 F074          	movff	prodh,??_LowPriorityIsr+12
 36829  00004E  CFF6 F075          	movff	tblptrl,??_LowPriorityIsr+13
 36830  000052  CFF7 F076          	movff	tblptrh,??_LowPriorityIsr+14
 36831  000056  CFF8 F077          	movff	tblptru,??_LowPriorityIsr+15
 36832  00005A  CFF5 F078          	movff	tablat,??_LowPriorityIsr+16
 36833  00005E  C042  F079         	movff	btemp,??_LowPriorityIsr+17
 36834  000062  C043  F07A         	movff	btemp+1,??_LowPriorityIsr+18
 36835  000066  C044  F07B         	movff	btemp+2,??_LowPriorityIsr+19
 36836  00006A  C045  F07C         	movff	btemp+3,??_LowPriorityIsr+20
 36837                           
 36838                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 36839  00006E  B29E               	btfsc	3998,1,c	;volatile
 36840                           
 36841                           ;irq.c: 259: {
 36842                           ;irq.c: 261: Tmr_Tmr2Isr();
 36843  000070  EC8B  F033         	call	_Tmr_Tmr2Isr	;wreg free
 36844  000074  C07C  F045         	movff	??_LowPriorityIsr+20,btemp+3
 36845  000078  C07B  F044         	movff	??_LowPriorityIsr+19,btemp+2
 36846  00007C  C07A  F043         	movff	??_LowPriorityIsr+18,btemp+1
 36847  000080  C079  F042         	movff	??_LowPriorityIsr+17,btemp
 36848  000084  C078  FFF5         	movff	??_LowPriorityIsr+16,tablat
 36849  000088  C077  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 36850  00008C  C076  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 36851  000090  C075  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 36852  000094  C074  FFF4         	movff	??_LowPriorityIsr+12,prodh
 36853  000098  C073  FFF3         	movff	??_LowPriorityIsr+11,prodl
 36854  00009C  C072  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 36855  0000A0  C071  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 36856  0000A4  C070  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 36857  0000A8  C06F  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 36858  0000AC  C06E  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 36859  0000B0  C06D  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 36860  0000B4  C06C  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 36861  0000B8  C06B  FFFA         	movff	??_LowPriorityIsr+3,pclath
 36862  0000BC  C06A  FFE0         	movff	??_LowPriorityIsr+2,bsr
 36863  0000C0  C069  FFE8         	movff	??_LowPriorityIsr+1,wreg
 36864  0000C4  C068  FFD8         	movff	??_LowPriorityIsr,status
 36865  0000C8  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 36866  0000CA  0010               	retfie	
 36867  0000CC                     __end_of_LowPriorityIsr:
 36868                           	opt stack 0
 36869                           tosu	equ	0xFFF
 36870                           tosh	equ	0xFFE
 36871                           tosl	equ	0xFFD
 36872                           pclatu	equ	0xFFB
 36873                           pclath	equ	0xFFA
 36874                           tblptru	equ	0xFF8
 36875                           tblptrh	equ	0xFF7
 36876                           tblptrl	equ	0xFF6
 36877                           tablat	equ	0xFF5
 36878                           prodh	equ	0xFF4
 36879                           prodl	equ	0xFF3
 36880                           intcon	equ	0xFF2
 36881                           intcon2	equ	0xFF1
 36882                           intcon3	equ	0xFF0
 36883                           indf0	equ	0xFEF
 36884                           postinc0	equ	0xFEE
 36885                           plusw0	equ	0xFEB
 36886                           fsr0h	equ	0xFEA
 36887                           fsr0l	equ	0xFE9
 36888                           wreg	equ	0xFE8
 36889                           indf1	equ	0xFE7
 36890                           postinc1	equ	0xFE6
 36891                           postdec1	equ	0xFE5
 36892                           plusw1	equ	0xFE3
 36893                           fsr1h	equ	0xFE2
 36894                           fsr1l	equ	0xFE1
 36895                           bsr	equ	0xFE0
 36896                           indf2	equ	0xFDF
 36897                           postinc2	equ	0xFDE
 36898                           postdec2	equ	0xFDD
 36899                           plusw2	equ	0xFDB
 36900                           fsr2h	equ	0xFDA
 36901                           fsr2l	equ	0xFD9
 36902                           status	equ	0xFD8
 36903                           
 36904 ;; *************** function _Tmr_Tmr2Isr *****************
 36905 ;; Defined at:
 36906 ;;		line 308 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 36907 ;; Parameters:    Size  Location     Type
 36908 ;;		None
 36909 ;; Auto vars:     Size  Location     Type
 36910 ;;		None
 36911 ;; Return value:  Size  Location     Type
 36912 ;;                  1    wreg      void 
 36913 ;; Registers used:
 36914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36915 ;; Tracked objects:
 36916 ;;		On entry : 0/0
 36917 ;;		On exit  : 0/0
 36918 ;;		Unchanged: 0/0
 36919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36924 ;;Total ram usage:        0 bytes
 36925 ;; Hardware stack levels used:    1
 36926 ;; Hardware stack levels required when called:    9
 36927 ;; This function calls:
 36928 ;;		Absolute function
 36929 ;;		_Sch_SchmIntService
 36930 ;; This function is called by:
 36931 ;;		_LowPriorityIsr
 36932 ;; This function uses a non-reentrant model
 36933 ;;
 36934                           
 36935                           	psect	text179
 36936  006716                     __ptext179:
 36937                           	opt stack 0
 36938  006716                     _Tmr_Tmr2Isr:
 36939                           	opt stack 8
 36940                           
 36941                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 36942                           
 36943                           ;incstack = 0
 36944  006716  929E               	bcf	3998,1,c	;volatile
 36945                           
 36946                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 36947  006718  0102               	movlb	2	; () banked
 36948  00671A  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 36949  00671C  11EB               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36950  00671E  B4D8               	btfsc	status,2,c
 36951  006720  0012               	return	
 36952                           
 36953                           ; BSR set to: 2
 36954                           ;tmr_drv.c: 315: {
 36955                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 36956  006722  D801               	call	i1u1638_28
 36957  006724  0012               	return	
 36958  006726                     i1u1638_28:
 36959  006726  0005               	push	
 36960  006728  6EFA               	movwf	pclath,c
 36961  00672A  51EA               	movf	_Tmr2IsrCallback& (0+255),w,b
 36962  00672C  6EFD               	movwf	tosl,c
 36963  00672E  51EB               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 36964  006730  6EFE               	movwf	tosh,c
 36965  006732  50F8               	movf	tblptru,w,c
 36966  006734  6EFF               	movwf	tosu,c
 36967  006736  50FA               	movf	pclath,w,c
 36968  006738  0012               	return		;indir
 36969  00673A                     __end_of_Tmr_Tmr2Isr:
 36970                           	opt stack 0
 36971                           tosu	equ	0xFFF
 36972                           tosh	equ	0xFFE
 36973                           tosl	equ	0xFFD
 36974                           pclatu	equ	0xFFB
 36975                           pclath	equ	0xFFA
 36976                           tblptru	equ	0xFF8
 36977                           tblptrh	equ	0xFF7
 36978                           tblptrl	equ	0xFF6
 36979                           tablat	equ	0xFF5
 36980                           prodh	equ	0xFF4
 36981                           prodl	equ	0xFF3
 36982                           intcon	equ	0xFF2
 36983                           intcon2	equ	0xFF1
 36984                           intcon3	equ	0xFF0
 36985                           indf0	equ	0xFEF
 36986                           postinc0	equ	0xFEE
 36987                           plusw0	equ	0xFEB
 36988                           fsr0h	equ	0xFEA
 36989                           fsr0l	equ	0xFE9
 36990                           wreg	equ	0xFE8
 36991                           indf1	equ	0xFE7
 36992                           postinc1	equ	0xFE6
 36993                           postdec1	equ	0xFE5
 36994                           plusw1	equ	0xFE3
 36995                           fsr1h	equ	0xFE2
 36996                           fsr1l	equ	0xFE1
 36997                           bsr	equ	0xFE0
 36998                           indf2	equ	0xFDF
 36999                           postinc2	equ	0xFDE
 37000                           postdec2	equ	0xFDD
 37001                           plusw2	equ	0xFDB
 37002                           fsr2h	equ	0xFDA
 37003                           fsr2l	equ	0xFD9
 37004                           status	equ	0xFD8
 37005                           
 37006 ;; *************** function _Sch_SchmIntService *****************
 37007 ;; Defined at:
 37008 ;;		line 214 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37009 ;; Parameters:    Size  Location     Type
 37010 ;;		None
 37011 ;; Auto vars:     Size  Location     Type
 37012 ;;		None
 37013 ;; Return value:  Size  Location     Type
 37014 ;;                  1    wreg      void 
 37015 ;; Registers used:
 37016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37017 ;; Tracked objects:
 37018 ;;		On entry : 0/0
 37019 ;;		On exit  : 0/0
 37020 ;;		Unchanged: 0/0
 37021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37026 ;;Total ram usage:        0 bytes
 37027 ;; Hardware stack levels used:    1
 37028 ;; Hardware stack levels required when called:    8
 37029 ;; This function calls:
 37030 ;;		_OsAlrm_ProcessOsAlarms
 37031 ;;		_UpdateOsCounters
 37032 ;;		_UpdateSchFlag
 37033 ;; This function is called by:
 37034 ;;		_SystemInit
 37035 ;;		_Tmr_Tmr2Isr
 37036 ;; This function uses a non-reentrant model
 37037 ;;
 37038                           
 37039                           	psect	text180
 37040  006A9A                     __ptext180:
 37041                           	opt stack 0
 37042  006A9A                     _Sch_SchmIntService:
 37043                           	opt stack 8
 37044                           
 37045                           ;os_sched.c: 217: UpdateSchFlag();
 37046                           
 37047                           ;incstack = 0
 37048  006A9A  EC60  F034         	call	_UpdateSchFlag	;wreg free
 37049                           
 37050                           ;os_sched.c: 219: UpdateOsCounters();
 37051  006A9E  EC3D  F035         	call	_UpdateOsCounters	;wreg free
 37052                           
 37053                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 37054  006AA2  EC1A  F012         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 37055  006AA6  0012               	return		;funcret
 37056  006AA8                     __end_of_Sch_SchmIntService:
 37057                           	opt stack 0
 37058                           tosu	equ	0xFFF
 37059                           tosh	equ	0xFFE
 37060                           tosl	equ	0xFFD
 37061                           pclatu	equ	0xFFB
 37062                           pclath	equ	0xFFA
 37063                           tblptru	equ	0xFF8
 37064                           tblptrh	equ	0xFF7
 37065                           tblptrl	equ	0xFF6
 37066                           tablat	equ	0xFF5
 37067                           prodh	equ	0xFF4
 37068                           prodl	equ	0xFF3
 37069                           intcon	equ	0xFF2
 37070                           intcon2	equ	0xFF1
 37071                           intcon3	equ	0xFF0
 37072                           indf0	equ	0xFEF
 37073                           postinc0	equ	0xFEE
 37074                           plusw0	equ	0xFEB
 37075                           fsr0h	equ	0xFEA
 37076                           fsr0l	equ	0xFE9
 37077                           wreg	equ	0xFE8
 37078                           indf1	equ	0xFE7
 37079                           postinc1	equ	0xFE6
 37080                           postdec1	equ	0xFE5
 37081                           plusw1	equ	0xFE3
 37082                           fsr1h	equ	0xFE2
 37083                           fsr1l	equ	0xFE1
 37084                           bsr	equ	0xFE0
 37085                           indf2	equ	0xFDF
 37086                           postinc2	equ	0xFDE
 37087                           postdec2	equ	0xFDD
 37088                           plusw2	equ	0xFDB
 37089                           fsr2h	equ	0xFDA
 37090                           fsr2l	equ	0xFD9
 37091                           status	equ	0xFD8
 37092                           
 37093 ;; *************** function _UpdateSchFlag *****************
 37094 ;; Defined at:
 37095 ;;		line 132 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37096 ;; Parameters:    Size  Location     Type
 37097 ;;		None
 37098 ;; Auto vars:     Size  Location     Type
 37099 ;;		None
 37100 ;; Return value:  Size  Location     Type
 37101 ;;                  1    wreg      void 
 37102 ;; Registers used:
 37103 ;;		wreg, status,2, status,0
 37104 ;; Tracked objects:
 37105 ;;		On entry : 0/0
 37106 ;;		On exit  : 0/0
 37107 ;;		Unchanged: 0/0
 37108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37113 ;;Total ram usage:        0 bytes
 37114 ;; Hardware stack levels used:    1
 37115 ;; Hardware stack levels required when called:    4
 37116 ;; This function calls:
 37117 ;;		Nothing
 37118 ;; This function is called by:
 37119 ;;		_Sch_SchmIntService
 37120 ;; This function uses a non-reentrant model
 37121 ;;
 37122                           
 37123                           	psect	text181
 37124  0068C0                     __ptext181:
 37125                           	opt stack 0
 37126  0068C0                     _UpdateSchFlag:
 37127                           	opt stack 11
 37128                           
 37129                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 37130                           ;os_sched.c: 138: InterruptCounter++;
 37131                           
 37132                           ;incstack = 0
 37133  0068C0  0102               	movlb	2	; () banked
 37134  0068C2  4BDC               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 37135  0068C4  2BDD               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 37136                           
 37137                           ; BSR set to: 2
 37138                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 37139  0068C6  51DC               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 37140  0068C8  11DD               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 37141  0068CA  B4D8               	btfsc	status,2,c
 37142  0068CC  0012               	return	
 37143                           
 37144                           ; BSR set to: 2
 37145                           ;os_sched.c: 141: {
 37146                           ;os_sched.c: 143: InterruptCounter = 0;
 37147  0068CE  0E00               	movlw	0
 37148  0068D0  6FDD               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 37149  0068D2  0E00               	movlw	0
 37150  0068D4  6FDC               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 37151                           
 37152                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 37153  0068D6  0E00               	movlw	0
 37154  0068D8  6FF4               	movwf	_MainSystemTimebaseFlag& (0+255),b
 37155  0068DA  0012               	return	
 37156  0068DC                     __end_of_UpdateSchFlag:
 37157                           	opt stack 0
 37158                           tosu	equ	0xFFF
 37159                           tosh	equ	0xFFE
 37160                           tosl	equ	0xFFD
 37161                           pclatu	equ	0xFFB
 37162                           pclath	equ	0xFFA
 37163                           tblptru	equ	0xFF8
 37164                           tblptrh	equ	0xFF7
 37165                           tblptrl	equ	0xFF6
 37166                           tablat	equ	0xFF5
 37167                           prodh	equ	0xFF4
 37168                           prodl	equ	0xFF3
 37169                           intcon	equ	0xFF2
 37170                           intcon2	equ	0xFF1
 37171                           intcon3	equ	0xFF0
 37172                           indf0	equ	0xFEF
 37173                           postinc0	equ	0xFEE
 37174                           plusw0	equ	0xFEB
 37175                           fsr0h	equ	0xFEA
 37176                           fsr0l	equ	0xFE9
 37177                           wreg	equ	0xFE8
 37178                           indf1	equ	0xFE7
 37179                           postinc1	equ	0xFE6
 37180                           postdec1	equ	0xFE5
 37181                           plusw1	equ	0xFE3
 37182                           fsr1h	equ	0xFE2
 37183                           fsr1l	equ	0xFE1
 37184                           bsr	equ	0xFE0
 37185                           indf2	equ	0xFDF
 37186                           postinc2	equ	0xFDE
 37187                           postdec2	equ	0xFDD
 37188                           plusw2	equ	0xFDB
 37189                           fsr2h	equ	0xFDA
 37190                           fsr2l	equ	0xFD9
 37191                           status	equ	0xFD8
 37192                           
 37193 ;; *************** function _UpdateOsCounters *****************
 37194 ;; Defined at:
 37195 ;;		line 157 in file "../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 37196 ;; Parameters:    Size  Location     Type
 37197 ;;		None
 37198 ;; Auto vars:     Size  Location     Type
 37199 ;;		None
 37200 ;; Return value:  Size  Location     Type
 37201 ;;                  1    wreg      void 
 37202 ;; Registers used:
 37203 ;;		wreg, status,2, status,0
 37204 ;; Tracked objects:
 37205 ;;		On entry : 0/0
 37206 ;;		On exit  : 0/0
 37207 ;;		Unchanged: 0/0
 37208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37213 ;;Total ram usage:        0 bytes
 37214 ;; Hardware stack levels used:    1
 37215 ;; Hardware stack levels required when called:    4
 37216 ;; This function calls:
 37217 ;;		Nothing
 37218 ;; This function is called by:
 37219 ;;		_Sch_SchmIntService
 37220 ;; This function uses a non-reentrant model
 37221 ;;
 37222                           
 37223                           	psect	text182
 37224  006A7A                     __ptext182:
 37225                           	opt stack 0
 37226  006A7A                     _UpdateOsCounters:
 37227                           	opt stack 11
 37228                           
 37229                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 37230                           
 37231                           ; BSR set to: 2
 37232                           ;incstack = 0
 37233  006A7A  0E01               	movlw	1
 37234  006A7C  0103               	movlb	3	; () banked
 37235  006A7E  2714               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 37236  006A80  0E00               	movlw	0
 37237  006A82  2315               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 37238  006A84  2316               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 37239  006A86  2317               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 37240                           
 37241                           ; BSR set to: 3
 37242  006A88  0012               	return		;funcret
 37243  006A8A                     __end_of_UpdateOsCounters:
 37244                           	opt stack 0
 37245                           tosu	equ	0xFFF
 37246                           tosh	equ	0xFFE
 37247                           tosl	equ	0xFFD
 37248                           pclatu	equ	0xFFB
 37249                           pclath	equ	0xFFA
 37250                           tblptru	equ	0xFF8
 37251                           tblptrh	equ	0xFF7
 37252                           tblptrl	equ	0xFF6
 37253                           tablat	equ	0xFF5
 37254                           prodh	equ	0xFF4
 37255                           prodl	equ	0xFF3
 37256                           intcon	equ	0xFF2
 37257                           intcon2	equ	0xFF1
 37258                           intcon3	equ	0xFF0
 37259                           indf0	equ	0xFEF
 37260                           postinc0	equ	0xFEE
 37261                           plusw0	equ	0xFEB
 37262                           fsr0h	equ	0xFEA
 37263                           fsr0l	equ	0xFE9
 37264                           wreg	equ	0xFE8
 37265                           indf1	equ	0xFE7
 37266                           postinc1	equ	0xFE6
 37267                           postdec1	equ	0xFE5
 37268                           plusw1	equ	0xFE3
 37269                           fsr1h	equ	0xFE2
 37270                           fsr1l	equ	0xFE1
 37271                           bsr	equ	0xFE0
 37272                           indf2	equ	0xFDF
 37273                           postinc2	equ	0xFDE
 37274                           postdec2	equ	0xFDD
 37275                           plusw2	equ	0xFDB
 37276                           fsr2h	equ	0xFDA
 37277                           fsr2l	equ	0xFD9
 37278                           status	equ	0xFD8
 37279                           
 37280 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 37281 ;; Defined at:
 37282 ;;		line 115 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37283 ;; Parameters:    Size  Location     Type
 37284 ;;		None
 37285 ;; Auto vars:     Size  Location     Type
 37286 ;;  AlarmIndex      2   32[COMRAM] unsigned short 
 37287 ;; Return value:  Size  Location     Type
 37288 ;;                  1    wreg      void 
 37289 ;; Registers used:
 37290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37291 ;; Tracked objects:
 37292 ;;		On entry : 0/0
 37293 ;;		On exit  : 0/0
 37294 ;;		Unchanged: 0/0
 37295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37298 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37299 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37300 ;;Total ram usage:       10 bytes
 37301 ;; Hardware stack levels used:    1
 37302 ;; Hardware stack levels required when called:    7
 37303 ;; This function calls:
 37304 ;;		_I2cDummyTx
 37305 ;;		_OsAlrm_ClearOsAlarm
 37306 ;;		i1___wmul
 37307 ;; This function is called by:
 37308 ;;		_Sch_SchmIntService
 37309 ;; This function uses a non-reentrant model
 37310 ;;
 37311                           
 37312                           	psect	text183
 37313  002434                     __ptext183:
 37314                           	opt stack 0
 37315  002434                     _OsAlrm_ProcessOsAlarms:
 37316                           	opt stack 8
 37317                           
 37318                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 37319                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 37320                           
 37321                           ; BSR set to: 3
 37322                           ;incstack = 0
 37323  002434  0E00               	movlw	0
 37324  002436  6E22               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 37325  002438  0E00               	movlw	0
 37326  00243A  6E21               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 37327  00243C  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37328  00243E  E105               	bnz	i1u1613_20
 37329  002440  0E14               	movlw	20
 37330  002442  5C21               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37331  002444  B0D8               	btfsc	status,0,c
 37332  002446  0012               	return	
 37333  002448  D001               	goto	i1l742
 37334  00244A                     i1u1613_20:
 37335  00244A  0012               	return	
 37336  00244C                     i1l742:
 37337                           
 37338                           ;os_alarms.c: 121: {
 37339                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 37340  00244C  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37341  002450  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37342  002454  0E00               	movlw	0
 37343  002456  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37344  002458  0E0B               	movlw	11
 37345  00245A  6E1B               	movwf	i1___wmul@multiplicand,c
 37346  00245C  EC42  F033         	call	i1___wmul	;wreg free
 37347  002460  0E00               	movlw	low _OsAlarms
 37348  002462  2419               	addwf	?i1___wmul,w,c
 37349  002464  6ED9               	movwf	fsr2l,c
 37350  002466  0E06               	movlw	high _OsAlarms
 37351  002468  201A               	addwfc	?i1___wmul+1,w,c
 37352  00246A  6EDA               	movwf	fsr2h,c
 37353  00246C  04DE               	decf	postinc2,w,c
 37354  00246E  A4D8               	btfss	status,2,c
 37355  002470  D086               	goto	i1u1617_29
 37356                           
 37357                           ;os_alarms.c: 124: {
 37358                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 37359  002472  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37360  002476  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37361  00247A  0E00               	movlw	0
 37362  00247C  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37363  00247E  0E0B               	movlw	11
 37364  002480  6E1B               	movwf	i1___wmul@multiplicand,c
 37365  002482  EC42  F033         	call	i1___wmul	;wreg free
 37366  002486  0E01               	movlw	1
 37367  002488  2619               	addwf	?i1___wmul,f,c
 37368  00248A  0E00               	movlw	0
 37369  00248C  221A               	addwfc	?i1___wmul+1,f,c
 37370  00248E  0E00               	movlw	low _OsAlarms
 37371  002490  2419               	addwf	?i1___wmul,w,c
 37372  002492  6ED9               	movwf	fsr2l,c
 37373  002494  0E06               	movlw	high _OsAlarms
 37374  002496  201A               	addwfc	?i1___wmul+1,w,c
 37375  002498  6EDA               	movwf	fsr2h,c
 37376  00249A  2ADE               	incf	postinc2,f,c
 37377  00249C  0E00               	movlw	0
 37378  00249E  22DE               	addwfc	postinc2,f,c
 37379  0024A0  22DE               	addwfc	postinc2,f,c
 37380  0024A2  22DE               	addwfc	postinc2,f,c
 37381                           
 37382                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 37383  0024A4  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37384  0024A8  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37385  0024AC  0E00               	movlw	0
 37386  0024AE  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37387  0024B0  0E0B               	movlw	11
 37388  0024B2  6E1B               	movwf	i1___wmul@multiplicand,c
 37389  0024B4  EC42  F033         	call	i1___wmul	;wreg free
 37390  0024B8  0E05               	movlw	5
 37391  0024BA  2619               	addwf	?i1___wmul,f,c
 37392  0024BC  0E00               	movlw	0
 37393  0024BE  221A               	addwfc	?i1___wmul+1,f,c
 37394  0024C0  0E00               	movlw	low _OsAlarms
 37395  0024C2  2419               	addwf	?i1___wmul,w,c
 37396  0024C4  6ED9               	movwf	fsr2l,c
 37397  0024C6  0E06               	movlw	high _OsAlarms
 37398  0024C8  201A               	addwfc	?i1___wmul+1,w,c
 37399  0024CA  6EDA               	movwf	fsr2h,c
 37400  0024CC  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37401  0024D0  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37402  0024D4  0E00               	movlw	0
 37403  0024D6  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37404  0024D8  0E0B               	movlw	11
 37405  0024DA  6E1B               	movwf	i1___wmul@multiplicand,c
 37406  0024DC  EC42  F033         	call	i1___wmul	;wreg free
 37407  0024E0  0E01               	movlw	1
 37408  0024E2  2619               	addwf	?i1___wmul,f,c
 37409  0024E4  0E00               	movlw	0
 37410  0024E6  221A               	addwfc	?i1___wmul+1,f,c
 37411  0024E8  0E00               	movlw	low _OsAlarms
 37412  0024EA  2419               	addwf	?i1___wmul,w,c
 37413  0024EC  6EE1               	movwf	fsr1l,c
 37414  0024EE  0E06               	movlw	high _OsAlarms
 37415  0024F0  201A               	addwfc	?i1___wmul+1,w,c
 37416  0024F2  6EE2               	movwf	fsr1h,c
 37417  0024F4  50DE               	movf	postinc2,w,c
 37418  0024F6  5CE6               	subwf	postinc1,w,c
 37419  0024F8  50DE               	movf	postinc2,w,c
 37420  0024FA  58E6               	subwfb	postinc1,w,c
 37421  0024FC  50DE               	movf	postinc2,w,c
 37422  0024FE  58E6               	subwfb	postinc1,w,c
 37423  002500  50DE               	movf	postinc2,w,c
 37424  002502  58E6               	subwfb	postinc1,w,c
 37425  002504  A0D8               	btfss	status,0,c
 37426  002506  D03B               	goto	i1u1617_29
 37427                           
 37428                           ;os_alarms.c: 129: {
 37429                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 37430  002508  5021               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 37431  00250A  EC12  F02D         	call	_OsAlrm_ClearOsAlarm
 37432                           
 37433                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 37434  00250E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37435  002512  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37436  002516  0E00               	movlw	0
 37437  002518  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37438  00251A  0E0B               	movlw	11
 37439  00251C  6E1B               	movwf	i1___wmul@multiplicand,c
 37440  00251E  EC42  F033         	call	i1___wmul	;wreg free
 37441  002522  0E09               	movlw	9
 37442  002524  2619               	addwf	?i1___wmul,f,c
 37443  002526  0E00               	movlw	0
 37444  002528  221A               	addwfc	?i1___wmul+1,f,c
 37445  00252A  0E00               	movlw	low _OsAlarms
 37446  00252C  2419               	addwf	?i1___wmul,w,c
 37447  00252E  6ED9               	movwf	fsr2l,c
 37448  002530  0E06               	movlw	high _OsAlarms
 37449  002532  201A               	addwfc	?i1___wmul+1,w,c
 37450  002534  6EDA               	movwf	fsr2h,c
 37451  002536  50DE               	movf	postinc2,w,c
 37452  002538  10DE               	iorwf	postinc2,w,c
 37453  00253A  B4D8               	btfsc	status,2,c
 37454  00253C  D020               	goto	i1u1617_29
 37455                           
 37456                           ;os_alarms.c: 134: {
 37457                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 37458  00253E  C021  F019         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 37459  002542  C022  F01A         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 37460  002546  0E00               	movlw	0
 37461  002548  6E1C               	movwf	i1___wmul@multiplicand+1,c
 37462  00254A  0E0B               	movlw	11
 37463  00254C  6E1B               	movwf	i1___wmul@multiplicand,c
 37464  00254E  EC42  F033         	call	i1___wmul	;wreg free
 37465  002552  0E09               	movlw	9
 37466  002554  2619               	addwf	?i1___wmul,f,c
 37467  002556  0E00               	movlw	0
 37468  002558  221A               	addwfc	?i1___wmul+1,f,c
 37469  00255A  0E00               	movlw	low _OsAlarms
 37470  00255C  2419               	addwf	?i1___wmul,w,c
 37471  00255E  6ED9               	movwf	fsr2l,c
 37472  002560  0E06               	movlw	high _OsAlarms
 37473  002562  201A               	addwfc	?i1___wmul+1,w,c
 37474  002564  6EDA               	movwf	fsr2h,c
 37475  002566  D801               	call	i1u1617_28
 37476  002568  D00A               	goto	i1u1617_29
 37477  00256A                     i1u1617_28:
 37478  00256A  0005               	push	
 37479  00256C  6EFA               	movwf	pclath,c
 37480  00256E  50DE               	movf	postinc2,w,c
 37481  002570  6EFD               	movwf	tosl,c
 37482  002572  50DE               	movf	postinc2,w,c
 37483  002574  6EFE               	movwf	tosh,c
 37484  002576  50F8               	movf	tblptru,w,c
 37485  002578  6EFF               	movwf	tosu,c
 37486  00257A  50FA               	movf	pclath,w,c
 37487  00257C  0012               	return		;indir
 37488  00257E                     i1u1617_29:
 37489  00257E  4A21               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 37490  002580  2A22               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 37491  002582  5022               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 37492  002584  E101               	bnz	i1l747
 37493  002586  D75C               	goto	L99
 37494  002588                     i1l747:
 37495  002588  0012               	return		;funcret
 37496  00258A                     __end_of_OsAlrm_ProcessOsAlarms:
 37497                           	opt stack 0
 37498                           tosu	equ	0xFFF
 37499                           tosh	equ	0xFFE
 37500                           tosl	equ	0xFFD
 37501                           pclatu	equ	0xFFB
 37502                           pclath	equ	0xFFA
 37503                           tblptru	equ	0xFF8
 37504                           tblptrh	equ	0xFF7
 37505                           tblptrl	equ	0xFF6
 37506                           tablat	equ	0xFF5
 37507                           prodh	equ	0xFF4
 37508                           prodl	equ	0xFF3
 37509                           intcon	equ	0xFF2
 37510                           intcon2	equ	0xFF1
 37511                           intcon3	equ	0xFF0
 37512                           indf0	equ	0xFEF
 37513                           postinc0	equ	0xFEE
 37514                           plusw0	equ	0xFEB
 37515                           fsr0h	equ	0xFEA
 37516                           fsr0l	equ	0xFE9
 37517                           wreg	equ	0xFE8
 37518                           indf1	equ	0xFE7
 37519                           postinc1	equ	0xFE6
 37520                           postdec1	equ	0xFE5
 37521                           plusw1	equ	0xFE3
 37522                           fsr1h	equ	0xFE2
 37523                           fsr1l	equ	0xFE1
 37524                           bsr	equ	0xFE0
 37525                           indf2	equ	0xFDF
 37526                           postinc2	equ	0xFDE
 37527                           postdec2	equ	0xFDD
 37528                           plusw2	equ	0xFDB
 37529                           fsr2h	equ	0xFDA
 37530                           fsr2l	equ	0xFD9
 37531                           status	equ	0xFD8
 37532                           
 37533 ;; *************** function i1___wmul *****************
 37534 ;; Defined at:
 37535 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
 37536 ;; Parameters:    Size  Location     Type
 37537 ;;  multiplier      2   24[COMRAM] unsigned int 
 37538 ;;  multiplicand    2   26[COMRAM] unsigned int 
 37539 ;; Auto vars:     Size  Location     Type
 37540 ;;  __wmul          2   28[COMRAM] unsigned int 
 37541 ;; Return value:  Size  Location     Type
 37542 ;;                  2   24[COMRAM] unsigned int 
 37543 ;; Registers used:
 37544 ;;		wreg, status,2, status,0, prodl, prodh
 37545 ;; Tracked objects:
 37546 ;;		On entry : 0/0
 37547 ;;		On exit  : 0/0
 37548 ;;		Unchanged: 0/0
 37549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37554 ;;Total ram usage:        6 bytes
 37555 ;; Hardware stack levels used:    1
 37556 ;; Hardware stack levels required when called:    4
 37557 ;; This function calls:
 37558 ;;		Nothing
 37559 ;; This function is called by:
 37560 ;;		_OsAlrm_ProcessOsAlarms
 37561 ;; This function uses a non-reentrant model
 37562 ;;
 37563                           
 37564                           	psect	text184
 37565  006684                     __ptext184:
 37566                           	opt stack 0
 37567  006684                     i1___wmul:
 37568                           	opt stack 10
 37569                           
 37570                           ;incstack = 0
 37571  006684  5019               	movf	i1___wmul@multiplier,w,c
 37572  006686  021B               	mulwf	i1___wmul@multiplicand,c
 37573  006688  CFF3 F01D          	movff	prodl,i1___wmul@product
 37574  00668C  CFF4 F01E          	movff	prodh,i1___wmul@product+1
 37575  006690  5019               	movf	i1___wmul@multiplier,w,c
 37576  006692  021C               	mulwf	i1___wmul@multiplicand+1,c
 37577  006694  50F3               	movf	prodl,w,c
 37578  006696  261E               	addwf	i1___wmul@product+1,f,c
 37579  006698  501A               	movf	i1___wmul@multiplier+1,w,c
 37580  00669A  021B               	mulwf	i1___wmul@multiplicand,c
 37581  00669C  50F3               	movf	prodl,w,c
 37582  00669E  261E               	addwf	i1___wmul@product+1,f,c
 37583  0066A0  C01D  F019         	movff	i1___wmul@product,?i1___wmul
 37584  0066A4  C01E  F01A         	movff	i1___wmul@product+1,?i1___wmul+1
 37585  0066A8  0012               	return	
 37586  0066AA                     __end_ofi1___wmul:
 37587                           	opt stack 0
 37588                           tosu	equ	0xFFF
 37589                           tosh	equ	0xFFE
 37590                           tosl	equ	0xFFD
 37591                           pclatu	equ	0xFFB
 37592                           pclath	equ	0xFFA
 37593                           tblptru	equ	0xFF8
 37594                           tblptrh	equ	0xFF7
 37595                           tblptrl	equ	0xFF6
 37596                           tablat	equ	0xFF5
 37597                           prodh	equ	0xFF4
 37598                           prodl	equ	0xFF3
 37599                           intcon	equ	0xFF2
 37600                           intcon2	equ	0xFF1
 37601                           intcon3	equ	0xFF0
 37602                           indf0	equ	0xFEF
 37603                           postinc0	equ	0xFEE
 37604                           plusw0	equ	0xFEB
 37605                           fsr0h	equ	0xFEA
 37606                           fsr0l	equ	0xFE9
 37607                           wreg	equ	0xFE8
 37608                           indf1	equ	0xFE7
 37609                           postinc1	equ	0xFE6
 37610                           postdec1	equ	0xFE5
 37611                           plusw1	equ	0xFE3
 37612                           fsr1h	equ	0xFE2
 37613                           fsr1l	equ	0xFE1
 37614                           bsr	equ	0xFE0
 37615                           indf2	equ	0xFDF
 37616                           postinc2	equ	0xFDE
 37617                           postdec2	equ	0xFDD
 37618                           plusw2	equ	0xFDB
 37619                           fsr2h	equ	0xFDA
 37620                           fsr2l	equ	0xFD9
 37621                           status	equ	0xFD8
 37622                           
 37623 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 37624 ;; Defined at:
 37625 ;;		line 97 in file "../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 37626 ;; Parameters:    Size  Location     Type
 37627 ;;  OsAlarmId       1    wreg     unsigned char 
 37628 ;; Auto vars:     Size  Location     Type
 37629 ;;  OsAlarmId       1   24[COMRAM] unsigned char 
 37630 ;; Return value:  Size  Location     Type
 37631 ;;                  1    wreg      void 
 37632 ;; Registers used:
 37633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37634 ;; Tracked objects:
 37635 ;;		On entry : 0/0
 37636 ;;		On exit  : 0/0
 37637 ;;		Unchanged: 0/0
 37638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37643 ;;Total ram usage:        1 bytes
 37644 ;; Hardware stack levels used:    1
 37645 ;; Hardware stack levels required when called:    4
 37646 ;; This function calls:
 37647 ;;		Nothing
 37648 ;; This function is called by:
 37649 ;;		_OsAlrm_ProcessOsAlarms
 37650 ;; This function uses a non-reentrant model
 37651 ;;
 37652                           
 37653                           	psect	text185
 37654  005A24                     __ptext185:
 37655                           	opt stack 0
 37656  005A24                     _OsAlrm_ClearOsAlarm:
 37657                           	opt stack 10
 37658                           
 37659                           ;incstack = 0
 37660                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 37661  005A24  6E19               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 37662                           
 37663                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 37664  005A26  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37665  005A28  0D0B               	mullw	11
 37666  005A2A  0E00               	movlw	low _OsAlarms
 37667  005A2C  24F3               	addwf	prodl,w,c
 37668  005A2E  6ED9               	movwf	fsr2l,c
 37669  005A30  0E06               	movlw	high _OsAlarms
 37670  005A32  20F4               	addwfc	prodh,w,c
 37671  005A34  6EDA               	movwf	fsr2h,c
 37672  005A36  0E00               	movlw	0
 37673  005A38  6EDF               	movwf	indf2,c
 37674                           
 37675                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 37676  005A3A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37677  005A3C  0D0B               	mullw	11
 37678  005A3E  0E01               	movlw	1
 37679  005A40  26F3               	addwf	prodl,f,c
 37680  005A42  0E00               	movlw	0
 37681  005A44  22F4               	addwfc	prodh,f,c
 37682  005A46  0E00               	movlw	low _OsAlarms
 37683  005A48  24F3               	addwf	prodl,w,c
 37684  005A4A  6ED9               	movwf	fsr2l,c
 37685  005A4C  0E06               	movlw	high _OsAlarms
 37686  005A4E  20F4               	addwfc	prodh,w,c
 37687  005A50  6EDA               	movwf	fsr2h,c
 37688  005A52  6ADE               	clrf	postinc2,c
 37689  005A54  6ADE               	clrf	postinc2,c
 37690  005A56  6ADE               	clrf	postinc2,c
 37691  005A58  6ADD               	clrf	postdec2,c
 37692                           
 37693                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 37694  005A5A  5019               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 37695  005A5C  0D0B               	mullw	11
 37696  005A5E  0E05               	movlw	5
 37697  005A60  26F3               	addwf	prodl,f,c
 37698  005A62  0E00               	movlw	0
 37699  005A64  22F4               	addwfc	prodh,f,c
 37700  005A66  0E00               	movlw	low _OsAlarms
 37701  005A68  24F3               	addwf	prodl,w,c
 37702  005A6A  6ED9               	movwf	fsr2l,c
 37703  005A6C  0E06               	movlw	high _OsAlarms
 37704  005A6E  20F4               	addwfc	prodh,w,c
 37705  005A70  6EDA               	movwf	fsr2h,c
 37706  005A72  6ADE               	clrf	postinc2,c
 37707  005A74  6ADE               	clrf	postinc2,c
 37708  005A76  6ADE               	clrf	postinc2,c
 37709  005A78  6ADD               	clrf	postdec2,c
 37710  005A7A  0012               	return		;funcret
 37711  005A7C                     __end_of_OsAlrm_ClearOsAlarm:
 37712                           	opt stack 0
 37713                           tosu	equ	0xFFF
 37714                           tosh	equ	0xFFE
 37715                           tosl	equ	0xFFD
 37716                           pclatu	equ	0xFFB
 37717                           pclath	equ	0xFFA
 37718                           tblptru	equ	0xFF8
 37719                           tblptrh	equ	0xFF7
 37720                           tblptrl	equ	0xFF6
 37721                           tablat	equ	0xFF5
 37722                           prodh	equ	0xFF4
 37723                           prodl	equ	0xFF3
 37724                           intcon	equ	0xFF2
 37725                           intcon2	equ	0xFF1
 37726                           intcon3	equ	0xFF0
 37727                           indf0	equ	0xFEF
 37728                           postinc0	equ	0xFEE
 37729                           plusw0	equ	0xFEB
 37730                           fsr0h	equ	0xFEA
 37731                           fsr0l	equ	0xFE9
 37732                           wreg	equ	0xFE8
 37733                           indf1	equ	0xFE7
 37734                           postinc1	equ	0xFE6
 37735                           postdec1	equ	0xFE5
 37736                           plusw1	equ	0xFE3
 37737                           fsr1h	equ	0xFE2
 37738                           fsr1l	equ	0xFE1
 37739                           bsr	equ	0xFE0
 37740                           indf2	equ	0xFDF
 37741                           postinc2	equ	0xFDE
 37742                           postdec2	equ	0xFDD
 37743                           plusw2	equ	0xFDB
 37744                           fsr2h	equ	0xFDA
 37745                           fsr2l	equ	0xFD9
 37746                           status	equ	0xFD8
 37747                           
 37748 ;; *************** function _I2cDummyTx *****************
 37749 ;; Defined at:
 37750 ;;		line 193 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37751 ;; Parameters:    Size  Location     Type
 37752 ;;		None
 37753 ;; Auto vars:     Size  Location     Type
 37754 ;;		None
 37755 ;; Return value:  Size  Location     Type
 37756 ;;                  1    wreg      void 
 37757 ;; Registers used:
 37758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37759 ;; Tracked objects:
 37760 ;;		On entry : 0/0
 37761 ;;		On exit  : 0/0
 37762 ;;		Unchanged: 0/0
 37763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37768 ;;Total ram usage:        0 bytes
 37769 ;; Hardware stack levels used:    1
 37770 ;; Hardware stack levels required when called:    6
 37771 ;; This function calls:
 37772 ;;		i1_I2cSlv_SendI2cMsg
 37773 ;; This function is called by:
 37774 ;;		_I2cSlv_MainTask
 37775 ;;		_OsAlrm_ProcessOsAlarms
 37776 ;; This function uses a non-reentrant model
 37777 ;;
 37778                           
 37779                           	psect	text186
 37780  0068DC                     __ptext186:
 37781                           	opt stack 0
 37782  0068DC                     _I2cDummyTx:
 37783                           	opt stack 8
 37784                           
 37785                           ;i2c_slv.c: 195: static UINT8 DummyBuffer = 0x00;
 37786                           ;i2c_slv.c: 198: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 37787                           
 37788                           ;incstack = 0
 37789  0068DC  0EFC               	movlw	low I2cDummyTx@DummyBuffer
 37790  0068DE  6E1C               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 37791  0068E0  0E01               	movlw	high I2cDummyTx@DummyBuffer
 37792  0068E2  6E1D               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 37793  0068E4  0E00               	movlw	0
 37794  0068E6  6E1E               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 37795  0068E8  0E01               	movlw	1
 37796  0068EA  6E1F               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 37797  0068EC  ECA6  F031         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 37798                           
 37799                           ;i2c_slv.c: 200: I2cBusStatus = I2cBusReady;
 37800  0068F0  0E01               	movlw	1
 37801  0068F2  0101               	movlb	1	; () banked
 37802  0068F4  6FE5               	movwf	_I2cBusStatus& (0+255),b
 37803                           
 37804                           ; BSR set to: 1
 37805  0068F6  0012               	return		;funcret
 37806  0068F8                     __end_of_I2cDummyTx:
 37807                           	opt stack 0
 37808                           tosu	equ	0xFFF
 37809                           tosh	equ	0xFFE
 37810                           tosl	equ	0xFFD
 37811                           pclatu	equ	0xFFB
 37812                           pclath	equ	0xFFA
 37813                           tblptru	equ	0xFF8
 37814                           tblptrh	equ	0xFF7
 37815                           tblptrl	equ	0xFF6
 37816                           tablat	equ	0xFF5
 37817                           prodh	equ	0xFF4
 37818                           prodl	equ	0xFF3
 37819                           intcon	equ	0xFF2
 37820                           intcon2	equ	0xFF1
 37821                           intcon3	equ	0xFF0
 37822                           indf0	equ	0xFEF
 37823                           postinc0	equ	0xFEE
 37824                           plusw0	equ	0xFEB
 37825                           fsr0h	equ	0xFEA
 37826                           fsr0l	equ	0xFE9
 37827                           wreg	equ	0xFE8
 37828                           indf1	equ	0xFE7
 37829                           postinc1	equ	0xFE6
 37830                           postdec1	equ	0xFE5
 37831                           plusw1	equ	0xFE3
 37832                           fsr1h	equ	0xFE2
 37833                           fsr1l	equ	0xFE1
 37834                           bsr	equ	0xFE0
 37835                           indf2	equ	0xFDF
 37836                           postinc2	equ	0xFDE
 37837                           postdec2	equ	0xFDD
 37838                           plusw2	equ	0xFDB
 37839                           fsr2h	equ	0xFDA
 37840                           fsr2l	equ	0xFD9
 37841                           status	equ	0xFD8
 37842                           
 37843 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 37844 ;; Defined at:
 37845 ;;		line 252 in file "../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 37846 ;; Parameters:    Size  Location     Type
 37847 ;;  TxBuffer        2   27[COMRAM] PTR unsigned char 
 37848 ;;		 -> triggerRelay@txBuffer(2), Terminal@TermTxBuffer(50), ReadAddress(1), EepromBuffer(15), 
 37849 ;;		 -> I2cDummyTx@DummyBuffer(1), 
 37850 ;;  SlaveAddr       1   29[COMRAM] unsigned char 
 37851 ;;  DataLenght      1   30[COMRAM] unsigned char 
 37852 ;; Auto vars:     Size  Location     Type
 37853 ;;  I2cSlv_SendI    1   31[COMRAM] unsigned char 
 37854 ;; Return value:  Size  Location     Type
 37855 ;;                  1    wreg      unsigned char 
 37856 ;; Registers used:
 37857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37858 ;; Tracked objects:
 37859 ;;		On entry : 0/0
 37860 ;;		On exit  : 0/0
 37861 ;;		Unchanged: 0/0
 37862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37866 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37867 ;;Total ram usage:        5 bytes
 37868 ;; Hardware stack levels used:    1
 37869 ;; Hardware stack levels required when called:    5
 37870 ;; This function calls:
 37871 ;;		i1_GenerateEvt
 37872 ;; This function is called by:
 37873 ;;		_I2cDummyTx
 37874 ;; This function uses a non-reentrant model
 37875 ;;
 37876                           
 37877                           	psect	text187
 37878  00634C                     __ptext187:
 37879                           	opt stack 0
 37880  00634C                     i1_I2cSlv_SendI2cMsg:
 37881                           	opt stack 8
 37882                           
 37883                           ;i2c_slv.c: 254: UINT8 TxSts = 0u;
 37884                           
 37885                           ; BSR set to: 1
 37886                           ;incstack = 0
 37887  00634C  0E00               	movlw	0
 37888  00634E  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37889                           
 37890                           ;i2c_slv.c: 256: if (I2cComSts != TxInProgress)
 37891  006350  0100               	movlb	0	; () banked
 37892  006352  05CF               	decf	_I2cComSts& (0+255),w,b
 37893  006354  B4D8               	btfsc	status,2,c
 37894  006356  D014               	goto	i1l1412
 37895                           
 37896                           ; BSR set to: 0
 37897                           ;i2c_slv.c: 257: {
 37898                           ;i2c_slv.c: 259: I2cTxPacket.SlaveAddress = SlaveAddr;
 37899  006358  C01E  F3A2         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 37900                           
 37901                           ; BSR set to: 0
 37902                           ;i2c_slv.c: 260: I2cTxPacket.ReadWrite = ((UINT8)(0));
 37903  00635C  0E00               	movlw	0
 37904  00635E  0103               	movlb	3	; () banked
 37905  006360  6FA3               	movwf	(_I2cTxPacket+1)& (0+255),b
 37906                           
 37907                           ; BSR set to: 3
 37908                           ;i2c_slv.c: 261: I2cTxPacket.Lenght = DataLenght;
 37909  006362  C01F  F3A6         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 37910                           
 37911                           ; BSR set to: 3
 37912                           ;i2c_slv.c: 262: I2cTxPacket.Buffer = TxBuffer;
 37913  006366  C01C  F3A4         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 37914  00636A  C01D  F3A5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 37915                           
 37916                           ; BSR set to: 3
 37917                           ;i2c_slv.c: 265: GenerateEvt(&I2cWriteDataEvt);
 37918  00636E  0ED9               	movlw	low _I2cWriteDataEvt
 37919  006370  6E19               	movwf	i1GenerateEvt@Event,c
 37920  006372  0E00               	movlw	high _I2cWriteDataEvt
 37921  006374  6E1A               	movwf	i1GenerateEvt@Event+1,c
 37922  006376  ECEA  F034         	call	i1_GenerateEvt	;wreg free
 37923                           
 37924                           ;i2c_slv.c: 267: TxSts = 1u;
 37925  00637A  0E01               	movlw	1
 37926  00637C  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37927                           
 37928                           ;i2c_slv.c: 268: }
 37929  00637E  0012               	return	
 37930  006380                     i1l1412:
 37931                           
 37932                           ;i2c_slv.c: 269: else
 37933                           ;i2c_slv.c: 270: {
 37934                           ;i2c_slv.c: 272: TxSts = 0u;
 37935  006380  0E00               	movlw	0
 37936  006382  6E20               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 37937  006384  0012               	return	
 37938  006386                     __end_ofi1_I2cSlv_SendI2cMsg:
 37939                           	opt stack 0
 37940                           tosu	equ	0xFFF
 37941                           tosh	equ	0xFFE
 37942                           tosl	equ	0xFFD
 37943                           pclatu	equ	0xFFB
 37944                           pclath	equ	0xFFA
 37945                           tblptru	equ	0xFF8
 37946                           tblptrh	equ	0xFF7
 37947                           tblptrl	equ	0xFF6
 37948                           tablat	equ	0xFF5
 37949                           prodh	equ	0xFF4
 37950                           prodl	equ	0xFF3
 37951                           intcon	equ	0xFF2
 37952                           intcon2	equ	0xFF1
 37953                           intcon3	equ	0xFF0
 37954                           indf0	equ	0xFEF
 37955                           postinc0	equ	0xFEE
 37956                           plusw0	equ	0xFEB
 37957                           fsr0h	equ	0xFEA
 37958                           fsr0l	equ	0xFE9
 37959                           wreg	equ	0xFE8
 37960                           indf1	equ	0xFE7
 37961                           postinc1	equ	0xFE6
 37962                           postdec1	equ	0xFE5
 37963                           plusw1	equ	0xFE3
 37964                           fsr1h	equ	0xFE2
 37965                           fsr1l	equ	0xFE1
 37966                           bsr	equ	0xFE0
 37967                           indf2	equ	0xFDF
 37968                           postinc2	equ	0xFDE
 37969                           postdec2	equ	0xFDD
 37970                           plusw2	equ	0xFDB
 37971                           fsr2h	equ	0xFDA
 37972                           fsr2l	equ	0xFD9
 37973                           status	equ	0xFD8
 37974                           
 37975 ;; *************** function i1_GenerateEvt *****************
 37976 ;; Defined at:
 37977 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 37978 ;; Parameters:    Size  Location     Type
 37979 ;;  Event           2   24[COMRAM] PTR struct EventStructur
 37980 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 37981 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 37982 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 37983 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 37984 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 37985 ;; Auto vars:     Size  Location     Type
 37986 ;;  GenerateEvt     1   26[COMRAM] enum E7727
 37987 ;; Return value:  Size  Location     Type
 37988 ;;                  1    wreg      enum E7699
 37989 ;; Registers used:
 37990 ;;		wreg, fsr2l, fsr2h, status,2
 37991 ;; Tracked objects:
 37992 ;;		On entry : 0/0
 37993 ;;		On exit  : 0/0
 37994 ;;		Unchanged: 0/0
 37995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37999 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38000 ;;Total ram usage:        3 bytes
 38001 ;; Hardware stack levels used:    1
 38002 ;; Hardware stack levels required when called:    4
 38003 ;; This function calls:
 38004 ;;		Nothing
 38005 ;; This function is called by:
 38006 ;;		i1_I2cSlv_SendI2cMsg
 38007 ;; This function uses a non-reentrant model
 38008 ;;
 38009                           
 38010                           	psect	text188
 38011  0069D4                     __ptext188:
 38012                           	opt stack 0
 38013  0069D4                     i1_GenerateEvt:
 38014                           	opt stack 8
 38015                           
 38016                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38017                           
 38018                           ;incstack = 0
 38019  0069D4  0E00               	movlw	0
 38020  0069D6  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38021                           
 38022                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38023  0069D8  C019  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 38024  0069DC  C01A  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 38025  0069E0  0E02               	movlw	2
 38026  0069E2  6EDF               	movwf	indf2,c
 38027                           
 38028                           ;os_ser.c: 83: EventStatus = EventSent;
 38029  0069E4  0E02               	movlw	2
 38030  0069E6  6E1B               	movwf	i1GenerateEvt@EventStatus,c
 38031  0069E8  0012               	return	
 38032  0069EA                     __end_ofi1_GenerateEvt:
 38033                           	opt stack 0
 38034                           tosu	equ	0xFFF
 38035                           tosh	equ	0xFFE
 38036                           tosl	equ	0xFFD
 38037                           pclatu	equ	0xFFB
 38038                           pclath	equ	0xFFA
 38039                           tblptru	equ	0xFF8
 38040                           tblptrh	equ	0xFF7
 38041                           tblptrl	equ	0xFF6
 38042                           tablat	equ	0xFF5
 38043                           prodh	equ	0xFF4
 38044                           prodl	equ	0xFF3
 38045                           intcon	equ	0xFF2
 38046                           intcon2	equ	0xFF1
 38047                           intcon3	equ	0xFF0
 38048                           indf0	equ	0xFEF
 38049                           postinc0	equ	0xFEE
 38050                           plusw0	equ	0xFEB
 38051                           fsr0h	equ	0xFEA
 38052                           fsr0l	equ	0xFE9
 38053                           wreg	equ	0xFE8
 38054                           indf1	equ	0xFE7
 38055                           postinc1	equ	0xFE6
 38056                           postdec1	equ	0xFE5
 38057                           plusw1	equ	0xFE3
 38058                           fsr1h	equ	0xFE2
 38059                           fsr1l	equ	0xFE1
 38060                           bsr	equ	0xFE0
 38061                           indf2	equ	0xFDF
 38062                           postinc2	equ	0xFDE
 38063                           postdec2	equ	0xFDD
 38064                           plusw2	equ	0xFDB
 38065                           fsr2h	equ	0xFDA
 38066                           fsr2l	equ	0xFD9
 38067                           status	equ	0xFD8
 38068                           
 38069 ;; *************** function _HighPriorityIsr *****************
 38070 ;; Defined at:
 38071 ;;		line 153 in file "../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 38072 ;; Parameters:    Size  Location     Type
 38073 ;;		None
 38074 ;; Auto vars:     Size  Location     Type
 38075 ;;		None
 38076 ;; Return value:  Size  Location     Type
 38077 ;;                  1    wreg      void 
 38078 ;; Registers used:
 38079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38080 ;; Tracked objects:
 38081 ;;		On entry : 0/0
 38082 ;;		On exit  : 0/0
 38083 ;;		Unchanged: 0/0
 38084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38087 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38088 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38089 ;;Total ram usage:       18 bytes
 38090 ;; Hardware stack levels used:    1
 38091 ;; Hardware stack levels required when called:    3
 38092 ;; This function calls:
 38093 ;;		_Mcu_Int0Isr
 38094 ;;		_Mcu_Int1Isr
 38095 ;;		_Rtcc_RtcIsr
 38096 ;;		_Uart_Uart1RxIsr
 38097 ;; This function is called by:
 38098 ;;		Interrupt level 2
 38099 ;; This function uses a non-reentrant model
 38100 ;;
 38101                           
 38102                           	psect	intcode
 38103  000008                     __pintcode:
 38104                           	opt stack 0
 38105  000008                     _HighPriorityIsr:
 38106                           	opt stack 8
 38107                           
 38108                           ;incstack = 0
 38109  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 38110  00000A  EF6D  F022         	goto	int_func
 38111                           tosu	equ	0xFFF
 38112                           tosh	equ	0xFFE
 38113                           tosl	equ	0xFFD
 38114                           pclatu	equ	0xFFB
 38115                           pclath	equ	0xFFA
 38116                           tblptru	equ	0xFF8
 38117                           tblptrh	equ	0xFF7
 38118                           tblptrl	equ	0xFF6
 38119                           tablat	equ	0xFF5
 38120                           prodh	equ	0xFF4
 38121                           prodl	equ	0xFF3
 38122                           intcon	equ	0xFF2
 38123                           intcon2	equ	0xFF1
 38124                           intcon3	equ	0xFF0
 38125                           indf0	equ	0xFEF
 38126                           postinc0	equ	0xFEE
 38127                           plusw0	equ	0xFEB
 38128                           fsr0h	equ	0xFEA
 38129                           fsr0l	equ	0xFE9
 38130                           wreg	equ	0xFE8
 38131                           indf1	equ	0xFE7
 38132                           postinc1	equ	0xFE6
 38133                           postdec1	equ	0xFE5
 38134                           plusw1	equ	0xFE3
 38135                           fsr1h	equ	0xFE2
 38136                           fsr1l	equ	0xFE1
 38137                           bsr	equ	0xFE0
 38138                           indf2	equ	0xFDF
 38139                           postinc2	equ	0xFDE
 38140                           postdec2	equ	0xFDD
 38141                           plusw2	equ	0xFDB
 38142                           fsr2h	equ	0xFDA
 38143                           fsr2l	equ	0xFD9
 38144                           status	equ	0xFD8
 38145                           
 38146                           	psect	intcode_body
 38147  0044DA                     __pintcode_body:
 38148                           	opt stack 8
 38149  0044DA                     int_func:
 38150                           	opt stack 8
 38151  0044DA  CFFA F007          	movff	pclath,??_HighPriorityIsr
 38152  0044DE  CFFB F008          	movff	pclatu,??_HighPriorityIsr+1
 38153  0044E2  CFE9 F009          	movff	fsr0l,??_HighPriorityIsr+2
 38154  0044E6  CFEA F00A          	movff	fsr0h,??_HighPriorityIsr+3
 38155  0044EA  CFE1 F00B          	movff	fsr1l,??_HighPriorityIsr+4
 38156  0044EE  CFE2 F00C          	movff	fsr1h,??_HighPriorityIsr+5
 38157  0044F2  CFD9 F00D          	movff	fsr2l,??_HighPriorityIsr+6
 38158  0044F6  CFDA F00E          	movff	fsr2h,??_HighPriorityIsr+7
 38159  0044FA  CFF3 F00F          	movff	prodl,??_HighPriorityIsr+8
 38160  0044FE  CFF4 F010          	movff	prodh,??_HighPriorityIsr+9
 38161  004502  CFF6 F011          	movff	tblptrl,??_HighPriorityIsr+10
 38162  004506  CFF7 F012          	movff	tblptrh,??_HighPriorityIsr+11
 38163  00450A  CFF8 F013          	movff	tblptru,??_HighPriorityIsr+12
 38164  00450E  CFF5 F014          	movff	tablat,??_HighPriorityIsr+13
 38165  004512  C042  F015         	movff	btemp,??_HighPriorityIsr+14
 38166  004516  C043  F016         	movff	btemp+1,??_HighPriorityIsr+15
 38167  00451A  C044  F017         	movff	btemp+2,??_HighPriorityIsr+16
 38168  00451E  C045  F018         	movff	btemp+3,??_HighPriorityIsr+17
 38169                           
 38170                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 38171  004522  B2F2               	btfsc	intcon,1,c	;volatile
 38172                           
 38173                           ;irq.c: 158: {
 38174                           ;irq.c: 160: Mcu_Int0Isr();
 38175  004524  EC9B  F035         	call	_Mcu_Int0Isr	;wreg free
 38176                           
 38177                           ;irq.c: 161: }
 38178                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 38179  004528  B0F0               	btfsc	intcon3,0,c	;volatile
 38180                           
 38181                           ;irq.c: 167: {
 38182                           ;irq.c: 169: Mcu_Int1Isr();
 38183  00452A  EC99  F035         	call	_Mcu_Int1Isr	;wreg free
 38184                           
 38185                           ;irq.c: 170: }
 38186                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 38187  00452E  B0A4               	btfsc	4004,0,c	;volatile
 38188                           
 38189                           ;irq.c: 203: {
 38190                           ;irq.c: 205: Rtcc_RtcIsr();
 38191  004530  EC97  F035         	call	_Rtcc_RtcIsr	;wreg free
 38192                           
 38193                           ;irq.c: 206: }
 38194                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 38195  004534  BA9E               	btfsc	3998,5,c	;volatile
 38196                           
 38197                           ;irq.c: 212: {
 38198                           ;irq.c: 214: Uart_Uart1RxIsr();
 38199  004536  EC45  F035         	call	_Uart_Uart1RxIsr	;wreg free
 38200  00453A  C018  F045         	movff	??_HighPriorityIsr+17,btemp+3
 38201  00453E  C017  F044         	movff	??_HighPriorityIsr+16,btemp+2
 38202  004542  C016  F043         	movff	??_HighPriorityIsr+15,btemp+1
 38203  004546  C015  F042         	movff	??_HighPriorityIsr+14,btemp
 38204  00454A  C014  FFF5         	movff	??_HighPriorityIsr+13,tablat
 38205  00454E  C013  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 38206  004552  C012  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 38207  004556  C011  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 38208  00455A  C010  FFF4         	movff	??_HighPriorityIsr+9,prodh
 38209  00455E  C00F  FFF3         	movff	??_HighPriorityIsr+8,prodl
 38210  004562  C00E  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 38211  004566  C00D  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 38212  00456A  C00C  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 38213  00456E  C00B  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 38214  004572  C00A  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 38215  004576  C009  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 38216  00457A  C008  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 38217  00457E  C007  FFFA         	movff	??_HighPriorityIsr,pclath
 38218  004582  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 38219  004584  0011               	retfie		f
 38220  004586                     __end_of_HighPriorityIsr:
 38221                           	opt stack 0
 38222                           tosu	equ	0xFFF
 38223                           tosh	equ	0xFFE
 38224                           tosl	equ	0xFFD
 38225                           pclatu	equ	0xFFB
 38226                           pclath	equ	0xFFA
 38227                           tblptru	equ	0xFF8
 38228                           tblptrh	equ	0xFF7
 38229                           tblptrl	equ	0xFF6
 38230                           tablat	equ	0xFF5
 38231                           prodh	equ	0xFF4
 38232                           prodl	equ	0xFF3
 38233                           intcon	equ	0xFF2
 38234                           intcon2	equ	0xFF1
 38235                           intcon3	equ	0xFF0
 38236                           indf0	equ	0xFEF
 38237                           postinc0	equ	0xFEE
 38238                           plusw0	equ	0xFEB
 38239                           fsr0h	equ	0xFEA
 38240                           fsr0l	equ	0xFE9
 38241                           wreg	equ	0xFE8
 38242                           indf1	equ	0xFE7
 38243                           postinc1	equ	0xFE6
 38244                           postdec1	equ	0xFE5
 38245                           plusw1	equ	0xFE3
 38246                           fsr1h	equ	0xFE2
 38247                           fsr1l	equ	0xFE1
 38248                           bsr	equ	0xFE0
 38249                           indf2	equ	0xFDF
 38250                           postinc2	equ	0xFDE
 38251                           postdec2	equ	0xFDD
 38252                           plusw2	equ	0xFDB
 38253                           fsr2h	equ	0xFDA
 38254                           fsr2l	equ	0xFD9
 38255                           status	equ	0xFD8
 38256                           
 38257 ;; *************** function _Uart_Uart1RxIsr *****************
 38258 ;; Defined at:
 38259 ;;		line 584 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38260 ;; Parameters:    Size  Location     Type
 38261 ;;		None
 38262 ;; Auto vars:     Size  Location     Type
 38263 ;;		None
 38264 ;; Return value:  Size  Location     Type
 38265 ;;                  1    wreg      void 
 38266 ;; Registers used:
 38267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38268 ;; Tracked objects:
 38269 ;;		On entry : 0/0
 38270 ;;		On exit  : 0/0
 38271 ;;		Unchanged: 0/0
 38272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38277 ;;Total ram usage:        0 bytes
 38278 ;; Hardware stack levels used:    1
 38279 ;; Hardware stack levels required when called:    2
 38280 ;; This function calls:
 38281 ;;		_Uart_MdmGsmGprsReadService
 38282 ;; This function is called by:
 38283 ;;		_HighPriorityIsr
 38284 ;; This function uses a non-reentrant model
 38285 ;;
 38286                           
 38287                           	psect	text190
 38288  006A8A                     __ptext190:
 38289                           	opt stack 0
 38290  006A8A                     _Uart_Uart1RxIsr:
 38291                           	opt stack 8
 38292                           
 38293                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 38294                           ;uart_drv.c: 590: UartRxData = RCREG1;
 38295                           
 38296                           ;incstack = 0
 38297  006A8A  CFAF F02B          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 38298                           
 38299                           ;uart_drv.c: 594: Uart_MdmGsmGprsReadService(1,UartRxData);
 38300  006A8E  C02B  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmGsmGprsReadService@UartData
 38301  006A92  0E01               	movlw	1
 38302  006A94  ECB1  F01E         	call	_Uart_MdmGsmGprsReadService
 38303  006A98  0012               	return		;funcret
 38304  006A9A                     __end_of_Uart_Uart1RxIsr:
 38305                           	opt stack 0
 38306                           tosu	equ	0xFFF
 38307                           tosh	equ	0xFFE
 38308                           tosl	equ	0xFFD
 38309                           pclatu	equ	0xFFB
 38310                           pclath	equ	0xFFA
 38311                           tblptru	equ	0xFF8
 38312                           tblptrh	equ	0xFF7
 38313                           tblptrl	equ	0xFF6
 38314                           tablat	equ	0xFF5
 38315                           prodh	equ	0xFF4
 38316                           prodl	equ	0xFF3
 38317                           intcon	equ	0xFF2
 38318                           intcon2	equ	0xFF1
 38319                           intcon3	equ	0xFF0
 38320                           indf0	equ	0xFEF
 38321                           postinc0	equ	0xFEE
 38322                           plusw0	equ	0xFEB
 38323                           fsr0h	equ	0xFEA
 38324                           fsr0l	equ	0xFE9
 38325                           wreg	equ	0xFE8
 38326                           indf1	equ	0xFE7
 38327                           postinc1	equ	0xFE6
 38328                           postdec1	equ	0xFE5
 38329                           plusw1	equ	0xFE3
 38330                           fsr1h	equ	0xFE2
 38331                           fsr1l	equ	0xFE1
 38332                           bsr	equ	0xFE0
 38333                           indf2	equ	0xFDF
 38334                           postinc2	equ	0xFDE
 38335                           postdec2	equ	0xFDD
 38336                           plusw2	equ	0xFDB
 38337                           fsr2h	equ	0xFDA
 38338                           fsr2l	equ	0xFD9
 38339                           status	equ	0xFD8
 38340                           
 38341 ;; *************** function _Uart_MdmGsmGprsReadService *****************
 38342 ;; Defined at:
 38343 ;;		line 376 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 38344 ;; Parameters:    Size  Location     Type
 38345 ;;  Module          1    wreg     unsigned char 
 38346 ;;  UartData        1    3[COMRAM] unsigned char 
 38347 ;; Auto vars:     Size  Location     Type
 38348 ;;  Module          1    0[COMRAM] unsigned char 
 38349 ;;  ServiceCount    2    4[COMRAM] unsigned short 
 38350 ;; Return value:  Size  Location     Type
 38351 ;;                  1    wreg      void 
 38352 ;; Registers used:
 38353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 38354 ;; Tracked objects:
 38355 ;;		On entry : 0/0
 38356 ;;		On exit  : 0/0
 38357 ;;		Unchanged: 0/0
 38358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38359 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38362 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38363 ;;Total ram usage:        3 bytes
 38364 ;; Hardware stack levels used:    1
 38365 ;; Hardware stack levels required when called:    1
 38366 ;; This function calls:
 38367 ;;		i2_GenerateEvt
 38368 ;; This function is called by:
 38369 ;;		_Uart_Uart1RxIsr
 38370 ;; This function uses a non-reentrant model
 38371 ;;
 38372                           
 38373                           	psect	text191
 38374  003D62                     __ptext191:
 38375                           	opt stack 0
 38376  003D62                     _Uart_MdmGsmGprsReadService:
 38377                           	opt stack 8
 38378                           
 38379                           ;uart_drv.c: 378: static UINT16 RxCounter = 0;
 38380                           ;uart_drv.c: 379: static RxStateType RxState = ReadData;
 38381                           ;uart_drv.c: 380: static UINT8 LocalRxBuffer[((UINT16)(400))];
 38382                           ;uart_drv.c: 381: UINT16 ServiceCounter = 0;
 38383                           
 38384                           ;incstack = 0
 38385  003D62  0E00               	movlw	0
 38386  003D64  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38387  003D66  0E00               	movlw	0
 38388  003D68  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38389                           
 38390                           ;uart_drv.c: 383: switch (RxState)
 38391  003D6A  D058               	goto	i2l680
 38392  003D6C                     
 38393                           ;uart_drv.c: 387: if (UartData == '\r')
 38394  003D6C  0E0D               	movlw	13
 38395  003D6E  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38396  003D70  A4D8               	btfss	status,2,c
 38397  003D72  D003               	goto	i2l682
 38398                           
 38399                           ;uart_drv.c: 388: {
 38400                           ;uart_drv.c: 390: RxState = CheckTermSeq1;
 38401  003D74  0E01               	movlw	1
 38402  003D76  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38403                           
 38404                           ;uart_drv.c: 391: }
 38405  003D78  0012               	return	
 38406  003D7A                     i2l682:
 38407                           
 38408                           ;uart_drv.c: 392: else
 38409                           ;uart_drv.c: 393: {
 38410                           ;uart_drv.c: 394: if (RxCounter < ((UINT16)(400)))
 38411  003D7A  0E90               	movlw	144
 38412  003D7C  5C23               	subwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38413  003D7E  0E01               	movlw	1
 38414  003D80  5824               	subwfb	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38415  003D82  B0D8               	btfsc	status,0,c
 38416  003D84  0012               	return	
 38417                           
 38418                           ;uart_drv.c: 395: {
 38419                           ;uart_drv.c: 397: LocalRxBuffer[RxCounter] = UartData;
 38420  003D86  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38421  003D88  2423               	addwf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38422  003D8A  6ED9               	movwf	fsr2l,c
 38423  003D8C  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38424  003D8E  2024               	addwfc	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38425  003D90  6EDA               	movwf	fsr2h,c
 38426  003D92  C004  FFDF         	movff	Uart_MdmGsmGprsReadService@UartData,indf2
 38427                           
 38428                           ;uart_drv.c: 399: RxCounter++;
 38429  003D96  4A23               	infsnz	Uart_MdmGsmGprsReadService@RxCounter,f,c
 38430  003D98  2A24               	incf	Uart_MdmGsmGprsReadService@RxCounter+1,f,c
 38431                           
 38432                           ;uart_drv.c: 400: }
 38433                           ;uart_drv.c: 401: }
 38434                           ;uart_drv.c: 402: break;
 38435  003D9A  0012               	return	
 38436  003D9C                     
 38437                           ;uart_drv.c: 406: if (UartData == '\n')
 38438  003D9C  0E0A               	movlw	10
 38439  003D9E  1804               	xorwf	Uart_MdmGsmGprsReadService@UartData,w,c
 38440  003DA0  A4D8               	btfss	status,2,c
 38441  003DA2  D035               	goto	i2l688
 38442                           
 38443                           ;uart_drv.c: 407: {
 38444                           ;uart_drv.c: 409: if (RxCounter > 0)
 38445  003DA4  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38446  003DA6  1024               	iorwf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38447  003DA8  B4D8               	btfsc	status,2,c
 38448  003DAA  D031               	goto	i2l688
 38449                           
 38450                           ;uart_drv.c: 410: {
 38451                           ;uart_drv.c: 412: for (ServiceCounter = 0; ServiceCounter < RxCounter; ServiceCounter++)
 38452  003DAC  0E00               	movlw	0
 38453  003DAE  6E06               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter+1,c
 38454  003DB0  0E00               	movlw	0
 38455  003DB2  6E05               	movwf	Uart_MdmGsmGprsReadService@ServiceCounter,c
 38456  003DB4  D010               	goto	i2l689
 38457  003DB6                     
 38458                           ;uart_drv.c: 413: {
 38459                           ;uart_drv.c: 414: RxBuffer[ServiceCounter] = LocalRxBuffer[ServiceCounter];
 38460  003DB6  0EC8               	movlw	low Uart_MdmGsmGprsReadService@LocalRxBuffer
 38461  003DB8  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38462  003DBA  6ED9               	movwf	fsr2l,c
 38463  003DBC  0E0A               	movlw	high Uart_MdmGsmGprsReadService@LocalRxBuffer
 38464  003DBE  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38465  003DC0  6EDA               	movwf	fsr2h,c
 38466  003DC2  0E58               	movlw	low _RxBuffer
 38467  003DC4  2405               	addwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38468  003DC6  6EE1               	movwf	fsr1l,c
 38469  003DC8  0E0C               	movlw	high _RxBuffer
 38470  003DCA  2006               	addwfc	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38471  003DCC  6EE2               	movwf	fsr1h,c
 38472  003DCE  CFDF FFE7          	movff	indf2,indf1
 38473  003DD2  4A05               	infsnz	Uart_MdmGsmGprsReadService@ServiceCounter,f,c
 38474  003DD4  2A06               	incf	Uart_MdmGsmGprsReadService@ServiceCounter+1,f,c
 38475  003DD6                     i2l689:
 38476  003DD6  5023               	movf	Uart_MdmGsmGprsReadService@RxCounter,w,c
 38477  003DD8  5C05               	subwf	Uart_MdmGsmGprsReadService@ServiceCounter,w,c
 38478  003DDA  5024               	movf	Uart_MdmGsmGprsReadService@RxCounter+1,w,c
 38479  003DDC  5806               	subwfb	Uart_MdmGsmGprsReadService@ServiceCounter+1,w,c
 38480  003DDE  A0D8               	btfss	status,0,c
 38481  003DE0  D7EA               	goto	i2l690
 38482                           
 38483                           ;uart_drv.c: 415: }
 38484                           ;uart_drv.c: 417: RxLen = RxCounter;
 38485  003DE2  C023  F0C2         	movff	Uart_MdmGsmGprsReadService@RxCounter,_RxLen
 38486  003DE6  C024  F0C3         	movff	Uart_MdmGsmGprsReadService@RxCounter+1,_RxLen+1
 38487                           
 38488                           ;uart_drv.c: 419: GenerateEvt(&NewStringReceived);
 38489  003DEA  0E3A               	movlw	low _NewStringReceived
 38490  003DEC  6E01               	movwf	i2GenerateEvt@Event,c
 38491  003DEE  0E00               	movlw	high _NewStringReceived
 38492  003DF0  6E02               	movwf	i2GenerateEvt@Event+1,c
 38493  003DF2  ECF5  F034         	call	i2_GenerateEvt	;wreg free
 38494                           
 38495                           ;uart_drv.c: 420: GenerateEvt(&NewMdmEvtParserRequest);
 38496  003DF6  0E39               	movlw	low _NewMdmEvtParserRequest
 38497  003DF8  6E01               	movwf	i2GenerateEvt@Event,c
 38498  003DFA  0E00               	movlw	high _NewMdmEvtParserRequest
 38499  003DFC  6E02               	movwf	i2GenerateEvt@Event+1,c
 38500  003DFE  ECF5  F034         	call	i2_GenerateEvt	;wreg free
 38501                           
 38502                           ;uart_drv.c: 421: GenerateEvt(&NewStringMdmTerminal);
 38503  003E02  0E38               	movlw	low _NewStringMdmTerminal
 38504  003E04  6E01               	movwf	i2GenerateEvt@Event,c
 38505  003E06  0E00               	movlw	high _NewStringMdmTerminal
 38506  003E08  6E02               	movwf	i2GenerateEvt@Event+1,c
 38507  003E0A  ECF5  F034         	call	i2_GenerateEvt	;wreg free
 38508  003E0E                     i2l688:
 38509                           
 38510                           ;uart_drv.c: 427: }
 38511                           ;uart_drv.c: 429: RxState = ReadData;
 38512                           
 38513                           ;uart_drv.c: 424: else
 38514                           ;uart_drv.c: 425: {
 38515                           
 38516                           ;uart_drv.c: 422: }
 38517                           ;uart_drv.c: 423: }
 38518  003E0E  0E00               	movlw	0
 38519  003E10  6E2C               	movwf	Uart_MdmGsmGprsReadService@RxState,c
 38520                           
 38521                           ;uart_drv.c: 431: RxCounter = 0;
 38522  003E12  0E00               	movlw	0
 38523  003E14  6E24               	movwf	Uart_MdmGsmGprsReadService@RxCounter+1,c
 38524  003E16  0E00               	movlw	0
 38525  003E18  6E23               	movwf	Uart_MdmGsmGprsReadService@RxCounter,c
 38526                           
 38527                           ;uart_drv.c: 436: }
 38528                           
 38529                           ;uart_drv.c: 435: break;
 38530                           
 38531                           ;uart_drv.c: 434: default:
 38532                           
 38533                           ;uart_drv.c: 432: break;
 38534  003E1A  0012               	return	
 38535  003E1C                     i2l680:
 38536  003E1C  502C               	movf	Uart_MdmGsmGprsReadService@RxState,w,c
 38537                           
 38538                           ; Switch size 1, requested type "space"
 38539                           ; Number of cases is 2, Range of values is 0 to 1
 38540                           ; switch strategies available:
 38541                           ; Name         Instructions Cycles
 38542                           ; simple_byte            7     4 (average)
 38543                           ;	Chosen strategy is simple_byte
 38544  003E1E  0A00               	xorlw	0	; case 0
 38545  003E20  B4D8               	btfsc	status,2,c
 38546  003E22  D7A4               	goto	i2l681
 38547  003E24  0A01               	xorlw	1	; case 1
 38548  003E26  A4D8               	btfss	status,2,c
 38549  003E28  0012               	return	
 38550  003E2A  D7B8               	goto	i2l686
 38551  003E2C                     __end_of_Uart_MdmGsmGprsReadService:
 38552                           	opt stack 0
 38553                           tosu	equ	0xFFF
 38554                           tosh	equ	0xFFE
 38555                           tosl	equ	0xFFD
 38556                           pclatu	equ	0xFFB
 38557                           pclath	equ	0xFFA
 38558                           tblptru	equ	0xFF8
 38559                           tblptrh	equ	0xFF7
 38560                           tblptrl	equ	0xFF6
 38561                           tablat	equ	0xFF5
 38562                           prodh	equ	0xFF4
 38563                           prodl	equ	0xFF3
 38564                           intcon	equ	0xFF2
 38565                           intcon2	equ	0xFF1
 38566                           intcon3	equ	0xFF0
 38567                           indf0	equ	0xFEF
 38568                           postinc0	equ	0xFEE
 38569                           plusw0	equ	0xFEB
 38570                           fsr0h	equ	0xFEA
 38571                           fsr0l	equ	0xFE9
 38572                           wreg	equ	0xFE8
 38573                           indf1	equ	0xFE7
 38574                           postinc1	equ	0xFE6
 38575                           postdec1	equ	0xFE5
 38576                           plusw1	equ	0xFE3
 38577                           fsr1h	equ	0xFE2
 38578                           fsr1l	equ	0xFE1
 38579                           bsr	equ	0xFE0
 38580                           indf2	equ	0xFDF
 38581                           postinc2	equ	0xFDE
 38582                           postdec2	equ	0xFDD
 38583                           plusw2	equ	0xFDB
 38584                           fsr2h	equ	0xFDA
 38585                           fsr2l	equ	0xFD9
 38586                           status	equ	0xFD8
 38587                           
 38588 ;; *************** function i2_GenerateEvt *****************
 38589 ;; Defined at:
 38590 ;;		line 75 in file "../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 38591 ;; Parameters:    Size  Location     Type
 38592 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 38593 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 38594 ;;		 -> GetMethod(1), InitNetwork(1), MdmStsReady(1), SmsTxtReady(1), 
 38595 ;;		 -> GetSmsText(1), SmsEvent(1), ClipEvent(1), RingEvent(1), 
 38596 ;;		 -> SendSmsEvent(1), NewStringMdmTerminal(1), NewMdmEvtParserRequest(1), NewStringReceived(1), 
 38597 ;;		 -> MdmOnOffPulseRequest(1), CallClosedEvent(1), IncomingCallEvent(1), NewSmsEvent(1), 
 38598 ;; Auto vars:     Size  Location     Type
 38599 ;;  GenerateEvt     1    2[COMRAM] enum E7727
 38600 ;; Return value:  Size  Location     Type
 38601 ;;                  1    wreg      enum E7699
 38602 ;; Registers used:
 38603 ;;		wreg, fsr2l, fsr2h, status,2
 38604 ;; Tracked objects:
 38605 ;;		On entry : 0/0
 38606 ;;		On exit  : 0/0
 38607 ;;		Unchanged: 0/0
 38608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38612 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38613 ;;Total ram usage:        3 bytes
 38614 ;; Hardware stack levels used:    1
 38615 ;; This function calls:
 38616 ;;		Nothing
 38617 ;; This function is called by:
 38618 ;;		_Uart_MdmGsmGprsReadService
 38619 ;; This function uses a non-reentrant model
 38620 ;;
 38621                           
 38622                           	psect	text192
 38623  0069EA                     __ptext192:
 38624                           	opt stack 0
 38625  0069EA                     i2_GenerateEvt:
 38626                           	opt stack 8
 38627                           
 38628                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 38629                           
 38630                           ;incstack = 0
 38631  0069EA  0E00               	movlw	0
 38632  0069EC  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38633                           
 38634                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 38635  0069EE  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 38636  0069F2  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 38637  0069F6  0E02               	movlw	2
 38638  0069F8  6EDF               	movwf	indf2,c
 38639                           
 38640                           ;os_ser.c: 83: EventStatus = EventSent;
 38641  0069FA  0E02               	movlw	2
 38642  0069FC  6E03               	movwf	i2GenerateEvt@EventStatus,c
 38643  0069FE  0012               	return	
 38644  006A00                     __end_ofi2_GenerateEvt:
 38645                           	opt stack 0
 38646                           tosu	equ	0xFFF
 38647                           tosh	equ	0xFFE
 38648                           tosl	equ	0xFFD
 38649                           pclatu	equ	0xFFB
 38650                           pclath	equ	0xFFA
 38651                           tblptru	equ	0xFF8
 38652                           tblptrh	equ	0xFF7
 38653                           tblptrl	equ	0xFF6
 38654                           tablat	equ	0xFF5
 38655                           prodh	equ	0xFF4
 38656                           prodl	equ	0xFF3
 38657                           intcon	equ	0xFF2
 38658                           intcon2	equ	0xFF1
 38659                           intcon3	equ	0xFF0
 38660                           indf0	equ	0xFEF
 38661                           postinc0	equ	0xFEE
 38662                           plusw0	equ	0xFEB
 38663                           fsr0h	equ	0xFEA
 38664                           fsr0l	equ	0xFE9
 38665                           wreg	equ	0xFE8
 38666                           indf1	equ	0xFE7
 38667                           postinc1	equ	0xFE6
 38668                           postdec1	equ	0xFE5
 38669                           plusw1	equ	0xFE3
 38670                           fsr1h	equ	0xFE2
 38671                           fsr1l	equ	0xFE1
 38672                           bsr	equ	0xFE0
 38673                           indf2	equ	0xFDF
 38674                           postinc2	equ	0xFDE
 38675                           postdec2	equ	0xFDD
 38676                           plusw2	equ	0xFDB
 38677                           fsr2h	equ	0xFDA
 38678                           fsr2l	equ	0xFD9
 38679                           status	equ	0xFD8
 38680                           
 38681 ;; *************** function _Rtcc_RtcIsr *****************
 38682 ;; Defined at:
 38683 ;;		line 537 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 38684 ;; Parameters:    Size  Location     Type
 38685 ;;		None
 38686 ;; Auto vars:     Size  Location     Type
 38687 ;;		None
 38688 ;; Return value:  Size  Location     Type
 38689 ;;                  1    wreg      void 
 38690 ;; Registers used:
 38691 ;;		wreg, status,2, status,0
 38692 ;; Tracked objects:
 38693 ;;		On entry : 0/0
 38694 ;;		On exit  : 0/0
 38695 ;;		Unchanged: 0/0
 38696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38701 ;;Total ram usage:        0 bytes
 38702 ;; Hardware stack levels used:    1
 38703 ;; This function calls:
 38704 ;;		Nothing
 38705 ;; This function is called by:
 38706 ;;		_HighPriorityIsr
 38707 ;; This function uses a non-reentrant model
 38708 ;;
 38709                           
 38710                           	psect	text193
 38711  006B2E                     __ptext193:
 38712                           	opt stack 0
 38713  006B2E                     _Rtcc_RtcIsr:
 38714                           	opt stack 10
 38715                           
 38716                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 38717                           
 38718                           ;incstack = 0
 38719  006B2E  90A4               	bcf	4004,0,c	;volatile
 38720  006B30  0012               	return	
 38721  006B32                     __end_of_Rtcc_RtcIsr:
 38722                           	opt stack 0
 38723                           tosu	equ	0xFFF
 38724                           tosh	equ	0xFFE
 38725                           tosl	equ	0xFFD
 38726                           pclatu	equ	0xFFB
 38727                           pclath	equ	0xFFA
 38728                           tblptru	equ	0xFF8
 38729                           tblptrh	equ	0xFF7
 38730                           tblptrl	equ	0xFF6
 38731                           tablat	equ	0xFF5
 38732                           prodh	equ	0xFF4
 38733                           prodl	equ	0xFF3
 38734                           intcon	equ	0xFF2
 38735                           intcon2	equ	0xFF1
 38736                           intcon3	equ	0xFF0
 38737                           indf0	equ	0xFEF
 38738                           postinc0	equ	0xFEE
 38739                           plusw0	equ	0xFEB
 38740                           fsr0h	equ	0xFEA
 38741                           fsr0l	equ	0xFE9
 38742                           wreg	equ	0xFE8
 38743                           indf1	equ	0xFE7
 38744                           postinc1	equ	0xFE6
 38745                           postdec1	equ	0xFE5
 38746                           plusw1	equ	0xFE3
 38747                           fsr1h	equ	0xFE2
 38748                           fsr1l	equ	0xFE1
 38749                           bsr	equ	0xFE0
 38750                           indf2	equ	0xFDF
 38751                           postinc2	equ	0xFDE
 38752                           postdec2	equ	0xFDD
 38753                           plusw2	equ	0xFDB
 38754                           fsr2h	equ	0xFDA
 38755                           fsr2l	equ	0xFD9
 38756                           status	equ	0xFD8
 38757                           
 38758 ;; *************** function _Mcu_Int1Isr *****************
 38759 ;; Defined at:
 38760 ;;		line 161 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38761 ;; Parameters:    Size  Location     Type
 38762 ;;		None
 38763 ;; Auto vars:     Size  Location     Type
 38764 ;;		None
 38765 ;; Return value:  Size  Location     Type
 38766 ;;                  1    wreg      void 
 38767 ;; Registers used:
 38768 ;;		wreg, status,2, status,0
 38769 ;; Tracked objects:
 38770 ;;		On entry : 0/0
 38771 ;;		On exit  : 0/0
 38772 ;;		Unchanged: 0/0
 38773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38778 ;;Total ram usage:        0 bytes
 38779 ;; Hardware stack levels used:    1
 38780 ;; This function calls:
 38781 ;;		Nothing
 38782 ;; This function is called by:
 38783 ;;		_HighPriorityIsr
 38784 ;; This function uses a non-reentrant model
 38785 ;;
 38786                           
 38787                           	psect	text194
 38788  006B32                     __ptext194:
 38789                           	opt stack 0
 38790  006B32                     _Mcu_Int1Isr:
 38791                           	opt stack 10
 38792                           
 38793                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 38794                           
 38795                           ;incstack = 0
 38796  006B32  90F0               	bcf	intcon3,0,c	;volatile
 38797  006B34  0012               	return	
 38798  006B36                     __end_of_Mcu_Int1Isr:
 38799                           	opt stack 0
 38800                           tosu	equ	0xFFF
 38801                           tosh	equ	0xFFE
 38802                           tosl	equ	0xFFD
 38803                           pclatu	equ	0xFFB
 38804                           pclath	equ	0xFFA
 38805                           tblptru	equ	0xFF8
 38806                           tblptrh	equ	0xFF7
 38807                           tblptrl	equ	0xFF6
 38808                           tablat	equ	0xFF5
 38809                           prodh	equ	0xFF4
 38810                           prodl	equ	0xFF3
 38811                           intcon	equ	0xFF2
 38812                           intcon2	equ	0xFF1
 38813                           intcon3	equ	0xFF0
 38814                           indf0	equ	0xFEF
 38815                           postinc0	equ	0xFEE
 38816                           plusw0	equ	0xFEB
 38817                           fsr0h	equ	0xFEA
 38818                           fsr0l	equ	0xFE9
 38819                           wreg	equ	0xFE8
 38820                           indf1	equ	0xFE7
 38821                           postinc1	equ	0xFE6
 38822                           postdec1	equ	0xFE5
 38823                           plusw1	equ	0xFE3
 38824                           fsr1h	equ	0xFE2
 38825                           fsr1l	equ	0xFE1
 38826                           bsr	equ	0xFE0
 38827                           indf2	equ	0xFDF
 38828                           postinc2	equ	0xFDE
 38829                           postdec2	equ	0xFDD
 38830                           plusw2	equ	0xFDB
 38831                           fsr2h	equ	0xFDA
 38832                           fsr2l	equ	0xFD9
 38833                           status	equ	0xFD8
 38834                           
 38835 ;; *************** function _Mcu_Int0Isr *****************
 38836 ;; Defined at:
 38837 ;;		line 126 in file "../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 38838 ;; Parameters:    Size  Location     Type
 38839 ;;		None
 38840 ;; Auto vars:     Size  Location     Type
 38841 ;;		None
 38842 ;; Return value:  Size  Location     Type
 38843 ;;                  1    wreg      void 
 38844 ;; Registers used:
 38845 ;;		wreg, status,2, status,0
 38846 ;; Tracked objects:
 38847 ;;		On entry : 0/0
 38848 ;;		On exit  : 0/0
 38849 ;;		Unchanged: 0/0
 38850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38855 ;;Total ram usage:        0 bytes
 38856 ;; Hardware stack levels used:    1
 38857 ;; This function calls:
 38858 ;;		Nothing
 38859 ;; This function is called by:
 38860 ;;		_HighPriorityIsr
 38861 ;; This function uses a non-reentrant model
 38862 ;;
 38863                           
 38864                           	psect	text195
 38865  006B36                     __ptext195:
 38866                           	opt stack 0
 38867  006B36                     _Mcu_Int0Isr:
 38868                           	opt stack 10
 38869                           
 38870                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 38871                           
 38872                           ;incstack = 0
 38873  006B36  92F2               	bcf	intcon,1,c	;volatile
 38874  006B38  0012               	return	
 38875  006B3A                     __end_of_Mcu_Int0Isr:
 38876                           	opt stack 0
 38877                           tosu	equ	0xFFF
 38878                           tosh	equ	0xFFE
 38879                           tosl	equ	0xFFD
 38880                           pclatu	equ	0xFFB
 38881                           pclath	equ	0xFFA
 38882                           tblptru	equ	0xFF8
 38883                           tblptrh	equ	0xFF7
 38884                           tblptrl	equ	0xFF6
 38885                           tablat	equ	0xFF5
 38886                           prodh	equ	0xFF4
 38887                           prodl	equ	0xFF3
 38888                           intcon	equ	0xFF2
 38889                           intcon2	equ	0xFF1
 38890                           intcon3	equ	0xFF0
 38891                           indf0	equ	0xFEF
 38892                           postinc0	equ	0xFEE
 38893                           plusw0	equ	0xFEB
 38894                           fsr0h	equ	0xFEA
 38895                           fsr0l	equ	0xFE9
 38896                           wreg	equ	0xFE8
 38897                           indf1	equ	0xFE7
 38898                           postinc1	equ	0xFE6
 38899                           postdec1	equ	0xFE5
 38900                           plusw1	equ	0xFE3
 38901                           fsr1h	equ	0xFE2
 38902                           fsr1l	equ	0xFE1
 38903                           bsr	equ	0xFE0
 38904                           indf2	equ	0xFDF
 38905                           postinc2	equ	0xFDE
 38906                           postdec2	equ	0xFDD
 38907                           plusw2	equ	0xFDB
 38908                           fsr2h	equ	0xFDA
 38909                           fsr2l	equ	0xFD9
 38910                           status	equ	0xFD8
 38911                           tosu	equ	0xFFF
 38912                           tosh	equ	0xFFE
 38913                           tosl	equ	0xFFD
 38914                           pclatu	equ	0xFFB
 38915                           pclath	equ	0xFFA
 38916                           tblptru	equ	0xFF8
 38917                           tblptrh	equ	0xFF7
 38918                           tblptrl	equ	0xFF6
 38919                           tablat	equ	0xFF5
 38920                           prodh	equ	0xFF4
 38921                           prodl	equ	0xFF3
 38922                           intcon	equ	0xFF2
 38923                           intcon2	equ	0xFF1
 38924                           intcon3	equ	0xFF0
 38925                           indf0	equ	0xFEF
 38926                           postinc0	equ	0xFEE
 38927                           plusw0	equ	0xFEB
 38928                           fsr0h	equ	0xFEA
 38929                           fsr0l	equ	0xFE9
 38930                           wreg	equ	0xFE8
 38931                           indf1	equ	0xFE7
 38932                           postinc1	equ	0xFE6
 38933                           postdec1	equ	0xFE5
 38934                           plusw1	equ	0xFE3
 38935                           fsr1h	equ	0xFE2
 38936                           fsr1l	equ	0xFE1
 38937                           bsr	equ	0xFE0
 38938                           indf2	equ	0xFDF
 38939                           postinc2	equ	0xFDE
 38940                           postdec2	equ	0xFDD
 38941                           plusw2	equ	0xFDB
 38942                           fsr2h	equ	0xFDA
 38943                           fsr2l	equ	0xFD9
 38944                           status	equ	0xFD8
 38945                           
 38946                           	psect	text196
 38947  000000                     __ptext196:
 38948                           	opt stack 0
 38949                           tosu	equ	0xFFF
 38950                           tosh	equ	0xFFE
 38951                           tosl	equ	0xFFD
 38952                           pclatu	equ	0xFFB
 38953                           pclath	equ	0xFFA
 38954                           tblptru	equ	0xFF8
 38955                           tblptrh	equ	0xFF7
 38956                           tblptrl	equ	0xFF6
 38957                           tablat	equ	0xFF5
 38958                           prodh	equ	0xFF4
 38959                           prodl	equ	0xFF3
 38960                           intcon	equ	0xFF2
 38961                           intcon2	equ	0xFF1
 38962                           intcon3	equ	0xFF0
 38963                           indf0	equ	0xFEF
 38964                           postinc0	equ	0xFEE
 38965                           plusw0	equ	0xFEB
 38966                           fsr0h	equ	0xFEA
 38967                           fsr0l	equ	0xFE9
 38968                           wreg	equ	0xFE8
 38969                           indf1	equ	0xFE7
 38970                           postinc1	equ	0xFE6
 38971                           postdec1	equ	0xFE5
 38972                           plusw1	equ	0xFE3
 38973                           fsr1h	equ	0xFE2
 38974                           fsr1l	equ	0xFE1
 38975                           bsr	equ	0xFE0
 38976                           indf2	equ	0xFDF
 38977                           postinc2	equ	0xFDE
 38978                           postdec2	equ	0xFDD
 38979                           plusw2	equ	0xFDB
 38980                           fsr2h	equ	0xFDA
 38981                           fsr2l	equ	0xFD9
 38982                           status	equ	0xFD8
 38983                           
 38984                           	psect	rparam
 38985  0000                     tosu	equ	0xFFF
 38986                           tosh	equ	0xFFE
 38987                           tosl	equ	0xFFD
 38988                           pclatu	equ	0xFFB
 38989                           pclath	equ	0xFFA
 38990                           tblptru	equ	0xFF8
 38991                           tblptrh	equ	0xFF7
 38992                           tblptrl	equ	0xFF6
 38993                           tablat	equ	0xFF5
 38994                           prodh	equ	0xFF4
 38995                           prodl	equ	0xFF3
 38996                           intcon	equ	0xFF2
 38997                           intcon2	equ	0xFF1
 38998                           intcon3	equ	0xFF0
 38999                           indf0	equ	0xFEF
 39000                           postinc0	equ	0xFEE
 39001                           plusw0	equ	0xFEB
 39002                           fsr0h	equ	0xFEA
 39003                           fsr0l	equ	0xFE9
 39004                           wreg	equ	0xFE8
 39005                           indf1	equ	0xFE7
 39006                           postinc1	equ	0xFE6
 39007                           postdec1	equ	0xFE5
 39008                           plusw1	equ	0xFE3
 39009                           fsr1h	equ	0xFE2
 39010                           fsr1l	equ	0xFE1
 39011                           bsr	equ	0xFE0
 39012                           indf2	equ	0xFDF
 39013                           postinc2	equ	0xFDE
 39014                           postdec2	equ	0xFDD
 39015                           plusw2	equ	0xFDB
 39016                           fsr2h	equ	0xFDA
 39017                           fsr2l	equ	0xFD9
 39018                           status	equ	0xFD8
 39019                           
 39020                           	psect	temp
 39021  000042                     btemp:
 39022                           	opt stack 0
 39023  000042                     	ds	1
 39024  0000                     int$flags	set	btemp
 39025  0000                     wtemp6	set	btemp+1
 39026                           tosu	equ	0xFFF
 39027                           tosh	equ	0xFFE
 39028                           tosl	equ	0xFFD
 39029                           pclatu	equ	0xFFB
 39030                           pclath	equ	0xFFA
 39031                           tblptru	equ	0xFF8
 39032                           tblptrh	equ	0xFF7
 39033                           tblptrl	equ	0xFF6
 39034                           tablat	equ	0xFF5
 39035                           prodh	equ	0xFF4
 39036                           prodl	equ	0xFF3
 39037                           intcon	equ	0xFF2
 39038                           intcon2	equ	0xFF1
 39039                           intcon3	equ	0xFF0
 39040                           indf0	equ	0xFEF
 39041                           postinc0	equ	0xFEE
 39042                           plusw0	equ	0xFEB
 39043                           fsr0h	equ	0xFEA
 39044                           fsr0l	equ	0xFE9
 39045                           wreg	equ	0xFE8
 39046                           indf1	equ	0xFE7
 39047                           postinc1	equ	0xFE6
 39048                           postdec1	equ	0xFE5
 39049                           plusw1	equ	0xFE3
 39050                           fsr1h	equ	0xFE2
 39051                           fsr1l	equ	0xFE1
 39052                           bsr	equ	0xFE0
 39053                           indf2	equ	0xFDF
 39054                           postinc2	equ	0xFDE
 39055                           postdec2	equ	0xFDD
 39056                           plusw2	equ	0xFDB
 39057                           fsr2h	equ	0xFDA
 39058                           fsr2l	equ	0xFD9
 39059                           status	equ	0xFD8


Data Sizes:
    Strings     408
    Constant    592
    Data        167
    BSS         2362
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     80     131
    BANK1           256    201     256
    BANK2           256    200     256
    BANK3           256      0     256
    BANK4           192      5     175
    BANK5           256      0     244
    BANK6           256      0     220
    BANK7           256      0     246
    BANK8           256      0     200
    BANK9           256      0     200
    BANK10          256    200     200
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    triggerCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    delCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK3[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_23(CODE[20]), STR_21(CODE[42]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_26(CODE[3]), STR_25(CODE[2]), STR_24(CODE[2]), Term_MainSm@FwkBuildStr(BANK1[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK3[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_27(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_32(CODE[7]), STR_28(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    delCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    addCmdFsm@smsText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    addCmdFsm@receivedNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    findEmptySpot@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isMasterNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 13
		 -> receivedNumber(BANK3[13]), 

    isNumberInMemory@positionInMemory	PTR unsigned char  size(2) Largest target is 1
		 -> addCmdFsm@numberInMemory(BANK1[1]), 

    isNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    isNumberValid@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), smsText(BANK4[20]), 

    saveNumberInMemory@phoneNumber	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    secondsAppTimer@counter	PTR unsigned int  size(2) Largest target is 2
		 -> setupCallTicks(BANK3[2]), initGprsModem@modemCounter(BANK3[2]), 

    sp__initPreamble	PTR unsigned char  size(2) Largest target is 4
		 -> memoryPreamble(BANK3[4]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK1[4]), Term_MainSm@FwkMinorStr(BANK1[4]), Term_MainSm@FwkMajorStr(BANK1[4]), Terminal@Payload(BANK7[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 200
		 -> Term_MainSm@Data(BANK4[50]), Terminal@UsbTxBuffer(BANK2[200]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK7[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 400
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 400
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), STR_15(CODE[20]), 
		 -> STR_9(CODE[21]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), STR_5(CODE[10]), 
		 -> Mdm_SmsRx.HeaderBuffer(BANK7[80]), Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), RxBuffer(BIGRAMl[400]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 200
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), EepromBuffer(BANK4[15]), HttpGetMethod@UartMessage(BANK1[200]), 
		 -> InitGprsNetwork@UartMessage(BANK1[50]), MessageText(BANK5[50]), PhoneNumber(BANK4[20]), SendSmsSm@UartMessage(BANK1[50]), 
		 -> Mdm_SmsRx(BANK7[102]), callerNumber(BANK3[13]), 

    StringCompare@String2	PTR unsigned char  size(2) Largest target is 400
		 -> isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), parseCommand@resetCmd(BANK0[4]), parseCommand@deleteNumberCmd(BANK0[4]), 
		 -> parseCommand@addNumberCmd(BANK0[4]), RxBuffer(BIGRAMl[400]), 

    StringCompare@String1	PTR unsigned char  size(2) Largest target is 20
		 -> receivedNumber(BANK3[13]), smsText(BANK4[20]), ModemEvtParser@CallReadyString(BANK0[10]), ModemEvtParser@SmsString(BANK0[5]), 
		 -> ModemEvtParser@ClipString(BANK0[5]), ModemEvtParser@RingString(BANK0[4]), 

    LedStateMachine@LedSts	PTR enum E8954 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK1[1]), Led2OutSts(BANK1[1]), Led1OutSts(BANK1[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    Eeprom_Read@ReadBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 

    Eeprom_Write@WriteBuffer	PTR unsigned char  size(2) Largest target is 20
		 -> delCmdFsm@emptyNumber(BANK1[13]), memoryPreamble(BANK3[4]), smsText(BANK4[20]), callerNumber(BANK3[13]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 400
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK4[50]), MsgFormat(CODE[240]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK2[200]), Terminal@TermRxBuffer(BANK5[50]), Terminal@Payload(BANK7[80]), Terminal@UsbRxBuffer(BANK10[200]), 
		 -> RxBuffer(BIGRAMl[400]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK10[200]), GsmGprsTerminal@UsbBuffer(BANK8[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4616$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4616$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4616$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4616$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK7[64]), cdc_data_rx(BANK5[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S3069$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3059$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3059$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3035$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3035$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3035$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3035$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK4[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_QueryI2cData@RxBuffer	PTR unsigned char  size(2) Largest target is 13
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 

    I2cSlv_QueryI2cData@TxBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> ReadAddress(BANK1[1]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    MdmHttp_GetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    MdmHttp_GetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    ApnLocal	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    HttpGetMethod@GetData.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData.Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetMethod@GetData	PTR struct _HttpGetDataType size(2) Largest target is 7
		 -> HttpGetDataLocal(BANK3[5]), 

    InitGprsNetwork@Apn	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_HttpGetDataType$RespBuffer	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.RespBuffer	PTR unsigned char  size(2) Largest target is 0

    S2536_HttpGetDataType$Url	PTR unsigned char  size(2) Largest target is 0

    HttpGetDataLocal.Url	PTR unsigned char  size(2) Largest target is 0

    sp__GetLastInteractionNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    sp__GetCallerNumber	PTR unsigned char  size(2) Largest target is 13
		 -> callerNumber(BANK3[13]), 

    Mdm_GetSmsData@MessageText	PTR unsigned char  size(2) Largest target is 20
		 -> smsText(BANK4[20]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    OsTmr_Wait@WaitTimer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), Terminal@SwTimer(BANK4[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK4[11]), 
		 -> ConnWait(BANK3[11]), ConnTimeout(BANK2[11]), SendSmsSm@SwTimer(BANK3[11]), CheckModem@Timeout(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), GetMethod(BANK0[1]), 
		 -> InitNetwork(BANK0[1]), SmsTxtReady(BANK0[1]), GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), 
		 -> ClipEvent(BANK0[1]), RingEvent(BANK0[1]), SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), 
		 -> NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), MdmResetRequest(COMRAM[1]), MdmOnOffPulseRequest(BANK0[1]), 
		 -> ActivateRiDetection(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 
		 -> GetMethod(BANK0[1]), InitNetwork(BANK0[1]), MdmStsReady(BANK1[1]), SmsTxtReady(BANK0[1]), 
		 -> GetSmsText(BANK0[1]), SmsEvent(BANK0[1]), ClipEvent(BANK0[1]), RingEvent(BANK0[1]), 
		 -> SendSmsEvent(BANK0[1]), NewStringMdmTerminal(COMRAM[1]), NewMdmEvtParserRequest(COMRAM[1]), NewStringReceived(COMRAM[1]), 
		 -> MdmOnOffPulseRequest(BANK0[1]), CallClosedEvent(COMRAM[1]), IncomingCallEvent(COMRAM[1]), NewSmsEvent(COMRAM[1]), 

    S2049_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), MdmHttp_MainTask(), Mdm_MainTask(), 
		 -> I2cSlv_MainTask(), Mdm_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S2014_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteStringLen@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> GsmGprsTerminal@UartBuffer(BANK9[200]), SendSmsSm@UartMessage(BANK1[50]), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 200
		 -> HttpGetMethod@UartMessage(BANK1[200]), InitGprsNetwork@UartMessage(BANK1[50]), Mdm_MakePhoneCall@UartMessage(COMRAM[25]), Mdm_SetSmsFormat@UartMessage(BANK0[20]), 
		 -> Mdm_PinUnlock@UartMessage(COMRAM[13]), 

    Uart_WriteConstString@ConstStringToWrite	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_31(CODE[12]), STR_30(CODE[19]), STR_29(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[13]), STR_17(CODE[13]), STR_16(CODE[17]), 
		 -> STR_14(CODE[21]), STR_13(CODE[14]), STR_12(CODE[13]), STR_11(CODE[14]), 
		 -> STR_10(CODE[14]), STR_8(CODE[31]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_4(CODE[12]), STR_3(CODE[7]), STR_2(CODE[14]), STR_1(CODE[5]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> findEmptySpot@readBuffer(BANK1[13]), isMasterNumber@readBuffer(BANK1[13]), isNumberInMemory@readBuffer(BANK1[13]), memoryPreamble(BANK3[4]), 
		 -> Terminal@TermRxBuffer(BANK5[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> triggerRelay@txBuffer(BANK0[2]), Terminal@TermTxBuffer(BANK1[50]), ReadAddress(BANK1[1]), EepromBuffer(BANK4[15]), 
		 -> I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmGsmGprsReadService
    _Uart_MdmGsmGprsReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainSm->_Terminal
    _Terminal->_OsTmr_Wait
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _triggerCmdFsm->_triggerRelay
    _triggerRelay->_I2cSlv_SendI2cMsg
    _waitSetupCall->_secondsAppTimer
    _savePreamble->_Eeprom_Write
    _initGprsModem->_Mdm_SetSmsFormat
    _secondsAppTimer->___lwdiv
    _Mdm_SetSmsFormat->_Uart_WriteString
    _initEeprom->_Eeprom_Read
    _detectCmd->_parseCommand
    _parseCommand->_StringCompare
    _Mdm_RequestSmsData->_GenerateEvt
    _Mdm_IsSmsReceived->_ReceiveEvt
    _Mdm_IsRinging->_ReceiveEvt
    _Mdm_HangPhoneCall->_Uart_WriteConstString
    _Mdm_GetSmsData->_StringCopy
    _GetCallerNumber->_ClearBuffer
    _saveNumberInMemory->_Eeprom_Write
    _Eeprom_Write->_StringCopy
    _isNumberInMemory->_Eeprom_Read
    _isMasterNumber->_Eeprom_Read
    _findEmptySpot->_Eeprom_Read
    _Eeprom_Read->_I2cSlv_QueryI2cData
    _I2cSlv_QueryI2cData->_OsTmr_Wait
    _OsTmr_Wait->_OsTmr_GetTimerStatus
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Eeprom_Reset->_I2cSlv_SendI2cMsg
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _Mdm_MainTask->_ModemEvtParser
    _TurnOnModem->_GenerateEvt
    _SendSmsSm->_OsTmr_GetTimerStatus
    _Uart_WriteStringLen->_UartTxBufferStatus
    _ModemEvtParser->_StringCopy
    _GetSmsSm->_StringCopy
    _ConfigureModem->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _CheckModem->_OsTmr_GetTimerStatus
    _MdmCntSm->_ReceiveEvt
    _MdmHttp_MainTask->_HttpGetMethod
    _InitGprsNetwork->_OsTmr_GetTimerStatus
    _HttpGetMethod->_OsTmr_GetTimerStatus
    _Uart_WriteString->_UartTxBufferStatus
    _Uart_WriteConstString->_UartTxBufferStatus
    _StringCopy->_GetCallerNumber
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    ___lwdiv->___wmul
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _MyApp_Task->_delCmdFsm
    _initFsm->_initEeprom
    _delCmdFsm->_isMasterNumber
    _addCmdFsm->_isNumberInMemory
    _Mdm_MainTask->_SendSmsSm
    _MdmHttp_MainTask->_HttpGetMethod

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    _Sch_MainScheduler->_ScheduleTasks

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1069941
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4631
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4253
                                             68 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    4007
                                             64 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2589
                                             54 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0 1065310
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  532748
                                              0 BANK4      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  532562
                                              0 BANK4      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                   _MdmHttp_MainTask *
                      _Mdm_DrvMainFn *
                       _Mdm_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      31
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   53592
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   49060
                                             56 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    6134
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    2300
                                             37 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   28290
                                             55 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     520
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   27433
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0     136
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0     136
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   21163
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    8273
                                             49 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      68
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6688
                                             49 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    6134
                                             41 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2983
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     952
                                             37 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     524
                                             29 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     167
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     167
                                             29 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     170
                                             30 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0     136
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             36 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   59354
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   59354
                                             50 BANK1     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     338
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1391
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     579
                                             29 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    2009
                                             29 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           455   455      0   42144
                                             66 BANK0      5     5      0
                                              0 BANK1     50    50      0
                                              0 BANK2    200   200      0
                                              0 BANK10   200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                         _OsTmr_Wait
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strcpy
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             35 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             32 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2703
                                             41 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             32 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     525
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    2350
                                             35 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3910
                                             51 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3365
                                             42 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2543
                                             36 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             29 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9683
                                             35 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    9096
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    7818
                                             41 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    7479
                                             37 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    3137
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    3149
                                             29 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     729
                                             33 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     473
                                             29 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     290
                                             30 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     228
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0  266778
                       _Eeprom_Reset
                _Led_SetLedBlinkTime
                          _addCmdFsm
                          _delCmdFsm
                          _detectCmd
                            _initFsm
                      _triggerCmdFsm
 ---------------------------------------------------------------------------------
 (4) _triggerCmdFsm                                        4     2      2    4378
                                             41 BANK0      4     2      2
                       _triggerRelay
 ---------------------------------------------------------------------------------
 (5) _triggerRelay                                         4     4      0    4141
                                             37 BANK0      4     4      0
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (4) _initFsm                                              1     1      0   84592
                                              3 BANK1      1     1      0
                    _GetCallerNumber
                   _Led_SetLedStatus
                         _initEeprom
                      _initGprsModem
                 _saveNumberInMemory
                       _savePreamble
                      _waitSetupCall
 ---------------------------------------------------------------------------------
 (5) _waitSetupCall                                        1     1      0   17638
                                             51 BANK0      1     1      0
                   _Led_SetLedStatus
                       _getSetupCall
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _getSetupCall                                         1     1      0    5527
                                             35 BANK0      1     1      0
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
 ---------------------------------------------------------------------------------
 (5) _savePreamble                                         0     0      0    9862
                       _Eeprom_Write
                       _initPreamble
 ---------------------------------------------------------------------------------
 (6) _initPreamble                                         2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _initGprsModem                                        1     1      0   15578
                                             57 BANK0      1     1      0
                   _Mdm_SetSmsFormat
              _Uart_WriteConstString
                    _secondsAppTimer
 ---------------------------------------------------------------------------------
 (6) _secondsAppTimer                                      9     6      3   11118
                                             42 BANK0      9     6      3
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _Mdm_SetSmsFormat                                    22    22      0    1672
                                             35 BANK0     22    22      0
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (5) _initEeprom                                           3     3      0   24954
                                              0 BANK1      3     3      0
                        _Eeprom_Read
 ---------------------------------------------------------------------------------
 (4) _detectCmd                                            1     1      0   35708
                                             53 BANK0      1     1      0
                    _GetCallerNumber
           _GetLastInteractionNumber
                     _Mdm_GetSmsData
                  _Mdm_HangPhoneCall
                      _Mdm_IsRinging
                  _Mdm_IsSmsReceived
                 _Mdm_RequestSmsData
                         _StringCopy
              _Uart_WriteConstString
                       _parseCommand
 ---------------------------------------------------------------------------------
 (5) _parseCommand                                        13    13      0    3986
                                             40 BANK0     13    13      0
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _Mdm_RequestSmsData                                   0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (5) _Mdm_IsSmsReceived                                    1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_IsRinging                                        1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _Mdm_HangPhoneCall                                    0     0      0    2751
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (5) _Mdm_GetSmsData                                       3     1      2    8061
                                             47 BANK0      3     1      2
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _GetLastInteractionNumber                             2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _GetCallerNumber                                      2     0      2    5331
                                             35 BANK0      2     0      2
                        _ClearBuffer
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _delCmdFsm                                           19    15      4   39831
                                             16 BANK1     19    15      4
                     _isMasterNumber
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (4) _addCmdFsm                                            8     4      4   95158
                                             18 BANK1      8     4      4
                      _findEmptySpot
                     _isMasterNumber
                   _isNumberInMemory
                 _saveNumberInMemory
 ---------------------------------------------------------------------------------
 (5) _saveNumberInMemory                                   3     1      2   10236
                                             54 BANK0      3     1      2
                       _Eeprom_Write
                    _GetCallerNumber (ARG)
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Write                                         7     4      3    9862
                                             47 BANK0      7     4      3
                  _I2cSlv_SendI2cMsg
                         _StringCopy
                       _initPreamble (ARG)
 ---------------------------------------------------------------------------------
 (5) _isNumberInMemory                                    18    14      4   29149
                                              0 BANK1     18    14      4
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _isMasterNumber                                      16    14      2   29124
                                              0 BANK1     16    14      2
                        _Eeprom_Read
                      _StringCompare
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (5) _findEmptySpot                                       16    14      2   25940
                                              0 BANK1     16    14      2
                        _Eeprom_Read
                      _isNumberValid
 ---------------------------------------------------------------------------------
 (6) _isNumberValid                                        5     3      2     786
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Eeprom_Read                                          7     4      3   24874
                                             73 BANK0      7     4      3
                _I2cSlv_QueryI2cData
 ---------------------------------------------------------------------------------
 (7) _I2cSlv_QueryI2cData                                  7     0      7   23807
                                             66 BANK0      7     0      7
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _OsTmr_Wait
 ---------------------------------------------------------------------------------
 (6) _OsTmr_Wait                                           7     1      6    7061
                                             59 BANK0      7     1      6
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    2856
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    2739
                                             33 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     425
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _Eeprom_Reset                                         1     1      0    6686
                                             37 BANK0      1     1      0
                        _ClearBuffer
                  _I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    4023
                                             32 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (3) _Mdm_MainTask                                         1     1      0   73780
                         _CheckModem
                     _ConfigureModem
                           _GetSmsSm
                     _ModemEvtParser
                          _SendSmsSm
                        _TurnOnModem
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TurnOnModem                                          0     0      0    2123
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (4) _SendSmsSm                                           52    52      0   16197
                                             59 BANK0      2     2      0
                                              0 BANK1     50    50      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
                _Uart_WriteStringLen
 ---------------------------------------------------------------------------------
 (5) _Uart_WriteStringLen                                  5     2      3    1540
                                             32 BANK0      5     2      3
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (4) _ModemEvtParser                                      26    26      0   13450
                                             47 BANK0     26    26      0
                        _GenerateEvt
                         _ReceiveEvt
                      _StringCompare
                         _StringCopy
                 _Uart_ClearRxBuffer
 ---------------------------------------------------------------------------------
 (5) _Uart_ClearRxBuffer                                   2     2      0     102
                                             29 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _StringCompare                                       11     5      6    3040
                                             29 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _GetSmsSm                                             0     0      0   15392
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _ConfigureModem                                       0     0      0    8747
                        _GenerateEvt
                   _UartSetConfigLow
                _Uart_InitUartModule
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    3873
                                             61 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2735
                                             54 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     844
                                             29 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _UartSetConfigLow                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CheckModem                                           0     0      0   13998
                        _GenerateEvt
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
              _Uart_WriteConstString
 ---------------------------------------------------------------------------------
 (3) _Mdm_DrvMainFn                                        1     1      0    2702
                           _MdmCntSm
 ---------------------------------------------------------------------------------
 (4) _MdmCntSm                                             0     0      0    2702
                 _InitModemInterface
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _InitModemInterface                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmHttp_MainTask                                     1     1      0   43139
                      _HttpGetMethod
                    _InitGprsNetwork
 ---------------------------------------------------------------------------------
 (4) _InitGprsNetwork                                     56    53      3   21606
                                             59 BANK0      5     2      3
                                              0 BANK1     51    51      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (4) _HttpGetMethod                                      207   205      2   21533
                                             59 BANK0      6     4      2
                                              0 BANK1    201   201      0
                        _ClearBuffer
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                         _StringCopy
              _Uart_WriteConstString
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (7) _Uart_WriteString                                     3     1      2    1191
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (8) _Uart_WriteConstString                                3     1      2    2751
                                             32 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (9) _UartWriteByte                                        2     1      1     436
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (9) _UartTxBufferStatus                                   3     3      0     108
                                             29 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _StringCopy                                          10     4      6    5187
                                             37 BANK0     10     4      6
                    _GetCallerNumber (ARG)
           _GetLastInteractionNumber (ARG)
 ---------------------------------------------------------------------------------
 (7) _OsTmr_StartTimer                                     6     0      6    4315
                                             33 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (7) _OsTmr_GetTimerStatus                                 6     4      2    2107
                                             53 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (8) _GetElapsedTime                                      20    16      4     538
                                             33 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (8) _GetOsTickCounter                                     4     0      4       0
                                             29 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ClearBuffer                                          6     2      4    2629
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    7139
                                             58 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    7139
                                             47 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2773
                                             42 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     956
                                             29 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1837
                                             42 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1237
                                             35 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   16818
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9436
                                             35 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8938
                                             29 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1695
                                             66 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1467
                                             54 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1197
                                             41 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    5687
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    2702
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             30 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    2571
                                             32 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      34
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    2123
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0    1029
                                              8 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0    1029
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0    1029
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0    1029
                                             32 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             27 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     332
                                              6 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     332
         _Uart_MdmGsmGprsReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmGsmGprsReadService                          4     3      1     332
                                              3 COMRAM     3     2      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
               ___wmul (ARG)
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
               ___wmul (ARG)
           _Led_SetLedStatus
       _MdmHttp_MainTask *
         _HttpGetMethod
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
         _InitGprsNetwork
           _ClearBuffer
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _Uart_WriteString
             _UartTxBufferStatus
             _UartWriteByte
       _Mdm_DrvMainFn *
         _MdmCntSm
           _InitModemInterface
           _ReceiveEvt
       _Mdm_MainTask *
         _CheckModem
           _GenerateEvt
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ConfigureModem
           _GenerateEvt
           _UartSetConfigLow
           _Uart_InitUartModule
             _SetUartBaudRate
               ___lldiv
                 ___lmul (ARG)
               ___lmul
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _GetSmsSm
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
         _ModemEvtParser
           _GenerateEvt
           _ReceiveEvt
           _StringCompare
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_ClearRxBuffer
         _SendSmsSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteStringLen
             _UartTxBufferStatus
             _UartWriteByte
         _TurnOnModem
           _GenerateEvt
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _MyApp_Task *
         _Eeprom_Reset
           _ClearBuffer
           _I2cSlv_SendI2cMsg
             _GenerateEvt
         _Led_SetLedBlinkTime
         _addCmdFsm
           _findEmptySpot
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _isNumberValid
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _isNumberInMemory
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _delCmdFsm
           _isMasterNumber
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
             _StringCompare
             _isNumberValid
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
         _detectCmd
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _GetLastInteractionNumber
           _Mdm_GetSmsData
             _ReceiveEvt
             _StringCopy
               _GetCallerNumber (ARG)
                 _ClearBuffer
                 _ReceiveEvt
               _GetLastInteractionNumber (ARG)
           _Mdm_HangPhoneCall
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
           _Mdm_IsRinging
             _ReceiveEvt
           _Mdm_IsSmsReceived
             _ReceiveEvt
           _Mdm_RequestSmsData
             _GenerateEvt
           _StringCopy
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
             _GetLastInteractionNumber (ARG)
           _Uart_WriteConstString
             _UartTxBufferStatus
             _UartWriteByte
           _parseCommand
             _StringCompare
             _isNumberValid
         _initFsm
           _GetCallerNumber
             _ClearBuffer
             _ReceiveEvt
           _Led_SetLedStatus
           _initEeprom
             _Eeprom_Read
               _I2cSlv_QueryI2cData
                 _I2cSlv_I2cReadMsgSts
                   _ReceiveEvt
                 _I2cSlv_ReceiveI2cMsg
                   _GenerateEvt
                 _I2cSlv_SendI2cMsg
                   _GenerateEvt
                 _OsTmr_GetTimerStatus
                   _GetElapsedTime
                     _GetOsTickCounter
                 _OsTmr_StartTimer
                   _GetOsTickCounter
                 _OsTmr_Wait
                   _OsTmr_GetTimerStatus
                     _GetElapsedTime
                       _GetOsTickCounter
                   _OsTmr_StartTimer
                     _GetOsTickCounter
           _initGprsModem
             _Mdm_SetSmsFormat
               _Uart_WriteString
                 _UartTxBufferStatus
                 _UartWriteByte
             _Uart_WriteConstString
               _UartTxBufferStatus
               _UartWriteByte
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
           _saveNumberInMemory
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _GetCallerNumber (ARG)
               _ClearBuffer
               _ReceiveEvt
           _savePreamble
             _Eeprom_Write
               _I2cSlv_SendI2cMsg
                 _GenerateEvt
               _StringCopy
                 _GetCallerNumber (ARG)
                   _ClearBuffer
                   _ReceiveEvt
                 _GetLastInteractionNumber (ARG)
               _initPreamble (ARG)
             _initPreamble
           _waitSetupCall
             _Led_SetLedStatus
             _getSetupCall
               _Mdm_HangPhoneCall
                 _Uart_WriteConstString
                   _UartTxBufferStatus
                   _UartWriteByte
               _Mdm_IsRinging
                 _ReceiveEvt
             _secondsAppTimer
               ___lwdiv
                 ___wmul (ARG)
               ___wmul
         _triggerCmdFsm
           _triggerRelay
             _I2cSlv_SendI2cMsg
               _GenerateEvt
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _OsTmr_Wait
               _OsTmr_GetTimerStatus
                 _GetElapsedTime
                   _GetOsTickCounter
               _OsTmr_StartTimer
                 _GetOsTickCounter
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                   ___wmul (ARG)
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strcpy
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmGsmGprsReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     320      36       78.2%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100     C8      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      C8      24       78.1%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      F6      20       96.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      DC      18       85.9%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      F4      16       95.3%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      5      AF      14       91.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     991       8        0.0%
DATA                 0      0     CB1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr  2 10:07:53 2022

                  __size_of_StringCompare 0052                  __end_of_UartSetConfigLow 5A24  
                              _USB_SD_Ptr FC1C                            ??_getSetupCall 0083  
               __size_of_Mdm_SetSmsFormat 0050                           ?_isMasterNumber 0100  
                    __size_of_TurnOnModem 004C                           ??_UpdateSchFlag 0019  
                      _Mcu_StartSystemPll 6866               Mdm_SetSmsFormat@UartMessage 0084  
                   ?_LedPulseStateMachine 008A                              ___awdiv@sign 0082  
                  I2c_ReadData@ReadPacket 0080                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 008C                             _USBDeviceInit 258A  
                     ___wmul@multiplicand 007F                          i1___wmul@product 001D  
                      __size_of_CDCInitEP 006C                        i2GenerateEvt@Event 0001  
                InitSchedTimer@TmrBConfig 00A4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0083      USER_USB_CALLBACK_EVENT_HANDLER@event 0089  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 008B                    I2c_ReadData@ReadStatus 0030  
                                     l202 21FA                                       l203 2202  
                                     l205 224A                                       l206 2270  
                                     l208 2278                                       l160 1FDE  
                                     l209 2298                                       l161 1EB4  
                                     l162 201C                                       l170 1F7C  
                                     l171 1F92                                       l163 1EC0  
                                     l315 4764                                       l323 4730  
                                     l164 1F00                                       l316 46DA  
                                     l420 4D10                                       l500 4BC0  
                                     l173 1F96                                       l325 474A  
                                     l421 4D30                                       l237 6872  
                                     l174 1F9E                                       l166 1F0E  
                                     l318 46E4                                       l422 4D3C  
             __end_of_USBStdGetDscHandler 2D02                                       l510 4B92  
                                     l502 4B52                                       l175 1FAA  
                                     l167 1F36                                       l319 470A  
                                     l423 4D48                                       l511 4B82  
                                     l503 4B42                                       l192 22A2  
                                     l176 1FC0                                       l416 4D5C  
                                     l424 4D54                                       l512 4BA6  
                                     l504 4B68                                       l520 5ED8  
                                     l193 2182                                       l169 1F48  
                                     l417 4D02                                       l441 17EC  
                                     l513 4B86                                       l505 4B46  
                                     l521 5EA4                                       l194 22DA  
                                     l418 4D8A                                       l442 15F4  
                                     l514 4B8C                                       l506 4B4C  
                                     l530 31D2                                       l195 218E  
                                     l179 1FCC                                       l419 4D0A  
                                     l523 5EBE                                       l531 3238  
                                     l196 21CE                                       l700 613E  
                                     l444 163C                                       l532 31FE  
                                     l445 1684                                       l541 6810  
                                     l198 21DC                                       l446 16CC  
                                     l199 21F0                                       l631 2A18  
                                     l447 1714                                       l448 175C  
                                     l528 323E                                       l633 2A90  
                                     l625 29A4                                       l449 17A4  
                                     l529 322A                                       l538 6814  
                                     l546 3E84                                       l651 5E28  
                                     l707 6262                                       l627 29C8  
                                     l715 61D6                                       l539 680C  
                                     l547 3EA0                                       l660 5E4C  
                                     l652 5E22                                       l716 61AC  
                                     l709 627C                                       l629 29F0  
                                     l718 61C4                                       l639 6858  
                                     l832 65D4                                       l844 3F58  
                                     l668 0C44                                       _BDT 000400  
                                     l790 688E                                       l855 52E2  
                                     l775 2F44                                       l864 4F24  
                                     l856 5288                                       l857 52FC  
                                     l698 6122                                       l858 52B8  
                                     l867 4F36                                       l982 215A  
                                     l983 2022                                       l985 2048  
                                     l987 2064                                       l988 209A  
                                     l989 210E                                       l998 2134  
                 secondsAppTimer@isCyclic 008C                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 4586                            ??_Mdm_MainTask 00A9  
                     ?_Mcu_StartSystemPll 0001                                _USBSuspend 645C  
                            ___awmod@sign 0082                      USBStdSetCfgHandler@i 0091  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 0080  
                          _USBDeviceTasks 1BAA                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00CE               Rtcc_AlarmConfig@AlarmConfig 007D  
            __end_of_I2cSlv_ReceiveI2cMsg 61A0                             ??_Mcu_Int0Isr 0001  
                           ??_Mcu_Int1Isr 0001                     ??_USBCtrlTrfRxService 007D  
                          ??_getsUSBUSART 0087                  USBEnableEndpoint@options 0085  
                              _CheckModem 2020             findEmptySpot@positionInMemory 0100  
           ??_Tmr_RegisterTmr2IsrCallback 007F                                      l1010 5EEC  
         InitGprsNetwork@GprsNetInitState 01E8                                      l1100 1B1A  
                                    l1101 1B66                                      l1013 5F06  
                                    l1110 5D2C                               RiSm@Counter 02E0  
                                    l1031 396A                                      l1111 5D40  
                                    l1032 39A4                                      l2000 5812  
                                    l1033 39CA                                      l1009 5F22  
                                    l1121 5D98                                      l1027 3A04  
                                    l1035 39EA                                      l1107 5D52  
                                    l2100 2706                                      l1220 0DD0  
                                    l1028 3958                                      l1052 1E86  
                                    l1060 1E58                                      l1108 5D16  
                                    l2101 278A                                      l1053 1DA0  
                                    l2110 32FE                                      l1222 10B0  
                                    l1230 0FB8                                      l1070 2BB6  
                                    l2006 5806                                      l2111 3246  
                                    l1231 0FBC                                      l1223 0DE8  
                                    l1071 2AAE                                      l1055 1EA0  
                                    l2112 331A                                      l2120 47FA  
                                    l1232 1000                                      l1224 0E22  
                                    l1056 1DD2                                      l1152 6710  
                                    l1136 66EC                                      l2008 580C  
                                    l2113 3264                                      l2121 478C  
                                    l1241 106E                                      l1225 0E96  
                                    l1129 566A                                      l2122 4822  
                                    l1226 0E5E                                      l1074 2ACA  
                                    l1058 1E22                                      l2115 32D4  
                                    l2123 479C                                      l1219 1078  
                                    l1075 2AE2                                      l1091 1B80  
                                    l2124 47AE                                      l1252 0A54  
                                    l1260 073E                                      l1236 1010  
                                    l1228 0F3E                                      l1092 19FE  
                                    l1412 6254                                      l1156 63E6  
                                    l3100 51DA                                      l1404 5ABE  
                                    l2220 4F48                                      l2141 6568  
                                    l2125 47C8                                      l1261 06F6  
                                    l1253 05F4                                      l1237 1054  
                                    l1229 0F78                                      l2045 5FC2  
                                    l2037 5B68                                      l3101 51E4  
                                    l1405 5A7E                                      l2133 3C84  
                                    l2142 6556                                      l1078 2B54  
                                    l2150 5BB4                                      l1422 67FC  
                                    l3102 51F2                                      l3110 5332  
                                    l2134 3BCC                                      l2222 4FAE  
                                    l2127 47D6                                      l1255 0AB6  
                                    l1263 07F2                                      l1095 1A1A  
                                    l2151 5B7E                                      l2039 5B74  
                                    l1407 5AB8                                      l2144 655C  
                                    l2128 47E4                                      l1280 09C4  
                                    l1272 092A                                      l1264 082C  
                                    l1256 060C                                      l1096 1AD0  
                                    l1440 3AE2                                      l2136 3BDA  
                                    l2145 6562                                      l1281 0A32  
                                    l1273 096E                                      l1265 0856  
                                    l1257 0646                                      l1097 1AF4  
                                    l2153 5B90                                      l1417 619A  
                                    l1441 3A2C                                      l3113 5352  
                                    l1266 0890                                      l1258 0680  
                                    l2250 5CB0                                      l2154 5BA2  
                                    l1442 3AF8                                      l3114 535C  
                                    l3106 5318                                      l1267 08CA  
                                    l1259 06BA                                      l1443 3A4A  
                                    l3115 536A                                      l3107 5324  
                                    l2411 01AE                                      l1291 5FFA  
                                    l2219 4FC2                                      l3300 526E  
                                    l1268 090E                                      l2404 05D2  
                                    l2412 019C                                      l1700 37D0  
                                    l1604 25D4                                      l1620 1BF2  
                                    l2261 641A                                      l1285 0A42  
                                    l1277 097E                                      l1445 3AA8  
                                    l3109 533A                                      l2405 00E2  
                                    l1621 1C02                                      l1382 4124  
                                    l2262 6406                                      l1286 0A4A  
                                    l1278 09AA                                      l1446 3ABC  
                                    l2422 0392                                      l1702 3834  
                                    l1606 25FC                                      l1630 1C9E  
                                    l1622 1C0A                                      l2510 673C  
                                    l1294 5FC8                                      l1391 40EE  
                                    l1383 4086                                      l2255 57F6  
                                    l2423 0326                                      l1703 37FA  
                                    l1631 1CAA                                      l1623 1C20  
                                    l1615 1BD6                                      l1384 40A8  
                                    l2256 57B6                                      l2248 5CB4  
                                    l1448 3ADA                                      l3080 3918  
                                    l2440 041E                                      l2424 02B4  
                                    l2408 0152                                      l1608 2638  
                                    l1640 1D26                                      l1624 1C2C  
                                    l1616 1BCC                                      l2512 6744  
                                    l1393 410A                                      l2097 27FC  
                                    l2249 5C8A                                      l3081 38DA  
                                    l2425 0250                                      l2409 01E2  
                                    l2417 01D0                                      l1713 2D5E  
                                    l1633 1CBE                                      l1617 1BCA  
                                    l2601 3386                                      l1394 4116  
                                    l1386 40CA                                      l2098 26DE  
                                    l3074 3886                                      l1650 424E  
                                    l2450 0570                                      l2442 045E  
                                    l2434 0402                                      l1706 3876  
                                    l1714 2D38                                      l1626 1C54  
                                    l2099 2812                                      l3083 394C  
                                    l3075 3880                                      l2443 0578  
                                    l2435 03D2                                      l2427 0304  
                                    l1707 383C                                      l1643 6064  
                                    l1811 35F8                                      l2603 33A8  
                                    l1652 42AA                                      l2428 02C6  
                                    l1716 2DD6                                      l1644 6074  
                                    l1740 2CDA                                      l1812 35FE  
                                    l1636 1CE4                                      l1628 1C68  
              USBConfigureEndpoint@handle 0083                                      l1389 40D2  
                                    l2701 4662                                      l3093 518C  
                                    l3077 38C8                                      l3261 60BA  
                                    l2445 04B4                                      l1717 2DBC  
                                    l1733 2CEA                                      l1725 3460  
                                    l1813 3604                                      l1629 1C74  
                                    l2509 674A                                      l2605 33C4  
                                    l2702 468A                                      l3094 519C  
                                    l2446 0478                                      l1902 4406  
                                    l1830 143E                                      l1742 2CE2  
                                    l1734 2BE6                                      l1750 4364  
                                    l1814 3618                                      l1638 1D08  
                                    l3255 67DC                                      l1903 43A0  
                                    l1831 1440                                      l1751 42E6  
                                    l1727 34D4                                      l1815 361E  
                                    l3352 5C0C                                      l3096 51BA  
                                    l1648 4224                                      l3504 58D0  
                                    l3520 61EA                                      l2464 131E  
                                    l2480 128E                                      l1840 153E  
                                    l1832 145C                                      l1736 2BFA  
                                    l1752 42EC                                      l1808 367E  
                                    l1760 604C                                      l3353 5C16  
                                    l2705 468E                                      l3097 51B2  
                                    l3265 458E                                      l3513 64A2  
                                    l2449 0524                                      l3505 58CA  
                                    l2465 10B8                                      l1905 43B8  
                                    l1841 15BA                                      l1825 137E  
                                    l1737 2C82                                      l1753 430C  
                                    l1817 3624                                      l1809 35EE  
                                    l1673 49BA                                      l1761 604A  
                                    l2570 2FE8                                      l2730 48B6  
                                    l2706 469A                                      l3362 6108  
                                    l3514 6498                                      l2482 12F8  
                                    l2474 110E                                      l1906 43C6  
                                    l1834 14EA                                      l1826 1384  
                                    l1746 434E                                      l1818 3642  
                                    l2731 48C6                                      l3363 6112  
                                    l3267 45CA                                      l3611 6546  
                                    l3507 58EA                                      l2467 10DE  
                                    l1667 3CDE                                      l1907 43E4  
                                    l1739 2C8A                                      l1747 42D4  
                                    l1819 365E                                      l1675 49D4  
                                    l3348 5BEC                                      l2812 3788  
                                    l2652 4E02                                      l2660 4DDE  
                                    l1924 4C62                                      l3268 460C  
                                    l3508 58E0                                      l2484 1318  
                                    l2476 112E                                      l1908 43FC  
                                    l1844 1570                                      l1836 14B2  
                                    l1828 13F6                                      l1684 30D6  
                                    l3372 5F6A                                      l2492 6914  
                                    l3349 5BE4                                      l2821 3730  
                                    l2813 36D6                                      l2573 3028  
                                    l2661 4DF6                                      l2653 4D98  
                                    l3621 6798                                      l2469 10FA  
                                    l1837 14D0                                      l1685 307E  
                                    l3373 5F48                                      l2830 377E  
                                    l2814 36F0                                      l3358 60F0  
                                    l2902 3B28                                      l2478 114E  
                                    l1846 15C6                                      l1774 4CEA  
                                    l2590 3400                                      l3295 522C  
                                    l2583 4A68                                      l2671 50B6  
                                    l1927 4C10                                      l3359 60E8  
                                    l3551 1914                                      l3535 185C  
                                    l3519 61F0                                      l1679 4B0A  
                                    l1839 1532                                      l1775 4CE4  
                                    l2591 332E                                      l3296 5220  
                                    l2744 5762                                      l2584 4A9E  
                                    l2728 488A                                      l2680 6840  
                                    l1928 4C3C                                      l3616 6654  
                                    l3552 1980                                      l3632 6974  
                                    l2904 3B70                                      l1960 2892  
                                    l1952 283A                                      l1768 6340  
                                    l2817 37A2                                      l2825 3768  
                                    l2577 3052                                      l2569 2FEC  
                                    l2673 50E8                                      l1929 4C16  
                                    l3545 18D8                                      l3537 1874  
                                    l2905 3B52                                      l1793 417A  
                                    l1785 5680                                      l1689 3100  
                                    l1769 633E                                      l2489 691A  
                                    l2922 5986                                      l2746 5794  
                                    l2762 44D4                                      l2818 36F4  
                                    l2850 4E48                                      l2674 50BC  
                                    l2658 4E1E                                      l3554 19A6  
                                    l3546 18E8                                      l3378 650C  
                                    l1970 2946                                      l1962 28EA  
                                    l1954 2848                                      l1698 37C6  
                                    l1794 4180                                      l2594 33D6  
                                    l3299 5260                                      l2923 599A  
                                    l2747 579A                                      l2763 4472  
                                    l2819 371C                                      l2675 50C6  
                                    l2659 4DCA                                      l3555 19E0  
                                    l3539 18C8                                      l3379 64FA  
                                    l1971 294A                                      l1963 28B2  
                                    l1795 41FC                                      l1787 56CE  
                                    l2595 3348                                      l2668 50D4  
                                    l2684 5DF0                                      l3548 1902  
                                    l3628 6308                                      l3580 354E  
                                    l2908 3BA4                                      l1956 287C  
                                    l1796 41C2                                      l2773 54BE  
                                    l2757 44C4                                      l2765 44BE  
                                    l2853 4EB2                                      l2669 5070  
                                    l3581 3566                                      l3573 350E  
                                    l2790 514E                                      l2758 4442  
                                    l2854 4E60                                      l2686 5DFC  
                                    l3582 3576                                      l3574 3508  
                                    l1966 292C                                      l1798 41E2  
                                    l2598 335A                                      l2783 5162  
                                    l2759 4462                                      l2855 4E6A  
                                    l2695 46B2                                      l3559 698C  
                                    l1967 28F4                                      l1959 288E  
                                    l2599 3364                                      l2784 5104  
              __size_of_Mdm_IsSmsReceived 0024                                      l2696 4638  
                                    l2880 55A8                                      l3576 3536  
                                    l1992 66BC                                _Led1OutSts 01F9  
                                    l2785 5124                                      l2849 4E9E  
                                    l2873 63A2                                      l2881 55B4  
                                    l3585 35D4                                      l1993 66AC  
                                    l2858 4E94                                      l2698 46D2  
                                    l2699 4646                                      l3579 3596  
                                    l1995 66B2                                      l2788 5170  
                                    l2884 5602                                      l2789 5130  
                                    l2885 55C6                                      l2886 55D0  
                                    l2879 55E6                                      l2887 55D8  
                                    l2897 3B08                                      l2898 3B22  
                                    l2899 3B84                                      STR_1 FFE6  
                                    STR_2 FF75                                      STR_3 FFDF  
                                    STR_4 FFC2                                      STR_5 FFCE  
                                    STR_6 FFF0                                      STR_7 FFEB  
                                    STR_8 FE89                                      STR_9 FEBD  
                              _Led2OutSts 01F7                                _Led3OutSts 01F5  
                   ??_USBCtrlTrfTxService 007D                                      u9105 5EAE  
                                    u9106 5EB0                                      u9115 5EBA  
                                    u9116 5EBC                                      u9125 5EC8  
                                    u9126 5ECA                                      u9135 5ED4  
                                    _UCFG 000F39                                      u9136 5ED6  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                  __size_of_Uart_Uart1RxIsr 0010  
                                    _UEIR 000F63                                      _UCON 000F65  
                              _AlarmEvent 01F4                            ?_StopCondition 0001  
                            _triggerRelay 6386                           ??_Mdm_DrvMainFn 0081  
                     _OsTmr_OsTickCounter 0314                             __CFG_FCMEN$ON 000000  
                      _InitModemInterface 6B0A                  secondsAppTimer@isExpired 0090  
                         _CDCDataInHandle 01D1              I2c_ReadData@TentativeCounter 0031  
             Led_SetLedBlinkTime@OnTimeMs 007D              findEmptySpot@currentPosition 0040  
  USBStdFeatureReqHandler@current_ep_data 0094                                      _pDst 02D4  
                    _NewStringMdmTerminal 0038                                      _atoi 387E  
                                    _main 6AB6                           ??_Mdm_IsRinging 0081  
                                    _itoa 6094                          ?_SetUartBaudRate 0096  
                 __end_of_GetCallerNumber 63F2                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 030C  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0042  
                                    _utoa 4586                                      _xtoi 34F8  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 6B12  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 4CFC  
             I2cSlv_SendI2cMsg@DataLenght 0083                      ??_Mcu_StartSystemPll 007D  
             __end_of_Uart_WriteStringLen 61E0                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_Eeprom_Read 5B78   Uart_MdmGsmGprsReadService@LocalRxBuffer 0AC8  
                       ??_secondsAppTimer 008D                       __end_of_GenerateEvt 69A8  
                           _isNumberValid 573C                            ?_Mcu_SetWdgSts 0001  
                          ??_Mcu_ClearWdg 007D          isNumberInMemory@positionInMemory 0102  
              __end_of_USBCheckStdRequest 36C2                           _Rtcm_SystemDate 0459  
                  ??_USBCtrlTrfOutHandler 007F                  __end_of_GetOsTickCounter 6A4A  
       __size_of_GetLastInteractionNumber 000C                        ?_Rtcc_GetRtccValue 0001  
                     ?_InitModemInterface 0001                        StringCompare@Index 0086  
               ?_GetLastInteractionNumber 007D                            _GetElapsedTime 3EF4  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0082                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0091              isNumberInMemory@currentState 00C5  
                     StringCopy@SourceStr 0085               __end_of_OsAlrm_ClearOsAlarm 5A7C  
                Eeprom_Write@SlaveAddress 0094                     addCmdFsm@currentState 01D5  
                                   EECON2 000FA7                InitGprsNetwork@UartMessage 0100  
                ??_USBStdGetStatusHandler 007D                waitSetupCall@isCallArrived 0093  
                     __size_of_I2cDummyTx 001C                          ??_Mdm_GetSmsData 0091  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 625C                       ??_Rtcc_GetRtccValue 007D  
                         __end_of_Welcome FDAB                         ?_UpdateOsCounters 0001  
                 Uart_ClearRxBuffer@Index 007D                                _GetSmsText 00DD  
                                   l12221 6872                                     l14007 3914  
                                   l13161 3458                                     l14145 575A  
                                   l14183 48C6                                     l14439 4D16  
                                   l12951 64FA                                     l13825 5F48  
                                   l14625 25CC                                     l15329 323E  
                                   l14565 643A                                     l14653 2630  
                                   l15455 1D98                                     l16337 4E90  
                                   l15813 09A4                                     l15477 1E52  
                                   l12989 37D0                                     l15647 0FB0  
                                   l16565 53F0                                     l16577 2E30  
                                   l15965 1CB6                                     l16895 582C  
                                   l16897 585C                                     ?_atoi 0083  
                                   ?_main 0001                                     ?_itoa 0093  
                         __end_of___awdiv 51FC                                     STR_10 FF4B  
                                   STR_11 FF59                                     STR_12 FF9D  
                                   STR_20 FF3D                                     STR_13 FF67  
                                   STR_21 FE5F                                     STR_30 FEFA  
                                   STR_14 FEA8                                     STR_31 FFAA  
                                   STR_15 FEE6                                     STR_23 FED2  
                                   STR_24 FFF5                                     STR_32 FFD8  
                                   STR_16 FF1E                                     STR_25 FFF5  
                                   STR_17 FF83                                     STR_26 FE86  
                                   STR_18 FF90                                     STR_27 FF0D  
                                   STR_28 FFB6                           __end_of___awmod 5374  
                                   STR_29 FF2F                             _triggerCmdFsm 559C  
       __size_of_USBCtrlEPServiceComplete 00FE                           __end_of___lldiv 5280  
                                   ?_utoa 008A                                     u12110 60F4  
                                   u12030 1554                           ___awdiv@divisor 007F  
                                   u12150 628A                                     u13110 18AE  
                                   u12080 5BF0                                     u12170 57EE  
                                   u11450 5E1E                                     u11610 614C  
                  __end_of_USBDeviceTasks 1D30                                     u12420 5230  
                                   u13060 1864                                     u10725 6616  
                                   u10726 6618                                     u10735 6622  
                                   ?_xtoi 0083                                     u10736 6624  
                                   u12177 57E4                                     u10745 662E  
                                   u13250 579E                                     u13330 51BE  
                                   u13090 189E                                     u11570 3822  
                                   u11810 2CCE                                     u10746 6630  
                                   u12460 6650                                     u11740 348C  
                                   u12710 5CC0                                     u12550 62EC  
                                   u14230 04BE                                     u11590 3864  
                                   u12480 6536                                     u13425 5E72  
                                   u11577 3818                                     u11817 2CC4  
                                   u12650 29EC                                     u16010 3778  
                                   u12570 62F8                                     u16020 4E32  
                                   u14420 4DA8                                     u11780 2C4C  
                                   u13605 0C78                                     u11597 385A  
                                   u13390 533E                                     u14350 3BBC  
                                   u11790 2C7C                                     u13710 25F0  
                                   u13615 0C98                                     u12840 4BEC  
                                   u13625 0D22                                     u13545 69CE  
                                   u14370 2FE4                                     u13546 69D0  
                                   u14290 5912                 ?_USBCtrlEPServiceComplete 0001  
                                   u12595 6A0E                                     u11787 2C42  
                                   u12596 6A10                                     u13740 2694  
                                   u13565 0AF4                                     u11797 2C72  
                                   u16221 4FA0                                     u13575 0B14  
                                   u16231 4FB8                                     u16080 55B0  
                                   u13585 0B9E                                     u14297 5908  
                                   u15610 1D2C                                     u14715 69B8  
                                   u14716 69BC                                     u15700 28DA  
                                   u16308 5422                                     u14645 53D8  
                                   u16309 5450                                     u14655 6A22  
                                   u14680 4742                                     u14760 20C2  
                                   u15720 291C                                     u14656 6A24  
                                   u14841 1D4A                                     u14690 475C  
                                   u14930 1EA6                                     u15730 2934  
                                   u14851 1D5C                                     u15707 28D0  
                                   u14780 20D6                                     u16348 2EF8  
                                   u14861 1D6E                                     u16349 2F26  
                                   u15727 2912                                     u15781 5732  
                         __end_of___lwdiv 5C20                                     u15980 372C  
                         __end_of___lwmod 611C                 TurnOnModem@TurnOnMdmState 01F2  
                      ??_UpdateOsCounters 0019                                     i1l742 244C  
                                   i1l747 2588                                     i2l680 3E1C  
                                   i2l681 3D6C                                     i2l690 3DB6  
                                   i2l682 3D7A                                     i2l686 3D9C  
                                   i2l688 3E0E                                     i2l689 3DD6  
                                   _UADDR 000F38                           ___awdiv@counter 0081  
                                   _AlCfg 03B8              Led_SetLedBlinkTime@OffTimeMs 007F  
                 I2cSendMsgSm@I2cComState 01E4                                     _USTAT 000F64  
                 __end_of_LedStateMachine 4828        __size_of_USBCtrlEPAllowStatusStage 00CC  
                     ___lmul@multiplicand 0081                      ??_InitModemInterface 007D  
                                   _RxLen 00C2           __end_of_USBCtrlEPAllowDataStage 4A08  
                           _StringCompare 5C72                                     _sd000 FE5B  
                                   _sd001 FE14                                     _sd002 FDEE  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 007E  
                    __end_of_Led_MainTask 3C96                               _ApnLenLocal 01EC  
                  ??_OsTmr_GetTimerStatus 0097              LedPulseStateMachine@LedPulse 008A  
                         __end_of_initFsm 46D8                           __end_of_isalpha 6550  
                         __end_of_isdigit 67E4                 saveNumberInMemory@address 0098  
                                   atoi@a 0088                                     atoi@s 0083  
                  Eeprom_Write@DataLength 0091                               _ClearBuffer 63F2  
                         __end_of_isspace 665C               I2cSlv_QueryI2cData@RxBuffer 00A5  
              I2c_WriteData@I2cWriteState 0037                 Rtcc_GetRtccValue@RegValue 0080  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 67A0  
                                   pclath 000FFA                                     tablat 000FF5  
                        __end_ofi1___wmul 66AA                      triggerRelay@txBuffer 0087  
               __end_of_Rtcc_GetRtccValue 4D90               I2cSlv_QueryI2cData@TxBuffer 00A2  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                         __end_of_CDCInitEP 5530  
                                   utoa@c 0092                             ??_SetBaudRate 009E  
                                   utoa@v 0090                                     status 000FD8  
                         _I2cSlv_MainTask 5A7C                 Rtcc_GetRtccValue@RetValue 007F  
                     i1___wmul@multiplier 0019                                     wtemp6 0043  
                         __end_of_sprintf 3BCA                           __end_of_tolower 6978  
                     __end_of_Mcu_Int0Isr 6B3A                       __end_of_Mcu_Int1Isr 6B36  
                                   xtoi@c 008A                                     xtoi@s 0083  
                         __end_of_toupper 6990                      __end_of_Eeprom_Reset 5FC6  
                  __end_of_GetElapsedTime 3FBC                     __end_of_UartSetConfig 5974  
                    __end_of_Eeprom_Write 5C72                          delCmdFsm@smsText 0112  
                  __size_of_initGprsModem 0094                            ?_isNumberValid 007D  
             Rtcc_SetRtccValue@RtccPtrVal 0088                  Eeprom_Read@MemoryAddress 00AC  
                   __end_of_Term_MainTask 692C                   LedStateMachine@LedBlink 0093  
                        __end_of_GetSmsSm 2BD4                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0083              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 0083                      __end_of_I2cSetConfig 6608  
                          _InitSchedTimer 6580                           __initialization 22DE  
             __size_of_saveNumberInMemory 001A                          __end_of_MdmCntSm 4780  
                    __end_of_I2c_ReadData 22DE                   Rtcc_RtcConfig@RtcConfig 007E  
                    __end_of_I2cSendMsgSm 4148                   LedStateMachine@LedPulse 0095  
                              _MyApp_Task 332C                              __end_of_atoi 3956  
                            __end_of_main 6AC2                       StringCompare@Result 0085  
                            __end_of_itoa 60D8                    ??_LedPulseStateMachine 008D  
                   _control_signal_bitmap 01DC                              __end_of_utoa 4630  
                            __end_of_xtoi 35DE                  __end_of_Rtcm_SetRtccDate 5B24  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 007D  
                        __end_of_ReadByte 6AF6              __size_of_I2cSlv_QueryI2cData 00D2  
                    Term_MainSm@TermDelay 03D4                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FE49                 __size_of_USBCtrlEPService 0094  
                          ?_triggerCmdFsm 0089                                    ??_atoi 0085  
                                  ??_main 00B0              __size_of_Uart_InitUartModule 030C  
                                  ??_itoa 0099                                    ??_utoa 0090  
                                  ??_xtoi 0085                             __activetblptr 000002  
                         ?_USBDeviceTasks 0001                          __end_of_TmrBInit 4BD2  
                           ?_initPreamble 007D                                _ReceiveEvt 65AE  
        Uart_WriteStringLen@StringToWrite 0080                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                      _Mdm_RequestSmsData 6A6A                            ?_StringCompare 007D  
                        __end_of_Terminal 05EC                      initFsm@isInitialized 0103  
                           ?_SetAckStatus 0001                         ?_Led_SetLedStatus 007D  
                              _OsTmr_Wait 5280                              _cdc_mem_type 01DD  
                      ??_Mcu_ConfigExtInt 007D                          addCmdFsm@smsText 0114  
                       CheckModem@Timeout 03F5                           ReceiveEvt@Event 007D  
                             ?_CheckModem 0001                          _CDCDataOutHandle 00BC  
                         ??_StopCondition 007D                        ??_Led_SetLedStatus 007E  
                        ___awdiv@dividend 007D        __end_of_Uart_MdmGsmGprsReadService 3E2C  
              _Uart_MdmGsmGprsReadService 3D62                __end_of_UsbDevice_MainTask 66CE  
                         getsUSBUSART@len 0086                      __end_of_getSetupCall 6846  
                     ?_Mdm_RequestSmsData 0001                     __end_of_UartWriteByte 6866  
                   addCmdFsm@searchNumber 0119                          ??_LowPriorityIsr 0068  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
                             _Eeprom_Read 5B24        Irq_InitIntController@IntPriorityEn 007F  
                   __size_of_CDCTxService 0146                                    i1l1412 6380  
                             _GenerateEvt 6990                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                   triggerRelay@isRelayOn 0086                 Uart_Uart1RxIsr@UartRxData 002B  
                           CDCTxService@i 0084                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FC30  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                          ?_GetCallerNumber 0083  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                             _ConnTimeout 02F5                      Mdm_IsSmsReceived@Ret 0081  
                __end_of_Rtcc_AlarmConfig 559C                           ??_Mcu_SetWdgSts 007D  
                  __end_of_InitSchedTimer 65AE                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0081                            _EnableReceiver 6B2A  
                              _UartConfig 031C                      __end_of_Mdm_MainTask 5D64  
                       ??_Uart_Uart1RxIsr 0007                         _shortPacketStatus 00CD  
                           ??_Term_MainSm 00A7                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                  __end_of_MdmHttp_MainTask 600C  
                                  _SmsLen 00D4                           USBDeviceTasks@i 0098  
             USBStdFeatureReqHandler@pUEP 0092                  USBTransferOnePacket@data 007E  
              USBCtrlTrfInHandler@lastDTS 007E                             ??_RtccIrqInit 007D  
                ??_OsAlrm_ProcessOsAlarms 0060                           ??_USBDeviceInit 0085  
                     __end_of_SetBaudRate 5E9E                                    ___lmul 5974  
                    _I2cSlv_ReceiveI2cMsg 6160                        TurnOnModem@Counter 02DA  
                            ?_putUSBUSART 0083                                    ___wmul 665C  
                               ??___awdiv 0081            GetElapsedTime@CurrentTimestamp 0091  
                          __CFG_STVREN$ON 000000                          _Mdm_SetSmsFormat 5D64  
                               ??___awmod 0081                        __size_of_SendSmsSm 01B8  
                       ?_Rtcm_GetRtccDate 0081                       _Led_SetLedBlinkTime 5B78  
                               ??___lldiv 0091                      __end_of_getsUSBUSART 4C68  
                    ??_Mdm_RequestSmsData 0080                                 ??___lwdiv 0087  
                  Tmr_TmrBPrSet@IntFreqHz 0096                                 ??___lwmod 0081  
               isMasterNumber@phoneNumber 0100                         _USBEnableEndpoint 6050  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0001  
                            ReadByte@Byte 007D                       addCmdFsm@isComplete 0116  
                                  _memcpy 5F36                    __size_of_HttpGetMethod 04D0  
                                  _memset 64F0                                    clear_0 2396  
                                  clear_1 23A8                                    clear_2 23B4  
                                  clear_3 23C0                                    clear_4 23CC  
                                  clear_5 23D8                                    clear_6 23E4  
                       parseCommand@F9030 FC22                                    clear_7 23F0  
                                  clear_8 23FC                                    clear_9 2408  
                       parseCommand@F9026 FC2A                         parseCommand@F9028 FC26  
                        ___awdiv@quotient 0083                        ??_Rtcm_GetRtccDate 0089  
                         ___awmod@divisor 007F                        _ExtInt0IsrCallback 02E4  
                       ?_OsTmr_StartTimer 0081                                _PostMethod 01E9  
                         ___awmod@counter 0081                       UartWriteByte@Module 007E  
                     GetSmsSm@GetSmsState 01EF                        ?_USBEnableEndpoint 0085  
                          ??_initPreamble 007F                                    _strcat 58C0  
                                  _strcpy 648E                                    _strlen 61E0  
                                  _strtol 181C                          ClearBuffer@Index 0081  
           __size_of_USBTransferOnePacket 00BE                          __end_of_isxdigit 6312  
                HttpGetMethod@UartMessage 0100                                 ??_initFsm 00B0  
                           _initGprsModem 4D90                        ??_OsTmr_StartTimer 0087  
                                  itoa@cp 0099                              __pdataCOMRAM 0040  
                               ??_isalpha 0080                                 ??_isdigit 007D  
                          ??_SetAckStatus 007D                       ModemEvtParser@F9110 03CE  
                     ModemEvtParser@F9112 03C9                       ModemEvtParser@F9114 03C4  
                     ModemEvtParser@F9116 04E0                              _CDCTxService 2824  
                     MdmCntSm@MdmCntState 002D                Mdm_SetSmsFormat@TextFormat 0098  
                        ?_LedStateMachine 008F                              __mediumconst FC0E  
                               ??_isspace 007D                    __size_of_CheckTxStatus 000A  
                            _callerNumber 033E                                    tblptrh 000FF7  
                               ??_isupper 007D                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 6B22  
                     ??_USBEnableEndpoint 0086                               _MdmStsReady 01FD  
                 __end_of_I2cSlv_MainTask 5AD0                           _InitGprsNetwork 0DC8  
                           ??_Tmr_Tmr2Isr 0023                              ??_I2cDummyTx 0021  
               OsTmr_GetTimerStatus@Timer 0095                               _Mcu_Int0Isr 6B36  
                             _Mcu_Int1Isr 6B32                      ?_Led_SetLedBlinkTime 007D  
                      __size_of_addCmdFsm 00E4                                 ??_sprintf 0083  
                               ??_tolower 007D                         parseCommand@state 0094  
                  __size_of_ScheduleTasks 0122                   delCmdFsm@receivedNumber 0110  
                             _CtrlTrfData 000438                                 ??_toupper 007D  
                     ModemEvtParser@Match 00A7                      _controlTransferState 00CC  
                   __end_ofi1_GenerateEvt 69EA                   Eeprom_Read@SlaveAddress 00AD  
                   __end_of_Rtcm_MainTask 4FD4                __size_of_Rtcc_GetRtccValue 0094  
                           ?_parseCommand 0001                        _ExtInt1IsrCallback 02E2  
                              __accesstop 0060                             ?_Wdg_MainTask 0001  
                 __end_of__initialization 2426                        Eeprom_Read@ReadSts 00AE  
                  Tmr_TmrBPrSet@Prescaler 0098                              __pbssBIGRAMl 0AC8  
                         ??_isNumberValid 007F                    __end_of_EnableReceiver 6B2E  
                      __size_of_WriteByte 000A                   __size_of_ModemEvtParser 0182  
             Uart_WriteConstString@Module 0082                 Uart_WriteStringLen@Module 0084  
                           ___rparam_used 000001                               _ReadAddress 01FB  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 5E50                          ??_isMasterNumber 00B0  
         I2cSlv_QueryI2cData@TimeoutTimer 034B                      Terminal@FormatOption 02ED  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 57A2  
                          __pcstackBANK10 0A00                        __size_of_delCmdFsm 0092  
                isMasterNumber@readBuffer 0102                     I2cDummyTx@DummyBuffer 01FC  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                     initFsm@currentState 01D6  Uart_MdmGsmGprsReadService@ServiceCounter 0005  
                         MdmCntSm@Counter 02DE                     ?_I2cSlv_ReceiveI2cMsg 0080  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 6094  
                             _InitNetwork 00DB                               ?_MyApp_Task 0001  
                LedStateMachine@LedOutSts 0098                             __end_of_sd000 FE5F  
                           __end_of_sd001 FE32                             __end_of_sd002 FE14  
                            __pidataBANK1 6B3C                              __pidataBANK2 6AA8  
                            __pidataBANK3 629A                              __pidataBANK4 6ACE  
                            __pidataBANK5 5CC4                 __end_ofparseCommand@F9030 FC26  
               __end_ofparseCommand@F9026 FC2E                 __end_ofparseCommand@F9028 FC2A  
                       ?_UartSetConfigLow 0001          __size_of_USBCtrlEPAllowDataStage 009E  
                   _Uart_WriteConstString 611C                       __size_of_CheckModem 0160  
                         ??_triggerCmdFsm 008B                __end_of_Uart_ClearRxBuffer 645C  
           __size_of_USBConfigureEndpoint 0098               parseCommand@deleteNumberCmd 008C  
                 addCmdFsm@numberInMemory 0118                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 68F8               __end_of_USBCtrlTrfInHandler 420A  
                         __CFG_DSWDTPS$G2 000000                      StringCompare@String1 007D  
                    StringCompare@String2 007F                        ??_UartSetConfigLow 007D  
               __size_of_isNumberInMemory 00B0                       __end_of_Term_MainSm 135A  
               initGprsModem@currentState 01D8                     LedStateMachine@LedOut 0091  
                   LedStateMachine@LedSts 008F                        LedStateMachine@Led 0099  
                               ?i1___wmul 0019                            ?_initGprsModem 0001  
                     __end_of_RtccIrqInit 69D4                        __size_of_detectCmd 009C  
                   __size_of_Led_MainTask 00CC                           ??_StringCompare 0083  
           I2cSlv_QueryI2cData@I2cOpState 01E3                               ?_ReceiveEvt 007D  
                             _NewSmsEvent 003E                                _SystemInit 64C0  
                              _cdc_notice 044F                     __end_of_Tmr_TmrBPrSet 3244  
                   __end_of_waitSetupCall 5E02                       __end_of_Rtcc_RtcIsr 6B32  
                              _cdc_rx_len 00C9                         __end_of_MsgFormat FD22  
                              _cdc_tx_len 00C7                       Terminal@UsbRxBuffer 0A00  
                             ?_OsTmr_Wait 009B                     ??_Led_SetLedBlinkTime 0081  
                     Terminal@UsbTxBuffer 0200                                 ?_GetSmsSm 0001  
             __end_ofi1_I2cSlv_SendI2cMsg 6386                  ??_USBCtrlTrfSetupHandler 0097  
                 _USBTicksSinceSuspendEnd 01DE                            ClearBuffer@Len 007F  
                         _secondsAppTimer 4828          __end_of_GetLastInteractionNumber 6ACE  
                               ?_MdmCntSm 0001                     _Irq_InitIntController 6608  
                  _USBStdGetStatusHandler 42C8                         __end_of_SendSmsSm 1BAA  
                   __size_of_Eeprom_Reset 0048       Mcu_StartSystemPll@PllStartupCounter 007D  
                          _GprsNetworkSts 01EB                            _Rtcc_RtcConfig 48CA  
                   __size_of_Eeprom_Write 0052                                __pbssBANK0 00B0  
                              __pbssBANK1 01C9                            ??_parseCommand 0088  
                              __pbssBANK2 02C8                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                           _HttpGetMethod 05EC                   ?_Pm_DsReleasePinControl 0001  
                             _MessageText 0572                            ??_Wdg_MainTask 007E  
                   __end_ofi2_GenerateEvt 6A00               isNumberInMemory@phoneNumber 0100  
                __end_of_Uart_WriteString 629A                   addCmdFsm@masterOpResult 0117  
            getSetupCall@isCalledReceived 0083                                 ?_ReadByte 0001  
                       MyApp_Task@Options 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                     __size_of_I2c_ReadData 015E  
                   __size_of_I2cSendMsgSm 00C4                       __end_of_Tmr_Tmr2Isr 673A  
                             _SetBaudRate 5E50                             ?_savePreamble 0001  
                   __end_of_findEmptySpot 5176                 initGprsModem@modemCounter 03C0  
             __size_of_USBWakeFromSuspend 003A                SendSmsSm@SendSms_NextState 01ED  
                             _pBDTEntryIn 00B6          UartTxBufferStatus@TxBufferStatus 007F  
        __end_of_USBCtrlEPServiceComplete 3156                                 ?_TmrBInit 007D  
                           _CheckTxStatus 6AF6                             ??_TurnOnModem 0080  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                Uart_WriteStringLen@Index 0083                         ?_GetOsTickCounter 007D  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 007D  
               findEmptySpot@currentState 00C4                                 ?_Terminal 0001  
                    Eeprom_Write@WriteSts 0092                                   ?___lmul 007D  
                            _Led_MainTask 3BCA                            _Rtcc_UnlockRtc 6A4A  
                            _I2cBusStatus 01E5                                   ?___wmul 007D  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 2E26  
               Uart_InitUartModule@Module 00A1                     __end_of_I2c_WriteData 2020  
                       __end_of_addCmdFsm 37A6                        ??_GetOsTickCounter 0081  
                                 ?_memcpy 007D                                   ?_memset 007D  
                          ___lmul@product 0085                                _device_dsc FE49  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 4C68  
                   __end_of_UpdateSchFlag 68DC                              _EepromBuffer 04BB  
                              _ep_data_in 02D1                           _I2cWriteDataEvt 00D9  
                i1GenerateEvt@EventStatus 001B                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 007D                                ??i1___wmul 001D  
                 __end_of_InitGprsNetwork 10B6                                   ?_strcpy 007D  
                                 ?_strlen 007D                                   ?_strtol 0089  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 2E26  
                       __end_of_WriteByte 6AEC                        _USBCheckStdRequest 35DE  
                       _configDescriptor1 FDAB                              _Eeprom_Reset 5F7E  
                     Wdg_MainTask@Options 0001                               _PhoneNumber 04A7  
                            _Eeprom_Write 5C20                     __size_of_getSetupCall 0020  
             __end_of_USBCtrlTrfTxService 387E                         triggerRelay@F9012 03D2  
                     _USBStdSetCfgHandler 3412                         __end_of_delCmdFsm 4EB6  
                 __size_of_ConfigureModem 00D4                    I2cSlv_QueryI2cData@Ret 01E2  
               Eeprom_Write@MemoryAddress 0093                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 65DC                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 496A  
                                 _SSP2ADD 000F74                                ??_GetSmsSm 008F  
                                 _SSP2BUF 000F75                              _I2c_ReadData 2180  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 4084                          ?_I2cSlv_MainTask 0001  
                      GsmGprsTerminal@SMS 01DA            __end_of_Pm_DsReleasePinControl 6B18  
                     ?_USBCheckStdRequest 0001                     Mdm_SetSmsFormat@Index 0083  
            __size_of_USBStdGetDscHandler 012E                                ??_MdmCntSm 0081  
                     __size_of_MyApp_Task 00E6                                   _UIEbits 000F36  
                          ?_HttpGetMethod 009B                              ?_ClearBuffer 007D  
                    _MdmOnOffPulseRequest 00E2                                   _UIRbits 000F62  
                   CheckModem@CheckMdmSts 01F3                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 01FA                       _I2cSlv_QueryI2cData 3A2A  
                                 _Led2Sts 01F8                                   _Led3Sts 01F6  
              __end_of_Sch_SchmIntService 6AA8                     __size_of_Mdm_MainTask 0050  
           ModemEvtParser@CallReadyString 008F                             _cdc_trf_state 00C8  
                              ??_ReadByte 007D                            ??_savePreamble 0096  
                     _Uart_InitUartModule 0ABC                     __end_of_Mdm_DrvMainFn 6B1E  
                    __end_of_initPreamble 68C0                    initEeprom@currentState 01D7  
                       __end_of_detectCmd 4AA4                          _ComChecCompleted 002A  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 02C8                     __end_of_Mdm_IsRinging 6716  
                   InitGprsNetwork@ApnLen 009D                                   _pCDCSrc 02CB  
                   __size_of_getsUSBUSART 0096                               ?_StringCopy 0085  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 007F                    ??_I2cSlv_ReceiveI2cMsg 0084  
         ??_USBIncrement1msInternalTimers 007D                            _I2cReadDataEvt 00D8  
                               ?_isxdigit 0001                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 54C4                    __end_of_Rtcc_UnlockRtc 6A5A  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0085  
                    __end_of_SetAckStatus 6A14                                _initEeprom 5060  
                             _Term_MainSm 10B6   Uart_WriteConstString@ConstStringToWrite 0080  
                                 _Welcome FD22                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 00A2  
                       _Sch_MainScheduler 6884                    ?_Uart_WriteConstString 0080  
                     __size_of_OsTmr_Wait 0082                      ??_USBCheckStdRequest 0097  
                             _RtccIrqInit 69BE             __size_of_USBCtrlTrfOutHandler 0066  
                                 ___awdiv 5176                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 5302                                   ___lldiv 51FC  
                        ??_USBDeviceTasks 0098                           __size_of___wmul 0028  
                 triggerCmdFsm@isComplete 008B                                   ___lwdiv 5BCC  
                       ??_USBStallHandler 007D                                   ___lwmod 60D8  
                       ?_Rtcm_SetRtccDate 0089              __size_of_Uart_WriteStringLen 0040  
                      ?_Sch_MainScheduler 0001                              _getSetupCall 6826  
                    ?_I2cSlv_QueryI2cData 00A2                           ??_initGprsModem 0099  
                             _Rtcc_RtcIsr 6B2E                      __size_of_putUSBUSART 0022  
                                 __pcinit 22DE                        getsUSBUSART@buffer 0084  
                         __size_of_memcpy 0048                                 _I2cComSts 00CF  
                     __end_of_TurnOnModem 5F36                           __size_of_memset 0030  
                 initEeprom@isInitialized 0102                                 _I2cConfig 0356  
                          ??_Rtcc_LockRtc 007D                 __end_of_configDescriptor1 FDEE  
                                 __ramtop 0F00                Mdm_GetSmsData@GetSmsStatus 0091  
                             Terminal@Len 03B4                        ??_Rtcm_SetRtccDate 0091  
                   Tmr_TmrBIrqSet@TmrNumb 007F                      ?_Uart_InitUartModule 009D  
                                 __ptext0 6AB6                                   __ptext1 64C0  
                                 __ptext2 6AD8                                   __ptext3 6B12  
                                 __ptext4 6866                                   __ptext5 68F8  
                                 __ptext6 6608                                   __ptext7 6580  
                                 __ptext8 3E2C                                   __ptext9 3156  
                                 _inPipes 00B0                     __size_of_Mcu_ClearWdg 0004  
               GsmGprsTerminal@UartBuffer 0900               _USBDeferOUTDataStagePackets 0025  
                         __size_of_strcat 005C                   __end_of_secondsAppTimer 48CA  
                         __size_of_strcpy 0032                           __size_of_strlen 003E  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                        InitGprsNetwork@Apn 009B  
                                 _initFsm 4630                              ??_USBSuspend 0091  
                               _T2CONbits 000FCA                                   _isalpha 6520  
                                 _isdigit 67C2            isNumberInMemory@memoryOpResult 0111  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00B0  
                             ?_SystemInit 0001                                   clear_10 2414  
                                 clear_11 2420                          ___awmod@dividend 007D  
                       ??_InitializeTasks 04EA                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 02EA       __end_of_Tmr_RegisterTmr2IsrCallback 6AE2  
             _Tmr_RegisterTmr2IsrCallback 6AD8                                   _isspace 6632  
                            _Mdm_MainTask 5D14                                   _isupper 677E  
             __size_of_InitModemInterface 0008                      HttpGetMethod@GetData 009B  
                  ?_Irq_InitIntController 007D                                   _smsText 0493  
                  Term_MainSm@FwkBuildStr 013A                           ?_Rtcc_RtcConfig 007E  
                  _OsAlrm_ProcessOsAlarms 2434                              ??_CheckModem 009B  
                      __end_of_USB_CD_Ptr FC30                       Mcu_SetWdgSts@WdgSts 007D  
                             _Tmr_Tmr2Isr 6716                                   _sprintf 3AFC  
                                 _tolower 6960           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 6A8A                          _HttpGetDataLocal 03A7  
                __end_of_Mdm_SetSmsFormat 5DB4                    Term_MainSm@FwkMajorStr 0132  
                          __pintcode_body 44DA                                   _toupper 6978  
         secondsAppTimer@destinationTicks 0091                         ClearBuffer@Buffer 007D  
                    end_of_initialization 2426                              _getsUSBUSART 4BD2  
                            ?_Eeprom_Read 00A9                          ??_GetElapsedTime 0085  
                             _SmsTxtReady 00DC               ?_Uart_MdmGsmGprsReadService 0004  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 007D  
                  _MainSystemTimebaseFlag 02F4             i1I2cSlv_SendI2cMsg@DataLenght 001F  
                      __end_of_USB_SD_Ptr FC22       Irq_InitIntController@PerInt_LowPInt 007E  
               triggerCmdFsm@currentState 01D3                                   memcpy@d 0084  
                                 memcpy@n 0081                                   memcpy@s 0086  
                     _pBDTEntryEP0OutNext 00BE                                   itoa@buf 0093  
                                 memset@c 007F                                   itoa@val 0095  
                                 memset@n 0081                    Term_MainSm@FwkMinorStr 0136  
                                 memset@p 0083                             __Lmediumconst FC0E  
                          _ModemEvtParser 1D30                                   int_func 44DA  
                         _USB1msTickCount 0310           _dummy_encapsulated_cmd_response 037B  
                               i1u1613_20 244A                  _GetLastInteractionNumber 6AC2  
                               i1u1617_28 256A                                 i1u1617_29 257E  
                               i1u1638_28 6726                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 001A                __end_of_saveNumberInMemory 6960  
                       ?_Rtcc_AlarmConfig 007D                     ??_USBStdSetCfgHandler 0091  
                         ___lldiv@divisor 008D                 __end_of_Sch_MainScheduler 68A2  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0080  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0095  
                       _Rtcc_SetRtccValue 15EE                         _Rtcc_SetRtcStatus 69A8  
                     _ActivateRiDetection 003F                           ?_Rtcc_UnlockRtc 0001  
                      ??_Rtcc_AlarmConfig 007F                        __end_of_USBSuspend 648E  
                           StringCopy@Len 0089                         ?_MdmHttp_MainTask 0001  
                I2cSlv_QueryI2cData@RxLen 00A7                   _USBCtrlEPAllowDataStage 496A  
                      _UsbDevice_MainTask 66AA                  I2cSlv_QueryI2cData@TxLen 00A4  
                            _Mcu_ClearWdg 6B1E                 Eeprom_Reset@memoryAddress 00C6  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0085                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                     ??_I2cSlv_QueryI2cData 00A9  
                                 utoa@buf 008A                        ??_MdmHttp_MainTask 00A1  
                _USBCtrlEPServiceComplete 3058                                   utoa@val 008C  
                 HttpGetMethod@GetMOutSts 01E6                     i1___wmul@multiplicand 001B  
                      __end_of_CheckModem 2180                           _RtccIsrCallback 02E6  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0021                        Terminal@EchoOption 02F3  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 007D  
                        _isNumberInMemory 442A                      __end_of_parseCommand 3058  
              _USBStatusStageEnabledFlag1 0028                _USBStatusStageEnabledFlag2 0027  
                   ??_Uart_InitUartModule 009F                      __end_of_Wdg_MainTask 675C  
                                 strtol@a 0094                                   strtol@c 0098  
                          _Rtcm_RtccAlarm 0300                                   strtol@s 0089  
                      USBEnableEndpoint@p 0086                       ?_UsbDevice_MainTask 0001  
                                 xtoi@val 0088                                 _PORTDbits 000F83  
                               _PORTEbits 000F84                       ??_Rtcc_SetRtccValue 0086  
                     ??_Rtcc_SetRtcStatus 007D                          __CFG_DSBOREN$OFF 000000  
                        ?_InitGprsNetwork 009B                         _Mdm_HangPhoneCall 6A26  
                          ??_Tmr_StartTmr 007D              __end_of_I2cSlv_I2cReadMsgSts 6806  
                i1I2cSlv_SendI2cMsg@TxSts 0020                         StringCopy@DestStr 0087  
                        __CFG_CPUDIV$OSC1 000000                        ?_Mdm_HangPhoneCall 0001  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 02E8  
                        _HttpGetMethodSts 01EA                                 _TRISBbits 000F93  
                    SendSmsSm@UartMessage 0100                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0062                  isNumberValid@phoneNumber 007D  
                      _BothEP0OutUOWNsSet 01DF                           ??_HttpGetMethod 009D  
                 __size_of_Mdm_GetSmsData 0068                              strtol@endptr 008B  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
               I2c_WriteData@I2cNextState 0036                 USBConfigureEndpoint@EPNum 0082  
              ?_USBCtrlEPAllowStatusStage 0001                    __end_of_ModemEvtParser 1EB2  
                        ??_InitSchedTimer 00A4       USER_USB_CALLBACK_EVENT_HANDLER@size 008D  
                               _USTATcopy 00D6                     __end_of_StopCondition 6B26  
                __size_of_HighPriorityIsr 457E                       ??_Mdm_HangPhoneCall 0083  
               Tmr_TmrBPrSet@TmrBPrCfgSts 009A                 __size_of_OsTmr_StartTimer 005E  
                  secondsAppTimer@counter 008A                                 _Led1Blink 0372  
                               _Led2Blink 0369                      ??_UsbDevice_MainTask 0099  
                               _Led3Blink 0360              __end_of_USBTransferOnePacket 42C8  
                         ??_CheckTxStatus 007D                                 _Led1Pulse 0396  
                  secondsAppTimer@seconds 008F                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 181C                 __end_of_Rtcc_SetRtcStatus 69BE  
                               _Led2Pulse 0390                                 _Led3Pulse 038A  
                       _I2cSlv_SendI2cMsg 621E           SetBaudRate@DesiredI2cBusClockHz 0096  
                     Eeprom_Read@QuerySts 00AF                           ??_ScheduleTasks 04EA  
                          _Tmr_TmrBConfig 3E2C                   Tmr_TmrBPrSet@Postscaler 0099  
                       putUSBUSART@length 0085                   MdmHttp_MainTask@Options 0001  
                   __end_of_Mcu_SetWdgSts 6A26                         _OsAlrm_SetOsAlarm 3FBC  
                    Terminal@TermRxBuffer 0540                        ?_I2cSlv_SendI2cMsg 0080  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 5E9E  
                             ?_initEeprom 0001                       __CFG_MSSP7B_EN$MSK7 000000  
                             _TurnOnModem 5EEA                                 _ClipEvent 00DF  
                            ??_MyApp_Task 00B0                      Terminal@TermTxBuffer 0100  
           saveNumberInMemory@phoneNumber 0096                                 _GetMethod 00DA  
                  _USBCtrlTrfSetupHandler 4FD4                        ?_OsAlrm_SetOsAlarm 0083  
                Eeprom_Reset@SlaveAddress 0085                  __size_of_GetCallerNumber 0036  
                   __end_of_USBDeviceInit 26DC     __end_of_USBIncrement1msInternalTimers 677E  
  __size_of_USBIncrement1msInternalTimers 0022             _USBIncrement1msInternalTimers 675C  
             __size_of_Mdm_RequestSmsData 0010                            __end_of___lmul 59CC  
                          _CheckAckStatus 6B00                            __end_of___wmul 6684  
                     ??_I2cSlv_SendI2cMsg 0084                 __end_of_Mdm_HangPhoneCall 6A38  
                           __pidataCOMRAM 6B3A               triggerCmdFsm@numberInMemory 008C  
                  __size_of_UartWriteByte 0020                   addCmdFsm@receivedNumber 0112  
                          __end_of_memcpy 5F7E                        Terminal@PackageLen 02EF  
       Uart_MdmGsmGprsReadService@RxState 002C                            __end_of_memset 6520  
                      _UartTxBufferStatus 5E02                       ??_OsAlrm_SetOsAlarm 008B  
                    __end_of_savePreamble 6946                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 007F                         _USBBusIsSuspended 01E0  
                               _Mdm_SmsRx 0700                          ?_secondsAppTimer 008A  
                       ??_SetUartBaudRate 0098                   __end_of_Uart_Uart1RxIsr 6A9A  
                               _MdmStatus 00D2                            __end_of_strcat 591C  
                          __end_of_strcpy 64C0                            __end_of_strlen 621E  
                          __end_of_strtol 19F2                       start_initialization 22DE  
         isNumberInMemory@currentPosition 0041                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                            _ConfigureModem 3956  
                            ??_OsTmr_Wait 00A1                    Uart_WriteString@Module 0082  
           USBCtrlTrfRxService@byteToRead 007E                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0089                           _MdmResetRequest 003B  
                     ?_UartTxBufferStatus 0001                        _Uart_ClearRxBuffer 6428  
               __size_of_UartSetConfigLow 0058                          ??_EnableReceiver 007D  
                             _cdc_data_rx 0500                               _cdc_data_tx 07B6  
            __end_of_USBConfigureEndpoint 4B3C                     __size_of_initPreamble 001E  
         __end_of_USBStdFeatureReqHandler 15EE                                 _MsgFormat FC32  
                      __end_of_MyApp_Task 3412                          _UpdateOsCounters 6A7A  
                         ?_ModemEvtParser 0001                             ?_triggerRelay 0001  
              I2c_InitI2cModule@I2cConfig 00A2                         __size_of_GetSmsSm 0132  
       __end_of_USBCtrlEPAllowStatusStage 3D62                 __end_of_I2cSlv_SendI2cMsg 625C  
                  Uart_WriteStringLen@Len 0082                  __size_of_LedStateMachine 00A8  
                __end_of_USBCtrlEPService 4CFC                         __size_of_MdmCntSm 00A8  
                       ?_Uart_WriteString 0080                     __size_of_SetAckStatus 0014  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 6A6A  
                     ?_Uart_ClearRxBuffer 0001                              ?_SetBaudRate 0096  
                  __end_of_Tmr_TmrBConfig 3EF4                                 _SendSmsSm 19F2  
               __end_of_OsAlrm_SetOsAlarm 4084                    __end_of_Tmr_TmrBIrqSet 5EEA  
                               _TaskTable 05A4                                 _RingEvent 00E0  
               ??_USBCtrlEPAllowDataStage 007E                        ??_Uart_WriteString 0082  
                             _SystemState 00D5                     __end_of_isNumberValid 57A2  
            isMasterNumber@memoryOpResult 010F                         __size_of_ReadByte 000A  
                               _RtcConfig 03BC                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 009D                               ??_CDCInitEP 0089  
                          USBDeviceInit@i 0085                             _UartSetConfig 591C  
                  Led_SetLedBlinkTime@Led 0081                        __end_of_ReceiveEvt 65DC  
                  _pBDTEntryEP0OutCurrent 00C0                             _Term_MainTask 6912  
                 USBTransferOnePacket@dir 007D                      ??_UartTxBufferStatus 007D  
                 USBTransferOnePacket@len 0080                     Tmr_TmrBConfig@TmrNumb 00A3  
                 __size_of_LowPriorityIsr 00B4                    __end_of_CheckAckStatus 6B0A  
                                ??___lmul 0085                             _isxdigit$6694 0081  
                               Terminal@i 00A4                                  ??___wmul 0081  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 007D  
                     _USBStdGetDscHandler 2BD4                I2cSlv_SendI2cMsg@SlaveAddr 0082  
                      __end_of_OsTmr_Wait 5302                        HttpGetMethod@Index 01C8  
                             __pdataBANK1 01FE                               __pdataBANK2 02F3  
                             __pdataBANK3 03C4                isNumberInMemory@readBuffer 0104  
                             __pdataBANK4 04E0                               __pdataBANK5 05A4  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 051C  
                                ??_memcpy 0083                                  ??_memset 0083  
                   detectCmd@currentState 0095                     __end_of_triggerCmdFsm 5608  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 007D  
                    ??_Uart_ClearRxBuffer 007D       __size_of_Uart_MdmGsmGprsReadService 00CA  
                                ??_strcat 0081                                  ??_strcpy 0081  
                                ??_strlen 007F                    __size_of_Rtcm_MainTask 008E  
                               _addCmdFsm 36C2                                  ??_strtol 008F  
             __end_of_Led_SetLedBlinkTime 5BCC                    __end_of_ConfigureModem 3A2A  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 00D7  
          __end_of_USBStdGetStatusHandler 437A                              _initPreamble 68A2  
                           WriteByte@Byte 007D                        __end_of_TaskNumber FC32  
                             __pbssCOMRAM 0023                   GetElapsedTime@TimeValue 008D  
                   __end_of_StringCompare 5CC4                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060                             __pcstackBANK1 0100  
                           __pcstackBANK2 0200              __size_of_USBCtrlTrfInHandler 00C2  
                           __pcstackBANK4 04EA                           RiSm@MdmDrvState 002E  
                            _SetAckStatus 6A00                              _isalpha$6684 0081  
                  GenerateEvt@EventStatus 007F                                 _WriteByte 6AE2  
                     __size_of_initEeprom 008C                      ?_USBStdGetDscHandler 0001  
                            _isdigit$6418 007E             UpdateSchFlag@InterruptCounter 02DC  
                          ??_triggerRelay 0085                 SetUartBaudRate@UartConfig 0096  
                     _Uart_WriteStringLen 61A0                                 _delCmdFsm 4E24  
     InitGprsNetwork@GprsNetInitNextState 00D1                   GetElapsedTime@StartTime 0081  
                           _UartWriteByte 6846                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 634C              __end_of_LedBlinkStateMachine 2824  
                             sprintf@flag 0083                      __size_of_Eeprom_Read 0054  
                         _USBStallHandler 600C                                ?_SendSmsSm 0001  
                            _pBDTEntryOut 0306                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 00A0  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 68F8  
              __end_of_USBCheckCDCRequest 442A              __size_ofi1_I2cSlv_SendI2cMsg 003A  
                     _OsAlrm_ClearOsAlarm 5A24                           ?_Tmr_TmrBIrqSet 007D  
                 ??_Uart_WriteConstString 0082                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 6826                              ??_StringCopy 008B  
                        _Led_SetLedStatus 6550                         ??_HighPriorityIsr 0007  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0083  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 67E4  
                        GenerateEvt@Event 007D                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_parseCommand 0110                    __size_of_waitSetupCall 004E  
                               _detectCmd 4A08                     __size_of_Wdg_MainTask 0022  
                               __pintcode 0008               findEmptySpot@memoryOpResult 010F  
           Uart_WriteString@StringToWrite 0080                             __pmediumconst FC0E  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 007E                         __size_of_isxdigit 003C  
                                ?___awdiv 007D                                 __ptext100 5060  
                               __ptext101 4A08                                 __ptext110 4E24  
                               __ptext102 2F48                                 __ptext111 36C2  
                               __ptext103 6A6A                                 __ptext120 5280  
                               __ptext112 6946                                 __ptext104 66CE  
                               __ptext121 6160                                 __ptext113 5C20  
                               __ptext105 66F2                                 __ptext130 1D30  
                               __ptext122 67E4                                 __ptext114 442A  
                               __ptext106 6A26                             Terminal@Index 00A6  
                               __ptext131 6428                                 __ptext123 5B78  
                               __ptext115 5456                                 __ptext107 5608  
                               __ptext140 46D8                                 __ptext132 5C72  
                               __ptext124 5F7E                                 __ptext116 50EC  
                               __ptext108 6AC2                                 __ptext141 6B0A  
                               __ptext133 2AA2                                 __ptext125 621E  
                               __ptext117 573C                                 __ptext109 63BC  
                               __ptext150 4EB6                                 __ptext142 0DC8  
                               __ptext134 3956                                 __ptext126 591C  
                               __ptext118 5B24                                 __ptext151 3EF4  
                               __ptext143 05EC                                 __ptext135 0ABC  
                               __ptext127 5EEA                                 __ptext119 3A2A  
                               __ptext160 665C                                 __ptext152 6A38  
                               __ptext144 625C                                 __ptext136 296A  
                               __ptext128 19F2                                 __ptext161 5374  
                               __ptext153 63F2                                 __ptext145 611C  
                               __ptext137 5974                                 __ptext129 61A0  
                               __ptext170 6B22                                 __ptext162 5E50  
                               __ptext154 4780                                 __ptext146 6846  
                               __ptext138 59CC                                 __ptext171 6B26  
                               __ptext163 51FC                                 __ptext155 3244  
                               __ptext147 5E02                                 __ptext139 2020  
                               __ptext180 6A9A                                 __ptext172 6A00  
                               __ptext164 65DC                                 __ptext156 6550  
                               __ptext148 57A2                                 __ptext181 68C0  
                               __ptext173 6AEC                                 __ptext165 4084  
                               __ptext157 26DC                                 __ptext149 5862  
                               __ptext190 6A8A                                 __ptext182 6A7A  
                               __ptext174 6990                                 __ptext166 65AE  
                               __ptext158 5BCC                                 __ptext191 3D62  
                               __ptext183 2434                                 __ptext175 6B2A  
                               __ptext167 1EB2                                 __ptext159 3FBC  
                               __ptext192 69EA                                 __ptext184 6684  
                               __ptext176 6AF6                                 __ptext168 2180  
                               __ptext193 6B2E                                 __ptext185 5A24  
                               __ptext177 6B00                                 __ptext169 6AE2  
                               __ptext194 6B32                                 __ptext186 68DC  
                               __ptext195 6B36                                 __ptext187 634C  
                               __ptext179 6716                                  ?___awmod 007D  
                      _Sch_SchmIntService 6A9A                                 __ptext196 0000  
                               __ptext188 69D4                           _InitializeTasks 53E6  
                                ?___lldiv 0089                      ?_Uart_WriteStringLen 0080  
                                ?___lwdiv 0083                                  ?___lwmod 007D  
                 findEmptySpot@readBuffer 0102                           _CallClosedEvent 003C  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
              __size_of_Mdm_HangPhoneCall 0012                   isNumberValid@isNumberOk 0080  
                 __size_of_isMasterNumber 006E                    __size_ofi2_GenerateEvt 0016  
           I2cSlv_QueryI2cData@QueryTimer 04D5                                ?_addCmdFsm 0112  
                 Eeprom_Write@WriteBuffer 008F                          ??_Rtcc_RtcConfig 0080  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 039C  
                     Mdm_MainTask@Options 0001                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 420A                           ?_ConfigureModem 0001  
                 ??_Irq_InitIntController 007F        Uart_MdmGsmGprsReadService@UartData 0004  
                                ?_initFsm 0001                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                         ??_GetCallerNumber 0085  
                                ?_isalpha 0001                              ??_SystemInit 00AB  
                                ?_isdigit 0001                               _I2cTxPacket 03A2  
          InitializeTasks@ActiveTaskIndex 04EC                    __size_of_findEmptySpot 008A  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 0001  
                          _Mdm_GetSmsData 5608                      InitGprsNetwork@Index 0132  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 02EC  
              ??_GetLastInteractionNumber 007F                           Terminal@Payload 0766  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 56D6  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 007D  
                        _Rtcm_GetRtccDate 56D6                ConfigureModem@DelayCounter 02D6  
                      __end_of_StringCopy 5804                               _ep_data_out 02CE  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0088                              ?_Tmr_Tmr2Isr 0001  
                            _SendSmsEvent 00E1                           Terminal@SwTimer 04CA  
                initEeprom@memoryOpResult 0101                                  ?_sprintf 007D  
                                ?_tolower 0001                 __size_of_Rtcm_SetRtccDate 0054  
                          _setupCallTicks 03C2              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 007D                                  ?_toupper 0001  
                              ?_delCmdFsm 0110                         ?_Mdm_SetSmsFormat 0001  
                          ?_UartWriteByte 007D                    __size_of_I2c_WriteData 016E  
              ConfigureModem@DelayValueMs 02D8                          _OsTmr_StartTimer 5862  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 007D                __size_of_I2cSlv_SendI2cMsg 003E  
                __end_of_isNumberInMemory 44DA              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 007D                             i1_GenerateEvt 69D4  
              __end_of_Mcu_StartSystemPll 6884                              _parseCommand 2F48  
                            _PhoneNumbLen 00D3                        ??_Mdm_SetSmsFormat 0083  
                            _Wdg_MainTask 673A                             _Rtcm_MainTask 4F46  
                          ___wmul@product 0081                  ModemEvtParser@ClipString 0099  
                        SendSmsSm@SwTimer 03EA                     Terminal@ReceivedBytes 00A5  
                    ??_Sch_SchmIntService 0023                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 007E  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 008C                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
            ConfigureModem@MdmConfigState 01F1           HttpGetMethod@GetMethodNextState 00D0  
                   ?_I2cSlv_I2cReadMsgSts 0001                         _I2c_InitI2cModule 5374  
                       _IncomingCallEvent 003D                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                       ??_LedStateMachine 0097                        __end_of_SystemInit 64F0  
                                _RCONbits 000FD0                                ?_detectCmd 0001  
                           ??_putUSBUSART 0086                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 0026  
                      ?_I2c_InitI2cModule 00A2                     ??_Uart_WriteStringLen 0083  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
                   __size_of_savePreamble 001A              __end_of_OsTmr_GetTimerStatus 4F46  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                ModemEvtParser@CompareIdx 00A8                      _USBConfigureEndpoint 4AA4  
                   delCmdFsm@currentState 01D4                      _UsbMasterPhoneNumber 0440  
        __size_of_USBStdFeatureReqHandler 0294                        _saveNumberInMemory 6946  
                   SetUartBaudRate@Module 0099            __end_of_OsAlrm_ProcessOsAlarms 258A  
                   ??_OsAlrm_ClearOsAlarm 0019                         ___wmul@multiplier 007D  
                   ?_USBTransferOnePacket 007D                                  i1___wmul 6684  
                   __end_of_initGprsModem 4E24                       ??_I2c_InitI2cModule 00A4  
                          delCmdFsm@F9013 FC0F                 __size_of_Rtcc_AlarmConfig 006C  
              __end_of_InitModemInterface 6B12                    __end_of_Mdm_GetSmsData 5670  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 0089  
                  __size_of_Mdm_DrvMainFn 0006                              _RemoteWakeup 01E1  
                                _ApnLocal 031A                            _StartCondition 6B26  
                      SetAckStatus@AckSts 007D                 __size_of_MdmHttp_MainTask 0046  
                  __size_of_Mdm_IsRinging 0024                          StringCompare@Len 0081  
             HttpGetMethod@GetMethodState 01E7                             _Tmr_TmrBPrSet 3156  
                           _waitSetupCall 5DB4                       ?_saveNumberInMemory 0096  
                       _NewStringReceived 003A                              _isspace$6687 007E  
                        _UartSetConfigLow 59CC                                  _GetSmsSm 2AA2  
                 __end_of_USBStallHandler 6050                      Mdm_DrvMainFn@Options 0001  
                          _memoryPreamble 03AC                     __size_of_Rtcc_LockRtc 0010  
                                _ConnWait 03DF                                  _MdmCntSm 46D8  
                       ___lmul@multiplier 007D                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 22F2                                 copy_data1 2312  
                               copy_data2 2332                                 copy_data3 236A  
            __end_of_LedPulseStateMachine 332C                    I2cSlv_SendI2cMsg@TxSts 0084  
             ??_USBCtrlEPAllowStatusStage 007D               __end_of_USBStdSetCfgHandler 34F8  
                          ?i1_GenerateEvt 0019                  Tmr_TmrBConfig@TmrBConfig 00A0  
                                _OsAlarms 0600                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0081              LedBlinkStateMachine@LedBlink 008A  
                                _ReadByte 6AEC                             i2_GenerateEvt 69EA  
                         ??_UartSetConfig 007D                               ??_SendSmsSm 009B  
                      __end_of_device_dsc FE5B                 __end_of_I2c_InitI2cModule 53E6  
                                _MsgReady FE32                           ??_Term_MainTask 00A7  
                            _savePreamble 692C                   __end_of_InitializeTasks 5456  
              initGprsModem@isInitialized 0099                   ?_USBCtrlTrfSetupHandler 0001  
                          isNumberValid@i 0081                             _findEmptySpot 50EC  
             __end_of_I2cSlv_QueryI2cData 3AFC                                _ANCON1bits 000F49  
                                _RxBuffer 0C58                   USBStdGetStatusHandler@p 007E  
                                __Hrparam 0000                                  _TmrBInit 4B3C  
                    __size_of_SetBaudRate 004E                              ??_initEeprom 00B0  
                    ??_saveNumberInMemory 0098                              ?_TurnOnModem 0001  
                          _LowPriorityIsr 0018                                 memcpy@tmp 0083  
                    Tmr_TmrBPrSet@Divisor 009C                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0081               __end_of_Uart_InitUartModule 0DC8  
                                _SmsEvent 00DE                           _SetUartBaudRate 296A  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001E                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0080  
                   SetBaudRate@McuClockHz 009A                     ?_USBConfigureEndpoint 007D  
            OsAlrm_ClearOsAlarm@OsAlarmId 0019                             _I2c_WriteData 1EB2  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                __end_of_UpdateOsCounters 6A8A                      __end_of_triggerRelay 63BC  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 02EE  
                     OsTmr_Wait@WaitTimer 009B                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 009B                    __end_ofdelCmdFsm@F9013 FC1C  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 007E  
                       Terminal@TermState 02F0                               ??_addCmdFsm 00B0  
                           _UpdateSchFlag 68C0                       __end_of_putUSBUSART 67C2  
                             _line_coding 0383                              _Rtcc_LockRtc 6A5A  
            I2cSlv_QueryI2cData@SlaveAddr 00A8                      _LedBlinkStateMachine 26DC  
             triggerCmdFsm@receivedNumber 0089                    __end_of_StartCondition 6B2A  
                          ??_CDCTxService 0084                  ??_Pm_DsReleasePinControl 007D  
                  SendSmsSm@SendSms_State 01EE                 Rtcm_GetRtccDate@LocalDate 008A  
                parseCommand@addNumberCmd 0088                           ?_Mdm_GetSmsData 008F  
                I2c_WriteData@WriteStatus 0034                              _isupper$6690 007E  
                              strcat@from 007F                   I2c_ReadData@DataCounter 0032  
                          ?_Tmr_TmrBPrSet 0096                          __size_of_initFsm 00A8  
                          ?_waitSetupCall 0001                          ??_ModemEvtParser 008F  
                        _GetOsTickCounter 6A38                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0186  
                         ___lwdiv@divisor 0085                              Terminal@Addr 03B0  
                ModemEvtParser@RingString 00A3                               ??_WriteByte 007D  
                        __size_of_isspace 002A                           ___lwdiv@counter 0087  
                                __ptext10 5E9E                                  __ptext11 6806  
                                __ptext20 66AA                                  __ptext12 4B3C  
                                __ptext21 5FC6                                  __ptext13 6884  
                         ??_UartWriteByte 007E                                  __ptext30 645C  
                                __ptext22 5D14                                  __ptext14 2E26  
                                __ptext31 600C                                  __ptext23 5A7C  
                                __ptext15 53E6                                  __ptext40 3412  
                                __ptext32 675C                                  __ptext24 6B18  
                                __ptext16 332C                                  __ptext41 42C8  
                                __ptext33 258A                                  __ptext25 673A  
                                __ptext17 6912                                  __ptext50 2D02  
                                __ptext42 2BD4                                  __ptext34 4C68  
                                __ptext26 6A14                                  __ptext18 4F46  
                                __ptext51 3C96                                  __ptext43 135A  
                                __ptext35 5F36                                  __ptext27 6B1E  
                                __ptext19 3BCA                                  __ptext60 00D0  
                                __ptext52 4148                                  __ptext44 5804  
                                __ptext36 4FD4                                  __ptext28 1BAA  
                                __ptext61 34F8                                  __ptext53 37A6  
                                __ptext45 437A                                  __ptext37 3058  
                                __ptext29 6312                                  __ptext70 67A0  
                                __ptext62 6960                                  __ptext54 2824  
                                __ptext46 54C4                                  __ptext38 496A  
                                __ptext71 6094                                  __ptext63 62D6  
                                __ptext55 10B6                                  __ptext47 6050  
                                __ptext39 35DE                                  __ptext80 15EE  
                                __ptext72 4586                                  __ptext64 181C  
                                __ptext56 61E0                                  __ptext48 4AA4  
                                __ptext81 5302                                  __ptext73 60D8  
                                __ptext65 6978                                  __ptext57 58C0  
                                __ptext49 5670                                  __ptext90 559C  
                                __ptext82 5176                                  __ptext74 4BD2  
                                __ptext66 6632                                  __ptext58 3AFC  
                                __ptext91 6386                                  __ptext83 6A5A  
                                __ptext75 420A                                  __ptext67 6520  
                                __ptext59 64F0                                  __ptext92 4630  
                                __ptext84 56D6                                  __ptext76 387E  
                                __ptext68 677E                                  __ptext93 5DB4  
                                __ptext85 4CFC                                  __ptext77 67C2  
                                __ptext69 648E                                  __ptext94 6826  
                                __ptext86 69A8                                  __ptext78 5AD0  
                                __ptext95 692C                                  __ptext87 48CA  
                                __ptext79 6A4A                                  __ptext96 68A2  
                                __ptext88 69BE                                  __ptext97 4D90  
                                __ptext89 5530                                  __ptext98 4828  
                                __ptext99 5D64                          __size_of_isupper 0022  
                 initEeprom@addressToRead 0100                                _I2cDummyTx 68DC  
                  Tmr_TmrBIrqSet@Priority 007D                        __end_of_initEeprom 50EC  
                   __end_of_HttpGetMethod 0ABC                      delCmdFsm@emptyNumber 0114  
                __size_of_InitGprsNetwork 02EE                              _SSP2CON2bits 000F71  
                             ??_delCmdFsm 00B0                                 isxdigit@c 0082  
                        __size_of_sprintf 00CE                          __size_of_tolower 0018  
                   __size_of_Tmr_StartTmr 0020                          __size_of_toupper 0018  
                         triggerRelay@res 0085                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 007F  
                       _Mmd_RingIndicator 002F                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0019                         _Mdm_IsSmsReceived 66CE  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 007E            __end_of_USBCtrlTrfSetupHandler 5060  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                 Mdm_GetSmsData@MessageText 008F  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0081  
                          ?_findEmptySpot 0100                    __end_of_LowPriorityIsr 00CC  
                   __end_of_CheckTxStatus 6B00                        ?_Mdm_IsSmsReceived 0001  
                           _Mdm_DrvMainFn 6B18                        ??_USBCtrlEPService 0097  
                                _isxdigit 62D6                             _Mdm_IsRinging 66F2  
                     _USBCtrlTrfInHandler 4148                  I2c_ReadData@I2cReadState 0033  
              __end_of_Mdm_RequestSmsData 6A7A                               ??_detectCmd 0095  
                   __end_of_ScheduleTasks 2F48                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 01C9  
                    _USBCtrlTrfOutHandler 5670                       Led_SetLedStatus@Led 007E  
                                int$flags 0042                                strtol@base 008D  
                          ?_I2c_WriteData 007E                                  atoi@sign 0087  
                       ??_I2cSlv_MainTask 00A6                           StringCopy@Index 008D  
               _USBCtrlEPAllowStatusStage 3C96                       ??_Mdm_IsSmsReceived 0081  
                          _receivedNumber 0331                      __size_of_Term_MainSm 02A4  
            ScheduleTasks@ActiveTaskIndex 04EE                                strtol@sign 0093  
                         Term_MainSm@Data 0461                       delCmdFsm@isComplete 0121  
                    __size_of_RtccIrqInit 0016                 __size_of_Uart_WriteString 003E  
                  ??_USBTransferOnePacket 0081                            _isMasterNumber 5456  
                          ?_UpdateSchFlag 0001                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 008A                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 634C                  __end_of_Mcu_ConfigExtInt 6912  
                           ?_Eeprom_Reset 0001                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00CA                  CDCTxService@byte_to_send 0085  
                           ?_Eeprom_Write 008F             I2c_WriteData@TentativeCounter 0035  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 007D                              _Tmr_StartTmr 6806  
                __end_of_Led_SetLedStatus 6580                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 007D                                  memcpy@s1 007F  
              I2cSlv_I2cReadMsgSts@Result 0081             USBCtrlTrfTxService@byteToSend 007D  
                           ?_I2cSetConfig 0001                                  itoa@base 0097  
             i1I2cSlv_SendI2cMsg@TxBuffer 001C                             ?_I2c_ReadData 0080  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0082  
                  __size_of_Mcu_SetWdgSts 0012                                  isdigit@c 007F  
                                memset@p1 007D                     Eeprom_Read@DataLength 00AB  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 001B  
                        _Rtcm_SetRtccDate 5AD0                  USBStdFeatureReqHandler@p 0095  
                        ??_Tmr_TmrBConfig 00A2                             ??_ClearBuffer 0081  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0092  
               __end_of_Mdm_IsSmsReceived 66F2                          ??_Tmr_TmrBIrqSet 007F  
                __size_of_secondsAppTimer 00A2                                  intlevel1 0000  
                                intlevel2 0000                      parseCommand@resetCmd 0090  
                    _OsTmr_GetTimerStatus 4EB6                                 sprintf@ap 0084  
                               sprintf@cp 0087                                 sprintf@sp 007D  
                       TmrBInit@Prescaler 007D                      __size_of_Tmr_Tmr2Isr 0024  
                  __size_of_USBDeviceInit 0152   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5862  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 008F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0089           _USER_USB_CALLBACK_EVENT_HANDLER 5804  
                 Rtcc_SetRtcStatus@Status 007D                          ___lwmod@dividend 007D  
                 __end_of_SetUartBaudRate 2AA2                                  isspace@c 007F  
                        ___lldiv@dividend 0089                  GsmGprsTerminal@UsbBuffer 0800  
                    ?i1_I2cSlv_SendI2cMsg 001C                __size_of_I2c_InitI2cModule 0072  
                          ?_Mdm_DrvMainFn 0001                          ??_CheckAckStatus 007D  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 007F                            ?_Mdm_IsRinging 0001  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0084  
                  MyApp_Task@currentState 01D9            __size_of_Uart_WriteConstString 0044  
                 ModemEvtParser@SmsString 009E                            ??_Led_MainTask 009A  
           __end_of_Uart_WriteConstString 6160                             OsTmr_Wait@Ret 00A1  
                       OsTmr_Wait@DelayMs 009D                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 007E                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                           _GetCallerNumber 63BC  
                __end_of_Rtcm_GetRtccDate 573C                               _putUSBUSART 67A0  
               Eeprom_Write@CommandLength 0095                       _USBCtrlTrfRxService 2D02  
                  __end_of_isMasterNumber 54C4                          ??_ConfigureModem 00A2  
                  Rtcc_SetRtccValue@Value 0085                        _USBWakeFromSuspend 6312  
                           ?_getSetupCall 0001                   _USBStdFeatureReqHandler 135A  
                __end_of_OsTmr_StartTimer 58C0                      _LedPulseStateMachine 3244  
                      _USBCheckCDCRequest 437A                       _USBCtrlTrfTxService 37A6  
                     RtccIrqInit@Priority 007D                                  utoa@base 008E  
                          ??_Eeprom_Reset 0085                                _RTCCFGbits 000F3F  
             __size_of_Uart_ClearRxBuffer 0034                             _isMemoryEmpty 01FE  
                          ??_Eeprom_Write 0092                          _Rtcc_AlarmConfig 5530  
                         ??_Tmr_TmrBPrSet 009A                           ??_waitSetupCall 0093  
                                sprintf@c 0086                                  sprintf@f 007F  
                                tolower@c 007D                                  strcat@cp 0081  
                                strcat@to 007D                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0091  
              InitGprsNetwork@GprsInitSts 01FF                           ___lwmod@divisor 007F  
             GsmGprsTerminal@FirstRecFlag 01DB                     ??_USBCtrlTrfInHandler 007E  
                                strcpy@cp 0081                                  strlen@cp 0081  
                                strcpy@to 007D                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 02F1                           ___lwmod@counter 0081  
                           ?_Mdm_MainTask 0001                            ??_I2cSetConfig 007D  
          __size_of_Irq_InitIntController 002A                                  toupper@c 007D  
         SetUartBaudRate@BaudRateRegister 009A                       ?_USBCheckCDCRequest 0001  
                        _MdmHttp_MainTask 5FC6                    __size_of_isNumberValid 0066  
                          ??_I2c_ReadData 0082                            ??_I2cSendMsgSm 0084  
           __end_of_Irq_InitIntController 6632                     ReceiveEvt@EventStatus 0080  
            ?_Tmr_RegisterTmr2IsrCallback 007D                   delCmdFsm@numberInMemory 0122  
                     USBEnableEndpoint@ep 0088                           _endpoint_number 00CB  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                                xtoi@sign 0087                    _NewMdmEvtParserRequest 0039  
     Uart_MdmGsmGprsReadService@RxCounter 0023                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003              __size_of_Led_SetLedBlinkTime 0054  
                           ?_getsUSBUSART 0084                             ??_Eeprom_Read 00AC  
                UartTxBufferStatus@Module 007E                     ?_OsTmr_GetTimerStatus 0095  
           SetUartBaudRate@DivisionFactor 009C            I2cSlv_ReceiveI2cMsg@DataLenght 0083  
                           ??_GenerateEvt 007F                           _LedStateMachine 4780  
        Uart_MdmGsmGprsReadService@Module 0001                           TmrBInit@TmrNumb 0080  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
            ??_Uart_MdmGsmGprsReadService 0005                           ??_findEmptySpot 00B0  
                           _StopCondition 6B22                     ??i1_I2cSlv_SendI2cMsg 0020  
                       ?_isNumberInMemory 0100                    Led_SetLedStatus@LedSts 007D  
            _USBStatusStageTimeoutCounter 0029                          Mdm_IsRinging@Ret 0081  
                  __size_of_triggerCmdFsm 006C                      ??_USBWakeFromSuspend 0091  
              USBTransferOnePacket@handle 0082                         ??_InitGprsNetwork 009E  
                     __end_of_ClearBuffer 6428                      __end_of_CDCTxService 296A  
                      ??_isNumberInMemory 00B0                      ??_USBCheckCDCRequest 007D  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FC2E  
                   __size_of_triggerRelay 0036                     Eeprom_Read@ReadBuffer 00A9  
                         ??_I2c_WriteData 0080                   ConfigureModem@NextState 01F0  
                 _UsbMasterPhoneNumberLen 0318                             ?_Mcu_ClearWdg 0001  
                           _Mcu_SetWdgSts 6A14  
